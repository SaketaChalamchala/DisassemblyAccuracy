; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\parse.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07NBCGADJA@Unknown?$AA@			; `string'
PUBLIC	??_C@_1CI@MPEKLJOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAd?$AAe?$AAp?$AAe?$AAn?$AAd?$AAe?$AAn?$AAc?$AAy?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@BLPBAOOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@EBMHPNKP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAc?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@CLFLHNGO@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAu?$AAc?$AAa?$AA_?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@FPACGCNF@?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@FKCBEKLG@?$AAi?$AAn?$AAt?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@IJIAJFBE@?$AAa?$AAl?$AAi?$AAa?$AAs?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@POILOJFG@?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@ODJLMHLJ@?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_17IDNKMCOH@?$AAi?$AAn?$AAt?$AA?$AA@	; `string'
PUBLIC	??_C@_1CE@PKHPIGGG@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAn?$AAo?$AAf?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1M@HMEDIDID@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_17PMBBFJPC@?$AAb?$AAi?$AAn?$AA?$AA@	; `string'
PUBLIC	??_C@_1O@HFLOEMBP@?$AAb?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@DGBBOFII@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_0O@LHFPPFNO@?$DMend?5of?5line?$DO?$AA@	; `string'
PUBLIC	??_C@_0O@LMMNBODD@?$DMend?5of?5file?$DO?$AA@	; `string'
PUBLIC	??_C@_03BAGHGFEH@?8?3?8?$AA@			; `string'
PUBLIC	??_C@_03IMMLKIF@?8?0?8?$AA@			; `string'
PUBLIC	??_C@_03GFLCPOAC@?8?$HN?8?$AA@			; `string'
PUBLIC	??_C@_03GBDPICLA@?8?$HL?8?$AA@			; `string'
PUBLIC	??_C@_06ICGJLFIM@string?$AA@			; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?tokenNames@@3PAPBDA				; tokenNames
_BSS	SEGMENT
?initTypeStrings@?1??initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z@4IA DD 01H DUP (?) ; `initLookahead'::`2'::initTypeStrings
_dependencyArray DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_07NBCGADJA@Unknown?$AA@
CONST	SEGMENT
??_C@_07NBCGADJA@Unknown?$AA@ DB 'Unknown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@MPEKLJOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAd?$AAe?$AAp?$AAe?$AAn?$AAd?$AAe?$AAn?$AAc?$AAy?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CI@MPEKLJOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAd?$AAe?$AAp?$AAe?$AAn?$AAd?$AAe?$AAn?$AAc?$AAy?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'(', 00H, 'd', 00H, 'e', 00H, 'p', 00H, 'e', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@BLPBAOOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@BLPBAOOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'(', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'l'
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@EBMHPNKP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAc?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@EBMHPNKP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAc?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'(', 00H, 'c', 00H, 'o', 00H, 'l', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@CLFLHNGO@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAu?$AAc?$AAa?$AA_?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@CLFLHNGO@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAu?$AAc?$AAa?$AA_?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H
	DB	'(', 00H, 'u', 00H, 'c', 00H, 'a', 00H, '_', 00H, 'r', 00H, 'u'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@FPACGCNF@?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@FPACGCNF@?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?$AA@ DB 'i', 00H
	DB	'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@ DB 'i', 00H, 'm'
	DB	00H, 'p', 00H, 'o', 00H, 'r', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@FKCBEKLG@?$AAi?$AAn?$AAt?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@FKCBEKLG@?$AAi?$AAn?$AAt?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 't', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@IJIAJFBE@?$AAa?$AAl?$AAi?$AAa?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1M@IJIAJFBE@?$AAa?$AAl?$AAi?$AAa?$AAs?$AA?$AA@ DB 'a', 00H, 'l', 00H
	DB	'i', 00H, 'a', 00H, 's', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@POILOJFG@?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1M@POILOJFG@?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@ DB 'a', 00H, 'r', 00H
	DB	'r', 00H, 'a', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@ODJLMHLJ@?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@ODJLMHLJ@?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?$AA@ DB 'i', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'g', 00H, 'e', 00H, 'r', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_17IDNKMCOH@?$AAi?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_17IDNKMCOH@?$AAi?$AAn?$AAt?$AA?$AA@ DB 'i', 00H, 'n', 00H, 't', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@PKHPIGGG@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAn?$AAo?$AAf?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@PKHPIGGG@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAn?$AAo?$AAf?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CJ?$AA?$AA@ DB 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, '(', 00H, 'n', 00H
	DB	'o', 00H, 'f', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'b', 00H, 'a'
	DB	00H, 'c', 00H, 'k', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@HMEDIDID@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HMEDIDID@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 't', 00H, 'a', 00H
	DB	'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_17PMBBFJPC@?$AAb?$AAi?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_17PMBBFJPC@?$AAb?$AAi?$AAn?$AA?$AA@ DB 'b', 00H, 'i', 00H, 'n', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@HFLOEMBP@?$AAb?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1O@HFLOEMBP@?$AAb?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?$AA@ DB 'b', 00H, 'i'
	DB	00H, 'n', 00H, 'a', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@DGBBOFII@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1O@DGBBOFII@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?tokenNames@@3PAPBDA DD FLAT:??_C@_06ICGJLFIM@string?$AA@ ; tokenNames
	DD	FLAT:??_C@_03GBDPICLA@?8?$HL?8?$AA@
	DD	FLAT:??_C@_03GFLCPOAC@?8?$HN?8?$AA@
	DD	FLAT:??_C@_03IMMLKIF@?8?0?8?$AA@
	DD	FLAT:??_C@_03BAGHGFEH@?8?3?8?$AA@
	DD	FLAT:??_C@_0O@LMMNBODD@?$DMend?5of?5file?$DO?$AA@
	DD	FLAT:??_C@_0O@LHFPPFNO@?$DMend?5of?5line?$DO?$AA@
_k_type_string DD FLAT:??_C@_1O@DGBBOFII@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
_k_type_binary DD FLAT:??_C@_1O@HFLOEMBP@?$AAb?$AAi?$AAn?$AAa?$AAr?$AAy?$AA?$AA@
_k_type_bin DD	FLAT:??_C@_17PMBBFJPC@?$AAb?$AAi?$AAn?$AA?$AA@
_k_type_table DD FLAT:??_C@_1M@HMEDIDID@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
_k_type_table_no_fallback DD FLAT:??_C@_1CE@PKHPIGGG@?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAn?$AAo?$AAf?$AAa?$AAl?$AAl?$AAb?$AAa?$AAc?$AAk?$AA?$CJ?$AA?$AA@
_k_type_int DD	FLAT:??_C@_17IDNKMCOH@?$AAi?$AAn?$AAt?$AA?$AA@
_k_type_integer DD FLAT:??_C@_1BA@ODJLMHLJ@?$AAi?$AAn?$AAt?$AAe?$AAg?$AAe?$AAr?$AA?$AA@
_k_type_array DD FLAT:??_C@_1M@POILOJFG@?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$AA@
_k_type_alias DD FLAT:??_C@_1M@IJIAJFBE@?$AAa?$AAl?$AAi?$AAa?$AAs?$AA?$AA@
_k_type_intvector DD FLAT:??_C@_1BE@FKCBEKLG@?$AAi?$AAn?$AAt?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$AA@
_k_type_import DD FLAT:??_C@_1O@OHAHDHDJ@?$AAi?$AAm?$AAp?$AAo?$AAr?$AAt?$AA?$AA@
_k_type_include DD FLAT:??_C@_1BA@FPACGCNF@?$AAi?$AAn?$AAc?$AAl?$AAu?$AAd?$AAe?$AA?$AA@
_k_type_plugin_uca_rules DD FLAT:??_C@_1CG@CLFLHNGO@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAu?$AAc?$AAa?$AA_?$AAr?$AAu?$AAl?$AAe?$AAs?$AA?$CJ?$AA?$AA@
_k_type_plugin_collation DD FLAT:??_C@_1CG@EBMHPNKP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAc?$AAo?$AAl?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$CJ?$AA?$AA@
_k_type_plugin_transliterator DD FLAT:??_C@_1DA@BLPBAOOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAt?$AAr?$AAa?$AAn?$AAs?$AAl?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$CJ?$AA?$AA@
_k_type_plugin_dependency DD FLAT:??_C@_1CI@MPEKLJOP@?$AAp?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?$CI?$AAd?$AAe?$AAp?$AAe?$AAn?$AAd?$AAe?$AAn?$AAc?$AAy?$AA?$CJ?$AA?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0O@LHFPPFNO@?$DMend?5of?5line?$DO?$AA@
CONST	SEGMENT
??_C@_0O@LHFPPFNO@?$DMend?5of?5line?$DO?$AA@ DB '<end of line>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LMMNBODD@?$DMend?5of?5file?$DO?$AA@
CONST	SEGMENT
??_C@_0O@LMMNBODD@?$DMend?5of?5file?$DO?$AA@ DB '<end of file>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BAGHGFEH@?8?3?8?$AA@
CONST	SEGMENT
??_C@_03BAGHGFEH@?8?3?8?$AA@ DB ''':''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IMMLKIF@?8?0?8?$AA@
CONST	SEGMENT
??_C@_03IMMLKIF@?8?0?8?$AA@ DB ''',''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GFLCPOAC@?8?$HN?8?$AA@
CONST	SEGMENT
??_C@_03GFLCPOAC@?8?$HN?8?$AA@ DB '''}''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GBDPICLA@?8?$HL?8?$AA@
CONST	SEGMENT
??_C@_03GBDPICLA@?8?$HL?8?$AA@ DB '''{''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string?$AA@
CONST	SEGMENT
??_C@_06ICGJLFIM@string?$AA@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\uinvchar.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	??_7GenrbImporter@?A0x82188031@@6B@		; `anonymous namespace'::GenrbImporter::`vftable'
PUBLIC	??1GenrbImporter@?A0x82188031@@UAE@XZ		; `anonymous namespace'::GenrbImporter::~GenrbImporter
PUBLIC	??_R4GenrbImporter@?A0x82188031@@6B@		; `anonymous namespace'::GenrbImporter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGenrbImporter@?A0x82188031@@@8		; `anonymous namespace'::GenrbImporter `RTTI Type Descriptor'
PUBLIC	??_R3GenrbImporter@?A0x82188031@@8		; `anonymous namespace'::GenrbImporter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GenrbImporter@?A0x82188031@@8		; `anonymous namespace'::GenrbImporter::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GenrbImporter@?A0x82188031@@8	; `anonymous namespace'::GenrbImporter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVImporter@CollationRuleParser@icu_56@@@8	; icu_56::CollationRuleParser::Importer `RTTI Type Descriptor'
PUBLIC	??_R3Importer@CollationRuleParser@icu_56@@8	; icu_56::CollationRuleParser::Importer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Importer@CollationRuleParser@icu_56@@8	; icu_56::CollationRuleParser::Importer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z ; `anonymous namespace'::GenrbImporter::getRules
EXTRN	__imp_??1Importer@CollationRuleParser@icu_56@@UAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EGenrbImporter@?A0x82188031@@UAEPAXI@Z:PROC	; `anonymous namespace'::GenrbImporter::`vector deleting destructor'
EXTRN	?getDynamicClassID@UObject@icu_56@@UBEPAXXZ:PROC ; icu_56::UObject::getDynamicClassID
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R2Importer@CollationRuleParser@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R3Importer@CollationRuleParser@icu_56@@8 DD 00H	; icu_56::CollationRuleParser::Importer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Importer@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVImporter@CollationRuleParser@icu_56@@@8
_DATA	SEGMENT
??_R0?AVImporter@CollationRuleParser@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::CollationRuleParser::Importer `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVImporter@CollationRuleParser@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8 DD FLAT:??_R0?AVImporter@CollationRuleParser@icu_56@@@8 ; icu_56::CollationRuleParser::Importer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Importer@CollationRuleParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GenrbImporter@?A0x82188031@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GenrbImporter@?A0x82188031@@8 DD FLAT:??_R0?AVGenrbImporter@?A0x82188031@@@8 ; `anonymous namespace'::GenrbImporter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GenrbImporter@?A0x82188031@@8
rdata$r	ENDS
;	COMDAT ??_R2GenrbImporter@?A0x82188031@@8
rdata$r	SEGMENT
??_R2GenrbImporter@?A0x82188031@@8 DD FLAT:??_R1A@?0A@EA@GenrbImporter@?A0x82188031@@8 ; `anonymous namespace'::GenrbImporter::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Importer@CollationRuleParser@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3GenrbImporter@?A0x82188031@@8
rdata$r	SEGMENT
??_R3GenrbImporter@?A0x82188031@@8 DD 00H		; `anonymous namespace'::GenrbImporter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2GenrbImporter@?A0x82188031@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGenrbImporter@?A0x82188031@@@8
_DATA	SEGMENT
??_R0?AVGenrbImporter@?A0x82188031@@@8 DD FLAT:??_7type_info@@6B@ ; `anonymous namespace'::GenrbImporter `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGenrbImporter@?A0x82188031@@', 00H
_DATA	ENDS
;	COMDAT ??_R4GenrbImporter@?A0x82188031@@6B@
rdata$r	SEGMENT
??_R4GenrbImporter@?A0x82188031@@6B@ DD 00H		; `anonymous namespace'::GenrbImporter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGenrbImporter@?A0x82188031@@@8
	DD	FLAT:??_R3GenrbImporter@?A0x82188031@@8
rdata$r	ENDS
;	COMDAT ??_7GenrbImporter@?A0x82188031@@6B@
CONST	SEGMENT
??_7GenrbImporter@?A0x82188031@@6B@ DD FLAT:??_R4GenrbImporter@?A0x82188031@@6B@ ; `anonymous namespace'::GenrbImporter::`vftable'
	DD	FLAT:??_EGenrbImporter@?A0x82188031@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UObject@icu_56@@UBEPAXXZ
	DD	FLAT:?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1GenrbImporter@?A0x82188031@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GenrbImporter@?A0x82188031@@UAE@XZ PROC		; `anonymous namespace'::GenrbImporter::~GenrbImporter, COMDAT
; _this$ = ecx
; Line 691
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GenrbImporter@?A0x82188031@@6B@
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Importer@CollationRuleParser@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GenrbImporter@?A0x82188031@@UAE@XZ ENDP		; `anonymous namespace'::GenrbImporter::~GenrbImporter
_TEXT	ENDS
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GGenrbImporter@?A0x82188031@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GGenrbImporter@?A0x82188031@@UAEPAXI@Z PROC		; `anonymous namespace'::GenrbImporter::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGenrbImporter@?A0x82188031@@UAEPAXI@Z ENDP		; `anonymous namespace'::GenrbImporter::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?isString@SResource@@QBECXZ			; SResource::isString
PUBLIC	??_C@_08DOCONEG@Sequence?$AA@			; `string'
PUBLIC	??_C@_0L@EMPPBAGD@collations?$AA@		; `string'
PUBLIC	_parse
PUBLIC	?getAlias@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBEPAUUCHARBUF@@XZ ; icu_56::LocalPointerBase<UCHARBUF>::getAlias
PUBLIC	??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@ ; `string'
PUBLIC	?isNull@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<UCHARBUF>::isNull
PUBLIC	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ		; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
PUBLIC	??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??0LocalUCHARBUFPointer@icu_56@@QAE@PAUUCHARBUF@@@Z ; icu_56::LocalUCHARBUFPointer::LocalUCHARBUFPointer
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	??_C@_04LCMACLFG@?4txt?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_ucbuf_open:PROC
EXTRN	_getShowWarning:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_?remove_suffix@StringPiece@icu_56@@QAEXH@Z:PROC
EXTRN	__imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_??ACharString@icu_56@@QBEDH@Z:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_08DOCONEG@Sequence?$AA@
CONST	SEGMENT
??_C@_08DOCONEG@Sequence?$AA@ DB 'Sequence', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMPPBAGD@collations?$AA@
CONST	SEGMENT
??_C@_0L@EMPPBAGD@collations?$AA@ DB 'collations', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@
CONST	SEGMENT
??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@ DB 'An error occ'
	DB	'ured processing file %s. Error: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@ DB 'couldn''t open'
	DB	' file %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04LCMACLFG@?4txt?$AA@
CONST	SEGMENT
??_C@_04LCMACLFG@?4txt?$AA@ DB '.txt', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$3
__ehfuncinfo$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T86373 = -600						; size = 8
$T86374 = -584						; size = 8
_sr$77975 = -376					; size = 4
_sequence$77972 = -364					; size = 4
_collation$77970 = -352					; size = 4
_collations$ = -340					; size = 4
_root$ = -328						; size = 4
_data$ = -316						; size = 4
_ucbuf$ = -304						; size = 4
_cp$ = -292						; size = 4
_dirlen$77951 = -280					; size = 4
_filenameLimit$77948 = -268				; size = 4
_dir$77946 = -256					; size = 8
_filenameBegin$77944 = -240				; size = 4
_openFileName$ = -228					; size = 56
_inputDirBuf$ = -164					; size = 56
_i$77933 = -100						; size = 4
_filename$ = -88					; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_localeID$ = 8						; size = 4
_collationType$ = 12					; size = 4
_rules$ = 16						; size = 4
___formal$ = 20						; size = 4
_errorCode$ = 24					; size = 4
?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z PROC ; `anonymous namespace'::GenrbImporter::getRules, COMDAT
; _this$ = ecx
; Line 697
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 592				; 00000250H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-604]
	mov	ecx, 148				; 00000094H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 698
	mov	esi, esp
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T86373[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T86373[ebp]
	push	edx
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@ABVStringPiece@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 699
	mov	DWORD PTR _i$77933[ebp], 0
	jmp	SHORT $LN18@getRules
$LN17@getRules:
	mov	eax, DWORD PTR _i$77933[ebp]
	add	eax, 1
	mov	DWORD PTR _i$77933[ebp], eax
$LN18@getRules:
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$77933[ebp], eax
	jge	SHORT $LN16@getRules
; Line 700
	mov	esi, esp
	mov	eax, DWORD PTR _i$77933[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??ACharString@icu_56@@QBEDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN15@getRules
; Line 701
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _i$77933[ebp]
	mov	BYTE PTR [eax+ecx], 95			; 0000005fH
$LN15@getRules:
; Line 703
	jmp	SHORT $LN17@getRules
$LN16@getRules:
; Line 704
	mov	esi, esp
	push	OFFSET ??_C@_04LCMACLFG@?4txt?$AA@
	lea	ecx, DWORD PTR $T86374[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T86374[ebp]
	push	ecx
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 705
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@getRules
; Line 706
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getRules
$LN14@getRules:
; Line 708
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 709
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 710
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	$LN13@getRules
; Line 711
	push	92					; 0000005cH
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _filenameBegin$77944[ebp], eax
; Line 712
	cmp	DWORD PTR _filenameBegin$77944[ebp], 0
	je	$LN12@getRules
; Line 719
	mov	esi, esp
	lea	eax, DWORD PTR _dir$77946[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?toStringPiece@CharString@icu_56@@QBE?AVStringPiece@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 720
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	esi, eax
	mov	DWORD PTR _filenameLimit$77948[ebp], esi
; Line 721
	mov	eax, DWORD PTR _filenameLimit$77948[ebp]
	sub	eax, DWORD PTR _filenameBegin$77944[ebp]
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _dir$77946[ebp]
	call	DWORD PTR __imp_?remove_suffix@StringPiece@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 722
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dir$77946[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 723
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN12@getRules:
; Line 725
	jmp	$LN11@getRules
$LN13@getRules:
; Line 726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dirlen$77951[ebp], eax
; Line 728
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??ACharString@icu_56@@QBEDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN11@getRules
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _dirlen$77951[ebp]
	movsx	eax, BYTE PTR [ecx+edx-1]
	cmp	eax, 46					; 0000002eH
	je	SHORT $LN11@getRules
; Line 740
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirlen$77951[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 741
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _dirlen$77951[ebp]
	movsx	eax, BYTE PTR [ecx+edx-1]
	cmp	eax, 92					; 0000005cH
	je	SHORT $LN11@getRules
; Line 742
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	92					; 0000005cH
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@DAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@getRules:
; Line 746
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABV12@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 747
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@getRules
; Line 748
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getRules
$LN8@getRules:
; Line 751
	mov	DWORD PTR _cp$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 753
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	call	_getShowWarning
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_ucbuf_open
	add	esp, 20					; 00000014H
	push	eax
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	??0LocalUCHARBUFPointer@icu_56@@QAE@PAUUCHARBUF@@@Z ; icu_56::LocalUCHARBUFPointer::LocalUCHARBUFPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 754
	mov	eax, DWORD PTR _errorCode$[ebp]
	cmp	DWORD PTR [eax], 4
	jne	$LN7@getRules
; Line 755
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 756
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ	; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getRules
$LN7@getRules:
; Line 758
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	?isNull@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<UCHARBUF>::isNull
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@getRules
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN6@getRules
$LN5@getRules:
; Line 759
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 760
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ	; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getRules
$LN6@getRules:
; Line 765
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	?getAlias@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBEPAUUCHARBUF@@XZ ; icu_56::LocalPointerBase<UCHARBUF>::getAlias
	push	eax
	call	_parse
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _data$[ebp], eax
; Line 766
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@getRules
; Line 767
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ	; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@getRules
$LN4@getRules:
; Line 770
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _root$[ebp], ecx
; Line 771
	push	OFFSET ??_C@_0L@EMPPBAGD@collations?$AA@
	mov	eax, DWORD PTR _root$[ebp]
	push	eax
	call	?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z ; `anonymous namespace'::resLookup
	add	esp, 8
	mov	DWORD PTR _collations$[ebp], eax
; Line 772
	cmp	DWORD PTR _collations$[ebp], 0
	je	SHORT $LN3@getRules
; Line 773
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _collations$[ebp]
	push	ecx
	call	?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z ; `anonymous namespace'::resLookup
	add	esp, 8
	mov	DWORD PTR _collation$77970[ebp], eax
; Line 774
	cmp	DWORD PTR _collation$77970[ebp], 0
	je	SHORT $LN3@getRules
; Line 775
	push	OFFSET ??_C@_08DOCONEG@Sequence?$AA@
	mov	eax, DWORD PTR _collation$77970[ebp]
	push	eax
	call	?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z ; `anonymous namespace'::resLookup
	add	esp, 8
	mov	DWORD PTR _sequence$77972[ebp], eax
; Line 776
	cmp	DWORD PTR _sequence$77972[ebp], 0
	je	SHORT $LN3@getRules
	mov	ecx, DWORD PTR _sequence$77972[ebp]
	call	?isString@SResource@@QBECXZ		; SResource::isString
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@getRules
; Line 778
	mov	eax, DWORD PTR _sequence$77972[ebp]
	mov	DWORD PTR _sr$77975[ebp], eax
; Line 779
	mov	eax, DWORD PTR _sr$77975[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getRules:
; Line 783
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	call	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ	; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@getRules:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@getRules
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 604				; 0000025cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN33@getRules:
	DD	6
	DD	$LN32@getRules
$LN32@getRules:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN25@getRules
	DD	-164					; ffffff5cH
	DD	56					; 00000038H
	DD	$LN26@getRules
	DD	-228					; ffffff1cH
	DD	56					; 00000038H
	DD	$LN27@getRules
	DD	-256					; ffffff00H
	DD	8
	DD	$LN28@getRules
	DD	-292					; fffffedcH
	DD	4
	DD	$LN29@getRules
	DD	-304					; fffffed0H
	DD	4
	DD	$LN30@getRules
$LN30@getRules:
	DB	117					; 00000075H
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN29@getRules:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
$LN28@getRules:
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN27@getRules:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN26@getRules:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN25@getRules:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _filename$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _inputDirBuf$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _openFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _ucbuf$[ebp]
	jmp	??1LocalUCHARBUFPointer@icu_56@@QAE@XZ	; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
__ehhandler$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-608]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getRules@GenrbImporter@?A0x82188031@@UAEXPBD0AAVUnicodeString@icu_56@@AAPBDAAW4UErrorCode@@@Z ENDP ; `anonymous namespace'::GenrbImporter::getRules
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@PAUUCHARBUF@@@Z ; icu_56::LocalPointerBase<UCHARBUF>::LocalPointerBase<UCHARBUF>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0LocalUCHARBUFPointer@icu_56@@QAE@PAUUCHARBUF@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0LocalUCHARBUFPointer@icu_56@@QAE@PAUUCHARBUF@@@Z PROC ; icu_56::LocalUCHARBUFPointer::LocalUCHARBUFPointer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\toolutil\ucbuf.h
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@PAUUCHARBUF@@@Z ; icu_56::LocalPointerBase<UCHARBUF>::LocalPointerBase<UCHARBUF>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0LocalUCHARBUFPointer@icu_56@@QAE@PAUUCHARBUF@@@Z ENDP ; icu_56::LocalUCHARBUFPointer::LocalUCHARBUFPointer
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UCHARBUF>::~LocalPointerBase<UCHARBUF>
EXTRN	_ucbuf_close:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1LocalUCHARBUFPointer@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LocalUCHARBUFPointer@icu_56@@QAE@XZ PROC		; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucbuf_close
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<UCHARBUF>::~LocalPointerBase<UCHARBUF>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1LocalUCHARBUFPointer@icu_56@@QAE@XZ ENDP		; icu_56::LocalUCHARBUFPointer::~LocalUCHARBUFPointer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isString@SResource@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isString@SResource@@QBECXZ PROC			; SResource::isString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isString@SResource@@QBECXZ ENDP			; SResource::isString
_TEXT	ENDS
PUBLIC	?isTable@SResource@@QBECXZ			; SResource::isTable
EXTRN	_strcmp:PROC
EXTRN	_res_none:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z
_TEXT	SEGMENT
_current$ = -20						; size = 4
_list$ = -8						; size = 4
_res$ = 8						; size = 4
_key$ = 12						; size = 4
?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z PROC ; `anonymous namespace'::resLookup, COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
; Line 661
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 662
	call	_res_none
	cmp	DWORD PTR _res$[ebp], eax
	je	SHORT $LN4@resLookup
	mov	ecx, DWORD PTR _res$[ebp]
	call	?isTable@SResource@@QBECXZ		; SResource::isTable
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN5@resLookup
$LN4@resLookup:
; Line 663
	xor	eax, eax
	jmp	SHORT $LN6@resLookup
$LN5@resLookup:
; Line 666
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR _list$[ebp], eax
; Line 667
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
$LN3@resLookup:
; Line 668
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN2@resLookup
; Line 669
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _current$[ebp]
	add	eax, DWORD PTR [ecx+16]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@resLookup
; Line 670
	mov	eax, DWORD PTR _current$[ebp]
	jmp	SHORT $LN6@resLookup
$LN1@resLookup:
; Line 672
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 673
	jmp	SHORT $LN3@resLookup
$LN2@resLookup:
; Line 674
	xor	eax, eax
$LN6@resLookup:
; Line 675
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?resLookup@?A0x82188031@@YAPAUSResource@@PAU2@PBD@Z ENDP ; `anonymous namespace'::resLookup
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isTable@SResource@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isTable@SResource@@QBECXZ PROC				; SResource::isTable, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 2
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isTable@SResource@@QBECXZ ENDP				; SResource::isTable
_TEXT	ENDS
PUBLIC	_initParser
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _initParser
_TEXT	SEGMENT
_initParser PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
; Line 1764
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1782
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_initParser ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EB@HEMGLBM@extraneous?5text?5after?5resource?5b@ ; `string'
PUBLIC	??_C@_1FC@CNANBCHM@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAo?$AAo?$AAt?$AA?9?$AA?$DO?$AAf?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ ; `string'
PUBLIC	??_C@_1DK@KPPKJLPF@?$AA?$CB?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAI?$AAs?$AAP?$AAo?$AAo?$AAl?$AAB?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GC@JGFNCEAK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1??parse@@9@4JA			; `parse'::`2'::__LINE__Var
PUBLIC	??_GSRBRoot@@QAEPAXI@Z				; SRBRoot::`scalar deleting destructor'
PUBLIC	??_C@_0EH@EIEEPILF@parse?5error?0?5did?5not?5find?5open?9b@ ; `string'
PUBLIC	??_C@_0CF@HALJCGFB@parse?5error?4?5Stopped?5parsing?5wit@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ustr_deinit:PROC
EXTRN	_isStrict:PROC
EXTRN	_warning:PROC
EXTRN	_res_close:PROC
EXTRN	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z:PROC ; TableResource::add
EXTRN	__imp___wassert:PROC
EXTRN	_error:PROC
EXTRN	?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z:PROC ; SRBRoot::setLocale
EXTRN	??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z:PROC ; SRBRoot::SRBRoot
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_ustr_init:PROC
;	COMDAT ??_C@_0EB@HEMGLBM@extraneous?5text?5after?5resource?5b@
CONST	SEGMENT
??_C@_0EB@HEMGLBM@extraneous?5text?5after?5resource?5b@ DB 'extraneous te'
	DB	'xt after resource bundle (perhaps unmatched braces)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@CNANBCHM@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAo?$AAo?$AAt?$AA?9?$AA?$DO?$AAf?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
CONST	SEGMENT
??_C@_1FC@CNANBCHM@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAo?$AAo?$AAt?$AA?9?$AA?$DO?$AAf?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@ DB 's'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'b', 00H
	DB	'u', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '-', 00H, '>'
	DB	00H, 'f', 00H, 'R', 00H, 'o', 00H, 'o', 00H, 't', 00H, '-', 00H
	DB	'>', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 'U', 00H, 'R', 00H, 'E', 00H
	DB	'S', 00H, '_', 00H, 'T', 00H, 'A', 00H, 'B', 00H, 'L', 00H, 'E'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@KPPKJLPF@?$AA?$CB?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAI?$AAs?$AAP?$AAo?$AAo?$AAl?$AAB?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@KPPKJLPF@?$AA?$CB?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAI?$AAs?$AAP?$AAo?$AAo?$AAl?$AAB?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?$AA@ DB '!'
	DB	00H, 's', 00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H
	DB	'b', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '-'
	DB	00H, '>', 00H, 'f', 00H, 'I', 00H, 's', 00H, 'P', 00H, 'o', 00H
	DB	'o', 00H, 'l', 00H, 'B', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'l'
	DB	00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JGFNCEAK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GC@JGFNCEAK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'r', 00H, 'b', 00H, '\', 00H, 'p'
	DB	00H, 'a', 00H, 'r', 00H, 's', 00H, 'e', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??parse@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??parse@@9@4JA DD 07abH			; `parse'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EH@EIEEPILF@parse?5error?0?5did?5not?5find?5open?9b@
CONST	SEGMENT
??_C@_0EH@EIEEPILF@parse?5error?0?5did?5not?5find?5open?9b@ DB 'parse err'
	DB	'or, did not find open-brace ''{'' or colon '':'', stopped wit'
	DB	'h %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HALJCGFB@parse?5error?4?5Stopped?5parsing?5wit@
CONST	SEGMENT
??_C@_0CF@HALJCGFB@parse?5error?4?5Stopped?5parsing?5wit@ DB 'parse error'
	DB	'. Stopped parsing with %s', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _parse
_TEXT	SEGMENT
tv258 = -536						; size = 4
tv213 = -536						; size = 4
tv134 = -536						; size = 4
tv84 = -536						; size = 4
tv80 = -536						; size = 4
$T86424 = -528						; size = 4
$T86425 = -516						; size = 4
$T86428 = -504						; size = 4
$T86429 = -492						; size = 4
$T86434 = -480						; size = 4
$T86435 = -468						; size = 4
_rootTable$ = -264					; size = 4
_i$ = -252						; size = 4
_state$ = -240						; size = 164
_token$ = -68						; size = 4
_bundleType$ = -56					; size = 4
_line$ = -44						; size = 4
_comment$ = -32						; size = 12
_tokenValue$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_buf$ = 8						; size = 4
_inputDir$ = 12						; size = 4
_outputDir$ = 16					; size = 4
_filename$ = 20						; size = 4
_makeBinaryCollation$ = 24				; size = 1
_omitCollationRules$ = 28				; size = 1
_status$ = 32						; size = 4
_parse	PROC						; COMDAT
; Line 1963
	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1973
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@parse
$LN16@parse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@parse:
	cmp	DWORD PTR _i$[ebp], 4
	jae	SHORT $LN15@parse
; Line 1975
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	lea	ecx, DWORD PTR _state$[ebp+eax+4]
	push	ecx
	call	_ustr_init
	add	esp, 4
; Line 1976
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	lea	ecx, DWORD PTR _state$[ebp+eax+16]
	push	ecx
	call	_ustr_init
	add	esp, 4
; Line 1977
	jmp	SHORT $LN16@parse
$LN15@parse:
; Line 1979
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z ; initLookahead
	add	esp, 12					; 0000000cH
; Line 1981
	mov	eax, DWORD PTR _inputDir$[ebp]
	mov	DWORD PTR _state$[ebp+140], eax
; Line 1982
	cmp	DWORD PTR _state$[ebp+140], 0
	je	SHORT $LN20@parse
	mov	eax, DWORD PTR _state$[ebp+140]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN21@parse
$LN20@parse:
	mov	DWORD PTR tv80[ebp], 0
$LN21@parse:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _state$[ebp+144], ecx
; Line 1983
	mov	eax, DWORD PTR _outputDir$[ebp]
	mov	DWORD PTR _state$[ebp+148], eax
; Line 1984
	cmp	DWORD PTR _state$[ebp+148], 0
	je	SHORT $LN22@parse
	mov	eax, DWORD PTR _state$[ebp+148]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN23@parse
$LN22@parse:
	mov	DWORD PTR tv84[ebp], 0
$LN23@parse:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR _state$[ebp+152], ecx
; Line 1985
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _state$[ebp+156], eax
; Line 1986
	mov	al, BYTE PTR _makeBinaryCollation$[ebp]
	mov	BYTE PTR _state$[ebp+160], al
; Line 1987
	mov	al, BYTE PTR _omitCollationRules$[ebp]
	mov	BYTE PTR _state$[ebp+161], al
; Line 1989
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 1990
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	0
	lea	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1992
	push	136					; 00000088H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T86425[ebp], eax
	cmp	DWORD PTR $T86425[ebp], 0
	je	SHORT $LN24@parse
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T86425[ebp]
	call	??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z ; SRBRoot::SRBRoot
	mov	DWORD PTR tv134[ebp], eax
	jmp	SHORT $LN25@parse
$LN24@parse:
	mov	DWORD PTR tv134[ebp], 0
$LN25@parse:
	mov	edx, DWORD PTR tv134[ebp]
	mov	DWORD PTR $T86424[ebp], edx
	mov	eax, DWORD PTR $T86424[ebp]
	mov	DWORD PTR _state$[ebp+136], eax
; Line 1994
	cmp	DWORD PTR _state$[ebp+136], 0
	je	SHORT $LN13@parse
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@parse
$LN13@parse:
; Line 1996
	xor	eax, eax
	jmp	$LN18@parse
$LN14@parse:
; Line 2000
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR _state$[ebp+136]
	call	?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z ; SRBRoot::setLocale
; Line 2003
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	push	0
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 2004
	cmp	DWORD PTR _token$[ebp], 4
	jne	SHORT $LN12@parse
; Line 2005
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2006
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?parseResourceType@@YA?AW4EResourceType@@PAUParseState@@PAW4UErrorCode@@@Z ; parseResourceType
	add	esp, 8
	mov	DWORD PTR _bundleType$[ebp], eax
; Line 2008
	mov	eax, DWORD PTR _bundleType$[ebp]
	push	eax
	call	?isTable@@YACW4EResourceType@@@Z	; isTable
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@parse
; Line 2010
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	push	0
	push	1
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 2012
	jmp	SHORT $LN10@parse
$LN11@parse:
; Line 2014
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 2015
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0CF@HALJCGFB@parse?5error?4?5Stopped?5parsing?5wit@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN10@parse:
; Line 2018
	jmp	SHORT $LN9@parse
$LN12@parse:
; Line 2021
	cmp	DWORD PTR _token$[ebp], 1
	jne	SHORT $LN8@parse
; Line 2023
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2024
	mov	DWORD PTR _bundleType$[ebp], 3
; Line 2026
	jmp	SHORT $LN9@parse
$LN8@parse:
; Line 2029
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
; Line 2030
	mov	DWORD PTR _bundleType$[ebp], 0
; Line 2031
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0EH@EIEEPILF@parse?5error?0?5did?5not?5find?5open?9b@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN9@parse:
; Line 2035
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@parse
; Line 2037
	mov	eax, DWORD PTR _state$[ebp+136]
	mov	DWORD PTR $T86429[ebp], eax
	mov	ecx, DWORD PTR $T86429[ebp]
	mov	DWORD PTR $T86428[ebp], ecx
	cmp	DWORD PTR $T86428[ebp], 0
	je	SHORT $LN26@parse
	push	1
	mov	ecx, DWORD PTR $T86428[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv213[ebp], eax
	jmp	SHORT $LN27@parse
$LN26@parse:
	mov	DWORD PTR tv213[ebp], 0
$LN27@parse:
; Line 2038
	xor	eax, eax
	jmp	$LN18@parse
$LN6@parse:
; Line 2041
	cmp	DWORD PTR _bundleType$[ebp], 4
	jne	SHORT $LN5@parse
; Line 2047
	mov	eax, DWORD PTR _state$[ebp+136]
	mov	BYTE PTR [eax+16], 1
$LN5@parse:
; Line 2050
	mov	eax, DWORD PTR _state$[ebp+136]
	movsx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	SHORT $LN28@parse
	mov	edx, DWORD PTR ?__LINE__Var@?1??parse@@9@4JA
	add	edx, 87					; 00000057H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GC@JGFNCEAK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1DK@KPPKJLPF@?$AA?$CB?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAI?$AAs?$AAP?$AAo?$AAo?$AAl?$AAB?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@parse:
; Line 2051
	mov	eax, DWORD PTR _state$[ebp+136]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+4]
	cmp	edx, 2
	je	SHORT $LN29@parse
	mov	eax, DWORD PTR ?__LINE__Var@?1??parse@@9@4JA
	add	eax, 88					; 00000058H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GC@JGFNCEAK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1FC@CNANBCHM@?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?4?$AAb?$AAu?$AAn?$AAd?$AAl?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAo?$AAo?$AAt?$AA?9?$AA?$DO?$AAf?$AAT?$AAy?$AAp?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAU?$AAR@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN29@parse:
; Line 2052
	mov	eax, DWORD PTR _state$[ebp+136]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rootTable$[ebp], ecx
; Line 2053
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _rootTable$[ebp]
	push	edx
	lea	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?realParseTable@@YAPAUSResource@@PAUParseState@@PAVTableResource@@PADIPAW4UErrorCode@@@Z ; realParseTable
	add	esp, 20					; 00000014H
; Line 2054
	cmp	DWORD PTR _dependencyArray, 0
	je	SHORT $LN4@parse
; Line 2055
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _dependencyArray
	push	ecx
	mov	ecx, DWORD PTR _rootTable$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 2056
	mov	DWORD PTR _dependencyArray, 0
$LN4@parse:
; Line 2058
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parse
; Line 2060
	mov	eax, DWORD PTR _state$[ebp+136]
	mov	DWORD PTR $T86435[ebp], eax
	mov	ecx, DWORD PTR $T86435[ebp]
	mov	DWORD PTR $T86434[ebp], ecx
	cmp	DWORD PTR $T86434[ebp], 0
	je	SHORT $LN30@parse
	push	1
	mov	ecx, DWORD PTR $T86434[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv258[ebp], eax
	jmp	SHORT $LN31@parse
$LN30@parse:
	mov	DWORD PTR tv258[ebp], 0
$LN31@parse:
; Line 2061
	mov	eax, DWORD PTR _dependencyArray
	push	eax
	call	_res_close
	add	esp, 4
; Line 2062
	xor	eax, eax
	jmp	SHORT $LN18@parse
$LN3@parse:
; Line 2065
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	push	0
	lea	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	cmp	eax, 5
	je	SHORT $LN2@parse
; Line 2067
	push	OFFSET ??_C@_0EB@HEMGLBM@extraneous?5text?5after?5resource?5b@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_warning
	add	esp, 8
; Line 2068
	call	_isStrict
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@parse
; Line 2069
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 2070
	xor	eax, eax
	jmp	SHORT $LN18@parse
$LN2@parse:
; Line 2074
	lea	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?cleanupLookahead@@YAXPAUParseState@@@Z	; cleanupLookahead
	add	esp, 4
; Line 2075
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_deinit
	add	esp, 4
; Line 2076
	mov	eax, DWORD PTR _state$[ebp+136]
$LN18@parse:
; Line 2077
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@parse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN37@parse:
	DD	4
	DD	$LN36@parse
$LN36@parse:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN32@parse
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN33@parse
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN34@parse
	DD	-240					; ffffff10H
	DD	164					; 000000a4H
	DD	$LN35@parse
$LN35@parse:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN34@parse:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN33@parse:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN32@parse:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_parse	ENDP
_TEXT	ENDS
EXTRN	_getNextToken:PROC
EXTRN	_resetLineNumber:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_state$ = 8						; size = 4
_buf$ = 12						; size = 4
_status$ = 16						; size = 4
?initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z PROC ; initLookahead, COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	cmp	DWORD PTR ?initTypeStrings@?1??initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z@4IA, 0
	jne	SHORT $LN5@initLookah
; Line 148
	mov	DWORD PTR ?initTypeStrings@?1??initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z@4IA, 1
$LN5@initLookah:
; Line 151
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 152
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 154
	call	_resetLineNumber
; Line 156
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@initLookah
$LN3@initLookah:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@initLookah:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN2@initLookah
; Line 158
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+28]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	call	_getNextToken
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 159
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@initLookah
; Line 161
	jmp	SHORT $LN6@initLookah
$LN1@initLookah:
; Line 163
	jmp	SHORT $LN3@initLookah
$LN2@initLookah:
; Line 165
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN6@initLookah:
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initLookahead@@YAXPAUParseState@@PAUUCHARBUF@@PAW4UErrorCode@@@Z ENDP ; initLookahead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?cleanupLookahead@@YAXPAUParseState@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_state$ = 8						; size = 4
?cleanupLookahead@@YAXPAUParseState@@@Z PROC		; cleanupLookahead, COMDAT
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 172
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@cleanupLoo
$LN2@cleanupLoo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@cleanupLoo:
	cmp	DWORD PTR _i$[ebp], 3
	ja	SHORT $LN4@cleanupLoo
; Line 174
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _state$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	push	edx
	call	_ustr_deinit
	add	esp, 4
; Line 175
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _state$[ebp]
	lea	edx, DWORD PTR [ecx+eax+16]
	push	edx
	call	_ustr_deinit
	add	esp, 4
; Line 176
	jmp	SHORT $LN2@cleanupLoo
$LN4@cleanupLoo:
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cleanupLookahead@@YAXPAUParseState@@@Z ENDP		; cleanupLookahead
_TEXT	ENDS
EXTRN	_ustr_setlen:PROC
EXTRN	_ustr_cpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_result$ = -8						; size = 4
_state$ = 8						; size = 4
_tokenValue$ = 12					; size = 4
_comment$ = 16						; size = 4
_linenumber$ = 20					; size = 4
_status$ = 24						; size = 4
?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z PROC ; getToken, COMDAT
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 186
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR _result$[ebp], eax
; Line 188
	cmp	DWORD PTR _tokenValue$[ebp], 0
	je	SHORT $LN3@getToken
; Line 190
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@getToken:
; Line 193
	cmp	DWORD PTR _linenumber$[ebp], 0
	je	SHORT $LN2@getToken
; Line 195
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 5
	mov	edx, DWORD PTR _linenumber$[ebp]
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+ecx+28]
	mov	DWORD PTR [edx], ecx
$LN2@getToken:
; Line 198
	cmp	DWORD PTR _comment$[ebp], 0
	je	SHORT $LN1@getToken
; Line 200
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	shl	edx, 5
	mov	eax, DWORD PTR _state$[ebp]
	lea	ecx, DWORD PTR [eax+edx+16]
	push	ecx
	mov	edx, DWORD PTR _comment$[ebp]
	push	edx
	call	_ustr_cpy
	add	esp, 12					; 0000000cH
$LN1@getToken:
; Line 203
	mov	eax, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [eax+128]
	add	eax, 3
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	DWORD PTR _i$[ebp], edx
; Line 204
	mov	eax, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [eax+128]
	add	eax, 1
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR [eax+128], edx
; Line 205
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	push	eax
	call	_ustr_setlen
	add	esp, 12					; 0000000cH
; Line 206
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	push	eax
	call	_ustr_setlen
	add	esp, 12					; 0000000cH
; Line 207
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+16]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+28]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	lea	eax, DWORD PTR [edx+ecx+4]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	call	_getNextToken
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 5
	mov	edx, DWORD PTR _state$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 211
	mov	eax, DWORD PTR _result$[ebp]
; Line 212
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ENDP ; getToken
_TEXT	ENDS
PUBLIC	??_C@_0BF@BMMFKKLI@expecting?5?$CFs?0?5got?5?$CFs?$AA@ ; `string'
;	COMDAT ??_C@_0BF@BMMFKKLI@expecting?5?$CFs?0?5got?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BF@BMMFKKLI@expecting?5?$CFs?0?5got?5?$CFs?$AA@ DB 'expecting %s, '
	DB	'got %s', 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_token$ = -20						; size = 4
_line$ = -8						; size = 4
_state$ = 8						; size = 4
_expectedToken$ = 12					; size = 4
_tokenValue$ = 16					; size = 4
_comment$ = 20						; size = 4
_linenumber$ = 24					; size = 4
_status$ = 28						; size = 4
?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z PROC ; expect, COMDAT
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _comment$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 254
	cmp	DWORD PTR _linenumber$[ebp], 0
	je	SHORT $LN4@expect
; Line 256
	mov	eax, DWORD PTR _linenumber$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@expect:
; Line 259
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@expect
; Line 261
	jmp	SHORT $LN5@expect
$LN3@expect:
; Line 264
	mov	eax, DWORD PTR _token$[ebp]
	cmp	eax, DWORD PTR _expectedToken$[ebp]
	je	SHORT $LN2@expect
; Line 266
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 267
	mov	eax, DWORD PTR _token$[ebp]
	mov	ecx, DWORD PTR ?tokenNames@@3PAPBDA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _expectedToken$[ebp]
	mov	eax, DWORD PTR ?tokenNames@@3PAPBDA[edx*4]
	push	eax
	push	OFFSET ??_C@_0BF@BMMFKKLI@expecting?5?$CFs?0?5got?5?$CFs?$AA@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 16					; 00000010H
; Line 269
	jmp	SHORT $LN5@expect
$LN2@expect:
; Line 271
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@expect:
; Line 273
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@expect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@expect:
	DD	1
	DD	$LN8@expect
$LN8@expect:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@expect
$LN7@expect:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ENDP ; expect
_TEXT	ENDS
PUBLIC	??_C@_0CL@MDHBFJKC@parse?5error?4?5Stopped?5parsing?5tab@ ; `string'
PUBLIC	??_C@_0CO@BFNMPOJB@parse?5error?4?5Stopped?5parsing?5res@ ; `string'
PUBLIC	??_C@_0CM@KGNPMHKO@parse?5error?4?5Stopped?5parsing?5tok@ ; `string'
PUBLIC	??_C@_0CN@CIOKGMEH@invariant?5characters?5required?5fo@ ; `string'
PUBLIC	??_C@_0BE@JICBCMFC@unexpected?5token?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BD@LJADOCP@unterminated?5table?$AA@	; `string'
PUBLIC	??_C@_0BI@INNGNFHE@Encountered?5empty?5table?$AA@ ; `string'
PUBLIC	??_C@_0BP@FFJCAGKI@?5parsing?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
PUBLIC	??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	__imp__printf:PROC
EXTRN	_isVerbose:PROC
;	COMDAT ??_C@_0CL@MDHBFJKC@parse?5error?4?5Stopped?5parsing?5tab@
CONST	SEGMENT
??_C@_0CL@MDHBFJKC@parse?5error?4?5Stopped?5parsing?5tab@ DB 'parse error'
	DB	'. Stopped parsing table with %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BFNMPOJB@parse?5error?4?5Stopped?5parsing?5res@
CONST	SEGMENT
??_C@_0CO@BFNMPOJB@parse?5error?4?5Stopped?5parsing?5res@ DB 'parse error'
	DB	'. Stopped parsing resource with %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KGNPMHKO@parse?5error?4?5Stopped?5parsing?5tok@
CONST	SEGMENT
??_C@_0CM@KGNPMHKO@parse?5error?4?5Stopped?5parsing?5tok@ DB 'parse error'
	DB	'. Stopped parsing tokens with %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@CIOKGMEH@invariant?5characters?5required?5fo@
CONST	SEGMENT
??_C@_0CN@CIOKGMEH@invariant?5characters?5required?5fo@ DB 'invariant cha'
	DB	'racters required for table keys', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JICBCMFC@unexpected?5token?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@JICBCMFC@unexpected?5token?5?$CFs?$AA@ DB 'unexpected token %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LJADOCP@unterminated?5table?$AA@
CONST	SEGMENT
??_C@_0BD@LJADOCP@unterminated?5table?$AA@ DB 'unterminated table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@INNGNFHE@Encountered?5empty?5table?$AA@
CONST	SEGMENT
??_C@_0BI@INNGNFHE@Encountered?5empty?5table?$AA@ DB 'Encountered empty t'
	DB	'able', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FFJCAGKI@?5parsing?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BP@FFJCAGKI@?5parsing?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' '
	DB	'parsing table %s at line %i ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
CONST	SEGMENT
??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@ DB '(null)', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?realParseTable@@YAPAUSResource@@PAUParseState@@PAVTableResource@@PADIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv70 = -1312						; size = 4
_readToken$ = -1109					; size = 1
_line$ = -1100						; size = 4
_subtag$ = -1088					; size = 1024
_token$ = -56						; size = 4
_comment$ = -44						; size = 12
_tokenValue$ = -24					; size = 4
_member$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_table$ = 12						; size = 4
_tag$ = 16						; size = 4
_startline$ = 20					; size = 4
_status$ = 24						; size = 4
?realParseTable@@YAPAUSResource@@PAUParseState@@PAVTableResource@@PADIPAW4UErrorCode@@@Z PROC ; realParseTable, COMDAT
; Line 1166
	push	ebp
	mov	ebp, esp
	sub	esp, 1312				; 00000520H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1312]
	mov	ecx, 328				; 00000148H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1167
	mov	DWORD PTR _member$[ebp], 0
; Line 1168
	mov	DWORD PTR _tokenValue$[ebp], 0
; Line 1173
	mov	BYTE PTR _readToken$[ebp], 0
; Line 1177
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN13@realParseT
; Line 1178
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN17@realParseT
	mov	DWORD PTR tv70[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN18@realParseT
$LN17@realParseT:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv70[ebp], eax
$LN18@realParseT:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv70[ebp]
	push	edx
	push	OFFSET ??_C@_0BP@FFJCAGKI@?5parsing?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@realParseT:
; Line 1182
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 1183
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 1185
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN11@realParseT
; Line 1187
	movsx	eax, BYTE PTR _readToken$[ebp]
	test	eax, eax
	jne	SHORT $LN10@realParseT
; Line 1188
	push	OFFSET ??_C@_0BI@INNGNFHE@Encountered?5empty?5table?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_warning
	add	esp, 8
$LN10@realParseT:
; Line 1190
	mov	eax, DWORD PTR _table$[ebp]
	jmp	$LN15@realParseT
$LN11@realParseT:
; Line 1193
	cmp	DWORD PTR _token$[ebp], 0
	je	SHORT $LN9@realParseT
; Line 1195
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1197
	cmp	DWORD PTR _token$[ebp], 5
	jne	SHORT $LN8@realParseT
; Line 1199
	push	OFFSET ??_C@_0BD@LJADOCP@unterminated?5table?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1201
	jmp	SHORT $LN7@realParseT
$LN8@realParseT:
; Line 1203
	mov	eax, DWORD PTR _token$[ebp]
	mov	ecx, DWORD PTR ?tokenNames@@3PAPBDA[eax*4]
	push	ecx
	push	OFFSET ??_C@_0BE@JICBCMFC@unexpected?5token?5?$CFs?$AA@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN7@realParseT:
; Line 1206
	xor	eax, eax
	jmp	$LN15@realParseT
$LN9@realParseT:
; Line 1209
	push	-1
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@realParseT
; Line 1210
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	lea	edx, DWORD PTR _subtag$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 1211
	jmp	SHORT $LN5@realParseT
$LN6@realParseT:
; Line 1212
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1213
	push	OFFSET ??_C@_0CN@CIOKGMEH@invariant?5characters?5required?5fo@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1214
	xor	eax, eax
	jmp	$LN15@realParseT
$LN5@realParseT:
; Line 1217
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@realParseT
; Line 1219
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0CM@KGNPMHKO@parse?5error?4?5Stopped?5parsing?5tok@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
; Line 1220
	xor	eax, eax
	jmp	$LN15@realParseT
$LN4@realParseT:
; Line 1223
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	lea	edx, DWORD PTR _subtag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ; parseResource
	add	esp, 16					; 00000010H
	mov	DWORD PTR _member$[ebp], eax
; Line 1225
	cmp	DWORD PTR _member$[ebp], 0
	je	SHORT $LN2@realParseT
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@realParseT
$LN2@realParseT:
; Line 1227
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0CO@BFNMPOJB@parse?5error?4?5Stopped?5parsing?5res@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
; Line 1228
	xor	eax, eax
	jmp	SHORT $LN15@realParseT
$LN3@realParseT:
; Line 1231
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _table$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 1233
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@realParseT
; Line 1235
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0CL@MDHBFJKC@parse?5error?4?5Stopped?5parsing?5tab@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
; Line 1236
	xor	eax, eax
	jmp	SHORT $LN15@realParseT
$LN1@realParseT:
; Line 1238
	mov	BYTE PTR _readToken$[ebp], 1
; Line 1239
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_deinit
	add	esp, 4
; Line 1240
	jmp	$LN13@realParseT
$LN15@realParseT:
; Line 1246
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@realParseT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1312				; 00000520H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@realParseT:
	DD	4
	DD	$LN23@realParseT
$LN23@realParseT:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN19@realParseT
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN20@realParseT
	DD	-1088					; fffffbc0H
	DD	1024					; 00000400H
	DD	$LN21@realParseT
	DD	-1100					; fffffbb4H
	DD	4
	DD	$LN22@realParseT
$LN22@realParseT:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN21@realParseT:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
$LN20@realParseT:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN19@realParseT:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?realParseTable@@YAPAUSResource@@PAUParseState@@PAVTableResource@@PADIPAW4UErrorCode@@@Z ENDP ; realParseTable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isTable@@YACW4EResourceType@@@Z
_TEXT	SEGMENT
tv66 = -193						; size = 1
_type$ = 8						; size = 4
?isTable@@YACW4EResourceType@@@Z PROC			; isTable, COMDAT
; Line 1784
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1785
	cmp	DWORD PTR _type$[ebp], 3
	je	SHORT $LN3@isTable
	cmp	DWORD PTR _type$[ebp], 4
	je	SHORT $LN3@isTable
	mov	BYTE PTR tv66[ebp], 0
	jmp	SHORT $LN4@isTable
$LN3@isTable:
	mov	BYTE PTR tv66[ebp], 1
$LN4@isTable:
	mov	al, BYTE PTR tv66[ebp]
; Line 1786
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isTable@@YACW4EResourceType@@@Z ENDP			; isTable
_TEXT	ENDS
PUBLIC	??_C@_0BL@PLHECGDM@unknown?5resource?5type?5?8?$CFs?8?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_u_austrncpy_56:PROC
EXTRN	_u_strcmp_56:PROC
;	COMDAT ??_C@_0BL@PLHECGDM@unknown?5resource?5type?5?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_0BL@PLHECGDM@unknown?5resource?5type?5?8?$CFs?8?$AA@ DB 'unknown re'
	DB	'source type ''%s''', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseResourceType@@YA?AW4EResourceType@@PAUParseState@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_tokenBuffer$78817 = -1088				; size = 1024
_line$ = -56						; size = 4
_result$ = -44						; size = 4
_comment$ = -32						; size = 12
_tokenValue$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_status$ = 12						; size = 4
?parseResourceType@@YA?AW4EResourceType@@PAUParseState@@PAW4UErrorCode@@@Z PROC ; parseResourceType, COMDAT
; Line 1790
	push	ebp
	mov	ebp, esp
	sub	esp, 1284				; 00000504H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1284]
	mov	ecx, 321				; 00000141H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1793
	mov	DWORD PTR _result$[ebp], 0
; Line 1794
	mov	DWORD PTR _line$[ebp], 0
; Line 1795
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 1796
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1798
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseResou
; Line 1800
	xor	eax, eax
	jmp	$LN10@parseResou
$LN9@parseResou:
; Line 1803
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1806
	mov	DWORD PTR _result$[ebp], 0
$LN8@parseResou:
; Line 1807
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 1
	mov	DWORD PTR _result$[ebp], eax
	cmp	DWORD PTR _result$[ebp], 15		; 0000000fH
	jge	SHORT $LN7@parseResou
; Line 1808
	mov	eax, DWORD PTR _result$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _gResourceTypes[eax+4]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_u_strcmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@parseResou
; Line 1809
	jmp	SHORT $LN7@parseResou
$LN6@parseResou:
; Line 1811
	jmp	SHORT $LN8@parseResou
$LN7@parseResou:
; Line 1813
	mov	eax, DWORD PTR _k_type_int
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_u_strcmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@parseResou
; Line 1814
	mov	DWORD PTR _result$[ebp], 5
	jmp	SHORT $LN4@parseResou
$LN5@parseResou:
; Line 1816
	mov	eax, DWORD PTR _k_type_bin
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_u_strcmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@parseResou
; Line 1817
	mov	DWORD PTR _result$[ebp], 2
	jmp	SHORT $LN4@parseResou
$LN3@parseResou:
; Line 1819
	cmp	DWORD PTR _result$[ebp], 15		; 0000000fH
	jne	SHORT $LN4@parseResou
; Line 1821
	push	1024					; 00000400H
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _tokenBuffer$78817[ebp]
	push	edx
	call	_u_austrncpy_56
	add	esp, 12					; 0000000cH
; Line 1822
	mov	BYTE PTR _tokenBuffer$78817[ebp+1023], 0
; Line 1823
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1824
	lea	eax, DWORD PTR _tokenBuffer$78817[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@PLHECGDM@unknown?5resource?5type?5?8?$CFs?8?$AA@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
$LN4@parseResou:
; Line 1827
	mov	eax, DWORD PTR _result$[ebp]
$LN10@parseResou:
; Line 1828
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@parseResou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1284				; 00000504H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@parseResou:
	DD	4
	DD	$LN16@parseResou
$LN16@parseResou:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN12@parseResou
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN13@parseResou
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN14@parseResou
	DD	-1088					; fffffbc0H
	DD	1024					; 00000400H
	DD	$LN15@parseResou
$LN15@parseResou:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN14@parseResou:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN13@parseResou:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN12@parseResou:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseResourceType@@YA?AW4EResourceType@@PAUParseState@@PAW4UErrorCode@@@Z ENDP ; parseResourceType
_TEXT	ENDS
PUBLIC	??_C@_0DH@CPJPLEN@internal?5error?3?5?$CFs?5resource?5type@ ; `string'
PUBLIC	??_C@_0DN@GFEBKNDM@error?3?5?$CFs?5resource?5type?5not?5vali@ ; `string'
PUBLIC	??_C@_0BL@EEKFNJNH@Unexpected?5token?5after?5?8?$HL?8?$AA@ ; `string'
PUBLIC	??_C@_0DI@BNHMMFKP@Unexpected?5token?5after?5string?0?5e@ ; `string'
PUBLIC	??_C@_0DL@HMJOJDIN@syntax?5error?5while?5reading?5a?5res@ ; `string'
PUBLIC	??_C@_0BL@KNAOOEON@Unexpected?5EOF?5encountered?$AA@ ; `string'
PUBLIC	??_C@_0BK@OPKHGHEG@?5resource?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
;	COMDAT ??_C@_0DH@CPJPLEN@internal?5error?3?5?$CFs?5resource?5type@
CONST	SEGMENT
??_C@_0DH@CPJPLEN@internal?5error?3?5?$CFs?5resource?5type@ DB 'internal '
	DB	'error: %s resource type found and not handled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@GFEBKNDM@error?3?5?$CFs?5resource?5type?5not?5vali@
CONST	SEGMENT
??_C@_0DN@GFEBKNDM@error?3?5?$CFs?5resource?5type?5not?5vali@ DB 'error: '
	DB	'%s resource type not valid except on top bundle level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EEKFNJNH@Unexpected?5token?5after?5?8?$HL?8?$AA@
CONST	SEGMENT
??_C@_0BL@EEKFNJNH@Unexpected?5token?5after?5?8?$HL?8?$AA@ DB 'Unexpected'
	DB	' token after ''{''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@BNHMMFKP@Unexpected?5token?5after?5string?0?5e@
CONST	SEGMENT
??_C@_0DI@BNHMMFKP@Unexpected?5token?5after?5string?0?5e@ DB 'Unexpected '
	DB	'token after string, expected '','', ''{'' or ''}''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@HMJOJDIN@syntax?5error?5while?5reading?5a?5res@
CONST	SEGMENT
??_C@_0DL@HMJOJDIN@syntax?5error?5while?5reading?5a?5res@ DB 'syntax erro'
	DB	'r while reading a resource, expected ''{'' or '':''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KNAOOEON@Unexpected?5EOF?5encountered?$AA@
CONST	SEGMENT
??_C@_0BL@KNAOOEON@Unexpected?5EOF?5encountered?$AA@ DB 'Unexpected EOF e'
	DB	'ncountered', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OPKHGHEG@?5resource?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BK@OPKHGHEG@?5resource?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' resou'
	DB	'rce %s at line %i ', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv157 = -268						; size = 4
tv76 = -268						; size = 4
tv73 = -268						; size = 4
_line$ = -68						; size = 4
_startline$ = -56					; size = 4
_tokenValue$ = -44					; size = 4
_parseFunction$ = -32					; size = 4
_resType$ = -20						; size = 4
_token$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_status$ = 20						; size = 4
?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z PROC ; parseResource, COMDAT
; Line 1833
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1835
	mov	DWORD PTR _resType$[ebp], 0
; Line 1836
	mov	DWORD PTR _parseFunction$[ebp], 0
; Line 1842
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 1844
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN28@parseResou@2
; Line 1845
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN31@parseResou@2
	mov	DWORD PTR tv76[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN32@parseResou@2
$LN31@parseResou@2:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv76[ebp], eax
$LN32@parseResou@2:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	push	OFFSET ??_C@_0BK@OPKHGHEG@?5resource?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@parseResou@2:
; Line 1852
	mov	eax, DWORD PTR _token$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 5
	ja	$LN20@parseResou@2
	mov	edx, DWORD PTR tv73[ebp]
	jmp	DWORD PTR $LN38@parseResou@2[edx*4]
$LN25@parseResou@2:
; Line 1855
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1856
	push	OFFSET ??_C@_0BL@KNAOOEON@Unexpected?5EOF?5encountered?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1857
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN24@parseResou@2:
; Line 1860
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1861
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN23@parseResou@2:
; Line 1864
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?parseResourceType@@YA?AW4EResourceType@@PAUParseState@@PAW4UErrorCode@@@Z ; parseResourceType
	add	esp, 8
	mov	DWORD PTR _resType$[ebp], eax
; Line 1865
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1867
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@parseResou@2
; Line 1869
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN22@parseResou@2:
; Line 1872
	jmp	SHORT $LN26@parseResou@2
$LN21@parseResou@2:
; Line 1875
	jmp	SHORT $LN26@parseResou@2
$LN20@parseResou@2:
; Line 1878
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1879
	push	OFFSET ??_C@_0DL@HMJOJDIN@syntax?5error?5while?5reading?5a?5res@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1880
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN26@parseResou@2:
; Line 1884
	cmp	DWORD PTR _resType$[ebp], 0
	jne	$LN19@parseResou@2
; Line 1898
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1900
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@parseResou@2
; Line 1902
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN18@parseResou@2:
; Line 1905
	cmp	DWORD PTR _token$[ebp], 1
	je	SHORT $LN16@parseResou@2
	cmp	DWORD PTR _token$[ebp], 4
	je	SHORT $LN16@parseResou@2
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN17@parseResou@2
$LN16@parseResou@2:
; Line 1907
	mov	DWORD PTR _resType$[ebp], 6
	jmp	$LN15@parseResou@2
$LN17@parseResou@2:
; Line 1909
	cmp	DWORD PTR _token$[ebp], 0
	jne	$LN14@parseResou@2
; Line 1911
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	push	1
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1913
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseResou@2
; Line 1915
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN13@parseResou@2:
; Line 1918
	mov	eax, DWORD PTR _token$[ebp]
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv157[ebp], ecx
	cmp	DWORD PTR tv157[ebp], 3
	ja	SHORT $LN6@parseResou@2
	mov	edx, DWORD PTR tv157[ebp]
	jmp	DWORD PTR $LN39@parseResou@2[edx*4]
$LN10@parseResou@2:
; Line 1920
	mov	DWORD PTR _resType$[ebp], 6
	jmp	SHORT $LN11@parseResou@2
$LN9@parseResou@2:
; Line 1921
	mov	DWORD PTR _resType$[ebp], 3
	jmp	SHORT $LN11@parseResou@2
$LN8@parseResou@2:
; Line 1922
	mov	DWORD PTR _resType$[ebp], 1
	jmp	SHORT $LN11@parseResou@2
$LN7@parseResou@2:
; Line 1923
	mov	DWORD PTR _resType$[ebp], 3
	jmp	SHORT $LN11@parseResou@2
$LN6@parseResou@2:
; Line 1925
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1926
	push	OFFSET ??_C@_0DI@BNHMMFKP@Unexpected?5token?5after?5string?0?5e@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1927
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN11@parseResou@2:
; Line 1930
	jmp	SHORT $LN15@parseResou@2
$LN14@parseResou@2:
; Line 1932
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1933
	push	OFFSET ??_C@_0BL@EEKFNJNH@Unexpected?5token?5after?5?8?$HL?8?$AA@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1934
	xor	eax, eax
	jmp	$LN29@parseResou@2
$LN15@parseResou@2:
; Line 1935
	jmp	SHORT $LN4@parseResou@2
$LN19@parseResou@2:
; Line 1938
	cmp	DWORD PTR _resType$[ebp], 4
	jne	SHORT $LN4@parseResou@2
; Line 1939
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1940
	mov	eax, DWORD PTR _resType$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _gResourceTypes[eax]
	push	ecx
	push	OFFSET ??_C@_0DN@GFEBKNDM@error?3?5?$CFs?5resource?5type?5not?5vali@
	mov	edx, DWORD PTR _startline$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
; Line 1941
	xor	eax, eax
	jmp	SHORT $LN29@parseResou@2
$LN4@parseResou@2:
; Line 1947
	mov	eax, DWORD PTR _resType$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _gResourceTypes[eax+8]
	mov	DWORD PTR _parseFunction$[ebp], ecx
; Line 1948
	cmp	DWORD PTR _parseFunction$[ebp], 0
	je	SHORT $LN2@parseResou@2
; Line 1949
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _startline$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	DWORD PTR _parseFunction$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN29@parseResou@2
; Line 1951
	jmp	SHORT $LN1@parseResou@2
$LN2@parseResou@2:
; Line 1952
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 1953
	mov	eax, DWORD PTR _resType$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _gResourceTypes[eax]
	push	ecx
	push	OFFSET ??_C@_0DH@CPJPLEN@internal?5error?3?5?$CFs?5resource?5type@
	mov	edx, DWORD PTR _startline$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN1@parseResou@2:
; Line 1956
	xor	eax, eax
$LN29@parseResou@2:
; Line 1957
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@parseResou@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN37@parseResou@2:
	DD	3
	DD	$LN36@parseResou@2
$LN36@parseResou@2:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN33@parseResou@2
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN34@parseResou@2
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN35@parseResou@2
$LN35@parseResou@2:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN34@parseResou@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN33@parseResou@2:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
	npad	2
$LN38@parseResou@2:
	DD	$LN21@parseResou@2
	DD	$LN20@parseResou@2
	DD	$LN20@parseResou@2
	DD	$LN23@parseResou@2
	DD	$LN25@parseResou@2
	DD	$LN24@parseResou@2
$LN39@parseResou@2:
	DD	$LN9@parseResou@2
	DD	$LN8@parseResou@2
	DD	$LN10@parseResou@2
	DD	$LN7@parseResou@2
?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_state$ = 8						; size = 4
_lookaheadCount$ = 12					; size = 4
_tokenValue$ = 16					; size = 4
_linenumber$ = 20					; size = 4
_comment$ = 24						; size = 4
_status$ = 28						; size = 4
?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z PROC ; peekToken, COMDAT
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	mov	eax, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [eax+128]
	add	eax, DWORD PTR _lookaheadCount$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	DWORD PTR _i$[ebp], edx
; Line 219
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@peekToken
; Line 221
	mov	eax, 6
	jmp	SHORT $LN6@peekToken
$LN5@peekToken:
; Line 224
	cmp	DWORD PTR _lookaheadCount$[ebp], 3
	jb	SHORT $LN4@peekToken
; Line 226
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
; Line 227
	mov	eax, 6
	jmp	SHORT $LN6@peekToken
$LN4@peekToken:
; Line 230
	cmp	DWORD PTR _tokenValue$[ebp], 0
	je	SHORT $LN3@peekToken
; Line 232
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _state$[ebp]
	lea	edx, DWORD PTR [ecx+eax+4]
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@peekToken:
; Line 235
	cmp	DWORD PTR _linenumber$[ebp], 0
	je	SHORT $LN2@peekToken
; Line 237
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _linenumber$[ebp]
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+eax+28]
	mov	DWORD PTR [ecx], eax
$LN2@peekToken:
; Line 240
	cmp	DWORD PTR _comment$[ebp], 0
	je	SHORT $LN1@peekToken
; Line 241
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	shl	edx, 5
	mov	eax, DWORD PTR _state$[ebp]
	lea	ecx, DWORD PTR [eax+edx+16]
	push	ecx
	mov	edx, DWORD PTR _comment$[ebp]
	push	edx
	call	_ustr_cpy
	add	esp, 12					; 0000000cH
$LN1@peekToken:
; Line 244
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 5
	mov	ecx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [ecx+eax]
$LN6@peekToken:
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ENDP ; peekToken
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1SRBRoot@@QAE@XZ:PROC				; SRBRoot::~SRBRoot
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSRBRoot@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSRBRoot@@QAEPAXI@Z PROC				; SRBRoot::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SRBRoot@@QAE@XZ			; SRBRoot::~SRBRoot
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSRBRoot@@QAEPAXI@Z ENDP				; SRBRoot::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@PAUUCHARBUF@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@PAUUCHARBUF@@@Z PROC ; icu_56::LocalPointerBase<UCHARBUF>::LocalPointerBase<UCHARBUF>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@PAUUCHARBUF@@@Z ENDP ; icu_56::LocalPointerBase<UCHARBUF>::LocalPointerBase<UCHARBUF>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointerBase<UCHARBUF>::~LocalPointerBase<UCHARBUF>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@UUCHARBUF@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointerBase<UCHARBUF>::~LocalPointerBase<UCHARBUF>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNull@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<UCHARBUF>::isNull, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<UCHARBUF>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBEPAUUCHARBUF@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBEPAUUCHARBUF@@XZ PROC ; icu_56::LocalPointerBase<UCHARBUF>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@UUCHARBUF@@@icu_56@@QBEPAUUCHARBUF@@XZ ENDP ; icu_56::LocalPointerBase<UCHARBUF>::getAlias
_TEXT	ENDS
PUBLIC	??_C@_08FINKBBAF@reserved?$AA@			; `string'
PUBLIC	??_C@_0BE@DBCPCDGA@process?$CIdependency?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BI@DHDOIJFK@process?$CItransliterator?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BD@FCAMAONH@process?$CIcollation?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BD@NKLHFJNJ@process?$CIuca_rules?$CJ?$AA@ ; `string'
PUBLIC	??_C@_07FHOHOHLG@include?$AA@			; `string'
PUBLIC	??_C@_06EOGGDCGF@import?$AA@			; `string'
PUBLIC	??_C@_09DOPAKLKI@intvector?$AA@			; `string'
PUBLIC	??_C@_05NKHOCLEE@alias?$AA@			; `string'
PUBLIC	??_C@_05HIFJDKLD@array?$AA@			; `string'
PUBLIC	??_C@_07LKHFMGFB@integer?$AA@			; `string'
PUBLIC	??_C@_0BC@GAILGOLI@table?$CInofallback?$CJ?$AA@	; `string'
PUBLIC	??_C@_05LCLENNFI@table?$AA@			; `string'
PUBLIC	??_C@_06FNFBAEBE@binary?$AA@			; `string'
;	COMDAT ??_C@_08FINKBBAF@reserved?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
CONST	SEGMENT
??_C@_08FINKBBAF@reserved?$AA@ DB 'reserved', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DBCPCDGA@process?$CIdependency?$CJ?$AA@
CONST	SEGMENT
??_C@_0BE@DBCPCDGA@process?$CIdependency?$CJ?$AA@ DB 'process(dependency)'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DHDOIJFK@process?$CItransliterator?$CJ?$AA@
CONST	SEGMENT
??_C@_0BI@DHDOIJFK@process?$CItransliterator?$CJ?$AA@ DB 'process(transli'
	DB	'terator)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCAMAONH@process?$CIcollation?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@FCAMAONH@process?$CIcollation?$CJ?$AA@ DB 'process(collation)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKLHFJNJ@process?$CIuca_rules?$CJ?$AA@
CONST	SEGMENT
??_C@_0BD@NKLHFJNJ@process?$CIuca_rules?$CJ?$AA@ DB 'process(uca_rules)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FHOHOHLG@include?$AA@
CONST	SEGMENT
??_C@_07FHOHOHLG@include?$AA@ DB 'include', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EOGGDCGF@import?$AA@
CONST	SEGMENT
??_C@_06EOGGDCGF@import?$AA@ DB 'import', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09DOPAKLKI@intvector?$AA@
CONST	SEGMENT
??_C@_09DOPAKLKI@intvector?$AA@ DB 'intvector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05NKHOCLEE@alias?$AA@
CONST	SEGMENT
??_C@_05NKHOCLEE@alias?$AA@ DB 'alias', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HIFJDKLD@array?$AA@
CONST	SEGMENT
??_C@_05HIFJDKLD@array?$AA@ DB 'array', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKHFMGFB@integer?$AA@
CONST	SEGMENT
??_C@_07LKHFMGFB@integer?$AA@ DB 'integer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GAILGOLI@table?$CInofallback?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@GAILGOLI@table?$CInofallback?$CJ?$AA@ DB 'table(nofallback)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LCLENNFI@table?$AA@
CONST	SEGMENT
??_C@_05LCLENNFI@table?$AA@ DB 'table', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNFBAEBE@binary?$AA@
CONST	SEGMENT
??_C@_06FNFBAEBE@binary?$AA@ DB 'binary', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??__EgResourceTypes@@YAXXZ
text$yc	SEGMENT
??__EgResourceTypes@@YAXXZ PROC				; `dynamic initializer for 'gResourceTypes'', COMDAT
; Line 1746
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _k_type_string
	mov	DWORD PTR _gResourceTypes+16, eax
	mov	DWORD PTR _gResourceTypes+20, OFFSET ?parseString@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseString
; Line 1747
	mov	DWORD PTR _gResourceTypes+24, OFFSET ??_C@_06FNFBAEBE@binary?$AA@
	mov	eax, DWORD PTR _k_type_binary
	mov	DWORD PTR _gResourceTypes+28, eax
	mov	DWORD PTR _gResourceTypes+32, OFFSET ?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseBinary
; Line 1748
	mov	DWORD PTR _gResourceTypes+36, OFFSET ??_C@_05LCLENNFI@table?$AA@
	mov	eax, DWORD PTR _k_type_table
	mov	DWORD PTR _gResourceTypes+40, eax
	mov	DWORD PTR _gResourceTypes+44, OFFSET ?parseTable@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseTable
; Line 1749
	mov	DWORD PTR _gResourceTypes+48, OFFSET ??_C@_0BC@GAILGOLI@table?$CInofallback?$CJ?$AA@
	mov	eax, DWORD PTR _k_type_table_no_fallback
	mov	DWORD PTR _gResourceTypes+52, eax
	mov	DWORD PTR _gResourceTypes+56, 0
; Line 1750
	mov	DWORD PTR _gResourceTypes+60, OFFSET ??_C@_07LKHFMGFB@integer?$AA@
	mov	eax, DWORD PTR _k_type_integer
	mov	DWORD PTR _gResourceTypes+64, eax
	mov	DWORD PTR _gResourceTypes+68, OFFSET ?parseInteger@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseInteger
; Line 1751
	mov	DWORD PTR _gResourceTypes+72, OFFSET ??_C@_05HIFJDKLD@array?$AA@
	mov	eax, DWORD PTR _k_type_array
	mov	DWORD PTR _gResourceTypes+76, eax
	mov	DWORD PTR _gResourceTypes+80, OFFSET ?parseArray@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseArray
; Line 1752
	mov	DWORD PTR _gResourceTypes+84, OFFSET ??_C@_05NKHOCLEE@alias?$AA@
	mov	eax, DWORD PTR _k_type_alias
	mov	DWORD PTR _gResourceTypes+88, eax
	mov	DWORD PTR _gResourceTypes+92, OFFSET ?parseAlias@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseAlias
; Line 1753
	mov	DWORD PTR _gResourceTypes+96, OFFSET ??_C@_09DOPAKLKI@intvector?$AA@
	mov	eax, DWORD PTR _k_type_intvector
	mov	DWORD PTR _gResourceTypes+100, eax
	mov	DWORD PTR _gResourceTypes+104, OFFSET ?parseIntVector@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseIntVector
; Line 1754
	mov	DWORD PTR _gResourceTypes+108, OFFSET ??_C@_06EOGGDCGF@import?$AA@
	mov	eax, DWORD PTR _k_type_import
	mov	DWORD PTR _gResourceTypes+112, eax
	mov	DWORD PTR _gResourceTypes+116, OFFSET ?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseImport
; Line 1755
	mov	DWORD PTR _gResourceTypes+120, OFFSET ??_C@_07FHOHOHLG@include?$AA@
	mov	eax, DWORD PTR _k_type_include
	mov	DWORD PTR _gResourceTypes+124, eax
	mov	DWORD PTR _gResourceTypes+128, OFFSET ?parseInclude@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseInclude
; Line 1756
	mov	DWORD PTR _gResourceTypes+132, OFFSET ??_C@_0BD@NKLHFJNJ@process?$CIuca_rules?$CJ?$AA@
	mov	eax, DWORD PTR _k_type_plugin_uca_rules
	mov	DWORD PTR _gResourceTypes+136, eax
	mov	DWORD PTR _gResourceTypes+140, OFFSET ?parseUCARules@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseUCARules
; Line 1757
	mov	DWORD PTR _gResourceTypes+144, OFFSET ??_C@_0BD@FCAMAONH@process?$CIcollation?$CJ?$AA@
	mov	eax, DWORD PTR _k_type_plugin_collation
	mov	DWORD PTR _gResourceTypes+148, eax
	mov	DWORD PTR _gResourceTypes+152, 0
; Line 1758
	mov	DWORD PTR _gResourceTypes+156, OFFSET ??_C@_0BI@DHDOIJFK@process?$CItransliterator?$CJ?$AA@
	mov	eax, DWORD PTR _k_type_plugin_transliterator
	mov	DWORD PTR _gResourceTypes+160, eax
	mov	DWORD PTR _gResourceTypes+164, OFFSET ?parseTransliterator@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseTransliterator
; Line 1759
	mov	DWORD PTR _gResourceTypes+168, OFFSET ??_C@_0BE@DBCPCDGA@process?$CIdependency?$CJ?$AA@
	mov	eax, DWORD PTR _k_type_plugin_dependency
	mov	DWORD PTR _gResourceTypes+172, eax
	mov	DWORD PTR _gResourceTypes+176, OFFSET ?parseDependency@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ; parseDependency
; Line 1760
	mov	DWORD PTR _gResourceTypes+180, OFFSET ??_C@_08FINKBBAF@reserved?$AA@
	mov	DWORD PTR _gResourceTypes+184, 0
	mov	DWORD PTR _gResourceTypes+188, 0
; Line 1761
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EgResourceTypes@@YAXXZ ENDP				; `dynamic initializer for 'gResourceTypes''
text$yc	ENDS
PUBLIC	??_C@_0DC@NBEIADHC@An?5error?5occured?5while?5opening?5t@ ; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_string_open:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_unescape:PROC
EXTRN	_ucbuf_getc:PROC
EXTRN	_memset:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_ucbuf_size:PROC
EXTRN	_strcat:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0DC@NBEIADHC@An?5error?5occured?5while?5opening?5t@
CONST	SEGMENT
??_C@_0DC@NBEIADHC@An?5error?5occured?5while?5opening?5t@ DB 'An error oc'
	DB	'cured while opening the input file %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' %s at line %i ', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseUCARules@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv82 = -744						; size = 4
_size$ = -544						; size = 4
_targetLimit$ = -532					; size = 4
_target$ = -520						; size = 4
_pTarget$ = -508					; size = 4
_cp$ = -496						; size = 4
_c$ = -484						; size = 4
_ucbuf$ = -472						; size = 4
_quoted$ = -457						; size = 1
_line$ = -448						; size = 4
_cs$ = -436						; size = 128
_filename$ = -300					; size = 256
_file$ = -36						; size = 4
_tokenValue$ = -24					; size = 4
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
?parseUCARules@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseUCARules, COMDAT
; Line 309
	push	ebp
	mov	ebp, esp
	sub	esp, 744				; 000002e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-744]
	mov	ecx, 186				; 000000baH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 310
	mov	DWORD PTR _result$[ebp], 0
; Line 312
	mov	DWORD PTR _file$[ebp], 0
; Line 313
	mov	BYTE PTR _filename$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _filename$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 314
	mov	BYTE PTR _cs$[ebp], 0
	push	127					; 0000007fH
	push	0
	lea	eax, DWORD PTR _cs$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 316
	mov	BYTE PTR _quoted$[ebp], 0
; Line 317
	mov	DWORD PTR _ucbuf$[ebp], 0
; Line 318
	mov	DWORD PTR _c$[ebp], 0
; Line 319
	mov	DWORD PTR _cp$[ebp], 0
; Line 320
	mov	DWORD PTR _pTarget$[ebp], 0
; Line 321
	mov	DWORD PTR _target$[ebp], 0
; Line 322
	mov	DWORD PTR _targetLimit$[ebp], 0
; Line 323
	mov	DWORD PTR _size$[ebp], 0
; Line 325
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 327
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN30@parseUCARu
; Line 328
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN33@parseUCARu
	mov	DWORD PTR tv82[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN34@parseUCARu
$LN33@parseUCARu:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN34@parseUCARu:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	push	OFFSET ??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@parseUCARu:
; Line 331
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN29@parseUCARu
; Line 333
	xor	eax, eax
	jmp	$LN31@parseUCARu
$LN29@parseUCARu:
; Line 336
	mov	eax, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN28@parseUCARu
; Line 338
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
; Line 340
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+140]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN28@parseUCARu
; Line 342
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN28@parseUCARu:
; Line 346
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _cs$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 348
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 350
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@parseUCARu
; Line 352
	xor	eax, eax
	jmp	$LN31@parseUCARu
$LN26@parseUCARu:
; Line 354
	lea	eax, DWORD PTR _cs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 356
	mov	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax+161]
	test	ecx, ecx
	je	SHORT $LN25@parseUCARu
; Line 357
	call	_res_none
	jmp	$LN31@parseUCARu
$LN25@parseUCARu:
; Line 360
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	call	_getShowWarning
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_ucbuf_open
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ucbuf$[ebp], eax
; Line 362
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN24@parseUCARu
; Line 363
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DC@NBEIADHC@An?5error?5occured?5while?5opening?5t@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
; Line 364
	xor	eax, eax
	jmp	$LN31@parseUCARu
$LN24@parseUCARu:
; Line 371
	mov	eax, DWORD PTR _ucbuf$[ebp]
	push	eax
	call	_ucbuf_size
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _size$[ebp], eax
; Line 372
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _pTarget$[ebp], eax
; Line 373
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _pTarget$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 374
	mov	eax, DWORD PTR _pTarget$[ebp]
	mov	DWORD PTR _target$[ebp], eax
; Line 375
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR _pTarget$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _targetLimit$[ebp], edx
$LN23@parseUCARu:
; Line 378
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	$LN22@parseUCARu
; Line 380
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ucbuf$[ebp]
	push	ecx
	call	_ucbuf_getc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 381
	cmp	DWORD PTR _c$[ebp], 39			; 00000027H
	jne	SHORT $LN21@parseUCARu
; Line 382
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	sete	cl
	mov	BYTE PTR _quoted$[ebp], cl
$LN21@parseUCARu:
; Line 388
	cmp	DWORD PTR _c$[ebp], 91			; 0000005bH
	jne	$LN20@parseUCARu
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	jne	$LN20@parseUCARu
$LN19@parseUCARu:
; Line 394
	cmp	DWORD PTR _c$[ebp], 93			; 0000005dH
	je	$LN18@parseUCARu
; Line 395
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN17@parseUCARu
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
	jmp	SHORT $LN16@parseUCARu
$LN17@parseUCARu:
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx], ax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, 4
	mov	DWORD PTR _target$[ebp], eax
$LN16@parseUCARu:
; Line 396
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ucbuf$[ebp]
	push	ecx
	call	_ucbuf_getc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 397
	jmp	$LN19@parseUCARu
$LN18@parseUCARu:
; Line 399
	jmp	$LN15@parseUCARu
$LN20@parseUCARu:
	cmp	DWORD PTR _c$[ebp], 35			; 00000023H
	jne	SHORT $LN14@parseUCARu
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	jne	SHORT $LN14@parseUCARu
$LN13@parseUCARu:
; Line 401
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN12@parseUCARu
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	je	SHORT $LN12@parseUCARu
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ucbuf$[ebp]
	push	ecx
	call	_ucbuf_getc
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 403
	jmp	SHORT $LN13@parseUCARu
$LN12@parseUCARu:
; Line 404
	jmp	$LN23@parseUCARu
	jmp	$LN15@parseUCARu
$LN14@parseUCARu:
; Line 406
	cmp	DWORD PTR _c$[ebp], 92			; 0000005cH
	jne	SHORT $LN10@parseUCARu
; Line 408
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ucbuf$[ebp]
	push	ecx
	call	_unescape
	add	esp, 8
	mov	DWORD PTR _c$[ebp], eax
; Line 410
	cmp	DWORD PTR _c$[ebp], -2			; fffffffeH
	jne	SHORT $LN9@parseUCARu
; Line 412
	mov	eax, DWORD PTR _pTarget$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 413
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 414
	xor	eax, eax
	jmp	$LN31@parseUCARu
$LN9@parseUCARu:
; Line 416
	jmp	SHORT $LN15@parseUCARu
$LN10@parseUCARu:
; Line 417
	movsx	eax, BYTE PTR _quoted$[ebp]
	test	eax, eax
	jne	SHORT $LN15@parseUCARu
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	je	SHORT $LN6@parseUCARu
	cmp	DWORD PTR _c$[ebp], 9
	je	SHORT $LN6@parseUCARu
	cmp	DWORD PTR _c$[ebp], 13			; 0000000dH
	je	SHORT $LN6@parseUCARu
	cmp	DWORD PTR _c$[ebp], 10			; 0000000aH
	jne	SHORT $LN15@parseUCARu
$LN6@parseUCARu:
; Line 422
	jmp	$LN23@parseUCARu
$LN15@parseUCARu:
; Line 426
	cmp	DWORD PTR _c$[ebp], -1
	je	SHORT $LN5@parseUCARu
; Line 428
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN4@parseUCARu
	mov	eax, DWORD PTR _target$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _target$[ebp]
	add	edx, 2
	mov	DWORD PTR _target$[ebp], edx
	jmp	SHORT $LN3@parseUCARu
$LN4@parseUCARu:
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx], ax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx+2], ax
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, 4
	mov	DWORD PTR _target$[ebp], eax
$LN3@parseUCARu:
; Line 430
	jmp	SHORT $LN2@parseUCARu
$LN5@parseUCARu:
; Line 432
	jmp	SHORT $LN22@parseUCARu
$LN2@parseUCARu:
; Line 434
	jmp	$LN23@parseUCARu
$LN22@parseUCARu:
; Line 437
	mov	eax, DWORD PTR _target$[ebp]
	cmp	eax, DWORD PTR _targetLimit$[ebp]
	jae	SHORT $LN1@parseUCARu
; Line 438
	xor	eax, eax
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx], ax
$LN1@parseUCARu:
; Line 441
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _target$[ebp]
	sub	ecx, DWORD PTR _pTarget$[ebp]
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
; Line 444
	mov	eax, DWORD PTR _ucbuf$[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 445
	mov	eax, DWORD PTR _pTarget$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 446
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 448
	mov	eax, DWORD PTR _result$[ebp]
$LN31@parseUCARu:
; Line 449
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN43@parseUCARu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 744				; 000002e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN43@parseUCARu:
	DD	5
	DD	$LN42@parseUCARu
$LN42@parseUCARu:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN37@parseUCARu
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN38@parseUCARu
	DD	-436					; fffffe4cH
	DD	128					; 00000080H
	DD	$LN39@parseUCARu
	DD	-448					; fffffe40H
	DD	4
	DD	$LN40@parseUCARu
	DD	-496					; fffffe10H
	DD	4
	DD	$LN41@parseUCARu
$LN41@parseUCARu:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
$LN40@parseUCARu:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN39@parseUCARu:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	0
$LN38@parseUCARu:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN37@parseUCARu:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseUCARules@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseUCARules
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_utrans_stripRules_56:PROC
EXTRN	_ucbuf_getBuffer:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseTransliterator@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv82 = -708						; size = 4
_size$ = -508						; size = 4
_pSource$ = -496					; size = 4
_pTarget$ = -484					; size = 4
_cp$ = -472						; size = 4
_ucbuf$ = -460						; size = 4
_line$ = -448						; size = 4
_cs$ = -436						; size = 128
_filename$ = -300					; size = 256
_file$ = -36						; size = 4
_tokenValue$ = -24					; size = 4
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
___formal$ = 20						; size = 4
_status$ = 24						; size = 4
?parseTransliterator@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseTransliterator, COMDAT
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 708				; 000002c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-708]
	mov	ecx, 177				; 000000b1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 454
	mov	DWORD PTR _result$[ebp], 0
; Line 456
	mov	DWORD PTR _file$[ebp], 0
; Line 457
	mov	BYTE PTR _filename$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _filename$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 458
	mov	BYTE PTR _cs$[ebp], 0
	push	127					; 0000007fH
	push	0
	lea	eax, DWORD PTR _cs$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 460
	mov	DWORD PTR _ucbuf$[ebp], 0
; Line 461
	mov	DWORD PTR _cp$[ebp], 0
; Line 462
	mov	DWORD PTR _pTarget$[ebp], 0
; Line 463
	mov	DWORD PTR _pSource$[ebp], 0
; Line 464
	mov	DWORD PTR _size$[ebp], 0
; Line 466
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 468
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@parseTrans
; Line 469
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN9@parseTrans
	mov	DWORD PTR tv82[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN10@parseTrans
$LN9@parseTrans:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN10@parseTrans:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	push	OFFSET ??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@parseTrans:
; Line 472
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@parseTrans
; Line 474
	xor	eax, eax
	jmp	$LN7@parseTrans
$LN5@parseTrans:
; Line 477
	mov	eax, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN4@parseTrans
; Line 479
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
; Line 481
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+140]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN4@parseTrans
; Line 483
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN4@parseTrans:
; Line 487
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _cs$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 489
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 491
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseTrans
; Line 493
	xor	eax, eax
	jmp	$LN7@parseTrans
$LN2@parseTrans:
; Line 495
	lea	eax, DWORD PTR _cs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 498
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	call	_getShowWarning
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_ucbuf_open
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ucbuf$[ebp], eax
; Line 500
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseTrans
; Line 501
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DC@NBEIADHC@An?5error?5occured?5while?5opening?5t@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
; Line 502
	xor	eax, eax
	jmp	$LN7@parseTrans
$LN1@parseTrans:
; Line 509
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ucbuf$[ebp]
	push	edx
	call	_ucbuf_getBuffer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pSource$[ebp], eax
; Line 510
	mov	eax, DWORD PTR _size$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _pTarget$[ebp], eax
; Line 511
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _pTarget$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 514
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	call	_utrans_stripRules_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _size$[ebp], eax
; Line 519
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pTarget$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
; Line 521
	mov	eax, DWORD PTR _ucbuf$[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 522
	mov	eax, DWORD PTR _pTarget$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 523
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 525
	mov	eax, DWORD PTR _result$[ebp]
$LN7@parseTrans:
; Line 526
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@parseTrans
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 708				; 000002c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@parseTrans:
	DD	6
	DD	$LN17@parseTrans
$LN17@parseTrans:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@parseTrans
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN12@parseTrans
	DD	-436					; fffffe4cH
	DD	128					; 00000080H
	DD	$LN13@parseTrans
	DD	-448					; fffffe40H
	DD	4
	DD	$LN14@parseTrans
	DD	-472					; fffffe28H
	DD	4
	DD	$LN15@parseTrans
	DD	-508					; fffffe04H
	DD	4
	DD	$LN16@parseTrans
$LN16@parseTrans:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN15@parseTrans:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
$LN14@parseTrans:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN13@parseTrans:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	0
$LN12@parseTrans:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN11@parseTrans:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseTransliterator@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseTransliterator
_TEXT	ENDS
PUBLIC	??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@	; `string'
PUBLIC	??_C@_0EE@FKJKBGMP@The?5dependency?5file?5?$CFs?5does?5not?5@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?add@ArrayResource@@QAEXPAUSResource@@@Z:PROC	; ArrayResource::add
EXTRN	_array_open:PROC
EXTRN	_T_FileStream_file_exists:PROC
;	COMDAT ??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@
CONST	SEGMENT
??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@ DB '%%DEPENDENCY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@FKJKBGMP@The?5dependency?5file?5?$CFs?5does?5not?5@
CONST	SEGMENT
??_C@_0EE@FKJKBGMP@The?5dependency?5file?5?$CFs?5does?5not?5@ DB 'The dep'
	DB	'endency file %s does not exist. Please make sure it exists.', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseDependency@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv82 = -648						; size = 4
_cs$ = -448						; size = 128
_filename$ = -312					; size = 256
_line$ = -48						; size = 4
_tokenValue$ = -36					; size = 4
_elem$ = -24						; size = 4
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseDependency@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseDependency, COMDAT
; Line 531
	push	ebp
	mov	ebp, esp
	sub	esp, 648				; 00000288H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-648]
	mov	ecx, 162				; 000000a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 532
	mov	DWORD PTR _result$[ebp], 0
; Line 533
	mov	DWORD PTR _elem$[ebp], 0
; Line 536
	mov	BYTE PTR _filename$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _filename$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 537
	mov	BYTE PTR _cs$[ebp], 0
	push	127					; 0000007fH
	push	0
	lea	eax, DWORD PTR _cs$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 539
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 541
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@parseDepen
; Line 542
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN14@parseDepen
	mov	DWORD PTR tv82[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN15@parseDepen
$LN14@parseDepen:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv82[ebp], eax
$LN15@parseDepen:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	push	edx
	push	OFFSET ??_C@_0BB@HANANFDC@?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@parseDepen:
; Line 545
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@parseDepen
; Line 547
	xor	eax, eax
	jmp	$LN12@parseDepen
$LN10@parseDepen:
; Line 550
	mov	eax, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [eax+148], 0
	je	SHORT $LN9@parseDepen
; Line 552
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	lea	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
; Line 554
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+148]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN9@parseDepen
; Line 556
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN9@parseDepen:
; Line 560
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _cs$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 562
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseDepen
; Line 564
	xor	eax, eax
	jmp	$LN12@parseDepen
$LN7@parseDepen:
; Line 566
	lea	eax, DWORD PTR _cs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 567
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_T_FileStream_file_exists
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@parseDepen
; Line 568
	call	_isStrict
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@parseDepen
; Line 569
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0EE@FKJKBGMP@The?5dependency?5file?5?$CFs?5does?5not?5@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
; Line 570
	jmp	SHORT $LN6@parseDepen
$LN5@parseDepen:
; Line 571
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0EE@FKJKBGMP@The?5dependency?5file?5?$CFs?5does?5not?5@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_warning
	add	esp, 12					; 0000000cH
$LN6@parseDepen:
; Line 574
	cmp	DWORD PTR _dependencyArray, 0
	jne	SHORT $LN3@parseDepen
; Line 575
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_0N@KBOFKNOI@?$CF?$CFDEPENDENCY?$AA@
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_array_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _dependencyArray, eax
$LN3@parseDepen:
; Line 577
	cmp	DWORD PTR _tag$[ebp], 0
	je	SHORT $LN2@parseDepen
; Line 578
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
$LN2@parseDepen:
; Line 580
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _elem$[ebp], eax
; Line 582
	mov	eax, DWORD PTR _elem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dependencyArray
	call	?add@ArrayResource@@QAEXPAUSResource@@@Z ; ArrayResource::add
; Line 584
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseDepen
; Line 586
	xor	eax, eax
	jmp	SHORT $LN12@parseDepen
$LN1@parseDepen:
; Line 588
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 589
	mov	eax, DWORD PTR _result$[ebp]
$LN12@parseDepen:
; Line 590
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@parseDepen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 648				; 00000288H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@parseDepen:
	DD	4
	DD	$LN20@parseDepen
$LN20@parseDepen:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN16@parseDepen
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN17@parseDepen
	DD	-312					; fffffec8H
	DD	256					; 00000100H
	DD	$LN18@parseDepen
	DD	-448					; fffffe40H
	DD	128					; 00000080H
	DD	$LN19@parseDepen
$LN19@parseDepen:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	0
$LN18@parseDepen:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN17@parseDepen:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN16@parseDepen:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseDependency@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseDependency
_TEXT	ENDS
PUBLIC	??_C@_0BI@MBLCPKIG@?5string?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
;	COMDAT ??_C@_0BI@MBLCPKIG@?5string?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@MBLCPKIG@?5string?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' string '
	DB	'%s at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseString@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv70 = -220						; size = 4
_result$ = -20						; size = 4
_tokenValue$ = -8					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseString@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseString, COMDAT
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 595
	mov	DWORD PTR _result$[ebp], 0
; Line 601
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@parseStrin
; Line 602
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN7@parseStrin
	mov	DWORD PTR tv70[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN8@parseStrin
$LN7@parseStrin:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv70[ebp], eax
$LN8@parseStrin:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv70[ebp]
	push	edx
	push	OFFSET ??_C@_0BI@MBLCPKIG@?5string?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@parseStrin:
; Line 604
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _tokenValue$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 606
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN3@parseStrin
; Line 611
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
; Line 612
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseStrin
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN3@parseStrin
; Line 613
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 615
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseStrin
; Line 617
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 618
	xor	eax, eax
	jmp	SHORT $LN5@parseStrin
$LN3@parseStrin:
; Line 623
	mov	eax, DWORD PTR _result$[ebp]
$LN5@parseStrin:
; Line 624
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@parseStrin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@parseStrin:
	DD	1
	DD	$LN10@parseStrin
$LN10@parseStrin:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@parseStrin
$LN9@parseStrin:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseString@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseString
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??_C@_0BH@IAJJPCNE@?5alias?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
EXTRN	_alias_open:PROC
;	COMDAT ??_C@_0BH@IAJJPCNE@?5alias?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
CONST	SEGMENT
??_C@_0BH@IAJJPCNE@?5alias?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' alias %s'
	DB	' at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseAlias@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv76 = -220						; size = 4
_result$ = -20						; size = 4
_tokenValue$ = -8					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseAlias@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseAlias, COMDAT
; Line 628
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 630
	mov	DWORD PTR _result$[ebp], 0
; Line 632
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _tokenValue$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 634
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@parseAlias
; Line 635
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN6@parseAlias
	mov	DWORD PTR tv76[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN7@parseAlias
$LN6@parseAlias:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv76[ebp], eax
$LN7@parseAlias:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	push	OFFSET ??_C@_0BH@IAJJPCNE@?5alias?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@parseAlias:
; Line 638
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseAlias
; Line 643
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_alias_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
; Line 645
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 647
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseAlias
; Line 649
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 650
	xor	eax, eax
	jmp	SHORT $LN4@parseAlias
$LN2@parseAlias:
; Line 654
	mov	eax, DWORD PTR _result$[ebp]
$LN4@parseAlias:
; Line 655
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@parseAlias
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@parseAlias:
	DD	1
	DD	$LN9@parseAlias
$LN9@parseAlias:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@parseAlias
$LN8@parseAlias:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseAlias@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseAlias
_TEXT	ENDS
PUBLIC	??_C@_0BH@OPLACKNM@?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
PUBLIC	??_C@_0BC@JFCCCNAE@CollationElements?$AA@	; `string'
EXTRN	_table_open:PROC
;	COMDAT ??_C@_0BH@OPLACKNM@?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BH@OPLACKNM@?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' table %s'
	DB	' at line %i ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JFCCCNAE@CollationElements?$AA@
CONST	SEGMENT
??_C@_0BC@JFCCCNAE@CollationElements?$AA@ DB 'CollationElements', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseTable@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -208						; size = 4
_result$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseTable@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseTable, COMDAT
; Line 1250
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1251
	cmp	DWORD PTR _tag$[ebp], 0
	je	SHORT $LN5@parseTable
	push	OFFSET ??_C@_0BC@JFCCCNAE@CollationElements?$AA@
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@parseTable
; Line 1253
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?parseCollationElements@@YAPAUSResource@@PAUParseState@@PADICPAW4UErrorCode@@@Z ; parseCollationElements
	add	esp, 20					; 00000014H
	jmp	$LN6@parseTable
$LN5@parseTable:
; Line 1255
	cmp	DWORD PTR _tag$[ebp], 0
	je	SHORT $LN4@parseTable
	push	OFFSET ??_C@_0L@EMPPBAGD@collations?$AA@
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@parseTable
; Line 1257
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?parseCollationElements@@YAPAUSResource@@PAUParseState@@PADICPAW4UErrorCode@@@Z ; parseCollationElements
	add	esp, 20					; 00000014H
	jmp	$LN6@parseTable
$LN4@parseTable:
; Line 1259
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@parseTable
; Line 1260
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN8@parseTable
	mov	DWORD PTR tv92[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN9@parseTable
$LN8@parseTable:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv92[ebp], eax
$LN9@parseTable:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	push	OFFSET ??_C@_0BH@OPLACKNM@?5table?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@parseTable:
; Line 1263
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_table_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 1265
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN1@parseTable
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseTable
$LN1@parseTable:
; Line 1267
	xor	eax, eax
	jmp	SHORT $LN6@parseTable
$LN2@parseTable:
; Line 1269
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?realParseTable@@YAPAUSResource@@PAUParseState@@PAVTableResource@@PADIPAW4UErrorCode@@@Z ; realParseTable
	add	esp, 20					; 00000014H
$LN6@parseTable:
; Line 1270
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?parseTable@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseTable
_TEXT	ENDS
PUBLIC	??_C@_07DLHCIBDH@default?$AA@			; `string'
PUBLIC	??_C@_0BE@ICNNHMFJ@Unexpected?5token?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_09BHDMPOMF@?$CIno?5type?$CJ?$AA@		; `string'
PUBLIC	??_C@_0CE@OKOOMCMI@?5collation?5elements?5?$CFs?5at?5line?5?$CF@ ; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_07DLHCIBDH@default?$AA@
CONST	SEGMENT
??_C@_07DLHCIBDH@default?$AA@ DB 'default', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ICNNHMFJ@Unexpected?5token?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BE@ICNNHMFJ@Unexpected?5token?5?$CFs?$AA@ DB 'Unexpected token %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHDMPOMF@?$CIno?5type?$CJ?$AA@
CONST	SEGMENT
??_C@_09BHDMPOMF@?$CIno?5type?$CJ?$AA@ DB '(no type)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OKOOMCMI@?5collation?5elements?5?$CFs?5at?5line?5?$CF@
CONST	SEGMENT
??_C@_0CE@OKOOMCMI@?5collation?5elements?5?$CFs?5at?5line?5?$CF@ DB ' col'
	DB	'lation elements %s at line %i ', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseCollationElements@@YAPAUSResource@@PAUParseState@@PADICPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -2356						; size = 4
_collationRes$78326 = -2156				; size = 4
_line$ = -2144						; size = 4
_typeKeyword$ = -2132					; size = 1024
_subtag$ = -1100					; size = 1024
_token$ = -68						; size = 4
_comment$ = -56						; size = 12
_tokenValue$ = -36					; size = 4
_member$ = -24						; size = 4
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_newCollation$ = 20					; size = 1
_status$ = 24						; size = 4
?parseCollationElements@@YAPAUSResource@@PAUParseState@@PADICPAW4UErrorCode@@@Z PROC ; parseCollationElements, COMDAT
; Line 1037
	push	ebp
	mov	ebp, esp
	sub	esp, 2356				; 00000934H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2356]
	mov	ecx, 589				; 0000024dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1038
	mov	DWORD PTR _result$[ebp], 0
; Line 1039
	mov	DWORD PTR _member$[ebp], 0
; Line 1046
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	call	_table_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 1048
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN25@parseColla
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@parseColla
$LN25@parseColla:
; Line 1050
	xor	eax, eax
	jmp	$LN27@parseColla
$LN26@parseColla:
; Line 1052
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN24@parseColla
; Line 1053
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN29@parseColla
	mov	DWORD PTR tv81[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN30@parseColla
$LN29@parseColla:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv81[ebp], eax
$LN30@parseColla:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	push	OFFSET ??_C@_0CE@OKOOMCMI@?5collation?5elements?5?$CFs?5at?5line?5?$CF@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@parseColla:
; Line 1055
	movsx	eax, BYTE PTR _newCollation$[ebp]
	test	eax, eax
	jne	SHORT $LN21@parseColla
; Line 1056
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	push	OFFSET ??_C@_09BHDMPOMF@?$CIno?5type?$CJ?$AA@
	mov	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z ; addCollation
	add	esp, 20					; 00000014H
	jmp	$LN27@parseColla
; Line 1058
	jmp	$LN27@parseColla
$LN21@parseColla:
; Line 1060
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 1061
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 1063
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN19@parseColla
; Line 1065
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN27@parseColla
$LN19@parseColla:
; Line 1068
	cmp	DWORD PTR _token$[ebp], 0
	je	SHORT $LN18@parseColla
; Line 1070
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1071
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1073
	cmp	DWORD PTR _token$[ebp], 5
	jne	SHORT $LN17@parseColla
; Line 1075
	push	OFFSET ??_C@_0BD@LJADOCP@unterminated?5table?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1077
	jmp	SHORT $LN16@parseColla
$LN17@parseColla:
; Line 1079
	mov	eax, DWORD PTR _token$[ebp]
	mov	ecx, DWORD PTR ?tokenNames@@3PAPBDA[eax*4]
	push	ecx
	push	OFFSET ??_C@_0BE@ICNNHMFJ@Unexpected?5token?5?$CFs?$AA@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN16@parseColla:
; Line 1082
	xor	eax, eax
	jmp	$LN27@parseColla
$LN18@parseColla:
; Line 1085
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	lea	edx, DWORD PTR _subtag$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 1087
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@parseColla
; Line 1089
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1090
	xor	eax, eax
	jmp	$LN27@parseColla
$LN15@parseColla:
; Line 1093
	push	OFFSET ??_C@_07DLHCIBDH@default?$AA@
	lea	eax, DWORD PTR _subtag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@parseColla
; Line 1095
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _subtag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ; parseResource
	add	esp, 16					; 00000010H
	mov	DWORD PTR _member$[ebp], eax
; Line 1097
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseColla
; Line 1099
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1100
	xor	eax, eax
	jmp	$LN27@parseColla
$LN13@parseColla:
; Line 1103
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 1105
	jmp	$LN12@parseColla
$LN14@parseColla:
; Line 1107
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1111
	cmp	DWORD PTR _token$[ebp], 1
	jne	$LN11@parseColla
; Line 1112
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 1114
	lea	eax, DWORD PTR _subtag$[ebp]
	push	eax
	call	?keepCollationType@@YACPBD@Z		; keepCollationType
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN10@parseColla
; Line 1115
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _subtag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	call	_table_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _collationRes$78326[ebp], eax
; Line 1116
	jmp	SHORT $LN9@parseColla
$LN10@parseColla:
; Line 1117
	mov	DWORD PTR _collationRes$78326[ebp], 0
$LN9@parseColla:
; Line 1120
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	lea	edx, DWORD PTR _subtag$[ebp]
	push	edx
	mov	eax, DWORD PTR _collationRes$78326[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z ; addCollation
	add	esp, 20					; 00000014H
	mov	DWORD PTR _collationRes$78326[ebp], eax
; Line 1121
	cmp	DWORD PTR _collationRes$78326[ebp], 0
	je	SHORT $LN8@parseColla
; Line 1122
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR _collationRes$78326[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
$LN8@parseColla:
; Line 1123
	jmp	$LN12@parseColla
$LN11@parseColla:
; Line 1124
	cmp	DWORD PTR _token$[ebp], 4
	jne	$LN6@parseColla
; Line 1126
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1127
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	lea	edx, DWORD PTR _typeKeyword$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 1128
	push	OFFSET ??_C@_05NKHOCLEE@alias?$AA@
	lea	eax, DWORD PTR _typeKeyword$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@parseColla
; Line 1129
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _subtag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ; parseResource
	add	esp, 16					; 00000010H
	mov	DWORD PTR _member$[ebp], eax
; Line 1130
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@parseColla
; Line 1132
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1133
	xor	eax, eax
	jmp	SHORT $LN27@parseColla
$LN4@parseColla:
; Line 1136
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 1137
	jmp	SHORT $LN3@parseColla
$LN5@parseColla:
; Line 1138
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1139
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1140
	xor	eax, eax
	jmp	SHORT $LN27@parseColla
$LN3@parseColla:
; Line 1142
	jmp	SHORT $LN12@parseColla
$LN6@parseColla:
; Line 1143
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1144
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1145
	xor	eax, eax
	jmp	SHORT $LN27@parseColla
$LN12@parseColla:
; Line 1153
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseColla
; Line 1155
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1156
	xor	eax, eax
	jmp	SHORT $LN27@parseColla
$LN1@parseColla:
; Line 1158
	jmp	$LN21@parseColla
$LN27@parseColla:
; Line 1160
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@parseColla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2356				; 00000934H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN37@parseColla:
	DD	5
	DD	$LN36@parseColla
$LN36@parseColla:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN31@parseColla
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN32@parseColla
	DD	-1100					; fffffbb4H
	DD	1024					; 00000400H
	DD	$LN33@parseColla
	DD	-2132					; fffff7acH
	DD	1024					; 00000400H
	DD	$LN34@parseColla
	DD	-2144					; fffff7a0H
	DD	4
	DD	$LN35@parseColla
$LN35@parseColla:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN34@parseColla:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	119					; 00000077H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	0
$LN33@parseColla:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
$LN32@parseColla:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN31@parseColla:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseCollationElements@@YAPAUSResource@@PAUParseState@@PADICPAW4UErrorCode@@@Z ENDP ; parseCollationElements
_TEXT	ENDS
PUBLIC	??_C@_0CE@PIGANEBA@?$CFs?$HO?$CFs?5collation?5reordering?5range@ ; `string'
PUBLIC	??_C@_0CH@GKEIHHBD@?$CFs?$HO?$CFs?5collation?5tailoring?5part?5s@ ; `string'
PUBLIC	??_C@_0DC@PNDPNOML@CollationDataWriter?3?3writeTailor@ ; `string'
PUBLIC	??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator*
PUBLIC	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
PUBLIC	??1?$LocalMemory@E@icu_56@@QAE@XZ		; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
PUBLIC	??_C@_0DI@CCECMDLD@memory?5allocation?5?$CI?$CFld?5bytes?$CJ?5fo@ ; `string'
PUBLIC	?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
PUBLIC	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
PUBLIC	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
PUBLIC	?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::isNull
PUBLIC	??_C@_0CD@KIPDILNG@?5?5error?5context?3?5?$CC?4?4?4?$CFs?$CC?5?$CB?5?$CC?$CFs?4?4@ ; `string'
PUBLIC	??_C@_0EC@JIOKCMDG@CollationBuilder?5failed?5at?5?$CFs?$HO?$CFs@ ; `string'
PUBLIC	??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ; icu_56::LocalPointer<icu_56::CollationTailoring>::LocalPointer<icu_56::CollationTailoring>
PUBLIC	??_C@_06GFPLNGOC@search?$AA@			; `string'
PUBLIC	??_C@_0DA@POBGMJIK@failed?5to?5load?5root?5collator?5?$CIuc@ ; `string'
PUBLIC	??0GenrbImporter@?A0x82188031@@QAE@PBD0@Z	; `anonymous namespace'::GenrbImporter::GenrbImporter
PUBLIC	??_C@_0CF@KEPHFBMB@Not?5building?5?$CFs?$HO?$CFs?5collation?5bin@ ; `string'
PUBLIC	??_C@_08OKEMGDJB@private?9?$AA@			; `string'
PUBLIC	??_C@_0P@DONENFIN@?$CF?$CFCollationBin?$AA@	; `string'
PUBLIC	?length@StringBaseResource@@QBEHXZ		; StringBaseResource::length
PUBLIC	??_C@_07NGFJPNPN@Version?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_bin_open:PROC
EXTRN	__imp_?printReorderRanges@CollationInfo@icu_56@@SAXABUCollationData@2@PBHH@Z:PROC
EXTRN	__imp_?hasReordering@CollationSettings@icu_56@@QBECXZ:PROC
EXTRN	__imp_?printSizes@CollationInfo@icu_56@@SAXHQBH@Z:PROC
EXTRN	__imp_?writeTailoring@CollationDataWriter@icu_56@@SAHABUCollationTailoring@2@ABUCollationSettings@2@QAHPAEHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??1CollationBuilder@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?getErrorReason@CollationBuilder@icu_56@@QBEPBDXZ:PROC
EXTRN	__imp_?parseAndBuild@CollationBuilder@icu_56@@QAEPAUCollationTailoring@2@ABVUnicodeString@2@QBEPAVImporter@CollationRuleParser@2@PAUUParseError@@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?disableFastLatin@CollationBuilder@icu_56@@QAEXXZ:PROC
EXTRN	__imp_??0CollationBuilder@icu_56@@QAE@PBUCollationTailoring@1@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?getRoot@CollationRoot@icu_56@@SAPBUCollationTailoring@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_u_versionFromString_56:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT ??_C@_0CE@PIGANEBA@?$CFs?$HO?$CFs?5collation?5reordering?5range@
CONST	SEGMENT
??_C@_0CE@PIGANEBA@?$CFs?$HO?$CFs?5collation?5reordering?5range@ DB '%s~%'
	DB	's collation reordering ranges:', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GKEIHHBD@?$CFs?$HO?$CFs?5collation?5tailoring?5part?5s@
CONST	SEGMENT
??_C@_0CH@GKEIHHBD@?$CFs?$HO?$CFs?5collation?5tailoring?5part?5s@ DB '%s~'
	DB	'%s collation tailoring part sizes:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@PNDPNOML@CollationDataWriter?3?3writeTailor@
CONST	SEGMENT
??_C@_0DC@PNDPNOML@CollationDataWriter?3?3writeTailor@ DB 'CollationDataW'
	DB	'riter::writeTailoring() failed: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@CCECMDLD@memory?5allocation?5?$CI?$CFld?5bytes?$CJ?5fo@
CONST	SEGMENT
??_C@_0DI@CCECMDLD@memory?5allocation?5?$CI?$CFld?5bytes?$CJ?5fo@ DB 'mem'
	DB	'ory allocation (%ld bytes) for file contents failed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KIPDILNG@?5?5error?5context?3?5?$CC?4?4?4?$CFs?$CC?5?$CB?5?$CC?$CFs?4?4@
CONST	SEGMENT
??_C@_0CD@KIPDILNG@?5?5error?5context?3?5?$CC?4?4?4?$CFs?$CC?5?$CB?5?$CC?$CFs?4?4@ DB ' '
	DB	' error context: "...%s" ! "%s..."', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JIOKCMDG@CollationBuilder?5failed?5at?5?$CFs?$HO?$CFs@
CONST	SEGMENT
??_C@_0EC@JIOKCMDG@CollationBuilder?5failed?5at?5?$CFs?$HO?$CFs@ DB 'Coll'
	DB	'ationBuilder failed at %s~%s/Sequence rule offset %ld: %s  %s'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06GFPLNGOC@search?$AA@
CONST	SEGMENT
??_C@_06GFPLNGOC@search?$AA@ DB 'search', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@POBGMJIK@failed?5to?5load?5root?5collator?5?$CIuc@
CONST	SEGMENT
??_C@_0DA@POBGMJIK@failed?5to?5load?5root?5collator?5?$CIuc@ DB 'failed t'
	DB	'o load root collator (ucadata.icu) - %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KEPHFBMB@Not?5building?5?$CFs?$HO?$CFs?5collation?5bin@
CONST	SEGMENT
??_C@_0CF@KEPHFBMB@Not?5building?5?$CFs?$HO?$CFs?5collation?5bin@ DB 'Not'
	DB	' building %s~%s collation binary', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OKEMGDJB@private?9?$AA@
CONST	SEGMENT
??_C@_08OKEMGDJB@private?9?$AA@ DB 'private-', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DONENFIN@?$CF?$CFCollationBin?$AA@
CONST	SEGMENT
??_C@_0P@DONENFIN@?$CF?$CFCollationBin?$AA@ DB '%%CollationBin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGFJPNPN@Version?$AA@
CONST	SEGMENT
??_C@_07NGFJPNPN@Version?$AA@ DB 'Version', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T86579 = -2572						; size = 4
$T86580 = -2560						; size = 4
$T86581 = -2548						; size = 4
$T86582 = -2536						; size = 4
$T86583 = -2524						; size = 4
$T86584 = -2512						; size = 4
$T86585 = -2500						; size = 4
$T86586 = -2488						; size = 4
$T86587 = -2476						; size = 4
$T86588 = -2464						; size = 4
$T86589 = -2452						; size = 4
$T86590 = -2440						; size = 4
$T86591 = -2428						; size = 4
$T86592 = -2416						; size = 4
_collationBin$ = -2212					; size = 4
_totalSize$ = -2200					; size = 4
_indexes$ = -2188					; size = 80
_dest$ = -2100						; size = 4
_capacity$ = -2088					; size = 4
_buffer$ = -2076					; size = 4
_postBuffer$78169 = -2064				; size = 100
_preBuffer$78168 = -1956				; size = 100
_reason$78162 = -1848					; size = 4
_t$ = -1836						; size = 4
_builder$ = -1824					; size = 400
_base$ = -1416						; size = 4
_importer$ = -1404					; size = 12
_parseError$ = -1384					; size = 72
_intStatus$ = -1304					; size = 4
_sr$78046 = -1292					; size = 4
_length$78036 = -1280					; size = 4
_ver$78035 = -1268					; size = 40
_sr$78033 = -1220					; size = 4
_line$ = -1208						; size = 4
_version$ = -1196					; size = 4
_haveRules$ = -1181					; size = 1
_rules$ = -1172						; size = 64
_subtag$ = -1100					; size = 1024
_token$ = -68						; size = 4
_comment$ = -56						; size = 12
_tokenValue$ = -36					; size = 4
_member$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_state$ = 8						; size = 4
_result$ = 12						; size = 4
_collationType$ = 16					; size = 4
_startline$ = 20					; size = 4
_status$ = 24						; size = 4
?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z PROC ; addCollation, COMDAT
; Line 813
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2564				; 00000a04H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2576]
	mov	ecx, 641				; 00000281H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 815
	mov	DWORD PTR _member$[ebp], 0
; Line 820
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 821
	mov	BYTE PTR _haveRules$[ebp], 0
; Line 826
	mov	BYTE PTR _version$[ebp], 0
	mov	BYTE PTR _version$[ebp+1], 0
	mov	BYTE PTR _version$[ebp+2], 0
	mov	BYTE PTR _version$[ebp+3], 0
$LN39@addCollati:
; Line 830
	lea	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 831
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
	mov	DWORD PTR _token$[ebp], eax
; Line 833
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN37@addCollati
; Line 835
	jmp	$LN38@addCollati
$LN37@addCollati:
; Line 838
	cmp	DWORD PTR _token$[ebp], 0
	je	SHORT $LN36@addCollati
; Line 840
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 841
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 843
	cmp	DWORD PTR _token$[ebp], 5
	jne	SHORT $LN35@addCollati
; Line 845
	push	OFFSET ??_C@_0BD@LJADOCP@unterminated?5table?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 847
	jmp	SHORT $LN34@addCollati
$LN35@addCollati:
; Line 849
	mov	eax, DWORD PTR _token$[ebp]
	mov	ecx, DWORD PTR ?tokenNames@@3PAPBDA[eax*4]
	push	ecx
	push	OFFSET ??_C@_0BE@ICNNHMFJ@Unexpected?5token?5?$CFs?$AA@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 12					; 0000000cH
$LN34@addCollati:
; Line 852
	mov	DWORD PTR $T86579[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86579[ebp]
	jmp	$LN40@addCollati
$LN36@addCollati:
; Line 855
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	lea	edx, DWORD PTR _subtag$[ebp]
	push	edx
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 857
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN33@addCollati
; Line 859
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 860
	mov	DWORD PTR $T86580[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86580[ebp]
	jmp	$LN40@addCollati
$LN33@addCollati:
; Line 863
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _subtag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ; parseResource
	add	esp, 16					; 00000010H
	mov	DWORD PTR _member$[ebp], eax
; Line 865
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN32@addCollati
; Line 867
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 868
	mov	DWORD PTR $T86581[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86581[ebp]
	jmp	$LN40@addCollati
$LN32@addCollati:
; Line 870
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN31@addCollati
	jmp	$LN30@addCollati
$LN31@addCollati:
; Line 874
	push	OFFSET ??_C@_07NGFJPNPN@Version?$AA@
	lea	eax, DWORD PTR _subtag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN29@addCollati
	mov	ecx, DWORD PTR _member$[ebp]
	call	?isString@SResource@@QBECXZ		; SResource::isString
	movsx	eax, al
	test	eax, eax
	je	$LN29@addCollati
; Line 876
	mov	eax, DWORD PTR _member$[ebp]
	mov	DWORD PTR _sr$78033[ebp], eax
; Line 878
	mov	ecx, DWORD PTR _sr$78033[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	DWORD PTR _length$78036[ebp], eax
; Line 880
	cmp	DWORD PTR _length$78036[ebp], 40	; 00000028H
	jl	SHORT $LN28@addCollati
; Line 882
	mov	DWORD PTR _length$78036[ebp], 39	; 00000027H
$LN28@addCollati:
; Line 885
	mov	esi, esp
	push	0
	push	40					; 00000028H
	lea	eax, DWORD PTR _ver$78035[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$78036[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _sr$78033[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADHW4EInvariant@12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 886
	lea	eax, DWORD PTR _ver$78035[ebp]
	push	eax
	lea	ecx, DWORD PTR _version$[ebp]
	push	ecx
	call	_u_versionFromString_56
	add	esp, 8
; Line 888
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 889
	mov	DWORD PTR _member$[ebp], 0
	jmp	$LN30@addCollati
$LN29@addCollati:
; Line 891
	push	OFFSET ??_C@_0P@DONENFIN@?$CF?$CFCollationBin?$AA@
	lea	eax, DWORD PTR _subtag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN26@addCollati
	jmp	$LN30@addCollati
$LN26@addCollati:
; Line 895
	push	OFFSET ??_C@_08DOCONEG@Sequence?$AA@
	lea	eax, DWORD PTR _subtag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@addCollati
	mov	ecx, DWORD PTR _member$[ebp]
	call	?isString@SResource@@QBECXZ		; SResource::isString
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN24@addCollati
; Line 897
	mov	eax, DWORD PTR _member$[ebp]
	mov	DWORD PTR _sr$78046[ebp], eax
; Line 898
	mov	eax, DWORD PTR _sr$78046[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 899
	mov	BYTE PTR _haveRules$[ebp], 1
; Line 904
	mov	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax+161]
	test	ecx, ecx
	jne	SHORT $LN23@addCollati
; Line 905
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 906
	mov	DWORD PTR _member$[ebp], 0
$LN23@addCollati:
; Line 909
	jmp	SHORT $LN30@addCollati
$LN24@addCollati:
; Line 911
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _member$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 912
	mov	DWORD PTR _member$[ebp], 0
$LN30@addCollati:
; Line 914
	mov	eax, DWORD PTR _member$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 915
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@addCollati
; Line 917
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 918
	mov	DWORD PTR $T86582[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86582[ebp]
	jmp	$LN40@addCollati
$LN21@addCollati:
; Line 920
	jmp	$LN39@addCollati
$LN38@addCollati:
; Line 922
	movsx	eax, BYTE PTR _haveRules$[ebp]
	test	eax, eax
	jne	SHORT $LN20@addCollati
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T86583[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86583[ebp]
	jmp	$LN40@addCollati
$LN20@addCollati:
; Line 930
	push	1
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_08OKEMGDJB@private?9?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	8
	push	OFFSET ??_C@_08OKEMGDJB@private?9?$AA@
	mov	ecx, DWORD PTR _collationType$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN19@addCollati
; Line 931
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN18@addCollati
; Line 932
	mov	esi, esp
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	push	OFFSET ??_C@_0CF@KEPHFBMB@Not?5building?5?$CFs?$HO?$CFs?5collation?5bin@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@addCollati:
; Line 934
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T86584[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86584[ebp]
	jmp	$LN40@addCollati
$LN19@addCollati:
; Line 937
	mov	eax, DWORD PTR _state$[ebp]
	movsx	ecx, BYTE PTR [eax+160]
	test	ecx, ecx
	jne	SHORT $LN17@addCollati
; Line 938
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN16@addCollati
; Line 939
	mov	esi, esp
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	push	OFFSET ??_C@_0CF@KEPHFBMB@Not?5building?5?$CFs?$HO?$CFs?5collation?5bin@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@addCollati:
; Line 941
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T86585[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86585[ebp]
	jmp	$LN40@addCollati
$LN17@addCollati:
; Line 943
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 945
	push	72					; 00000048H
	push	0
	lea	eax, DWORD PTR _parseError$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 946
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+140]
	push	eax
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??0GenrbImporter@?A0x82188031@@QAE@PBD0@Z ; `anonymous namespace'::GenrbImporter::GenrbImporter
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 947
	mov	esi, esp
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	DWORD PTR __imp_?getRoot@CollationRoot@icu_56@@SAPBUCollationTailoring@2@AAW4UErrorCode@@@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _base$[ebp], eax
; Line 948
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@addCollati
; Line 949
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0DA@POBGMJIK@failed?5to?5load?5root?5collator?5?$CIuc@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
; Line 950
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 951
	mov	DWORD PTR $T86586[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86586[ebp]
	jmp	$LN40@addCollati
$LN15@addCollati:
; Line 953
	mov	esi, esp
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??0CollationBuilder@icu_56@@QAE@PBUCollationTailoring@1@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 954
	push	1
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_06GFPLNGOC@search?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	6
	push	OFFSET ??_C@_06GFPLNGOC@search?$AA@
	mov	ecx, DWORD PTR _collationType$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN14@addCollati
; Line 955
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_?disableFastLatin@CollationBuilder@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@addCollati:
; Line 958
	mov	esi, esp
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp]
	push	ecx
	lea	edx, DWORD PTR _importer$[ebp]
	push	edx
	lea	eax, DWORD PTR _version$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rules$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_?parseAndBuild@CollationBuilder@icu_56@@QAEPAUCollationTailoring@2@ABVUnicodeString@2@QBEPAVImporter@CollationRuleParser@2@PAUUParseError@@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ; icu_56::LocalPointer<icu_56::CollationTailoring>::LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 959
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN13@addCollati
; Line 960
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_?getErrorReason@CollationBuilder@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _reason$78162[ebp], eax
; Line 961
	cmp	DWORD PTR _reason$78162[ebp], 0
	jne	SHORT $LN12@addCollati
	mov	DWORD PTR _reason$78162[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN12@addCollati:
; Line 964
	mov	eax, DWORD PTR _reason$78162[ebp]
	push	eax
	mov	ecx, DWORD PTR _intStatus$[ebp]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _parseError$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	push	OFFSET ??_C@_0EC@JIOKCMDG@CollationBuilder?5failed?5at?5?$CFs?$HO?$CFs@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 28					; 0000001cH
; Line 965
	movzx	eax, WORD PTR _parseError$[ebp+8]
	test	eax, eax
	jne	SHORT $LN10@addCollati
	movzx	eax, WORD PTR _parseError$[ebp+40]
	test	eax, eax
	je	SHORT $LN11@addCollati
$LN10@addCollati:
; Line 968
	lea	eax, DWORD PTR _preBuffer$78168[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp+8]
	push	ecx
	call	?escape@?A0x82188031@@YAXPB_WPAD@Z	; `anonymous namespace'::escape
	add	esp, 8
; Line 969
	lea	eax, DWORD PTR _postBuffer$78169[ebp]
	push	eax
	lea	ecx, DWORD PTR _parseError$[ebp+40]
	push	ecx
	call	?escape@?A0x82188031@@YAXPB_WPAD@Z	; `anonymous namespace'::escape
	add	esp, 8
; Line 970
	lea	eax, DWORD PTR _postBuffer$78169[ebp]
	push	eax
	lea	ecx, DWORD PTR _preBuffer$78168[ebp]
	push	ecx
	push	OFFSET ??_C@_0CD@KIPDILNG@?5?5error?5context?3?5?$CC?4?4?4?$CFs?$CC?5?$CB?5?$CC?$CFs?4?4@
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_error
	add	esp, 16					; 00000010H
$LN11@addCollati:
; Line 972
	call	_isStrict
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN8@addCollati
	lea	ecx, DWORD PTR _t$[ebp]
	call	?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::isNull
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN13@addCollati
$LN8@addCollati:
; Line 973
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR _intStatus$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 974
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 975
	mov	DWORD PTR $T86587[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86587[ebp]
	jmp	$LN40@addCollati
$LN13@addCollati:
; Line 978
	push	0
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z	; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 979
	mov	DWORD PTR _capacity$[ebp], 100000	; 000186a0H
; Line 980
	push	0
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
	mov	DWORD PTR _dest$[ebp], eax
; Line 981
	cmp	DWORD PTR _dest$[ebp], 0
	jne	$LN7@addCollati
; Line 983
	mov	esi, esp
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@CCECMDLD@memory?5allocation?5?$CI?$CFld?5bytes?$CJ?5fo@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 984
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 985
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 986
	mov	DWORD PTR $T86588[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86588[ebp]
	jmp	$LN40@addCollati
$LN7@addCollati:
; Line 990
	mov	esi, esp
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	eax, DWORD PTR _indexes$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	ecx, DWORD PTR _t$[ebp]
	call	??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator*
	push	eax
	call	DWORD PTR __imp_?writeTailoring@CollationDataWriter@icu_56@@SAHABUCollationTailoring@2@ABUCollationSettings@2@QAHPAEHAAW4UErrorCode@@@Z
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _totalSize$[ebp], eax
; Line 991
	cmp	DWORD PTR _intStatus$[ebp], 15		; 0000000fH
	jne	$LN6@addCollati
; Line 992
	mov	DWORD PTR _intStatus$[ebp], 0
; Line 993
	mov	eax, DWORD PTR _totalSize$[ebp]
	mov	DWORD PTR _capacity$[ebp], eax
; Line 994
	push	0
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
	mov	DWORD PTR _dest$[ebp], eax
; Line 995
	cmp	DWORD PTR _dest$[ebp], 0
	jne	$LN5@addCollati
; Line 997
	mov	esi, esp
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@CCECMDLD@memory?5allocation?5?$CI?$CFld?5bytes?$CJ?5fo@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 998
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 999
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1000
	mov	DWORD PTR $T86589[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86589[ebp]
	jmp	$LN40@addCollati
$LN5@addCollati:
; Line 1003
	mov	esi, esp
	lea	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	lea	eax, DWORD PTR _indexes$[ebp]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	ecx, DWORD PTR _t$[ebp]
	call	??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator*
	push	eax
	call	DWORD PTR __imp_?writeTailoring@CollationDataWriter@icu_56@@SAHABUCollationTailoring@2@ABUCollationSettings@2@QAHPAEHAAW4UErrorCode@@@Z
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _totalSize$[ebp], eax
$LN6@addCollati:
; Line 1005
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN4@addCollati
; Line 1007
	mov	eax, DWORD PTR _intStatus$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DC@PNDPNOML@CollationDataWriter?3?3writeTailor@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1008
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1009
	mov	DWORD PTR $T86590[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86590[ebp]
	jmp	$LN40@addCollati
$LN4@addCollati:
; Line 1011
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	$LN3@addCollati
; Line 1012
	mov	esi, esp
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	push	OFFSET ??_C@_0CH@GKEIHHBD@?$CFs?$HO?$CFs?5collation?5tailoring?5part?5s@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1013
	mov	esi, esp
	lea	eax, DWORD PTR _indexes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _totalSize$[ebp]
	push	ecx
	call	DWORD PTR __imp_?printSizes@CollationInfo@icu_56@@SAXHQBH@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1014
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+24]
	call	DWORD PTR __imp_?hasReordering@CollationSettings@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@addCollati
; Line 1015
	mov	esi, esp
	mov	eax, DWORD PTR _collationType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	push	edx
	push	OFFSET ??_C@_0CE@PIGANEBA@?$CFs?$HO?$CFs?5collation?5reordering?5range@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1017
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	eax, DWORD PTR [eax+24]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	edx, DWORD PTR [eax+24]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	lea	ecx, DWORD PTR _t$[ebp]
	call	??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	DWORD PTR __imp_?printReorderRanges@CollationInfo@icu_56@@SAXABUCollationData@2@PBHH@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@addCollati:
; Line 1020
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _totalSize$[ebp]
	push	edx
	push	OFFSET ??_C@_0P@DONENFIN@?$CF?$CFCollationBin?$AA@
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_bin_open
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _collationBin$[ebp], eax
; Line 1021
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _collationBin$[ebp]
	push	edx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
; Line 1022
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN1@addCollati
; Line 1023
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1024
	mov	DWORD PTR $T86591[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86591[ebp]
	jmp	SHORT $LN40@addCollati
$LN1@addCollati:
; Line 1027
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR $T86592[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _buffer$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _importer$[ebp]
	call	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T86592[ebp]
$LN40@addCollati:
; Line 1028
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN65@addCollati
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2576				; 00000a10H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN65@addCollati:
	DD	16					; 00000010H
	DD	$LN64@addCollati
$LN64@addCollati:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN47@addCollati
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN48@addCollati
	DD	-1100					; fffffbb4H
	DD	1024					; 00000400H
	DD	$LN49@addCollati
	DD	-1172					; fffffb6cH
	DD	64					; 00000040H
	DD	$LN50@addCollati
	DD	-1196					; fffffb54H
	DD	4
	DD	$LN51@addCollati
	DD	-1208					; fffffb48H
	DD	4
	DD	$LN52@addCollati
	DD	-1268					; fffffb0cH
	DD	40					; 00000028H
	DD	$LN53@addCollati
	DD	-1304					; fffffae8H
	DD	4
	DD	$LN54@addCollati
	DD	-1384					; fffffa98H
	DD	72					; 00000048H
	DD	$LN55@addCollati
	DD	-1404					; fffffa84H
	DD	12					; 0000000cH
	DD	$LN56@addCollati
	DD	-1824					; fffff8e0H
	DD	400					; 00000190H
	DD	$LN57@addCollati
	DD	-1836					; fffff8d4H
	DD	4
	DD	$LN58@addCollati
	DD	-1956					; fffff85cH
	DD	100					; 00000064H
	DD	$LN59@addCollati
	DD	-2064					; fffff7f0H
	DD	100					; 00000064H
	DD	$LN60@addCollati
	DD	-2076					; fffff7e4H
	DD	4
	DD	$LN61@addCollati
	DD	-2188					; fffff774H
	DD	80					; 00000050H
	DD	$LN62@addCollati
$LN62@addCollati:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN61@addCollati:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN60@addCollati:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN59@addCollati:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN58@addCollati:
	DB	116					; 00000074H
	DB	0
$LN57@addCollati:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN56@addCollati:
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN55@addCollati:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN54@addCollati:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN53@addCollati:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN52@addCollati:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN51@addCollati:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN50@addCollati:
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN49@addCollati:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	0
$LN48@addCollati:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN47@addCollati:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _rules$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _importer$[ebp]
	jmp	??1GenrbImporter@?A0x82188031@@UAE@XZ	; `anonymous namespace'::GenrbImporter::~GenrbImporter
__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _builder$[ebp]
	call	DWORD PTR __imp_??1CollationBuilder@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$3:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
__unwindfunclet$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z$4:
	lea	ecx, DWORD PTR _buffer$[ebp]
	jmp	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
__ehhandler$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2580]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?addCollation@@YAPAVTableResource@@PAUParseState@@PAV1@PBDIPAW4UErrorCode@@@Z ENDP ; addCollation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringBaseResource@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringBaseResource@@QBEHXZ PROC			; StringBaseResource::length, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringBaseResource@@QBEHXZ ENDP			; StringBaseResource::length
_TEXT	ENDS
EXTRN	__imp_??0Importer@CollationRuleParser@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GenrbImporter@?A0x82188031@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_in$ = 8						; size = 4
_out$ = 12						; size = 4
??0GenrbImporter@?A0x82188031@@QAE@PBD0@Z PROC		; `anonymous namespace'::GenrbImporter::GenrbImporter, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\parse.cpp
; Line 679
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0Importer@CollationRuleParser@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GenrbImporter@?A0x82188031@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _in$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _out$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0GenrbImporter@?A0x82188031@@QAE@PBD0@Z ENDP		; `anonymous namespace'::GenrbImporter::GenrbImporter
_TEXT	ENDS
PUBLIC	??_C@_06HFADPNPF@?2u?$CF04X?$AA@		; `string'
EXTRN	__imp__sprintf:PROC
;	COMDAT ??_C@_06HFADPNPF@?2u?$CF04X?$AA@
CONST	SEGMENT
??_C@_06HFADPNPF@?2u?$CF04X?$AA@ DB '\u%04X', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?escape@?A0x82188031@@YAXPB_WPAD@Z
_TEXT	SEGMENT
___c2$77988 = -44					; size = 2
_c$77986 = -32						; size = 4
_i$ = -20						; size = 4
_length$ = -8						; size = 4
_s$ = 8							; size = 4
_buffer$ = 12						; size = 4
?escape@?A0x82188031@@YAXPB_WPAD@Z PROC			; `anonymous namespace'::escape, COMDAT
; Line 788
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 789
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
; Line 790
	mov	DWORD PTR _i$[ebp], 0
$LN8@escape:
; Line 793
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$77986[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _c$77986[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN6@escape
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	je	SHORT $LN6@escape
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$77988[ebp], dx
	movzx	eax, WORD PTR ___c2$77988[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN6@escape
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	eax, DWORD PTR _c$77986[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$77988[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$77986[ebp], edx
$LN6@escape:
; Line 794
	cmp	DWORD PTR _c$77986[ebp], 0
	jne	SHORT $LN4@escape
; Line 795
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	BYTE PTR [eax], 0
; Line 796
	jmp	SHORT $LN9@escape
	jmp	SHORT $LN3@escape
$LN4@escape:
; Line 797
	cmp	DWORD PTR _c$77986[ebp], 32		; 00000020H
	jl	SHORT $LN2@escape
	cmp	DWORD PTR _c$77986[ebp], 126		; 0000007eH
	jg	SHORT $LN2@escape
; Line 799
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	cl, BYTE PTR _c$77986[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _buffer$[ebp]
	add	edx, 1
	mov	DWORD PTR _buffer$[ebp], edx
; Line 800
	jmp	SHORT $LN3@escape
$LN2@escape:
; Line 801
	mov	esi, esp
	mov	eax, DWORD PTR _c$77986[ebp]
	push	eax
	push	OFFSET ??_C@_06HFADPNPF@?2u?$CF04X?$AA@
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _buffer$[ebp], eax
$LN3@escape:
; Line 803
	jmp	$LN8@escape
$LN9@escape:
; Line 804
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?escape@?A0x82188031@@YAXPB_WPAD@Z ENDP			; `anonymous namespace'::escape
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?keepCollationType@@YACPBD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?keepCollationType@@YACPBD@Z PROC			; keepCollationType, COMDAT
; Line 1031
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1032
	mov	al, 1
; Line 1033
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?keepCollationType@@YACPBD@Z ENDP			; keepCollationType
_TEXT	ENDS
PUBLIC	??_C@_0BD@MBHNNJME@unterminated?5array?$AA@	; `string'
PUBLIC	??_C@_0BI@EHDLDCJP@Encountered?5empty?5array?$AA@ ; `string'
PUBLIC	??_C@_0BH@NIIDBJFK@?5array?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
;	COMDAT ??_C@_0BD@MBHNNJME@unterminated?5array?$AA@
CONST	SEGMENT
??_C@_0BD@MBHNNJME@unterminated?5array?$AA@ DB 'unterminated array', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EHDLDCJP@Encountered?5empty?5array?$AA@
CONST	SEGMENT
??_C@_0BI@EHDLDCJP@Encountered?5empty?5array?$AA@ DB 'Encountered empty a'
	DB	'rray', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NIIDBJFK@?5array?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BH@NIIDBJFK@?5array?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' array %s'
	DB	' at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseArray@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -276						; size = 4
_result$ = -76						; size = 4
_readToken$ = -61					; size = 1
_token$ = -52						; size = 4
_memberComments$ = -40					; size = 12
_tokenValue$ = -20					; size = 4
_member$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseArray@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseArray, COMDAT
; Line 1274
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1275
	mov	DWORD PTR _member$[ebp], 0
; Line 1279
	mov	BYTE PTR _readToken$[ebp], 0
; Line 1281
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_array_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 1283
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN13@parseArray
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@parseArray
$LN13@parseArray:
; Line 1285
	xor	eax, eax
	jmp	$LN15@parseArray
$LN14@parseArray:
; Line 1287
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@parseArray
; Line 1288
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN17@parseArray
	mov	DWORD PTR tv81[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN18@parseArray
$LN17@parseArray:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv81[ebp], eax
$LN18@parseArray:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	push	OFFSET ??_C@_0BH@NIIDBJFK@?5array?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@parseArray:
; Line 1291
	lea	eax, DWORD PTR _memberComments$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
$LN11@parseArray:
; Line 1297
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	call	_ustr_setlen
	add	esp, 12					; 0000000cH
; Line 1300
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1303
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN9@parseArray
; Line 1305
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
; Line 1306
	movsx	eax, BYTE PTR _readToken$[ebp]
	test	eax, eax
	jne	SHORT $LN8@parseArray
; Line 1307
	push	OFFSET ??_C@_0BI@EHDLDCJP@Encountered?5empty?5array?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_warning
	add	esp, 8
$LN8@parseArray:
; Line 1309
	jmp	$LN10@parseArray
$LN9@parseArray:
; Line 1312
	cmp	DWORD PTR _token$[ebp], 5
	jne	SHORT $LN7@parseArray
; Line 1314
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1315
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 1316
	push	OFFSET ??_C@_0BD@MBHNNJME@unterminated?5array?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1317
	xor	eax, eax
	jmp	$LN15@parseArray
$LN7@parseArray:
; Line 1321
	cmp	DWORD PTR _token$[ebp], 0
	jne	SHORT $LN6@parseArray
; Line 1323
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tokenValue$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	push	eax
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
; Line 1324
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	0
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _member$[ebp], eax
; Line 1326
	jmp	SHORT $LN5@parseArray
$LN6@parseArray:
; Line 1328
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?parseResource@@YAPAUSResource@@PAUParseState@@PADPBUUString@@PAW4UErrorCode@@@Z ; parseResource
	add	esp, 16					; 00000010H
	mov	DWORD PTR _member$[ebp], eax
$LN5@parseArray:
; Line 1331
	cmp	DWORD PTR _member$[ebp], 0
	je	SHORT $LN3@parseArray
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@parseArray
$LN3@parseArray:
; Line 1333
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1334
	xor	eax, eax
	jmp	$LN15@parseArray
$LN4@parseArray:
; Line 1337
	mov	eax, DWORD PTR _member$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@ArrayResource@@QAEXPAUSResource@@@Z ; ArrayResource::add
; Line 1340
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1342
	cmp	DWORD PTR _token$[ebp], 3
	jne	SHORT $LN2@parseArray
; Line 1344
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
$LN2@parseArray:
; Line 1347
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseArray
; Line 1349
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1350
	xor	eax, eax
	jmp	SHORT $LN15@parseArray
$LN1@parseArray:
; Line 1352
	mov	BYTE PTR _readToken$[ebp], 1
; Line 1353
	jmp	$LN11@parseArray
$LN10@parseArray:
; Line 1355
	lea	eax, DWORD PTR _memberComments$[ebp]
	push	eax
	call	_ustr_deinit
	add	esp, 4
; Line 1356
	mov	eax, DWORD PTR _result$[ebp]
$LN15@parseArray:
; Line 1357
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@parseArray
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@parseArray:
	DD	2
	DD	$LN21@parseArray
$LN21@parseArray:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN19@parseArray
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN20@parseArray
$LN20@parseArray:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN19@parseArray:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?parseArray@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseArray
_TEXT	ENDS
PUBLIC	??_C@_0BN@EFDCCLLN@Encountered?5empty?5int?5vector?$AA@ ; `string'
PUBLIC	??_C@_0BI@HLFABOBN@?5vector?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
EXTRN	?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z:PROC ; IntVectorResource::add
EXTRN	__imp__strtoul:PROC
EXTRN	_intvector_open:PROC
;	COMDAT ??_C@_0BN@EFDCCLLN@Encountered?5empty?5int?5vector?$AA@
CONST	SEGMENT
??_C@_0BN@EFDCCLLN@Encountered?5empty?5int?5vector?$AA@ DB 'Encountered e'
	DB	'mpty int vector', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HLFABOBN@?5vector?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@HLFABOBN@?5vector?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' vector '
	DB	'%s at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseIntVector@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -300						; size = 4
_result$ = -100						; size = 4
_memberComments$ = -88					; size = 12
_len$ = -68						; size = 4
_stopstring$ = -56					; size = 4
_readToken$ = -41					; size = 1
_value$ = -32						; size = 4
_string$ = -20						; size = 4
_token$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseIntVector@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseIntVector, COMDAT
; Line 1361
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1365
	mov	BYTE PTR _readToken$[ebp], 0
; Line 1370
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_intvector_open
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 1372
	cmp	DWORD PTR _result$[ebp], 0
	je	SHORT $LN11@parseIntVe
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@parseIntVe
$LN11@parseIntVe:
; Line 1374
	xor	eax, eax
	jmp	$LN13@parseIntVe
$LN12@parseIntVe:
; Line 1377
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN10@parseIntVe
; Line 1378
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN15@parseIntVe
	mov	DWORD PTR tv81[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN16@parseIntVe
$LN15@parseIntVe:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv81[ebp], eax
$LN16@parseIntVe:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	push	OFFSET ??_C@_0BI@HLFABOBN@?5vector?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@parseIntVe:
; Line 1380
	lea	eax, DWORD PTR _memberComments$[ebp]
	push	eax
	call	_ustr_init
	add	esp, 4
$LN9@parseIntVe:
; Line 1384
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	call	_ustr_setlen
	add	esp, 12					; 0000000cH
; Line 1387
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _memberComments$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1389
	cmp	DWORD PTR _token$[ebp], 2
	jne	SHORT $LN7@parseIntVe
; Line 1392
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
; Line 1393
	movsx	eax, BYTE PTR _readToken$[ebp]
	test	eax, eax
	jne	SHORT $LN6@parseIntVe
; Line 1394
	push	OFFSET ??_C@_0BN@EFDCCLLN@Encountered?5empty?5int?5vector?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_warning
	add	esp, 8
$LN6@parseIntVe:
; Line 1396
	lea	eax, DWORD PTR _memberComments$[ebp]
	push	eax
	call	_ustr_deinit
	add	esp, 4
; Line 1397
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN13@parseIntVe
$LN7@parseIntVe:
; Line 1400
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ; getInvariantString
	add	esp, 16					; 00000010H
	mov	DWORD PTR _string$[ebp], eax
; Line 1402
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@parseIntVe
; Line 1404
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1405
	xor	eax, eax
	jmp	$LN13@parseIntVe
$LN5@parseIntVe:
; Line 1409
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _stopstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 1410
	mov	eax, DWORD PTR _stopstring$[ebp]
	sub	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR _len$[ebp], eax
; Line 1412
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _len$[ebp], eax
	jne	SHORT $LN4@parseIntVe
; Line 1414
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _result$[ebp]
	call	?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z ; IntVectorResource::add
; Line 1415
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1416
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?peekToken@@YA?AW4ETokenType@@PAUParseState@@IPAPAUUString@@PAIPAU3@PAW4UErrorCode@@@Z ; peekToken
	add	esp, 24					; 00000018H
	mov	DWORD PTR _token$[ebp], eax
; Line 1418
	jmp	SHORT $LN3@parseIntVe
$LN4@parseIntVe:
; Line 1420
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1421
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
$LN3@parseIntVe:
; Line 1424
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseIntVe
; Line 1426
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_res_close
	add	esp, 4
; Line 1427
	xor	eax, eax
	jmp	SHORT $LN13@parseIntVe
$LN2@parseIntVe:
; Line 1432
	cmp	DWORD PTR _token$[ebp], 3
	jne	SHORT $LN1@parseIntVe
; Line 1434
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getToken@@YA?AW4ETokenType@@PAUParseState@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; getToken
	add	esp, 20					; 00000014H
$LN1@parseIntVe:
; Line 1436
	mov	BYTE PTR _readToken$[ebp], 1
; Line 1437
	jmp	$LN9@parseIntVe
$LN13@parseIntVe:
; Line 1444
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@parseIntVe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@parseIntVe:
	DD	2
	DD	$LN19@parseIntVe
$LN19@parseIntVe:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN17@parseIntVe
	DD	-88					; ffffffa8H
	DD	12					; 0000000cH
	DD	$LN18@parseIntVe
$LN18@parseIntVe:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN17@parseIntVe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
?parseIntVector@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseIntVector
_TEXT	ENDS
PUBLIC	??_C@_0EA@CELGHIGO@invariant?5characters?5required?5fo@ ; `string'
;	COMDAT ??_C@_0EA@CELGHIGO@invariant?5characters?5required?5fo@
CONST	SEGMENT
??_C@_0EA@CELGHIGO@invariant?5characters?5required?5fo@ DB 'invariant cha'
	DB	'racters required for table keys, binary data, etc.', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_count$ = -32						; size = 4
_result$ = -20						; size = 4
_tokenValue$ = -8					; size = 4
_state$ = 8						; size = 4
_line$ = 12						; size = 4
_comment$ = 16						; size = 4
_status$ = 20						; size = 4
?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z PROC ; getInvariantString, COMDAT
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 281
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _comment$[ebp]
	push	edx
	lea	eax, DWORD PTR _tokenValue$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 283
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getInvaria
; Line 285
	xor	eax, eax
	jmp	$LN4@getInvaria
$LN3@getInvaria:
; Line 288
	mov	eax, DWORD PTR _tokenValue$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
; Line 289
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tokenValue$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_uprv_isInvariantUString_56
	add	esp, 8
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN2@getInvaria
; Line 290
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 3
; Line 291
	push	OFFSET ??_C@_0EA@CELGHIGO@invariant?5characters?5required?5fo@
	mov	eax, DWORD PTR _line$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_error
	add	esp, 8
; Line 292
	xor	eax, eax
	jmp	SHORT $LN4@getInvaria
$LN2@getInvaria:
; Line 295
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 297
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@getInvaria
; Line 299
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 300
	xor	eax, eax
	jmp	SHORT $LN4@getInvaria
$LN1@getInvaria:
; Line 303
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tokenValue$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 304
	mov	eax, DWORD PTR _result$[ebp]
$LN4@getInvaria:
; Line 305
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@getInvaria
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@getInvaria:
	DD	1
	DD	$LN7@getInvaria
$LN7@getInvaria:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@getInvaria
$LN6@getInvaria:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ENDP ; getInvariantString
_TEXT	ENDS
PUBLIC	??_C@_0BP@FIDCNKGJ@Encountered?5empty?5binary?5value?$AA@ ; `string'
PUBLIC	??_C@_0DB@HKAPFEMA@Encountered?5invalid?5binary?5value@ ; `string'
PUBLIC	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ	; icu_56::LocalPointerBase<unsigned char>::getAlias
PUBLIC	??A?$LocalMemory@E@icu_56@@QBEAAEH@Z		; icu_56::LocalMemory<unsigned char>::operator[]
PUBLIC	??A?$LocalMemory@D@icu_56@@QBEAADH@Z		; icu_56::LocalMemory<char>::operator[]
PUBLIC	?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ	; icu_56::LocalPointerBase<char>::getAlias
PUBLIC	??_C@_0BI@CFLPKBPA@?5binary?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
PUBLIC	??1?$LocalMemory@D@icu_56@@QAE@XZ		; icu_56::LocalMemory<char>::~LocalMemory<char>
PUBLIC	?isNull@?$LocalPointerBase@D@icu_56@@QBECXZ	; icu_56::LocalPointerBase<char>::isNull
PUBLIC	??0?$LocalMemory@D@icu_56@@QAE@PAD@Z		; icu_56::LocalMemory<char>::LocalMemory<char>
;	COMDAT ??_C@_0BP@FIDCNKGJ@Encountered?5empty?5binary?5value?$AA@
CONST	SEGMENT
??_C@_0BP@FIDCNKGJ@Encountered?5empty?5binary?5value?$AA@ DB 'Encountered'
	DB	' empty binary value', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@HKAPFEMA@Encountered?5invalid?5binary?5value@
CONST	SEGMENT
??_C@_0DB@HKAPFEMA@Encountered?5invalid?5binary?5value@ DB 'Encountered i'
	DB	'nvalid binary value (length is odd)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFLPKBPA@?5binary?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@CFLPKBPA@?5binary?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' binary '
	DB	'%s at line %i ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$1
__ehfuncinfo$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv133 = -388						; size = 4
$T86654 = -380						; size = 4
$T86655 = -368						; size = 4
$T86658 = -356						; size = 4
$T86659 = -344						; size = 4
$T86660 = -332						; size = 4
$T86661 = -320						; size = 4
$T86662 = -308						; size = 4
_len$78576 = -104					; size = 4
_stopstring$78574 = -92					; size = 4
_i$78570 = -80						; size = 4
_toConv$78569 = -68					; size = 3
_value$78566 = -56					; size = 4
_count$ = -44						; size = 4
_string$ = -32						; size = 4
_line$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseBinary, COMDAT
; Line 1448
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1450
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ; getInvariantString
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	call	??0?$LocalMemory@D@icu_56@@QAE@PAD@Z	; icu_56::LocalMemory<char>::LocalMemory<char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1451
	lea	ecx, DWORD PTR _string$[ebp]
	call	?isNull@?$LocalPointerBase@D@icu_56@@QBECXZ ; icu_56::LocalPointerBase<char>::isNull
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN12@parseBinar
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseBinar
$LN12@parseBinar:
; Line 1453
	mov	DWORD PTR $T86654[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86654[ebp]
	jmp	$LN14@parseBinar
$LN13@parseBinar:
; Line 1456
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1457
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@parseBinar
; Line 1459
	mov	DWORD PTR $T86655[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86655[ebp]
	jmp	$LN14@parseBinar
$LN11@parseBinar:
; Line 1462
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN10@parseBinar
; Line 1463
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN16@parseBinar
	mov	DWORD PTR tv133[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN17@parseBinar
$LN16@parseBinar:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv133[ebp], eax
$LN17@parseBinar:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv133[ebp]
	push	edx
	push	OFFSET ??_C@_0BI@CFLPKBPA@?5binary?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@parseBinar:
; Line 1466
	lea	ecx, DWORD PTR _string$[ebp]
	call	?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ ; icu_56::LocalPointerBase<char>::getAlias
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
; Line 1467
	cmp	DWORD PTR _count$[ebp], 0
	jbe	$LN9@parseBinar
; Line 1468
	mov	eax, DWORD PTR _count$[ebp]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	$LN8@parseBinar
; Line 1469
	push	0
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z	; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1470
	push	0
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
	test	eax, eax
	jne	SHORT $LN7@parseBinar
; Line 1472
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1473
	mov	DWORD PTR $T86658[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86658[ebp]
	jmp	$LN14@parseBinar
$LN7@parseBinar:
; Line 1476
	mov	BYTE PTR _toConv$78569[ebp], 0
	mov	BYTE PTR _toConv$78569[ebp+1], 0
	mov	BYTE PTR _toConv$78569[ebp+2], 0
; Line 1477
	mov	DWORD PTR _i$78570[ebp], 0
	jmp	SHORT $LN6@parseBinar
$LN5@parseBinar:
	mov	eax, DWORD PTR _i$78570[ebp]
	add	eax, 2
	mov	DWORD PTR _i$78570[ebp], eax
$LN6@parseBinar:
	mov	eax, DWORD PTR _i$78570[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jae	$LN4@parseBinar
; Line 1479
	mov	eax, DWORD PTR _i$78570[ebp]
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	call	??A?$LocalMemory@D@icu_56@@QBEAADH@Z	; icu_56::LocalMemory<char>::operator[]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _toConv$78569[ebp], cl
; Line 1480
	mov	eax, DWORD PTR _i$78570[ebp]
	add	eax, 1
	push	eax
	lea	ecx, DWORD PTR _string$[ebp]
	call	??A?$LocalMemory@D@icu_56@@QBEAADH@Z	; icu_56::LocalMemory<char>::operator[]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _toConv$78569[ebp+1], cl
; Line 1483
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _stopstring$78574[ebp]
	push	eax
	lea	ecx, DWORD PTR _toConv$78569[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ebx, eax
	mov	edx, DWORD PTR _i$78570[ebp]
	shr	edx, 1
	push	edx
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	??A?$LocalMemory@E@icu_56@@QBEAAEH@Z	; icu_56::LocalMemory<unsigned char>::operator[]
	mov	BYTE PTR [eax], bl
; Line 1484
	mov	eax, DWORD PTR _stopstring$78574[ebp]
	lea	ecx, DWORD PTR _toConv$78569[ebp]
	sub	eax, ecx
	mov	DWORD PTR _len$78576[ebp], eax
; Line 1486
	cmp	DWORD PTR _len$78576[ebp], 2
	je	SHORT $LN3@parseBinar
; Line 1488
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
; Line 1489
	mov	DWORD PTR $T86659[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86659[ebp]
	jmp	$LN14@parseBinar
$LN3@parseBinar:
; Line 1491
	jmp	$LN5@parseBinar
$LN4@parseBinar:
; Line 1493
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	0
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	push	eax
	mov	edx, DWORD PTR _count$[ebp]
	shr	edx, 1
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_bin_open
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T86660[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _value$78566[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86660[ebp]
	jmp	$LN14@parseBinar
; Line 1495
	jmp	SHORT $LN2@parseBinar
$LN8@parseBinar:
; Line 1497
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
; Line 1498
	push	OFFSET ??_C@_0DB@HKAPFEMA@Encountered?5invalid?5binary?5value@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 8
; Line 1499
	mov	DWORD PTR $T86661[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86661[ebp]
	jmp	SHORT $LN14@parseBinar
$LN2@parseBinar:
; Line 1502
	jmp	SHORT $LN1@parseBinar
$LN9@parseBinar:
; Line 1504
	push	OFFSET ??_C@_0BP@FIDCNKGJ@Encountered?5empty?5binary?5value?$AA@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_warning
	add	esp, 8
; Line 1505
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	0
	push	0
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	call	_bin_open
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T86662[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86662[ebp]
	jmp	SHORT $LN14@parseBinar
$LN1@parseBinar:
; Line 1507
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _string$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
$LN14@parseBinar:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@parseBinar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@parseBinar:
	DD	5
	DD	$LN26@parseBinar
$LN26@parseBinar:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN20@parseBinar
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN21@parseBinar
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN22@parseBinar
	DD	-68					; ffffffbcH
	DD	3
	DD	$LN23@parseBinar
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN24@parseBinar
$LN24@parseBinar:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN23@parseBinar:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	0
$LN22@parseBinar:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN21@parseBinar:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN20@parseBinar:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _string$[ebp]
	jmp	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
__unwindfunclet$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$1:
	lea	ecx, DWORD PTR _value$78566[ebp]
	jmp	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
__ehhandler$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseBinary@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseBinary
PUBLIC	??_C@_0CP@KOFJPFBN@Encountered?5empty?5integer?4?5Defau@ ; `string'
PUBLIC	??_C@_0BJ@IPNHCEPE@?5integer?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
EXTRN	_int_open:PROC
;	COMDAT ??_C@_0CP@KOFJPFBN@Encountered?5empty?5integer?4?5Defau@
CONST	SEGMENT
??_C@_0CP@KOFJPFBN@Encountered?5empty?5integer?4?5Defau@ DB 'Encountered '
	DB	'empty integer. Default value is 0.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IPNHCEPE@?5integer?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BJ@IPNHCEPE@?5integer?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' intege'
	DB	'r %s at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseInteger@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv91 = -256						; size = 4
_len$ = -56						; size = 4
_stopstring$ = -44					; size = 4
_string$ = -32						; size = 4
_value$ = -20						; size = 4
_result$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseInteger@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseInteger, COMDAT
; Line 1511
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1512
	mov	DWORD PTR _result$[ebp], 0
; Line 1518
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ; getInvariantString
	add	esp, 16					; 00000010H
	mov	DWORD PTR _string$[ebp], eax
; Line 1520
	cmp	DWORD PTR _string$[ebp], 0
	je	SHORT $LN6@parseInteg
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseInteg
$LN6@parseInteg:
; Line 1522
	xor	eax, eax
	jmp	$LN8@parseInteg
$LN7@parseInteg:
; Line 1525
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1527
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@parseInteg
; Line 1529
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1530
	xor	eax, eax
	jmp	$LN8@parseInteg
$LN5@parseInteg:
; Line 1533
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@parseInteg
; Line 1534
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN10@parseInteg
	mov	DWORD PTR tv91[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN11@parseInteg
$LN10@parseInteg:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv91[ebp], eax
$LN11@parseInteg:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	push	OFFSET ??_C@_0BJ@IPNHCEPE@?5integer?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@parseInteg:
; Line 1537
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	test	eax, eax
	ja	SHORT $LN3@parseInteg
; Line 1539
	push	OFFSET ??_C@_0CP@KOFJPFBN@Encountered?5empty?5integer?4?5Defau@
	mov	eax, DWORD PTR _startline$[ebp]
	push	eax
	call	_warning
	add	esp, 8
$LN3@parseInteg:
; Line 1544
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _stopstring$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 1545
	mov	eax, DWORD PTR _stopstring$[ebp]
	sub	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR _len$[ebp], eax
; Line 1546
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _len$[ebp], eax
	jne	SHORT $LN2@parseInteg
; Line 1548
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_int_open
	add	esp, 20					; 00000014H
	mov	DWORD PTR _result$[ebp], eax
; Line 1550
	jmp	SHORT $LN1@parseInteg
$LN2@parseInteg:
; Line 1552
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 10			; 0000000aH
$LN1@parseInteg:
; Line 1554
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1556
	mov	eax, DWORD PTR _result$[ebp]
$LN8@parseInteg:
; Line 1557
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@parseInteg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@parseInteg:
	DD	1
	DD	$LN13@parseInteg
$LN13@parseInteg:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN12@parseInteg
$LN12@parseInteg:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
?parseInteger@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseInteger
_TEXT	ENDS
PUBLIC	??_C@_0BM@FBPAECF@couldn?8t?5open?5input?5file?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BI@HNDKNCDL@?5import?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_T_FileStream_read:PROC
EXTRN	_T_FileStream_size:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_0BM@FBPAECF@couldn?8t?5open?5input?5file?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BM@FBPAECF@couldn?8t?5open?5input?5file?5?$CFs?$AA@ DB 'couldn''t '
	DB	'open input file %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HNDKNCDL@?5import?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BI@HNDKNCDL@?5import?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' import '
	DB	'%s at line %i ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$2
__ehfuncinfo$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv93 = -440						; size = 4
$T86688 = -432						; size = 4
$T86689 = -420						; size = 4
$T86692 = -408						; size = 8
$T86693 = -392						; size = 8
$T86694 = -376						; size = 4
$T86695 = -364						; size = 4
$T86696 = -352						; size = 4
$T86697 = -340						; size = 4
_data$ = -136						; size = 4
_len$ = -124						; size = 4
_file$ = -112						; size = 4
_fullname$ = -100					; size = 56
_filename$ = -36					; size = 4
_line$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseImport, COMDAT
; Line 1561
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1563
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ; getInvariantString
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??0?$LocalMemory@D@icu_56@@QAE@PAD@Z	; icu_56::LocalMemory<char>::LocalMemory<char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1564
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@parseImpor
; Line 1566
	mov	DWORD PTR $T86688[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86688[ebp]
	jmp	$LN8@parseImpor
$LN7@parseImpor:
; Line 1569
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1571
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@parseImpor
; Line 1573
	mov	DWORD PTR $T86689[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86689[ebp]
	jmp	$LN8@parseImpor
$LN6@parseImpor:
; Line 1576
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@parseImpor
; Line 1577
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN10@parseImpor
	mov	DWORD PTR tv93[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN11@parseImpor
$LN10@parseImpor:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv93[ebp], eax
$LN11@parseImpor:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv93[ebp]
	push	edx
	push	OFFSET ??_C@_0BI@HNDKNCDL@?5import?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@parseImpor:
; Line 1581
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1582
	mov	eax, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN4@parseImpor
; Line 1583
	mov	esi, esp
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	lea	ecx, DWORD PTR $T86692[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	lea	eax, DWORD PTR $T86692[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@parseImpor:
; Line 1585
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ ; icu_56::LocalPointerBase<char>::getAlias
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR $T86693[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T86693[ebp]
	push	ecx
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1586
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseImpor
; Line 1587
	mov	DWORD PTR $T86694[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86694[ebp]
	jmp	$LN8@parseImpor
$LN3@parseImpor:
; Line 1590
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax
; Line 1591
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN2@parseImpor
; Line 1593
	lea	ecx, DWORD PTR _filename$[ebp]
	call	?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ ; icu_56::LocalPointerBase<char>::getAlias
	push	eax
	push	OFFSET ??_C@_0BM@FBPAECF@couldn?8t?5open?5input?5file?5?$CFs?$AA@
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_error
	add	esp, 12					; 0000000cH
; Line 1594
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 4
; Line 1595
	mov	DWORD PTR $T86695[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86695[ebp]
	jmp	$LN8@parseImpor
$LN2@parseImpor:
; Line 1598
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 1599
	push	0
	lea	ecx, DWORD PTR _data$[ebp]
	call	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z	; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1600
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
	test	eax, eax
	jne	SHORT $LN1@parseImpor
; Line 1602
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1603
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 1604
	mov	DWORD PTR $T86696[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86696[ebp]
	jmp	$LN8@parseImpor
$LN1@parseImpor:
; Line 1607
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
; Line 1608
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 1610
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	push	eax
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _state$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	push	edx
	call	_bin_open
	add	esp, 28					; 0000001cH
	mov	DWORD PTR $T86697[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
	mov	eax, DWORD PTR $T86697[ebp]
$LN8@parseImpor:
; Line 1611
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@parseImpor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN21@parseImpor:
	DD	4
	DD	$LN20@parseImpor
$LN20@parseImpor:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@parseImpor
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN16@parseImpor
	DD	-100					; ffffff9cH
	DD	56					; 00000038H
	DD	$LN17@parseImpor
	DD	-136					; ffffff78H
	DD	4
	DD	$LN18@parseImpor
$LN18@parseImpor:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN17@parseImpor:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN16@parseImpor:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN15@parseImpor:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1?$LocalMemory@D@icu_56@@QAE@XZ	; icu_56::LocalMemory<char>::~LocalMemory<char>
__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _fullname$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z$2:
	lea	ecx, DWORD PTR _data$[ebp]
	jmp	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
__ehhandler$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseImport@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseImport
PUBLIC	??_C@_0BN@LBOOCDMJ@couldn?8t?5open?5input?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@MLLGNBJA@?5include?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ ; `string'
EXTRN	_strcpy:PROC
;	COMDAT ??_C@_0BN@LBOOCDMJ@couldn?8t?5open?5input?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@LBOOCDMJ@couldn?8t?5open?5input?5file?5?$CFs?6?$AA@ DB 'couldn'''
	DB	't open input file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MLLGNBJA@?5include?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
CONST	SEGMENT
??_C@_0BJ@MLLGNBJA@?5include?5?$CFs?5at?5line?5?$CFi?5?6?$AA@ DB ' includ'
	DB	'e %s at line %i ', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseInclude@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv92 = -316						; size = 4
_uBuffer$ = -116					; size = 4
_cp$ = -104						; size = 4
_count$ = -92						; size = 4
_fullname$ = -80					; size = 4
_ucbuf$ = -68						; size = 4
_pTarget$ = -56						; size = 4
_line$ = -44						; size = 4
_filename$ = -32					; size = 4
_len$ = -20						; size = 4
_result$ = -8						; size = 4
_state$ = 8						; size = 4
_tag$ = 12						; size = 4
_startline$ = 16					; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
?parseInclude@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z PROC ; parseInclude, COMDAT
; Line 1615
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1617
	mov	DWORD PTR _len$[ebp], 0
; Line 1620
	mov	DWORD PTR _pTarget$[ebp], 0
; Line 1623
	mov	DWORD PTR _fullname$[ebp], 0
; Line 1624
	mov	DWORD PTR _count$[ebp], 0
; Line 1625
	mov	DWORD PTR _cp$[ebp], 0
; Line 1626
	mov	DWORD PTR _uBuffer$[ebp], 0
; Line 1628
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	push	edx
	call	?getInvariantString@@YAPADPAUParseState@@PAIPAUUString@@PAW4UErrorCode@@@Z ; getInvariantString
	add	esp, 16					; 00000010H
	mov	DWORD PTR _filename$[ebp], eax
; Line 1629
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
; Line 1631
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseInclu
; Line 1633
	xor	eax, eax
	jmp	$LN10@parseInclu
$LN9@parseInclu:
; Line 1636
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _state$[ebp]
	push	ecx
	call	?expect@@YAXPAUParseState@@W4ETokenType@@PAPAUUString@@PAU3@PAIPAW4UErrorCode@@@Z ; expect
	add	esp, 24					; 00000018H
; Line 1638
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@parseInclu
; Line 1640
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1641
	xor	eax, eax
	jmp	$LN10@parseInclu
$LN8@parseInclu:
; Line 1644
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@parseInclu
; Line 1645
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN12@parseInclu
	mov	DWORD PTR tv92[ebp], OFFSET ??_C@_06OJHGLDPL@?$CInull?$CJ?$AA@
	jmp	SHORT $LN13@parseInclu
$LN12@parseInclu:
	mov	eax, DWORD PTR _tag$[ebp]
	mov	DWORD PTR tv92[ebp], eax
$LN13@parseInclu:
	mov	esi, esp
	mov	ecx, DWORD PTR _startline$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv92[ebp]
	push	edx
	push	OFFSET ??_C@_0BJ@MLLGNBJA@?5include?5?$CFs?5at?5line?5?$CFi?5?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@parseInclu:
; Line 1648
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _count$[ebp]
	lea	eax, DWORD PTR [ecx+edx+2]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _fullname$[ebp], eax
; Line 1650
	cmp	DWORD PTR _fullname$[ebp], 0
	jne	SHORT $LN6@parseInclu
; Line 1652
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1653
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1654
	xor	eax, eax
	jmp	$LN10@parseInclu
$LN6@parseInclu:
; Line 1657
	mov	eax, DWORD PTR _state$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	$LN5@parseInclu
; Line 1658
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+140]
	movsx	ecx, BYTE PTR [eax+ecx-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN4@parseInclu
; Line 1661
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _fullname$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 1663
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _fullname$[ebp]
	mov	BYTE PTR [edx+ecx], 92			; 0000005cH
; Line 1664
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	edx, DWORD PTR _fullname$[ebp]
	mov	BYTE PTR [edx+ecx+1], 0
; Line 1666
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullname$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1668
	jmp	SHORT $LN3@parseInclu
$LN4@parseInclu:
; Line 1670
	mov	eax, DWORD PTR _state$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	mov	edx, DWORD PTR _fullname$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 1671
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullname$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN3@parseInclu:
; Line 1673
	jmp	SHORT $LN2@parseInclu
$LN5@parseInclu:
; Line 1674
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullname$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN2@parseInclu:
; Line 1677
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	call	_getShowWarning
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	mov	eax, DWORD PTR _fullname$[ebp]
	push	eax
	call	_ucbuf_open
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ucbuf$[ebp], eax
; Line 1679
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseInclu
; Line 1680
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@LBOOCDMJ@couldn?8t?5open?5input?5file?5?$CFs?6?$AA@
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_error
	add	esp, 12					; 0000000cH
; Line 1681
	xor	eax, eax
	jmp	SHORT $LN10@parseInclu
$LN1@parseInclu:
; Line 1684
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ucbuf$[ebp]
	push	edx
	call	_ucbuf_getBuffer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _uBuffer$[ebp], eax
; Line 1685
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _uBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _state$[ebp]
	mov	eax, DWORD PTR [edx+136]
	push	eax
	call	_string_open
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
; Line 1687
	mov	eax, DWORD PTR _ucbuf$[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 1689
	mov	eax, DWORD PTR _pTarget$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1691
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1692
	mov	eax, DWORD PTR _fullname$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1694
	mov	eax, DWORD PTR _result$[ebp]
$LN10@parseInclu:
; Line 1695
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@parseInclu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@parseInclu:
	DD	3
	DD	$LN17@parseInclu
$LN17@parseInclu:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN14@parseInclu
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN15@parseInclu
	DD	-104					; ffffff98H
	DD	4
	DD	$LN16@parseInclu
$LN16@parseInclu:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	0
$LN15@parseInclu:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN14@parseInclu:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?parseInclude@@YAPAUSResource@@PAUParseState@@PADIPBUUString@@PAW4UErrorCode@@@Z ENDP ; parseInclude
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::LocalPointerBase<icu_56::CollationTailoring>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z PROC ; icu_56::LocalPointer<icu_56::CollationTailoring>::LocalPointer<icu_56::CollationTailoring>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::LocalPointerBase<icu_56::CollationTailoring>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ENDP ; icu_56::LocalPointer<icu_56::CollationTailoring>::LocalPointer<icu_56::CollationTailoring>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::~LocalPointerBase<icu_56::CollationTailoring>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T86727 = -236						; size = 4
$T86728 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T86728[ebp], ecx
	mov	edx, DWORD PTR $T86728[ebp]
	mov	DWORD PTR $T86727[ebp], edx
	cmp	DWORD PTR $T86727[ebp], 0
	je	SHORT $LN3@LocalPoint
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T86727[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T86727[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::~LocalPointerBase<icu_56::CollationTailoring>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::~LocalPointerBase<icu_56::CollationTailoring>
__ehhandler$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<icu_56::CollationTailoring>::~LocalPointer<icu_56::CollationTailoring>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::isNull, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator*, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEAAUCollationTailoring@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator*
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ PROC ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QBEPAUCollationTailoring@1@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::operator->
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z	; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalMemory@E@icu_56@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalMemory@E@icu_56@@QAE@PAE@Z PROC		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z ; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalMemory@E@icu_56@@QAE@PAE@Z ENDP		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@E@icu_56@@QAE@XZ		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$LocalMemory@E@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalMemory@E@icu_56@@QAE@XZ PROC			; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@E@icu_56@@QAE@XZ	; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalMemory@E@icu_56@@QAE@XZ ENDP			; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$LocalMemory@E@icu_56@@QBEAAEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$LocalMemory@E@icu_56@@QBEAAEH@Z PROC		; icu_56::LocalMemory<unsigned char>::operator[], COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$LocalMemory@E@icu_56@@QBEAAEH@Z ENDP		; icu_56::LocalMemory<unsigned char>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ PROC	; icu_56::LocalPointerBase<unsigned char>::getAlias, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ENDP	; icu_56::LocalPointerBase<unsigned char>::getAlias
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@D@icu_56@@QAE@PAD@Z	; icu_56::LocalPointerBase<char>::LocalPointerBase<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalMemory@D@icu_56@@QAE@PAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalMemory@D@icu_56@@QAE@PAD@Z PROC		; icu_56::LocalMemory<char>::LocalMemory<char>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@D@icu_56@@QAE@PAD@Z ; icu_56::LocalPointerBase<char>::LocalPointerBase<char>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalMemory@D@icu_56@@QAE@PAD@Z ENDP		; icu_56::LocalMemory<char>::LocalMemory<char>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@D@icu_56@@QAE@XZ		; icu_56::LocalPointerBase<char>::~LocalPointerBase<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$LocalMemory@D@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalMemory@D@icu_56@@QAE@XZ PROC			; icu_56::LocalMemory<char>::~LocalMemory<char>, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@D@icu_56@@QAE@XZ	; icu_56::LocalPointerBase<char>::~LocalPointerBase<char>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalMemory@D@icu_56@@QAE@XZ ENDP			; icu_56::LocalMemory<char>::~LocalMemory<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$LocalMemory@D@icu_56@@QBEAADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$LocalMemory@D@icu_56@@QBEAADH@Z PROC		; icu_56::LocalMemory<char>::operator[], COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, DWORD PTR _i$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$LocalMemory@D@icu_56@@QBEAADH@Z ENDP		; icu_56::LocalMemory<char>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNull@?$LocalPointerBase@D@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@D@icu_56@@QBECXZ PROC	; icu_56::LocalPointerBase<char>::isNull, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@D@icu_56@@QBECXZ ENDP	; icu_56::LocalPointerBase<char>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ PROC	; icu_56::LocalPointerBase<char>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@D@icu_56@@QBEPADXZ ENDP	; icu_56::LocalPointerBase<char>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z PROC ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::LocalPointerBase<icu_56::CollationTailoring>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@PAUCollationTailoring@1@@Z ENDP ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::LocalPointerBase<icu_56::CollationTailoring>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::~LocalPointerBase<icu_56::CollationTailoring>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@UCollationTailoring@icu_56@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<icu_56::CollationTailoring>::~LocalPointerBase<icu_56::CollationTailoring>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z PROC		; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z ENDP		; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@E@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@E@icu_56@@QAE@XZ PROC		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@E@icu_56@@QAE@XZ ENDP		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@D@icu_56@@QAE@PAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@D@icu_56@@QAE@PAD@Z PROC		; icu_56::LocalPointerBase<char>::LocalPointerBase<char>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@D@icu_56@@QAE@PAD@Z ENDP		; icu_56::LocalPointerBase<char>::LocalPointerBase<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@D@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@D@icu_56@@QAE@XZ PROC		; icu_56::LocalPointerBase<char>::~LocalPointerBase<char>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@D@icu_56@@QAE@XZ ENDP		; icu_56::LocalPointerBase<char>::~LocalPointerBase<char>
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z
_TEXT	SEGMENT
_p$83109 = -20						; size = 4
_this$ = -8						; size = 4
_newCapacity$ = 8					; size = 4
_length$ = 12						; size = 4
?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z PROC ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	cmp	DWORD PTR _newCapacity$[ebp], 0
	jle	SHORT $LN5@allocateIn
; Line 276
	mov	eax, DWORD PTR _newCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _p$83109[ebp], eax
; Line 277
	cmp	DWORD PTR _p$83109[ebp], 0
	je	SHORT $LN4@allocateIn
; Line 278
	cmp	DWORD PTR _length$[ebp], 0
	jle	SHORT $LN3@allocateIn
; Line 279
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _newCapacity$[ebp]
	jle	SHORT $LN2@allocateIn
; Line 280
	mov	eax, DWORD PTR _newCapacity$[ebp]
	mov	DWORD PTR _length$[ebp], eax
$LN2@allocateIn:
; Line 282
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _length$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p$83109[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN3@allocateIn:
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 285
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$83109[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@allocateIn:
; Line 287
	mov	eax, DWORD PTR _p$83109[ebp]
	jmp	SHORT $LN6@allocateIn
; Line 288
	jmp	SHORT $LN6@allocateIn
$LN5@allocateIn:
; Line 289
	xor	eax, eax
$LN6@allocateIn:
; Line 291
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?allocateInsteadAndCopy@?$LocalMemory@E@icu_56@@QAEPAEHH@Z ENDP ; icu_56::LocalMemory<unsigned char>::allocateInsteadAndCopy
_TEXT	ENDS
_DATA	SEGMENT
	ORG $+4
_gResourceTypes DD FLAT:??_C@_07NBCGADJA@Unknown?$AA@
	DD	00H
	DD	00H
	DD	FLAT:??_C@_06ICGJLFIM@string?$AA@
	ORG $+176
_DATA	ENDS
CRT$XCU	SEGMENT
_gResourceTypes$initializer$ DD FLAT:??__EgResourceTypes@@YAXXZ
CRT$XCU	ENDS
END

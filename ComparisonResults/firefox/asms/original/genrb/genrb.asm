; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\genrb.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0BC@GMHNNPBB@includeUnihanColl?$AA@	; `string'
PUBLIC	??_C@_0O@OIPBNFOG@usePoolBundle?$AA@		; `string'
PUBLIC	??_C@_0BA@GIIAGMDM@writePoolBundle?$AA@		; `string'
PUBLIC	??_C@_0O@PPAHKJGE@formatVersion?$AA@		; `string'
PUBLIC	??_C@_0BD@LPKOAKCP@omitCollationRules?$AA@	; `string'
PUBLIC	??_C@_08JGCCIMAA@language?$AA@			; `string'
PUBLIC	??_C@_0BC@JLOOCMDE@noBinaryCollation?$AA@	; `string'
PUBLIC	??_C@_06OLFOGHEN@strict?$AA@			; `string'
PUBLIC	??_C@_0M@EGAKCHOD@write?9xliff?$AA@		; `string'
PUBLIC	??_C@_0M@BJHCIPFI@bundle?9name?$AA@		; `string'
PUBLIC	??_C@_0N@BLEHIICA@java?9package?$AA@		; `string'
PUBLIC	??_C@_09JHBDCMB@copyright?$AA@			; `string'
PUBLIC	??_C@_0L@HHDJDAHH@write?9java?$AA@		; `string'
PUBLIC	??_C@_0L@JMMPKMPC@icudatadir?$AA@		; `string'
PUBLIC	??_C@_08MLPGAEIK@encoding?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_09CMGPLHNH@sourcedir?$AA@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_05PMBAOCDH@quiet?$AA@			; `string'
PUBLIC	??_C@_07KBAMPNJK@verbose?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	_gCurrentFileName
PUBLIC	?options@@3PAUUOption@@A			; options
_BSS	SEGMENT
_gCurrentFileName DD 01H DUP (?)
_write_java DB	01H DUP (?)
	ALIGN	4

_write_xliff DB	01H DUP (?)
	ALIGN	4

_language DD	01H DUP (?)
_xliffOutputFileName DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?options@@3PAUUOption@@A DD FLAT:??_C@_04PCJFHION@help?$AA@ ; options
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07KBAMPNJK@verbose?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	076H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_05PMBAOCDH@quiet?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	071H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	056H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09CMGPLHNH@sourcedir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	073H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08MLPGAEIK@encoding?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	065H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@JMMPKMPC@icudatadir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	069H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@HHDJDAHH@write?9java?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06aH
	DB	02H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09JHBDCMB@copyright?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0N@BLEHIICA@java?9package?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0M@BJHCIPFI@bundle?9name?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	062H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0M@EGAKCHOD@write?9xliff?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	078H
	DB	02H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_06OLFOGHEN@strict?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06bH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BC@JLOOCMDE@noBinaryCollation?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	043H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08JGCCIMAA@language?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06cH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BD@LPKOAKCP@omitCollationRules?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	052H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0O@PPAHKJGE@formatVersion?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BA@GIIAGMDM@writePoolBundle?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0O@OIPBNFOG@usePoolBundle?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	02H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BC@GMHNNPBB@includeUnihanColl?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
_outputEnc DD	FLAT:??_C@_00CNPNBAHC@?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0BC@GMHNNPBB@includeUnihanColl?$AA@
CONST	SEGMENT
??_C@_0BC@GMHNNPBB@includeUnihanColl?$AA@ DB 'includeUnihanColl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OIPBNFOG@usePoolBundle?$AA@
CONST	SEGMENT
??_C@_0O@OIPBNFOG@usePoolBundle?$AA@ DB 'usePoolBundle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GIIAGMDM@writePoolBundle?$AA@
CONST	SEGMENT
??_C@_0BA@GIIAGMDM@writePoolBundle?$AA@ DB 'writePoolBundle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PPAHKJGE@formatVersion?$AA@
CONST	SEGMENT
??_C@_0O@PPAHKJGE@formatVersion?$AA@ DB 'formatVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LPKOAKCP@omitCollationRules?$AA@
CONST	SEGMENT
??_C@_0BD@LPKOAKCP@omitCollationRules?$AA@ DB 'omitCollationRules', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JGCCIMAA@language?$AA@
CONST	SEGMENT
??_C@_08JGCCIMAA@language?$AA@ DB 'language', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JLOOCMDE@noBinaryCollation?$AA@
CONST	SEGMENT
??_C@_0BC@JLOOCMDE@noBinaryCollation?$AA@ DB 'noBinaryCollation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLFOGHEN@strict?$AA@
CONST	SEGMENT
??_C@_06OLFOGHEN@strict?$AA@ DB 'strict', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EGAKCHOD@write?9xliff?$AA@
CONST	SEGMENT
??_C@_0M@EGAKCHOD@write?9xliff?$AA@ DB 'write-xliff', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJHCIPFI@bundle?9name?$AA@
CONST	SEGMENT
??_C@_0M@BJHCIPFI@bundle?9name?$AA@ DB 'bundle-name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLEHIICA@java?9package?$AA@
CONST	SEGMENT
??_C@_0N@BLEHIICA@java?9package?$AA@ DB 'java-package', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHBDCMB@copyright?$AA@
CONST	SEGMENT
??_C@_09JHBDCMB@copyright?$AA@ DB 'copyright', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HHDJDAHH@write?9java?$AA@
CONST	SEGMENT
??_C@_0L@HHDJDAHH@write?9java?$AA@ DB 'write-java', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JMMPKMPC@icudatadir?$AA@
CONST	SEGMENT
??_C@_0L@JMMPKMPC@icudatadir?$AA@ DB 'icudatadir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLPGAEIK@encoding?$AA@
CONST	SEGMENT
??_C@_08MLPGAEIK@encoding?$AA@ DB 'encoding', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMGPLHNH@sourcedir?$AA@
CONST	SEGMENT
??_C@_09CMGPLHNH@sourcedir?$AA@ DB 'sourcedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PMBAOCDH@quiet?$AA@
CONST	SEGMENT
??_C@_05PMBAOCDH@quiet?$AA@ DB 'quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBAMPNJK@verbose?$AA@
CONST	SEGMENT
??_C@_07KBAMPNJK@verbose?$AA@ DB 'verbose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
PUBLIC	?close@ResFile@@QAEXXZ				; ResFile::close
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\genrb\genrb.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?close@ResFile@@QAEXXZ
_TEXT	SEGMENT
tv76 = -244						; size = 4
$T44670 = -236						; size = 4
$T44671 = -224						; size = 4
$T44672 = -212						; size = 4
_this$ = -8						; size = 4
?close@ResFile@@QAEXXZ PROC				; ResFile::close, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44670[ebp], ecx
	mov	edx, DWORD PTR $T44670[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR $T44672[ebp], ecx
	mov	edx, DWORD PTR $T44672[ebp]
	mov	DWORD PTR $T44671[ebp], edx
	cmp	DWORD PTR $T44671[ebp], 0
	je	SHORT $LN3@close
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44671[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44671[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN4@close
$LN3@close:
	mov	DWORD PTR tv76[ebp], 0
$LN4@close:
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 51
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@ResFile@@QAEXXZ ENDP				; ResFile::close
_TEXT	ENDS
PUBLIC	??_C@_0CF@ONGAIFMN@unable?5to?5write?5the?5pool?5bundle?3@ ; `string'
PUBLIC	?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z ; processFile
PUBLIC	?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::getAlias
PUBLIC	??_C@_0BG@DKLGJDPF@Processing?5file?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@CLBDCOE@genrb?5number?5of?5files?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0NB@MNCKCCNP@genrb?5option?5?9?9includeUnihanColl@ ; `string'
PUBLIC	??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@ ; `string'
PUBLIC	??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_0DH@DJICNGCP@unable?5to?5allocate?5memory?5for?5a?5@ ; `string'
PUBLIC	??0StringResource@@QAE@HCPB_WHAAW4UErrorCode@@@Z ; StringResource::StringResource
PUBLIC	??_C@_1CE@FNDGHICG@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GC@DEOFBLBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1??main@@9@4JA			; `main'::`2'::__LINE__Var
PUBLIC	??_C@_0DK@KDLAIEMM@unable?5to?5allocate?5memory?5for?5th@ ; `string'
PUBLIC	??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ; PseudoListResource::PseudoListResource
PUBLIC	??_C@_0CP@OEMGLLFB@insufficient?5indexes?$FL?$FN?5in?5pool?5b@ ; `string'
PUBLIC	??_C@_0CH@EPHFCONG@invalid?5format?5of?5pool?5bundle?5fi@ ; `string'
PUBLIC	??_C@_0CG@MJAFEILE@ures_swap?$CIpool?5bundle?5?$CFs?$CJ?5failed@ ; `string'
PUBLIC	??_C@_0DK@NLJBFPFL@udata_openSwapperForInputData?$CIpo@ ; `string'
PUBLIC	??_C@_0CI@MABBBOLB@unable?5to?5read?5the?5pool?5bundle?5f@ ; `string'
PUBLIC	??_C@_0DH@MIENEIIC@unable?5to?5allocate?5memory?5for?5th@ ; `string'
PUBLIC	??_C@_0CG@JEMPLAMP@the?5pool?5bundle?5file?5?$CFs?5is?5too?5s@ ; `string'
PUBLIC	??_C@_0CE@DDMFPJKA@unable?5to?5open?5pool?5bundle?5file?5@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	??_C@_0BF@DGFEOIAK@out?5of?5memory?5error?6?$AA@ ; `string'
PUBLIC	??_C@_08BHJPLDDC@pool?4res?$AA@			; `string'
PUBLIC	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ	; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
PUBLIC	??_C@_0DI@FGGLDPAC@unable?5to?5create?5an?5empty?5bundle@ ; `string'
PUBLIC	?adoptInsteadAndCheckErrorCode@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SRBRoot>::adoptInsteadAndCheckErrorCode
PUBLIC	??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ; icu_56::LocalPointer<SRBRoot>::LocalPointer<SRBRoot>
PUBLIC	??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@ ; `string'
PUBLIC	??_C@_0BID@MNEOJDIH@?7?5?5?5?5?5?5?9?9writePoolBundle?5?5?5?5writ@ ; `string'
PUBLIC	??_C@_0KG@PNEFMHDC@?7?5?5?5?5?5?5?9?9formatVersion?5?5?5?5?5?5writ@ ; `string'
PUBLIC	??_C@_0BOK@OJJMJPGF@?7?9C?5or?5?9?9noBinaryCollation?5?5do?5n@ ; `string'
PUBLIC	??_C@_0BKO@CDFNPMDA@?7?9b?5or?5?9?9bundle?9name?5?5?5?5?5?5For?5?9?9@ ; `string'
PUBLIC	??_C@_0BDM@JEOKLDMJ@?7?9j?5or?5?9?9write?9java?5?5?5?5?5?5?5write?5@ ; `string'
PUBLIC	??_C@_0BHA@KDLIPGPM@?7?9e?5or?5?9?9encoding?5?5?5?5?5?5?5?5?5encodi@ ; `string'
PUBLIC	??_C@_0BBP@BPMLMIHH@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@ ; `string'
PUBLIC	??_C@_0IK@EGIGCDPG@Usage?3?5?$CFs?5?$FLOPTIONS?$FN?5?$FLFILES?$FN?6?7Rea@ ; `string'
PUBLIC	??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@ ; `string'
PUBLIC	??_C@_02KLACJAOD@56?$AA@			; `string'
PUBLIC	??_C@_04HBNCPEDB@56?41?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0FG@OIAGHICM@?$CFs?5error?3?5command?5line?5argument?5@ ; `string'
PUBLIC	??_C@_0FA@BMOHNFNJ@?$CFs?3?5cannot?5combine?5?9?9formatVersi@ ; `string'
PUBLIC	??_C@_0CE@HLNAFPND@?$CFs?3?5unsupported?5?9?9formatVersion?5@ ; `string'
PUBLIC	??_C@_0DK@MHDKIMEC@?$CFs?3?5cannot?5combine?5?9?9writePoolBu@ ; `string'
PUBLIC	??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@ ; `string'
PUBLIC	??_C@_0P@LDMBFGKM@LocaleElements?$AA@		; `string'
PUBLIC	??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_u_cleanup_56:PROC
EXTRN	?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z:PROC ; SRBRoot::write
EXTRN	_getLongPathname:PROC
EXTRN	__imp__puts:PROC
EXTRN	__imp__printf:PROC
EXTRN	_isVerbose:PROC
EXTRN	_setUsePoolBundle:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	?add@PseudoListResource@@QAEXPAUSResource@@@Z:PROC ; PseudoListResource::add
EXTRN	__imp___wassert:PROC
EXTRN	_getFormatVersion:PROC
EXTRN	_udata_closeSwapper_56:PROC
EXTRN	_ures_swap_56:PROC
EXTRN	_udata_openSwapperForInputData_56:PROC
EXTRN	_T_FileStream_read:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	_T_FileStream_size:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	_strcpy:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z:PROC ; SRBRoot::SRBRoot
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_initParser:PROC
EXTRN	__imp__exit:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_u_init_56:PROC
EXTRN	_u_setDataDirectory_56:PROC
EXTRN	_setIncludeCopyright:PROC
EXTRN	_setStrict:PROC
EXTRN	_setShowWarning:PROC
EXTRN	_setVerbose:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	_setFormatVersion:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0CF@ONGAIFMN@unable?5to?5write?5the?5pool?5bundle?3@
CONST	SEGMENT
??_C@_0CF@ONGAIFMN@unable?5to?5write?5the?5pool?5bundle?3@ DB 'unable to '
	DB	'write the pool bundle: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DKLGJDPF@Processing?5file?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BG@DKLGJDPF@Processing?5file?5?$CC?$CFs?$CC?6?$AA@ DB 'Processing '
	DB	'file "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CLBDCOE@genrb?5number?5of?5files?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BL@CLBDCOE@genrb?5number?5of?5files?3?5?$CFd?6?$AA@ DB 'genrb numb'
	DB	'er of files: %d', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0NB@MNCKCCNP@genrb?5option?5?9?9includeUnihanColl@
CONST	SEGMENT
??_C@_0NB@MNCKCCNP@genrb?5option?5?9?9includeUnihanColl@ DB 'genrb option'
	DB	' --includeUnihanColl ignored: ', 0aH, 'CLDR 26/ICU 54 unihan '
	DB	'data is small, except', 0aH, 'the ucadata-unihan.icu version '
	DB	'of the collation root data', 0aH, 'is about 300kB larger than'
	DB	' the ucadata-implicithan.icu version.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@
CONST	SEGMENT
??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@ DB '16'
	DB	'-bit units for strings: %6d = %6d bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@ DB 'number'
	DB	' of shared strings: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@DJICNGCP@unable?5to?5allocate?5memory?5for?5a?5@
CONST	SEGMENT
??_C@_0DH@DJICNGCP@unable?5to?5allocate?5memory?5for?5a?5@ DB 'unable to '
	DB	'allocate memory for a pool bundle string %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@FNDGHICG@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@FNDGHICG@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@ DB 'U'
	DB	00H, '_', 00H, 'S', 00H, 'U', 00H, 'C', 00H, 'C', 00H, 'E', 00H
	DB	'S', 00H, 'S', 00H, '(', 00H, 's', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'u', 00H, 's', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@DEOFBLBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GC@DEOFBLBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'r', 00H, 'b', 00H, '\', 00H, 'g'
	DB	00H, 'e', 00H, 'n', 00H, 'r', 00H, 'b', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??main@@9@4JA
_DATA	SEGMENT
?__LINE__Var@?1??main@@9@4JA DD 074H			; `main'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DK@KDLAIEMM@unable?5to?5allocate?5memory?5for?5th@
CONST	SEGMENT
??_C@_0DK@KDLAIEMM@unable?5to?5allocate?5memory?5for?5th@ DB 'unable to a'
	DB	'llocate memory for the pool bundle strings %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@OEMGLLFB@insufficient?5indexes?$FL?$FN?5in?5pool?5b@
CONST	SEGMENT
??_C@_0CP@OEMGLLFB@insufficient?5indexes?$FL?$FN?5in?5pool?5b@ DB 'insuff'
	DB	'icient indexes[] in pool bundle file %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@EPHFCONG@invalid?5format?5of?5pool?5bundle?5fi@
CONST	SEGMENT
??_C@_0CH@EPHFCONG@invalid?5format?5of?5pool?5bundle?5fi@ DB 'invalid for'
	DB	'mat of pool bundle file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MJAFEILE@ures_swap?$CIpool?5bundle?5?$CFs?$CJ?5failed@
CONST	SEGMENT
??_C@_0CG@MJAFEILE@ures_swap?$CIpool?5bundle?5?$CFs?$CJ?5failed@ DB 'ures'
	DB	'_swap(pool bundle %s) failed: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NLJBFPFL@udata_openSwapperForInputData?$CIpo@
CONST	SEGMENT
??_C@_0DK@NLJBFPFL@udata_openSwapperForInputData?$CIpo@ DB 'udata_openSwa'
	DB	'pperForInputData(pool bundle %s) failed: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@MABBBOLB@unable?5to?5read?5the?5pool?5bundle?5f@
CONST	SEGMENT
??_C@_0CI@MABBBOLB@unable?5to?5read?5the?5pool?5bundle?5f@ DB 'unable to '
	DB	'read the pool bundle file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@MIENEIIC@unable?5to?5allocate?5memory?5for?5th@
CONST	SEGMENT
??_C@_0DH@MIENEIIC@unable?5to?5allocate?5memory?5for?5th@ DB 'unable to a'
	DB	'llocate memory for the pool bundle file %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JEMPLAMP@the?5pool?5bundle?5file?5?$CFs?5is?5too?5s@
CONST	SEGMENT
??_C@_0CG@JEMPLAMP@the?5pool?5bundle?5file?5?$CFs?5is?5too?5s@ DB 'the po'
	DB	'ol bundle file %s is too small', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DDMFPJKA@unable?5to?5open?5pool?5bundle?5file?5@
CONST	SEGMENT
??_C@_0CE@DDMFPJKA@unable?5to?5open?5pool?5bundle?5file?5@ DB 'unable to '
	DB	'open pool bundle file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DGFEOIAK@out?5of?5memory?5error?6?$AA@
CONST	SEGMENT
??_C@_0BF@DGFEOIAK@out?5of?5memory?5error?6?$AA@ DB 'out of memory error', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08BHJPLDDC@pool?4res?$AA@
CONST	SEGMENT
??_C@_08BHJPLDDC@pool?4res?$AA@ DB 'pool.res', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FGGLDPAC@unable?5to?5create?5an?5empty?5bundle@
CONST	SEGMENT
??_C@_0DI@FGGLDPAC@unable?5to?5create?5an?5empty?5bundle@ DB 'unable to c'
	DB	'reate an empty bundle for the pool keys: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@
CONST	SEGMENT
??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@ DB '%s: c'
	DB	'an not initialize ICU.  status = %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BID@MNEOJDIH@?7?5?5?5?5?5?5?9?9writePoolBundle?5?5?5?5writ@
CONST	SEGMENT
??_C@_0BID@MNEOJDIH@?7?5?5?5?5?5?5?9?9writePoolBundle?5?5?5?5writ@ DB 09H
	DB	'      --writePoolBundle    write a pool.res file with all of '
	DB	'the keys of all input bundles', 0aH, 09H, '      --usePoolBun'
	DB	'dle [path-to-pool.res]  point to keys from the pool.res keys '
	DB	'pool bundle if they are available there;', 0aH, 09H, '       '
	DB	'                    makes .res files smaller but dependent on'
	DB	' the pool bundle', 0aH, 09H, '                           (--w'
	DB	'ritePoolBundle and --usePoolBundle cannot be combined)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0KG@PNEFMHDC@?7?5?5?5?5?5?5?9?9formatVersion?5?5?5?5?5?5writ@
CONST	SEGMENT
??_C@_0KG@PNEFMHDC@?7?5?5?5?5?5?5?9?9formatVersion?5?5?5?5?5?5writ@ DB 09H
	DB	'      --formatVersion      write a .res file compatible with '
	DB	'the requested formatVersion (single digit);', 0aH, 09H, '    '
	DB	'                       for example, --formatVersion 1', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BOK@OJJMJPGF@?7?9C?5or?5?9?9noBinaryCollation?5?5do?5n@
CONST	SEGMENT
??_C@_0BOK@OJJMJPGF@?7?9C?5or?5?9?9noBinaryCollation?5?5do?5n@ DB 09H, '-'
	DB	'C or --noBinaryCollation  do not generate binary collation im'
	DB	'age;', 0aH, 09H, '                           makes .res file '
	DB	'smaller but collator instantiation much slower;', 0aH, 09H, ' '
	DB	'                          maintains ability to get tailoring '
	DB	'rules', 0aH, 09H, '-R or --omitCollationRules do not include '
	DB	'collation (tailoring) rules;', 0aH, 09H, '                   '
	DB	'        makes .res file smaller and maintains collator instan'
	DB	'tiation speed', 0aH, 09H, '                           but tai'
	DB	'loring rules will not be available (they are rarely used)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BKO@CDFNPMDA@?7?9b?5or?5?9?9bundle?9name?5?5?5?5?5?5For?5?9?9@
CONST	SEGMENT
??_C@_0BKO@CDFNPMDA@?7?9b?5or?5?9?9bundle?9name?5?5?5?5?5?5For?5?9?9@ DB 09H
	DB	'-b or --bundle-name      For --write-java: root resource bund'
	DB	'le name for writing the ListResourceBundle,', 0aH, 09H, '    '
	DB	'                     defaults to LocaleElements', 0aH, 09H, '-'
	DB	'x or --write-xliff      write an XLIFF file for the resource '
	DB	'bundle. Followed by', 0aH, 09H, '                         an '
	DB	'optional output file name.', 0aH, 09H, '-k or --strict       '
	DB	'    use pedantic parsing of syntax', 0aH, 09H, '-l or --langu'
	DB	'age         for XLIFF: language code compliant with BCP 47.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BDM@JEOKLDMJ@?7?9j?5or?5?9?9write?9java?5?5?5?5?5?5?5write?5@
CONST	SEGMENT
??_C@_0BDM@JEOKLDMJ@?7?9j?5or?5?9?9write?9java?5?5?5?5?5?5?5write?5@ DB 09H
	DB	'-j or --write-java       write a Java ListResourceBundle for '
	DB	'ICU4J, followed by optional encoding', 0aH, 09H, '           '
	DB	'              defaults to ASCII and \uXXXX format.', 0aH, 09H
	DB	'      --java-package     For --write-java: package name for w'
	DB	'riting the ListResourceBundle,', 0aH, 09H, '                 '
	DB	'        defaults to com.ibm.icu.impl.data', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BHA@KDLIPGPM@?7?9e?5or?5?9?9encoding?5?5?5?5?5?5?5?5?5encodi@
CONST	SEGMENT
??_C@_0BHA@KDLIPGPM@?7?9e?5or?5?9?9encoding?5?5?5?5?5?5?5?5?5encodi@ DB 09H
	DB	'-e or --encoding         encoding of source files', 0aH, 09H, '-'
	DB	'd of --destdir          destination directory, followed by th'
	DB	'e path, defaults to %s', 0aH, 09H, '-s or --sourcedir        '
	DB	'source directory for files followed by path, defaults to %s', 0aH
	DB	09H, '-i or --icudatadir       directory for locating any need'
	DB	'ed intermediate data files,', 0aH, 09H, '                    '
	DB	'     followed by path, defaults to %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBP@BPMLMIHH@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@
CONST	SEGMENT
??_C@_0BBP@BPMLMIHH@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@ DB 'O'
	DB	'ptions:', 0aH, 09H, '-h or -? or --help       this usage text'
	DB	0aH, 09H, '-q or --quiet            do not display warnings', 0aH
	DB	09H, '-v or --verbose          print extra information when pr'
	DB	'ocessing files', 0aH, 09H, '-V or --version          prints o'
	DB	'ut version number and exits', 0aH, 09H, '-c or --copyright   '
	DB	'     include copyright notice', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0IK@EGIGCDPG@Usage?3?5?$CFs?5?$FLOPTIONS?$FN?5?$FLFILES?$FN?6?7Rea@
CONST	SEGMENT
??_C@_0IK@EGIGCDPG@Usage?3?5?$CFs?5?$FLOPTIONS?$FN?5?$FLFILES?$FN?6?7Rea@ DB 'U'
	DB	'sage: %s [OPTIONS] [FILES]', 0aH, 09H, 'Reads the list of res'
	DB	'ource bundle source files and creates', 0aH, 09H, 'binary ver'
	DB	'sion of resource bundles (.res files)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@
CONST	SEGMENT
??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@ DB '%'
	DB	's version %s (ICU version %s).', 0aH, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KLACJAOD@56?$AA@
CONST	SEGMENT
??_C@_02KLACJAOD@56?$AA@ DB '56', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HBNCPEDB@56?41?$AA@
CONST	SEGMENT
??_C@_04HBNCPEDB@56?41?$AA@ DB '56.1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@OIAGHICM@?$CFs?5error?3?5command?5line?5argument?5@
CONST	SEGMENT
??_C@_0FG@OIAGHICM@?$CFs?5error?3?5command?5line?5argument?5@ DB '%s erro'
	DB	'r: command line argument --java-package or --bundle-name with'
	DB	'out --write-java', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@BMOHNFNJ@?$CFs?3?5cannot?5combine?5?9?9formatVersi@
CONST	SEGMENT
??_C@_0FA@BMOHNFNJ@?$CFs?3?5cannot?5combine?5?9?9formatVersi@ DB '%s: can'
	DB	'not combine --formatVersion 1 with --writePoolBundle or --use'
	DB	'PoolBundle', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@HLNAFPND@?$CFs?3?5unsupported?5?9?9formatVersion?5@
CONST	SEGMENT
??_C@_0CE@HLNAFPND@?$CFs?3?5unsupported?5?9?9formatVersion?5@ DB '%s: uns'
	DB	'upported --formatVersion %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MHDKIMEC@?$CFs?3?5cannot?5combine?5?9?9writePoolBu@
CONST	SEGMENT
??_C@_0DK@MHDKIMEC@?$CFs?3?5cannot?5combine?5?9?9writePoolBu@ DB '%s: can'
	DB	'not combine --writePoolBundle and --usePoolBundle', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@
CONST	SEGMENT
??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@ DB '%s: err'
	DB	'or in command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDMBFGKM@LocaleElements?$AA@
CONST	SEGMENT
??_C@_0P@LDMBFGKM@LocaleElements?$AA@ DB 'LocaleElements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@
CONST	SEGMENT
??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@ DB 'com.ibm.icu.impl.da'
	DB	'ta', 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	00H
	DD	FLAT:__unwindfunclet$_main$2
	DD	02H
	DD	FLAT:__unwindfunclet$_main$3
	DD	02H
	DD	FLAT:__unwindfunclet$_main$4
	DD	00H
	DD	FLAT:__unwindfunclet$_main$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT _main
_TEXT	SEGMENT
tv774 = -1344						; size = 4
tv728 = -1344						; size = 4
tv650 = -1344						; size = 4
tv380 = -1344						; size = 4
$T44687 = -1336						; size = 4
$T44688 = -1324						; size = 4
$T44691 = -1312						; size = 4
$T44692 = -1300						; size = 4
$T44693 = -1288						; size = 8
$T44694 = -1272						; size = 8
$T44695 = -1256						; size = 8
$T44696 = -1240						; size = 4
$T44697 = -1228						; size = 4
$T44698 = -1216						; size = 4
$T44699 = -1204						; size = 4
$T44700 = -1192						; size = 4
$T44701 = -1180						; size = 4
$T44702 = -1168						; size = 4
$T44703 = -1156						; size = 4
$T44704 = -1144						; size = 4
$T44705 = -1132						; size = 4
$T44706 = -1120						; size = 4
$T44707 = -1108						; size = 4
$T44710 = -1096						; size = 4
$T44712 = -1084						; size = 4
$T44713 = -1072						; size = 4
$T44716 = -1060						; size = 4
$T44718 = -1048						; size = 4
$T44719 = -1036						; size = 4
$T44722 = -1024						; size = 8
$T44723 = -1008						; size = 8
$T44724 = -992						; size = 4
$T44725 = -980						; size = 4
_outputFileName$37727 = -776				; size = 256
_theCurrentFileName$37719 = -512			; size = 56
_length$37707 = -448					; size = 4
_sr$37692 = -436					; size = 4
_maxStringIndex$37689 = -424				; size = 4
_poolStringIndex$37688 = -412				; size = 4
_length$37673 = -400					; size = 4
_numCharsForLength$37672 = -385				; size = 1
_first$37671 = -376					; size = 4
_remaining$37667 = -364					; size = 4
_p$37665 = -352						; size = 4
_stringUnitsLength$37652 = -340				; size = 4
_keysTop$37646 = -328					; size = 4
_keysBottom$37645 = -316				; size = 4
_pRoot$37639 = -304					; size = 4
_bytesRead$37625 = -292					; size = 4
_header$37624 = -280					; size = 4
_ds$37623 = -268					; size = 4
_poolFileName$37602 = -256				; size = 56
_indexLength$37601 = -192				; size = 4
_poolFileSize$37600 = -180				; size = 4
_poolFile$37599 = -168					; size = 4
_poolResName$37598 = -156				; size = 4
_nameWithoutSuffix$37592 = -144				; size = 4
_poolResName$37590 = -132				; size = 4
_newPoolBundle$ = -120					; size = 4
_s$37450 = -108						; size = 4
_illegalArg$ = -93					; size = 1
_i$ = -84						; size = 4
_encoding$ = -72					; size = 4
_inputDir$ = -60					; size = 4
_outputDir$ = -48					; size = 4
_arg$ = -36						; size = 4
_status$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1332				; 00000534H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1344]
	mov	ecx, 333				; 0000014dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 117
	mov	DWORD PTR _status$[ebp], 0
; Line 118
	mov	DWORD PTR _arg$[ebp], 0
; Line 119
	mov	DWORD PTR _outputDir$[ebp], 0
; Line 120
	mov	DWORD PTR _inputDir$[ebp], 0
; Line 121
	mov	DWORD PTR _encoding$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 123
	mov	BYTE PTR _illegalArg$[ebp], 0
; Line 127
	mov	DWORD PTR ?options@@3PAUUOption@@A+224, OFFSET ??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@
; Line 128
	mov	DWORD PTR ?options@@3PAUUOption@@A+244, OFFSET ??_C@_0P@LDMBFGKM@LocaleElements?$AA@
; Line 129
	push	OFFSET ?options@@3PAUUOption@@A		; options
	push	22					; 00000016H
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 132
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN86@main
; Line 133
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	mov	BYTE PTR _illegalArg$[ebp], 1
	jmp	SHORT $LN85@main
$LN86@main:
; Line 135
	cmp	DWORD PTR _argc$[ebp], 2
	jge	SHORT $LN85@main
; Line 136
	mov	BYTE PTR _illegalArg$[ebp], 1
$LN85@main:
; Line 138
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	je	SHORT $LN83@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+418
	test	eax, eax
	je	SHORT $LN83@main
; Line 139
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0DK@MHDKIMEC@?$CFs?3?5cannot?5combine?5?9?9writePoolBu@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 140
	mov	BYTE PTR _illegalArg$[ebp], 1
$LN83@main:
; Line 142
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+378
	test	eax, eax
	je	$LN82@main
; Line 143
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+364
	mov	DWORD PTR _s$37450[ebp], eax
; Line 144
	mov	eax, DWORD PTR _s$37450[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN80@main
	mov	eax, DWORD PTR _s$37450[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 49					; 00000031H
	jge	SHORT $LN81@main
	mov	eax, DWORD PTR _s$37450[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 51					; 00000033H
	jle	SHORT $LN81@main
$LN80@main:
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR _s$37450[ebp]
	push	eax
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ??_C@_0CE@HLNAFPND@?$CFs?3?5unsupported?5?9?9formatVersion?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	mov	BYTE PTR _illegalArg$[ebp], 1
; Line 147
	jmp	SHORT $LN82@main
$LN81@main:
; Line 149
	mov	eax, DWORD PTR _s$37450[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 49					; 00000031H
	jne	SHORT $LN78@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	jne	SHORT $LN77@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+418
	test	eax, eax
	je	SHORT $LN78@main
$LN77@main:
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0FA@BMOHNFNJ@?$CFs?3?5cannot?5combine?5?9?9formatVersi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 151
	mov	BYTE PTR _illegalArg$[ebp], 1
; Line 152
	jmp	SHORT $LN82@main
$LN78@main:
; Line 153
	mov	eax, DWORD PTR _s$37450[ebp]
	movsx	ecx, BYTE PTR [eax]
	sub	ecx, 48					; 00000030H
	push	ecx
	call	_setFormatVersion
	add	esp, 4
$LN82@main:
; Line 158
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+238
	test	eax, eax
	jne	SHORT $LN74@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+258
	test	eax, eax
	je	SHORT $LN75@main
$LN74@main:
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+198
	test	eax, eax
	jne	SHORT $LN75@main
; Line 162
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0FG@OIAGHICM@?$CFs?5error?3?5command?5line?5argument?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 163
	mov	BYTE PTR _illegalArg$[ebp], 1
$LN75@main:
; Line 166
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+98
	test	eax, eax
	je	SHORT $LN73@main
; Line 170
	mov	esi, esp
	push	OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	OFFSET ??_C@_04HBNCPEDB@56?41?$AA@
	push	OFFSET ??_C@_02KLACJAOD@56?$AA@
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	movsx	eax, BYTE PTR _illegalArg$[ebp]
	test	eax, eax
	jne	SHORT $LN73@main
; Line 172
	xor	eax, eax
	jmp	$LN88@main
$LN73@main:
; Line 176
	movsx	eax, BYTE PTR _illegalArg$[ebp]
	test	eax, eax
	jne	SHORT $LN70@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+18
	test	eax, eax
	jne	SHORT $LN70@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+38
	test	eax, eax
	je	$LN71@main
$LN70@main:
; Line 185
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0IK@EGIGCDPG@Usage?3?5?$CFs?5?$FLOPTIONS?$FN?5?$FLFILES?$FN?6?7Rea@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 192
	mov	esi, esp
	push	OFFSET ??_C@_0BBP@BPMLMIHH@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 199
	call	_u_getDataDirectory_56
	mov	esi, esp
	push	eax
	call	_u_getDataDirectory_56
	push	eax
	call	_u_getDataDirectory_56
	push	eax
	push	OFFSET ??_C@_0BHA@KDLIPGPM@?7?9e?5or?5?9?9encoding?5?5?5?5?5?5?5?5?5encodi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 204
	mov	esi, esp
	push	OFFSET ??_C@_0BDM@JEOKLDMJ@?7?9j?5or?5?9?9write?9java?5?5?5?5?5?5?5write?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 212
	mov	esi, esp
	push	OFFSET ??_C@_0BKO@CDFNPMDA@?7?9b?5or?5?9?9bundle?9name?5?5?5?5?5?5For?5?9?9@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 219
	mov	esi, esp
	push	OFFSET ??_C@_0BOK@OJJMJPGF@?7?9C?5or?5?9?9noBinaryCollation?5?5do?5n@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	mov	esi, esp
	push	OFFSET ??_C@_0KG@PNEFMHDC@?7?5?5?5?5?5?5?9?9formatVersion?5?5?5?5?5?5writ@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	mov	esi, esp
	push	OFFSET ??_C@_0BID@MNEOJDIH@?7?5?5?5?5?5?5?9?9writePoolBundle?5?5?5?5writ@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 229
	movsx	eax, BYTE PTR _illegalArg$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	jmp	$LN88@main
$LN71@main:
; Line 232
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+58
	test	eax, eax
	je	SHORT $LN69@main
; Line 233
	push	1
	call	_setVerbose
	add	esp, 4
$LN69@main:
; Line 236
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+78
	test	eax, eax
	je	SHORT $LN68@main
; Line 237
	push	0
	call	_setShowWarning
	add	esp, 4
$LN68@main:
; Line 239
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+298
	test	eax, eax
	je	SHORT $LN67@main
; Line 240
	push	1
	call	_setStrict
	add	esp, 4
$LN67@main:
; Line 242
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+218
	test	eax, eax
	je	SHORT $LN66@main
; Line 243
	push	1
	call	_setIncludeCopyright
	add	esp, 4
$LN66@main:
; Line 246
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+118
	test	eax, eax
	je	SHORT $LN65@main
; Line 247
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+104
	mov	DWORD PTR _inputDir$[ebp], eax
$LN65@main:
; Line 250
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+138
	test	eax, eax
	je	SHORT $LN64@main
; Line 251
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+124
	mov	DWORD PTR _outputDir$[ebp], eax
$LN64@main:
; Line 254
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+158
	test	eax, eax
	je	SHORT $LN63@main
; Line 255
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+144
	mov	DWORD PTR _encoding$[ebp], eax
$LN63@main:
; Line 258
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+178
	test	eax, eax
	je	SHORT $LN62@main
; Line 259
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+164
	push	eax
	call	_u_setDataDirectory_56
	add	esp, 4
$LN62@main:
; Line 262
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_init_56
	add	esp, 4
; Line 263
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN61@main
	cmp	DWORD PTR _status$[ebp], 4
	je	SHORT $LN61@main
; Line 269
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 270
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN61@main:
; Line 272
	mov	DWORD PTR _status$[ebp], 0
; Line 273
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+198
	test	eax, eax
	je	SHORT $LN60@main
; Line 274
	mov	BYTE PTR _write_java, 1
; Line 275
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+184
	mov	DWORD PTR _outputEnc, eax
$LN60@main:
; Line 278
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+278
	test	eax, eax
	je	SHORT $LN59@main
; Line 279
	mov	BYTE PTR _write_xliff, 1
; Line 280
	cmp	DWORD PTR ?options@@3PAUUOption@@A+264, 0
	je	SHORT $LN59@main
; Line 281
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+264
	mov	DWORD PTR _xliffOutputFileName, eax
$LN59@main:
; Line 285
	call	_initParser
; Line 288
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+338
	test	eax, eax
	je	SHORT $LN57@main
; Line 289
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+324
	mov	DWORD PTR _language, eax
$LN57@main:
; Line 292
	push	0
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ; icu_56::LocalPointer<SRBRoot>::LocalPointer<SRBRoot>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 293
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	je	$LN56@main
; Line 294
	push	136					; 00000088H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44688[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T44688[ebp], 0
	je	SHORT $LN89@main
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR $T44688[ebp]
	call	??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z ; SRBRoot::SRBRoot
	mov	DWORD PTR tv380[ebp], eax
	jmp	SHORT $LN90@main
$LN89@main:
	mov	DWORD PTR tv380[ebp], 0
$LN90@main:
	mov	ecx, DWORD PTR tv380[ebp]
	mov	DWORD PTR $T44687[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T44687[ebp]
	push	eax
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	?adoptInsteadAndCheckErrorCode@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SRBRoot>::adoptInsteadAndCheckErrorCode
; Line 295
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN55@main
; Line 296
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DI@FGGLDPAC@unable?5to?5create?5an?5empty?5bundle@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 297
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR $T44691[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44691[ebp]
	jmp	$LN88@main
; Line 298
	jmp	$LN56@main
$LN55@main:
; Line 299
	mov	DWORD PTR _poolResName$37590[ebp], OFFSET ??_C@_08BHJPLDDC@pool?4res?$AA@
; Line 300
	mov	eax, DWORD PTR _poolResName$37590[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _nameWithoutSuffix$37592[ebp], eax
; Line 301
	cmp	DWORD PTR _nameWithoutSuffix$37592[ebp], 0
	jne	SHORT $LN53@main
; Line 302
	mov	esi, esp
	push	OFFSET ??_C@_0BF@DGFEOIAK@out?5of?5memory?5error?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 303
	mov	DWORD PTR $T44692[ebp], 7
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44692[ebp]
	jmp	$LN88@main
$LN53@main:
; Line 305
	mov	eax, DWORD PTR _poolResName$37590[ebp]
	push	eax
	mov	ecx, DWORD PTR _nameWithoutSuffix$37592[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 306
	push	46					; 0000002eH
	mov	eax, DWORD PTR _nameWithoutSuffix$37592[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	BYTE PTR [eax], 0
; Line 307
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, DWORD PTR _nameWithoutSuffix$37592[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN56@main:
; Line 311
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+418
	test	eax, eax
	je	$LN52@main
; Line 312
	mov	DWORD PTR _poolResName$37598[ebp], OFFSET ??_C@_08BHJPLDDC@pool?4res?$AA@
; Line 324
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 325
	cmp	DWORD PTR ?options@@3PAUUOption@@A+404, 0
	je	SHORT $LN51@main
; Line 326
	mov	esi, esp
	mov	eax, DWORD PTR ?options@@3PAUUOption@@A+404
	push	eax
	lea	ecx, DWORD PTR $T44693[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44693[ebp]
	push	edx
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN50@main
$LN51@main:
; Line 327
	cmp	DWORD PTR _inputDir$[ebp], 0
	je	SHORT $LN50@main
; Line 328
	mov	esi, esp
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44694[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44694[ebp]
	push	edx
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@main:
; Line 330
	mov	esi, esp
	mov	eax, DWORD PTR _poolResName$37598[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44695[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44695[ebp]
	push	edx
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 331
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN48@main
; Line 332
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR $T44696[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44696[ebp]
	jmp	$LN88@main
$LN48@main:
; Line 334
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _poolFile$37599[ebp], eax
; Line 335
	cmp	DWORD PTR _poolFile$37599[ebp], 0
	jne	SHORT $LN47@main
; Line 336
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CE@DDMFPJKA@unable?5to?5open?5pool?5bundle?5file?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 337
	mov	DWORD PTR $T44697[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44697[ebp]
	jmp	$LN88@main
$LN47@main:
; Line 339
	mov	eax, DWORD PTR _poolFile$37599[ebp]
	push	eax
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _poolFileSize$37600[ebp], eax
; Line 340
	cmp	DWORD PTR _poolFileSize$37600[ebp], 32	; 00000020H
	jge	SHORT $LN46@main
; Line 341
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CG@JEMPLAMP@the?5pool?5bundle?5file?5?$CFs?5is?5too?5s@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 342
	mov	DWORD PTR $T44698[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44698[ebp]
	jmp	$LN88@main
$LN46@main:
; Line 344
	mov	eax, DWORD PTR _poolFileSize$37600[ebp]
	add	eax, 15					; 0000000fH
	and	eax, -16				; fffffff0H
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T44699[ebp], eax
	mov	ecx, DWORD PTR $T44699[ebp]
	mov	DWORD PTR _poolBundle, ecx
; Line 345
	cmp	DWORD PTR _poolFileSize$37600[ebp], 0
	jle	$LN45@main
	cmp	DWORD PTR _poolBundle, 0
	jne	SHORT $LN45@main
; Line 346
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DH@MIENEIIC@unable?5to?5allocate?5memory?5for?5th@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	mov	DWORD PTR $T44700[ebp], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44700[ebp]
	jmp	$LN88@main
$LN45@main:
; Line 352
	mov	eax, DWORD PTR _poolFileSize$37600[ebp]
	push	eax
	mov	ecx, DWORD PTR _poolBundle
	push	ecx
	mov	edx, DWORD PTR _poolFile$37599[ebp]
	push	edx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bytesRead$37625[ebp], eax
; Line 353
	mov	eax, DWORD PTR _bytesRead$37625[ebp]
	cmp	eax, DWORD PTR _poolFileSize$37600[ebp]
	je	SHORT $LN44@main
; Line 354
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CI@MABBBOLB@unable?5to?5read?5the?5pool?5bundle?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 355
	mov	DWORD PTR $T44701[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44701[ebp]
	jmp	$LN88@main
$LN44@main:
; Line 363
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _bytesRead$37625[ebp]
	push	ecx
	mov	edx, DWORD PTR _poolBundle
	push	edx
	call	_udata_openSwapperForInputData_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ds$37623[ebp], eax
; Line 364
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN43@main
; Line 366
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0DK@NLJBFPFL@udata_openSwapperForInputData?$CIpo@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 367
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR $T44702[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44702[ebp]
	jmp	$LN88@main
$LN43@main:
; Line 369
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _poolBundle
	push	ecx
	mov	edx, DWORD PTR _bytesRead$37625[ebp]
	push	edx
	mov	eax, DWORD PTR _poolBundle
	push	eax
	mov	ecx, DWORD PTR _ds$37623[ebp]
	push	ecx
	call	_ures_swap_56
	add	esp, 20					; 00000014H
; Line 370
	mov	eax, DWORD PTR _ds$37623[ebp]
	push	eax
	call	_udata_closeSwapper_56
	add	esp, 4
; Line 371
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN42@main
; Line 373
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CG@MJAFEILE@ures_swap?$CIpool?5bundle?5?$CFs?$CJ?5failed@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 374
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR $T44703[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44703[ebp]
	jmp	$LN88@main
$LN42@main:
; Line 376
	mov	eax, DWORD PTR _poolBundle
	mov	DWORD PTR _header$37624[ebp], eax
; Line 377
	mov	eax, DWORD PTR _header$37624[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	cmp	ecx, 2
	jge	SHORT $LN41@main
; Line 378
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CH@EPHFCONG@invalid?5format?5of?5pool?5bundle?5fi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 379
	mov	DWORD PTR $T44704[ebp], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44704[ebp]
	jmp	$LN88@main
$LN41@main:
; Line 382
	mov	eax, DWORD PTR _header$37624[ebp]
	movzx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _header$37624[ebp]
	mov	DWORD PTR _pRoot$37639[ebp], ecx
; Line 383
	mov	eax, DWORD PTR _pRoot$37639[ebp]
	add	eax, 4
	mov	DWORD PTR _poolBundle+4, eax
; Line 384
	mov	eax, DWORD PTR _poolBundle+4
	mov	ecx, DWORD PTR [eax]
	and	ecx, 255				; 000000ffH
	mov	DWORD PTR _indexLength$37601[ebp], ecx
; Line 385
	cmp	DWORD PTR _indexLength$37601[ebp], 7
	jg	SHORT $LN40@main
; Line 386
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CP@OEMGLLFB@insufficient?5indexes?$FL?$FN?5in?5pool?5b@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 387
	mov	DWORD PTR $T44705[ebp], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44705[ebp]
	jmp	$LN88@main
$LN40@main:
; Line 389
	mov	eax, DWORD PTR _indexLength$37601[ebp]
	add	eax, 1
	mov	DWORD PTR _keysBottom$37645[ebp], eax
; Line 390
	mov	eax, DWORD PTR _poolBundle+4
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _keysTop$37646[ebp], ecx
; Line 391
	mov	eax, DWORD PTR _keysBottom$37645[ebp]
	mov	ecx, DWORD PTR _pRoot$37639[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _poolBundle+8, edx
; Line 392
	mov	eax, DWORD PTR _keysTop$37646[ebp]
	sub	eax, DWORD PTR _keysBottom$37645[ebp]
	shl	eax, 2
	mov	DWORD PTR _poolBundle+12, eax
; Line 393
	mov	eax, DWORD PTR _poolBundle+4
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _poolBundle+28, ecx
; Line 395
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN39@main
$LN38@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN39@main:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _poolBundle+12
	jge	SHORT $LN37@main
; Line 396
	mov	eax, DWORD PTR _poolBundle+8
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN36@main
; Line 397
	mov	eax, DWORD PTR _poolBundle+16
	add	eax, 1
	mov	DWORD PTR _poolBundle+16, eax
$LN36@main:
; Line 399
	jmp	SHORT $LN38@main
$LN37@main:
; Line 404
	mov	eax, DWORD PTR _poolBundle+4
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _keysTop$37646[ebp]
	shl	ecx, 1
	mov	DWORD PTR _stringUnitsLength$37652[ebp], ecx
; Line 405
	cmp	DWORD PTR _stringUnitsLength$37652[ebp], 2
	jl	$LN35@main
	call	_getFormatVersion
	cmp	eax, 3
	jl	$LN35@main
; Line 406
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44707[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T44707[ebp], 0
	je	SHORT $LN91@main
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR $T44707[ebp]
	call	??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ; PseudoListResource::PseudoListResource
	mov	DWORD PTR tv650[ebp], eax
	jmp	SHORT $LN92@main
$LN91@main:
	mov	DWORD PTR tv650[ebp], 0
$LN92@main:
	mov	ecx, DWORD PTR tv650[ebp]
	mov	DWORD PTR $T44706[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR $T44706[ebp]
	mov	DWORD PTR _poolBundle+20, edx
; Line 407
	cmp	DWORD PTR _poolBundle+20, 0
	jne	SHORT $LN34@main
; Line 409
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DK@KDLAIEMM@unable?5to?5allocate?5memory?5for?5th@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 410
	mov	DWORD PTR $T44710[ebp], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44710[ebp]
	jmp	$LN88@main
$LN34@main:
; Line 413
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN93@main
	mov	edx, DWORD PTR ?__LINE__Var@?1??main@@9@4JA
	add	edx, 297				; 00000129H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GC@DEOFBLBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CE@FNDGHICG@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN93@main:
; Line 414
	mov	eax, DWORD PTR _keysTop$37646[ebp]
	mov	ecx, DWORD PTR _pRoot$37639[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _p$37665[ebp], edx
; Line 415
	mov	eax, DWORD PTR _stringUnitsLength$37652[ebp]
	mov	DWORD PTR _remaining$37667[ebp], eax
$LN33@main:
; Line 417
	mov	eax, DWORD PTR _p$37665[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _first$37671[ebp], ecx
; Line 420
	mov	eax, DWORD PTR _first$37671[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	je	SHORT $LN30@main
; Line 422
	mov	BYTE PTR _numCharsForLength$37672[ebp], 0
; Line 423
	mov	DWORD PTR _length$37673[ebp], 0
	jmp	SHORT $LN29@main
$LN28@main:
; Line 425
	mov	eax, DWORD PTR _length$37673[ebp]
	add	eax, 1
	mov	DWORD PTR _length$37673[ebp], eax
$LN29@main:
	mov	eax, DWORD PTR _length$37673[ebp]
	cmp	eax, DWORD PTR _remaining$37667[ebp]
	jge	SHORT $LN27@main
	mov	eax, DWORD PTR _length$37673[ebp]
	mov	ecx, DWORD PTR _p$37665[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	je	SHORT $LN27@main
	jmp	SHORT $LN28@main
$LN27@main:
; Line 426
	jmp	$LN26@main
$LN30@main:
	cmp	DWORD PTR _first$37671[ebp], 57327	; 0000dfefH
	jge	SHORT $LN25@main
; Line 427
	mov	BYTE PTR _numCharsForLength$37672[ebp], 1
; Line 428
	mov	eax, DWORD PTR _first$37671[ebp]
	and	eax, 1023				; 000003ffH
	mov	DWORD PTR _length$37673[ebp], eax
	jmp	$LN26@main
$LN25@main:
; Line 429
	cmp	DWORD PTR _first$37671[ebp], 57343	; 0000dfffH
	jge	SHORT $LN23@main
	cmp	DWORD PTR _remaining$37667[ebp], 2
	jl	SHORT $LN23@main
; Line 430
	mov	BYTE PTR _numCharsForLength$37672[ebp], 2
; Line 431
	mov	eax, DWORD PTR _first$37671[ebp]
	sub	eax, 57327				; 0000dfefH
	shl	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$37665[ebp]
	movzx	edx, WORD PTR [ecx+2]
	or	eax, edx
	mov	DWORD PTR _length$37673[ebp], eax
	jmp	SHORT $LN26@main
$LN23@main:
; Line 432
	cmp	DWORD PTR _first$37671[ebp], 57343	; 0000dfffH
	jne	SHORT $LN21@main
	cmp	DWORD PTR _remaining$37667[ebp], 3
	jl	SHORT $LN21@main
; Line 433
	mov	BYTE PTR _numCharsForLength$37672[ebp], 3
; Line 434
	mov	eax, DWORD PTR _p$37665[ebp]
	movzx	ecx, WORD PTR [eax+2]
	shl	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _p$37665[ebp]
	movzx	eax, WORD PTR [edx+4]
	or	ecx, eax
	mov	DWORD PTR _length$37673[ebp], ecx
; Line 435
	jmp	SHORT $LN26@main
$LN21@main:
; Line 436
	jmp	$LN31@main
$LN26@main:
; Line 441
	movsx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	add	eax, DWORD PTR _length$37673[ebp]
	cmp	eax, DWORD PTR _remaining$37667[ebp]
	jge	SHORT $LN18@main
	movsx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	add	eax, DWORD PTR _length$37673[ebp]
	mov	ecx, DWORD PTR _p$37665[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	je	SHORT $LN19@main
$LN18@main:
; Line 442
	jmp	$LN31@main
$LN19@main:
; Line 444
	mov	eax, DWORD PTR _stringUnitsLength$37652[ebp]
	sub	eax, DWORD PTR _remaining$37667[ebp]
	mov	DWORD PTR _poolStringIndex$37688[ebp], eax
; Line 446
	movsx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	add	eax, DWORD PTR _poolStringIndex$37688[ebp]
	mov	ecx, DWORD PTR _length$37673[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	DWORD PTR _maxStringIndex$37689[ebp], edx
; Line 447
	cmp	DWORD PTR _maxStringIndex$37689[ebp], 268435455 ; 0fffffffH
	jl	SHORT $LN17@main
; Line 449
	jmp	$LN31@main
$LN17@main:
; Line 451
	movsx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	mov	ecx, DWORD PTR _p$37665[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _p$37665[ebp], edx
; Line 452
	movsx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	mov	ecx, DWORD PTR _remaining$37667[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$37667[ebp], ecx
; Line 453
	cmp	DWORD PTR _length$37673[ebp], 0
	je	$LN16@main
; Line 456
	push	128					; 00000080H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44713[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T44713[ebp], 0
	je	SHORT $LN94@main
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$37673[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$37665[ebp]
	push	edx
	movzx	eax, BYTE PTR _numCharsForLength$37672[ebp]
	push	eax
	mov	ecx, DWORD PTR _poolStringIndex$37688[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T44713[ebp]
	call	??0StringResource@@QAE@HCPB_WHAAW4UErrorCode@@@Z ; StringResource::StringResource
	mov	DWORD PTR tv728[ebp], eax
	jmp	SHORT $LN95@main
$LN94@main:
	mov	DWORD PTR tv728[ebp], 0
$LN95@main:
	mov	edx, DWORD PTR tv728[ebp]
	mov	DWORD PTR $T44712[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T44712[ebp]
	mov	DWORD PTR _sr$37692[ebp], eax
; Line 457
	cmp	DWORD PTR _sr$37692[ebp], 0
	jne	SHORT $LN15@main
; Line 459
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DH@DJICNGCP@unable?5to?5allocate?5memory?5for?5a?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 460
	mov	DWORD PTR $T44716[ebp], 7
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44716[ebp]
	jmp	$LN88@main
$LN15@main:
; Line 462
	mov	eax, DWORD PTR _sr$37692[ebp]
	push	eax
	mov	ecx, DWORD PTR _poolBundle+20
	call	?add@PseudoListResource@@QAEXPAUSResource@@@Z ; PseudoListResource::add
; Line 463
	mov	eax, DWORD PTR _maxStringIndex$37689[ebp]
	add	eax, 1
	mov	DWORD PTR _poolBundle+24, eax
; Line 465
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN16@main
	mov	edx, DWORD PTR ?__LINE__Var@?1??main@@9@4JA
	add	edx, 349				; 0000015dH
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GC@DEOFBLBF@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CE@FNDGHICG@?$AAU?$AA_?$AAS?$AAU?$AAC?$AAC?$AAE?$AAS?$AAS?$AA?$CI?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@main:
; Line 467
	mov	eax, DWORD PTR _length$37673[ebp]
	mov	ecx, DWORD PTR _p$37665[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _p$37665[ebp], edx
; Line 468
	mov	eax, DWORD PTR _length$37673[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _remaining$37667[ebp]
	sub	ecx, eax
	mov	DWORD PTR _remaining$37667[ebp], ecx
; Line 469
	cmp	DWORD PTR _remaining$37667[ebp], 0
	jg	$LN33@main
$LN31@main:
; Line 470
	mov	eax, DWORD PTR _poolBundle+20
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN35@main
; Line 471
	mov	eax, DWORD PTR _poolBundle+20
	mov	DWORD PTR $T44719[ebp], eax
	mov	ecx, DWORD PTR $T44719[ebp]
	mov	DWORD PTR $T44718[ebp], ecx
	cmp	DWORD PTR $T44718[ebp], 0
	je	SHORT $LN97@main
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44718[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44718[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv774[ebp], eax
	jmp	SHORT $LN98@main
$LN97@main:
	mov	DWORD PTR tv774[ebp], 0
$LN98@main:
; Line 472
	mov	DWORD PTR _poolBundle+20, 0
$LN35@main:
; Line 476
	mov	eax, DWORD PTR _poolFile$37599[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 477
	push	1
	call	_setUsePoolBundle
	add	esp, 4
; Line 478
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN13@main
	cmp	DWORD PTR _poolBundle+20, 0
	je	SHORT $LN13@main
; Line 479
	mov	esi, esp
	mov	eax, DWORD PTR _poolBundle+20
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	push	OFFSET ??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	mov	eax, DWORD PTR _poolBundle+24
	add	eax, 1
	mov	DWORD PTR _length$37707[ebp], eax
; Line 482
	mov	eax, DWORD PTR _length$37707[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _length$37707[ebp]
	push	ecx
	push	OFFSET ??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@main:
; Line 484
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@main:
; Line 488
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+378
	test	eax, eax
	jne	SHORT $LN12@main
	call	_getFormatVersion
	cmp	eax, 3
	jne	SHORT $LN12@main
	cmp	DWORD PTR _poolBundle+20, 0
	jne	SHORT $LN12@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	jne	SHORT $LN12@main
; Line 493
	push	2
	call	_setFormatVersion
	add	esp, 4
$LN12@main:
; Line 496
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+438
	test	eax, eax
	je	SHORT $LN11@main
; Line 500
	mov	esi, esp
	push	OFFSET ??_C@_0NB@MNCKCCNP@genrb?5option?5?9?9includeUnihanColl@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@main:
; Line 503
	mov	eax, DWORD PTR _argc$[ebp]
	sub	eax, 1
	cmp	eax, 1
	je	SHORT $LN10@main
; Line 504
	mov	eax, DWORD PTR _argc$[ebp]
	sub	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BL@CLBDCOE@genrb?5number?5of?5files?3?5?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@main:
; Line 507
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN9@main
$LN8@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@main:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	$LN7@main
; Line 508
	mov	DWORD PTR _status$[ebp], 0
; Line 509
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_getLongPathname
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
; Line 511
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 512
	cmp	DWORD PTR _inputDir$[ebp], 0
	je	SHORT $LN6@main
; Line 513
	mov	esi, esp
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44722[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44722[ebp]
	push	edx
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@main:
; Line 515
	mov	esi, esp
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T44723[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T44723[ebp]
	push	edx
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 516
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@main
; Line 517
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN7@main
$LN5@main:
; Line 520
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _gCurrentFileName, eax
; Line 521
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@main
; Line 522
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BG@DKLGJDPF@Processing?5file?5?$CC?$CFs?$CC?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@main:
; Line 526
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR ?options@@3PAUUOption@@A+318
	push	ecx
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::getAlias
	push	eax
	push	0
	mov	edx, DWORD PTR _outputDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _encoding$[ebp]
	push	ecx
	mov	edx, DWORD PTR _arg$[ebp]
	push	edx
	call	?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z ; processFile
	add	esp, 32					; 00000020H
; Line 527
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@main
$LN7@main:
; Line 529
	mov	ecx, OFFSET _poolBundle
	call	?close@ResFile@@QAEXXZ			; ResFile::close
; Line 531
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@main
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	je	SHORT $LN3@main
; Line 533
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _outputFileName$37727[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _outputDir$[ebp]
	push	edx
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, eax
	call	?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z ; SRBRoot::write
; Line 534
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@main
; Line 535
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CF@ONGAIFMN@unable?5to?5write?5the?5pool?5bundle?3@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@main:
; Line 539
	call	_u_cleanup_56
; Line 542
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@main
; Line 543
	mov	DWORD PTR $T44724[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44724[ebp]
	jmp	SHORT $LN88@main
$LN1@main:
; Line 546
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR $T44725[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	mov	eax, DWORD PTR $T44725[ebp]
$LN88@main:
; Line 547
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN112@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1344				; 00000540H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN112@main:
	DD	5
	DD	$LN111@main
$LN111@main:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN105@main
	DD	-120					; ffffff88H
	DD	4
	DD	$LN106@main
	DD	-256					; ffffff00H
	DD	56					; 00000038H
	DD	$LN107@main
	DD	-512					; fffffe00H
	DD	56					; 00000038H
	DD	$LN108@main
	DD	-776					; fffffcf8H
	DD	256					; 00000100H
	DD	$LN109@main
$LN109@main:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN108@main:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN107@main:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN106@main:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN105@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	lea	ecx, DWORD PTR _newPoolBundle$[ebp]
	jmp	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
__unwindfunclet$_main$1:
	mov	eax, DWORD PTR $T44688[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _poolFileName$37602[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$3:
	mov	eax, DWORD PTR $T44707[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$4:
	mov	eax, DWORD PTR $T44713[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _theCurrentFileName$37719[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1348]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
PUBLIC	??_7PseudoListResource@@6B@			; PseudoListResource::`vftable'
PUBLIC	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
PUBLIC	??_R4PseudoListResource@@6B@			; PseudoListResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPseudoListResource@@@8			; PseudoListResource `RTTI Type Descriptor'
PUBLIC	??_R3PseudoListResource@@8			; PseudoListResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PseudoListResource@@8			; PseudoListResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PseudoListResource@@8		; PseudoListResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ContainerResource@@8		; ContainerResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVContainerResource@@@8			; ContainerResource `RTTI Type Descriptor'
PUBLIC	??_R3ContainerResource@@8			; ContainerResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ContainerResource@@8			; ContainerResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SResource@@8			; SResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUSResource@@@8				; SResource `RTTI Type Descriptor'
PUBLIC	??_R3SResource@@8				; SResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SResource@@8				; SResource::`RTTI Base Class Array'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_EPseudoListResource@@UAEPAXI@Z:PROC		; PseudoListResource::`vector deleting destructor'
EXTRN	?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z:PROC ; ContainerResource::handlePreflightStrings
EXTRN	?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z:PROC ; PseudoListResource::handleWrite16
EXTRN	?handlePreWrite@SResource@@UAEXPAI@Z:PROC	; SResource::handlePreWrite
EXTRN	?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z:PROC ; SResource::handleWrite
;	COMDAT ??_R2SResource@@8
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
rdata$r	SEGMENT
??_R2SResource@@8 DD FLAT:??_R1A@?0A@EA@SResource@@8	; SResource::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SResource@@8
rdata$r	SEGMENT
??_R3SResource@@8 DD 00H				; SResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSResource@@@8
_DATA	SEGMENT
??_R0?AUSResource@@@8 DD FLAT:??_7type_info@@6B@	; SResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@SResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SResource@@8 DD FLAT:??_R0?AUSResource@@@8 ; SResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SResource@@8
rdata$r	ENDS
;	COMDAT ??_R2ContainerResource@@8
rdata$r	SEGMENT
??_R2ContainerResource@@8 DD FLAT:??_R1A@?0A@EA@ContainerResource@@8 ; ContainerResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3ContainerResource@@8
rdata$r	SEGMENT
??_R3ContainerResource@@8 DD 00H			; ContainerResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVContainerResource@@@8
_DATA	SEGMENT
??_R0?AVContainerResource@@@8 DD FLAT:??_7type_info@@6B@ ; ContainerResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVContainerResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ContainerResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ContainerResource@@8 DD FLAT:??_R0?AVContainerResource@@@8 ; ContainerResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PseudoListResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PseudoListResource@@8 DD FLAT:??_R0?AVPseudoListResource@@@8 ; PseudoListResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_R2PseudoListResource@@8
rdata$r	SEGMENT
??_R2PseudoListResource@@8 DD FLAT:??_R1A@?0A@EA@PseudoListResource@@8 ; PseudoListResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ContainerResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3PseudoListResource@@8
rdata$r	SEGMENT
??_R3PseudoListResource@@8 DD 00H			; PseudoListResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPseudoListResource@@@8
_DATA	SEGMENT
??_R0?AVPseudoListResource@@@8 DD FLAT:??_7type_info@@6B@ ; PseudoListResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPseudoListResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PseudoListResource@@6B@
rdata$r	SEGMENT
??_R4PseudoListResource@@6B@ DD 00H			; PseudoListResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPseudoListResource@@@8
	DD	FLAT:??_R3PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_7PseudoListResource@@6B@
CONST	SEGMENT
??_7PseudoListResource@@6B@ DD FLAT:??_R4PseudoListResource@@6B@ ; PseudoListResource::`vftable'
	DD	FLAT:??_EPseudoListResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z PROC ; PseudoListResource::PseudoListResource, COMDAT
; _this$ = ecx
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	2
	push	0
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PseudoListResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ENDP ; PseudoListResource::PseudoListResource
_TEXT	ENDS
PUBLIC	??_7ContainerResource@@6B@			; ContainerResource::`vftable'
PUBLIC	??_R4ContainerResource@@6B@			; ContainerResource::`RTTI Complete Object Locator'
EXTRN	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z:PROC ; SResource::SResource
EXTRN	??_EContainerResource@@UAEPAXI@Z:PROC		; ContainerResource::`vector deleting destructor'
EXTRN	?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z:PROC ; SResource::handleWrite16
;	COMDAT ??_R4ContainerResource@@6B@
rdata$r	SEGMENT
??_R4ContainerResource@@6B@ DD 00H			; ContainerResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVContainerResource@@@8
	DD	FLAT:??_R3ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_7ContainerResource@@6B@
CONST	SEGMENT
??_7ContainerResource@@6B@ DD FLAT:??_R4ContainerResource@@6B@ ; ContainerResource::`vftable'
	DD	FLAT:??_EContainerResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_type$ = 16						; size = 1
_comment$ = 20						; size = 4
_errorCode$ = 24					; size = 4
??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z PROC ; ContainerResource::ContainerResource, COMDAT
; _this$ = ecx
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _type$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ContainerResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ENDP ; ContainerResource::ContainerResource
_TEXT	ENDS
EXTRN	??1ContainerResource@@UAE@XZ:PROC		; ContainerResource::~ContainerResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GContainerResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GContainerResource@@UAEPAXI@Z PROC			; ContainerResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ContainerResource@@UAE@XZ		; ContainerResource::~ContainerResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GContainerResource@@UAEPAXI@Z ENDP			; ContainerResource::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1PseudoListResource@@UAE@XZ:PROC		; PseudoListResource::~PseudoListResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPseudoListResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPseudoListResource@@UAEPAXI@Z PROC			; PseudoListResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PseudoListResource@@UAE@XZ		; PseudoListResource::~PseudoListResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPseudoListResource@@UAEPAXI@Z ENDP			; PseudoListResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7StringResource@@6B@				; StringResource::`vftable'
PUBLIC	??_R4StringResource@@6B@			; StringResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringResource@@@8			; StringResource `RTTI Type Descriptor'
PUBLIC	??_R3StringResource@@8				; StringResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringResource@@8				; StringResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringResource@@8			; StringResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@StringBaseResource@@8		; StringBaseResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVStringBaseResource@@@8			; StringBaseResource `RTTI Type Descriptor'
PUBLIC	??_R3StringBaseResource@@8			; StringBaseResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringBaseResource@@8			; StringBaseResource::`RTTI Base Class Array'
EXTRN	??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z:PROC ; StringBaseResource::StringBaseResource
EXTRN	??_EStringResource@@UAEPAXI@Z:PROC		; StringResource::`vector deleting destructor'
EXTRN	?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z:PROC ; StringResource::handlePreflightStrings
EXTRN	?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z:PROC ; StringResource::handleWrite16
EXTRN	?handlePreWrite@StringBaseResource@@UAEXPAI@Z:PROC ; StringBaseResource::handlePreWrite
EXTRN	?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z:PROC ; StringBaseResource::handleWrite
;	COMDAT ??_R2StringBaseResource@@8
rdata$r	SEGMENT
??_R2StringBaseResource@@8 DD FLAT:??_R1A@?0A@EA@StringBaseResource@@8 ; StringBaseResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3StringBaseResource@@8
rdata$r	SEGMENT
??_R3StringBaseResource@@8 DD 00H			; StringBaseResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2StringBaseResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringBaseResource@@@8
_DATA	SEGMENT
??_R0?AVStringBaseResource@@@8 DD FLAT:??_7type_info@@6B@ ; StringBaseResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringBaseResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@StringBaseResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringBaseResource@@8 DD FLAT:??_R0?AVStringBaseResource@@@8 ; StringBaseResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringBaseResource@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@StringResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringResource@@8 DD FLAT:??_R0?AVStringResource@@@8 ; StringResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringResource@@8
rdata$r	ENDS
;	COMDAT ??_R2StringResource@@8
rdata$r	SEGMENT
??_R2StringResource@@8 DD FLAT:??_R1A@?0A@EA@StringResource@@8 ; StringResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringBaseResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3StringResource@@8
rdata$r	SEGMENT
??_R3StringResource@@8 DD 00H				; StringResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringResource@@@8
_DATA	SEGMENT
??_R0?AVStringResource@@@8 DD FLAT:??_7type_info@@6B@	; StringResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringResource@@6B@
rdata$r	SEGMENT
??_R4StringResource@@6B@ DD 00H				; StringResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringResource@@@8
	DD	FLAT:??_R3StringResource@@8
rdata$r	ENDS
;	COMDAT ??_7StringResource@@6B@
CONST	SEGMENT
??_7StringResource@@6B@ DD FLAT:??_R4StringResource@@6B@ ; StringResource::`vftable'
	DD	FLAT:??_EStringResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@StringBaseResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0StringResource@@QAE@HCPB_WHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_poolStringIndex$ = 8					; size = 4
_numCharsForLength$ = 12				; size = 1
_value$ = 16						; size = 4
_length$ = 20						; size = 4
_errorCode$ = 24					; size = 4
??0StringResource@@QAE@HCPB_WHAAW4UErrorCode@@@Z PROC	; StringResource::StringResource, COMDAT
; _this$ = ecx
; Line 331
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _numCharsForLength$[ebp]
	mov	BYTE PTR [eax+124], cl
; Line 333
	mov	eax, DWORD PTR _poolStringIndex$[ebp]
	or	eax, 1610612736				; 60000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 334
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0StringResource@@QAE@HCPB_WHAAW4UErrorCode@@@Z ENDP	; StringResource::StringResource
_TEXT	ENDS
EXTRN	??1StringResource@@UAE@XZ:PROC			; StringResource::~StringResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringResource@@UAEPAXI@Z PROC			; StringResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringResource@@UAE@XZ		; StringResource::~StringResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringResource@@UAEPAXI@Z ENDP			; StringResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0CE@KEDBAAPD@couldn?8t?5write?5bundle?5?$CFs?4?5Error?3@ ; `string'
PUBLIC	??_C@_0DJ@JGLNEP@couldn?8t?5make?5the?5res?5fileName?5f@ ; `string'
PUBLIC	??_C@_0DL@PBMDHFOM@bundle_compactKeys?$CI?$CFs?$CJ?5or?5bundle@ ; `string'
PUBLIC	??_C@_0CG@JNMFOPGC@couldn?8t?5parse?5the?5file?5?$CFs?4?5Erro@ ; `string'
PUBLIC	?isNull@?$LocalPointerBase@USRBRoot@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<SRBRoot>::isNull
PUBLIC	?adoptInstead@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@@Z ; icu_56::LocalPointer<SRBRoot>::adoptInstead
PUBLIC	??_C@_0BK@PHLEPJCF@autodetected?5encoding?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@ ; `string'
PUBLIC	??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ucbuf_close:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_bundle_write_xml:PROC
EXTRN	_bundle_write_java:PROC
EXTRN	?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z:PROC ; SRBRoot::addKeyBytes
EXTRN	?getKeyBytes@SRBRoot@@QBEPBDPAH@Z:PROC		; SRBRoot::getKeyBytes
EXTRN	?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z:PROC ; SRBRoot::compactKeys
EXTRN	_parse:PROC
EXTRN	_ucbuf_open:PROC
EXTRN	_getShowWarning:PROC
EXTRN	_strcat:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
;	COMDAT ??_C@_0CE@KEDBAAPD@couldn?8t?5write?5bundle?5?$CFs?4?5Error?3@
; File d:\mozilla\intl\icu\source\tools\genrb\genrb.cpp
CONST	SEGMENT
??_C@_0CE@KEDBAAPD@couldn?8t?5write?5bundle?5?$CFs?4?5Error?3@ DB 'couldn'
	DB	'''t write bundle %s. Error:%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@JGLNEP@couldn?8t?5make?5the?5res?5fileName?5f@
CONST	SEGMENT
??_C@_0DJ@JGLNEP@couldn?8t?5make?5the?5res?5fileName?5f@ DB 'couldn''t ma'
	DB	'ke the res fileName for  bundle %s. Error:%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@PBMDHFOM@bundle_compactKeys?$CI?$CFs?$CJ?5or?5bundle@
CONST	SEGMENT
??_C@_0DL@PBMDHFOM@bundle_compactKeys?$CI?$CFs?$CJ?5or?5bundle@ DB 'bundl'
	DB	'e_compactKeys(%s) or bundle_getKeyBytes() failed: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JNMFOPGC@couldn?8t?5parse?5the?5file?5?$CFs?4?5Erro@
CONST	SEGMENT
??_C@_0CG@JNMFOPGC@couldn?8t?5parse?5the?5file?5?$CFs?4?5Erro@ DB 'couldn'
	DB	'''t parse the file %s. Error:%s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@PHLEPJCF@autodetected?5encoding?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BK@PHLEPJCF@autodetected?5encoding?5?$CFs?6?$AA@ DB 'autodetected '
	DB	'encoding %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@
CONST	SEGMENT
??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@ DB 'An error occ'
	DB	'ured processing file %s. Error: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@ DB 'couldn''t open'
	DB	' file %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z$8
__ehfuncinfo$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv187 = -620						; size = 4
tv172 = -620						; size = 4
_newKeysLimit$37797 = -420				; size = 4
_newKeys$37793 = -408					; size = 4
_newKeysLength$37792 = -396				; size = 4
_filenameSize$37760 = -384				; size = 4
_filenameBegin$37757 = -372				; size = 4
_filelen$ = -360					; size = 4
_dirlen$ = -348						; size = 4
_outputFileName$ = -336					; size = 256
_inputDirBuf$ = -72					; size = 4
_openFileName$ = -60					; size = 4
_rbname$ = -48						; size = 4
_ucbuf$ = -36						; size = 4
_data$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_filename$ = 8						; size = 4
_cp$ = 12						; size = 4
_inputDir$ = 16						; size = 4
_outputDir$ = 20					; size = 4
_packageName$ = 24					; size = 4
_newPoolBundle$ = 28					; size = 4
_omitBinaryCollation$ = 32				; size = 1
_status$ = 36						; size = 4
?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z PROC ; processFile, COMDAT
; Line 554
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 608				; 00000260H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-620]
	mov	ecx, 152				; 00000098H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 555
	push	0
	lea	ecx, DWORD PTR _data$[ebp]
	call	??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ; icu_56::LocalPointer<SRBRoot>::LocalPointer<SRBRoot>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 556
	mov	DWORD PTR _ucbuf$[ebp], 0
; Line 557
	mov	DWORD PTR _rbname$[ebp], 0
; Line 558
	mov	DWORD PTR _openFileName$[ebp], 0
; Line 559
	mov	DWORD PTR _inputDirBuf$[ebp], 0
; Line 563
	mov	DWORD PTR _dirlen$[ebp], 0
; Line 564
	mov	DWORD PTR _filelen$[ebp], 0
; Line 566
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN43@processFil
; Line 567
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	jmp	$LN44@processFil
$LN43@processFil:
; Line 569
	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN42@processFil
; Line 570
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 571
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
	jmp	$LN44@processFil
; Line 572
	jmp	SHORT $LN41@processFil
$LN42@processFil:
; Line 573
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _filelen$[ebp], eax
$LN41@processFil:
; Line 576
	cmp	DWORD PTR _inputDir$[ebp], 0
	jne	$LN40@processFil
; Line 577
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _filenameBegin$37757[ebp], eax
; Line 578
	mov	eax, DWORD PTR _filelen$[ebp]
	mov	ecx, DWORD PTR _dirlen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _openFileName$[ebp], eax
; Line 579
	mov	eax, DWORD PTR _openFileName$[ebp]
	mov	BYTE PTR [eax], 0
; Line 580
	cmp	DWORD PTR _filenameBegin$37757[ebp], 0
	je	$LN39@processFil
; Line 587
	mov	eax, DWORD PTR _filenameBegin$37757[ebp]
	sub	eax, DWORD PTR _filename$[ebp]
	add	eax, 1
	mov	DWORD PTR _filenameSize$37760[ebp], eax
; Line 588
	push	1
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _filenameSize$37760[ebp]
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _filenameSize$37760[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _inputDirBuf$[ebp], eax
; Line 591
	cmp	DWORD PTR _inputDirBuf$[ebp], 0
	jne	SHORT $LN38@processFil
; Line 592
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 593
	jmp	$finish$37764
$LN38@processFil:
; Line 596
	mov	eax, DWORD PTR _inputDirBuf$[ebp]
	add	eax, DWORD PTR _filenameSize$37760[ebp]
	mov	BYTE PTR [eax-1], 0
; Line 597
	mov	eax, DWORD PTR _inputDirBuf$[ebp]
	mov	DWORD PTR _inputDir$[ebp], eax
; Line 598
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dirlen$[ebp], eax
$LN39@processFil:
; Line 600
	jmp	$LN36@processFil
$LN40@processFil:
; Line 601
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dirlen$[ebp], eax
; Line 603
	mov	eax, DWORD PTR _inputDir$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN35@processFil
; Line 604
	mov	eax, DWORD PTR _filelen$[ebp]
	mov	ecx, DWORD PTR _dirlen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _openFileName$[ebp], eax
; Line 607
	cmp	DWORD PTR _openFileName$[ebp], 0
	jne	SHORT $LN34@processFil
; Line 608
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 609
	jmp	$finish$37764
$LN34@processFil:
; Line 612
	mov	eax, DWORD PTR _openFileName$[ebp]
	mov	BYTE PTR [eax], 0
; Line 624
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN32@processFil
	mov	eax, DWORD PTR _inputDir$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN32@processFil
; Line 625
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _openFileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 626
	mov	eax, DWORD PTR _openFileName$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
$LN32@processFil:
; Line 628
	mov	eax, DWORD PTR _openFileName$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	mov	BYTE PTR [eax+1], 0
; Line 629
	jmp	SHORT $LN36@processFil
$LN35@processFil:
; Line 630
	mov	eax, DWORD PTR _filelen$[ebp]
	mov	ecx, DWORD PTR _dirlen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _openFileName$[ebp], eax
; Line 633
	cmp	DWORD PTR _openFileName$[ebp], 0
	jne	SHORT $LN30@processFil
; Line 634
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 635
	jmp	$finish$37764
$LN30@processFil:
; Line 638
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _openFileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN36@processFil:
; Line 643
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _openFileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 645
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	call	_getShowWarning
	movzx	ecx, al
	push	ecx
	lea	edx, DWORD PTR _cp$[ebp]
	push	edx
	mov	eax, DWORD PTR _openFileName$[ebp]
	push	eax
	call	_ucbuf_open
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ucbuf$[ebp], eax
; Line 646
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 4
	jne	SHORT $LN28@processFil
; Line 648
	cmp	DWORD PTR _openFileName$[ebp], 0
	jne	SHORT $LN46@processFil
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR tv172[ebp], eax
	jmp	SHORT $LN47@processFil
$LN46@processFil:
	mov	ecx, DWORD PTR _openFileName$[ebp]
	mov	DWORD PTR tv172[ebp], ecx
$LN47@processFil:
	mov	esi, esp
	mov	edx, DWORD PTR tv172[ebp]
	push	edx
	push	OFFSET ??_C@_0BH@FJJHPLCK@couldn?8t?5open?5file?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 649
	jmp	$finish$37764
$LN28@processFil:
; Line 651
	cmp	DWORD PTR _ucbuf$[ebp], 0
	je	SHORT $LN25@processFil
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@processFil
$LN25@processFil:
; Line 653
	cmp	DWORD PTR _openFileName$[ebp], 0
	jne	SHORT $LN48@processFil
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR tv187[ebp], eax
	jmp	SHORT $LN49@processFil
$LN48@processFil:
	mov	ecx, DWORD PTR _openFileName$[ebp]
	mov	DWORD PTR tv187[ebp], ecx
$LN49@processFil:
	mov	edx, DWORD PTR _status$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR tv187[ebp]
	push	ecx
	push	OFFSET ??_C@_0DA@IMFPMJAF@An?5error?5occured?5processing?5file@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 654
	jmp	$finish$37764
$LN26@processFil:
; Line 657
	cmp	DWORD PTR _cp$[ebp], 0
	je	SHORT $LN23@processFil
	call	_isVerbose
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN23@processFil
; Line 658
	mov	esi, esp
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_0BK@PHLEPJCF@autodetected?5encoding?5?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@processFil:
; Line 662
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR ?options@@3PAUUOption@@A+358
	push	ecx
	movsx	edx, BYTE PTR _omitBinaryCollation$[ebp]
	test	edx, edx
	sete	al
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inputDir$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ucbuf$[ebp]
	push	edx
	call	_parse
	add	esp, 28					; 0000001cH
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?adoptInstead@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@@Z ; icu_56::LocalPointer<SRBRoot>::adoptInstead
; Line 664
	lea	ecx, DWORD PTR _data$[ebp]
	call	?isNull@?$LocalPointerBase@USRBRoot@@@icu_56@@QBECXZ ; icu_56::LocalPointerBase<SRBRoot>::isNull
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN21@processFil
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@processFil
$LN21@processFil:
; Line 665
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0CG@JNMFOPGC@couldn?8t?5parse?5the?5file?5?$CFs?4?5Erro@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 666
	jmp	$finish$37764
$LN22@processFil:
; Line 668
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+398
	test	eax, eax
	je	$LN19@processFil
; Line 669
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, DWORD PTR _newPoolBundle$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 670
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, eax
	call	?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z ; SRBRoot::compactKeys
; Line 672
	lea	eax, DWORD PTR _newKeysLength$37792[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, eax
	call	?getKeyBytes@SRBRoot@@QBEPBDPAH@Z	; SRBRoot::getKeyBytes
	mov	DWORD PTR _newKeys$37793[ebp], eax
; Line 673
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newKeysLength$37792[ebp]
	push	ecx
	mov	edx, DWORD PTR _newKeys$37793[ebp]
	push	edx
	mov	ecx, DWORD PTR _newPoolBundle$[ebp]
	call	?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z ; SRBRoot::addKeyBytes
; Line 674
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@processFil
; Line 676
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0DL@PBMDHFOM@bundle_compactKeys?$CI?$CFs?$CJ?5or?5bundle@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 677
	jmp	$finish$37764
$LN18@processFil:
; Line 680
	mov	eax, DWORD PTR _newKeys$37793[ebp]
	add	eax, DWORD PTR _newKeysLength$37792[ebp]
	mov	DWORD PTR _newKeysLimit$37797[ebp], eax
	jmp	SHORT $LN16@processFil
$LN15@processFil:
	mov	eax, DWORD PTR _newKeys$37793[ebp]
	add	eax, 1
	mov	DWORD PTR _newKeys$37793[ebp], eax
$LN16@processFil:
	mov	eax, DWORD PTR _newKeys$37793[ebp]
	cmp	eax, DWORD PTR _newKeysLimit$37797[ebp]
	jae	SHORT $LN19@processFil
; Line 681
	mov	eax, DWORD PTR _newKeys$37793[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@processFil
; Line 682
	mov	eax, DWORD PTR _newPoolBundle$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR _newPoolBundle$[ebp]
	mov	DWORD PTR [edx+40], ecx
$LN13@processFil:
; Line 684
	jmp	SHORT $LN15@processFil
$LN19@processFil:
; Line 687
	movsx	eax, BYTE PTR ?options@@3PAUUOption@@A+418
	test	eax, eax
	je	SHORT $LN12@processFil
; Line 688
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	DWORD PTR [eax+116], OFFSET _poolBundle
$LN12@processFil:
; Line 692
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _packageName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outputDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?make_res_filename@@YAPADPBD00AAW4UErrorCode@@@Z ; make_res_filename
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rbname$[ebp], eax
; Line 693
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@processFil
; Line 695
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0DJ@JGLNEP@couldn?8t?5make?5the?5res?5fileName?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 696
	jmp	$finish$37764
$LN11@processFil:
; Line 698
	movsx	eax, BYTE PTR _write_java
	cmp	eax, 1
	jne	SHORT $LN9@processFil
; Line 701
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?options@@3PAUUOption@@A+244
	push	ecx
	mov	edx, DWORD PTR ?options@@3PAUUOption@@A+224
	push	edx
	push	256					; 00000100H
	lea	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outputEnc
	push	ecx
	mov	edx, DWORD PTR _outputDir$[ebp]
	push	edx
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::getAlias
	push	eax
	call	_bundle_write_java
	add	esp, 32					; 00000020H
	jmp	SHORT $LN8@processFil
$LN9@processFil:
; Line 702
	movsx	eax, BYTE PTR _write_xliff
	cmp	eax, 1
	jne	SHORT $LN7@processFil
; Line 705
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xliffOutputFileName
	push	ecx
	mov	edx, DWORD PTR _language
	push	edx
	push	256					; 00000100H
	lea	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _outputEnc
	push	edx
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::getAlias
	push	eax
	call	_bundle_write_xml
	add	esp, 36					; 00000024H
; Line 706
	jmp	SHORT $LN8@processFil
$LN7@processFil:
; Line 708
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	256					; 00000100H
	lea	ecx, DWORD PTR _outputFileName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _packageName$[ebp]
	push	edx
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ; icu_56::LocalPointerBase<SRBRoot>::operator->
	mov	ecx, eax
	call	?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z ; SRBRoot::write
$LN8@processFil:
; Line 710
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $finish$37764
; Line 711
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	lea	edx, DWORD PTR _outputFileName$[ebp]
	push	edx
	push	OFFSET ??_C@_0CE@KEDBAAPD@couldn?8t?5write?5bundle?5?$CFs?4?5Error?3@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$finish$37764:
; Line 716
	cmp	DWORD PTR _inputDirBuf$[ebp], 0
	je	SHORT $LN4@processFil
; Line 717
	mov	eax, DWORD PTR _inputDirBuf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN4@processFil:
; Line 720
	cmp	DWORD PTR _openFileName$[ebp], 0
	je	SHORT $LN3@processFil
; Line 721
	mov	eax, DWORD PTR _openFileName$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@processFil:
; Line 724
	cmp	DWORD PTR _ucbuf$[ebp], 0
	je	SHORT $LN2@processFil
; Line 725
	mov	eax, DWORD PTR _ucbuf$[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
$LN2@processFil:
; Line 728
	cmp	DWORD PTR _rbname$[ebp], 0
	je	SHORT $LN1@processFil
; Line 729
	mov	eax, DWORD PTR _rbname$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@processFil:
; Line 731
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
$LN44@processFil:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN56@processFil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 620				; 0000026cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN56@processFil:
	DD	3
	DD	$LN55@processFil
$LN55@processFil:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN51@processFil
	DD	-336					; fffffeb0H
	DD	256					; 00000100H
	DD	$LN52@processFil
	DD	-396					; fffffe74H
	DD	4
	DD	$LN53@processFil
$LN53@processFil:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	115					; 00000073H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN52@processFil:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN51@processFil:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z$8:
	lea	ecx, DWORD PTR _data$[ebp]
	jmp	??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
__ehhandler$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-624]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?processFile@@YAXPBD0000PAUSRBRoot@@CAAW4UErrorCode@@@Z ENDP ; processFile
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??_C@_04MMBENCGO@?4res?$AA@			; `string'
EXTRN	_get_dirname:PROC
EXTRN	_get_basename:PROC
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MMBENCGO@?4res?$AA@
CONST	SEGMENT
??_C@_04MMBENCGO@?4res?$AA@ DB '.res', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?make_res_filename@@YAPADPBD00AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_basenamelen$37849 = -68				; size = 4
_dirlen$37847 = -56					; size = 4
_pkgLen$ = -44						; size = 4
_resName$ = -32						; size = 4
_dirname$ = -20						; size = 4
_basename$ = -8						; size = 4
_filename$ = 8						; size = 4
_outputDir$ = 12					; size = 4
_packageName$ = 16					; size = 4
_status$ = 20						; size = 4
?make_res_filename@@YAPADPBD00AAW4UErrorCode@@@Z PROC	; make_res_filename, COMDAT
; Line 738
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 743
	mov	DWORD PTR _pkgLen$[ebp], 0
; Line 746
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@make_res_f
; Line 747
	xor	eax, eax
	jmp	$LN16@make_res_f
$LN15@make_res_f:
; Line 750
	cmp	DWORD PTR _packageName$[ebp], 0
	je	SHORT $LN14@make_res_f
; Line 752
	mov	eax, DWORD PTR _packageName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _pkgLen$[ebp], eax
$LN14@make_res_f:
; Line 756
	mov	DWORD PTR _resName$[ebp], 0
	mov	eax, DWORD PTR _resName$[ebp]
	mov	DWORD PTR _dirname$[ebp], eax
	mov	ecx, DWORD PTR _dirname$[ebp]
	mov	DWORD PTR _basename$[ebp], ecx
; Line 759
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _basename$[ebp], eax
; Line 760
	cmp	DWORD PTR _basename$[ebp], 0
	jne	SHORT $LN13@make_res_f
; Line 761
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 762
	jmp	$finish$37832
	jmp	$finish$37832
$LN13@make_res_f:
; Line 765
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _basename$[ebp]
	push	ecx
	call	_get_basename
	add	esp, 8
; Line 767
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _dirname$[ebp], eax
; Line 768
	cmp	DWORD PTR _dirname$[ebp], 0
	jne	SHORT $LN11@make_res_f
; Line 769
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 770
	jmp	$finish$37832
	jmp	$finish$37832
$LN11@make_res_f:
; Line 773
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dirname$[ebp]
	push	ecx
	call	_get_dirname
	add	esp, 8
; Line 775
	cmp	DWORD PTR _outputDir$[ebp], 0
	jne	$LN9@make_res_f
; Line 780
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	add	esi, DWORD PTR _pkgLen$[ebp]
	mov	ecx, DWORD PTR _basename$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	esi, eax
	push	OFFSET ??_C@_04MMBENCGO@?4res?$AA@
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+8]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _resName$[ebp], eax
; Line 781
	cmp	DWORD PTR _resName$[ebp], 0
	jne	SHORT $LN8@make_res_f
; Line 782
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 783
	jmp	$finish$37832
	jmp	$finish$37832
$LN8@make_res_f:
; Line 786
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 788
	cmp	DWORD PTR _packageName$[ebp], 0
	je	SHORT $LN6@make_res_f
; Line 790
	mov	eax, DWORD PTR _packageName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 791
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _resName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN6@make_res_f:
; Line 794
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 796
	jmp	$finish$37832
$LN9@make_res_f:
; Line 797
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dirlen$37847[ebp], eax
; Line 798
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _basenamelen$37849[ebp], eax
; Line 800
	mov	eax, DWORD PTR _dirlen$37847[ebp]
	add	eax, DWORD PTR _pkgLen$[ebp]
	mov	ecx, DWORD PTR _basenamelen$37849[ebp]
	lea	edx, DWORD PTR [eax+ecx+8]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _resName$[ebp], eax
; Line 802
	cmp	DWORD PTR _resName$[ebp], 0
	jne	SHORT $LN4@make_res_f
; Line 803
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 804
	jmp	SHORT $finish$37832
	jmp	SHORT $finish$37832
$LN4@make_res_f:
; Line 807
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 809
	mov	eax, DWORD PTR _outputDir$[ebp]
	add	eax, DWORD PTR _dirlen$37847[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN2@make_res_f
; Line 810
	mov	eax, DWORD PTR _resName$[ebp]
	add	eax, DWORD PTR _dirlen$37847[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
; Line 811
	mov	eax, DWORD PTR _resName$[ebp]
	add	eax, DWORD PTR _dirlen$37847[ebp]
	mov	BYTE PTR [eax+1], 0
$LN2@make_res_f:
; Line 814
	cmp	DWORD PTR _packageName$[ebp], 0
	je	SHORT $LN1@make_res_f
; Line 816
	mov	eax, DWORD PTR _packageName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 817
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _resName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN1@make_res_f:
; Line 820
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$finish$37832:
; Line 824
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 825
	mov	eax, DWORD PTR _dirname$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 827
	mov	eax, DWORD PTR _resName$[ebp]
$LN16@make_res_f:
; Line 828
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?make_res_filename@@YAPADPBD00AAW4UErrorCode@@@Z ENDP	; make_res_filename
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ; icu_56::LocalPointerBase<SRBRoot>::LocalPointerBase<SRBRoot>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z PROC ; icu_56::LocalPointer<SRBRoot>::LocalPointer<SRBRoot>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\unicode\localpointer.h
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ; icu_56::LocalPointerBase<SRBRoot>::LocalPointerBase<SRBRoot>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointer@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ENDP ; icu_56::LocalPointer<SRBRoot>::LocalPointer<SRBRoot>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ	; icu_56::LocalPointerBase<SRBRoot>::~LocalPointerBase<SRBRoot>
PUBLIC	??_GSRBRoot@@QAEPAXI@Z				; SRBRoot::`scalar deleting destructor'
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv78 = -244						; size = 4
$T44798 = -236						; size = 4
$T44799 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44799[ebp], ecx
	mov	edx, DWORD PTR $T44799[ebp]
	mov	DWORD PTR $T44798[ebp], edx
	cmp	DWORD PTR $T44798[ebp], 0
	je	SHORT $LN3@LocalPoint
	push	1
	mov	ecx, DWORD PTR $T44798[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN1@LocalPoint
$LN3@LocalPoint:
	mov	DWORD PTR tv78[ebp], 0
$LN1@LocalPoint:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SRBRoot>::~LocalPointerBase<SRBRoot>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SRBRoot>::~LocalPointerBase<SRBRoot>
__ehhandler$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@USRBRoot@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointer<SRBRoot>::~LocalPointer<SRBRoot>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?adoptInstead@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
tv73 = -232						; size = 4
$T44811 = -224						; size = 4
$T44812 = -212						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?adoptInstead@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@@Z PROC ; icu_56::LocalPointer<SRBRoot>::adoptInstead, COMDAT
; _this$ = ecx
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44812[ebp], ecx
	mov	edx, DWORD PTR $T44812[ebp]
	mov	DWORD PTR $T44811[ebp], edx
	cmp	DWORD PTR $T44811[ebp], 0
	je	SHORT $LN3@adoptInste
	push	1
	mov	ecx, DWORD PTR $T44811[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN4@adoptInste
$LN3@adoptInste:
	mov	DWORD PTR tv73[ebp], 0
$LN4@adoptInste:
; Line 287
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?adoptInstead@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@@Z ENDP ; icu_56::LocalPointer<SRBRoot>::adoptInstead
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?adoptInsteadAndCheckErrorCode@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv88 = -256						; size = 4
tv77 = -256						; size = 4
$T44817 = -248						; size = 4
$T44818 = -236						; size = 4
$T44821 = -224						; size = 4
$T44822 = -212						; size = 4
_this$ = -8						; size = 4
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?adoptInsteadAndCheckErrorCode@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<SRBRoot>::adoptInsteadAndCheckErrorCode, COMDAT
; _this$ = ecx
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 306
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@adoptInste@2
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44818[ebp], ecx
	mov	edx, DWORD PTR $T44818[ebp]
	mov	DWORD PTR $T44817[ebp], edx
	cmp	DWORD PTR $T44817[ebp], 0
	je	SHORT $LN6@adoptInste@2
	push	1
	mov	ecx, DWORD PTR $T44817[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN7@adoptInste@2
$LN6@adoptInste@2:
	mov	DWORD PTR tv77[ebp], 0
$LN7@adoptInste@2:
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 309
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@adoptInste@2
; Line 310
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@adoptInste@2:
; Line 312
	jmp	SHORT $LN4@adoptInste@2
$LN3@adoptInste@2:
; Line 313
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR $T44822[ebp], eax
	mov	ecx, DWORD PTR $T44822[ebp]
	mov	DWORD PTR $T44821[ebp], ecx
	cmp	DWORD PTR $T44821[ebp], 0
	je	SHORT $LN8@adoptInste@2
	push	1
	mov	ecx, DWORD PTR $T44821[ebp]
	call	??_GSRBRoot@@QAEPAXI@Z
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN4@adoptInste@2
$LN8@adoptInste@2:
	mov	DWORD PTR tv88[ebp], 0
$LN4@adoptInste@2:
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?adoptInsteadAndCheckErrorCode@?$LocalPointer@USRBRoot@@@icu_56@@QAEXPAUSRBRoot@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<SRBRoot>::adoptInsteadAndCheckErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNull@?$LocalPointerBase@USRBRoot@@@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@USRBRoot@@@icu_56@@QBECXZ PROC ; icu_56::LocalPointerBase<SRBRoot>::isNull, COMDAT
; _this$ = ecx
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@USRBRoot@@@icu_56@@QBECXZ ENDP ; icu_56::LocalPointerBase<SRBRoot>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ PROC ; icu_56::LocalPointerBase<SRBRoot>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ENDP ; icu_56::LocalPointerBase<SRBRoot>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ PROC ; icu_56::LocalPointerBase<SRBRoot>::operator->, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$LocalPointerBase@USRBRoot@@@icu_56@@QBEPAUSRBRoot@@XZ ENDP ; icu_56::LocalPointerBase<SRBRoot>::operator->
_TEXT	ENDS
EXTRN	??1SRBRoot@@QAE@XZ:PROC				; SRBRoot::~SRBRoot
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSRBRoot@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSRBRoot@@QAEPAXI@Z PROC				; SRBRoot::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SRBRoot@@QAE@XZ			; SRBRoot::~SRBRoot
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSRBRoot@@QAEPAXI@Z ENDP				; SRBRoot::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z PROC ; icu_56::LocalPointerBase<SRBRoot>::LocalPointerBase<SRBRoot>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@PAUSRBRoot@@@Z ENDP ; icu_56::LocalPointerBase<SRBRoot>::LocalPointerBase<SRBRoot>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointerBase<SRBRoot>::~LocalPointerBase<SRBRoot>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@USRBRoot@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointerBase<SRBRoot>::~LocalPointerBase<SRBRoot>
_TEXT	ENDS
PUBLIC	??0ResFile@@QAE@XZ				; ResFile::ResFile
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EpoolBundle@@YAXXZ
text$yc	SEGMENT
??__EpoolBundle@@YAXXZ PROC				; `dynamic initializer for 'poolBundle'', COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\genrb.cpp
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _poolBundle
	call	??0ResFile@@QAE@XZ			; ResFile::ResFile
	push	OFFSET ??__FpoolBundle@@YAXXZ		; `dynamic atexit destructor for 'poolBundle''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EpoolBundle@@YAXXZ ENDP				; `dynamic initializer for 'poolBundle''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??0ResFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ResFile@@QAE@XZ PROC					; ResFile::ResFile, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ResFile@@QAE@XZ ENDP					; ResFile::ResFile
_TEXT	ENDS
PUBLIC	??1ResFile@@QAE@XZ				; ResFile::~ResFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FpoolBundle@@YAXXZ
text$yd	SEGMENT
??__FpoolBundle@@YAXXZ PROC				; `dynamic atexit destructor for 'poolBundle'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _poolBundle
	call	??1ResFile@@QAE@XZ			; ResFile::~ResFile
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FpoolBundle@@YAXXZ ENDP				; `dynamic atexit destructor for 'poolBundle''
; Function compile flags: /Odtp /RTCsu /ZI
text$yd	ENDS
;	COMDAT ??1ResFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ResFile@@QAE@XZ PROC					; ResFile::~ResFile, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@ResFile@@QAEXXZ			; ResFile::close
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ResFile@@QAE@XZ ENDP					; ResFile::~ResFile
_TEXT	ENDS
_BSS	SEGMENT
_poolBundle DB	020H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_poolBundle$initializer$ DD FLAT:??__EpoolBundle@@YAXXZ
CRT$XCU	ENDS
END

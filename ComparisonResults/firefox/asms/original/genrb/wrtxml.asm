; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_0M@BFCLNKDN@x?9icu?9table?$AA@		; `string'
PUBLIC	??_C@_0BA@IJCMBKIC@x?9icu?9intvector?$AA@	; `string'
PUBLIC	??_C@_0O@DMJLGLIP@x?9icu?9integer?$AA@		; `string'
PUBLIC	??_C@_0N@GACOAOME@x?9icu?9binary?$AA@		; `string'
PUBLIC	??_C@_0M@NPMGDNNG@x?9icu?9array?$AA@		; `string'
PUBLIC	??_C@_0M@HNOBCMCB@x?9icu?9alias?$AA@		; `string'
PUBLIC	??_C@_0M@MBDKLJIJ@application?$AA@		; `string'
PUBLIC	??_C@_0BC@NLNOHFGP@?$DM?1internal?9file?$DO?6?$AA@ ; `string'
PUBLIC	??_C@_0P@PFEMNKFG@?$DMinternal?9file?$AA@	; `string'
PUBLIC	??_C@_0P@MLFLDCHM@?$DMexternal?9file?$AA@	; `string'
PUBLIC	??_C@_0P@GHPEAACM@?$DM?1bin?9source?$DO?6?$AA@	; `string'
PUBLIC	??_C@_0O@PCBNGLIO@?$DMbin?9source?$DO?6?$AA@	; `string'
PUBLIC	??_C@_0N@PMLOBHJD@?$DM?1bin?9unit?$DO?6?$AA@	; `string'
PUBLIC	??_C@_08CCOCHLGB@bin?9unit?$AA@			; `string'
PUBLIC	??_C@_09OFJOICFB@?$DM?1group?$DO?6?$AA@		; `string'
PUBLIC	??_C@_05MGJOOGAJ@group?$AA@			; `string'
PUBLIC	??_C@_0L@DGHBPLGI@?$DM?1source?$DO?6?$AA@	; `string'
PUBLIC	??_C@_08HAGFBHGO@?$DMsource?$DO?$AA@		; `string'
PUBLIC	??_C@_0P@FFFAFHJH@?$DM?1trans?9unit?$DO?6?$AA@	; `string'
PUBLIC	??_C@_0L@CGGKGCCF@trans?9unit?$AA@		; `string'
PUBLIC	??_C@_09PDIPEAEJ@?$DM?1xliff?$DO?6?$AA@		; `string'
PUBLIC	??_C@_0BAA@NDKKMJNI@?$DMxliff?5version?5?$DN?5?$CC1?41?$CC?5xmlns?$DN?8ur@ ; `string'
PUBLIC	??_C@_0CI@GIEOKBJG@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@ ; `string'
PUBLIC	??_C@_04JLMNOPJB@?4xlf?$AA@			; `string'
PUBLIC	??_C@_04LCMACLFG@?4txt?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?ISOCountries@@3PBQBDB				; ISOCountries
PUBLIC	?ISOLanguages@@3PBQBDB				; ISOLanguages
PUBLIC	?textExt@@3PBDB					; textExt
PUBLIC	?xliffExt@@3PBDB				; xliffExt
_BSS	SEGMENT
?ISOCountries@@3PBQBDB DD 01H DUP (?)			; ISOCountries
?ISOLanguages@@3PBQBDB DD 01H DUP (?)			; ISOLanguages
_tabCount DD	01H DUP (?)
_out	DD	01H DUP (?)
_outDir	DD	01H DUP (?)
_conv	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0M@BFCLNKDN@x?9icu?9table?$AA@
CONST	SEGMENT
??_C@_0M@BFCLNKDN@x?9icu?9table?$AA@ DB 'x-icu-table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJCMBKIC@x?9icu?9intvector?$AA@
CONST	SEGMENT
??_C@_0BA@IJCMBKIC@x?9icu?9intvector?$AA@ DB 'x-icu-intvector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DMJLGLIP@x?9icu?9integer?$AA@
CONST	SEGMENT
??_C@_0O@DMJLGLIP@x?9icu?9integer?$AA@ DB 'x-icu-integer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GACOAOME@x?9icu?9binary?$AA@
CONST	SEGMENT
??_C@_0N@GACOAOME@x?9icu?9binary?$AA@ DB 'x-icu-binary', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NPMGDNNG@x?9icu?9array?$AA@
CONST	SEGMENT
??_C@_0M@NPMGDNNG@x?9icu?9array?$AA@ DB 'x-icu-array', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HNOBCMCB@x?9icu?9alias?$AA@
CONST	SEGMENT
??_C@_0M@HNOBCMCB@x?9icu?9alias?$AA@ DB 'x-icu-alias', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MBDKLJIJ@application?$AA@
CONST	SEGMENT
??_C@_0M@MBDKLJIJ@application?$AA@ DB 'application', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NLNOHFGP@?$DM?1internal?9file?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BC@NLNOHFGP@?$DM?1internal?9file?$DO?6?$AA@ DB '</internal-file>', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PFEMNKFG@?$DMinternal?9file?$AA@
CONST	SEGMENT
??_C@_0P@PFEMNKFG@?$DMinternal?9file?$AA@ DB '<internal-file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLFLDCHM@?$DMexternal?9file?$AA@
CONST	SEGMENT
??_C@_0P@MLFLDCHM@?$DMexternal?9file?$AA@ DB '<external-file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GHPEAACM@?$DM?1bin?9source?$DO?6?$AA@
CONST	SEGMENT
??_C@_0P@GHPEAACM@?$DM?1bin?9source?$DO?6?$AA@ DB '</bin-source>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PCBNGLIO@?$DMbin?9source?$DO?6?$AA@
CONST	SEGMENT
??_C@_0O@PCBNGLIO@?$DMbin?9source?$DO?6?$AA@ DB '<bin-source>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMLOBHJD@?$DM?1bin?9unit?$DO?6?$AA@
CONST	SEGMENT
??_C@_0N@PMLOBHJD@?$DM?1bin?9unit?$DO?6?$AA@ DB '</bin-unit>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CCOCHLGB@bin?9unit?$AA@
CONST	SEGMENT
??_C@_08CCOCHLGB@bin?9unit?$AA@ DB 'bin-unit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OFJOICFB@?$DM?1group?$DO?6?$AA@
CONST	SEGMENT
??_C@_09OFJOICFB@?$DM?1group?$DO?6?$AA@ DB '</group>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group?$AA@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group?$AA@ DB 'group', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGHBPLGI@?$DM?1source?$DO?6?$AA@
CONST	SEGMENT
??_C@_0L@DGHBPLGI@?$DM?1source?$DO?6?$AA@ DB '</source>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HAGFBHGO@?$DMsource?$DO?$AA@
CONST	SEGMENT
??_C@_08HAGFBHGO@?$DMsource?$DO?$AA@ DB '<source>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFFAFHJH@?$DM?1trans?9unit?$DO?6?$AA@
CONST	SEGMENT
??_C@_0P@FFFAFHJH@?$DM?1trans?9unit?$DO?6?$AA@ DB '</trans-unit>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CGGKGCCF@trans?9unit?$AA@
CONST	SEGMENT
??_C@_0L@CGGKGCCF@trans?9unit?$AA@ DB 'trans-unit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PDIPEAEJ@?$DM?1xliff?$DO?6?$AA@
CONST	SEGMENT
??_C@_09PDIPEAEJ@?$DM?1xliff?$DO?6?$AA@ DB '</xliff>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAA@NDKKMJNI@?$DMxliff?5version?5?$DN?5?$CC1?41?$CC?5xmlns?$DN?8ur@
CONST	SEGMENT
??_C@_0BAA@NDKKMJNI@?$DMxliff?5version?5?$DN?5?$CC1?41?$CC?5xmlns?$DN?8ur@ DB '<'
	DB	'xliff version = "1.1" xmlns=''urn:oasis:names:tc:xliff:docume'
	DB	'nt:1.1'' xmlns:xsi=''http://www.w3.org/2001/XMLSchema-instanc'
	DB	'e'' xsi:schemaLocation=''urn:oasis:names:tc:xliff:document:1.'
	DB	'1 http://www.oasis-open.org/committees/xliff/documents/xliff-'
	DB	'core-1.1.xsd''>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GIEOKBJG@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@
CONST	SEGMENT
??_C@_0CI@GIEOKBJG@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@ DB '<'
	DB	'?xml version="1.0" encoding="utf-8"?>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JLMNOPJB@?4xlf?$AA@
CONST	SEGMENT
??_C@_04JLMNOPJB@?4xlf?$AA@ DB '.xlf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LCMACLFG@?4txt?$AA@
CONST	SEGMENT
??_C@_04LCMACLFG@?4txt?$AA@ DB '.txt', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_enc	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
?textExt@@3PBDB DD FLAT:??_C@_04LCMACLFG@?4txt?$AA@	; textExt
?xliffExt@@3PBDB DD FLAT:??_C@_04JLMNOPJB@?4xlf?$AA@	; xliffExt
_xmlHeader DD	FLAT:??_C@_0CI@GIEOKBJG@?$DM?$DPxml?5version?$DN?$CC1?40?$CC?5encoding?$DN?$CCut@
_bundleStart DD	FLAT:??_C@_0BAA@NDKKMJNI@?$DMxliff?5version?5?$DN?5?$CC1?41?$CC?5xmlns?$DN?8ur@
_bundleEnd DD	FLAT:??_C@_09PDIPEAEJ@?$DM?1xliff?$DO?6?$AA@
_trans_unit DD	FLAT:??_C@_0L@CGGKGCCF@trans?9unit?$AA@
_close_trans_unit DD FLAT:??_C@_0P@FFFAFHJH@?$DM?1trans?9unit?$DO?6?$AA@
_source	DD	FLAT:??_C@_08HAGFBHGO@?$DMsource?$DO?$AA@
_close_source DD FLAT:??_C@_0L@DGHBPLGI@?$DM?1source?$DO?6?$AA@
_group	DD	FLAT:??_C@_05MGJOOGAJ@group?$AA@
_close_group DD	FLAT:??_C@_09OFJOICFB@?$DM?1group?$DO?6?$AA@
_bin_unit DD	FLAT:??_C@_08CCOCHLGB@bin?9unit?$AA@
_close_bin_unit DD FLAT:??_C@_0N@PMLOBHJD@?$DM?1bin?9unit?$DO?6?$AA@
_bin_source DD	FLAT:??_C@_0O@PCBNGLIO@?$DMbin?9source?$DO?6?$AA@
_close_bin_source DD FLAT:??_C@_0P@GHPEAACM@?$DM?1bin?9source?$DO?6?$AA@
_external_file DD FLAT:??_C@_0P@MLFLDCHM@?$DMexternal?9file?$AA@
_internal_file DD FLAT:??_C@_0P@PFEMNKFG@?$DMinternal?9file?$AA@
_close_internal_file DD FLAT:??_C@_0BC@NLNOHFGP@?$DM?1internal?9file?$DO?6?$AA@
_application_mimetype DD FLAT:??_C@_0M@MBDKLJIJ@application?$AA@
_alias_restype DD FLAT:??_C@_0M@HNOBCMCB@x?9icu?9alias?$AA@
_array_restype DD FLAT:??_C@_0M@NPMGDNNG@x?9icu?9array?$AA@
_binary_restype DD FLAT:??_C@_0N@GACOAOME@x?9icu?9binary?$AA@
_integer_restype DD FLAT:??_C@_0O@DMJLGLIP@x?9icu?9integer?$AA@
_intvector_restype DD FLAT:??_C@_0BA@IJCMBKIC@x?9icu?9intvector?$AA@
_table_restype DD FLAT:??_C@_0M@BFCLNKDN@x?9icu?9table?$AA@
_DATA	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_computeCRC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _computeCRC
_TEXT	SEGMENT
tv77 = -1304						; size = 4
_crc2$ = -1104						; size = 4
_j$ = -1092						; size = 4
_i$ = -1080						; size = 4
_crc_ta$ = -1068					; size = 1024
_temp2$ = -36						; size = 4
_temp1$ = -24						; size = 4
_crc$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ptr$ = 8						; size = 4
_len$ = 12						; size = 4
_lastcrc$ = 16						; size = 4
_computeCRC PROC					; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 1304				; 00000518H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1304]
	mov	ecx, 326				; 00000146H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 145
	mov	DWORD PTR _i$[ebp], 0
; Line 146
	mov	DWORD PTR _j$[ebp], 0
; Line 147
	mov	DWORD PTR _crc2$[ebp], 0
; Line 152
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@computeCRC
$LN9@computeCRC:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@computeCRC:
	cmp	DWORD PTR _i$[ebp], 255			; 000000ffH
	jg	SHORT $LN8@computeCRC
; Line 153
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _crc2$[ebp], eax
; Line 154
	mov	DWORD PTR _j$[ebp], 8
	jmp	SHORT $LN7@computeCRC
$LN6@computeCRC:
	mov	eax, DWORD PTR _j$[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN7@computeCRC:
	cmp	DWORD PTR _j$[ebp], 0
	jle	SHORT $LN5@computeCRC
; Line 155
	mov	eax, DWORD PTR _crc2$[ebp]
	and	eax, 1
	je	SHORT $LN4@computeCRC
; Line 156
	mov	eax, DWORD PTR _crc2$[ebp]
	shr	eax, 1
	xor	eax, -306674912				; edb88320H
	mov	DWORD PTR _crc2$[ebp], eax
; Line 157
	jmp	SHORT $LN3@computeCRC
$LN4@computeCRC:
; Line 158
	mov	eax, DWORD PTR _crc2$[ebp]
	shr	eax, 1
	mov	DWORD PTR _crc2$[ebp], eax
$LN3@computeCRC:
; Line 160
	jmp	SHORT $LN6@computeCRC
$LN5@computeCRC:
; Line 161
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _crc2$[ebp]
	mov	DWORD PTR _crc_ta$[ebp+eax*4], ecx
; Line 162
	jmp	$LN9@computeCRC
$LN8@computeCRC:
; Line 164
	mov	eax, DWORD PTR _lastcrc$[ebp]
	mov	DWORD PTR _crc$[ebp], eax
$LN2@computeCRC:
; Line 165
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
	test	eax, eax
	je	SHORT $LN13@computeCRC
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN14@computeCRC
$LN13@computeCRC:
	mov	DWORD PTR tv77[ebp], 0
$LN14@computeCRC:
	cmp	DWORD PTR tv77[ebp], 0
	je	SHORT $LN1@computeCRC
; Line 166
	mov	eax, DWORD PTR _crc$[ebp]
	shr	eax, 8
	mov	DWORD PTR _temp1$[ebp], eax
; Line 167
	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	xor	ecx, DWORD PTR _crc$[ebp]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _crc_ta$[ebp+ecx*4]
	mov	DWORD PTR _temp2$[ebp], edx
; Line 168
	mov	eax, DWORD PTR _temp1$[ebp]
	xor	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _crc$[ebp], eax
; Line 169
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax
; Line 170
	jmp	SHORT $LN2@computeCRC
$LN1@computeCRC:
; Line 171
	mov	eax, DWORD PTR _crc$[ebp]
; Line 172
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@computeCRC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@computeCRC:
	DD	1
	DD	$LN16@computeCRC
$LN16@computeCRC:
	DD	-1068					; fffffbd4H
	DD	1024					; 00000400H
	DD	$LN15@computeCRC
$LN15@computeCRC:
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_computeCRC ENDP
_TEXT	ENDS
PUBLIC	?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z ; res_write_xml
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv71 = -196						; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
_language$ = 16						; size = 4
_isTopLevel$ = 20					; size = 1
_status$ = 24						; size = 4
?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z PROC ; res_write_xml, COMDAT
; Line 959
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 961
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@res_write_
; Line 962
	jmp	$LN13@res_write_
$LN12@res_write_:
; Line 965
	cmp	DWORD PTR _res$[ebp], 0
	je	$LN11@res_write_
; Line 966
	mov	eax, DWORD PTR _res$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 14			; 0000000eH
	ja	$LN11@res_write_
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN15@res_write_[edx]
	jmp	DWORD PTR $LN16@res_write_[eax*4]
$LN8@res_write_:
; Line 968
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?string_write_xml@@YAXPAVStringResource@@PBD1PAW4UErrorCode@@@Z ; string_write_xml
	add	esp, 16					; 00000010H
; Line 969
	jmp	$LN13@res_write_
$LN7@res_write_:
; Line 972
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?alias_write_xml@@YAXPAVAliasResource@@PBD1PAW4UErrorCode@@@Z ; alias_write_xml
	add	esp, 16					; 00000010H
; Line 973
	jmp	$LN13@res_write_
$LN6@res_write_:
; Line 976
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?intvector_write_xml@@YAXPAVIntVectorResource@@PBD1PAW4UErrorCode@@@Z ; intvector_write_xml
	add	esp, 16					; 00000010H
; Line 977
	jmp	SHORT $LN13@res_write_
$LN5@res_write_:
; Line 980
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?bin_write_xml@@YAXPAVBinaryResource@@PBD1PAW4UErrorCode@@@Z ; bin_write_xml
	add	esp, 16					; 00000010H
; Line 981
	jmp	SHORT $LN13@res_write_
$LN4@res_write_:
; Line 984
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?int_write_xml@@YAXPAVIntResource@@PBD1PAW4UErrorCode@@@Z ; int_write_xml
	add	esp, 16					; 00000010H
; Line 985
	jmp	SHORT $LN13@res_write_
$LN3@res_write_:
; Line 988
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?array_write_xml@@YAXPAVArrayResource@@PBD1PAW4UErrorCode@@@Z ; array_write_xml
	add	esp, 16					; 00000010H
; Line 989
	jmp	SHORT $LN13@res_write_
$LN2@res_write_:
; Line 992
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _isTopLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _language$[ebp]
	push	edx
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?table_write_xml@@YAXPAVTableResource@@PBD1CPAW4UErrorCode@@@Z ; table_write_xml
	add	esp, 20					; 00000014H
; Line 993
	jmp	SHORT $LN13@res_write_
$LN11@res_write_:
; Line 1000
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
$LN13@res_write_:
; Line 1001
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@res_write_:
	DD	$LN8@res_write_
	DD	$LN5@res_write_
	DD	$LN2@res_write_
	DD	$LN7@res_write_
	DD	$LN4@res_write_
	DD	$LN3@res_write_
	DD	$LN6@res_write_
	DD	$LN11@res_write_
$LN15@res_write_:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	7
	DB	7
	DB	7
	DB	4
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z ENDP ; res_write_xml
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
PUBLIC	?getBuffer@StringBaseResource@@QBEPB_WXZ	; StringBaseResource::getBuffer
PUBLIC	?length@StringBaseResource@@QBEHXZ		; StringBaseResource::length
EXTRN	_uprv_free_56:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD@Z:PROC
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?string_write_xml@@YAXPAVStringResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv216 = -280						; size = 4
tv214 = -280						; size = 4
tv212 = -280						; size = 4
tv210 = -280						; size = 4
$T44993 = -272						; size = 4
$T44994 = -260						; size = 4
$T44995 = -248						; size = 4
$T44996 = -236						; size = 4
_bufLen$ = -32						; size = 4
_buf$ = -20						; size = 4
_sid$ = -8						; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?string_write_xml@@YAXPAVStringResource@@PBD1PAW4UErrorCode@@@Z PROC ; string_write_xml, COMDAT
; Line 616
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 618
	mov	DWORD PTR _sid$[ebp], 0
; Line 619
	mov	DWORD PTR _buf$[ebp], 0
; Line 620
	mov	DWORD PTR _bufLen$[ebp], 0
; Line 622
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN2@string_wri
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@string_wri
$LN2@string_wri:
; Line 623
	jmp	$LN4@string_wri
$LN3@string_wri:
; Line 626
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _trans_unit
	push	edx
	mov	eax, DWORD PTR _res$[ebp]
	push	eax
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 628
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 630
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T44993[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv210[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 632
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	push	eax
	lea	ecx, DWORD PTR _bufLen$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z ; convertAndEscape
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
; Line 634
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@string_wri
; Line 635
	jmp	$LN4@string_wri
$LN1@string_wri:
; Line 638
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T44994[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	mov	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv212[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 639
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T44995[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv214[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 641
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ; printNoteElements
	add	esp, 8
; Line 643
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 644
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 646
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T44996[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_trans_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv216[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 648
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 649
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN4@string_wri:
; Line 650
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@string_wri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@string_wri:
	DD	2
	DD	$LN12@string_wri
$LN12@string_wri:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@string_wri
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@string_wri
$LN11@string_wri:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN10@string_wri:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?string_write_xml@@YAXPAVStringResource@@PBD1PAW4UErrorCode@@@Z ENDP ; string_write_xml
_TEXT	ENDS
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@StringBaseResource@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@StringBaseResource@@QBEPB_WXZ PROC		; StringBaseResource::getBuffer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@StringBaseResource@@QBEPB_WXZ ENDP		; StringBaseResource::getBuffer
_TEXT	ENDS
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringBaseResource@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringBaseResource@@QBEHXZ PROC			; StringBaseResource::length, COMDAT
; _this$ = ecx
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringBaseResource@@QBEHXZ ENDP			; StringBaseResource::length
_TEXT	ENDS
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	_T_FileStream_write:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_u_strToUTF8_56:PROC
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
xdata$x	SEGMENT
__unwindtable$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z$0
__ehfuncinfo$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z
_TEXT	SEGMENT
$T45012 = -272						; size = 4
_ret$ = -56						; size = 4
_dest$ = -44						; size = 4
_len$ = -32						; size = 4
_status$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_fileStream$ = 8					; size = 4
_outString$ = 12					; size = 64
?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z PROC ; write_utf8_file, COMDAT
; Line 66
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 67
	mov	DWORD PTR _status$[ebp], 0
; Line 68
	mov	DWORD PTR _len$[ebp], 0
; Line 76
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	0
	push	0
	call	_u_strToUTF8_56
	add	esp, 24					; 00000018H
; Line 79
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _dest$[ebp], eax
; Line 80
	mov	DWORD PTR _status$[ebp], 0
; Line 88
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_u_strToUTF8_56
	add	esp, 24					; 00000018H
; Line 91
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileStream$[ebp]
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ret$[ebp], eax
; Line 92
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 93
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR $T45012[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45012[ebp]
; Line 94
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@write_utf8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@write_utf8:
	DD	3
	DD	$LN8@write_utf8
$LN8@write_utf8:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@write_utf8
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@write_utf8
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN6@write_utf8
$LN6@write_utf8:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN5@write_utf8:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN4@write_utf8:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _outString$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ENDP ; write_utf8_file
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5?$AA@			; `string'
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ DB '    ', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?write_tabs@@YAXPAU_FileStream@@@Z
_TEXT	SEGMENT
tv82 = -220						; size = 4
$T45030 = -212						; size = 4
_i$ = -8						; size = 4
_os$ = 8						; size = 4
?write_tabs@@YAXPAU_FileStream@@@Z PROC			; write_tabs, COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 98
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@write_tabs
$LN2@write_tabs:
; Line 99
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@write_tabs:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _tabCount
	jg	SHORT $LN4@write_tabs
; Line 100
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45030[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv82[ebp], eax
	mov	eax, DWORD PTR _os$[ebp]
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 101
	jmp	SHORT $LN2@write_tabs
$LN4@write_tabs:
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?write_tabs@@YAXPAU_FileStream@@@Z ENDP			; write_tabs
_TEXT	ENDS
PUBLIC	??_C@_0BL@IPPHKAGL@Illegal?5Character?5?2U?$CF08X?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@LDHBCPDM@Illegal?5Character?5?2u?$CF04X?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_06PNMEMOHD@?$CGapos?$DL?$AA@		; `string'
PUBLIC	??_C@_06DDLNFFBN@?$CGquot?$DL?$AA@		; `string'
PUBLIC	??_C@_04LOOHDCEI@?$CGgt?$DL?$AA@		; `string'
PUBLIC	??_C@_04GJOGLFEJ@?$CGlt?$DL?$AA@		; `string'
PUBLIC	??_C@_05JKJFEODM@?$CGamp?$DL?$AA@		; `string'
PUBLIC	??_C@_0BF@LJKGNCGK@Illegal?5Surrogate?$CB?5?6?$AA@ ; `string'
EXTRN	__imp__memmove:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_utf8_appendCharSafeBody_56:PROC
EXTRN	_strlen:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
;	COMDAT ??_C@_0BL@IPPHKAGL@Illegal?5Character?5?2U?$CF08X?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BL@IPPHKAGL@Illegal?5Character?5?2U?$CF08X?$CB?6?$AA@ DB 'Illegal '
	DB	'Character \U%08X!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LDHBCPDM@Illegal?5Character?5?2u?$CF04X?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BL@LDHBCPDM@Illegal?5Character?5?2u?$CF04X?$CB?6?$AA@ DB 'Illegal '
	DB	'Character \u%04X!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PNMEMOHD@?$CGapos?$DL?$AA@
CONST	SEGMENT
??_C@_06PNMEMOHD@?$CGapos?$DL?$AA@ DB '&apos;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DDLNFFBN@?$CGquot?$DL?$AA@
CONST	SEGMENT
??_C@_06DDLNFFBN@?$CGquot?$DL?$AA@ DB '&quot;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LOOHDCEI@?$CGgt?$DL?$AA@
CONST	SEGMENT
??_C@_04LOOHDCEI@?$CGgt?$DL?$AA@ DB '&gt;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GJOGLFEJ@?$CGlt?$DL?$AA@
CONST	SEGMENT
??_C@_04GJOGLFEJ@?$CGlt?$DL?$AA@ DB '&lt;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JKJFEODM@?$CGamp?$DL?$AA@
CONST	SEGMENT
??_C@_05JKJFEODM@?$CGamp?$DL?$AA@ DB '&amp;', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LJKGNCGK@Illegal?5Surrogate?$CB?5?6?$AA@
CONST	SEGMENT
??_C@_0BF@LJKGNCGK@Illegal?5Surrogate?$CB?5?6?$AA@ DB 'Illegal Surrogate!'
	DB	' ', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv144 = -292						; size = 4
tv145 = -288						; size = 4
tv146 = -284						; size = 4
tv151 = -280						; size = 4
tv147 = -280						; size = 4
_isError$37585 = -77					; size = 1
___c2$37545 = -68					; size = 2
_c$ = -56						; size = 4
_destLen$ = -44						; size = 4
_temp$ = -32						; size = 4
_dest$ = -20						; size = 4
_srcIndex$ = -8						; size = 4
_pDest$ = 8						; size = 4
_destCap$ = 12						; size = 4
_destLength$ = 16					; size = 4
_src$ = 20						; size = 4
_srcLen$ = 24						; size = 4
_status$ = 28						; size = 4
?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z PROC ; convertAndEscape, COMDAT
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 235
	mov	DWORD PTR _srcIndex$[ebp], 0
; Line 236
	mov	DWORD PTR _dest$[ebp], 0
; Line 237
	mov	DWORD PTR _temp$[ebp], 0
; Line 238
	mov	DWORD PTR _destLen$[ebp], 0
; Line 239
	mov	DWORD PTR _c$[ebp], 0
; Line 241
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN31@convertAnd
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN31@convertAnd
	cmp	DWORD PTR _pDest$[ebp], 0
	je	SHORT $LN31@convertAnd
	cmp	DWORD PTR _srcLen$[ebp], 0
	je	SHORT $LN31@convertAnd
	cmp	DWORD PTR _src$[ebp], 0
	jne	SHORT $LN32@convertAnd
$LN31@convertAnd:
; Line 242
	xor	eax, eax
	jmp	$LN33@convertAnd
$LN32@convertAnd:
; Line 244
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _dest$[ebp], ecx
; Line 245
	cmp	DWORD PTR _dest$[ebp], 0
	je	SHORT $LN29@convertAnd
	cmp	DWORD PTR _destCap$[ebp], 0
	jg	SHORT $LN30@convertAnd
$LN29@convertAnd:
; Line 246
	mov	eax, DWORD PTR _srcLen$[ebp]
	shl	eax, 3
	mov	DWORD PTR _destCap$[ebp], eax
; Line 247
	mov	eax, DWORD PTR _destCap$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _dest$[ebp], eax
; Line 248
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN30@convertAnd
; Line 249
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 250
	xor	eax, eax
	jmp	$LN33@convertAnd
$LN30@convertAnd:
; Line 254
	mov	eax, DWORD PTR _dest$[ebp]
	mov	BYTE PTR [eax], 0
$LN27@convertAnd:
; Line 256
	mov	eax, DWORD PTR _srcIndex$[ebp]
	cmp	eax, DWORD PTR _srcLen$[ebp]
	jge	$LN26@convertAnd
; Line 257
	mov	eax, DWORD PTR _srcIndex$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _c$[ebp], edx
	mov	eax, DWORD PTR _srcIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _srcIndex$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN25@convertAnd
	mov	eax, DWORD PTR _srcIndex$[ebp]
	cmp	eax, DWORD PTR _srcLen$[ebp]
	je	SHORT $LN25@convertAnd
	mov	eax, DWORD PTR _srcIndex$[ebp]
	mov	ecx, DWORD PTR _src$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR ___c2$37545[ebp], dx
	movzx	eax, WORD PTR ___c2$37545[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN25@convertAnd
	mov	eax, DWORD PTR _srcIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _srcIndex$[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$37545[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$[ebp], edx
$LN25@convertAnd:
; Line 259
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	je	SHORT $LN22@convertAnd
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	jne	SHORT $LN23@convertAnd
$LN22@convertAnd:
; Line 260
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 261
	mov	esi, esp
	push	OFFSET ??_C@_0BF@LJKGNCGK@Illegal?5Surrogate?$CB?5?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 263
	xor	eax, eax
	jmp	$LN33@convertAnd
$LN23@convertAnd:
; Line 266
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	ja	SHORT $LN41@convertAnd
	mov	DWORD PTR tv147[ebp], 1
	jmp	$LN42@convertAnd
$LN41@convertAnd:
	cmp	DWORD PTR _c$[ebp], 2047		; 000007ffH
	ja	SHORT $LN39@convertAnd
	mov	DWORD PTR tv146[ebp], 2
	jmp	SHORT $LN40@convertAnd
$LN39@convertAnd:
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	ja	SHORT $LN37@convertAnd
	mov	DWORD PTR tv145[ebp], 3
	jmp	SHORT $LN38@convertAnd
$LN37@convertAnd:
	cmp	DWORD PTR _c$[ebp], 57343		; 0000dfffH
	jbe	SHORT $LN35@convertAnd
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	SHORT $LN35@convertAnd
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _c$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 3
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN36@convertAnd
$LN35@convertAnd:
	mov	DWORD PTR tv144[ebp], 0
$LN36@convertAnd:
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR tv145[ebp], edx
$LN38@convertAnd:
	mov	eax, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv146[ebp], eax
$LN40@convertAnd:
	mov	ecx, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv147[ebp], ecx
$LN42@convertAnd:
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, DWORD PTR tv147[ebp]
	cmp	edx, DWORD PTR _destCap$[ebp]
	jge	$LN21@convertAnd
; Line 269
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	jg	$LN20@convertAnd
; Line 270
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR tv151[ebp], eax
	cmp	DWORD PTR tv151[ebp], 62		; 0000003eH
	ja	$LN11@convertAnd
	mov	ecx, DWORD PTR tv151[ebp]
	movzx	edx, BYTE PTR $LN43@convertAnd[ecx]
	jmp	DWORD PTR $LN47@convertAnd[edx*4]
$LN17@convertAnd:
; Line 272
	push	OFFSET ??_C@_05JKJFEODM@?$CGamp?$DL?$AA@
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 273
	push	OFFSET ??_C@_05JKJFEODM@?$CGamp?$DL?$AA@
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destLen$[ebp], eax
; Line 274
	jmp	$LN18@convertAnd
$LN16@convertAnd:
; Line 276
	push	OFFSET ??_C@_04GJOGLFEJ@?$CGlt?$DL?$AA@
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 277
	push	OFFSET ??_C@_04GJOGLFEJ@?$CGlt?$DL?$AA@
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destLen$[ebp], eax
; Line 278
	jmp	$LN18@convertAnd
$LN15@convertAnd:
; Line 280
	push	OFFSET ??_C@_04LOOHDCEI@?$CGgt?$DL?$AA@
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 281
	push	OFFSET ??_C@_04LOOHDCEI@?$CGgt?$DL?$AA@
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destLen$[ebp], eax
; Line 282
	jmp	$LN18@convertAnd
$LN14@convertAnd:
; Line 284
	push	OFFSET ??_C@_06DDLNFFBN@?$CGquot?$DL?$AA@
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 285
	push	OFFSET ??_C@_06DDLNFFBN@?$CGquot?$DL?$AA@
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destLen$[ebp], eax
; Line 286
	jmp	$LN18@convertAnd
$LN13@convertAnd:
; Line 288
	push	OFFSET ??_C@_06PNMEMOHD@?$CGapos?$DL?$AA@
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 289
	push	OFFSET ??_C@_06PNMEMOHD@?$CGapos?$DL?$AA@
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destLen$[ebp], eax
; Line 290
	jmp	SHORT $LN18@convertAnd
$LN12@convertAnd:
; Line 325
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 326
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@LDHBCPDM@Illegal?5Character?5?2u?$CF04X?$CB?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 327
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 328
	xor	eax, eax
	jmp	$LN33@convertAnd
$LN11@convertAnd:
; Line 330
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
$LN18@convertAnd:
; Line 332
	jmp	$LN10@convertAnd
$LN20@convertAnd:
; Line 333
	mov	BYTE PTR _isError$37585[ebp], 0
; Line 334
	cmp	DWORD PTR _c$[ebp], 127			; 0000007fH
	ja	SHORT $LN9@convertAnd
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	jmp	$LN8@convertAnd
$LN9@convertAnd:
	cmp	DWORD PTR _c$[ebp], 2047		; 000007ffH
	ja	SHORT $LN7@convertAnd
	mov	eax, DWORD PTR _destLen$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _destCap$[ebp]
	jge	SHORT $LN7@convertAnd
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 6
	or	eax, 192				; 000000c0H
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _destLen$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _destLen$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	jmp	$LN8@convertAnd
$LN7@convertAnd:
	cmp	DWORD PTR _c$[ebp], 55295		; 0000d7ffH
	ja	SHORT $LN5@convertAnd
	mov	eax, DWORD PTR _destLen$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _destCap$[ebp]
	jge	SHORT $LN5@convertAnd
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 12					; 0000000cH
	or	eax, 224				; 000000e0H
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _destLen$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 6
	and	eax, 63					; 0000003fH
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _destLen$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 63					; 0000003fH
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _dest$[ebp]
	add	ecx, DWORD PTR _destLen$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _destLen$[ebp]
	add	edx, 1
	mov	DWORD PTR _destLen$[ebp], edx
	jmp	SHORT $LN8@convertAnd
$LN5@convertAnd:
	lea	eax, DWORD PTR _isError$37585[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destCap$[ebp]
	push	edx
	mov	eax, DWORD PTR _destLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	push	ecx
	call	_utf8_appendCharSafeBody_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _destLen$[ebp], eax
$LN8@convertAnd:
; Line 335
	movsx	eax, BYTE PTR _isError$37585[ebp]
	test	eax, eax
	je	SHORT $LN10@convertAnd
; Line 336
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 12			; 0000000cH
; Line 337
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@IPPHKAGL@Illegal?5Character?5?2U?$CF08X?$CB?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 338
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 339
	xor	eax, eax
	jmp	$LN33@convertAnd
$LN10@convertAnd:
; Line 342
	jmp	$LN2@convertAnd
$LN21@convertAnd:
; Line 343
	mov	eax, DWORD PTR _destCap$[ebp]
	add	eax, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR _destCap$[ebp], eax
; Line 345
	mov	eax, DWORD PTR _destCap$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _temp$[ebp], eax
; Line 346
	cmp	DWORD PTR _temp$[ebp], 0
	jne	SHORT $LN1@convertAnd
; Line 347
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 348
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 349
	xor	eax, eax
	jmp	SHORT $LN33@convertAnd
$LN1@convertAnd:
; Line 351
	push	1
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _destLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dest$[ebp]
	push	edx
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 352
	mov	DWORD PTR _destLen$[ebp], 0
; Line 353
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 354
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _dest$[ebp], eax
; Line 355
	mov	DWORD PTR _temp$[ebp], 0
$LN2@convertAnd:
; Line 358
	jmp	$LN27@convertAnd
$LN26@convertAnd:
; Line 359
	mov	eax, DWORD PTR _destLength$[ebp]
	mov	ecx, DWORD PTR _destLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 360
	mov	eax, DWORD PTR _dest$[ebp]
$LN33@convertAnd:
; Line 361
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@convertAnd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN46@convertAnd:
	DD	1
	DD	$LN45@convertAnd
$LN45@convertAnd:
	DD	-77					; ffffffb3H
	DD	1
	DD	$LN44@convertAnd
$LN44@convertAnd:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN47@convertAnd:
	DD	$LN12@convertAnd
	DD	$LN14@convertAnd
	DD	$LN17@convertAnd
	DD	$LN13@convertAnd
	DD	$LN16@convertAnd
	DD	$LN15@convertAnd
	DD	$LN11@convertAnd
$LN43@convertAnd:
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	6
	DB	6
	DB	0
	DB	0
	DB	6
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	6
	DB	6
	DB	1
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	5
?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z ENDP ; convertAndEscape
_TEXT	ENDS
PUBLIC	??_C@_06MPEIEEGM@?$DMnote?$DO?$AA@		; `string'
PUBLIC	??_C@_07LDFCIEBK@?$DM?1note?$DO?$AA@		; `string'
EXTRN	_getAt:PROC
EXTRN	_getCount:PROC
;	COMDAT ??_C@_06MPEIEEGM@?$DMnote?$DO?$AA@
CONST	SEGMENT
??_C@_06MPEIEEGM@?$DMnote?$DO?$AA@ DB '<note>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDFCIEBK@?$DM?1note?$DO?$AA@
CONST	SEGMENT
??_C@_07LDFCIEBK@?$DM?1note?$DO?$AA@ DB '</note>', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_i$ = -56						; size = 4
_count$ = -44						; size = 4
_noteLen$ = -32						; size = 4
_note$ = -20						; size = 4
_capacity$ = -8						; size = 4
_src$ = 8						; size = 4
_status$ = 12						; size = 4
?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z PROC ; printNoteElements, COMDAT
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	mov	DWORD PTR _capacity$[ebp], 0
; Line 427
	mov	DWORD PTR _note$[ebp], 0
; Line 428
	mov	DWORD PTR _noteLen$[ebp], 0
; Line 429
	mov	DWORD PTR _count$[ebp], 0
; Line 431
	cmp	DWORD PTR _src$[ebp], 0
	jne	SHORT $LN7@printNoteE
; Line 432
	jmp	$LN8@printNoteE
$LN7@printNoteE:
; Line 435
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _capacity$[ebp], ecx
; Line 436
	mov	eax, DWORD PTR _capacity$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _note$[ebp], eax
; Line 438
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_getCount
	add	esp, 16					; 00000010H
	mov	DWORD PTR _count$[ebp], eax
; Line 439
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@printNoteE
; Line 440
	mov	eax, DWORD PTR _note$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 441
	jmp	$LN8@printNoteE
$LN6@printNoteE:
; Line 443
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@printNoteE
$LN4@printNoteE:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@printNoteE:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN3@printNoteE
; Line 444
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _capacity$[ebp]
	push	edx
	lea	eax, DWORD PTR _note$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_getAt
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _noteLen$[ebp], eax
; Line 445
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@printNoteE
; Line 446
	mov	eax, DWORD PTR _note$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 447
	jmp	SHORT $LN8@printNoteE
$LN2@printNoteE:
; Line 449
	cmp	DWORD PTR _noteLen$[ebp], 0
	jle	SHORT $LN1@printNoteE
; Line 450
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 451
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_07LDFCIEBK@?$DM?1note?$DO?$AA@
	push	OFFSET ??_C@_06MPEIEEGM@?$DMnote?$DO?$AA@
	mov	ecx, DWORD PTR _noteLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _note$[ebp]
	push	edx
	call	?print@@YAXPA_WHPBD1PAW4UErrorCode@@@Z	; print
	add	esp, 20					; 00000014H
$LN1@printNoteE:
; Line 453
	jmp	$LN4@printNoteE
$LN3@printNoteE:
; Line 454
	mov	eax, DWORD PTR _note$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN8@printNoteE:
; Line 461
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@printNoteE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@printNoteE:
	DD	1
	DD	$LN11@printNoteE
$LN11@printNoteE:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@printNoteE
$LN10@printNoteE:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ENDP ; printNoteElements
_TEXT	ENDS
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BM@FGGEOBCK@Could?5not?5allocate?5memory?$CB?$CB?$AA@ ; `string'
EXTRN	__imp__exit:PROC
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@FGGEOBCK@Could?5not?5allocate?5memory?$CB?$CB?$AA@
CONST	SEGMENT
??_C@_0BM@FGGEOBCK@Could?5not?5allocate?5memory?$CB?$CB?$AA@ DB 'Could no'
	DB	't allocate memory!!', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?print@@YAXPA_WHPBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv191 = -280						; size = 4
tv189 = -280						; size = 4
tv187 = -280						; size = 4
tv185 = -280						; size = 4
$T45056 = -272						; size = 4
$T45057 = -260						; size = 4
$T45054 = -248						; size = 4
$T45055 = -236						; size = 4
_bufLen$ = -32						; size = 4
_buf$ = -20						; size = 4
_bufCapacity$ = -8					; size = 4
_src$ = 8						; size = 4
_srcLen$ = 12						; size = 4
_tagStart$ = 16						; size = 4
_tagEnd$ = 20						; size = 4
_status$ = 24						; size = 4
?print@@YAXPA_WHPBD1PAW4UErrorCode@@@Z PROC		; print, COMDAT
; Line 397
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 398
	mov	eax, DWORD PTR _srcLen$[ebp]
	shl	eax, 2
	mov	DWORD PTR _bufCapacity$[ebp], eax
; Line 399
	mov	DWORD PTR _buf$[ebp], 0
; Line 400
	mov	DWORD PTR _bufLen$[ebp], 0
; Line 402
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@print
; Line 403
	jmp	$LN5@print
$LN3@print:
; Line 406
	mov	eax, DWORD PTR _bufCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax
; Line 407
	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN2@print
; Line 408
	mov	esi, esp
	push	OFFSET ??_C@_0BM@FGGEOBCK@Could?5not?5allocate?5memory?$CB?$CB?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 409
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@print:
; Line 411
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	lea	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bufCapacity$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z ; convertAndEscape
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
; Line 412
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@print
; Line 413
	lea	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?trim@@YAXPAPADPAH@Z			; trim
	add	esp, 8
; Line 414
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45054[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _tagStart$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv185[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 415
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45055[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	mov	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv187[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 416
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45056[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _tagEnd$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 417
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45057[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv191[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
$LN5@print:
; Line 420
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@print
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@print:
	DD	2
	DD	$LN12@print
$LN12@print:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@print
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@print
$LN11@print:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN10@print:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?print@@YAXPA_WHPBD1PAW4UErrorCode@@@Z ENDP		; print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?trim@@YAXPAPADPAH@Z
_TEXT	SEGMENT
tv71 = -220						; size = 4
_i$ = -20						; size = 4
_s$ = -8						; size = 4
_src$ = 8						; size = 4
_len$ = 12						; size = 4
?trim@@YAXPAPADPAH@Z PROC				; trim, COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 372
	mov	DWORD PTR _s$[ebp], 0
; Line 373
	mov	DWORD PTR _i$[ebp], 0
; Line 374
	cmp	DWORD PTR _src$[ebp], 0
	je	SHORT $LN8@trim
	mov	eax, DWORD PTR _src$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN9@trim
$LN8@trim:
; Line 375
	jmp	SHORT $LN10@trim
$LN9@trim:
; Line 377
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx
; Line 379
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN7@trim
$LN6@trim:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@trim:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN5@trim
; Line 380
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	sub	edx, 10					; 0000000aH
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 32			; 00000020H
	ja	SHORT $LN3@trim
	mov	eax, DWORD PTR tv71[ebp]
	movzx	ecx, BYTE PTR $LN12@trim[eax]
	jmp	DWORD PTR $LN13@trim[ecx*4]
$LN2@trim:
; Line 385
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 0
; Line 386
	jmp	SHORT $LN6@trim
$LN3@trim:
; Line 390
	jmp	SHORT $LN5@trim
; Line 392
	jmp	SHORT $LN6@trim
$LN5@trim:
; Line 393
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [ecx], eax
$LN10@trim:
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@trim:
	DD	$LN2@trim
	DD	$LN3@trim
$LN12@trim:
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
?trim@@YAXPAPADPAH@Z ENDP				; trim
_TEXT	ENDS
PUBLIC	??_C@_02NEKEAGPN@?$DO?6?$AA@			; `string'
PUBLIC	??_C@_07HGIOPEPN@restype?$AA@			; `string'
PUBLIC	??_C@_09LHOALBNN@mime?9type?$AA@		; `string'
PUBLIC	??_C@_07NNINDEIN@resname?$AA@			; `string'
PUBLIC	??_C@_02EGCJHIOB@id?$AA@			; `string'
PUBLIC	??_C@_01MNNFJEPP@?$DM?$AA@			; `string'
EXTRN	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z:PROC ; SResource::getKeyString
_BSS	SEGMENT
_srBundle DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_02NEKEAGPN@?$DO?6?$AA@
CONST	SEGMENT
??_C@_02NEKEAGPN@?$DO?6?$AA@ DB '>', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGIOPEPN@restype?$AA@
CONST	SEGMENT
??_C@_07HGIOPEPN@restype?$AA@ DB 'restype', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LHOALBNN@mime?9type?$AA@
CONST	SEGMENT
??_C@_09LHOALBNN@mime?9type?$AA@ DB 'mime-type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NNINDEIN@resname?$AA@
CONST	SEGMENT
??_C@_07NNINDEIN@resname?$AA@ DB 'resname', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02EGCJHIOB@id?$AA@
CONST	SEGMENT
??_C@_02EGCJHIOB@id?$AA@ DB 'id', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MNNFJEPP@?$DM?$AA@
CONST	SEGMENT
??_C@_01MNNFJEPP@?$DM?$AA@ DB '<', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv193 = -256						; size = 4
tv191 = -256						; size = 4
tv189 = -256						; size = 4
$T45074 = -248						; size = 4
$T45075 = -236						; size = 4
$T45076 = -224						; size = 4
_sid$ = -20						; size = 4
_resname$ = -8						; size = 4
_res$ = 8						; size = 4
_container$ = 12					; size = 4
_restype$ = 16						; size = 4
_mimetype$ = 20						; size = 4
_id$ = 24						; size = 4
_status$ = 28						; size = 4
?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z PROC ; printContainer, COMDAT
; Line 548
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 549
	mov	DWORD PTR _resname$[ebp], 0
; Line 550
	mov	DWORD PTR _sid$[ebp], 0
; Line 552
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 554
	mov	eax, DWORD PTR _srBundle
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z ; SResource::getKeyString
	mov	DWORD PTR _resname$[ebp], eax
; Line 555
	cmp	DWORD PTR _resname$[ebp], 0
	je	SHORT $LN7@printConta
	mov	eax, DWORD PTR _resname$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@printConta
; Line 556
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	call	?getID@@YAPADPBD0PAD@Z			; getID
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sid$[ebp], eax
; Line 557
	jmp	SHORT $LN6@printConta
$LN7@printConta:
; Line 558
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	call	?getID@@YAPADPBD0PAD@Z			; getID
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _sid$[ebp], eax
$LN6@printConta:
; Line 561
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45074[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01MNNFJEPP@?$DM?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 562
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45075[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _container$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv191[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 563
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _sid$[ebp]
	push	ecx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 565
	cmp	DWORD PTR _resname$[ebp], 0
	je	SHORT $LN5@printConta
; Line 566
	mov	eax, DWORD PTR _resname$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _resname$[ebp]
	push	ecx
	push	OFFSET ??_C@_07NNINDEIN@resname?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
$LN5@printConta:
; Line 569
	cmp	DWORD PTR _mimetype$[ebp], 0
	je	SHORT $LN4@printConta
; Line 570
	mov	eax, DWORD PTR _mimetype$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _mimetype$[ebp]
	push	ecx
	push	OFFSET ??_C@_09LHOALBNN@mime?9type?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
$LN4@printConta:
; Line 573
	cmp	DWORD PTR _restype$[ebp], 0
	je	SHORT $LN3@printConta
; Line 574
	mov	eax, DWORD PTR _restype$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _restype$[ebp]
	push	ecx
	push	OFFSET ??_C@_07HGIOPEPN@restype?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
$LN3@printConta:
; Line 577
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 578
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jle	SHORT $LN2@printConta
; Line 580
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _resname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	?printComments@@YAXPAUUString@@PBDCPAW4UErrorCode@@@Z ; printComments
	add	esp, 16					; 00000010H
; Line 581
	jmp	SHORT $LN1@printConta
$LN2@printConta:
; Line 582
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45076[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_02NEKEAGPN@?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
$LN1@printConta:
; Line 585
	mov	eax, DWORD PTR _sid$[ebp]
; Line 586
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ENDP ; printContainer
_TEXT	ENDS
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
EXTRN	_strcat:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getID@@YAPADPBD0PAD@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_curKey$ = 12						; size = 4
_result$ = 16						; size = 4
?getID@@YAPADPBD0PAD@Z PROC				; getID, COMDAT
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 106
	cmp	DWORD PTR _curKey$[ebp], 0
	jne	SHORT $LN3@getID
; Line 107
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 109
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 110
	jmp	$LN2@getID
$LN3@getID:
; Line 111
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _curKey$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+2]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 112
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _curKey$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+2]
	push	edx
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 113
	mov	eax, DWORD PTR _id$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@getID
; Line 114
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 115
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN1@getID:
; Line 117
	mov	eax, DWORD PTR _curKey$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN2@getID:
; Line 119
	mov	eax, DWORD PTR _result$[ebp]
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getID@@YAPADPBD0PAD@Z ENDP				; getID
_TEXT	ENDS
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
PUBLIC	??_C@_04GFKCAHFK@?5?$DN?5?$CC?$AA@		; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GFKCAHFK@?5?$DN?5?$CC?$AA@
CONST	SEGMENT
??_C@_04GFKCAHFK@?5?$DN?5?$CC?$AA@ DB ' = "', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printAttribute@@YAXPBD0H@Z
_TEXT	SEGMENT
tv180 = -256						; size = 4
tv178 = -256						; size = 4
tv176 = -256						; size = 4
tv174 = -256						; size = 4
tv172 = -256						; size = 4
$T45084 = -248						; size = 4
$T45085 = -236						; size = 4
$T45086 = -224						; size = 4
$T45087 = -212						; size = 4
$T45088 = -200						; size = 4
_name$ = 8						; size = 4
_value$ = 12						; size = 4
___formal$ = 16						; size = 4
?printAttribute@@YAXPBD0H@Z PROC			; printAttribute, COMDAT
; Line 464
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 465
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45084[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv172[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 466
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45085[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 467
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45086[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_04GFKCAHFK@?5?$DN?5?$CC?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv176[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 468
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45087[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv178[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 469
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45088[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv180[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 470
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?printAttribute@@YAXPBD0H@Z ENDP			; printAttribute
_TEXT	ENDS
PUBLIC	??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@		; `string'
PUBLIC	??_C@_03PNLDJJMO@?9?9?$DO?$AA@			; `string'
PUBLIC	??_C@_0FA@EKBKKFPC@Warning?3?5Tranlate?5attribute?5for?5@ ; `string'
PUBLIC	??_C@_09ODNGOEIO@translate?$AA@			; `string'
EXTRN	_getShowWarning:PROC
EXTRN	_getTranslate:PROC
EXTRN	_getDescription:PROC
EXTRN	_removeCmtText:PROC
;	COMDAT ??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@
CONST	SEGMENT
??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@ DB '<!--', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_03PNLDJJMO@?9?9?$DO?$AA@ DB '-->', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@EKBKKFPC@Warning?3?5Tranlate?5attribute?5for?5@
CONST	SEGMENT
??_C@_0FA@EKBKKFPC@Warning?3?5Tranlate?5attribute?5for?5@ DB 'Warning: Tr'
	DB	'anlate attribute for resource %s cannot be set. XLIFF prohibi'
	DB	'ts it.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09ODNGOEIO@translate?$AA@
CONST	SEGMENT
??_C@_09ODNGOEIO@translate?$AA@ DB 'translate', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printComments@@YAXPAUUString@@PBDCPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv235 = -328						; size = 4
tv233 = -328						; size = 4
tv231 = -328						; size = 4
tv229 = -328						; size = 4
$T45096 = -320						; size = 4
$T45097 = -308						; size = 4
$T45098 = -296						; size = 4
$T45099 = -284						; size = 4
_transLen$ = -80					; size = 4
_descLen$ = -68						; size = 4
_trans$ = -56						; size = 4
_desc$ = -44						; size = 4
_bufLen$ = -32						; size = 4
_buf$ = -20						; size = 4
_capacity$ = -8						; size = 4
_src$ = 8						; size = 4
_resName$ = 12						; size = 4
_printTranslate$ = 16					; size = 1
_status$ = 20						; size = 4
?printComments@@YAXPAUUString@@PBDCPAW4UErrorCode@@@Z PROC ; printComments, COMDAT
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 486
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN10@printComme
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@printComme
$LN10@printComme:
; Line 487
	jmp	$LN12@printComme
$LN11@printComme:
; Line 490
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	DWORD PTR _capacity$[ebp], ecx
; Line 491
	mov	DWORD PTR _buf$[ebp], 0
; Line 492
	mov	DWORD PTR _bufLen$[ebp], 0
; Line 493
	mov	eax, DWORD PTR _capacity$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _desc$[ebp], eax
; Line 494
	mov	eax, DWORD PTR _capacity$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _trans$[ebp], eax
; Line 496
	mov	DWORD PTR _descLen$[ebp], 0
	mov	DWORD PTR _transLen$[ebp], 0
; Line 497
	cmp	DWORD PTR _desc$[ebp], 0
	je	SHORT $LN8@printComme
	cmp	DWORD PTR _trans$[ebp], 0
	jne	SHORT $LN9@printComme
$LN8@printComme:
; Line 498
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 499
	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 500
	mov	eax, DWORD PTR _trans$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 501
	jmp	$LN12@printComme
$LN9@printComme:
; Line 504
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_removeCmtText
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _src$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 505
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	lea	edx, DWORD PTR _desc$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_getDescription
	add	esp, 20					; 00000014H
	mov	DWORD PTR _descLen$[ebp], eax
; Line 506
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _capacity$[ebp]
	push	ecx
	lea	edx, DWORD PTR _trans$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_getTranslate
	add	esp, 20					; 00000014H
	mov	DWORD PTR _transLen$[ebp], eax
; Line 509
	cmp	DWORD PTR _transLen$[ebp], 0
	jle	$LN7@printComme
; Line 510
	movsx	eax, BYTE PTR _printTranslate$[ebp]
	test	eax, eax
	je	$LN6@printComme
; Line 512
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _transLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _trans$[ebp]
	push	edx
	lea	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z ; convertAndEscape
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
; Line 513
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@printComme
; Line 514
	mov	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45096[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	mov	edx, DWORD PTR _bufLen$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv229[ebp], eax
	push	OFFSET ??_C@_09ODNGOEIO@translate?$AA@
	call	?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z ; printAttribute
	add	esp, 72					; 00000048H
; Line 515
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45097[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_02NEKEAGPN@?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv231[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
$LN5@printComme:
; Line 516
	jmp	SHORT $LN4@printComme
$LN6@printComme:
; Line 517
	call	_getShowWarning
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN4@printComme
; Line 518
	mov	esi, esp
	mov	eax, DWORD PTR _resName$[ebp]
	push	eax
	push	OFFSET ??_C@_0FA@EKBKKFPC@Warning?3?5Tranlate?5attribute?5for?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 520
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45098[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_02NEKEAGPN@?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv233[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
$LN4@printComme:
; Line 522
	jmp	SHORT $LN2@printComme
$LN7@printComme:
; Line 524
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45099[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_02NEKEAGPN@?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv235[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
$LN2@printComme:
; Line 527
	cmp	DWORD PTR _descLen$[ebp], 0
	jle	SHORT $LN1@printComme
; Line 528
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 529
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
	push	OFFSET ??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@
	mov	ecx, DWORD PTR _descLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _desc$[ebp]
	push	edx
	call	?print@@YAXPA_WHPBD1PAW4UErrorCode@@@Z	; print
	add	esp, 20					; 00000014H
$LN1@printComme:
; Line 532
	mov	eax, DWORD PTR _desc$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 533
	mov	eax, DWORD PTR _trans$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN12@printComme:
; Line 540
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@printComme
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@printComme:
	DD	4
	DD	$LN22@printComme
$LN22@printComme:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN18@printComme
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN19@printComme
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN20@printComme
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN21@printComme
$LN21@printComme:
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN20@printComme:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	0
$LN19@printComme:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN18@printComme:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?printComments@@YAXPAUUString@@PBDCPAW4UErrorCode@@@Z ENDP ; printComments
_TEXT	ENDS
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z$0
__ehfuncinfo$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z
_TEXT	SEGMENT
tv182 = -280						; size = 4
tv180 = -280						; size = 4
tv178 = -280						; size = 4
tv176 = -280						; size = 4
tv174 = -280						; size = 4
$T45113 = -272						; size = 4
$T45114 = -260						; size = 4
$T45115 = -248						; size = 4
$T45116 = -236						; size = 4
$T45117 = -224						; size = 4
__$EHRec$ = -12						; size = 12
_name$ = 8						; size = 4
_value$ = 12						; size = 64
___formal$ = 76						; size = 4
?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z PROC	; printAttribute, COMDAT
; Line 473
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 474
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45113[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv174[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 475
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45114[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 476
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45115[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_04GFKCAHFK@?5?$DN?5?$CC?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv178[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 477
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45116[ebp], esp
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv180[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 478
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45117[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv182[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 479
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@printAttri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@printAttri:
	DD	1
	DD	$LN11@printAttri
$LN11@printAttri:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@printAttri
$LN9@printAttri:
	DB	95					; 0000005fH
	DB	36					; 00000024H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?printAttribute@@YAXPBDVUnicodeString@icu_56@@H@Z ENDP	; printAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?alias_write_xml@@YAXPAVAliasResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv211 = -280						; size = 4
tv209 = -280						; size = 4
tv207 = -280						; size = 4
tv205 = -280						; size = 4
$T45135 = -272						; size = 4
$T45136 = -260						; size = 4
$T45137 = -248						; size = 4
$T45138 = -236						; size = 4
_bufLen$ = -32						; size = 4
_buf$ = -20						; size = 4
_sid$ = -8						; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?alias_write_xml@@YAXPAVAliasResource@@PBD1PAW4UErrorCode@@@Z PROC ; alias_write_xml, COMDAT
; Line 653
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 654
	mov	DWORD PTR _sid$[ebp], 0
; Line 655
	mov	DWORD PTR _buf$[ebp], 0
; Line 656
	mov	DWORD PTR _bufLen$[ebp], 0
; Line 658
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _alias_restype
	push	edx
	mov	eax, DWORD PTR _trans_unit
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 660
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 662
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45135[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv205[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 664
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	push	eax
	lea	ecx, DWORD PTR _bufLen$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	?convertAndEscape@@YAPADPAPADHPAHPB_WHPAW4UErrorCode@@@Z ; convertAndEscape
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
; Line 666
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@alias_writ
; Line 667
	jmp	$LN2@alias_writ
$LN1@alias_writ:
; Line 669
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45136[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	mov	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv207[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 670
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45137[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv209[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 672
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ; printNoteElements
	add	esp, 8
; Line 674
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 675
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 677
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45138[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_trans_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv211[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 679
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 680
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN2@alias_writ:
; Line 681
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@alias_writ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@alias_writ:
	DD	2
	DD	$LN10@alias_writ
$LN10@alias_writ:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@alias_writ
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@alias_writ
$LN9@alias_writ:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@alias_writ:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?alias_write_xml@@YAXPAVAliasResource@@PBD1PAW4UErrorCode@@@Z ENDP ; alias_write_xml
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_itostr:PROC
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?array_write_xml@@YAXPAVArrayResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv155 = -524						; size = 4
$T45150 = -516						; size = 4
_subId$37876 = -312					; size = 4
_c$37875 = -300						; size = 256
_current$ = -36						; size = 4
_index$ = -24						; size = 4
_sid$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
_language$ = 16						; size = 4
_status$ = 20						; size = 4
?array_write_xml@@YAXPAVArrayResource@@PBD1PAW4UErrorCode@@@Z PROC ; array_write_xml, COMDAT
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 685
	mov	DWORD PTR _sid$[ebp], 0
; Line 686
	mov	DWORD PTR _index$[ebp], 0
; Line 688
	mov	DWORD PTR _current$[ebp], 0
; Line 690
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _array_restype
	push	edx
	mov	eax, DWORD PTR _group
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 692
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
$LN3@array_writ:
; Line 694
	cmp	DWORD PTR _current$[ebp], 0
	je	$LN2@array_writ
; Line 695
	mov	BYTE PTR _c$37875[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _c$37875[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 696
	mov	DWORD PTR _subId$37876[ebp], 0
; Line 698
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$37875[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
; Line 699
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 700
	mov	eax, DWORD PTR _subId$37876[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$37875[ebp]
	push	ecx
	mov	edx, DWORD PTR _sid$[ebp]
	push	edx
	call	?getID@@YAPADPBD0PAD@Z			; getID
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _subId$37876[ebp], eax
; Line 702
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _subId$37876[ebp]
	push	edx
	mov	eax, DWORD PTR _current$[ebp]
	push	eax
	call	?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z ; res_write_xml
	add	esp, 20					; 00000014H
; Line 703
	mov	eax, DWORD PTR _subId$37876[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 704
	mov	DWORD PTR _subId$37876[ebp], 0
; Line 706
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@array_writ
; Line 707
	jmp	SHORT $LN4@array_writ
$LN1@array_writ:
; Line 710
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 711
	jmp	$LN3@array_writ
$LN2@array_writ:
; Line 713
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 714
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 715
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45150[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_group
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv155[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 717
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN4@array_writ:
; Line 718
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@array_writ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@array_writ:
	DD	1
	DD	$LN8@array_writ
$LN8@array_writ:
	DD	-300					; fffffed4H
	DD	256					; 00000100H
	DD	$LN7@array_writ
$LN7@array_writ:
	DB	99					; 00000063H
	DB	0
?array_write_xml@@YAXPAVArrayResource@@PBD1PAW4UErrorCode@@@Z ENDP ; array_write_xml
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?intvector_write_xml@@YAXPAVIntVectorResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv287 = -872						; size = 4
tv285 = -872						; size = 4
tv283 = -872						; size = 4
tv281 = -872						; size = 4
tv279 = -872						; size = 4
tv277 = -872						; size = 4
tv275 = -872						; size = 4
tv273 = -872						; size = 4
$T45159 = -864						; size = 4
$T45160 = -852						; size = 4
$T45161 = -840						; size = 4
$T45162 = -828						; size = 4
$T45163 = -816						; size = 4
$T45164 = -804						; size = 4
$T45165 = -792						; size = 4
$T45166 = -780						; size = 4
_c$37894 = -576						; size = 256
_buf$ = -312						; size = 256
_len$ = -48						; size = 4
_i$ = -36						; size = 4
_ivd$ = -24						; size = 4
_sid$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?intvector_write_xml@@YAXPAVIntVectorResource@@PBD1PAW4UErrorCode@@@Z PROC ; intvector_write_xml, COMDAT
; Line 721
	push	ebp
	mov	ebp, esp
	sub	esp, 872				; 00000368H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-872]
	mov	ecx, 218				; 000000daH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 722
	mov	DWORD PTR _sid$[ebp], 0
; Line 723
	mov	DWORD PTR _ivd$[ebp], 0
; Line 724
	mov	DWORD PTR _i$[ebp], 0
; Line 725
	mov	DWORD PTR _len$[ebp], 0
; Line 726
	mov	BYTE PTR _buf$[ebp], 48			; 00000030H
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _buf$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 728
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _intvector_restype
	push	edx
	mov	eax, DWORD PTR _group
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 730
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@intvector_
$LN2@intvector_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@intvector_:
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	$LN1@intvector_
; Line 731
	mov	BYTE PTR _c$37894[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _c$37894[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 733
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$37894[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
; Line 734
	mov	eax, DWORD PTR _ivd$[ebp]
	push	eax
	lea	ecx, DWORD PTR _c$37894[ebp]
	push	ecx
	mov	edx, DWORD PTR _sid$[ebp]
	push	edx
	call	?getID@@YAPADPBD0PAD@Z			; getID
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ivd$[ebp], eax
; Line 735
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
; Line 737
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 738
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45159[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01MNNFJEPP@?$DM?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv273[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 739
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45160[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _trans_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 741
	mov	eax, DWORD PTR _ivd$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _ivd$[ebp]
	push	ecx
	push	OFFSET ??_C@_02EGCJHIOB@id?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 742
	mov	eax, DWORD PTR _integer_restype
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _integer_restype
	push	ecx
	push	OFFSET ??_C@_07HGIOPEPN@restype?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 744
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45161[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_02NEKEAGPN@?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv277[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 746
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 747
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 748
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45162[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv279[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 750
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45163[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv281[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 752
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45164[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv283[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 753
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 754
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 755
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45165[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_trans_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 757
	mov	eax, DWORD PTR _ivd$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 758
	mov	DWORD PTR _ivd$[ebp], 0
; Line 759
	jmp	$LN2@intvector_
$LN1@intvector_:
; Line 761
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 762
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 764
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45166[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_group
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 765
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 766
	mov	DWORD PTR _sid$[ebp], 0
; Line 767
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@intvector_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 872				; 00000368H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@intvector_:
	DD	2
	DD	$LN16@intvector_
$LN16@intvector_:
	DD	-312					; fffffec8H
	DD	256					; 00000100H
	DD	$LN14@intvector_
	DD	-576					; fffffdc0H
	DD	256					; 00000100H
	DD	$LN15@intvector_
$LN15@intvector_:
	DB	99					; 00000063H
	DB	0
$LN14@intvector_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?intvector_write_xml@@YAXPAVIntVectorResource@@PBD1PAW4UErrorCode@@@Z ENDP ; intvector_write_xml
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?int_write_xml@@YAXPAVIntResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv195 = -536						; size = 4
tv193 = -536						; size = 4
tv191 = -536						; size = 4
tv189 = -536						; size = 4
$T45182 = -528						; size = 4
$T45183 = -516						; size = 4
$T45184 = -504						; size = 4
$T45185 = -492						; size = 4
_len$ = -288						; size = 4
_buf$ = -276						; size = 256
_sid$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?int_write_xml@@YAXPAVIntResource@@PBD1PAW4UErrorCode@@@Z PROC ; int_write_xml, COMDAT
; Line 770
	push	ebp
	mov	ebp, esp
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 771
	mov	DWORD PTR _sid$[ebp], 0
; Line 772
	mov	BYTE PTR _buf$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _buf$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 773
	mov	DWORD PTR _len$[ebp], 0
; Line 775
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _integer_restype
	push	edx
	mov	eax, DWORD PTR _trans_unit
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 777
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 779
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45182[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv189[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 781
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
; Line 782
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45183[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv191[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 784
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45184[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv193[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 786
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ; printNoteElements
	add	esp, 8
; Line 788
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 789
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 791
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45185[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_trans_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv195[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 793
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 794
	mov	DWORD PTR _sid$[ebp], 0
; Line 795
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@int_write_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@int_write_:
	DD	1
	DD	$LN8@int_write_
$LN8@int_write_:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN7@int_write_
$LN7@int_write_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?int_write_xml@@YAXPAVIntResource@@PBD1PAW4UErrorCode@@@Z ENDP ; int_write_xml
_TEXT	ENDS
PUBLIC	??_C@_01PPODPGHN@?$DO?$AA@			; `string'
PUBLIC	??_C@_03OOINPMFE@crc?$AA@			; `string'
PUBLIC	??_C@_04MLMMMEIO@form?$AA@			; `string'
PUBLIC	??_C@_03PCPALPJL@?1?$DO?6?$AA@			; `string'
PUBLIC	??_C@_04CMBCJJJD@href?$AA@			; `string'
PUBLIC	??_C@_04CIMGMMMG@text?$AA@			; `string'
PUBLIC	??_C@_05GCIAPODO@?4text?$AA@			; `string'
PUBLIC	??_C@_05BPFJLLEL@video?$AA@			; `string'
PUBLIC	??_C@_05BNKGNNNB@?4mpeg?$AA@			; `string'
PUBLIC	??_C@_04PACNCDGJ@?4mpg?$AA@			; `string'
PUBLIC	??_C@_04CAPFMNON@?4avi?$AA@			; `string'
PUBLIC	??_C@_05KNIAAKIP@audio?$AA@			; `string'
PUBLIC	??_C@_03IFALNEEK@?4au?$AA@			; `string'
PUBLIC	??_C@_04IBLEHOMF@?4wav?$AA@			; `string'
PUBLIC	??_C@_05NGOMGBBD@image?$AA@			; `string'
PUBLIC	??_C@_04JFHMGKLD@?4gif?$AA@			; `string'
PUBLIC	??_C@_05KPIGABMB@?4jpeg?$AA@			; `string'
PUBLIC	??_C@_04GNPKBLNA@?4jpg?$AA@			; `string'
PUBLIC	??_C@_0CP@HFMENOOD@Error?3?5?$CFs?5is?5an?5unknown?5binary?5f@ ; `string'
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	__$ArrayPad$
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_01PPODPGHN@?$DO?$AA@
CONST	SEGMENT
??_C@_01PPODPGHN@?$DO?$AA@ DB '>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OOINPMFE@crc?$AA@
CONST	SEGMENT
??_C@_03OOINPMFE@crc?$AA@ DB 'crc', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLMMMEIO@form?$AA@
CONST	SEGMENT
??_C@_04MLMMMEIO@form?$AA@ DB 'form', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCPALPJL@?1?$DO?6?$AA@
CONST	SEGMENT
??_C@_03PCPALPJL@?1?$DO?6?$AA@ DB '/>', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CMBCJJJD@href?$AA@
CONST	SEGMENT
??_C@_04CMBCJJJD@href?$AA@ DB 'href', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CIMGMMMG@text?$AA@
CONST	SEGMENT
??_C@_04CIMGMMMG@text?$AA@ DB 'text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCIAPODO@?4text?$AA@
CONST	SEGMENT
??_C@_05GCIAPODO@?4text?$AA@ DB '.text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPFJLLEL@video?$AA@
CONST	SEGMENT
??_C@_05BPFJLLEL@video?$AA@ DB 'video', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BNKGNNNB@?4mpeg?$AA@
CONST	SEGMENT
??_C@_05BNKGNNNB@?4mpeg?$AA@ DB '.mpeg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PACNCDGJ@?4mpg?$AA@
CONST	SEGMENT
??_C@_04PACNCDGJ@?4mpg?$AA@ DB '.mpg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CAPFMNON@?4avi?$AA@
CONST	SEGMENT
??_C@_04CAPFMNON@?4avi?$AA@ DB '.avi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNIAAKIP@audio?$AA@
CONST	SEGMENT
??_C@_05KNIAAKIP@audio?$AA@ DB 'audio', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFALNEEK@?4au?$AA@
CONST	SEGMENT
??_C@_03IFALNEEK@?4au?$AA@ DB '.au', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IBLEHOMF@?4wav?$AA@
CONST	SEGMENT
??_C@_04IBLEHOMF@?4wav?$AA@ DB '.wav', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NGOMGBBD@image?$AA@
CONST	SEGMENT
??_C@_05NGOMGBBD@image?$AA@ DB 'image', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04JFHMGKLD@?4gif?$AA@
CONST	SEGMENT
??_C@_04JFHMGKLD@?4gif?$AA@ DB '.gif', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KPIGABMB@?4jpeg?$AA@
CONST	SEGMENT
??_C@_05KPIGABMB@?4jpeg?$AA@ DB '.jpeg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GNPKBLNA@?4jpg?$AA@
CONST	SEGMENT
??_C@_04GNPKBLNA@?4jpg?$AA@ DB '.jpg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HFMENOOD@Error?3?5?$CFs?5is?5an?5unknown?5binary?5f@
CONST	SEGMENT
??_C@_0CP@HFMENOOD@Error?3?5?$CFs?5is?5an?5unknown?5binary?5f@ DB 'Error:'
	DB	' %s is an unknown binary filename type.', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?bin_write_xml@@YAXPAVBinaryResource@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv507 = -1748						; size = 4
tv505 = -1748						; size = 4
tv503 = -1748						; size = 4
tv501 = -1748						; size = 4
tv499 = -1748						; size = 4
tv497 = -1748						; size = 4
tv495 = -1748						; size = 4
tv493 = -1748						; size = 4
tv491 = -1748						; size = 4
tv489 = -1748						; size = 4
tv487 = -1748						; size = 4
tv485 = -1748						; size = 4
tv78 = -1748						; size = 4
tv70 = -1748						; size = 4
$T45200 = -1740						; size = 4
$T45201 = -1728						; size = 4
$T45202 = -1716						; size = 4
$T45203 = -1704						; size = 4
$T45204 = -1692						; size = 4
$T45205 = -1680						; size = 4
$T45206 = -1668						; size = 4
$T45207 = -1656						; size = 4
$T45208 = -1644						; size = 4
$T45209 = -1632						; size = 4
$T45210 = -1620						; size = 4
$T45211 = -1608						; size = 4
_len$37992 = -1404					; size = 4
_i$37991 = -1392					; size = 4
_temp$37990 = -1380					; size = 256
_f$ = -1116						; size = 4
_ext$ = -1104						; size = 4
_fn$ = -1092						; size = 4
_tLen$ = -1080						; size = 4
_fileName$ = -1068					; size = 1024
_crc$ = -36						; size = 4
_sid$ = -24						; size = 4
_m_type$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
___formal$ = 16						; size = 4
_status$ = 20						; size = 4
?bin_write_xml@@YAXPAVBinaryResource@@PBD1PAW4UErrorCode@@@Z PROC ; bin_write_xml, COMDAT
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 1748				; 000006d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1748]
	mov	ecx, 437				; 000001b5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 799
	mov	eax, DWORD PTR _application_mimetype
	mov	DWORD PTR _m_type$[ebp], eax
; Line 800
	mov	DWORD PTR _sid$[ebp], 0
; Line 801
	mov	DWORD PTR _crc$[ebp], -1
; Line 803
	mov	BYTE PTR _fileName$[ebp], 0
	push	1023					; 000003ffH
	push	0
	lea	eax, DWORD PTR _fileName$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 804
	cmp	DWORD PTR _outDir, 0
	jne	SHORT $LN23@bin_write_
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN24@bin_write_
$LN23@bin_write_:
	mov	eax, DWORD PTR _outDir
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv70[ebp], eax
$LN24@bin_write_:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _tLen$[ebp], ecx
; Line 807
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN25@bin_write_
	mov	ecx, DWORD PTR _res$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN26@bin_write_
$LN25@bin_write_:
	mov	DWORD PTR tv78[ebp], 0
$LN26@bin_write_:
	mov	eax, DWORD PTR tv78[ebp]
	mov	ecx, DWORD PTR _tLen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1024]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _fn$[ebp], eax
; Line 808
	mov	DWORD PTR _ext$[ebp], 0
; Line 810
	mov	DWORD PTR _f$[ebp], 0
; Line 812
	mov	eax, DWORD PTR _fn$[ebp]
	mov	BYTE PTR [eax], 0
; Line 814
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	$LN20@bin_write_
; Line 815
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 816
	push	92					; 0000005cH
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _f$[ebp], eax
; Line 818
	cmp	DWORD PTR _f$[ebp], 0
	je	SHORT $LN19@bin_write_
; Line 819
	mov	eax, DWORD PTR _f$[ebp]
	add	eax, 1
	mov	DWORD PTR _f$[ebp], eax
; Line 820
	jmp	SHORT $LN18@bin_write_
$LN19@bin_write_:
; Line 821
	lea	eax, DWORD PTR _fileName$[ebp]
	mov	DWORD PTR _f$[ebp], eax
$LN18@bin_write_:
; Line 824
	push	46					; 0000002eH
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _ext$[ebp], eax
; Line 826
	cmp	DWORD PTR _ext$[ebp], 0
	jne	SHORT $LN17@bin_write_
; Line 827
	mov	esi, esp
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	push	OFFSET ??_C@_0CP@HFMENOOD@Error?3?5?$CFs?5is?5an?5unknown?5binary?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 828
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@bin_write_:
; Line 831
	push	OFFSET ??_C@_04GNPKBLNA@?4jpg?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@bin_write_
	push	OFFSET ??_C@_05KPIGABMB@?4jpeg?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@bin_write_
	push	OFFSET ??_C@_04JFHMGKLD@?4gif?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@bin_write_
$LN15@bin_write_:
; Line 832
	mov	DWORD PTR _m_type$[ebp], OFFSET ??_C@_05NGOMGBBD@image?$AA@
	jmp	$LN14@bin_write_
$LN16@bin_write_:
; Line 833
	push	OFFSET ??_C@_04IBLEHOMF@?4wav?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN12@bin_write_
	push	OFFSET ??_C@_03IFALNEEK@?4au?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN13@bin_write_
$LN12@bin_write_:
; Line 834
	mov	DWORD PTR _m_type$[ebp], OFFSET ??_C@_05KNIAAKIP@audio?$AA@
	jmp	$LN14@bin_write_
$LN13@bin_write_:
; Line 835
	push	OFFSET ??_C@_04CAPFMNON@?4avi?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@bin_write_
	push	OFFSET ??_C@_04PACNCDGJ@?4mpg?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@bin_write_
	push	OFFSET ??_C@_05BNKGNNNB@?4mpeg?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@bin_write_
$LN9@bin_write_:
; Line 836
	mov	DWORD PTR _m_type$[ebp], OFFSET ??_C@_05BPFJLLEL@video?$AA@
	jmp	SHORT $LN14@bin_write_
$LN10@bin_write_:
; Line 837
	push	OFFSET ??_C@_04LCMACLFG@?4txt?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN6@bin_write_
	push	OFFSET ??_C@_05GCIAPODO@?4text?$AA@
	mov	eax, DWORD PTR _ext$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@bin_write_
$LN6@bin_write_:
; Line 838
	mov	DWORD PTR _m_type$[ebp], OFFSET ??_C@_04CIMGMMMG@text?$AA@
$LN14@bin_write_:
; Line 841
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_type$[ebp]
	push	edx
	mov	eax, DWORD PTR _binary_restype
	push	eax
	mov	ecx, DWORD PTR _bin_unit
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 843
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 845
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45200[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bin_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv485[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 847
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 848
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 850
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45201[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _external_file
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv487[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 851
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	push	OFFSET ??_C@_04CMBCJJJD@href?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 852
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45202[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_03PCPALPJL@?1?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv489[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 853
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 854
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 856
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45203[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_bin_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv491[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 858
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ; printNoteElements
	add	esp, 8
; Line 859
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 860
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 861
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45204[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_bin_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv493[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 862
	jmp	$LN5@bin_write_
$LN20@bin_write_:
; Line 863
	mov	BYTE PTR _temp$37990[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _temp$37990[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 864
	mov	DWORD PTR _i$37991[ebp], 0
; Line 865
	mov	DWORD PTR _len$37992[ebp], 0
; Line 867
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _m_type$[ebp]
	push	edx
	mov	eax, DWORD PTR _binary_restype
	push	eax
	mov	ecx, DWORD PTR _bin_unit
	push	ecx
	mov	edx, DWORD PTR _res$[ebp]
	push	edx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 869
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 870
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45205[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bin_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv495[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 872
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 873
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 875
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45206[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _internal_file
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv497[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 876
	mov	eax, DWORD PTR _application_mimetype
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _application_mimetype
	push	ecx
	push	OFFSET ??_C@_04MLMMMEIO@form?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
$LN4@bin_write_:
; Line 878
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$37991[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	SHORT $LN3@bin_write_
; Line 879
	push	2
	push	16					; 00000010H
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$37991[ebp]
	movzx	eax, BYTE PTR [ecx+edx]
	push	eax
	lea	ecx, DWORD PTR _temp$37990[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$37992[ebp], eax
; Line 880
	mov	eax, DWORD PTR _crc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$37992[ebp]
	push	ecx
	lea	edx, DWORD PTR _temp$37990[ebp]
	push	edx
	call	_computeCRC
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _crc$[ebp], eax
; Line 881
	mov	eax, DWORD PTR _i$37991[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37991[ebp], eax
; Line 882
	jmp	SHORT $LN4@bin_write_
$LN3@bin_write_:
; Line 884
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _crc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$37990[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$37992[ebp], eax
; Line 885
	mov	eax, DWORD PTR _len$37992[ebp]
	push	eax
	lea	ecx, DWORD PTR _temp$37990[ebp]
	push	ecx
	push	OFFSET ??_C@_03OOINPMFE@crc?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 887
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45207[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv499[ebp], eax
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 889
	mov	DWORD PTR _i$37991[ebp], 0
$LN2@bin_write_:
; Line 890
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$37991[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	SHORT $LN1@bin_write_
; Line 891
	push	2
	push	16					; 00000010H
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$37991[ebp]
	movzx	eax, BYTE PTR [ecx+edx]
	push	eax
	lea	ecx, DWORD PTR _temp$37990[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$37992[ebp], eax
; Line 892
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45208[ebp], esp
	mov	esi, esp
	lea	eax, DWORD PTR _temp$37990[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv501[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 893
	mov	eax, DWORD PTR _i$37991[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37991[ebp], eax
; Line 894
	jmp	SHORT $LN2@bin_write_
$LN1@bin_write_:
; Line 896
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45209[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_internal_file
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv503[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 898
	mov	eax, DWORD PTR _tabCount
	sub	eax, 2
	mov	DWORD PTR _tabCount, eax
; Line 899
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 901
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45210[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_bin_source
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv505[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 902
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?printNoteElements@@YAXPBUUString@@PAW4UErrorCode@@@Z ; printNoteElements
	add	esp, 8
; Line 904
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 905
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 906
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45211[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_bin_unit
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv507[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 908
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 909
	mov	DWORD PTR _sid$[ebp], 0
$LN5@bin_write_:
; Line 912
	mov	eax, DWORD PTR _fn$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN22@bin_write_:
; Line 913
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@bin_write_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1748				; 000006d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN42@bin_write_:
	DD	2
	DD	$LN41@bin_write_
$LN41@bin_write_:
	DD	-1068					; fffffbd4H
	DD	1024					; 00000400H
	DD	$LN39@bin_write_
	DD	-1380					; fffffa9cH
	DD	256					; 00000100H
	DD	$LN40@bin_write_
$LN40@bin_write_:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN39@bin_write_:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?bin_write_xml@@YAXPAVBinaryResource@@PBD1PAW4UErrorCode@@@Z ENDP ; bin_write_xml
_TEXT	ENDS
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?table_write_xml@@YAXPAVTableResource@@PBD1CPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv149 = -244						; size = 4
$T45232 = -236						; size = 4
_sid$ = -32						; size = 4
_current$ = -20						; size = 4
_i$ = -8						; size = 4
_res$ = 8						; size = 4
_id$ = 12						; size = 4
_language$ = 16						; size = 4
_isTopLevel$ = 20					; size = 1
_status$ = 24						; size = 4
?table_write_xml@@YAXPAVTableResource@@PBD1CPAW4UErrorCode@@@Z PROC ; table_write_xml, COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
; Line 918
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 920
	mov	DWORD PTR _i$[ebp], 0
; Line 922
	mov	DWORD PTR _current$[ebp], 0
; Line 923
	mov	DWORD PTR _sid$[ebp], 0
; Line 925
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@table_writ
; Line 926
	jmp	$LN6@table_writ
$LN5@table_writ:
; Line 929
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _table_restype
	push	edx
	mov	eax, DWORD PTR _group
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?printContainer@@YAPADPAUSResource@@PBD111PAW4UErrorCode@@@Z ; printContainer
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sid$[ebp], eax
; Line 931
	movsx	eax, BYTE PTR _isTopLevel$[ebp]
	test	eax, eax
	je	SHORT $LN4@table_writ
; Line 932
	mov	eax, DWORD PTR _sid$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@table_writ:
; Line 935
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
; Line 936
	mov	DWORD PTR _i$[ebp], 0
$LN3@table_writ:
; Line 938
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN2@table_writ
; Line 939
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _language$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sid$[ebp]
	push	edx
	mov	eax, DWORD PTR _current$[ebp]
	push	eax
	call	?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z ; res_write_xml
	add	esp, 20					; 00000014H
; Line 941
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@table_writ
; Line 942
	jmp	SHORT $LN6@table_writ
$LN1@table_writ:
; Line 945
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 946
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 947
	jmp	SHORT $LN3@table_writ
$LN2@table_writ:
; Line 949
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 950
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 952
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45232[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _close_group
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 954
	mov	eax, DWORD PTR _sid$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 955
	mov	DWORD PTR _sid$[ebp], 0
$LN6@table_writ:
; Line 956
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?table_write_xml@@YAXPAVTableResource@@PBD1CPAW4UErrorCode@@@Z ENDP ; table_write_xml
_TEXT	ENDS
PUBLIC	??_C@_09GDPPOAKL@tool?9name?$AA@		; `string'
PUBLIC	??_C@_07HOJGINNM@tool?9id?$AA@			; `string'
PUBLIC	??_C@_03JKGHEG@?$CC?$DO?6?$AA@			; `string'
PUBLIC	??_C@_0BD@CNMAADNI@?$CFY?9?$CFm?9?$CFdT?$CFH?3?$CFM?3?$CFSZ?$AA@ ; `string'
PUBLIC	??_C@_0GN@FIJJNPHF@Warning?3?5The?5top?5level?5tag?5in?5th@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0GP@OCPPAEMA@Error?3?5The?5file?5name?5and?5table?5n@ ; `string'
PUBLIC	??_C@_0DK@JDNEGDFC@Warning?3?5The?5file?5name?5is?5not?5sa@ ; `string'
PUBLIC	??_C@_05NBFJKMKI@genrb?$AA@			; `string'
PUBLIC	??_C@_0BC@CCINPECB@genrb?956?9icu?956?41?$AA@	; `string'
PUBLIC	??_C@_05NIFBJAGG@?$DMtool?$AA@			; `string'
PUBLIC	??_C@_08LKLBFGKF@?$DM?1body?$DO?6?$AA@		; `string'
PUBLIC	??_C@_07DKLJIGM@?$DMbody?$DO?6?$AA@		; `string'
PUBLIC	??_C@_0L@INLEPINB@?$DM?1header?$DO?6?$AA@	; `string'
PUBLIC	??_C@_09OLFAMCHL@?$DMheader?$DO?6?$AA@		; `string'
PUBLIC	??_C@_08LCBIDCEN@?$DM?1file?$DO?6?$AA@		; `string'
PUBLIC	??_C@_0L@EHKGODB@?$CC?5date?5?$DN?5?$CC?$AA@	; `string'
PUBLIC	??_C@_0N@DCPCBMHH@original?5?$DN?5?$CC?$AA@	; `string'
PUBLIC	??_C@_0CG@JBMLFPCP@?$CC?5datatype?5?$DN?5?$CCx?9icu?9resource?9bun@ ; `string'
PUBLIC	??_C@_0DB@DHPNFPDH@?$DMfile?5xml?3space?5?$DN?5?$CCpreserve?$CC?5sou@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_bundle_write_xml
EXTRN	_ucnv_close_56:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	__imp__strftime:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp__strncpy:PROC
;	COMDAT ??_C@_09GDPPOAKL@tool?9name?$AA@
CONST	SEGMENT
??_C@_09GDPPOAKL@tool?9name?$AA@ DB 'tool-name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HOJGINNM@tool?9id?$AA@
CONST	SEGMENT
??_C@_07HOJGINNM@tool?9id?$AA@ DB 'tool-id', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03JKGHEG@?$CC?$DO?6?$AA@
CONST	SEGMENT
??_C@_03JKGHEG@?$CC?$DO?6?$AA@ DB '">', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CNMAADNI@?$CFY?9?$CFm?9?$CFdT?$CFH?3?$CFM?3?$CFSZ?$AA@
CONST	SEGMENT
??_C@_0BD@CNMAADNI@?$CFY?9?$CFm?9?$CFdT?$CFH?3?$CFM?3?$CFSZ?$AA@ DB '%Y-%'
	DB	'm-%dT%H:%M:%SZ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@FIJJNPHF@Warning?3?5The?5top?5level?5tag?5in?5th@
CONST	SEGMENT
??_C@_0GN@FIJJNPHF@Warning?3?5The?5top?5level?5tag?5in?5th@ DB 'Warning: '
	DB	'The top level tag in the resource and language specified are '
	DB	'not the same. Please check the input.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GP@OCPPAEMA@Error?3?5The?5file?5name?5and?5table?5n@
CONST	SEGMENT
??_C@_0GP@OCPPAEMA@Error?3?5The?5file?5name?5and?5table?5n@ DB 'Error: Th'
	DB	'e file name and table name do not contain a valid language co'
	DB	'de. Please use -l option to specify it.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@JDNEGDFC@Warning?3?5The?5file?5name?5is?5not?5sa@
CONST	SEGMENT
??_C@_0DK@JDNEGDFC@Warning?3?5The?5file?5name?5is?5not?5sa@ DB 'Warning: '
	DB	'The file name is not same as the resource name!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NBFJKMKI@genrb?$AA@
CONST	SEGMENT
??_C@_05NBFJKMKI@genrb?$AA@ DB 'genrb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CCINPECB@genrb?956?9icu?956?41?$AA@
CONST	SEGMENT
??_C@_0BC@CCINPECB@genrb?956?9icu?956?41?$AA@ DB 'genrb-56-icu-56.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NIFBJAGG@?$DMtool?$AA@
CONST	SEGMENT
??_C@_05NIFBJAGG@?$DMtool?$AA@ DB '<tool', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LKLBFGKF@?$DM?1body?$DO?6?$AA@
CONST	SEGMENT
??_C@_08LKLBFGKF@?$DM?1body?$DO?6?$AA@ DB '</body>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DKLJIGM@?$DMbody?$DO?6?$AA@
CONST	SEGMENT
??_C@_07DKLJIGM@?$DMbody?$DO?6?$AA@ DB '<body>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INLEPINB@?$DM?1header?$DO?6?$AA@
CONST	SEGMENT
??_C@_0L@INLEPINB@?$DM?1header?$DO?6?$AA@ DB '</header>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OLFAMCHL@?$DMheader?$DO?6?$AA@
CONST	SEGMENT
??_C@_09OLFAMCHL@?$DMheader?$DO?6?$AA@ DB '<header>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCBIDCEN@?$DM?1file?$DO?6?$AA@
CONST	SEGMENT
??_C@_08LCBIDCEN@?$DM?1file?$DO?6?$AA@ DB '</file>', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHKGODB@?$CC?5date?5?$DN?5?$CC?$AA@
CONST	SEGMENT
??_C@_0L@EHKGODB@?$CC?5date?5?$DN?5?$CC?$AA@ DB '" date = "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DCPCBMHH@original?5?$DN?5?$CC?$AA@
CONST	SEGMENT
??_C@_0N@DCPCBMHH@original?5?$DN?5?$CC?$AA@ DB 'original = "', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JBMLFPCP@?$CC?5datatype?5?$DN?5?$CCx?9icu?9resource?9bun@
CONST	SEGMENT
??_C@_0CG@JBMLFPCP@?$CC?5datatype?5?$DN?5?$CCx?9icu?9resource?9bun@ DB '"'
	DB	' datatype = "x-icu-resource-bundle" ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DHPNFPDH@?$DMfile?5xml?3space?5?$DN?5?$CCpreserve?$CC?5sou@
CONST	SEGMENT
??_C@_0DB@DHPNFPDH@?$DMfile?5xml?3space?5?$DN?5?$CCpreserve?$CC?5sou@ DB '<'
	DB	'file xml:space = "preserve" source-language = "', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _bundle_write_xml
_TEXT	SEGMENT
$T45237 = -800						; size = 4
$T45238 = -788						; size = 4
$T45239 = -776						; size = 4
$T45240 = -764						; size = 4
$T45241 = -752						; size = 4
$T45242 = -740						; size = 4
$T45243 = -728						; size = 4
$T45244 = -716						; size = 4
$T45245 = -704						; size = 4
$T45246 = -692						; size = 4
$T45247 = -680						; size = 4
$T45248 = -668						; size = 4
$T45249 = -656						; size = 4
$T45250 = -644						; size = 4
$T45251 = -632						; size = 4
$T45252 = -620						; size = 4
$T45253 = -608						; size = 4
$T45254 = -596						; size = 4
_timeBuf$ = -392					; size = 128
_currTime$ = -256					; size = 8
_index$ = -240						; size = 4
_first$ = -228						; size = 4
_pos$ = -216						; size = 4
_lang$ = -204						; size = 4
_temp$ = -192						; size = 4
_tool_name$ = -180					; size = 4
_tool_id$ = -168					; size = 4
_tool_start$ = -156					; size = 4
_bodyEnd$ = -144					; size = 4
_bodyStart$ = -132					; size = 4
_headerEnd$ = -120					; size = 4
_headerStart$ = -108					; size = 4
_fileEnd$ = -96						; size = 4
_file4$ = -84						; size = 4
_file2$ = -72						; size = 4
_file1$ = -60						; size = 4
_fileStart$ = -48					; size = 4
_originalFileName$ = -36				; size = 4
_outputFileName$ = -24					; size = 4
_xmlfileName$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_bundle$ = 8						; size = 4
_outputDir$ = 12					; size = 4
_outputEnc$ = 16					; size = 4
_filename$ = 20						; size = 4
_writtenFilename$ = 24					; size = 4
_writtenFilenameLen$ = 28				; size = 4
_language$ = 32						; size = 4
_outFileName$ = 36					; size = 4
_status$ = 40						; size = 4
_bundle_write_xml PROC					; COMDAT
; Line 1006
	push	ebp
	mov	ebp, esp
	sub	esp, 804				; 00000324H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-804]
	mov	ecx, 201				; 000000c9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1008
	mov	DWORD PTR _xmlfileName$[ebp], 0
; Line 1009
	mov	DWORD PTR _outputFileName$[ebp], 0
; Line 1010
	mov	DWORD PTR _originalFileName$[ebp], 0
; Line 1011
	mov	DWORD PTR _fileStart$[ebp], OFFSET ??_C@_0DB@DHPNFPDH@?$DMfile?5xml?3space?5?$DN?5?$CCpreserve?$CC?5sou@
; Line 1012
	mov	DWORD PTR _file1$[ebp], OFFSET ??_C@_0CG@JBMLFPCP@?$CC?5datatype?5?$DN?5?$CCx?9icu?9resource?9bun@
; Line 1013
	mov	DWORD PTR _file2$[ebp], OFFSET ??_C@_0N@DCPCBMHH@original?5?$DN?5?$CC?$AA@
; Line 1014
	mov	DWORD PTR _file4$[ebp], OFFSET ??_C@_0L@EHKGODB@?$CC?5date?5?$DN?5?$CC?$AA@
; Line 1015
	mov	DWORD PTR _fileEnd$[ebp], OFFSET ??_C@_08LCBIDCEN@?$DM?1file?$DO?6?$AA@
; Line 1016
	mov	DWORD PTR _headerStart$[ebp], OFFSET ??_C@_09OLFAMCHL@?$DMheader?$DO?6?$AA@
; Line 1017
	mov	DWORD PTR _headerEnd$[ebp], OFFSET ??_C@_0L@INLEPINB@?$DM?1header?$DO?6?$AA@
; Line 1018
	mov	DWORD PTR _bodyStart$[ebp], OFFSET ??_C@_07DKLJIGM@?$DMbody?$DO?6?$AA@
; Line 1019
	mov	DWORD PTR _bodyEnd$[ebp], OFFSET ??_C@_08LKLBFGKF@?$DM?1body?$DO?6?$AA@
; Line 1021
	mov	DWORD PTR _tool_start$[ebp], OFFSET ??_C@_05NIFBJAGG@?$DMtool?$AA@
; Line 1022
	mov	DWORD PTR _tool_id$[ebp], OFFSET ??_C@_0BC@CCINPECB@genrb?956?9icu?956?41?$AA@
; Line 1023
	mov	DWORD PTR _tool_name$[ebp], OFFSET ??_C@_05NBFJKMKI@genrb?$AA@
; Line 1025
	mov	DWORD PTR _temp$[ebp], 0
; Line 1026
	mov	DWORD PTR _lang$[ebp], 0
; Line 1027
	mov	DWORD PTR _pos$[ebp], 0
; Line 1032
	mov	eax, DWORD PTR _outputDir$[ebp]
	mov	DWORD PTR _outDir, eax
; Line 1034
	mov	eax, DWORD PTR _bundle$[ebp]
	mov	DWORD PTR _srBundle, eax
; Line 1036
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
; Line 1037
	cmp	DWORD PTR _pos$[ebp], 0
	je	SHORT $LN23@bundle_wri
; Line 1038
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, DWORD PTR _filename$[ebp]
	add	eax, 1
	mov	DWORD PTR _first$[ebp], eax
; Line 1039
	jmp	SHORT $LN22@bundle_wri
$LN23@bundle_wri:
; Line 1040
	mov	DWORD PTR _first$[ebp], 0
$LN22@bundle_wri:
; Line 1042
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR ?textExt@@3PBDB		; textExt
	push	ecx
	call	_strlen
	add	esp, 4
	sub	esi, eax
	sub	esi, DWORD PTR _first$[ebp]
	mov	DWORD PTR _index$[ebp], esi
; Line 1043
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _originalFileName$[ebp], eax
; Line 1044
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _originalFileName$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1045
	push	1
	mov	eax, DWORD PTR _filename$[ebp]
	add	eax, DWORD PTR _first$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	add	edx, DWORD PTR _first$[ebp]
	push	edx
	mov	eax, DWORD PTR _originalFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1047
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _originalFileName$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN21@bundle_wri
; Line 1048
	mov	esi, esp
	push	OFFSET ??_C@_0DK@JDNEGDFC@Warning?3?5The?5file?5name?5is?5not?5sa@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@bundle_wri:
; Line 1051
	mov	eax, DWORD PTR _originalFileName$[ebp]
	mov	DWORD PTR _temp$[ebp], eax
; Line 1052
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR ?textExt@@3PBDB		; textExt
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+1]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _originalFileName$[ebp], eax
; Line 1053
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR ?textExt@@3PBDB		; textExt
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+1]
	push	edx
	push	0
	mov	eax, DWORD PTR _originalFileName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1054
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _originalFileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1055
	mov	eax, DWORD PTR ?textExt@@3PBDB		; textExt
	push	eax
	mov	ecx, DWORD PTR _originalFileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1056
	mov	eax, DWORD PTR _temp$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1057
	mov	DWORD PTR _temp$[ebp], 0
; Line 1060
	cmp	DWORD PTR _language$[ebp], 0
	jne	SHORT $LN20@bundle_wri
; Line 1071
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srBundle
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?parseFilename@@YAPADPBDPAD@Z		; parseFilename
	add	esp, 8
	mov	DWORD PTR _lang$[ebp], eax
; Line 1082
	cmp	DWORD PTR _lang$[ebp], 0
	jne	SHORT $LN19@bundle_wri
; Line 1083
	mov	esi, esp
	push	OFFSET ??_C@_0GP@OCPPAEMA@Error?3?5The?5file?5name?5and?5table?5n@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1084
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@bundle_wri:
; Line 1087
	jmp	SHORT $LN18@bundle_wri
$LN20@bundle_wri:
; Line 1088
	mov	eax, DWORD PTR _language$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _lang$[ebp], eax
; Line 1089
	mov	eax, DWORD PTR _language$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _lang$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1090
	mov	eax, DWORD PTR _language$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lang$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN18@bundle_wri:
; Line 1093
	cmp	DWORD PTR _outFileName$[ebp], 0
	je	SHORT $LN17@bundle_wri
; Line 1094
	mov	eax, DWORD PTR _outFileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _outputFileName$[ebp], eax
; Line 1095
	mov	eax, DWORD PTR _outFileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	0
	mov	ecx, DWORD PTR _outputFileName$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1096
	mov	eax, DWORD PTR _outFileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outputFileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1097
	jmp	SHORT $LN16@bundle_wri
$LN17@bundle_wri:
; Line 1098
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _outputFileName$[ebp], eax
; Line 1099
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	push	0
	mov	edx, DWORD PTR _outputFileName$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1100
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _outputFileName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN16@bundle_wri:
; Line 1103
	cmp	DWORD PTR _outputDir$[ebp], 0
	je	SHORT $LN15@bundle_wri
; Line 1104
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _outputFileName$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	esi, eax
	mov	edx, DWORD PTR ?xliffExt@@3PBDB		; xliffExt
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+2]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _xmlfileName$[ebp], eax
; Line 1105
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _outputFileName$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	esi, eax
	mov	edx, DWORD PTR ?xliffExt@@3PBDB		; xliffExt
	push	edx
	call	_strlen
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax+2]
	push	eax
	push	0
	mov	ecx, DWORD PTR _xmlfileName$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1106
	jmp	SHORT $LN14@bundle_wri
$LN15@bundle_wri:
; Line 1107
	mov	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR ?xliffExt@@3PBDB		; xliffExt
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+1]
	push	edx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _xmlfileName$[ebp], eax
; Line 1108
	mov	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR ?xliffExt@@3PBDB		; xliffExt
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+1]
	push	edx
	push	0
	mov	eax, DWORD PTR _xmlfileName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN14@bundle_wri:
; Line 1111
	cmp	DWORD PTR _outputDir$[ebp], 0
	je	SHORT $LN13@bundle_wri
; Line 1112
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xmlfileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1113
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _outputDir$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN13@bundle_wri
; Line 1114
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	mov	eax, DWORD PTR _xmlfileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN13@bundle_wri:
; Line 1117
	mov	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xmlfileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1118
	mov	eax, DWORD PTR ?xliffExt@@3PBDB		; xliffExt
	push	eax
	mov	ecx, DWORD PTR _xmlfileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1120
	cmp	DWORD PTR _writtenFilename$[ebp], 0
	je	SHORT $LN11@bundle_wri
; Line 1121
	push	1
	mov	eax, DWORD PTR _xmlfileName$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _writtenFilenameLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xmlfileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@bundle_wri:
; Line 1124
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@bundle_wri
; Line 1125
	jmp	$cleanup_bundle_write_xml$38148
$LN10@bundle_wri:
; Line 1128
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _xmlfileName$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _out, eax
; Line 1130
	cmp	DWORD PTR _out, 0
	jne	SHORT $LN8@bundle_wri
; Line 1131
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 4
; Line 1132
	jmp	$cleanup_bundle_write_xml$38148
$LN8@bundle_wri:
; Line 1134
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45237[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _xmlHeader
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1136
	cmp	DWORD PTR _outputEnc$[ebp], 0
	je	SHORT $LN6@bundle_wri
	mov	eax, DWORD PTR _outputEnc$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@bundle_wri
; Line 1138
	mov	eax, DWORD PTR _outputEnc$[ebp]
	mov	DWORD PTR _enc, eax
; Line 1139
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enc
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _conv, eax
; Line 1140
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@bundle_wri
; Line 1141
	jmp	$cleanup_bundle_write_xml$38148
$LN6@bundle_wri:
; Line 1144
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45238[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bundleStart
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1145
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1146
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45239[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _fileStart$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1148
	cmp	DWORD PTR _language$[ebp], 0
	je	SHORT $LN3@bundle_wri
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _lang$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@bundle_wri
; Line 1149
	mov	esi, esp
	push	OFFSET ??_C@_0GN@FIJJNPHF@Warning?3?5The?5top?5level?5tag?5in?5th@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@bundle_wri:
; Line 1151
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45240[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1152
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45241[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _file1$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1153
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45242[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _file2$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1154
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45243[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _originalFileName$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1155
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45244[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _file4$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1157
	lea	eax, DWORD PTR _currTime$[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 1158
	lea	eax, DWORD PTR _currTime$[ebp]
	push	eax
	call	_gmtime
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BD@CNMAADNI@?$CFY?9?$CFm?9?$CFdT?$CFH?3?$CFM?3?$CFSZ?$AA@
	push	128					; 00000080H
	lea	ecx, DWORD PTR _timeBuf$[ebp]
	push	ecx
	call	DWORD PTR __imp__strftime
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1159
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45245[ebp], esp
	mov	esi, esp
	lea	eax, DWORD PTR _timeBuf$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1160
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45246[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_03JKGHEG@?$CC?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1162
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1163
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1164
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45247[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _headerStart$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1166
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1167
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1169
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45248[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _tool_start$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1170
	mov	eax, DWORD PTR _tool_id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _tool_id$[ebp]
	push	ecx
	push	OFFSET ??_C@_07HOJGINNM@tool?9id?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 1171
	mov	eax, DWORD PTR _tool_name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _tool_name$[ebp]
	push	ecx
	push	OFFSET ??_C@_09GDPPOAKL@tool?9name?$AA@
	call	?printAttribute@@YAXPBD0H@Z		; printAttribute
	add	esp, 12					; 0000000cH
; Line 1172
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45249[ebp], esp
	mov	esi, esp
	push	OFFSET ??_C@_03PCPALPJL@?1?$DO?6?$AA@
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1174
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1175
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1177
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45250[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _headerEnd$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1179
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1180
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1182
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45251[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bodyStart$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1185
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _lang$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?res_write_xml@@YAXPAUSResource@@PBD1CPAW4UErrorCode@@@Z ; res_write_xml
	add	esp, 20					; 00000014H
; Line 1187
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1188
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1190
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45252[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bodyEnd$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1191
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1192
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1193
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45253[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _fileEnd$[ebp]
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1194
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 1195
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 1196
	sub	esp, 64					; 00000040H
	mov	ecx, esp
	mov	DWORD PTR $T45254[ebp], esp
	mov	esi, esp
	mov	eax, DWORD PTR _bundleEnd
	push	eax
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _out
	push	ecx
	call	?write_utf8_file@@YAHPAU_FileStream@@VUnicodeString@icu_56@@@Z ; write_utf8_file
	add	esp, 68					; 00000044H
; Line 1197
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 1199
	mov	eax, DWORD PTR _conv
	push	eax
	call	_ucnv_close_56
	add	esp, 4
$cleanup_bundle_write_xml$38148:
; Line 1202
	mov	eax, DWORD PTR _originalFileName$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1203
	mov	eax, DWORD PTR _lang$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1204
	cmp	DWORD PTR _xmlfileName$[ebp], 0
	je	SHORT $LN2@bundle_wri
; Line 1205
	mov	eax, DWORD PTR _xmlfileName$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN2@bundle_wri:
; Line 1207
	cmp	DWORD PTR _outputFileName$[ebp], 0
	je	SHORT $LN25@bundle_wri
; Line 1208
	mov	eax, DWORD PTR _outputFileName$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN25@bundle_wri:
; Line 1210
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@bundle_wri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 804				; 00000324H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@bundle_wri:
	DD	2
	DD	$LN28@bundle_wri
$LN28@bundle_wri:
	DD	-256					; ffffff00H
	DD	8
	DD	$LN26@bundle_wri
	DD	-392					; fffffe78H
	DD	128					; 00000080H
	DD	$LN27@bundle_wri
$LN27@bundle_wri:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN26@bundle_wri:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_bundle_write_xml ENDP
_TEXT	ENDS
EXTRN	__imp___gmtime64:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _gmtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_gmtime	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 103
	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___gmtime64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_gmtime	ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DF@ILLKBEN@Could?5not?5canonicalize?5the?5local@ ; `string'
EXTRN	_u_errorName_56:PROC
EXTRN	_uloc_canonicalize_56:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__strchr:PROC
;	COMDAT ??_C@_0DF@ILLKBEN@Could?5not?5canonicalize?5the?5local@
; File d:\mozilla\intl\icu\source\tools\genrb\wrtxml.cpp
CONST	SEGMENT
??_C@_0DF@ILLKBEN@Could?5not?5canonicalize?5the?5local@ DB 'Could not can'
	DB	'onicalize the locale ID: %s. Error: %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseFilename@@YAPADPBDPAD@Z
_TEXT	SEGMENT
_ext$ = -92						; size = 4
_status$ = -80						; size = 4
_canonLen$ = -68					; size = 4
_canon$ = -56						; size = 4
_canonCapacity$ = -44					; size = 4
_pos$ = -32						; size = 4
_localeID$ = -20					; size = 4
_idLen$ = -8						; size = 4
_id$ = 8						; size = 4
___formal$ = 12						; size = 4
?parseFilename@@YAPADPBDPAD@Z PROC			; parseFilename, COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 187
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _idLen$[ebp], eax
; Line 188
	mov	eax, DWORD PTR _idLen$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _localeID$[ebp], eax
; Line 189
	mov	DWORD PTR _pos$[ebp], 0
; Line 190
	mov	DWORD PTR _canonCapacity$[ebp], 0
; Line 191
	mov	DWORD PTR _canon$[ebp], 0
; Line 192
	mov	DWORD PTR _canonLen$[ebp], 0
; Line 194
	mov	DWORD PTR _status$[ebp], 0
; Line 195
	mov	esi, esp
	push	46					; 0000002eH
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ext$[ebp], eax
; Line 197
	cmp	DWORD PTR _ext$[ebp], 0
	je	SHORT $LN3@parseFilen
; Line 198
	mov	eax, DWORD PTR _ext$[ebp]
	sub	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR _pos$[ebp], eax
; Line 199
	jmp	SHORT $LN2@parseFilen
$LN3@parseFilen:
; Line 200
	mov	eax, DWORD PTR _idLen$[ebp]
	mov	DWORD PTR _pos$[ebp], eax
$LN2@parseFilen:
; Line 202
	push	1
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 203
	mov	eax, DWORD PTR _localeID$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	BYTE PTR [eax], 0
; Line 205
	mov	eax, DWORD PTR _pos$[ebp]
	imul	eax, 3
	mov	DWORD PTR _canonCapacity$[ebp], eax
; Line 206
	mov	eax, DWORD PTR _canonCapacity$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _canon$[ebp], eax
; Line 207
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _canonCapacity$[ebp]
	push	ecx
	mov	edx, DWORD PTR _canon$[ebp]
	push	edx
	mov	eax, DWORD PTR _localeID$[ebp]
	push	eax
	call	_uloc_canonicalize_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _canonLen$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@parseFilen
; Line 210
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _localeID$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DF@ILLKBEN@Could?5not?5canonicalize?5the?5local@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 211
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@parseFilen:
; Line 213
	push	45					; 0000002dH
	push	95					; 0000005fH
	mov	eax, DWORD PTR _canonLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _canon$[ebp]
	push	ecx
	call	?strnrepchr@@YAXPADHDD@Z		; strnrepchr
	add	esp, 16					; 00000010H
; Line 214
	mov	eax, DWORD PTR _canon$[ebp]
$LN5@parseFilen:
; Line 215
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@parseFilen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@parseFilen:
	DD	1
	DD	$LN7@parseFilen
$LN7@parseFilen:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN6@parseFilen
$LN6@parseFilen:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?parseFilename@@YAPADPBDPAD@Z ENDP			; parseFilename
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?strnrepchr@@YAXPADHDD@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_src$ = 8						; size = 4
_srcLen$ = 12						; size = 4
_s$ = 16						; size = 1
_r$ = 20						; size = 1
?strnrepchr@@YAXPADHDD@Z PROC				; strnrepchr, COMDAT
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	mov	DWORD PTR _i$[ebp], 0
; Line 176
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@strnrepchr
$LN3@strnrepchr:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@strnrepchr:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _srcLen$[ebp]
	jge	SHORT $LN5@strnrepchr
; Line 177
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	movsx	edx, BYTE PTR _s$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@strnrepchr
; Line 178
	mov	eax, DWORD PTR _src$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR _r$[ebp]
	mov	BYTE PTR [eax], cl
$LN1@strnrepchr:
; Line 180
	jmp	SHORT $LN3@strnrepchr
$LN5@strnrepchr:
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?strnrepchr@@YAXPADHDD@Z ENDP				; strnrepchr
_TEXT	ENDS
END

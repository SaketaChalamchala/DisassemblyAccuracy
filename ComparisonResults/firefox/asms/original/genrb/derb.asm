; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\derb.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_0BA@KMAEDEDM@suppressAliases?$AA@		; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_0L@JMMPKMPC@icudatadir?$AA@		; `string'
PUBLIC	??_C@_03NMEMIGJM@bom?$AA@			; `string'
PUBLIC	??_C@_09CMGPLHNH@sourcedir?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_07KBAMPNJK@verbose?$AA@			; `string'
PUBLIC	??_C@_08MABILMFG@truncate?$AA@			; `string'
PUBLIC	??_C@_09FJNDCOGJ@to?9stdout?$AA@		; `string'
PUBLIC	??_C@_08MLPGAEIK@encoding?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
_BSS	SEGMENT
_opt_truncate DB 01H DUP (?)
	ALIGN	4

_verbose DB	01H DUP (?)
	ALIGN	4

_suppressAliases DB 01H DUP (?)
	ALIGN	4

_ustderr DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
?sp@?DK@??main@@9@4QB_WB DW 020H			; `main'::`58'::sp
	ORG $+2
?map@?1??printHex@@YAXPAUUFILE@@E@Z@4QBDB DB '0123456789ABCDEF', 00H ; `printHex'::`2'::map
	ORG $+3
?cr@?1??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB DW 0aH ; `printOutAlias'::`2'::cr
	ORG $+2
?openStr@?7??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB DW 03aH ; `printOutAlias'::`8'::openStr
	DW	061H
	DW	06cH
	DW	069H
	DW	061H
	DW	073H
	DW	020H
	DW	07bH
	DW	020H
	DW	022H
?closeStr@?7??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB DW 022H ; `printOutAlias'::`8'::closeStr
	DW	020H
	DW	07dH
	DW	020H
?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 0aH ; `printOutBundle'::`2'::cr
	ORG $+2
?openStr@?L@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 020H ; `printOutBundle'::`11'::openStr
	DW	07bH
	DW	020H
	DW	022H
?closeStr@?L@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 022H ; `printOutBundle'::`11'::closeStr
	DW	020H
	DW	07dH
	ORG $+2
?openStr@?N@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 022H ; `printOutBundle'::`13'::openStr
	ORG $+2
?closeStr@?N@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 022H ; `printOutBundle'::`13'::closeStr
	DW	02cH
?openStr@?BB@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 03aH ; `printOutBundle'::`17'::openStr
	DW	069H
	DW	06eH
	DW	074H
	DW	020H
	DW	07bH
	DW	020H
	ORG $+2
?closeStr@?BB@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 020H ; `printOutBundle'::`17'::closeStr
	DW	07dH
?openStr@?BO@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 03aH ; `printOutBundle'::`30'::openStr
	DW	062H
	DW	069H
	DW	06eH
	DW	061H
	DW	072H
	DW	079H
	DW	020H
	DW	07bH
	DW	020H
?closeStr@?BO@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 020H ; `printOutBundle'::`30'::closeStr
	DW	07dH
	DW	020H
	ORG $+2
?openStr@?CM@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 03aH ; `printOutBundle'::`44'::openStr
	DW	069H
	DW	06eH
	DW	074H
	DW	076H
	DW	065H
	DW	063H
	DW	074H
	DW	06fH
	DW	072H
	DW	020H
	DW	07bH
	DW	020H
	ORG $+2
?closeStr@?CM@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 020H ; `printOutBundle'::`44'::closeStr
	DW	07dH
	DW	020H
	ORG $+2
?openStr@?DK@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 07bH ; `printOutBundle'::`58'::openStr
	ORG $+2
?closeStr@?DK@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB DW 07dH ; `printOutBundle'::`58'::closeStr
	DW	0aH
CONST	ENDS
;	COMDAT ??_C@_0BA@KMAEDEDM@suppressAliases?$AA@
CONST	SEGMENT
??_C@_0BA@KMAEDEDM@suppressAliases?$AA@ DB 'suppressAliases', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JMMPKMPC@icudatadir?$AA@
CONST	SEGMENT
??_C@_0L@JMMPKMPC@icudatadir?$AA@ DB 'icudatadir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMEMIGJM@bom?$AA@
CONST	SEGMENT
??_C@_03NMEMIGJM@bom?$AA@ DB 'bom', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMGPLHNH@sourcedir?$AA@
CONST	SEGMENT
??_C@_09CMGPLHNH@sourcedir?$AA@ DB 'sourcedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBAMPNJK@verbose?$AA@
CONST	SEGMENT
??_C@_07KBAMPNJK@verbose?$AA@ DB 'verbose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MABILMFG@truncate?$AA@
CONST	SEGMENT
??_C@_08MABILMFG@truncate?$AA@ DB 'truncate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FJNDCOGJ@to?9stdout?$AA@
CONST	SEGMENT
??_C@_09FJNDCOGJ@to?9stdout?$AA@ DB 'to-stdout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLPGAEIK@encoding?$AA@
CONST	SEGMENT
??_C@_08MLPGAEIK@encoding?$AA@ DB 'encoding', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_truncsize DD	050H
	ORG $+4
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08MLPGAEIK@encoding?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	065H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09FJNDCOGJ@to?9stdout?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08MABILMFG@truncate?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	074H
	DB	02H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07KBAMPNJK@verbose?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	076H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09CMGPLHNH@sourcedir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	073H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_03NMEMIGJM@bom?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@JMMPKMPC@icudatadir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	069H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	056H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BA@KMAEDEDM@suppressAliases?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	041H
	DB	00H
	DB	00H
	ORG $+1
_DATA	ENDS
PUBLIC	??_C@_0BG@LEBGNJEB@opening?5resource?5file?$AA@	; `string'
PUBLIC	??_C@_08DGJHPALM@?$CF?4?$CKs?$CF?4?$CKS?$AA@	; `string'
PUBLIC	??_C@_0DF@IIEFLPDG@?6?1?1?5derb?$CI8?$CJ?5by?5Vladimir?5Weinstei@ ; `string'
PUBLIC	??_C@_0BL@JCLEKLIE@the?5ICU?5internal?5?$CFs?5locale?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0CJ@GAFKPAFE@?1?1?5This?5file?5was?5dumped?5by?5derb?$CI@ ; `string'
PUBLIC	??_C@_0BL@EHLHODNM@?1?1?5?9?$CK?9?5Coding?3?5?$CFs?$DL?5?9?$CK?9?6?1?1?6?$AA@ ; `string'
PUBLIC	??_C@_0CP@DANFJFNH@?$CFs?3?5couldn?8t?5configure?5converter@ ; `string'
PUBLIC	??_C@_01GFHCPBMG@C?$AA@				; `string'
PUBLIC	??_C@_0BI@HLKNJFGH@?$CFs?3?5couldn?8t?5create?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_04LCMACLFG@?4txt?$AA@			; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_0BI@GLDLINMO@processing?5bundle?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0EI@NHINBMBO@?$CFs?3?5Error?3?5don?8t?5specify?5an?5enco@ ; `string'
PUBLIC	??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@ ; `string'
PUBLIC	??_C@_03GCKCNDHP@1?41?$AA@			; `string'
PUBLIC	??_C@_04HBNCPEDB@56?41?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0BBL@LHEOFMOB@?$CFcsage?3?5?$CFs?5?$FL?5?9h?0?5?9?$DP?0?5?9?9help?5?$FN?5?$FL?5@ ; `string'
PUBLIC	??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@ ; `string'
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_ures_close_56:PROC
EXTRN	_ucnv_getDefaultName_56:PROC
EXTRN	_u_fputc_56:PROC
EXTRN	_ucnv_setFromUCallBack_56:PROC
EXTRN	_u_fgetConverter_56:PROC
EXTRN	_UCNV_FROM_U_CALLBACK_ESCAPE_56:PROC
EXTRN	_u_fclose_56:PROC
EXTRN	_u_fopen_56:PROC
EXTRN	__imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
EXTRN	_u_get_stdout_56:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp_?isEmpty@CharString@icu_56@@QBECXZ:PROC
EXTRN	_ures_open_56:PROC
EXTRN	_ures_openDirect_56:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBDH@Z:PROC
EXTRN	__imp__isalpha:PROC
EXTRN	_strlen:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	_findBasename:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	_u_fprintf_56:PROC
EXTRN	_getLongPathname:PROC
EXTRN	_u_finit_56:PROC
EXTRN	__imp__fflush:PROC
EXTRN	_u_setDataDirectory_56:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0BG@LEBGNJEB@opening?5resource?5file?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\derb.cpp
CONST	SEGMENT
??_C@_0BG@LEBGNJEB@opening?5resource?5file?$AA@ DB 'opening resource file'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08DGJHPALM@?$CF?4?$CKs?$CF?4?$CKS?$AA@
CONST	SEGMENT
??_C@_08DGJHPALM@?$CF?4?$CKs?$CF?4?$CKS?$AA@ DB '%.*s%.*S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@IIEFLPDG@?6?1?1?5derb?$CI8?$CJ?5by?5Vladimir?5Weinstei@
CONST	SEGMENT
??_C@_0DF@IIEFLPDG@?6?1?1?5derb?$CI8?$CJ?5by?5Vladimir?5Weinstei@ DB 0aH, '/'
	DB	'/ derb(8) by Vladimir Weinstein and Yves Arrouye', 0aH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JCLEKLIE@the?5ICU?5internal?5?$CFs?5locale?$AA@
CONST	SEGMENT
??_C@_0BL@JCLEKLIE@the?5ICU?5internal?5?$CFs?5locale?$AA@ DB 'the ICU int'
	DB	'ernal %s locale', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@GAFKPAFE@?1?1?5This?5file?5was?5dumped?5by?5derb?$CI@
CONST	SEGMENT
??_C@_0CJ@GAFKPAFE@?1?1?5This?5file?5was?5dumped?5by?5derb?$CI@ DB '// Th'
	DB	'is file was dumped by derb(8) from ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EHLHODNM@?1?1?5?9?$CK?9?5Coding?3?5?$CFs?$DL?5?9?$CK?9?6?1?1?6?$AA@
CONST	SEGMENT
??_C@_0BL@EHLHODNM@?1?1?5?9?$CK?9?5Coding?3?5?$CFs?$DL?5?9?$CK?9?6?1?1?6?$AA@ DB '/'
	DB	'/ -*- Coding: %s; -*-', 0aH, '//', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DANFJFNH@?$CFs?3?5couldn?8t?5configure?5converter@
CONST	SEGMENT
??_C@_0CP@DANFJFNH@?$CFs?3?5couldn?8t?5configure?5converter@ DB '%s: coul'
	DB	'dn''t configure converter for encoding', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT
??_C@_01GFHCPBMG@C?$AA@ DB 'C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HLKNJFGH@?$CFs?3?5couldn?8t?5create?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BI@HLKNJFGH@?$CFs?3?5couldn?8t?5create?5?$CFs?6?$AA@ DB '%s: could'
	DB	'n''t create %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LCMACLFG@?4txt?$AA@
CONST	SEGMENT
??_C@_04LCMACLFG@?4txt?$AA@ DB '.txt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GLDLINMO@processing?5bundle?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BI@GLDLINMO@processing?5bundle?5?$CC?$CFs?$CC?6?$AA@ DB 'processin'
	DB	'g bundle "%s"', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NHINBMBO@?$CFs?3?5Error?3?5don?8t?5specify?5an?5enco@
CONST	SEGMENT
??_C@_0EI@NHINBMBO@?$CFs?3?5Error?3?5don?8t?5specify?5an?5enco@ DB '%s: E'
	DB	'rror: don''t specify an encoding (-e) when writing to stdout '
	DB	'(-c).', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@
CONST	SEGMENT
??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@ DB '%'
	DB	's version %s (ICU version %s).', 0aH, '%s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCKCNDHP@1?41?$AA@
CONST	SEGMENT
??_C@_03GCKCNDHP@1?41?$AA@ DB '1.1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HBNCPEDB@56?41?$AA@
CONST	SEGMENT
??_C@_04HBNCPEDB@56?41?$AA@ DB '56.1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBL@LHEOFMOB@?$CFcsage?3?5?$CFs?5?$FL?5?9h?0?5?9?$DP?0?5?9?9help?5?$FN?5?$FL?5@
CONST	SEGMENT
??_C@_0BBL@LHEOFMOB@?$CFcsage?3?5?$CFs?5?$FL?5?9h?0?5?9?$DP?0?5?9?9help?5?$FN?5?$FL?5@ DB '%'
	DB	'csage: %s [ -h, -?, --help ] [ -V, --version ]', 0aH, ' [ -v,'
	DB	' --verbose ] [ -e, --encoding encoding ] [ --bom ]', 0aH, ' ['
	DB	' -t, --truncate [ size ] ]', 0aH, ' [ -s, --sourcedir source '
	DB	'] [ -d, --destdir destination ]', 0aH, ' [ -i, --icudatadir d'
	DB	'irectory ] [ -c, --to-stdout ]', 0aH, ' [ -A, --suppressAlias'
	DB	'es]', 0aH, ' bundle ...', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@
CONST	SEGMENT
??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@ DB '%s: err'
	DB	'or in command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	01H
	DD	FLAT:__unwindfunclet$_main$2
__ehfuncinfo$_main DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
tv491 = -788						; size = 4
tv364 = -788						; size = 4
tv139 = -788						; size = 4
tv320 = -785						; size = 1
$T36039 = -780						; size = 8
$T36040 = -764						; size = 4
$T36043 = -752						; size = 8
$T36044 = -736						; size = 8
$T36045 = -720						; size = 4
$T36048 = -708						; size = 8
$T36049 = -692						; size = 8
$T36050 = -676						; size = 8
$T36051 = -660						; size = 4
$T36052 = -648						; size = 4
$T36053 = -636						; size = 4
_thefile$29129 = -432					; size = 56
_ext$29123 = -368					; size = 4
_filename$29122 = -356					; size = 4
_out$29121 = -344					; size = 4
_q$29110 = -332						; size = 4
_absfilename$29106 = -317				; size = 1
_fromICUData$29103 = -305				; size = 1
_thename$29102 = -296					; size = 4
_infile$29101 = -284					; size = 56
_q$29094 = -220						; size = 4
_p$29093 = -208						; size = 4
_status$29092 = -196					; size = 4
_locale$29091 = -184					; size = 56
_arg$ = -120						; size = 4
_i$ = -108						; size = 4
_bundle$ = -96						; size = 4
_pname$ = -84						; size = 4
_prbom$ = -72						; size = 4
_tostdout$ = -60					; size = 4
_inputDir$ = -48					; size = 4
_outputDir$ = -36					; size = 4
_encoding$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 776				; 00000308H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-788]
	mov	ecx, 194				; 000000c2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 73
	mov	DWORD PTR _encoding$[ebp], 0
; Line 74
	mov	DWORD PTR _outputDir$[ebp], 0
; Line 75
	mov	DWORD PTR _inputDir$[ebp], OFFSET ??_C@_01LFCBOECM@?4?$AA@
; Line 76
	mov	DWORD PTR _tostdout$[ebp], 0
; Line 77
	mov	DWORD PTR _prbom$[ebp], 0
; Line 81
	mov	DWORD PTR _bundle$[ebp], 0
; Line 82
	mov	DWORD PTR _i$[ebp], 0
; Line 87
	push	92					; 0000005cH
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _pname$[ebp], eax
; Line 89
	cmp	DWORD PTR _pname$[ebp], 0
	jne	SHORT $LN56@main
; Line 90
	push	47					; 0000002fH
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _pname$[ebp], eax
$LN56@main:
; Line 93
	cmp	DWORD PTR _pname$[ebp], 0
	jne	SHORT $LN55@main
; Line 94
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pname$[ebp], ecx
; Line 95
	jmp	SHORT $LN54@main
$LN55@main:
; Line 96
	mov	eax, DWORD PTR _pname$[ebp]
	add	eax, 1
	mov	DWORD PTR _pname$[ebp], eax
$LN54@main:
; Line 100
	push	OFFSET _options
	push	12					; 0000000cH
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 103
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN53@main
; Line 106
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@POHEAINE@?$CFs?3?5error?5in?5command?5line?5argume@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@main:
; Line 108
	cmp	DWORD PTR _argc$[ebp], 0
	jl	SHORT $LN51@main
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN51@main
	movsx	eax, BYTE PTR _options+38
	test	eax, eax
	je	SHORT $LN52@main
$LN51@main:
; Line 117
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN59@main
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv139[ebp], eax
	jmp	SHORT $LN60@main
$LN59@main:
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv139[ebp], eax
$LN60@main:
	mov	esi, esp
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	cmp	DWORD PTR _argc$[ebp], 0
	setge	cl
	sub	cl, 1
	and	cl, 32					; 00000020H
	add	cl, 85					; 00000055H
	movsx	edx, cl
	push	edx
	push	OFFSET ??_C@_0BBL@LHEOFMOB@?$CFcsage?3?5?$CFs?5?$FL?5?9h?0?5?9?$DP?0?5?9?9help?5?$FN?5?$FL?5@
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	xor	eax, eax
	cmp	DWORD PTR _argc$[ebp], 0
	setl	al
	jmp	$LN57@main
$LN52@main:
; Line 121
	movsx	eax, BYTE PTR _options+218
	test	eax, eax
	je	SHORT $LN50@main
; Line 125
	mov	esi, esp
	push	OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	OFFSET ??_C@_04HBNCPEDB@56?41?$AA@
	push	OFFSET ??_C@_03GCKCNDHP@1?41?$AA@
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@DLENGJGO@?$CFs?5version?5?$CFs?5?$CIICU?5version?5?$CFs?$CJ?4?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	xor	eax, eax
	jmp	$LN57@main
$LN50@main:
; Line 128
	movsx	eax, BYTE PTR _options+58
	test	eax, eax
	je	SHORT $LN49@main
; Line 129
	mov	eax, DWORD PTR _options+44
	mov	DWORD PTR _encoding$[ebp], eax
$LN49@main:
; Line 132
	movsx	eax, BYTE PTR _options+78
	test	eax, eax
	je	SHORT $LN48@main
; Line 133
	movsx	eax, BYTE PTR _options+58
	test	eax, eax
	je	SHORT $LN47@main
; Line 134
	mov	esi, esp
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0EI@NHINBMBO@?$CFs?3?5Error?3?5don?8t?5specify?5an?5enco@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	mov	eax, 3
	jmp	$LN57@main
$LN47@main:
; Line 137
	mov	DWORD PTR _tostdout$[ebp], 1
$LN48@main:
; Line 140
	movsx	eax, BYTE PTR _options+98
	test	eax, eax
	je	SHORT $LN46@main
; Line 141
	mov	BYTE PTR _opt_truncate, 1
; Line 142
	cmp	DWORD PTR _options+84, 0
	je	SHORT $LN45@main
; Line 143
	mov	esi, esp
	mov	eax, DWORD PTR _options+84
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _truncsize, eax
; Line 144
	jmp	SHORT $LN44@main
$LN45@main:
; Line 145
	mov	DWORD PTR _truncsize, 80		; 00000050H
$LN44@main:
; Line 147
	jmp	SHORT $LN43@main
$LN46@main:
; Line 148
	mov	BYTE PTR _opt_truncate, 0
$LN43@main:
; Line 151
	movsx	eax, BYTE PTR _options+118
	test	eax, eax
	je	SHORT $LN42@main
; Line 152
	mov	BYTE PTR _verbose, 1
$LN42@main:
; Line 155
	movsx	eax, BYTE PTR _options+138
	test	eax, eax
	je	SHORT $LN41@main
; Line 156
	mov	eax, DWORD PTR _options+124
	mov	DWORD PTR _outputDir$[ebp], eax
$LN41@main:
; Line 159
	movsx	eax, BYTE PTR _options+158
	test	eax, eax
	je	SHORT $LN40@main
; Line 160
	mov	eax, DWORD PTR _options+144
	mov	DWORD PTR _inputDir$[ebp], eax
$LN40@main:
; Line 163
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	je	SHORT $LN39@main
; Line 164
	mov	DWORD PTR _prbom$[ebp], 1
$LN39@main:
; Line 167
	movsx	eax, BYTE PTR _options+198
	test	eax, eax
	je	SHORT $LN38@main
; Line 168
	mov	eax, DWORD PTR _options+184
	push	eax
	call	_u_setDataDirectory_56
	add	esp, 4
$LN38@main:
; Line 171
	movsx	eax, BYTE PTR _options+238
	test	eax, eax
	je	SHORT $LN37@main
; Line 172
	mov	BYTE PTR _suppressAliases, 1
$LN37@main:
; Line 175
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 176
	push	0
	push	0
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_finit_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ustderr, eax
; Line 178
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN36@main
$LN35@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN36@main:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _argc$[ebp]
	jge	$LN34@main
; Line 181
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_getLongPathname
	add	esp, 4
	mov	DWORD PTR _arg$[ebp], eax
; Line 183
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN33@main
; Line 184
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0BI@GLDLINMO@processing?5bundle?5?$CC?$CFs?$CC?6?$AA@
	mov	eax, DWORD PTR _ustderr
	push	eax
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
$LN33@main:
; Line 187
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 188
	mov	DWORD PTR _status$29092[ebp], 0
; Line 190
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _p$29093[ebp], eax
; Line 191
	mov	esi, esp
	push	46					; 0000002eH
	mov	eax, DWORD PTR _p$29093[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _q$29094[ebp], eax
; Line 192
	cmp	DWORD PTR _q$29094[ebp], 0
	jne	SHORT $LN32@main
; Line 193
	mov	esi, esp
	mov	eax, DWORD PTR _p$29093[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36039[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$29092[ebp]
	push	ecx
	lea	edx, DWORD PTR $T36039[ebp]
	push	edx
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 194
	jmp	SHORT $LN31@main
$LN32@main:
; Line 195
	mov	esi, esp
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	mov	ecx, DWORD PTR _q$29094[ebp]
	sub	ecx, DWORD PTR _p$29093[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$29093[ebp]
	push	edx
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN31@main:
; Line 198
	mov	eax, DWORD PTR _status$29092[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN30@main
; Line 199
	mov	eax, DWORD PTR _status$29092[ebp]
	mov	DWORD PTR $T36040[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T36040[ebp]
	jmp	$LN57@main
$LN30@main:
; Line 202
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 203
	mov	DWORD PTR _thename$29102[ebp], 0
; Line 204
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	sete	cl
	mov	BYTE PTR _fromICUData$29103[ebp], cl
; Line 205
	movsx	eax, BYTE PTR _fromICUData$29103[ebp]
	test	eax, eax
	jne	$LN29@main
; Line 206
	mov	eax, DWORD PTR _arg$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	sete	dl
	mov	BYTE PTR _absfilename$29106[ebp], dl
; Line 208
	movsx	eax, BYTE PTR _absfilename$29106[ebp]
	test	eax, eax
	jne	SHORT $LN28@main
; Line 210
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 2
	jbe	SHORT $LN61@main
	mov	ecx, DWORD PTR _arg$[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isalpha
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN61@main
	mov	eax, DWORD PTR _arg$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 58					; 0000003aH
	jne	SHORT $LN61@main
	mov	edx, DWORD PTR _arg$[ebp]
	movsx	eax, BYTE PTR [edx+2]
	cmp	eax, 92					; 0000005cH
	jne	SHORT $LN61@main
	mov	BYTE PTR tv320[ebp], 1
	jmp	SHORT $LN62@main
$LN61@main:
	mov	BYTE PTR tv320[ebp], 0
$LN62@main:
	mov	cl, BYTE PTR tv320[ebp]
	mov	BYTE PTR _absfilename$29106[ebp], cl
$LN28@main:
; Line 213
	movsx	eax, BYTE PTR _absfilename$29106[ebp]
	test	eax, eax
	je	SHORT $LN27@main
; Line 214
	mov	eax, DWORD PTR _arg$[ebp]
	mov	DWORD PTR _thename$29102[ebp], eax
; Line 215
	jmp	$LN29@main
$LN27@main:
; Line 216
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _q$29110[ebp], eax
; Line 218
	cmp	DWORD PTR _q$29110[ebp], 0
	jne	SHORT $LN25@main
; Line 219
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _q$29110[ebp], eax
$LN25@main:
; Line 222
	mov	esi, esp
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36043[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$29092[ebp]
	push	ecx
	lea	edx, DWORD PTR $T36043[ebp]
	push	edx
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	cmp	DWORD PTR _q$29110[ebp], 0
	je	SHORT $LN24@main
; Line 224
	mov	esi, esp
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	mov	ecx, DWORD PTR _q$29110[ebp]
	sub	ecx, DWORD PTR _arg$[ebp]
	mov	edi, esp
	push	ecx
	mov	edx, DWORD PTR _arg$[ebp]
	push	edx
	lea	ecx, DWORD PTR $T36044[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBDH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@main:
; Line 226
	mov	eax, DWORD PTR _status$29092[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN23@main
; Line 227
	mov	eax, DWORD PTR _status$29092[ebp]
	mov	DWORD PTR $T36045[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T36045[ebp]
	jmp	$LN57@main
$LN23@main:
; Line 229
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _thename$29102[ebp], eax
$LN29@main:
; Line 232
	cmp	DWORD PTR _thename$29102[ebp], 0
	je	SHORT $LN22@main
; Line 233
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _thename$29102[ebp]
	push	ecx
	call	_ures_openDirect_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
; Line 234
	jmp	SHORT $LN21@main
$LN22@main:
; Line 235
	movsx	eax, BYTE PTR _fromICUData$29103[ebp]
	test	eax, eax
	je	SHORT $LN63@main
	mov	DWORD PTR tv364[ebp], 0
	jmp	SHORT $LN64@main
$LN63@main:
	mov	ecx, DWORD PTR _inputDir$[ebp]
	mov	DWORD PTR tv364[ebp], ecx
$LN64@main:
	lea	edx, DWORD PTR _status$29092[ebp]
	push	edx
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR tv364[ebp]
	push	eax
	call	_ures_open_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bundle$[ebp], eax
$LN21@main:
; Line 237
	mov	eax, DWORD PTR _status$29092[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN20@main
; Line 238
	mov	DWORD PTR _out$29121[ebp], 0
; Line 240
	mov	DWORD PTR _filename$29122[ebp], 0
; Line 241
	mov	DWORD PTR _ext$29123[ebp], 0
; Line 243
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?isEmpty@CharString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN18@main
	cmp	DWORD PTR _tostdout$[ebp], 0
	jne	SHORT $LN19@main
$LN18@main:
; Line 244
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _filename$29122[ebp], eax
; Line 245
	mov	esi, esp
	push	46					; 0000002eH
	mov	eax, DWORD PTR _filename$29122[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ext$29123[ebp], eax
; Line 246
	cmp	DWORD PTR _ext$29123[ebp], 0
	jne	SHORT $LN19@main
; Line 247
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _filename$29122[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ext$29123[ebp], eax
$LN19@main:
; Line 251
	cmp	DWORD PTR _tostdout$[ebp], 0
	je	SHORT $LN16@main
; Line 252
	call	_u_get_stdout_56
	mov	DWORD PTR _out$29121[ebp], eax
; Line 253
	jmp	$LN15@main
$LN16@main:
; Line 254
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 255
	cmp	DWORD PTR _outputDir$[ebp], 0
	je	SHORT $LN14@main
; Line 256
	mov	esi, esp
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36048[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$29092[ebp]
	push	ecx
	lea	edx, DWORD PTR $T36048[ebp]
	push	edx
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@main:
; Line 258
	mov	esi, esp
	mov	eax, DWORD PTR _filename$29122[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36049[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _status$29092[ebp]
	push	ecx
	lea	edx, DWORD PTR $T36049[ebp]
	push	edx
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?appendPathPart@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 259
	mov	eax, DWORD PTR _ext$29123[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN13@main
; Line 260
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	eax, DWORD PTR _ext$29123[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	sub	esi, eax
	mov	edi, esp
	push	esi
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
$LN13@main:
; Line 262
	mov	esi, esp
	push	OFFSET ??_C@_04LCMACLFG@?4txt?$AA@
	lea	ecx, DWORD PTR $T36050[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	lea	ecx, DWORD PTR $T36050[ebp]
	push	ecx
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	mov	eax, DWORD PTR _status$29092[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@main
; Line 264
	mov	eax, DWORD PTR _status$29092[ebp]
	mov	DWORD PTR $T36051[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T36051[ebp]
	jmp	$LN57@main
$LN12@main:
; Line 267
	mov	eax, DWORD PTR _encoding$[ebp]
	push	eax
	push	0
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_u_fopen_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _out$29121[ebp], eax
; Line 268
	cmp	DWORD PTR _out$29121[ebp], 0
	jne	$LN11@main
; Line 269
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0BI@HLKNJFGH@?$CFs?3?5couldn?8t?5create?5?$CFs?6?$AA@
	mov	ecx, DWORD PTR _ustderr
	push	ecx
	call	_u_fprintf_56
	add	esp, 16					; 00000010H
; Line 270
	mov	eax, DWORD PTR _ustderr
	push	eax
	call	_u_fclose_56
	add	esp, 4
; Line 271
	mov	DWORD PTR $T36052[ebp], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T36052[ebp]
	jmp	$LN57@main
$LN11@main:
; Line 273
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@main:
; Line 276
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ??_C@_01GFHCPBMG@C?$AA@
	push	OFFSET _UCNV_FROM_U_CALLBACK_ESCAPE_56
	mov	ecx, DWORD PTR _out$29121[ebp]
	push	ecx
	call	_u_fgetConverter_56
	add	esp, 4
	push	eax
	call	_ucnv_setFromUCallBack_56
	add	esp, 24					; 00000018H
; Line 277
	mov	eax, DWORD PTR _status$29092[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN10@main
; Line 278
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0CP@DANFJFNH@?$CFs?3?5couldn?8t?5configure?5converter@
	mov	ecx, DWORD PTR _ustderr
	push	ecx
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
; Line 279
	mov	eax, DWORD PTR _ustderr
	push	eax
	call	_u_fclose_56
	add	esp, 4
; Line 280
	cmp	DWORD PTR _tostdout$[ebp], 0
	jne	SHORT $LN9@main
; Line 281
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fclose_56
	add	esp, 4
$LN9@main:
; Line 283
	mov	DWORD PTR $T36053[ebp], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T36053[ebp]
	jmp	$LN57@main
$LN10@main:
; Line 286
	cmp	DWORD PTR _prbom$[ebp], 0
	je	SHORT $LN8@main
; Line 287
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	push	65279					; 0000feffH
	call	_u_fputc_56
	add	esp, 8
$LN8@main:
; Line 289
	cmp	DWORD PTR _encoding$[ebp], 0
	je	SHORT $LN65@main
	mov	eax, DWORD PTR _encoding$[ebp]
	mov	DWORD PTR tv491[ebp], eax
	jmp	SHORT $LN66@main
$LN65@main:
	call	_ucnv_getDefaultName_56
	push	eax
	call	?getEncodingName@@YAPBDPBD@Z		; getEncodingName
	add	esp, 4
	mov	DWORD PTR tv491[ebp], eax
$LN66@main:
	mov	ecx, DWORD PTR tv491[ebp]
	push	ecx
	push	OFFSET ??_C@_0BL@EHLHODNM@?1?1?5?9?$CK?9?5Coding?3?5?$CFs?$DL?5?9?$CK?9?6?1?1?6?$AA@
	mov	edx, DWORD PTR _out$29121[ebp]
	push	edx
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
; Line 290
	push	OFFSET ??_C@_0CJ@GAFKPAFE@?1?1?5This?5file?5was?5dumped?5by?5derb?$CI@
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fprintf_56
	add	esp, 8
; Line 291
	cmp	DWORD PTR _thename$29102[ebp], 0
	je	SHORT $LN7@main
; Line 292
	mov	eax, DWORD PTR _thename$29102[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _out$29121[ebp]
	push	ecx
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@main
$LN7@main:
; Line 293
	movsx	eax, BYTE PTR _fromICUData$29103[ebp]
	test	eax, eax
	je	SHORT $LN6@main
; Line 294
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BL@JCLEKLIE@the?5ICU?5internal?5?$CFs?5locale?$AA@
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
$LN6@main:
; Line 297
	push	OFFSET ??_C@_0DF@IIEFLPDG@?6?1?1?5derb?$CI8?$CJ?5by?5Vladimir?5Weinstei@
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fprintf_56
	add	esp, 8
; Line 299
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?isEmpty@CharString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN4@main
; Line 300
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
; Line 301
	jmp	SHORT $LN3@main
$LN4@main:
; Line 302
	push	OFFSET ?sp@?DK@??main@@9@4QB_WB
	push	1
	mov	eax, DWORD PTR _filename$29122[ebp]
	push	eax
	mov	ecx, DWORD PTR _ext$29123[ebp]
	sub	ecx, DWORD PTR _filename$29122[ebp]
	push	ecx
	push	OFFSET ??_C@_08DGJHPALM@?$CF?4?$CKs?$CF?4?$CKS?$AA@
	mov	edx, DWORD PTR _out$29121[ebp]
	push	edx
	call	_u_fprintf_56
	add	esp, 24					; 00000018H
$LN3@main:
; Line 304
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z ; printOutBundle
	add	esp, 20					; 00000014H
; Line 306
	cmp	DWORD PTR _tostdout$[ebp], 0
	jne	SHORT $LN2@main
; Line 307
	mov	eax, DWORD PTR _out$29121[ebp]
	push	eax
	call	_u_fclose_56
	add	esp, 4
$LN2@main:
; Line 310
	jmp	SHORT $LN1@main
$LN20@main:
; Line 311
	push	OFFSET ??_C@_0BG@LEBGNJEB@opening?5resource?5file?$AA@
	lea	eax, DWORD PTR _status$29092[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
$LN1@main:
; Line 314
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
; Line 315
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN35@main
$LN34@main:
; Line 317
	xor	eax, eax
$LN57@main:
; Line 318
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN76@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 788				; 00000314H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN76@main:
	DD	4
	DD	$LN75@main
$LN75@main:
	DD	-184					; ffffff48H
	DD	56					; 00000038H
	DD	$LN70@main
	DD	-196					; ffffff3cH
	DD	4
	DD	$LN71@main
	DD	-284					; fffffee4H
	DD	56					; 00000038H
	DD	$LN72@main
	DD	-432					; fffffe50H
	DD	56					; 00000038H
	DD	$LN73@main
$LN73@main:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN72@main:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN71@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN70@main:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _locale$29091[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _infile$29101[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _thefile$29129[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-792]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\source\common\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
PUBLIC	??_C@_0BH@IEEGNHGE@While?5processing?5table?$AA@ ; `string'
PUBLIC	??_C@_08FGKHGMOE@?1?1?5ARRAY?$AA@		; `string'
PUBLIC	??_C@_08JMEKILAP@?1?1?5TABLE?$AA@		; `string'
PUBLIC	??_C@_0BD@GGKNJP@getting?5int?5vector?$AA@	; `string'
PUBLIC	??_C@_0N@JKMIONDF@?1?1?5INTVECTOR?$AA@		; `string'
PUBLIC	??_C@_0BF@PLFLPPAI@getting?5binary?5value?$AA@	; `string'
PUBLIC	??_C@_0L@DDGFEMPK@?5?1?1?5BINARY?$AA@		; `string'
PUBLIC	??_C@_06COJCNODO@?1?1?5INT?$AA@			; `string'
PUBLIC	??_C@_09OCMMKLCP@?1?1?5STRING?$AA@		; `string'
PUBLIC	??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ures_getByIndex_56:PROC
EXTRN	_res_getPublicType_56:PROC
EXTRN	_res_getArrayItem_56:PROC
EXTRN	_res_getTableItemByIndex_56:PROC
EXTRN	_ures_getSize_56:PROC
EXTRN	_ures_getNextResource_56:PROC
EXTRN	_ures_hasNext_56:PROC
EXTRN	_ures_resetIterator_56:PROC
EXTRN	_ures_getIntVector_56:PROC
EXTRN	_ures_getBinary_56:PROC
EXTRN	_uprv_itou_56:PROC
EXTRN	_ures_getInt_56:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	_ures_getString_56:PROC
EXTRN	_ures_getType_56:PROC
EXTRN	_ures_getKey_56:PROC
;	COMDAT ??_C@_0BH@IEEGNHGE@While?5processing?5table?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\derb.cpp
CONST	SEGMENT
??_C@_0BH@IEEGNHGE@While?5processing?5table?$AA@ DB 'While processing tab'
	DB	'le', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGKHGMOE@?1?1?5ARRAY?$AA@
CONST	SEGMENT
??_C@_08FGKHGMOE@?1?1?5ARRAY?$AA@ DB '// ARRAY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JMEKILAP@?1?1?5TABLE?$AA@
CONST	SEGMENT
??_C@_08JMEKILAP@?1?1?5TABLE?$AA@ DB '// TABLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GGKNJP@getting?5int?5vector?$AA@
CONST	SEGMENT
??_C@_0BD@GGKNJP@getting?5int?5vector?$AA@ DB 'getting int vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JKMIONDF@?1?1?5INTVECTOR?$AA@
CONST	SEGMENT
??_C@_0N@JKMIONDF@?1?1?5INTVECTOR?$AA@ DB '// INTVECTOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLFLPPAI@getting?5binary?5value?$AA@
CONST	SEGMENT
??_C@_0BF@PLFLPPAI@getting?5binary?5value?$AA@ DB 'getting binary value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDGFEMPK@?5?1?1?5BINARY?$AA@
CONST	SEGMENT
??_C@_0L@DDGFEMPK@?5?1?1?5BINARY?$AA@ DB ' // BINARY', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06COJCNODO@?1?1?5INT?$AA@
CONST	SEGMENT
??_C@_06COJCNODO@?1?1?5INT?$AA@ DB '// INT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09OCMMKLCP@?1?1?5STRING?$AA@
CONST	SEGMENT
??_C@_09OCMMKLCP@?1?1?5STRING?$AA@ DB '// STRING', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@
CONST	SEGMENT
??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@ DB '// WARN'
	DB	'ING: this resource, size %li is truncated to %li', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv68 = -736						; size = 4
tv224 = -733						; size = 1
_isTable$29371 = -533					; size = 1
_resSize$29370 = -524					; size = 4
_r$29369 = -512						; size = 4
_t$29352 = -500						; size = 4
_numLen$29339 = -488					; size = 4
_num$29333 = -476					; size = 40
_data$29327 = -428					; size = 4
_len$29326 = -416					; size = 4
_msg$29307 = -404					; size = 128
_data$29304 = -268					; size = 4
_len$29303 = -256					; size = 4
_num$29295 = -244					; size = 40
_msg$29268 = -196					; size = 128
_string$29266 = -60					; size = 4
_thestr$29265 = -48					; size = 4
_len$29264 = -36					; size = 4
_key$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_resource$ = 12						; size = 4
_indent$ = 16						; size = 4
_pname$ = 20						; size = 4
_status$ = 24						; size = 4
?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z PROC ; printOutBundle, COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 736				; 000002e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-736]
	mov	ecx, 184				; 000000b8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 422
	mov	DWORD PTR _i$[ebp], 0
; Line 423
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getKey_56
	add	esp, 4
	mov	DWORD PTR _key$[ebp], eax
; Line 425
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getType_56
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 14			; 0000000eH
	ja	$LN50@printOutBu
	mov	ecx, DWORD PTR tv68[ebp]
	movzx	edx, BYTE PTR $LN52@printOutBu[ecx]
	jmp	DWORD PTR $LN63@printOutBu[edx*4]
$LN47@printOutBu:
; Line 428
	mov	DWORD PTR _len$29264[ebp], 0
; Line 429
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$29264[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getString_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _thestr$29265[ebp], eax
; Line 430
	mov	eax, DWORD PTR _thestr$29265[ebp]
	push	eax
	call	?quotedString@@YAPA_WPB_W@Z		; quotedString
	add	esp, 4
	mov	DWORD PTR _string$29266[ebp], eax
; Line 433
	movsx	eax, BYTE PTR _opt_truncate
	test	eax, eax
	je	SHORT $LN46@printOutBu
	mov	eax, DWORD PTR _len$29264[ebp]
	cmp	eax, DWORD PTR _truncsize
	jle	SHORT $LN46@printOutBu
; Line 435
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 437
	mov	eax, DWORD PTR _truncsize
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _len$29264[ebp]
	push	eax
	push	OFFSET ??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@
	lea	ecx, DWORD PTR _msg$29268[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 438
	push	-1
	lea	eax, DWORD PTR _msg$29268[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
; Line 439
	mov	eax, DWORD PTR _truncsize
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _len$29264[ebp], eax
$LN46@printOutBu:
; Line 441
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 442
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN45@printOutBu
; Line 445
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
; Line 446
	push	4
	push	OFFSET ?openStr@?L@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 447
	mov	eax, DWORD PTR _len$29264[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$29266[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 448
	push	3
	push	OFFSET ?closeStr@?L@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 449
	jmp	SHORT $LN44@printOutBu
$LN45@printOutBu:
; Line 453
	push	1
	push	OFFSET ?openStr@?N@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 454
	mov	eax, DWORD PTR _string$29266[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _string$29266[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 455
	push	2
	push	OFFSET ?closeStr@?N@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
$LN44@printOutBu:
; Line 458
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN43@printOutBu
; Line 459
	push	-1
	push	OFFSET ??_C@_09OCMMKLCP@?1?1?5STRING?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN43@printOutBu:
; Line 461
	push	1
	push	OFFSET ?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 463
	mov	eax, DWORD PTR _string$29266[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 465
	jmp	$LN50@printOutBu
$LN42@printOutBu:
; Line 473
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 474
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN41@printOutBu
; Line 475
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN41@printOutBu:
; Line 477
	push	7
	push	OFFSET ?openStr@?BB@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 478
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	push	ecx
	call	_ures_getInt_56
	add	esp, 8
	push	eax
	push	20					; 00000014H
	lea	edx, DWORD PTR _num$29295[ebp]
	push	edx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 479
	lea	eax, DWORD PTR _num$29295[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _num$29295[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 480
	push	2
	push	OFFSET ?closeStr@?BB@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 482
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN40@printOutBu
; Line 483
	push	-1
	push	OFFSET ??_C@_06COJCNODO@?1?1?5INT?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN40@printOutBu:
; Line 485
	push	1
	push	OFFSET ?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 486
	jmp	$LN50@printOutBu
$LN39@printOutBu:
; Line 490
	mov	DWORD PTR _len$29303[ebp], 0
; Line 491
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$29303[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getBinary_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$29304[ebp], eax
; Line 492
	movsx	eax, BYTE PTR _opt_truncate
	test	eax, eax
	je	SHORT $LN38@printOutBu
	mov	eax, DWORD PTR _len$29303[ebp]
	cmp	eax, DWORD PTR _truncsize
	jle	SHORT $LN38@printOutBu
; Line 494
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 496
	mov	eax, DWORD PTR _truncsize
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _len$29303[ebp]
	push	eax
	push	OFFSET ??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@
	lea	ecx, DWORD PTR _msg$29307[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 497
	push	-1
	lea	eax, DWORD PTR _msg$29307[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
; Line 498
	mov	eax, DWORD PTR _truncsize
	mov	DWORD PTR _len$29303[ebp], eax
$LN38@printOutBu:
; Line 500
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN37@printOutBu
; Line 503
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 504
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN36@printOutBu
; Line 505
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN36@printOutBu:
; Line 507
	push	10					; 0000000aH
	push	OFFSET ?openStr@?BO@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 508
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN35@printOutBu
$LN34@printOutBu:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN35@printOutBu:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _len$29303[ebp]
	jge	SHORT $LN33@printOutBu
; Line 509
	mov	eax, DWORD PTR _data$29304[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv224[ebp], cl
	mov	edx, DWORD PTR _data$29304[ebp]
	add	edx, 1
	mov	DWORD PTR _data$29304[ebp], edx
	movzx	eax, BYTE PTR tv224[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printHex@@YAXPAUUFILE@@E@Z		; printHex
	add	esp, 8
; Line 510
	jmp	SHORT $LN34@printOutBu
$LN33@printOutBu:
; Line 511
	push	3
	push	OFFSET ?closeStr@?BO@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 512
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN32@printOutBu
; Line 513
	push	-1
	push	OFFSET ??_C@_0L@DDGFEMPK@?5?1?1?5BINARY?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN32@printOutBu:
; Line 515
	push	1
	push	OFFSET ?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 516
	jmp	SHORT $LN31@printOutBu
$LN37@printOutBu:
; Line 517
	push	OFFSET ??_C@_0BF@PLFLPPAI@getting?5binary?5value?$AA@
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
$LN31@printOutBu:
; Line 520
	jmp	$LN50@printOutBu
$LN30@printOutBu:
; Line 523
	mov	DWORD PTR _len$29326[ebp], 0
; Line 524
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$29326[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getIntVector_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _data$29327[ebp], eax
; Line 525
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN29@printOutBu
; Line 530
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 531
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN28@printOutBu
; Line 532
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN28@printOutBu:
; Line 534
	push	13					; 0000000dH
	push	OFFSET ?openStr@?CM@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 535
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN27@printOutBu
$LN26@printOutBu:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN27@printOutBu:
	mov	eax, DWORD PTR _len$29326[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN25@printOutBu
; Line 536
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _data$29327[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	20					; 00000014H
	lea	eax, DWORD PTR _num$29333[ebp]
	push	eax
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _numLen$29339[ebp], eax
; Line 537
	mov	eax, 44					; 0000002cH
	mov	ecx, DWORD PTR _numLen$29339[ebp]
	mov	WORD PTR _num$29333[ebp+ecx*2], ax
	mov	edx, DWORD PTR _numLen$29339[ebp]
	add	edx, 1
	mov	DWORD PTR _numLen$29339[ebp], edx
; Line 538
	mov	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _numLen$29339[ebp]
	mov	WORD PTR _num$29333[ebp+ecx*2], ax
	mov	edx, DWORD PTR _numLen$29339[ebp]
	add	edx, 1
	mov	DWORD PTR _numLen$29339[ebp], edx
; Line 539
	xor	eax, eax
	mov	ecx, DWORD PTR _numLen$29339[ebp]
	mov	WORD PTR _num$29333[ebp+ecx*2], ax
; Line 540
	lea	eax, DWORD PTR _num$29333[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _num$29333[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 541
	jmp	$LN26@printOutBu
$LN25@printOutBu:
; Line 542
	cmp	DWORD PTR _len$29326[ebp], 0
	jle	SHORT $LN24@printOutBu
; Line 543
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _len$29326[ebp]
	mov	ecx, DWORD PTR _data$29327[ebp]
	mov	edx, DWORD PTR [ecx+eax*4-4]
	push	edx
	push	20					; 00000014H
	lea	eax, DWORD PTR _num$29333[ebp]
	push	eax
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 544
	lea	eax, DWORD PTR _num$29333[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _num$29333[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
$LN24@printOutBu:
; Line 546
	push	3
	push	OFFSET ?closeStr@?CM@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 547
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN23@printOutBu
; Line 548
	push	-1
	push	OFFSET ??_C@_0N@JKMIONDF@?1?1?5INTVECTOR?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN23@printOutBu:
; Line 550
	push	1
	push	OFFSET ?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 551
	jmp	SHORT $LN22@printOutBu
$LN29@printOutBu:
; Line 552
	push	OFFSET ??_C@_0BD@GGKNJP@getting?5int?5vector?$AA@
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
$LN22@printOutBu:
; Line 555
	jmp	$LN50@printOutBu
$LN21@printOutBu:
; Line 562
	mov	DWORD PTR _t$29352[ebp], 0
; Line 563
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_resetIterator_56
	add	esp, 4
; Line 564
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 565
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN20@printOutBu
; Line 566
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN20@printOutBu:
; Line 568
	push	1
	push	OFFSET ?openStr@?DK@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 569
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN19@printOutBu
; Line 570
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getType_56
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN18@printOutBu
; Line 571
	push	-1
	push	OFFSET ??_C@_08JMEKILAP@?1?1?5TABLE?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
; Line 572
	jmp	SHORT $LN19@printOutBu
$LN18@printOutBu:
; Line 573
	push	-1
	push	OFFSET ??_C@_08FGKHGMOE@?1?1?5ARRAY?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN19@printOutBu:
; Line 576
	push	1
	push	OFFSET ?cr@?1??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 578
	movsx	eax, BYTE PTR _suppressAliases
	test	eax, eax
	jne	$LN16@printOutBu
$LN15@printOutBu:
; Line 579
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN14@printOutBu
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_hasNext_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@printOutBu
; Line 580
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$29352[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	call	_ures_getNextResource_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _t$29352[ebp], eax
; Line 581
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@printOutBu
; Line 582
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indent$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _t$29352[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z ; printOutBundle
	add	esp, 20					; 00000014H
; Line 583
	jmp	SHORT $LN12@printOutBu
$LN13@printOutBu:
; Line 584
	push	OFFSET ??_C@_0BH@IEEGNHGE@While?5processing?5table?$AA@
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
; Line 585
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN12@printOutBu:
; Line 587
	jmp	$LN15@printOutBu
$LN14@printOutBu:
; Line 588
	jmp	$LN11@printOutBu
$LN16@printOutBu:
; Line 590
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getSize_56
	add	esp, 4
	mov	DWORD PTR _resSize$29370[ebp], eax
; Line 591
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getType_56
	add	esp, 4
	cmp	eax, 2
	sete	cl
	mov	BYTE PTR _isTable$29371[ebp], cl
; Line 592
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@printOutBu
$LN9@printOutBu:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@printOutBu:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _resSize$29370[ebp]
	jge	$LN11@printOutBu
; Line 594
	movsx	eax, BYTE PTR _isTable$29371[ebp]
	test	eax, eax
	je	SHORT $LN7@printOutBu
; Line 595
	lea	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_res_getTableItemByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$29369[ebp], eax
; Line 596
	jmp	SHORT $LN6@printOutBu
$LN7@printOutBu:
; Line 597
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _resource$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _resource$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	call	_res_getArrayItem_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$29369[ebp], eax
$LN6@printOutBu:
; Line 599
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN5@printOutBu
; Line 600
	mov	eax, DWORD PTR _r$29369[ebp]
	push	eax
	call	_res_getPublicType_56
	add	esp, 4
	cmp	eax, 3
	jne	SHORT $LN4@printOutBu
; Line 601
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indent$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$29369[ebp]
	push	ecx
	mov	edx, DWORD PTR _resource$[ebp]
	push	edx
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z ; printOutAlias
	add	esp, 28					; 0000001cH
; Line 602
	jmp	SHORT $LN3@printOutBu
$LN4@printOutBu:
; Line 603
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$29352[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _resource$[ebp]
	push	eax
	call	_ures_getByIndex_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _t$29352[ebp], eax
; Line 604
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _indent$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _t$29352[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z ; printOutBundle
	add	esp, 20					; 00000014H
$LN3@printOutBu:
; Line 606
	jmp	SHORT $LN2@printOutBu
$LN5@printOutBu:
; Line 607
	push	OFFSET ??_C@_0BH@IEEGNHGE@While?5processing?5table?$AA@
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
; Line 608
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@printOutBu:
; Line 610
	jmp	$LN9@printOutBu
$LN11@printOutBu:
; Line 613
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 614
	push	2
	push	OFFSET ?closeStr@?DK@??printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 615
	mov	eax, DWORD PTR _t$29352[ebp]
	push	eax
	call	_ures_close_56
	add	esp, 4
$LN50@printOutBu:
; Line 622
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@printOutBu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 736				; 000002e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN62@printOutBu:
	DD	8
	DD	$LN61@printOutBu
$LN61@printOutBu:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN53@printOutBu
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN54@printOutBu
	DD	-196					; ffffff3cH
	DD	128					; 00000080H
	DD	$LN55@printOutBu
	DD	-244					; ffffff0cH
	DD	40					; 00000028H
	DD	$LN56@printOutBu
	DD	-256					; ffffff00H
	DD	4
	DD	$LN57@printOutBu
	DD	-404					; fffffe6cH
	DD	128					; 00000080H
	DD	$LN58@printOutBu
	DD	-416					; fffffe60H
	DD	4
	DD	$LN59@printOutBu
	DD	-476					; fffffe24H
	DD	40					; 00000028H
	DD	$LN60@printOutBu
$LN60@printOutBu:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN59@printOutBu:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN58@printOutBu:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN57@printOutBu:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN56@printOutBu:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN55@printOutBu:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN54@printOutBu:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN53@printOutBu:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN63@printOutBu:
	DD	$LN47@printOutBu
	DD	$LN39@printOutBu
	DD	$LN21@printOutBu
	DD	$LN42@printOutBu
	DD	$LN30@printOutBu
	DD	$LN50@printOutBu
$LN52@printOutBu:
	DB	0
	DB	1
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
?printOutBundle@@YAXPAUUFILE@@PAUUResourceBundle@@HPBDPAW4UErrorCode@@@Z ENDP ; printOutBundle
_TEXT	ENDS
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?quotedString@@YAPA_WPB_W@Z
_TEXT	SEGMENT
tv82 = -256						; size = 4
tv70 = -256						; size = 4
_np$ = -56						; size = 4
_newstr$ = -44						; size = 4
_sp$ = -32						; size = 4
_alen$ = -20						; size = 4
_len$ = -8						; size = 4
_string$ = 8						; size = 4
?quotedString@@YAPA_WPB_W@Z PROC			; quotedString, COMDAT
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 321
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 322
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR _alen$[ebp], eax
; Line 326
	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
	jmp	SHORT $LN14@quotedStri
$LN13@quotedStri:
	mov	eax, DWORD PTR _sp$[ebp]
	add	eax, 2
	mov	DWORD PTR _sp$[ebp], eax
$LN14@quotedStri:
	mov	eax, DWORD PTR _sp$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@quotedStri
; Line 327
	mov	eax, DWORD PTR _sp$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 10			; 0000000aH
	je	SHORT $LN9@quotedStri
	cmp	DWORD PTR tv70[ebp], 34			; 00000022H
	je	SHORT $LN9@quotedStri
	jmp	SHORT $LN10@quotedStri
$LN9@quotedStri:
; Line 330
	mov	eax, DWORD PTR _alen$[ebp]
	add	eax, 1
	mov	DWORD PTR _alen$[ebp], eax
$LN10@quotedStri:
; Line 333
	jmp	SHORT $LN13@quotedStri
$LN12@quotedStri:
; Line 335
	mov	eax, DWORD PTR _alen$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newstr$[ebp], eax
; Line 336
	mov	eax, DWORD PTR _string$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
	mov	ecx, DWORD PTR _newstr$[ebp]
	mov	DWORD PTR _np$[ebp], ecx
	jmp	SHORT $LN8@quotedStri
$LN7@quotedStri:
	mov	eax, DWORD PTR _sp$[ebp]
	add	eax, 2
	mov	DWORD PTR _sp$[ebp], eax
$LN8@quotedStri:
	mov	eax, DWORD PTR _sp$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@quotedStri
; Line 337
	mov	eax, DWORD PTR _sp$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv82[ebp], ecx
	cmp	DWORD PTR tv82[ebp], 10			; 0000000aH
	je	SHORT $LN3@quotedStri
	cmp	DWORD PTR tv82[ebp], 34			; 00000022H
	je	SHORT $LN2@quotedStri
	jmp	SHORT $LN1@quotedStri
$LN3@quotedStri:
; Line 339
	mov	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _np$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _np$[ebp]
	add	edx, 2
	mov	DWORD PTR _np$[ebp], edx
; Line 340
	mov	eax, 110				; 0000006eH
	mov	ecx, DWORD PTR _np$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _np$[ebp]
	add	edx, 2
	mov	DWORD PTR _np$[ebp], edx
; Line 341
	jmp	SHORT $LN4@quotedStri
$LN2@quotedStri:
; Line 344
	mov	eax, 92					; 0000005cH
	mov	ecx, DWORD PTR _np$[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _np$[ebp]
	add	edx, 2
	mov	DWORD PTR _np$[ebp], edx
$LN1@quotedStri:
; Line 347
	mov	eax, DWORD PTR _np$[ebp]
	mov	ecx, DWORD PTR _sp$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _np$[ebp]
	add	eax, 2
	mov	DWORD PTR _np$[ebp], eax
$LN4@quotedStri:
; Line 350
	jmp	$LN7@quotedStri
$LN6@quotedStri:
; Line 351
	xor	eax, eax
	mov	ecx, DWORD PTR _np$[ebp]
	mov	WORD PTR [ecx], ax
; Line 353
	mov	eax, DWORD PTR _newstr$[ebp]
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?quotedString@@YAPA_WPB_W@Z ENDP			; quotedString
_TEXT	ENDS
EXTRN	_u_file_write_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?printString@@YAXPAUUFILE@@PB_WH@Z
_TEXT	SEGMENT
_out$ = 8						; size = 4
_str$ = 12						; size = 4
_len$ = 16						; size = 4
?printString@@YAXPAUUFILE@@PB_WH@Z PROC			; printString, COMDAT
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_u_file_write_56
	add	esp, 12					; 0000000cH
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?printString@@YAXPAUUFILE@@PB_WH@Z ENDP			; printString
_TEXT	ENDS
PUBLIC	??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@		; `string'
;	COMDAT ??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@
CONST	SEGMENT
??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@ DB '%.*s', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printCString@@YAXPAUUFILE@@PBDH@Z
_TEXT	SEGMENT
_out$ = 8						; size = 4
_str$ = 12						; size = 4
_len$ = 16						; size = 4
?printCString@@YAXPAUUFILE@@PBDH@Z PROC			; printCString, COMDAT
; Line 361
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 362
	cmp	DWORD PTR _len$[ebp], -1
	jne	SHORT $LN2@printCStri
; Line 363
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_u_fprintf_56
	add	esp, 12					; 0000000cH
; Line 364
	jmp	SHORT $LN3@printCStri
$LN2@printCStri:
; Line 365
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	push	OFFSET ??_C@_04EBNJJJJI@?$CF?4?$CKs?$AA@
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_u_fprintf_56
	add	esp, 16					; 00000010H
$LN3@printCStri:
; Line 367
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?printCString@@YAXPAUUFILE@@PBDH@Z ENDP			; printCString
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@HHH@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?printIndent@@YAXPAUUFILE@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?printIndent@@YAXPAUUFILE@@H@Z$0
__ehfuncinfo$?printIndent@@YAXPAUUFILE@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?printIndent@@YAXPAUUFILE@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?printIndent@@YAXPAUUFILE@@H@Z
_TEXT	SEGMENT
_inchar$ = -84						; size = 64
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_out$ = 8						; size = 4
_indent$ = 12						; size = 4
?printIndent@@YAXPAUUFILE@@H@Z PROC			; printIndent, COMDAT
; Line 369
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?printIndent@@YAXPAUUFILE@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 370
	mov	esi, esp
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _indent$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _inchar$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@HHH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 371
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _inchar$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 372
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _inchar$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@printInden
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@printInden:
	DD	1
	DD	$LN6@printInden
$LN6@printInden:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN4@printInden
$LN4@printInden:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?printIndent@@YAXPAUUFILE@@H@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _inchar$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?printIndent@@YAXPAUUFILE@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?printIndent@@YAXPAUUFILE@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?printIndent@@YAXPAUUFILE@@H@Z ENDP			; printIndent
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?printHex@@YAXPAUUFILE@@E@Z
_TEXT	SEGMENT
_hex$ = -8						; size = 4
_out$ = 8						; size = 4
_what$ = 12						; size = 1
?printHex@@YAXPAUUFILE@@E@Z PROC			; printHex, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 378
	movzx	eax, BYTE PTR _what$[ebp]
	sar	eax, 4
	movsx	cx, BYTE PTR ?map@?1??printHex@@YAXPAUUFILE@@E@Z@4QBDB[eax]
	mov	WORD PTR _hex$[ebp], cx
; Line 379
	movzx	eax, BYTE PTR _what$[ebp]
	and	eax, 15					; 0000000fH
	movsx	cx, BYTE PTR ?map@?1??printHex@@YAXPAUUFILE@@E@Z@4QBDB[eax]
	mov	WORD PTR _hex$[ebp+2], cx
; Line 381
	push	2
	lea	eax, DWORD PTR _hex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 382
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@printHex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@printHex:
	DD	1
	DD	$LN4@printHex
$LN4@printHex:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@printHex
$LN3@printHex:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?printHex@@YAXPAUUFILE@@E@Z ENDP			; printHex
_TEXT	ENDS
PUBLIC	??_C@_09LOFOACBL@?5?1?1?5ALIAS?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	_res_getAlias_56:PROC
;	COMDAT ??_C@_09LOFOACBL@?5?1?1?5ALIAS?$AA@
CONST	SEGMENT
??_C@_09LOFOACBL@?5?1?1?5ALIAS?$AA@ DB ' // ALIAS', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_msg$29231 = -172					; size = 128
_string$ = -36						; size = 4
_thestr$ = -24						; size = 4
_len$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_out$ = 8						; size = 4
_parent$ = 12						; size = 4
_r$ = 16						; size = 4
_key$ = 20						; size = 4
_indent$ = 24						; size = 4
_pname$ = 28						; size = 4
_status$ = 32						; size = 4
?printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z PROC ; printOutAlias, COMDAT
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 386
	mov	DWORD PTR _len$[ebp], 0
; Line 387
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _parent$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_res_getAlias_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _thestr$[ebp], eax
; Line 388
	mov	eax, DWORD PTR _thestr$[ebp]
	push	eax
	call	?quotedString@@YAPA_WPB_W@Z		; quotedString
	add	esp, 4
	mov	DWORD PTR _string$[ebp], eax
; Line 389
	movsx	eax, BYTE PTR _opt_truncate
	test	eax, eax
	je	SHORT $LN5@printOutAl
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _truncsize
	jle	SHORT $LN5@printOutAl
; Line 391
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 393
	mov	eax, DWORD PTR _truncsize
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	push	OFFSET ??_C@_0DJ@FMINAHAD@?1?1?5WARNING?3?5this?5resource?0?5size?5@
	lea	ecx, DWORD PTR _msg$29231[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 394
	push	-1
	lea	eax, DWORD PTR _msg$29231[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
; Line 395
	mov	eax, DWORD PTR _truncsize
	mov	DWORD PTR _len$[ebp], eax
$LN5@printOutAl:
; Line 397
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN4@printOutAl
; Line 400
	mov	eax, DWORD PTR _indent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printIndent@@YAXPAUUFILE@@H@Z		; printIndent
	add	esp, 8
; Line 401
	cmp	DWORD PTR _key$[ebp], 0
	je	SHORT $LN3@printOutAl
; Line 402
	push	-1
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN3@printOutAl:
; Line 404
	push	10					; 0000000aH
	push	OFFSET ?openStr@?7??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 405
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 406
	push	4
	push	OFFSET ?closeStr@?7??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 407
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN2@printOutAl
; Line 408
	push	-1
	push	OFFSET ??_C@_09LOFOACBL@?5?1?1?5ALIAS?$AA@
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printCString@@YAXPAUUFILE@@PBDH@Z	; printCString
	add	esp, 12					; 0000000cH
$LN2@printOutAl:
; Line 410
	push	1
	push	OFFSET ?cr@?1??printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z@4QB_WB
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	?printString@@YAXPAUUFILE@@PB_WH@Z	; printString
	add	esp, 12					; 0000000cH
; Line 411
	jmp	SHORT $LN1@printOutAl
$LN4@printOutAl:
; Line 412
	push	OFFSET ??_C@_0BF@PLFLPPAI@getting?5binary?5value?$AA@
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	call	?reportError@@YAXPBDPAW4UErrorCode@@0@Z	; reportError
	add	esp, 12					; 0000000cH
$LN1@printOutAl:
; Line 414
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 415
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@printOutAl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@printOutAl:
	DD	2
	DD	$LN10@printOutAl
$LN10@printOutAl:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN8@printOutAl
	DD	-172					; ffffff54H
	DD	128					; 00000080H
	DD	$LN9@printOutAl
$LN9@printOutAl:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN8@printOutAl:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?printOutAlias@@YAXPAUUFILE@@PAUUResourceBundle@@IPBDH2PAW4UErrorCode@@@Z ENDP ; printOutAlias
_TEXT	ENDS
PUBLIC	??_C@_04NMPANDAM@IANA?$AA@			; `string'
PUBLIC	??_C@_04IKOOCGHO@MIME?$AA@			; `string'
EXTRN	_ucnv_getStandardName_56:PROC
;	COMDAT ??_C@_04NMPANDAM@IANA?$AA@
CONST	SEGMENT
??_C@_04NMPANDAM@IANA?$AA@ DB 'IANA', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IKOOCGHO@MIME?$AA@
CONST	SEGMENT
??_C@_04IKOOCGHO@MIME?$AA@ DB 'MIME', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getEncodingName@@YAPBDPBD@Z
_TEXT	SEGMENT
_enc$ = -20						; size = 4
_err$ = -8						; size = 4
_encoding$ = 8						; size = 4
?getEncodingName@@YAPBDPBD@Z PROC			; getEncodingName, COMDAT
; Line 624
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 628
	mov	DWORD PTR _err$[ebp], 0
; Line 629
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	OFFSET ??_C@_04IKOOCGHO@MIME?$AA@
	mov	ecx, DWORD PTR _encoding$[ebp]
	push	ecx
	call	_ucnv_getStandardName_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _enc$[ebp], eax
	cmp	DWORD PTR _enc$[ebp], 0
	jne	SHORT $LN2@getEncodin
; Line 630
	mov	DWORD PTR _err$[ebp], 0
; Line 631
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	OFFSET ??_C@_04NMPANDAM@IANA?$AA@
	mov	ecx, DWORD PTR _encoding$[ebp]
	push	ecx
	call	_ucnv_getStandardName_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _enc$[ebp], eax
$LN2@getEncodin:
; Line 636
	mov	eax, DWORD PTR _enc$[ebp]
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getEncodin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@getEncodin:
	DD	1
	DD	$LN6@getEncodin
$LN6@getEncodin:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@getEncodin
$LN5@getEncodin:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
?getEncodingName@@YAPBDPBD@Z ENDP			; getEncodingName
_TEXT	ENDS
PUBLIC	??_C@_0BL@HFJDKCOA@?$CFs?3?5error?5?$CFd?5while?5?$CFs?3?5?$CFs?6?$AA@ ; `string'
EXTRN	_u_errorName_56:PROC
;	COMDAT ??_C@_0BL@HFJDKCOA@?$CFs?3?5error?5?$CFd?5while?5?$CFs?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BL@HFJDKCOA@?$CFs?3?5error?5?$CFd?5while?5?$CFs?3?5?$CFs?6?$AA@ DB '%'
	DB	's: error %d while %s: %s', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?reportError@@YAXPBDPAW4UErrorCode@@0@Z
_TEXT	SEGMENT
_pname$ = 8						; size = 4
_status$ = 12						; size = 4
_when$ = 16						; size = 4
?reportError@@YAXPBDPAW4UErrorCode@@0@Z PROC		; reportError, COMDAT
; Line 639
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 640
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _when$[ebp]
	push	edx
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _pname$[ebp]
	push	edx
	push	OFFSET ??_C@_0BL@HFJDKCOA@?$CFs?3?5error?5?$CFd?5while?5?$CFs?3?5?$CFs?6?$AA@
	mov	eax, DWORD PTR _ustderr
	push	eax
	call	_u_fprintf_56
	add	esp, 24					; 00000018H
; Line 641
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?reportError@@YAXPBDPAW4UErrorCode@@0@Z ENDP		; reportError
_TEXT	ENDS
END

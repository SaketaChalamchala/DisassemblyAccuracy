; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\wrtjava.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0NA@DBEPLCPH@?5extends?5ListResourceBundle?5?$HL?6?6?5@ ; `string'
PUBLIC	??_C@_0DE@GDGCDJHP@import?5java?4util?4ListResourceBun@ ; `string'
PUBLIC	??_C@_09EPCECJFF@?5?5?5?5?$HN?$DL?6?$HN?6?$AA@	; `string'
PUBLIC	??_C@_02KCPFEJNG@?$HL?6?$AA@			; `string'
_BSS	SEGMENT
_out	DD	01H DUP (?)
_bName	DD	01H DUP (?)
_pName	DD	01H DUP (?)
_conv	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0NA@DBEPLCPH@?5extends?5ListResourceBundle?5?$HL?6?6?5@
CONST	SEGMENT
??_C@_0NA@DBEPLCPH@?5extends?5ListResourceBundle?5?$HL?6?6?5@ DB ' extend'
	DB	's ListResourceBundle {', 0aH, 0aH, '    /**', 0aH, '     * Ov'
	DB	'errides ListResourceBundle ', 0aH, '     */', 0aH, '    publi'
	DB	'c final Object[][] getContents() { ', 0aH, '          return '
	DB	' contents;', 0aH, '    }', 0aH, 0aH, '    private static Obje'
	DB	'ct[][] contents = {', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GDGCDJHP@import?5java?4util?4ListResourceBun@
CONST	SEGMENT
??_C@_0DE@GDGCDJHP@import?5java?4util?4ListResourceBun@ DB 'import java.u'
	DB	'til.ListResourceBundle;', 0aH, 0aH, 'public class ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EPCECJFF@?5?5?5?5?$HN?$DL?6?$HN?6?$AA@
CONST	SEGMENT
??_C@_09EPCECJFF@?5?5?5?5?$HN?$DL?6?$HN?6?$AA@ DB '    };', 0aH, '}', 0aH
	DB	00H						; `string'
CONST	ENDS
_DATA	SEGMENT
_openBrace DD	FLAT:??_C@_02KCPFEJNG@?$HL?6?$AA@
_closeClass DD	FLAT:??_C@_09EPCECJFF@?5?5?5?5?$HN?$DL?6?$HN?6?$AA@
_javaClass DD	FLAT:??_C@_0DE@GDGCDJHP@import?5java?4util?4ListResourceBun@
_javaClass1 DD	FLAT:??_C@_0NA@DBEPLCPH@?5extends?5ListResourceBundle?5?$HL?6?6?5@
_tabCount DD	03H
_enc	DD	FLAT:??_C@_00CNPNBAHC@?$AA@
_start	DB	01H
_DATA	ENDS
;	COMDAT ??_C@_02KCPFEJNG@?$HL?6?$AA@
CONST	SEGMENT
??_C@_02KCPFEJNG@?$HL?6?$AA@ DB '{', 0aH, 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_copyRight DB	'/* ', 0aH, ' *******************************************'
	DB	'************************************', 0aH, ' *', 0aH, ' *   '
	DB	'Copyright (C) International Business Machines', 0aH, ' *   Co'
	DB	'rporation and others.  All Rights Reserved.', 0aH, ' *', 0aH, ' '
	DB	'*************************************************************'
	DB	'******************', 0aH, ' * $Source:  $ ', 0aH, ' * $Date: '
	DB	' $ ', 0aH, ' * $Revision:  $ ', 0aH, ' **********************'
	DB	'*********************************************************', 0aH
	DB	' */', 0aH, 0aH, 00H
	ORG $+7
_warningMsg DB	'/*******************************************************'
	DB	'**************', 0aH, '######################################'
	DB	'################################', 0aH, 0aH, '   WARNING: Thi'
	DB	's file is generated by genrb Version 56.', 0aH, '            '
	DB	'If you edit this file, please make sure that, the source', 0aH
	DB	'            of this file (XXXX.txt in LocaleElements_XXXX.jav'
	DB	'a)', 0aH, '            is also edited.', 0aH, '##############'
	DB	'########################################################', 0aH
	DB	' ************************************************************'
	DB	'*********', 0aH, ' */', 0aH, 0aH, 00H
CONST	ENDS
PUBLIC	??_C@_0DD@LKIJPPJF@Encountered?5unsupported?5resource@ ; `string'
PUBLIC	?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z ; res_write_java
EXTRN	__imp__printf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0DD@LKIJPPJF@Encountered?5unsupported?5resource@
; File d:\mozilla\intl\icu\source\tools\genrb\wrtjava.cpp
CONST	SEGMENT
??_C@_0DD@LKIJPPJF@Encountered?5unsupported?5resource@ DB 'Encountered un'
	DB	'supported resource type %d of alias', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv71 = -196						; size = 4
_res$ = 8						; size = 4
_status$ = 12						; size = 4
?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z PROC ; res_write_java, COMDAT
; Line 566
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 568
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN12@res_write_
; Line 569
	jmp	$LN13@res_write_
$LN12@res_write_:
; Line 572
	cmp	DWORD PTR _res$[ebp], 0
	je	$LN11@res_write_
; Line 573
	mov	eax, DWORD PTR _res$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 14			; 0000000eH
	ja	$LN11@res_write_
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN15@res_write_[edx]
	jmp	DWORD PTR $LN16@res_write_[eax*4]
$LN8@res_write_:
; Line 575
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?string_write_java@@YAXPBVStringResource@@PAW4UErrorCode@@@Z ; string_write_java
	add	esp, 8
; Line 576
	jmp	$LN13@res_write_
$LN7@res_write_:
; Line 578
	mov	eax, DWORD PTR _res$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_0DD@LKIJPPJF@Encountered?5unsupported?5resource@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 579
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 580
	jmp	SHORT $LN13@res_write_
$LN6@res_write_:
; Line 582
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?intvector_write_java@@YAXPBVIntVectorResource@@PAW4UErrorCode@@@Z ; intvector_write_java
	add	esp, 8
; Line 583
	jmp	SHORT $LN13@res_write_
$LN5@res_write_:
; Line 585
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?bytes_write_java@@YAXPBVBinaryResource@@PAW4UErrorCode@@@Z ; bytes_write_java
	add	esp, 8
; Line 586
	jmp	SHORT $LN13@res_write_
$LN4@res_write_:
; Line 588
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?int_write_java@@YAXPBVIntResource@@PAW4UErrorCode@@@Z ; int_write_java
	add	esp, 8
; Line 589
	jmp	SHORT $LN13@res_write_
$LN3@res_write_:
; Line 591
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?array_write_java@@YAXPBVArrayResource@@PAW4UErrorCode@@@Z ; array_write_java
	add	esp, 8
; Line 592
	jmp	SHORT $LN13@res_write_
$LN2@res_write_:
; Line 594
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	push	ecx
	call	?table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z ; table_write_java
	add	esp, 8
; Line 595
	jmp	SHORT $LN13@res_write_
$LN11@res_write_:
; Line 601
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
$LN13@res_write_:
; Line 602
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@res_write_:
	DD	$LN8@res_write_
	DD	$LN5@res_write_
	DD	$LN2@res_write_
	DD	$LN7@res_write_
	DD	$LN4@res_write_
	DD	$LN3@res_write_
	DD	$LN6@res_write_
	DD	$LN11@res_write_
$LN15@res_write_:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	7
	DB	7
	DB	7
	DB	4
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z ENDP ; res_write_java
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	?getBuffer@StringBaseResource@@QBEPB_WXZ	; StringBaseResource::getBuffer
PUBLIC	?length@StringBaseResource@@QBEHXZ		; StringBaseResource::length
EXTRN	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z:PROC ; SResource::getKeyString
_BSS	SEGMENT
_srBundle DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT ?string_write_java@@YAXPBVStringResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_res$ = 8						; size = 4
_status$ = 12						; size = 4
?string_write_java@@YAXPBVStringResource@@PAW4UErrorCode@@@Z PROC ; string_write_java, COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\wrtjava.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 309
	mov	eax, DWORD PTR _srBundle
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z ; SResource::getKeyString
; Line 311
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _res$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	push	eax
	call	?str_write_java@@YAXPB_WHCPAW4UErrorCode@@@Z ; str_write_java
	add	esp, 16					; 00000010H
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?string_write_java@@YAXPBVStringResource@@PAW4UErrorCode@@@Z ENDP ; string_write_java
_TEXT	ENDS
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBuffer@StringBaseResource@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@StringBaseResource@@QBEPB_WXZ PROC		; StringBaseResource::getBuffer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@StringBaseResource@@QBEPB_WXZ ENDP		; StringBaseResource::getBuffer
_TEXT	ENDS
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@StringBaseResource@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringBaseResource@@QBEHXZ PROC			; StringBaseResource::length, COMDAT
; _this$ = ecx
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringBaseResource@@QBEHXZ ENDP			; StringBaseResource::length
_TEXT	ENDS
PUBLIC	??_C@_03BPDIBAFI@?$CC?0?6?$AA@			; `string'
PUBLIC	??_C@_04OMBJJKDD@?$CC?5?$CL?6?$AA@		; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
EXTRN	_T_FileStream_write:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_memset:PROC
EXTRN	__imp__malloc:PROC
;	COMDAT ??_C@_03BPDIBAFI@?$CC?0?6?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\wrtjava.cpp
CONST	SEGMENT
??_C@_03BPDIBAFI@?$CC?0?6?$AA@ DB '",', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OMBJJKDD@?$CC?5?$CL?6?$AA@
CONST	SEGMENT
??_C@_04OMBJJKDD@?$CC?5?$CL?6?$AA@ DB '" +', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?str_write_java@@YAXPB_WHCPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_seqLen$37331 = -116					; size = 4
_num$37330 = -104					; size = 4
_idx$37327 = -92					; size = 4
_add$37322 = -80					; size = 4
_current$37321 = -68					; size = 4
_len$37320 = -56					; size = 4
_buf$ = -44						; size = 4
_columnCount$ = -32					; size = 4
_bufLen$ = -20						; size = 4
_length$ = -8						; size = 4
_src$ = 8						; size = 4
_srcLen$ = 12						; size = 4
_printEndLine$ = 16					; size = 1
_status$ = 20						; size = 4
?str_write_java@@YAXPB_WHCPAW4UErrorCode@@@Z PROC	; str_write_java, COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 231
	mov	eax, DWORD PTR _srcLen$[ebp]
	shl	eax, 3
	mov	DWORD PTR _length$[ebp], eax
; Line 232
	mov	DWORD PTR _bufLen$[ebp], 0
; Line 234
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buf$[ebp], eax
; Line 236
	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN20@str_write_
; Line 237
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 238
	jmp	$LN21@str_write_
$LN20@str_write_:
; Line 241
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	call	?getColumnCount@@YAHH@Z			; getColumnCount
	add	esp, 4
	mov	DWORD PTR _columnCount$[ebp], eax
; Line 242
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 244
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _srcLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _src$[ebp]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	?uCharsToChars@@YAHPADHPB_WHPAW4UErrorCode@@@Z ; uCharsToChars
	add	esp, 20					; 00000014H
	mov	DWORD PTR _bufLen$[ebp], eax
; Line 246
	movsx	eax, BYTE PTR _printEndLine$[ebp]
	test	eax, eax
	je	SHORT $LN19@str_write_
; Line 247
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
$LN19@str_write_:
; Line 249
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN18@str_write_
; Line 250
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 251
	jmp	$LN21@str_write_
$LN18@str_write_:
; Line 254
	mov	eax, DWORD PTR _tabCount
	mov	ecx, DWORD PTR _bufLen$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	cmp	edx, DWORD PTR _columnCount$[ebp]
	jbe	$LN17@str_write_
; Line 255
	mov	DWORD PTR _len$37320[ebp], 0
; Line 256
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _current$37321[ebp], eax
$LN16@str_write_:
; Line 258
	mov	eax, DWORD PTR _len$37320[ebp]
	cmp	eax, DWORD PTR _bufLen$[ebp]
	jae	$LN15@str_write_
; Line 259
	mov	eax, DWORD PTR _tabCount
	shl	eax, 2
	mov	ecx, DWORD PTR _columnCount$[ebp]
	sub	ecx, eax
	sub	ecx, 5
	mov	DWORD PTR _add$37322[ebp], ecx
; Line 260
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _len$37320[ebp]
	mov	DWORD PTR _current$37321[ebp], eax
; Line 261
	mov	eax, DWORD PTR _bufLen$[ebp]
	sub	eax, DWORD PTR _len$37320[ebp]
	cmp	DWORD PTR _add$37322[ebp], eax
	jae	$LN14@str_write_
; Line 262
	push	92					; 0000005cH
	mov	eax, DWORD PTR _add$37322[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$37321[ebp]
	push	ecx
	call	?strrch@@YAIPBDID@Z			; strrch
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _idx$37327[ebp], eax
; Line 263
	mov	eax, DWORD PTR _idx$37327[ebp]
	cmp	eax, DWORD PTR _add$37322[ebp]
	jbe	SHORT $LN13@str_write_
; Line 264
	mov	eax, DWORD PTR _add$37322[ebp]
	mov	DWORD PTR _idx$37327[ebp], eax
; Line 265
	jmp	SHORT $LN14@str_write_
$LN13@str_write_:
; Line 266
	mov	eax, DWORD PTR _idx$37327[ebp]
	sub	eax, 1
	mov	DWORD PTR _num$37330[ebp], eax
$LN11@str_write_:
; Line 268
	cmp	DWORD PTR _num$37330[ebp], 0
	jle	SHORT $LN10@str_write_
; Line 269
	mov	eax, DWORD PTR _current$37321[ebp]
	add	eax, DWORD PTR _num$37330[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	jne	SHORT $LN9@str_write_
; Line 270
	mov	eax, DWORD PTR _num$37330[ebp]
	sub	eax, 1
	mov	DWORD PTR _num$37330[ebp], eax
; Line 271
	jmp	SHORT $LN8@str_write_
$LN9@str_write_:
; Line 272
	jmp	SHORT $LN10@str_write_
$LN8@str_write_:
; Line 274
	jmp	SHORT $LN11@str_write_
$LN10@str_write_:
; Line 275
	mov	eax, DWORD PTR _idx$37327[ebp]
	sub	eax, DWORD PTR _num$37330[ebp]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	jne	SHORT $LN7@str_write_
; Line 276
	mov	eax, DWORD PTR _idx$37327[ebp]
	sub	eax, 1
	mov	DWORD PTR _idx$37327[ebp], eax
$LN7@str_write_:
; Line 278
	mov	eax, DWORD PTR _current$37321[ebp]
	add	eax, DWORD PTR _idx$37327[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	xor	edx, edx
	cmp	ecx, 117				; 00000075H
	sete	dl
	lea	edx, DWORD PTR [edx*4+2]
	mov	DWORD PTR _seqLen$37331[ebp], edx
; Line 279
	mov	eax, DWORD PTR _add$37322[ebp]
	sub	eax, DWORD PTR _idx$37327[ebp]
	cmp	eax, DWORD PTR _seqLen$37331[ebp]
	jae	SHORT $LN14@str_write_
; Line 280
	mov	eax, DWORD PTR _idx$37327[ebp]
	add	eax, DWORD PTR _seqLen$37331[ebp]
	mov	DWORD PTR _add$37322[ebp], eax
$LN14@str_write_:
; Line 284
	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 285
	mov	eax, DWORD PTR _len$37320[ebp]
	add	eax, DWORD PTR _add$37322[ebp]
	cmp	eax, DWORD PTR _bufLen$[ebp]
	jae	SHORT $LN5@str_write_
; Line 286
	mov	eax, DWORD PTR _add$37322[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$37321[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 287
	push	4
	push	OFFSET ??_C@_04OMBJJKDD@?$CC?5?$CL?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 288
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 289
	jmp	SHORT $LN4@str_write_
$LN5@str_write_:
; Line 290
	mov	eax, DWORD PTR _bufLen$[ebp]
	sub	eax, DWORD PTR _len$37320[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$37321[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN4@str_write_:
; Line 292
	mov	eax, DWORD PTR _len$37320[ebp]
	add	eax, DWORD PTR _add$37322[ebp]
	mov	DWORD PTR _len$37320[ebp], eax
; Line 293
	jmp	$LN16@str_write_
$LN15@str_write_:
; Line 294
	jmp	SHORT $LN3@str_write_
$LN17@str_write_:
; Line 295
	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 296
	mov	eax, DWORD PTR _bufLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN3@str_write_:
; Line 298
	movsx	eax, BYTE PTR _printEndLine$[ebp]
	test	eax, eax
	je	SHORT $LN2@str_write_
; Line 299
	push	3
	push	OFFSET ??_C@_03BPDIBAFI@?$CC?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 300
	jmp	SHORT $LN1@str_write_
$LN2@str_write_:
; Line 301
	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN1@str_write_:
; Line 303
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN21@str_write_:
; Line 304
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?str_write_java@@YAXPB_WHCPAW4UErrorCode@@@Z ENDP	; str_write_java
_TEXT	ENDS
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5?$AA@			; `string'
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ DB '    ', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?write_tabs@@YAXPAU_FileStream@@@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_os$ = 8						; size = 4
?write_tabs@@YAXPAU_FileStream@@@Z PROC			; write_tabs, COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 92
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@write_tabs
$LN2@write_tabs:
; Line 93
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@write_tabs:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _tabCount
	jg	SHORT $LN4@write_tabs
; Line 94
	push	4
	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _os$[ebp]
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 95
	jmp	SHORT $LN2@write_tabs
$LN4@write_tabs:
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?write_tabs@@YAXPAU_FileStream@@@Z ENDP			; write_tabs
_TEXT	ENDS
PUBLIC	??_C@_02DHFAHMIK@?2u?$AA@			; `string'
PUBLIC	??_C@_03CMMIFFHF@?2?2?2?$AA@			; `string'
PUBLIC	??_C@_02HDBGODGB@?2?2?$AA@			; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_02FGLPDNBI@?2f?$AA@			; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ucnv_fromUChars_56:PROC
EXTRN	_itostr:PROC
EXTRN	_strcpy:PROC
EXTRN	_strcat:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_02DHFAHMIK@?2u?$AA@
CONST	SEGMENT
??_C@_02DHFAHMIK@?2u?$AA@ DB '\u', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CMMIFFHF@?2?2?2?$AA@
CONST	SEGMENT
??_C@_03CMMIFFHF@?2?2?2?$AA@ DB '\\\', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02HDBGODGB@?2?2?$AA@
CONST	SEGMENT
??_C@_02HDBGODGB@?2?2?$AA@ DB '\\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGLPDNBI@?2f?$AA@
CONST	SEGMENT
??_C@_02FGLPDNBI@?2f?$AA@ DB '\f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n?$AA@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n?$AA@ DB '\n', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?uCharsToChars@@YAHPADHPB_WHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv169 = -316						; size = 4
_retVal$37282 = -116					; size = 4
_dest$37281 = -104					; size = 30
_str$ = -64						; size = 30
_j$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_target$ = 8						; size = 4
_targetLen$ = 12					; size = 4
_source$ = 16						; size = 4
_sourceLen$ = 20					; size = 4
_status$ = 24						; size = 4
?uCharsToChars@@YAHPADHPB_WHPAW4UErrorCode@@@Z PROC	; uCharsToChars, COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 105
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _j$[ebp], 0
; Line 106
	mov	BYTE PTR _str$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _str$[ebp+1], eax
	mov	DWORD PTR _str$[ebp+5], eax
	mov	DWORD PTR _str$[ebp+9], eax
	mov	DWORD PTR _str$[ebp+13], eax
	mov	DWORD PTR _str$[ebp+17], eax
	mov	DWORD PTR _str$[ebp+21], eax
	mov	DWORD PTR _str$[ebp+25], eax
	mov	BYTE PTR _str$[ebp+29], al
$LN39@uCharsToCh:
; Line 107
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _sourceLen$[ebp]
	jge	$LN38@uCharsToCh
; Line 108
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 10					; 0000000aH
	jne	SHORT $LN37@uCharsToCh
; Line 109
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN36@uCharsToCh
; Line 110
	push	OFFSET ??_C@_02JOGGLHBA@?2n?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN36@uCharsToCh:
; Line 112
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
	jmp	$LN35@uCharsToCh
$LN37@uCharsToCh:
; Line 113
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 13					; 0000000dH
	jne	SHORT $LN34@uCharsToCh
; Line 114
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN33@uCharsToCh
; Line 115
	push	OFFSET ??_C@_02FGLPDNBI@?2f?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN33@uCharsToCh:
; Line 117
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
	jmp	$LN35@uCharsToCh
$LN34@uCharsToCh:
; Line 118
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 34					; 00000022H
	jne	$LN31@uCharsToCh
; Line 119
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 39					; 00000027H
	jne	SHORT $LN30@uCharsToCh
; Line 120
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN29@uCharsToCh
; Line 121
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 122
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [edx+ecx*2]
	mov	BYTE PTR [eax+1], cl
$LN29@uCharsToCh:
; Line 124
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN28@uCharsToCh
$LN30@uCharsToCh:
; Line 125
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN27@uCharsToCh
; Line 127
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN26@uCharsToCh
; Line 128
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 129
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [edx+ecx*2]
	mov	BYTE PTR [eax+1], cl
$LN26@uCharsToCh:
; Line 131
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN28@uCharsToCh
$LN27@uCharsToCh:
; Line 132
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 92					; 0000005cH
	jne	SHORT $LN28@uCharsToCh
; Line 133
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [edx+ecx*2]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN28@uCharsToCh:
; Line 134
	jmp	$LN35@uCharsToCh
$LN31@uCharsToCh:
; Line 135
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 92					; 0000005cH
	jne	$LN22@uCharsToCh
; Line 136
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _sourceLen$[ebp]
	jge	$LN21@uCharsToCh
; Line 137
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+2]
	mov	DWORD PTR tv169[ebp], edx
	mov	eax, DWORD PTR tv169[ebp]
	sub	eax, 33					; 00000021H
	mov	DWORD PTR tv169[ebp], eax
	cmp	DWORD PTR tv169[ebp], 30		; 0000001eH
	ja	SHORT $LN14@uCharsToCh
	mov	ecx, DWORD PTR tv169[ebp]
	movzx	edx, BYTE PTR $LN42@uCharsToCh[ecx]
	jmp	DWORD PTR $LN47@uCharsToCh[edx*4]
$LN18@uCharsToCh:
; Line 147
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN17@uCharsToCh
; Line 148
	push	OFFSET ??_C@_02HDBGODGB@?2?2?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN17@uCharsToCh:
; Line 150
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
; Line 151
	jmp	SHORT $LN19@uCharsToCh
$LN16@uCharsToCh:
; Line 154
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 3
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN15@uCharsToCh
; Line 155
	push	OFFSET ??_C@_03CMMIFFHF@?2?2?2?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN15@uCharsToCh:
; Line 157
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 3
	mov	DWORD PTR _j$[ebp], eax
; Line 158
	jmp	SHORT $LN19@uCharsToCh
$LN14@uCharsToCh:
; Line 160
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN13@uCharsToCh
; Line 161
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [edx+ecx*2]
	mov	BYTE PTR [eax], cl
$LN13@uCharsToCh:
; Line 163
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN19@uCharsToCh:
; Line 166
	jmp	SHORT $LN12@uCharsToCh
$LN21@uCharsToCh:
; Line 167
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN11@uCharsToCh
; Line 168
	push	OFFSET ??_C@_02HDBGODGB@?2?2?$AA@
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN11@uCharsToCh:
; Line 170
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 2
	mov	DWORD PTR _j$[ebp], eax
$LN12@uCharsToCh:
; Line 171
	jmp	$LN35@uCharsToCh
$LN22@uCharsToCh:
; Line 172
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 32					; 00000020H
	jl	SHORT $LN9@uCharsToCh
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, 127				; 0000007fH
	jge	SHORT $LN9@uCharsToCh
; Line 173
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN8@uCharsToCh
; Line 174
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	cl, BYTE PTR [edx+ecx*2]
	mov	BYTE PTR [eax], cl
$LN8@uCharsToCh:
; Line 176
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 177
	jmp	$LN35@uCharsToCh
$LN9@uCharsToCh:
; Line 178
	mov	eax, DWORD PTR _enc
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@uCharsToCh
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	test	edx, edx
	jne	SHORT $LN6@uCharsToCh
$LN5@uCharsToCh:
; Line 179
	push	OFFSET ??_C@_02DHFAHMIK@?2u?$AA@
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 180
	push	4
	push	16					; 00000010H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	lea	eax, DWORD PTR _str$[ebp+2]
	push	eax
	call	_itostr
	add	esp, 16					; 00000010H
; Line 181
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 6
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN4@uCharsToCh
; Line 182
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN4@uCharsToCh:
; Line 184
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 6
	mov	DWORD PTR _j$[ebp], eax
; Line 185
	jmp	$LN35@uCharsToCh
$LN6@uCharsToCh:
; Line 186
	mov	BYTE PTR _dest$37281[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _dest$37281[ebp+1], eax
	mov	DWORD PTR _dest$37281[ebp+5], eax
	mov	DWORD PTR _dest$37281[ebp+9], eax
	mov	DWORD PTR _dest$37281[ebp+13], eax
	mov	DWORD PTR _dest$37281[ebp+17], eax
	mov	DWORD PTR _dest$37281[ebp+21], eax
	mov	DWORD PTR _dest$37281[ebp+25], eax
	mov	BYTE PTR _dest$37281[ebp+29], al
; Line 187
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	push	30					; 0000001eH
	lea	ecx, DWORD PTR _dest$37281[ebp]
	push	ecx
	mov	edx, DWORD PTR _conv
	push	edx
	call	_ucnv_fromUChars_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _retVal$37282[ebp], eax
; Line 188
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@uCharsToCh
; Line 189
	xor	eax, eax
	jmp	SHORT $LN40@uCharsToCh
$LN2@uCharsToCh:
; Line 191
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, DWORD PTR _retVal$37282[ebp]
	cmp	eax, DWORD PTR _targetLen$[ebp]
	jge	SHORT $LN1@uCharsToCh
; Line 192
	lea	eax, DWORD PTR _dest$37281[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN1@uCharsToCh:
; Line 194
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, DWORD PTR _retVal$37282[ebp]
	mov	DWORD PTR _j$[ebp], eax
$LN35@uCharsToCh:
; Line 197
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 198
	jmp	$LN39@uCharsToCh
$LN38@uCharsToCh:
; Line 199
	mov	eax, DWORD PTR _j$[ebp]
$LN40@uCharsToCh:
; Line 200
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@uCharsToCh
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN46@uCharsToCh:
	DD	2
	DD	$LN45@uCharsToCh
$LN45@uCharsToCh:
	DD	-64					; ffffffc0H
	DD	30					; 0000001eH
	DD	$LN43@uCharsToCh
	DD	-104					; ffffff98H
	DD	30					; 0000001eH
	DD	$LN44@uCharsToCh
$LN44@uCharsToCh:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN43@uCharsToCh:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
	npad	3
$LN47@uCharsToCh:
	DD	$LN18@uCharsToCh
	DD	$LN16@uCharsToCh
	DD	$LN14@uCharsToCh
$LN42@uCharsToCh:
	DB	0
	DB	1
	DB	0
	DB	2
	DB	0
	DB	0
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	2
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	0
	DB	2
	DB	2
	DB	2
	DB	0
?uCharsToChars@@YAHPADHPB_WHPAW4UErrorCode@@@Z ENDP	; uCharsToChars
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?strrch@@YAIPBDID@Z
_TEXT	SEGMENT
_tSourceEnd$ = -8					; size = 4
_source$ = 8						; size = 4
_sourceLen$ = 12					; size = 4
_find$ = 16						; size = 1
?strrch@@YAIPBDID@Z PROC				; strrch, COMDAT
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 205
	mov	eax, DWORD PTR _sourceLen$[ebp]
	mov	ecx, DWORD PTR _source$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _tSourceEnd$[ebp], edx
$LN3@strrch:
; Line 206
	mov	eax, DWORD PTR _tSourceEnd$[ebp]
	cmp	eax, DWORD PTR _source$[ebp]
	jb	SHORT $LN2@strrch
; Line 207
	mov	eax, DWORD PTR _tSourceEnd$[ebp]
	movsx	ecx, BYTE PTR [eax]
	movsx	edx, BYTE PTR _find$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@strrch
; Line 208
	mov	eax, DWORD PTR _tSourceEnd$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
	jmp	SHORT $LN4@strrch
$LN1@strrch:
; Line 210
	mov	eax, DWORD PTR _tSourceEnd$[ebp]
	sub	eax, 1
	mov	DWORD PTR _tSourceEnd$[ebp], eax
; Line 211
	jmp	SHORT $LN3@strrch
$LN2@strrch:
; Line 212
	mov	eax, DWORD PTR _tSourceEnd$[ebp]
	sub	eax, DWORD PTR _source$[ebp]
$LN4@strrch:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?strrch@@YAIPBDID@Z ENDP				; strrch
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getColumnCount@@YAHH@Z
_TEXT	SEGMENT
_adjustedLen$ = -32					; size = 4
_maxLines$ = -20					; size = 4
_columnCount$ = -8					; size = 4
_len$ = 8						; size = 4
?getColumnCount@@YAHH@Z PROC				; getColumnCount, COMDAT
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 216
	mov	DWORD PTR _columnCount$[ebp], 80	; 00000050H
; Line 217
	mov	DWORD PTR _maxLines$[ebp], 3000		; 00000bb8H
; Line 218
	mov	eax, DWORD PTR _len$[ebp]
	imul	eax, 5
	mov	DWORD PTR _adjustedLen$[ebp], eax
; Line 223
	mov	eax, DWORD PTR _adjustedLen$[ebp]
	cdq
	idiv	DWORD PTR _columnCount$[ebp]
	cmp	DWORD PTR _maxLines$[ebp], eax
	jge	SHORT $LN1@getColumnC
; Line 224
	mov	eax, DWORD PTR _adjustedLen$[ebp]
	cdq
	idiv	DWORD PTR _maxLines$[ebp]
	mov	DWORD PTR _columnCount$[ebp], eax
$LN1@getColumnC:
; Line 226
	mov	eax, DWORD PTR _columnCount$[ebp]
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getColumnCount@@YAHH@Z ENDP				; getColumnCount
_TEXT	ENDS
PUBLIC	??_C@_03IMFGAPKM@?$HN?0?6?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0P@GPEPCCFO@new?5Object?$FL?$FN?$HL?6?$AA@ ; `string'
PUBLIC	?isString@SResource@@QBECXZ			; SResource::isString
PUBLIC	??_C@_0BB@GPFAIKJK@new?5String?$FL?$FN?5?$HL?5?6?$AA@ ; `string'
EXTRN	_strlen:PROC
;	COMDAT ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
CONST	SEGMENT
??_C@_03IMFGAPKM@?$HN?0?6?$AA@ DB '},', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GPEPCCFO@new?5Object?$FL?$FN?$HL?6?$AA@
CONST	SEGMENT
??_C@_0P@GPEPCCFO@new?5Object?$FL?$FN?$HL?6?$AA@ DB 'new Object[]{', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GPFAIKJK@new?5String?$FL?$FN?5?$HL?5?6?$AA@
CONST	SEGMENT
??_C@_0BB@GPFAIKJK@new?5String?$FL?$FN?5?$HL?5?6?$AA@ DB 'new String[] { '
	DB	0aH, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?array_write_java@@YAXPBVArrayResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_object$37368 = -56					; size = 4
_allStrings$ = -41					; size = 1
_current$ = -32						; size = 4
_arr$ = -20						; size = 4
_i$ = -8						; size = 4
_res$ = 8						; size = 4
_status$ = 12						; size = 4
?array_write_java@@YAXPBVArrayResource@@PAW4UErrorCode@@@Z PROC ; array_write_java, COMDAT
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 317
	mov	DWORD PTR _i$[ebp], 0
; Line 318
	mov	DWORD PTR _arr$[ebp], OFFSET ??_C@_0BB@GPFAIKJK@new?5String?$FL?$FN?5?$HL?5?6?$AA@
; Line 319
	mov	DWORD PTR _current$[ebp], 0
; Line 320
	mov	BYTE PTR _allStrings$[ebp], 1
; Line 322
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@array_writ
; Line 323
	jmp	$LN12@array_writ
$LN11@array_writ:
; Line 326
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jbe	$LN10@array_writ
; Line 328
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
; Line 329
	mov	DWORD PTR _i$[ebp], 0
$LN9@array_writ:
; Line 330
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN8@array_writ
; Line 331
	mov	ecx, DWORD PTR _current$[ebp]
	call	?isString@SResource@@QBECXZ		; SResource::isString
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@array_writ
; Line 332
	mov	BYTE PTR _allStrings$[ebp], 0
; Line 333
	jmp	SHORT $LN8@array_writ
$LN7@array_writ:
; Line 335
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 336
	jmp	SHORT $LN9@array_writ
$LN8@array_writ:
; Line 338
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
; Line 339
	movsx	eax, BYTE PTR _allStrings$[ebp]
	test	eax, eax
	jne	SHORT $LN6@array_writ
; Line 340
	mov	DWORD PTR _object$37368[ebp], OFFSET ??_C@_0P@GPEPCCFO@new?5Object?$FL?$FN?$HL?6?$AA@
; Line 341
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 342
	mov	eax, DWORD PTR _object$37368[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _object$37368[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 343
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 344
	jmp	SHORT $LN4@array_writ
$LN6@array_writ:
; Line 345
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 346
	mov	eax, DWORD PTR _arr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _arr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 347
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
$LN4@array_writ:
; Line 349
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN3@array_writ
; Line 353
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	push	ecx
	call	?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z ; res_write_java
	add	esp, 8
; Line 354
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@array_writ
; Line 355
	jmp	$LN12@array_writ
$LN2@array_writ:
; Line 357
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 358
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 359
	jmp	SHORT $LN4@array_writ
$LN3@array_writ:
; Line 360
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 362
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 363
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 364
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 366
	jmp	SHORT $LN12@array_writ
$LN10@array_writ:
; Line 367
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 368
	mov	eax, DWORD PTR _arr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _arr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 369
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 370
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN12@array_writ:
; Line 372
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?array_write_java@@YAXPBVArrayResource@@PAW4UErrorCode@@@Z ENDP ; array_write_java
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isString@SResource@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isString@SResource@@QBECXZ PROC			; SResource::isString, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isString@SResource@@QBECXZ ENDP			; SResource::isString
_TEXT	ENDS
PUBLIC	??_C@_02MLAGHBOD@?0?6?$AA@			; `string'
PUBLIC	??_C@_02CEGNPMN@?$CC?0?$AA@			; `string'
PUBLIC	??_C@_0BB@HIALAPFP@DateTimeElements?$AA@	; `string'
PUBLIC	??_C@_0P@EFDBGBCO@new?5String?$FL?$FN?$HL?6?$AA@ ; `string'
PUBLIC	??_C@_0N@KFBOHCCO@new?5int?$FL?$FN?5?$HL?6?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_02MLAGHBOD@?0?6?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\wrtjava.cpp
CONST	SEGMENT
??_C@_02MLAGHBOD@?0?6?$AA@ DB ',', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CEGNPMN@?$CC?0?$AA@
CONST	SEGMENT
??_C@_02CEGNPMN@?$CC?0?$AA@ DB '",', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HIALAPFP@DateTimeElements?$AA@
CONST	SEGMENT
??_C@_0BB@HIALAPFP@DateTimeElements?$AA@ DB 'DateTimeElements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EFDBGBCO@new?5String?$FL?$FN?$HL?6?$AA@
CONST	SEGMENT
??_C@_0P@EFDBGBCO@new?5String?$FL?$FN?$HL?6?$AA@ DB 'new String[]{', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KFBOHCCO@new?5int?$FL?$FN?5?$HL?6?$AA@
CONST	SEGMENT
??_C@_0N@KFBOHCCO@new?5int?$FL?$FN?5?$HL?6?$AA@ DB 'new int[] {', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?intvector_write_java@@YAXPBVIntVectorResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_len$ = -168						; size = 4
_buf$ = -156						; size = 100
_resname$ = -48						; size = 4
_stringArr$ = -36					; size = 4
_intArr$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
___formal$ = 12						; size = 4
?intvector_write_java@@YAXPBVIntVectorResource@@PAW4UErrorCode@@@Z PROC ; intvector_write_java, COMDAT
; Line 375
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 376
	mov	DWORD PTR _i$[ebp], 0
; Line 377
	mov	DWORD PTR _intArr$[ebp], OFFSET ??_C@_0N@KFBOHCCO@new?5int?$FL?$FN?5?$HL?6?$AA@
; Line 379
	mov	DWORD PTR _stringArr$[ebp], OFFSET ??_C@_0P@EFDBGBCO@new?5String?$FL?$FN?$HL?6?$AA@
; Line 380
	mov	eax, DWORD PTR _srBundle
	push	eax
	mov	ecx, DWORD PTR _res$[ebp]
	call	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z ; SResource::getKeyString
	mov	DWORD PTR _resname$[ebp], eax
; Line 382
	mov	DWORD PTR _len$[ebp], 0
; Line 383
	mov	BYTE PTR _buf$[ebp], 0
; Line 384
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 386
	cmp	DWORD PTR _resname$[ebp], 0
	je	$LN8@intvector_
	push	OFFSET ??_C@_0BB@HIALAPFP@DateTimeElements?$AA@
	mov	eax, DWORD PTR _resname$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN8@intvector_
; Line 387
	mov	eax, DWORD PTR _stringArr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _stringArr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 388
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 389
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@intvector_
$LN6@intvector_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@intvector_:
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	$LN5@intvector_
; Line 390
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 391
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
; Line 392
	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 393
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 394
	push	2
	push	OFFSET ??_C@_02CEGNPMN@?$CC?0?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 395
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 396
	jmp	$LN6@intvector_
$LN5@intvector_:
; Line 397
	jmp	$LN4@intvector_
$LN8@intvector_:
; Line 398
	mov	eax, DWORD PTR _intArr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _intArr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 399
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 400
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@intvector_
$LN2@intvector_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@intvector_:
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	SHORT $LN4@intvector_
; Line 401
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 403
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
; Line 404
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 407
	push	2
	push	OFFSET ??_C@_02MLAGHBOD@?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 408
	jmp	SHORT $LN2@intvector_
$LN4@intvector_:
; Line 410
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 411
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 412
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 413
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@intvector_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@intvector_:
	DD	1
	DD	$LN12@intvector_
$LN12@intvector_:
	DD	-156					; ffffff64H
	DD	100					; 00000064H
	DD	$LN11@intvector_
$LN11@intvector_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?intvector_write_java@@YAXPBVIntVectorResource@@PAW4UErrorCode@@@Z ENDP ; intvector_write_java
_TEXT	ENDS
PUBLIC	??_C@_03MIDJJHFJ@?$CJ?0?6?$AA@			; `string'
PUBLIC	??_C@_0N@PGKHODNH@new?5Integer?$CI?$AA@		; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_03MIDJJHFJ@?$CJ?0?6?$AA@
CONST	SEGMENT
??_C@_03MIDJJHFJ@?$CJ?0?6?$AA@ DB '),', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PGKHODNH@new?5Integer?$CI?$AA@
CONST	SEGMENT
??_C@_0N@PGKHODNH@new?5Integer?$CI?$AA@ DB 'new Integer(', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?int_write_java@@YAXPBVIntResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_len$ = -132						; size = 4
_buf$ = -120						; size = 100
_intC$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
___formal$ = 12						; size = 4
?int_write_java@@YAXPBVIntResource@@PAW4UErrorCode@@@Z PROC ; int_write_java, COMDAT
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 417
	mov	DWORD PTR _intC$[ebp], OFFSET ??_C@_0N@PGKHODNH@new?5Integer?$CI?$AA@
; Line 419
	mov	DWORD PTR _len$[ebp], 0
; Line 420
	mov	BYTE PTR _buf$[ebp], 0
; Line 423
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 424
	mov	eax, DWORD PTR _intC$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _intC$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 425
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_itostr
	add	esp, 16					; 00000010H
	mov	DWORD PTR _len$[ebp], eax
; Line 426
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 427
	push	3
	push	OFFSET ??_C@_03MIDJJHFJ@?$CJ?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 429
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@int_write_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@int_write_:
	DD	1
	DD	$LN4@int_write_
$LN4@int_write_:
	DD	-120					; ffffff88H
	DD	100					; 00000064H
	DD	$LN3@int_write_
$LN3@int_write_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?int_write_java@@YAXPBVIntResource@@PAW4UErrorCode@@@Z ENDP ; int_write_java
_TEXT	ENDS
PUBLIC	??_C@_04NCABILDJ@?$CFi?0?5?$AA@			; `string'
PUBLIC	??_C@_0N@CPJNLGBL@new?5byte?$FL?$FN?5?$HL?$AA@	; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__sprintf:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_04NCABILDJ@?$CFi?0?5?$AA@
CONST	SEGMENT
??_C@_04NCABILDJ@?$CFi?0?5?$AA@ DB '%i, ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CPJNLGBL@new?5byte?$FL?$FN?5?$HL?$AA@
CONST	SEGMENT
??_C@_0N@CPJNLGBL@new?5byte?$FL?$FN?5?$HL?$AA@ DB 'new byte[] {', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?bytes_write_java@@YAXPBVBinaryResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_srcLen$ = -168						; size = 4
_byteIterator$ = -156					; size = 4
_byteArray$ = -144					; size = 4
_byteBuffer$ = -132					; size = 100
_byteDecl$ = -24					; size = 4
_type$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_res$ = 8						; size = 4
___formal$ = 12						; size = 4
?bytes_write_java@@YAXPBVBinaryResource@@PAW4UErrorCode@@@Z PROC ; bytes_write_java, COMDAT
; Line 432
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 433
	mov	DWORD PTR _type$[ebp], OFFSET ??_C@_0N@CPJNLGBL@new?5byte?$FL?$FN?5?$HL?$AA@
; Line 434
	mov	DWORD PTR _byteDecl$[ebp], OFFSET ??_C@_04NCABILDJ@?$CFi?0?5?$AA@
; Line 435
	mov	BYTE PTR _byteBuffer$[ebp], 0
	push	99					; 00000063H
	push	0
	lea	eax, DWORD PTR _byteBuffer$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 436
	mov	DWORD PTR _byteArray$[ebp], 0
; Line 437
	mov	DWORD PTR _byteIterator$[ebp], 0
; Line 439
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _srcLen$[ebp], ecx
; Line 441
	cmp	DWORD PTR _srcLen$[ebp], 0
	jle	$LN10@bytes_writ
; Line 443
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _byteArray$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 446
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 447
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 448
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
	jmp	SHORT $LN9@bytes_writ
$LN8@bytes_writ:
; Line 450
	mov	eax, DWORD PTR _byteIterator$[ebp]
	add	eax, 1
	mov	DWORD PTR _byteIterator$[ebp], eax
$LN9@bytes_writ:
	mov	eax, DWORD PTR _byteIterator$[ebp]
	cmp	eax, DWORD PTR _srcLen$[ebp]
	jge	$LN7@bytes_writ
; Line 452
	mov	eax, DWORD PTR _byteIterator$[ebp]
	and	eax, -2147483633			; 8000000fH
	jns	SHORT $LN16@bytes_writ
	dec	eax
	or	eax, -16				; fffffff0H
	inc	eax
$LN16@bytes_writ:
	test	eax, eax
	jne	SHORT $LN6@bytes_writ
; Line 454
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
$LN6@bytes_writ:
; Line 457
	mov	eax, DWORD PTR _byteArray$[ebp]
	add	eax, DWORD PTR _byteIterator$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 128				; 00000080H
	jge	SHORT $LN5@bytes_writ
; Line 459
	mov	eax, DWORD PTR _byteArray$[ebp]
	add	eax, DWORD PTR _byteIterator$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _byteDecl$[ebp]
	push	edx
	lea	eax, DWORD PTR _byteBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 461
	jmp	SHORT $LN4@bytes_writ
$LN5@bytes_writ:
; Line 463
	mov	eax, DWORD PTR _byteArray$[ebp]
	add	eax, DWORD PTR _byteIterator$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sub	ecx, 256				; 00000100H
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _byteDecl$[ebp]
	push	edx
	lea	eax, DWORD PTR _byteBuffer$[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@bytes_writ:
; Line 466
	lea	eax, DWORD PTR _byteBuffer$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _byteBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 468
	mov	eax, DWORD PTR _byteIterator$[ebp]
	and	eax, -2147483633			; 8000000fH
	jns	SHORT $LN17@bytes_writ
	dec	eax
	or	eax, -16				; fffffff0H
	inc	eax
$LN17@bytes_writ:
	cmp	eax, 15					; 0000000fH
	jne	SHORT $LN3@bytes_writ
; Line 470
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN3@bytes_writ:
; Line 473
	jmp	$LN8@bytes_writ
$LN7@bytes_writ:
; Line 475
	mov	eax, DWORD PTR _byteIterator$[ebp]
	sub	eax, 1
	and	eax, -2147483633			; 8000000fH
	jns	SHORT $LN18@bytes_writ
	dec	eax
	or	eax, -16				; fffffff0H
	inc	eax
$LN18@bytes_writ:
	cmp	eax, 15					; 0000000fH
	je	SHORT $LN2@bytes_writ
; Line 477
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN2@bytes_writ:
; Line 480
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 481
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 482
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 485
	jmp	SHORT $LN11@bytes_writ
$LN10@bytes_writ:
; Line 488
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 489
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 490
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN11@bytes_writ:
; Line 493
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@bytes_writ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@bytes_writ:
	DD	1
	DD	$LN14@bytes_writ
$LN14@bytes_writ:
	DD	-132					; ffffff7cH
	DD	100					; 00000064H
	DD	$LN13@bytes_writ
$LN13@bytes_writ:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?bytes_write_java@@YAXPBVBinaryResource@@PAW4UErrorCode@@@Z ENDP ; bytes_write_java
_TEXT	ENDS
PUBLIC	??_C@_1CA@LKHKEAKM@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@KMDIDILL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1??table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z@4JA@ddc96653 ; `table_write_java'::`2'::__LINE__Var
PUBLIC	??_C@_0BB@MEAICJFF@new?5Object?$FL?$FN?$FL?$FN?$HL?6?$AA@ ; `string'
EXTRN	__imp___wassert:PROC
;	COMDAT ??_C@_1CA@LKHKEAKM@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@LKHKEAKM@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ DB 'i'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 's', 00H
	DB	'-', 00H, '>', 00H, 'f', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@KMDIDILL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GG@KMDIDILL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'r', 00H, 'b', 00H, '\', 00H, 'w'
	DB	00H, 'r', 00H, 't', 00H, 'j', 00H, 'a', 00H, 'v', 00H, 'a', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z@4JA@ddc96653
_DATA	SEGMENT
?__LINE__Var@?1??table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z@4JA@ddc96653 DD 01f2H ; `table_write_java'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@MEAICJFF@new?5Object?$FL?$FN?$FL?$FN?$HL?6?$AA@
CONST	SEGMENT
??_C@_0BB@MEAICJFF@new?5Object?$FL?$FN?$FL?$FN?$HL?6?$AA@ DB 'new Object['
	DB	'][]{', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_currentKeyString$37457 = -44				; size = 4
_obj$ = -32						; size = 4
_current$ = -20						; size = 4
_i$ = -8						; size = 4
_res$ = 8						; size = 4
_status$ = 12						; size = 4
?table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z PROC ; table_write_java, COMDAT
; Line 498
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 499
	mov	DWORD PTR _i$[ebp], 0
; Line 500
	mov	DWORD PTR _current$[ebp], 0
; Line 501
	mov	DWORD PTR _obj$[ebp], OFFSET ??_C@_0BB@MEAICJFF@new?5Object?$FL?$FN?$FL?$FN?$HL?6?$AA@
; Line 503
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@table_writ
; Line 504
	jmp	$LN10@table_writ
$LN9@table_writ:
; Line 507
	mov	eax, DWORD PTR _res$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jbe	$LN8@table_writ
; Line 508
	movsx	eax, BYTE PTR _start
	test	eax, eax
	jne	SHORT $LN7@table_writ
; Line 509
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 510
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 511
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
$LN7@table_writ:
; Line 513
	mov	BYTE PTR _start, 0
; Line 514
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
; Line 515
	mov	DWORD PTR _i$[ebp], 0
$LN6@table_writ:
; Line 518
	cmp	DWORD PTR _current$[ebp], 0
	je	$LN5@table_writ
; Line 519
	mov	eax, DWORD PTR _srBundle
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	call	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z ; SResource::getKeyString
	mov	DWORD PTR _currentKeyString$37457[ebp], eax
; Line 521
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jb	SHORT $LN12@table_writ
	mov	edx, DWORD PTR ?__LINE__Var@?1??table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z@4JA@ddc96653
	add	edx, 23					; 00000017H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GG@KMDIDILL@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CA@LKHKEAKM@?$AAi?$AA?5?$AA?$DM?$AA?5?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@table_writ:
; Line 522
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 524
	push	2
	mov	eax, DWORD PTR _openBrace
	push	eax
	mov	ecx, DWORD PTR _out
	push	ecx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 527
	mov	eax, DWORD PTR _tabCount
	add	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 529
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 530
	cmp	DWORD PTR _currentKeyString$37457[ebp], 0
	je	SHORT $LN4@table_writ
; Line 531
	push	1
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 533
	mov	eax, DWORD PTR _currentKeyString$37457[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _currentKeyString$37457[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 534
	push	2
	push	OFFSET ??_C@_03BPDIBAFI@?$CC?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 536
	push	1
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN4@table_writ:
; Line 538
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$[ebp]
	push	ecx
	call	?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z ; res_write_java
	add	esp, 8
; Line 539
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@table_writ
; Line 540
	jmp	$LN10@table_writ
$LN3@table_writ:
; Line 542
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 543
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
; Line 544
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 545
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 546
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 547
	jmp	$LN6@table_writ
$LN5@table_writ:
; Line 548
	cmp	DWORD PTR _tabCount, 4
	jle	SHORT $LN2@table_writ
; Line 549
	mov	eax, DWORD PTR _tabCount
	sub	eax, 1
	mov	DWORD PTR _tabCount, eax
; Line 550
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 551
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN2@table_writ:
; Line 554
	jmp	SHORT $LN10@table_writ
$LN8@table_writ:
; Line 555
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 556
	mov	eax, DWORD PTR _obj$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _obj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 558
	mov	eax, DWORD PTR _out
	push	eax
	call	?write_tabs@@YAXPAU_FileStream@@@Z	; write_tabs
	add	esp, 4
; Line 559
	push	3
	push	OFFSET ??_C@_03IMFGAPKM@?$HN?0?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN10@table_writ:
; Line 563
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?table_write_java@@YAXPBVTableResource@@PAW4UErrorCode@@@Z ENDP ; table_write_java
_TEXT	ENDS
PUBLIC	??_C@_03OOJDCBP@?$DL?6?6?$AA@			; `string'
PUBLIC	??_C@_08PEECJNGO@package?5?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_05PBJILJE@?4java?$AA@			; `string'
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??_C@_04NBFCGMPH@root?$AA@			; `string'
PUBLIC	??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@ ; `string'
PUBLIC	??_C@_0P@LDMBFGKM@LocaleElements?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_bundle_write_java
EXTRN	_ucnv_close_56:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_getIncludeCopyright:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
;	COMDAT ??_C@_03OOJDCBP@?$DL?6?6?$AA@
CONST	SEGMENT
??_C@_03OOJDCBP@?$DL?6?6?$AA@ DB ';', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PEECJNGO@package?5?$AA@
CONST	SEGMENT
??_C@_08PEECJNGO@package?5?$AA@ DB 'package ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PBJILJE@?4java?$AA@
CONST	SEGMENT
??_C@_05PBJILJE@?4java?$AA@ DB '.java', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBFCGMPH@root?$AA@
CONST	SEGMENT
??_C@_04NBFCGMPH@root?$AA@ DB 'root', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@
CONST	SEGMENT
??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@ DB 'com.ibm.icu.impl.da'
	DB	'ta', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDMBFGKM@LocaleElements?$AA@
CONST	SEGMENT
??_C@_0P@LDMBFGKM@LocaleElements?$AA@ DB 'LocaleElements', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _bundle_write_java
_TEXT	SEGMENT
tv73 = -728						; size = 4
tv71 = -728						; size = 4
_className$ = -528					; size = 256
_fileName$ = -264					; size = 256
__$ArrayPad$ = -4					; size = 4
_bundle$ = 8						; size = 4
_outputDir$ = 12					; size = 4
_outputEnc$ = 16					; size = 4
_writtenFilename$ = 20					; size = 4
_writtenFilenameLen$ = 24				; size = 4
_packageName$ = 28					; size = 4
_bundleName$ = 32					; size = 4
_status$ = 36						; size = 4
_bundle_write_java PROC					; COMDAT
; Line 608
	push	ebp
	mov	ebp, esp
	sub	esp, 728				; 000002d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-728]
	mov	ecx, 182				; 000000b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 610
	mov	BYTE PTR _fileName$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _fileName$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 611
	mov	BYTE PTR _className$[ebp], 0
	push	255					; 000000ffH
	push	0
	lea	eax, DWORD PTR _className$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 616
	mov	BYTE PTR _start, 1
; Line 618
	cmp	DWORD PTR _bundleName$[ebp], 0
	jne	SHORT $LN13@bundle_wri
	mov	DWORD PTR tv71[ebp], OFFSET ??_C@_0P@LDMBFGKM@LocaleElements?$AA@
	jmp	SHORT $LN14@bundle_wri
$LN13@bundle_wri:
	mov	eax, DWORD PTR _bundleName$[ebp]
	mov	DWORD PTR tv71[ebp], eax
$LN14@bundle_wri:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _bName, ecx
; Line 619
	cmp	DWORD PTR _packageName$[ebp], 0
	jne	SHORT $LN15@bundle_wri
	mov	DWORD PTR tv73[ebp], OFFSET ??_C@_0BG@KBPKAIGM@com?4ibm?4icu?4impl?4data?$AA@
	jmp	SHORT $LN16@bundle_wri
$LN15@bundle_wri:
	mov	eax, DWORD PTR _packageName$[ebp]
	mov	DWORD PTR tv73[ebp], eax
$LN16@bundle_wri:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _pName, ecx
; Line 621
	mov	eax, DWORD PTR _bName
	push	eax
	lea	ecx, DWORD PTR _className$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 622
	mov	eax, DWORD PTR _bundle$[ebp]
	mov	DWORD PTR _srBundle, eax
; Line 623
	push	OFFSET ??_C@_04NBFCGMPH@root?$AA@
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@bundle_wri
; Line 624
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	lea	eax, DWORD PTR _className$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 625
	mov	eax, DWORD PTR _srBundle
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _className$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
$LN10@bundle_wri:
; Line 627
	cmp	DWORD PTR _outputDir$[ebp], 0
	je	SHORT $LN9@bundle_wri
; Line 628
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 629
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _outputDir$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN8@bundle_wri
; Line 630
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN8@bundle_wri:
; Line 632
	lea	eax, DWORD PTR _className$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 633
	push	OFFSET ??_C@_05PBJILJE@?4java?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 634
	jmp	SHORT $LN7@bundle_wri
$LN9@bundle_wri:
; Line 635
	lea	eax, DWORD PTR _className$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 636
	push	OFFSET ??_C@_05PBJILJE@?4java?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN7@bundle_wri:
; Line 639
	cmp	DWORD PTR _writtenFilename$[ebp], 0
	je	SHORT $LN6@bundle_wri
; Line 640
	push	1
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _writtenFilenameLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@bundle_wri:
; Line 643
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@bundle_wri
; Line 644
	jmp	$LN11@bundle_wri
$LN5@bundle_wri:
; Line 647
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _out, eax
; Line 649
	cmp	DWORD PTR _out, 0
	jne	SHORT $LN4@bundle_wri
; Line 650
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 4
; Line 651
	jmp	$LN11@bundle_wri
$LN4@bundle_wri:
; Line 653
	call	_getIncludeCopyright
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@bundle_wri
; Line 654
	push	OFFSET _copyRight
	call	_strlen
	add	esp, 4
	push	eax
	push	OFFSET _copyRight
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 655
	push	OFFSET _warningMsg
	call	_strlen
	add	esp, 4
	push	eax
	push	OFFSET _warningMsg
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
$LN3@bundle_wri:
; Line 657
	push	OFFSET ??_C@_08PEECJNGO@package?5?$AA@
	call	_strlen
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_08PEECJNGO@package?5?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 658
	mov	eax, DWORD PTR _pName
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pName
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 659
	push	3
	push	OFFSET ??_C@_03OOJDCBP@?$DL?6?6?$AA@
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 660
	mov	eax, DWORD PTR _javaClass
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _javaClass
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 661
	lea	eax, DWORD PTR _className$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _className$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 662
	mov	eax, DWORD PTR _javaClass1
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _javaClass1
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 672
	cmp	DWORD PTR _outputEnc$[ebp], 0
	je	SHORT $LN2@bundle_wri
	mov	eax, DWORD PTR _outputEnc$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@bundle_wri
; Line 674
	mov	eax, DWORD PTR _outputEnc$[ebp]
	mov	DWORD PTR _enc, eax
; Line 675
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _enc
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _conv, eax
; Line 676
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@bundle_wri
; Line 677
	jmp	SHORT $LN11@bundle_wri
$LN2@bundle_wri:
; Line 680
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?res_write_java@@YAXPAUSResource@@PAW4UErrorCode@@@Z ; res_write_java
	add	esp, 8
; Line 682
	mov	eax, DWORD PTR _closeClass
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _closeClass
	push	ecx
	mov	edx, DWORD PTR _out
	push	edx
	call	_T_FileStream_write
	add	esp, 12					; 0000000cH
; Line 684
	mov	eax, DWORD PTR _out
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 686
	mov	eax, DWORD PTR _conv
	push	eax
	call	_ucnv_close_56
	add	esp, 4
$LN11@bundle_wri:
; Line 687
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@bundle_wri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 728				; 000002d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@bundle_wri:
	DD	2
	DD	$LN19@bundle_wri
$LN19@bundle_wri:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN17@bundle_wri
	DD	-528					; fffffdf0H
	DD	256					; 00000100H
	DD	$LN18@bundle_wri
$LN18@bundle_wri:
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN17@bundle_wri:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_bundle_write_java ENDP
_TEXT	ENDS
END

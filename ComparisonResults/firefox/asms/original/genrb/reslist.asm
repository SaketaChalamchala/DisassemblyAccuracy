; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_BSS	SEGMENT
_gIncludeCopyright DB 01H DUP (?)
_gUsePoolBundle DB 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_gFormatVersions DB 00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	03H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
_DATA	SEGMENT
_gIsDefaultFormatVersion DB 01H
	ORG $+3
_gFormatVersion DD 03H
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	052H
	DB	065H
	DB	073H
	DB	042H
	DB	01H
	DB	03H
	DB	00H
	DB	00H
	DB	01H
	DB	04H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\uinvchar.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	_setIncludeCopyright
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setIncludeCopyright
_TEXT	SEGMENT
_val$ = 8						; size = 1
_setIncludeCopyright PROC				; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 117
	mov	al, BYTE PTR _val$[ebp]
	mov	BYTE PTR _gIncludeCopyright, al
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_setIncludeCopyright ENDP
_TEXT	ENDS
PUBLIC	_getIncludeCopyright
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getIncludeCopyright
_TEXT	SEGMENT
_getIncludeCopyright PROC				; COMDAT
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 121
	mov	al, BYTE PTR _gIncludeCopyright
; Line 122
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_getIncludeCopyright ENDP
_TEXT	ENDS
PUBLIC	_setFormatVersion
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setFormatVersion
_TEXT	SEGMENT
_formatVersion$ = 8					; size = 4
_setFormatVersion PROC					; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 125
	mov	BYTE PTR _gIsDefaultFormatVersion, 0
; Line 126
	mov	eax, DWORD PTR _formatVersion$[ebp]
	mov	DWORD PTR _gFormatVersion, eax
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_setFormatVersion ENDP
_TEXT	ENDS
PUBLIC	_getFormatVersion
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getFormatVersion
_TEXT	SEGMENT
_getFormatVersion PROC					; COMDAT
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 130
	mov	eax, DWORD PTR _gFormatVersion
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_getFormatVersion ENDP
_TEXT	ENDS
PUBLIC	_setUsePoolBundle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setUsePoolBundle
_TEXT	SEGMENT
_use$ = 8						; size = 1
_setUsePoolBundle PROC					; COMDAT
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	mov	al, BYTE PTR _use$[ebp]
	mov	BYTE PTR _gUsePoolBundle, al
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_setUsePoolBundle ENDP
_TEXT	ENDS
PUBLIC	_res_none
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _res_none
_TEXT	SEGMENT
_res_none PROC						; COMDAT
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 139
	mov	eax, OFFSET _kNoResource
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_res_none ENDP
_TEXT	ENDS
PUBLIC	??_7SResource@@6B@				; SResource::`vftable'
PUBLIC	??0SResource@@QAE@XZ				; SResource::SResource
PUBLIC	??_R4SResource@@6B@				; SResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUSResource@@@8				; SResource `RTTI Type Descriptor'
PUBLIC	??_R3SResource@@8				; SResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SResource@@8				; SResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SResource@@8			; SResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; SResource::handlePreflightStrings
PUBLIC	?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z	; SResource::handleWrite16
PUBLIC	?handlePreWrite@SResource@@UAEXPAI@Z		; SResource::handlePreWrite
PUBLIC	?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z ; SResource::handleWrite
EXTRN	_ustr_init:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ESResource@@UAEPAXI@Z:PROC			; SResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@SResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SResource@@8 DD FLAT:??_R0?AUSResource@@@8 ; SResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SResource@@8
rdata$r	ENDS
;	COMDAT ??_R2SResource@@8
rdata$r	SEGMENT
??_R2SResource@@8 DD FLAT:??_R1A@?0A@EA@SResource@@8	; SResource::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3SResource@@8
rdata$r	SEGMENT
??_R3SResource@@8 DD 00H				; SResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2SResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUSResource@@@8
_DATA	SEGMENT
??_R0?AUSResource@@@8 DD FLAT:??_7type_info@@6B@	; SResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUSResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4SResource@@6B@
rdata$r	SEGMENT
??_R4SResource@@6B@ DD 00H				; SResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUSResource@@@8
	DD	FLAT:??_R3SResource@@8
rdata$r	ENDS
;	COMDAT ??_7SResource@@6B@
CONST	SEGMENT
??_7SResource@@6B@ DD FLAT:??_R4SResource@@6B@		; SResource::`vftable'
	DD	FLAT:??_ESResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0SResource@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0SResource@@QAE@XZ PROC				; SResource::SResource, COMDAT
; _this$ = ecx
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 145
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0SResource@@QAE@XZ ENDP				; SResource::SResource
_TEXT	ENDS
PUBLIC	??1SResource@@UAE@XZ				; SResource::~SResource
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GSResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GSResource@@UAEPAXI@Z PROC				; SResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSResource@@UAEPAXI@Z ENDP				; SResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z	; SRBRoot::addTag
PUBLIC	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
EXTRN	_ustr_cpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv74 = -208						; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_type$ = 16						; size = 1
_comment$ = 20						; size = 4
_errorCode$ = 24					; size = 4
??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z PROC ; SResource::SResource, COMDAT
; _this$ = ecx
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _type$[ebp]
	mov	BYTE PTR [eax+4], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	cmp	DWORD PTR _bundle$[ebp], 0
	je	SHORT $LN4@SResource
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z ; SRBRoot::addTag
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@SResource
$LN4@SResource:
	mov	DWORD PTR tv74[ebp], -1
$LN5@SResource:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR [edx+16], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_ustr_init
	add	esp, 4
; Line 154
	cmp	DWORD PTR _comment$[ebp], 0
	je	SHORT $LN2@SResource
; Line 155
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_ustr_cpy
	add	esp, 12					; 0000000cH
$LN2@SResource:
; Line 157
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ENDP ; SResource::SResource
_TEXT	ENDS
EXTRN	_ustr_deinit:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1SResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1SResource@@UAE@XZ PROC				; SResource::~SResource, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SResource@@6B@
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	push	eax
	call	_ustr_deinit
	add	esp, 4
; Line 161
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1SResource@@UAE@XZ ENDP				; SResource::~SResource
_TEXT	ENDS
PUBLIC	??_7ContainerResource@@6B@			; ContainerResource::`vftable'
PUBLIC	??1ContainerResource@@UAE@XZ			; ContainerResource::~ContainerResource
PUBLIC	??_R4ContainerResource@@6B@			; ContainerResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVContainerResource@@@8			; ContainerResource `RTTI Type Descriptor'
PUBLIC	??_R3ContainerResource@@8			; ContainerResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ContainerResource@@8			; ContainerResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ContainerResource@@8		; ContainerResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; ContainerResource::handlePreflightStrings
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_EContainerResource@@UAEPAXI@Z:PROC		; ContainerResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ContainerResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ContainerResource@@8 DD FLAT:??_R0?AVContainerResource@@@8 ; ContainerResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_R2ContainerResource@@8
rdata$r	SEGMENT
??_R2ContainerResource@@8 DD FLAT:??_R1A@?0A@EA@ContainerResource@@8 ; ContainerResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3ContainerResource@@8
rdata$r	SEGMENT
??_R3ContainerResource@@8 DD 00H			; ContainerResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVContainerResource@@@8
_DATA	SEGMENT
??_R0?AVContainerResource@@@8 DD FLAT:??_7type_info@@6B@ ; ContainerResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVContainerResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ContainerResource@@6B@
rdata$r	SEGMENT
??_R4ContainerResource@@6B@ DD 00H			; ContainerResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVContainerResource@@@8
	DD	FLAT:??_R3ContainerResource@@8
rdata$r	ENDS
;	COMDAT ??_7ContainerResource@@6B@
CONST	SEGMENT
??_7ContainerResource@@6B@ DD FLAT:??_R4ContainerResource@@6B@ ; ContainerResource::`vftable'
	DD	FLAT:??_EContainerResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ContainerResource@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ContainerResource@@UAE@XZ$0
__ehfuncinfo$??1ContainerResource@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ContainerResource@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1ContainerResource@@UAE@XZ
_TEXT	SEGMENT
tv83 = -268						; size = 4
$T44254 = -260						; size = 4
$T44255 = -248						; size = 4
_next$35768 = -44					; size = 4
_current$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1ContainerResource@@UAE@XZ PROC			; ContainerResource::~ContainerResource, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1ContainerResource@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ContainerResource@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
$LN2@ContainerR:
; Line 165
	cmp	DWORD PTR _current$[ebp], 0
	je	SHORT $LN3@ContainerR
; Line 166
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _next$35768[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR $T44255[ebp], eax
	mov	ecx, DWORD PTR $T44255[ebp]
	mov	DWORD PTR $T44254[ebp], ecx
	cmp	DWORD PTR $T44254[ebp], 0
	je	SHORT $LN5@ContainerR
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44254[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44254[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN6@ContainerR
$LN5@ContainerR:
	mov	DWORD PTR tv83[ebp], 0
$LN6@ContainerR:
; Line 168
	mov	eax, DWORD PTR _next$35768[ebp]
	mov	DWORD PTR _current$[ebp], eax
; Line 169
	jmp	SHORT $LN2@ContainerR
$LN3@ContainerR:
; Line 170
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ContainerResource@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__ehhandler$??1ContainerResource@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1ContainerResource@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1ContainerResource@@UAE@XZ ENDP			; ContainerResource::~ContainerResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GContainerResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GContainerResource@@UAEPAXI@Z PROC			; ContainerResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ContainerResource@@UAE@XZ		; ContainerResource::~ContainerResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GContainerResource@@UAEPAXI@Z ENDP			; ContainerResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7TableResource@@6B@				; TableResource::`vftable'
PUBLIC	??1TableResource@@UAE@XZ			; TableResource::~TableResource
PUBLIC	??_R4TableResource@@6B@				; TableResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTableResource@@@8			; TableResource `RTTI Type Descriptor'
PUBLIC	??_R3TableResource@@8				; TableResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TableResource@@8				; TableResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TableResource@@8			; TableResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z ; TableResource::handleWrite16
PUBLIC	?handlePreWrite@TableResource@@UAEXPAI@Z	; TableResource::handlePreWrite
PUBLIC	?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z ; TableResource::handleWrite
EXTRN	??_ETableResource@@UAEPAXI@Z:PROC		; TableResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@TableResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TableResource@@8 DD FLAT:??_R0?AVTableResource@@@8 ; TableResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TableResource@@8
rdata$r	ENDS
;	COMDAT ??_R2TableResource@@8
rdata$r	SEGMENT
??_R2TableResource@@8 DD FLAT:??_R1A@?0A@EA@TableResource@@8 ; TableResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ContainerResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3TableResource@@8
rdata$r	SEGMENT
??_R3TableResource@@8 DD 00H				; TableResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TableResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTableResource@@@8
_DATA	SEGMENT
??_R0?AVTableResource@@@8 DD FLAT:??_7type_info@@6B@	; TableResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTableResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TableResource@@6B@
rdata$r	SEGMENT
??_R4TableResource@@6B@ DD 00H				; TableResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTableResource@@@8
	DD	FLAT:??_R3TableResource@@8
rdata$r	ENDS
;	COMDAT ??_7TableResource@@6B@
CONST	SEGMENT
??_7TableResource@@6B@ DD FLAT:??_R4TableResource@@6B@	; TableResource::`vftable'
	DD	FLAT:??_ETableResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@TableResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1TableResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TableResource@@UAE@XZ PROC				; TableResource::~TableResource, COMDAT
; _this$ = ecx
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TableResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ContainerResource@@UAE@XZ		; ContainerResource::~ContainerResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TableResource@@UAE@XZ ENDP				; TableResource::~TableResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GTableResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTableResource@@UAEPAXI@Z PROC			; TableResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TableResource@@UAE@XZ		; TableResource::~TableResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTableResource@@UAEPAXI@Z ENDP			; TableResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@ ; `string'
PUBLIC	?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ; TableResource::add
EXTRN	_error:PROC
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@
CONST	SEGMENT
??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@ DB 'dupli'
	DB	'cate key ''%s'' in table, first appeared at line %d', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_diff$35790 = -68					; size = 4
_currentKeyString$35789 = -56				; size = 4
_prev$ = -44						; size = 4
_current$ = -32						; size = 4
_resKeyString$ = -20					; size = 4
_this$ = -8						; size = 4
_res$ = 8						; size = 4
_linenumber$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z PROC ; TableResource::add, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN13@add
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN13@add
	cmp	DWORD PTR _res$[ebp], OFFSET _kNoResource
	jne	SHORT $LN14@add
$LN13@add:
; Line 177
	jmp	$LN15@add
$LN14@add:
; Line 181
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _linenumber$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
; Line 187
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN12@add
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 189
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 190
	jmp	$LN15@add
$LN12@add:
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _res$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _resKeyString$[ebp], edx
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$[ebp], ecx
; Line 197
	mov	DWORD PTR _prev$[ebp], 0
$LN11@add:
; Line 198
	cmp	DWORD PTR _current$[ebp], 0
	je	$LN10@add
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR _current$[ebp]
	add	edx, DWORD PTR [eax+16]
	mov	DWORD PTR _currentKeyString$35789[ebp], edx
; Line 205
	cmp	DWORD PTR _gFormatVersion, 1
	je	SHORT $LN8@add
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN9@add
$LN8@add:
; Line 206
	mov	eax, DWORD PTR _resKeyString$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentKeyString$35789[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _diff$35790[ebp], eax
; Line 207
	jmp	SHORT $LN7@add
$LN9@add:
; Line 208
	mov	eax, DWORD PTR _resKeyString$[ebp]
	push	eax
	mov	ecx, DWORD PTR _currentKeyString$35789[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _diff$35790[ebp], eax
$LN7@add:
; Line 210
	cmp	DWORD PTR _diff$35790[ebp], 0
	jge	SHORT $LN6@add
; Line 211
	mov	eax, DWORD PTR _current$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
; Line 212
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$[ebp], ecx
	jmp	SHORT $LN5@add
$LN6@add:
; Line 213
	cmp	DWORD PTR _diff$35790[ebp], 0
	jle	SHORT $LN4@add
; Line 215
	cmp	DWORD PTR _prev$[ebp], 0
	jne	SHORT $LN3@add
; Line 217
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 218
	jmp	SHORT $LN2@add
$LN3@add:
; Line 220
	mov	eax, DWORD PTR _prev$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN2@add:
; Line 223
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _current$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 224
	jmp	SHORT $LN15@add
; Line 225
	jmp	SHORT $LN5@add
$LN4@add:
; Line 227
	mov	eax, DWORD PTR _current$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _currentKeyString$35789[ebp]
	push	edx
	push	OFFSET ??_C@_0DH@JMPKIDDH@duplicate?5key?5?8?$CFs?8?5in?5table?0?5fir@
	mov	eax, DWORD PTR _linenumber$[ebp]
	push	eax
	call	_error
	add	esp, 16					; 00000010H
; Line 228
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 229
	jmp	SHORT $LN15@add
$LN5@add:
; Line 231
	jmp	$LN11@add
$LN10@add:
; Line 234
	mov	eax, DWORD PTR _prev$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 235
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+28], 0
$LN15@add:
; Line 236
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?add@TableResource@@QAEXPAUSResource@@HAAW4UErrorCode@@@Z ENDP ; TableResource::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_7ArrayResource@@6B@				; ArrayResource::`vftable'
PUBLIC	??1ArrayResource@@UAE@XZ			; ArrayResource::~ArrayResource
PUBLIC	??_R4ArrayResource@@6B@				; ArrayResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVArrayResource@@@8			; ArrayResource `RTTI Type Descriptor'
PUBLIC	??_R3ArrayResource@@8				; ArrayResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ArrayResource@@8				; ArrayResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ArrayResource@@8			; ArrayResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z ; ArrayResource::handleWrite16
PUBLIC	?handlePreWrite@ArrayResource@@UAEXPAI@Z	; ArrayResource::handlePreWrite
PUBLIC	?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z ; ArrayResource::handleWrite
EXTRN	??_EArrayResource@@UAEPAXI@Z:PROC		; ArrayResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@ArrayResource@@8
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
rdata$r	SEGMENT
??_R1A@?0A@EA@ArrayResource@@8 DD FLAT:??_R0?AVArrayResource@@@8 ; ArrayResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ArrayResource@@8
rdata$r	ENDS
;	COMDAT ??_R2ArrayResource@@8
rdata$r	SEGMENT
??_R2ArrayResource@@8 DD FLAT:??_R1A@?0A@EA@ArrayResource@@8 ; ArrayResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ContainerResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3ArrayResource@@8
rdata$r	SEGMENT
??_R3ArrayResource@@8 DD 00H				; ArrayResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2ArrayResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVArrayResource@@@8
_DATA	SEGMENT
??_R0?AVArrayResource@@@8 DD FLAT:??_7type_info@@6B@	; ArrayResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVArrayResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ArrayResource@@6B@
rdata$r	SEGMENT
??_R4ArrayResource@@6B@ DD 00H				; ArrayResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVArrayResource@@@8
	DD	FLAT:??_R3ArrayResource@@8
rdata$r	ENDS
;	COMDAT ??_7ArrayResource@@6B@
CONST	SEGMENT
??_7ArrayResource@@6B@ DD FLAT:??_R4ArrayResource@@6B@	; ArrayResource::`vftable'
	DD	FLAT:??_EArrayResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@ArrayResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1ArrayResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ArrayResource@@UAE@XZ PROC				; ArrayResource::~ArrayResource, COMDAT
; _this$ = ecx
; Line 238
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ArrayResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ContainerResource@@UAE@XZ		; ContainerResource::~ContainerResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ArrayResource@@UAE@XZ ENDP				; ArrayResource::~ArrayResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GArrayResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GArrayResource@@UAEPAXI@Z PROC			; ArrayResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ArrayResource@@UAE@XZ		; ArrayResource::~ArrayResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GArrayResource@@UAEPAXI@Z ENDP			; ArrayResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?add@ArrayResource@@QAEXPAUSResource@@@Z	; ArrayResource::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@ArrayResource@@QAEXPAUSResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_res$ = 8						; size = 4
?add@ArrayResource@@QAEXPAUSResource@@@Z PROC		; ArrayResource::add, COMDAT
; _this$ = ecx
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 241
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN4@add@2
	cmp	DWORD PTR _res$[ebp], OFFSET _kNoResource
	je	SHORT $LN4@add@2
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN2@add@2
; Line 243
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 244
	jmp	SHORT $LN1@add@2
$LN2@add@2:
; Line 245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [ecx+28], edx
$LN1@add@2:
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+52], ecx
; Line 248
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
$LN4@add@2:
; Line 250
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?add@ArrayResource@@QAEXPAUSResource@@@Z ENDP		; ArrayResource::add
_TEXT	ENDS
PUBLIC	??_7PseudoListResource@@6B@			; PseudoListResource::`vftable'
PUBLIC	??1PseudoListResource@@UAE@XZ			; PseudoListResource::~PseudoListResource
PUBLIC	??_R4PseudoListResource@@6B@			; PseudoListResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPseudoListResource@@@8			; PseudoListResource `RTTI Type Descriptor'
PUBLIC	??_R3PseudoListResource@@8			; PseudoListResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PseudoListResource@@8			; PseudoListResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PseudoListResource@@8		; PseudoListResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z ; PseudoListResource::handleWrite16
EXTRN	??_EPseudoListResource@@UAEPAXI@Z:PROC		; PseudoListResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@PseudoListResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PseudoListResource@@8 DD FLAT:??_R0?AVPseudoListResource@@@8 ; PseudoListResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_R2PseudoListResource@@8
rdata$r	SEGMENT
??_R2PseudoListResource@@8 DD FLAT:??_R1A@?0A@EA@PseudoListResource@@8 ; PseudoListResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ContainerResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3PseudoListResource@@8
rdata$r	SEGMENT
??_R3PseudoListResource@@8 DD 00H			; PseudoListResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPseudoListResource@@@8
_DATA	SEGMENT
??_R0?AVPseudoListResource@@@8 DD FLAT:??_7type_info@@6B@ ; PseudoListResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPseudoListResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PseudoListResource@@6B@
rdata$r	SEGMENT
??_R4PseudoListResource@@6B@ DD 00H			; PseudoListResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPseudoListResource@@@8
	DD	FLAT:??_R3PseudoListResource@@8
rdata$r	ENDS
;	COMDAT ??_7PseudoListResource@@6B@
CONST	SEGMENT
??_7PseudoListResource@@6B@ DD FLAT:??_R4PseudoListResource@@6B@ ; PseudoListResource::`vftable'
	DD	FLAT:??_EPseudoListResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1PseudoListResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PseudoListResource@@UAE@XZ PROC			; PseudoListResource::~PseudoListResource, COMDAT
; _this$ = ecx
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PseudoListResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ContainerResource@@UAE@XZ		; ContainerResource::~ContainerResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PseudoListResource@@UAE@XZ ENDP			; PseudoListResource::~PseudoListResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GPseudoListResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPseudoListResource@@UAEPAXI@Z PROC			; PseudoListResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PseudoListResource@@UAE@XZ		; PseudoListResource::~PseudoListResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPseudoListResource@@UAEPAXI@Z ENDP			; PseudoListResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?add@PseudoListResource@@QAEXPAUSResource@@@Z	; PseudoListResource::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@PseudoListResource@@QAEXPAUSResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_res$ = 8						; size = 4
?add@PseudoListResource@@QAEXPAUSResource@@@Z PROC	; PseudoListResource::add, COMDAT
; _this$ = ecx
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 255
	cmp	DWORD PTR _res$[ebp], 0
	je	SHORT $LN2@add@3
	cmp	DWORD PTR _res$[ebp], OFFSET _kNoResource
	je	SHORT $LN2@add@3
; Line 256
	mov	eax, DWORD PTR _res$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+28], edx
; Line 257
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 258
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
$LN2@add@3:
; Line 260
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?add@PseudoListResource@@QAEXPAUSResource@@@Z ENDP	; PseudoListResource::add
_TEXT	ENDS
PUBLIC	??_7StringBaseResource@@6B@			; StringBaseResource::`vftable'
PUBLIC	??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
PUBLIC	??_R4StringBaseResource@@6B@			; StringBaseResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringBaseResource@@@8			; StringBaseResource `RTTI Type Descriptor'
PUBLIC	??_R3StringBaseResource@@8			; StringBaseResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringBaseResource@@8			; StringBaseResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringBaseResource@@8		; StringBaseResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreWrite@StringBaseResource@@UAEXPAI@Z	; StringBaseResource::handlePreWrite
PUBLIC	?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z ; StringBaseResource::handleWrite
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?isBogus@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	??_EStringBaseResource@@UAEPAXI@Z:PROC		; StringBaseResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@StringBaseResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringBaseResource@@8 DD FLAT:??_R0?AVStringBaseResource@@@8 ; StringBaseResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringBaseResource@@8
rdata$r	ENDS
;	COMDAT ??_R2StringBaseResource@@8
rdata$r	SEGMENT
??_R2StringBaseResource@@8 DD FLAT:??_R1A@?0A@EA@StringBaseResource@@8 ; StringBaseResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3StringBaseResource@@8
rdata$r	SEGMENT
??_R3StringBaseResource@@8 DD 00H			; StringBaseResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2StringBaseResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringBaseResource@@@8
_DATA	SEGMENT
??_R0?AVStringBaseResource@@@8 DD FLAT:??_7type_info@@6B@ ; StringBaseResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringBaseResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringBaseResource@@6B@
rdata$r	SEGMENT
??_R4StringBaseResource@@6B@ DD 00H			; StringBaseResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringBaseResource@@@8
	DD	FLAT:??_R3StringBaseResource@@8
rdata$r	ENDS
;	COMDAT ??_7StringBaseResource@@6B@
CONST	SEGMENT
??_7StringBaseResource@@6B@ DD FLAT:??_R4StringBaseResource@@6B@ ; StringBaseResource::`vftable'
	DD	FLAT:??_EStringBaseResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@StringBaseResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_type$ = 16						; size = 1
_value$ = 20						; size = 4
_len$ = 24						; size = 4
_comment$ = 28						; size = 4
_errorCode$ = 32					; size = 4
??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z PROC ; StringBaseResource::StringBaseResource, COMDAT
; _this$ = ecx
; Line 265
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _type$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringBaseResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 266
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN2@StringBase
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN2@StringBase
; Line 267
	movsx	eax, BYTE PTR _type$[ebp]
	shl	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 268
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 269
	jmp	SHORT $LN3@StringBase
$LN2@StringBase:
; Line 272
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 273
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 274
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@StringBase
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@StringBase
; Line 275
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@StringBase:
; Line 277
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z ENDP ; StringBaseResource::StringBaseResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??1StringBaseResource@@UAE@XZ			; StringBaseResource::~StringBaseResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GStringBaseResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringBaseResource@@UAEPAXI@Z PROC			; StringBaseResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringBaseResource@@UAE@XZ		; StringBaseResource::~StringBaseResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringBaseResource@@UAEPAXI@Z ENDP			; StringBaseResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
xdata$x	SEGMENT
__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_bundle$ = 8						; size = 4
_type$ = 12						; size = 1
_value$ = 16						; size = 4
_errorCode$ = 20					; size = 4
??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z PROC ; StringBaseResource::StringBaseResource, COMDAT
; _this$ = ecx
; Line 281
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringBaseResource@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 282
	mov	esi, esp
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@StringBase@2
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN2@StringBase@2
; Line 283
	movsx	eax, BYTE PTR _type$[ebp]
	shl	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 284
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 285
	jmp	SHORT $LN3@StringBase@2
$LN2@StringBase@2:
; Line 288
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@StringBase@2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@StringBase@2
; Line 290
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN3@StringBase@2:
; Line 292
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__unwindfunclet$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ENDP ; StringBaseResource::StringBaseResource
PUBLIC	??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA ; `StringBaseResource::StringBaseResource'::`2'::__LINE__Var
PUBLIC	??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
EXTRN	__imp___wassert:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
;	COMDAT ??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, 'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, '.', 00H, 'i', 00H, 's', 00H, 'B', 00H, 'o', 00H, 'g'
	DB	00H, 'u', 00H, 's', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'e', 00H, 'n', 00H, ' ', 00H, '>', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'g', 00H, 'e', 00H, 'n', 00H, 'r', 00H, 'b', 00H, '\', 00H, 'r'
	DB	00H, 'e', 00H, 's', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA DD 0129H ; `StringBaseResource::StringBaseResource'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$1
__ehfuncinfo$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 1
_value$ = 12						; size = 4
_len$ = 16						; size = 4
_errorCode$ = 20					; size = 4
??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z PROC ; StringBaseResource::StringBaseResource, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	movzx	ecx, BYTE PTR _type$[ebp]
	push	ecx
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringBaseResource@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 298
	cmp	DWORD PTR _len$[ebp], 0
	jg	SHORT $LN3@StringBase@3
	mov	eax, DWORD PTR ?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BA@GMKHALLP@?$AAl?$AAe?$AAn?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@StringBase@3:
; Line 299
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@StringBase@3
	mov	ecx, DWORD PTR ?__LINE__Var@?1???0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CG@LGPKKOGO@?$AA?$CB?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@StringBase@3:
; Line 300
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__unwindfunclet$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0StringBaseResource@@QAE@CPB_WHAAW4UErrorCode@@@Z ENDP ; StringBaseResource::StringBaseResource
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1StringBaseResource@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1StringBaseResource@@UAE@XZ$0
__ehfuncinfo$??1StringBaseResource@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1StringBaseResource@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1StringBaseResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1StringBaseResource@@UAE@XZ PROC			; StringBaseResource::~StringBaseResource, COMDAT
; _this$ = ecx
; Line 302
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1StringBaseResource@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringBaseResource@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1StringBaseResource@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__ehhandler$??1StringBaseResource@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1StringBaseResource@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1StringBaseResource@@UAE@XZ ENDP			; StringBaseResource::~StringBaseResource
PUBLIC	??_7StringResource@@6B@				; StringResource::`vftable'
PUBLIC	??1StringResource@@UAE@XZ			; StringResource::~StringResource
PUBLIC	??_R4StringResource@@6B@			; StringResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVStringResource@@@8			; StringResource `RTTI Type Descriptor'
PUBLIC	??_R3StringResource@@8				; StringResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2StringResource@@8				; StringResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@StringResource@@8			; StringResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; StringResource::handlePreflightStrings
PUBLIC	?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z ; StringResource::handleWrite16
EXTRN	??_EStringResource@@UAEPAXI@Z:PROC		; StringResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@StringResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@StringResource@@8 DD FLAT:??_R0?AVStringResource@@@8 ; StringResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3StringResource@@8
rdata$r	ENDS
;	COMDAT ??_R2StringResource@@8
rdata$r	SEGMENT
??_R2StringResource@@8 DD FLAT:??_R1A@?0A@EA@StringResource@@8 ; StringResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringBaseResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3StringResource@@8
rdata$r	SEGMENT
??_R3StringResource@@8 DD 00H				; StringResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2StringResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVStringResource@@@8
_DATA	SEGMENT
??_R0?AVStringResource@@@8 DD FLAT:??_7type_info@@6B@	; StringResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVStringResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4StringResource@@6B@
rdata$r	SEGMENT
??_R4StringResource@@6B@ DD 00H				; StringResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVStringResource@@@8
	DD	FLAT:??_R3StringResource@@8
rdata$r	ENDS
;	COMDAT ??_7StringResource@@6B@
CONST	SEGMENT
??_7StringResource@@6B@ DD FLAT:??_R4StringResource@@6B@ ; StringResource::`vftable'
	DD	FLAT:??_EStringResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@StringBaseResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1StringResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1StringResource@@UAE@XZ PROC				; StringResource::~StringResource, COMDAT
; _this$ = ecx
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringBaseResource@@UAE@XZ		; StringBaseResource::~StringBaseResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1StringResource@@UAE@XZ ENDP				; StringResource::~StringResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GStringResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GStringResource@@UAEPAXI@Z PROC			; StringResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringResource@@UAE@XZ		; StringResource::~StringResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GStringResource@@UAEPAXI@Z ENDP			; StringResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7AliasResource@@6B@				; AliasResource::`vftable'
PUBLIC	??1AliasResource@@UAE@XZ			; AliasResource::~AliasResource
PUBLIC	??_R4AliasResource@@6B@				; AliasResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVAliasResource@@@8			; AliasResource `RTTI Type Descriptor'
PUBLIC	??_R3AliasResource@@8				; AliasResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2AliasResource@@8				; AliasResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@AliasResource@@8			; AliasResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EAliasResource@@UAEPAXI@Z:PROC		; AliasResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@AliasResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AliasResource@@8 DD FLAT:??_R0?AVAliasResource@@@8 ; AliasResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3AliasResource@@8
rdata$r	ENDS
;	COMDAT ??_R2AliasResource@@8
rdata$r	SEGMENT
??_R2AliasResource@@8 DD FLAT:??_R1A@?0A@EA@AliasResource@@8 ; AliasResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@StringBaseResource@@8
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3AliasResource@@8
rdata$r	SEGMENT
??_R3AliasResource@@8 DD 00H				; AliasResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2AliasResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAliasResource@@@8
_DATA	SEGMENT
??_R0?AVAliasResource@@@8 DD FLAT:??_7type_info@@6B@	; AliasResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVAliasResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4AliasResource@@6B@
rdata$r	SEGMENT
??_R4AliasResource@@6B@ DD 00H				; AliasResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVAliasResource@@@8
	DD	FLAT:??_R3AliasResource@@8
rdata$r	ENDS
;	COMDAT ??_7AliasResource@@6B@
CONST	SEGMENT
??_7AliasResource@@6B@ DD FLAT:??_R4AliasResource@@6B@	; AliasResource::`vftable'
	DD	FLAT:??_EAliasResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@StringBaseResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??1AliasResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1AliasResource@@UAE@XZ PROC				; AliasResource::~AliasResource, COMDAT
; _this$ = ecx
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AliasResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1StringBaseResource@@UAE@XZ		; StringBaseResource::~StringBaseResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1AliasResource@@UAE@XZ ENDP				; AliasResource::~AliasResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GAliasResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GAliasResource@@UAEPAXI@Z PROC			; AliasResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1AliasResource@@UAE@XZ		; AliasResource::~AliasResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GAliasResource@@UAEPAXI@Z ENDP			; AliasResource::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_7IntResource@@6B@				; IntResource::`vftable'
PUBLIC	??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z ; IntResource::IntResource
PUBLIC	??_R4IntResource@@6B@				; IntResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIntResource@@@8				; IntResource `RTTI Type Descriptor'
PUBLIC	??_R3IntResource@@8				; IntResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IntResource@@8				; IntResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IntResource@@8			; IntResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??_EIntResource@@UAEPAXI@Z:PROC			; IntResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@IntResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IntResource@@8 DD FLAT:??_R0?AVIntResource@@@8 ; IntResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IntResource@@8
rdata$r	ENDS
;	COMDAT ??_R2IntResource@@8
rdata$r	SEGMENT
??_R2IntResource@@8 DD FLAT:??_R1A@?0A@EA@IntResource@@8 ; IntResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3IntResource@@8
rdata$r	SEGMENT
??_R3IntResource@@8 DD 00H				; IntResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IntResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIntResource@@@8
_DATA	SEGMENT
??_R0?AVIntResource@@@8 DD FLAT:??_7type_info@@6B@	; IntResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIntResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IntResource@@6B@
rdata$r	SEGMENT
??_R4IntResource@@6B@ DD 00H				; IntResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIntResource@@@8
	DD	FLAT:??_R3IntResource@@8
rdata$r	ENDS
;	COMDAT ??_7IntResource@@6B@
CONST	SEGMENT
??_7IntResource@@6B@ DD FLAT:??_R4IntResource@@6B@	; IntResource::`vftable'
	DD	FLAT:??_EIntResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@SResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_comment$ = 20						; size = 4
_errorCode$ = 24					; size = 4
??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z PROC ; IntResource::IntResource, COMDAT
; _this$ = ecx
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	7
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntResource@@6B@
; Line 324
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 325
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 268435455				; 0fffffffH
	or	eax, 1879048192				; 70000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 326
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 327
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z ENDP ; IntResource::IntResource
_TEXT	ENDS
PUBLIC	??1IntResource@@UAE@XZ				; IntResource::~IntResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIntResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIntResource@@UAEPAXI@Z PROC				; IntResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IntResource@@UAE@XZ			; IntResource::~IntResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIntResource@@UAEPAXI@Z ENDP				; IntResource::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1IntResource@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IntResource@@UAE@XZ PROC				; IntResource::~IntResource, COMDAT
; _this$ = ecx
; Line 329
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntResource@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IntResource@@UAE@XZ ENDP				; IntResource::~IntResource
_TEXT	ENDS
PUBLIC	??_7IntVectorResource@@6B@			; IntVectorResource::`vftable'
PUBLIC	??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; IntVectorResource::IntVectorResource
PUBLIC	??_R4IntVectorResource@@6B@			; IntVectorResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIntVectorResource@@@8			; IntVectorResource `RTTI Type Descriptor'
PUBLIC	??_R3IntVectorResource@@8			; IntVectorResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IntVectorResource@@8			; IntVectorResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IntVectorResource@@8		; IntVectorResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreWrite@IntVectorResource@@UAEXPAI@Z	; IntVectorResource::handlePreWrite
PUBLIC	?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z ; IntVectorResource::handleWrite
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_EIntVectorResource@@UAEPAXI@Z:PROC		; IntVectorResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@IntVectorResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IntVectorResource@@8 DD FLAT:??_R0?AVIntVectorResource@@@8 ; IntVectorResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IntVectorResource@@8
rdata$r	ENDS
;	COMDAT ??_R2IntVectorResource@@8
rdata$r	SEGMENT
??_R2IntVectorResource@@8 DD FLAT:??_R1A@?0A@EA@IntVectorResource@@8 ; IntVectorResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3IntVectorResource@@8
rdata$r	SEGMENT
??_R3IntVectorResource@@8 DD 00H			; IntVectorResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IntVectorResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIntVectorResource@@@8
_DATA	SEGMENT
??_R0?AVIntVectorResource@@@8 DD FLAT:??_7type_info@@6B@ ; IntVectorResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIntVectorResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IntVectorResource@@6B@
rdata$r	SEGMENT
??_R4IntVectorResource@@6B@ DD 00H			; IntVectorResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIntVectorResource@@@8
	DD	FLAT:??_R3IntVectorResource@@8
rdata$r	ENDS
;	COMDAT ??_7IntVectorResource@@6B@
CONST	SEGMENT
??_7IntVectorResource@@6B@ DD FLAT:??_R4IntVectorResource@@6B@ ; IntVectorResource::`vftable'
	DD	FLAT:??_EIntVectorResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@IntVectorResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T44361 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_errorCode$ = 20					; size = 4
??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z PROC ; IntVectorResource::IntVectorResource, COMDAT
; _this$ = ecx
; Line 334
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	14					; 0000000eH
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntVectorResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	push	8192					; 00002000H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T44361[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T44361[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 335
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN2@IntVectorR
; Line 336
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@IntVectorR:
; Line 339
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__ehhandler$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ENDP ; IntVectorResource::IntVectorResource
PUBLIC	??1IntVectorResource@@UAE@XZ			; IntVectorResource::~IntVectorResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIntVectorResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIntVectorResource@@UAEPAXI@Z PROC			; IntVectorResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IntVectorResource@@UAE@XZ		; IntVectorResource::~IntVectorResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIntVectorResource@@UAEPAXI@Z ENDP			; IntVectorResource::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1IntVectorResource@@UAE@XZ
_TEXT	SEGMENT
$T44373 = -212						; size = 4
_this$ = -8						; size = 4
??1IntVectorResource@@UAE@XZ PROC			; IntVectorResource::~IntVectorResource, COMDAT
; _this$ = ecx
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IntVectorResource@@6B@
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T44373[ebp], ecx
	mov	edx, DWORD PTR $T44373[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 343
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1IntVectorResource@@UAE@XZ ENDP			; IntVectorResource::~IntVectorResource
_TEXT	ENDS
PUBLIC	?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z	; IntVectorResource::add
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_value$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z PROC	; IntVectorResource::add, COMDAT
; _this$ = ecx
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 346
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@add@4
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+44], ecx
$LN2@add@4:
; Line 349
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?add@IntVectorResource@@QAEXHAAW4UErrorCode@@@Z ENDP	; IntVectorResource::add
_TEXT	ENDS
PUBLIC	??_7BinaryResource@@6B@				; BinaryResource::`vftable'
PUBLIC	??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z ; BinaryResource::BinaryResource
PUBLIC	??_R4BinaryResource@@6B@			; BinaryResource::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBinaryResource@@@8			; BinaryResource `RTTI Type Descriptor'
PUBLIC	??_R3BinaryResource@@8				; BinaryResource::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BinaryResource@@8				; BinaryResource::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BinaryResource@@8			; BinaryResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?handlePreWrite@BinaryResource@@UAEXPAI@Z	; BinaryResource::handlePreWrite
PUBLIC	?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z ; BinaryResource::handleWrite
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
EXTRN	??_EBinaryResource@@UAEPAXI@Z:PROC		; BinaryResource::`vector deleting destructor'
;	COMDAT ??_R1A@?0A@EA@BinaryResource@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BinaryResource@@8 DD FLAT:??_R0?AVBinaryResource@@@8 ; BinaryResource::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3BinaryResource@@8
rdata$r	ENDS
;	COMDAT ??_R2BinaryResource@@8
rdata$r	SEGMENT
??_R2BinaryResource@@8 DD FLAT:??_R1A@?0A@EA@BinaryResource@@8 ; BinaryResource::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SResource@@8
rdata$r	ENDS
;	COMDAT ??_R3BinaryResource@@8
rdata$r	SEGMENT
??_R3BinaryResource@@8 DD 00H				; BinaryResource::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2BinaryResource@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBinaryResource@@@8
_DATA	SEGMENT
??_R0?AVBinaryResource@@@8 DD FLAT:??_7type_info@@6B@	; BinaryResource `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBinaryResource@@', 00H
_DATA	ENDS
;	COMDAT ??_R4BinaryResource@@6B@
rdata$r	SEGMENT
??_R4BinaryResource@@6B@ DD 00H				; BinaryResource::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBinaryResource@@@8
	DD	FLAT:??_R3BinaryResource@@8
rdata$r	ENDS
;	COMDAT ??_7BinaryResource@@6B@
CONST	SEGMENT
??_7BinaryResource@@6B@ DD FLAT:??_R4BinaryResource@@6B@ ; BinaryResource::`vftable'
	DD	FLAT:??_EBinaryResource@@UAEPAXI@Z
	DD	FLAT:?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
	DD	FLAT:?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
	DD	FLAT:?handlePreWrite@BinaryResource@@UAEXPAI@Z
	DD	FLAT:?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
$T44379 = -236						; size = 4
$T44380 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_length$ = 16						; size = 4
_data$ = 20						; size = 4
_fileName$ = 24						; size = 4
_comment$ = 28						; size = 4
_errorCode$ = 32					; size = 4
??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z PROC ; BinaryResource::BinaryResource, COMDAT
; _this$ = ecx
; Line 355
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BinaryResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax+44], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
; Line 356
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN7@BinaryReso
; Line 357
	jmp	$LN8@BinaryReso
$LN7@BinaryReso:
; Line 359
	cmp	DWORD PTR _fileName$[ebp], 0
	je	SHORT $LN6@BinaryReso
	mov	eax, DWORD PTR _fileName$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@BinaryReso
; Line 360
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T44379[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T44379[ebp]
	mov	DWORD PTR [ecx+52], edx
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	jne	SHORT $LN5@BinaryReso
; Line 362
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 363
	jmp	$LN8@BinaryReso
$LN5@BinaryReso:
; Line 365
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	call	_strcpy
	add	esp, 8
$LN6@BinaryReso:
; Line 367
	cmp	DWORD PTR _length$[ebp], 0
	jbe	SHORT $LN4@BinaryReso
; Line 368
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T44380[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T44380[ebp]
	mov	DWORD PTR [ecx+48], edx
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	jne	SHORT $LN3@BinaryReso
; Line 370
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 371
	jmp	SHORT $LN8@BinaryReso
$LN3@BinaryReso:
; Line 373
	push	1
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 374
	jmp	SHORT $LN8@BinaryReso
$LN4@BinaryReso:
; Line 375
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN8@BinaryReso
; Line 376
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 268435456		; 10000000H
; Line 377
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
$LN8@BinaryReso:
; Line 380
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SResource@@UAE@XZ			; SResource::~SResource
__ehhandler$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z ENDP ; BinaryResource::BinaryResource
PUBLIC	??1BinaryResource@@UAE@XZ			; BinaryResource::~BinaryResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBinaryResource@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GBinaryResource@@UAEPAXI@Z PROC			; BinaryResource::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1BinaryResource@@UAE@XZ		; BinaryResource::~BinaryResource
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@11
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@11:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GBinaryResource@@UAEPAXI@Z ENDP			; BinaryResource::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1BinaryResource@@UAE@XZ
_TEXT	SEGMENT
$T44392 = -224						; size = 4
$T44393 = -212						; size = 4
_this$ = -8						; size = 4
??1BinaryResource@@UAE@XZ PROC				; BinaryResource::~BinaryResource, COMDAT
; _this$ = ecx
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7BinaryResource@@6B@
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR $T44392[ebp], ecx
	mov	edx, DWORD PTR $T44392[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+52]
	mov	DWORD PTR $T44393[ebp], ecx
	mov	edx, DWORD PTR $T44393[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 385
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1BinaryResource@@UAE@XZ ENDP				; BinaryResource::~BinaryResource
_TEXT	ENDS
PUBLIC	?length@StringBaseResource@@QBEHXZ		; StringBaseResource::length
PUBLIC	??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA ; `StringResource::handlePreflightStrings'::`2'::__LINE__Var
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_??AUnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	_uhash_put_56:PROC
EXTRN	_uhash_get_56:PROC
;	COMDAT ??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '-', 00H, '>', 00H
	DB	'f', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e'
	DB	00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@ DB 'f'
	DB	00H, 'S', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA DD 0187H ; `StringResource::handlePreflightStrings'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv81 = -232						; size = 4
_len$35971 = -32					; size = 4
_poolStringIndex$35967 = -20				; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_stringSet$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z PROC ; StringResource::handlePreflightStrings, COMDAT
; _this$ = ecx
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN13@handlePref
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BM@MFHCCFIL@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@handlePref:
; Line 393
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	call	_uhash_get_56
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+108], eax
; Line 394
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	$LN10@handlePref
; Line 396
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [ecx+116]
	add	edx, 1
	mov	DWORD PTR tv81[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR [ecx+116], edx
	cmp	DWORD PTR tv81[ebp], 1
	jne	SHORT $LN9@handlePref
; Line 397
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	movsx	edx, BYTE PTR [ecx+5]
	test	edx, edx
	jne	SHORT $LN14@handlePref
	mov	eax, DWORD PTR ?__LINE__Var@?1??handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	eax, 6
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CA@NKBACKML@?$AAf?$AAS?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAW?$AAr?$AAi?$AAt?$AAt?$AAe?$AAn?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@handlePref:
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [ecx+8]
	and	edx, 268435455				; 0fffffffH
	mov	DWORD PTR _poolStringIndex$35967[ebp], edx
; Line 399
	mov	eax, DWORD PTR _bundle$[ebp]
	mov	ecx, DWORD PTR _poolStringIndex$35967[ebp]
	cmp	ecx, DWORD PTR [eax+120]
	jl	SHORT $LN9@handlePref
; Line 400
	mov	eax, DWORD PTR _poolStringIndex$35967[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	DWORD PTR [ecx+120], eax
$LN9@handlePref:
; Line 403
	jmp	$LN11@handlePref
$LN10@handlePref:
; Line 406
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 1
; Line 407
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _stringSet$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 409
	mov	eax, DWORD PTR _bundle$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	$LN11@handlePref
; Line 410
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	DWORD PTR _len$35971[ebp], eax
; Line 412
	cmp	DWORD PTR _len$35971[ebp], 40		; 00000028H
	jg	SHORT $LN6@handlePref
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_??AUnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	and	eax, -1024				; fffffc00H
	cmp	eax, 56320				; 0000dc00H
	je	SHORT $LN6@handlePref
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN6@handlePref
; Line 417
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 0
	jmp	SHORT $LN5@handlePref
$LN6@handlePref:
; Line 418
	cmp	DWORD PTR _len$35971[ebp], 1006		; 000003eeH
	jg	SHORT $LN4@handlePref
; Line 419
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 1
	jmp	SHORT $LN5@handlePref
$LN4@handlePref:
; Line 420
	cmp	DWORD PTR _len$35971[ebp], 1048575	; 000fffffH
	jg	SHORT $LN2@handlePref
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 2
; Line 422
	jmp	SHORT $LN5@handlePref
$LN2@handlePref:
; Line 423
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 3
$LN5@handlePref:
; Line 425
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+124]
	add	ecx, DWORD PTR _len$35971[ebp]
	mov	edx, DWORD PTR _bundle$[ebp]
	mov	eax, DWORD PTR [edx+112]
	lea	ecx, DWORD PTR [ecx+eax+1]
	mov	edx, DWORD PTR _bundle$[ebp]
	mov	DWORD PTR [edx+112], ecx
$LN11@handlePref:
; Line 427
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?handlePreflightStrings@StringResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; StringResource::handlePreflightStrings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@StringBaseResource@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@StringBaseResource@@QBEHXZ PROC			; StringBaseResource::length, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@StringBaseResource@@QBEHXZ ENDP			; StringBaseResource::length
_TEXT	ENDS
PUBLIC	?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; SResource::preflightStrings
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_current$35985 = -20					; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_stringSet$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z PROC ; ContainerResource::handlePreflightStrings, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 431
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 432
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$35985[ebp], ecx
	jmp	SHORT $LN3@handlePref@2
$LN2@handlePref@2:
	mov	eax, DWORD PTR _current$35985[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$35985[ebp], ecx
$LN3@handlePref@2:
	cmp	DWORD PTR _current$35985[ebp], 0
	je	SHORT $LN4@handlePref@2
; Line 433
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _current$35985[ebp]
	call	?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; SResource::preflightStrings
; Line 434
	jmp	SHORT $LN2@handlePref@2
$LN4@handlePref@2:
; Line 435
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?handlePreflightStrings@ContainerResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; ContainerResource::handlePreflightStrings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_stringSet$ = 12					; size = 4
_errorCode$ = 16					; size = 4
?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z PROC ; SResource::preflightStrings, COMDAT
; _this$ = ecx
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 439
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@preflightS
; Line 440
	jmp	SHORT $LN3@preflightS
$LN2@preflightS:
; Line 442
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	je	SHORT $LN1@preflightS
; Line 448
	jmp	SHORT $LN3@preflightS
$LN1@preflightS:
; Line 450
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@preflightS:
; Line 451
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; SResource::preflightStrings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z PROC ; SResource::handlePreflightStrings, COMDAT
; _this$ = ecx
; Line 455
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 457
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?handlePreflightStrings@SResource@@UAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; SResource::handlePreflightStrings
_TEXT	ENDS
PUBLIC	??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA	; `SRBRoot::makeRes16'::`2'::__LINE__Var
PUBLIC	?makeRes16@SRBRoot@@QBEHI@Z			; SRBRoot::makeRes16
;	COMDAT ??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@ DB 'o'
	DB	00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA DD 01ccH ; `SRBRoot::makeRes16'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?makeRes16@SRBRoot@@QBEHI@Z
_TEXT	SEGMENT
_offset$ = -32						; size = 4
_type$ = -20						; size = 4
_this$ = -8						; size = 4
_resWord$ = 8						; size = 4
?makeRes16@SRBRoot@@QBEHI@Z PROC			; SRBRoot::makeRes16, COMDAT
; _this$ = ecx
; Line 460
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 461
	cmp	DWORD PTR _resWord$[ebp], 0
	jne	SHORT $LN6@makeRes16
; Line 462
	xor	eax, eax
	jmp	$LN7@makeRes16
$LN6@makeRes16:
; Line 464
	mov	eax, DWORD PTR _resWord$[ebp]
	shr	eax, 28					; 0000001cH
	mov	DWORD PTR _type$[ebp], eax
; Line 465
	mov	eax, DWORD PTR _resWord$[ebp]
	and	eax, 268435455				; 0fffffffH
	mov	DWORD PTR _offset$[ebp], eax
; Line 466
	cmp	DWORD PTR _type$[ebp], 6
	jne	SHORT $LN5@makeRes16
; Line 467
	cmp	DWORD PTR _offset$[ebp], 0
	jg	SHORT $LN9@makeRes16
	mov	eax, DWORD PTR ?__LINE__Var@?1??makeRes16@SRBRoot@@QBEHI@Z@4JA
	add	eax, 7
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BG@HKAMBNGK@?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@makeRes16:
; Line 468
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	cmp	ecx, DWORD PTR [eax+120]
	jge	SHORT $LN4@makeRes16
; Line 469
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	cmp	ecx, DWORD PTR [eax+124]
	jge	SHORT $LN3@makeRes16
; Line 470
	mov	eax, DWORD PTR _offset$[ebp]
	jmp	SHORT $LN7@makeRes16
$LN3@makeRes16:
; Line 472
	jmp	SHORT $LN5@makeRes16
$LN4@makeRes16:
; Line 473
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	sub	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+124]
	mov	DWORD PTR _offset$[ebp], ecx
; Line 474
	cmp	DWORD PTR _offset$[ebp], 65535		; 0000ffffH
	jg	SHORT $LN5@makeRes16
; Line 475
	mov	eax, DWORD PTR _offset$[ebp]
	jmp	SHORT $LN7@makeRes16
$LN5@makeRes16:
; Line 479
	or	eax, -1
$LN7@makeRes16:
; Line 480
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?makeRes16@SRBRoot@@QBEHI@Z ENDP			; SRBRoot::makeRes16
_TEXT	ENDS
PUBLIC	??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA	; `SRBRoot::mapKey'::`2'::__LINE__Var
PUBLIC	?mapKey@SRBRoot@@QBEHH@Z			; SRBRoot::mapKey
;	COMDAT ??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@ DB 'o'
	DB	00H, 'l', 00H, 'd', 00H, 'p', 00H, 'o', 00H, 's', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '['
	DB	00H, 's', 00H, 't', 00H, 'a', 00H, 'r', 00H, 't', 00H, ']', 00H
	DB	'.', 00H, 'o', 00H, 'l', 00H, 'd', 00H, 'p', 00H, 'o', 00H, 's'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA DD 01e3H	; `SRBRoot::mapKey'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?mapKey@SRBRoot@@QBEHH@Z
_TEXT	SEGMENT
_limit$ = -56						; size = 4
_start$ = -44						; size = 4
_i$ = -32						; size = 4
_map$ = -20						; size = 4
_this$ = -8						; size = 4
_oldpos$ = 8						; size = 4
?mapKey@SRBRoot@@QBEHH@Z PROC				; SRBRoot::mapKey, COMDAT
; _this$ = ecx
; Line 483
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 484
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _map$[ebp], ecx
; Line 485
	cmp	DWORD PTR _map$[ebp], 0
	jne	SHORT $LN5@mapKey
; Line 486
	mov	eax, DWORD PTR _oldpos$[ebp]
	jmp	$LN6@mapKey
$LN5@mapKey:
; Line 491
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _start$[ebp], edx
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	add	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _limit$[ebp], ecx
$LN4@mapKey:
; Line 493
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _start$[ebp], eax
	jge	SHORT $LN3@mapKey
; Line 494
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _limit$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 495
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR _oldpos$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8]
	jge	SHORT $LN2@mapKey
; Line 496
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
; Line 497
	jmp	SHORT $LN1@mapKey
$LN2@mapKey:
; Line 498
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _start$[ebp], eax
$LN1@mapKey:
; Line 500
	jmp	SHORT $LN4@mapKey
$LN3@mapKey:
; Line 501
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR _oldpos$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*8]
	je	SHORT $LN8@mapKey
	mov	eax, DWORD PTR ?__LINE__Var@?1??mapKey@SRBRoot@@QBEHH@Z@4JA
	add	eax, 18					; 00000012H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1DI@LNKBBKFL@?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAm?$AAa?$AAp?$AA?$FL?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$FN?$AA?4?$AAo?$AAl?$AAd?$AAp?$AAo?$AAs?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@mapKey:
; Line 502
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	eax, DWORD PTR [ecx+eax*8+4]
$LN6@mapKey:
; Line 503
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?mapKey@SRBRoot@@QBEHH@Z ENDP				; SRBRoot::mapKey
_TEXT	ENDS
PUBLIC	??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@ ; `string'
PUBLIC	?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA ; `StringResource::handleWrite16'::`2'::__LINE__Var
;	COMDAT ??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@
CONST	SEGMENT
??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@ DB 's'
	DB	00H, 'a', 00H, 'm', 00H, 'e', 00H, '-', 00H, '>', 00H, 'f', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, 'R', 00H, 'E', 00H, 'S', 00H, '_', 00H, 'B', 00H, 'O', 00H
	DB	'G', 00H, 'U', 00H, 'S', 00H, ' ', 00H, '&', 00H, '&', 00H, ' '
	DB	00H, 's', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '-', 00H, '>', 00H
	DB	'f', 00H, 'W', 00H, 'r', 00H, 'i', 00H, 't', 00H, 't', 00H, 'e'
	DB	00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA DD 01ffH ; `StringResource::handleWrite16'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_same$ = -20						; size = 4
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z PROC	; StringResource::handleWrite16, COMDAT
; _this$ = ecx
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _same$[ebp], ecx
	cmp	DWORD PTR _same$[ebp], 0
	je	SHORT $LN2@handleWrit
; Line 515
	mov	eax, DWORD PTR _same$[ebp]
	cmp	DWORD PTR [eax+8], -1
	je	SHORT $LN4@handleWrit
	mov	ecx, DWORD PTR _same$[ebp]
	movsx	edx, BYTE PTR [ecx+5]
	test	edx, edx
	jne	SHORT $LN5@handleWrit
$LN4@handleWrit:
	mov	eax, DWORD PTR ?__LINE__Var@?1??handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z@4JA
	add	eax, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1FE@KAHDBKBH@?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@handleWrit:
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _same$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _same$[ebp]
	mov	dl, BYTE PTR [ecx+5]
	mov	BYTE PTR [eax+5], dl
$LN2@handleWrit:
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handleWrite16@StringResource@@UAEXPAUSRBRoot@@@Z ENDP	; StringResource::handleWrite16
_TEXT	ENDS
PUBLIC	?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z ; ContainerResource::writeAllRes16
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_current$36050 = -20					; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z PROC ; ContainerResource::writeAllRes16, COMDAT
; _this$ = ecx
; Line 522
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 523
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36050[ebp], ecx
	jmp	SHORT $LN3@writeAllRe
$LN2@writeAllRe:
	mov	eax, DWORD PTR _current$36050[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36050[ebp], ecx
$LN3@writeAllRe:
	cmp	DWORD PTR _current$36050[ebp], 0
	je	SHORT $LN1@writeAllRe
; Line 524
	mov	esi, esp
	mov	eax, DWORD PTR _current$36050[ebp]
	movzx	ecx, WORD PTR [eax+12]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 525
	jmp	SHORT $LN2@writeAllRe
$LN1@writeAllRe:
; Line 526
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z ENDP ; ContainerResource::writeAllRes16
_TEXT	ENDS
PUBLIC	?write16@SResource@@QAEXPAUSRBRoot@@@Z		; SResource::write16
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_current$36062 = -32					; size = 4
_res16$ = -20						; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z PROC	; ArrayResource::handleWrite16, COMDAT
; _this$ = ecx
; Line 530
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 531
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN5@handleWrit@2
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN5@handleWrit@2
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -2147483648		; 80000000H
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 534
	jmp	$LN6@handleWrit@2
$LN5@handleWrit@2:
; Line 537
	mov	DWORD PTR _res16$[ebp], 0
; Line 538
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36062[ebp], ecx
	jmp	SHORT $LN4@handleWrit@2
$LN3@handleWrit@2:
	mov	eax, DWORD PTR _current$36062[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36062[ebp], ecx
$LN4@handleWrit@2:
	cmp	DWORD PTR _current$36062[ebp], 0
	je	SHORT $LN2@handleWrit@2
; Line 539
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$36062[ebp]
	call	?write16@SResource@@QAEXPAUSRBRoot@@@Z	; SResource::write16
; Line 540
	mov	eax, DWORD PTR _current$36062[ebp]
	mov	ecx, DWORD PTR _res16$[ebp]
	or	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _res16$[ebp], ecx
; Line 541
	jmp	SHORT $LN3@handleWrit@2
$LN2@handleWrit@2:
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 65535		; 0000ffffH
	ja	SHORT $LN6@handleWrit@2
	cmp	DWORD PTR _res16$[ebp], 0
	jl	SHORT $LN6@handleWrit@2
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN6@handleWrit@2
; Line 543
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, -1879048192			; 90000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 544
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+44]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 545
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z ; ContainerResource::writeAllRes16
$LN6@handleWrit@2:
; Line 547
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handleWrite16@ArrayResource@@UAEXPAUSRBRoot@@@Z ENDP	; ArrayResource::handleWrite16
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_current$36089 = -56					; size = 4
_current$36078 = -44					; size = 4
_res16$ = -32						; size = 4
_key16$ = -20						; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z PROC	; TableResource::handleWrite16, COMDAT
; _this$ = ecx
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN12@handleWrit@3
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN12@handleWrit@3
; Line 552
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 536870912		; 20000000H
; Line 553
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 554
	jmp	$LN13@handleWrit@3
$LN12@handleWrit@3:
; Line 557
	mov	DWORD PTR _key16$[ebp], 0
; Line 558
	mov	DWORD PTR _res16$[ebp], 0
; Line 559
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36078[ebp], ecx
	jmp	SHORT $LN11@handleWrit@3
$LN10@handleWrit@3:
	mov	eax, DWORD PTR _current$36078[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36078[ebp], ecx
$LN11@handleWrit@3:
	cmp	DWORD PTR _current$36078[ebp], 0
	je	SHORT $LN9@handleWrit@3
; Line 560
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$36078[ebp]
	call	?write16@SResource@@QAEXPAUSRBRoot@@@Z	; SResource::write16
; Line 561
	mov	eax, DWORD PTR _current$36078[ebp]
	mov	ecx, DWORD PTR _key16$[ebp]
	or	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _key16$[ebp], ecx
; Line 562
	mov	eax, DWORD PTR _current$36078[ebp]
	mov	ecx, DWORD PTR _res16$[ebp]
	or	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _res16$[ebp], ecx
; Line 563
	jmp	SHORT $LN10@handleWrit@3
$LN9@handleWrit@3:
; Line 564
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	edx, DWORD PTR [eax+44]
	cmp	edx, DWORD PTR [ecx+12]
	jbe	SHORT $LN8@handleWrit@3
; Line 565
	mov	eax, DWORD PTR _bundle$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+12], edx
$LN8@handleWrit@3:
; Line 567
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 65535		; 0000ffffH
	ja	$LN7@handleWrit@3
	cmp	DWORD PTR _key16$[ebp], 0
	jl	$LN7@handleWrit@3
; Line 568
	cmp	DWORD PTR _res16$[ebp], 0
	jl	$LN6@handleWrit@3
	cmp	DWORD PTR _gFormatVersion, 1
	jle	$LN6@handleWrit@3
; Line 570
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, 1342177280				; 50000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 571
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+44]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 572
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36089[ebp], ecx
	jmp	SHORT $LN5@handleWrit@3
$LN4@handleWrit@3:
	mov	eax, DWORD PTR _current$36089[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36089[ebp], ecx
$LN5@handleWrit@3:
	cmp	DWORD PTR _current$36089[ebp], 0
	je	SHORT $LN3@handleWrit@3
; Line 573
	mov	esi, esp
	mov	eax, DWORD PTR _current$36089[ebp]
	movzx	ecx, WORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 574
	jmp	SHORT $LN4@handleWrit@3
$LN3@handleWrit@3:
; Line 575
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes16@ContainerResource@@IAEXPAUSRBRoot@@@Z ; ContainerResource::writeAllRes16
; Line 576
	jmp	SHORT $LN2@handleWrit@3
$LN6@handleWrit@3:
; Line 578
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 2
$LN2@handleWrit@3:
; Line 580
	jmp	SHORT $LN13@handleWrit@3
$LN7@handleWrit@3:
; Line 582
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 4
$LN13@handleWrit@3:
; Line 584
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handleWrite16@TableResource@@UAEXPAUSRBRoot@@@Z ENDP	; TableResource::handleWrite16
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z PROC ; PseudoListResource::handleWrite16, COMDAT
; _this$ = ecx
; Line 587
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 536870912		; 20000000H
; Line 589
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 590
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?handleWrite16@PseudoListResource@@UAEXPAUSRBRoot@@@Z ENDP ; PseudoListResource::handleWrite16
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?write16@SResource@@QAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_poolKeyIndex$36109 = -20				; size = 4
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
?write16@SResource@@QAEXPAUSRBRoot@@@Z PROC		; SResource::write16, COMDAT
; _this$ = ecx
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 594
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jl	SHORT $LN7@write16
; Line 598
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?mapKey@SRBRoot@@QBEHH@Z		; SRBRoot::mapKey
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 602
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jl	SHORT $LN6@write16
; Line 603
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+44]
	jge	SHORT $LN5@write16
; Line 604
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+20], edx
$LN5@write16:
; Line 606
	jmp	SHORT $LN7@write16
$LN6@write16:
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	and	ecx, 2147483647				; 7fffffffH
	mov	DWORD PTR _poolKeyIndex$36109[ebp], ecx
; Line 608
	cmp	DWORD PTR _poolKeyIndex$36109[ebp], 65535 ; 0000ffffH
	jg	SHORT $LN7@write16
; Line 609
	mov	eax, DWORD PTR _bundle$[ebp]
	mov	ecx, DWORD PTR _poolKeyIndex$36109[ebp]
	add	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _poolKeyIndex$36109[ebp], ecx
; Line 610
	cmp	DWORD PTR _poolKeyIndex$36109[ebp], 65535 ; 0000ffffH
	jg	SHORT $LN7@write16
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _poolKeyIndex$36109[ebp]
	mov	DWORD PTR [eax+20], ecx
$LN7@write16:
; Line 623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	SHORT $LN1@write16
; Line 624
	mov	esi, esp
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@write16:
; Line 627
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?makeRes16@SRBRoot@@QBEHI@Z		; SRBRoot::makeRes16
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 628
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?write16@SResource@@QAEXPAUSRBRoot@@@Z ENDP		; SResource::write16
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z PROC	; SResource::handleWrite16, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 633
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?handleWrite16@SResource@@UAEXPAUSRBRoot@@@Z ENDP	; SResource::handleWrite16
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreWrite@StringBaseResource@@UAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?handlePreWrite@StringBaseResource@@UAEXPAI@Z PROC	; StringBaseResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 641
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 643
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	shl	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 2
	or	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 644
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	ecx, DWORD PTR _byteOffset$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*2+6]
	mov	ecx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 645
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@StringBaseResource@@UAEXPAI@Z ENDP	; StringBaseResource::handlePreWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreWrite@IntVectorResource@@UAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?handlePreWrite@IntVectorResource@@UAEXPAI@Z PROC	; IntVectorResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 649
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jne	SHORT $LN2@handlePreW
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN2@handlePreW
; Line 650
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], -536870912		; e0000000H
; Line 651
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 652
	jmp	SHORT $LN3@handlePreW
$LN2@handlePreW:
; Line 653
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 2
	or	ecx, -536870912				; e0000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 654
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@handlePreW:
; Line 656
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@IntVectorResource@@UAEXPAI@Z ENDP	; IntVectorResource::handlePreWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreWrite@BinaryResource@@UAEXPAI@Z
_TEXT	SEGMENT
_dataStart$ = -32					; size = 4
_pad$ = -20						; size = 4
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?handlePreWrite@BinaryResource@@UAEXPAI@Z PROC		; BinaryResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 659
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 660
	mov	DWORD PTR _pad$[ebp], 0
; Line 661
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR _dataStart$[ebp], ecx
; Line 663
	mov	eax, DWORD PTR _dataStart$[ebp]
	xor	edx, edx
	mov	ecx, 16					; 00000010H
	div	ecx
	test	edx, edx
	je	SHORT $LN1@handlePreW@2
; Line 664
	mov	eax, DWORD PTR _dataStart$[ebp]
	xor	edx, edx
	mov	ecx, 16					; 00000010H
	div	ecx
	mov	eax, 16					; 00000010H
	sub	eax, edx
	mov	DWORD PTR _pad$[ebp], eax
; Line 665
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pad$[ebp]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@handlePreW@2:
; Line 667
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 2
	or	ecx, 268435456				; 10000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 668
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 669
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@BinaryResource@@UAEXPAI@Z ENDP		; BinaryResource::handlePreWrite
_TEXT	ENDS
PUBLIC	?preWrite@SResource@@QAEXPAI@Z			; SResource::preWrite
PUBLIC	?preWriteAllRes@ContainerResource@@IAEXPAI@Z	; ContainerResource::preWriteAllRes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?preWriteAllRes@ContainerResource@@IAEXPAI@Z
_TEXT	SEGMENT
_current$36145 = -20					; size = 4
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?preWriteAllRes@ContainerResource@@IAEXPAI@Z PROC	; ContainerResource::preWriteAllRes, COMDAT
; _this$ = ecx
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 673
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36145[ebp], ecx
	jmp	SHORT $LN3@preWriteAl
$LN2@preWriteAl:
	mov	eax, DWORD PTR _current$36145[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36145[ebp], ecx
$LN3@preWriteAl:
	cmp	DWORD PTR _current$36145[ebp], 0
	je	SHORT $LN4@preWriteAl
; Line 674
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _current$36145[ebp]
	call	?preWrite@SResource@@QAEXPAI@Z		; SResource::preWrite
; Line 675
	jmp	SHORT $LN2@preWriteAl
$LN4@preWriteAl:
; Line 676
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?preWriteAllRes@ContainerResource@@IAEXPAI@Z ENDP	; ContainerResource::preWriteAllRes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreWrite@ArrayResource@@UAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?handlePreWrite@ArrayResource@@UAEXPAI@Z PROC		; ArrayResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 679
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 680
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preWriteAllRes@ContainerResource@@IAEXPAI@Z ; ContainerResource::preWriteAllRes
; Line 681
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 2
	or	ecx, -2147483648			; 80000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 682
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 683
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@ArrayResource@@UAEXPAI@Z ENDP		; ArrayResource::handlePreWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handlePreWrite@TableResource@@UAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?handlePreWrite@TableResource@@UAEXPAI@Z PROC		; TableResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 687
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?preWriteAllRes@ContainerResource@@IAEXPAI@Z ; ContainerResource::preWriteAllRes
; Line 688
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+52]
	cmp	ecx, 2
	jne	SHORT $LN2@handlePreW@3
; Line 690
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 2
	or	ecx, 536870912				; 20000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 691
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	imul	ecx, 6
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax+2]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 692
	jmp	SHORT $LN3@handlePreW@3
$LN2@handlePreW@3:
; Line 694
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 2
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 695
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*8+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN3@handlePreW@3:
; Line 697
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@TableResource@@UAEXPAI@Z ENDP		; TableResource::handlePreWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?preWrite@SResource@@QAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_byteOffset$ = 8					; size = 4
?preWrite@SResource@@QAEXPAI@Z PROC			; SResource::preWrite, COMDAT
; _this$ = ecx
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 701
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	je	SHORT $LN1@preWrite
; Line 708
	jmp	SHORT $LN2@preWrite
$LN1@preWrite:
; Line 710
	mov	esi, esp
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 711
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?calcPadding@@YAEI@Z			; calcPadding
	add	esp, 4
	movzx	edx, al
	mov	eax, DWORD PTR _byteOffset$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@preWrite:
; Line 712
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?preWrite@SResource@@QAEXPAI@Z ENDP			; SResource::preWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?calcPadding@@YAEI@Z
_TEXT	SEGMENT
tv68 = -196						; size = 4
_size$ = 8						; size = 4
?calcPadding@@YAEI@Z PROC				; calcPadding, COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	test	edx, edx
	je	SHORT $LN3@calcPaddin
	mov	eax, DWORD PTR _size$[ebp]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	eax, 4
	sub	eax, edx
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@calcPaddin
$LN3@calcPaddin:
	mov	DWORD PTR tv68[ebp], 0
$LN4@calcPaddin:
	mov	al, BYTE PTR tv68[ebp]
; Line 114
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?calcPadding@@YAEI@Z ENDP				; calcPadding
_TEXT	ENDS
PUBLIC	??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA ; `SResource::handlePreWrite'::`2'::__LINE__Var
;	COMDAT ??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@
CONST	SEGMENT
??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@ DB 'F', 00H, 'A', 00H
	DB	'L', 00H, 'S', 00H, 'E', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA DD 02cbH ; `SResource::handlePreWrite'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?handlePreWrite@SResource@@UAEXPAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?handlePreWrite@SResource@@UAEXPAI@Z PROC		; SResource::handlePreWrite, COMDAT
; _this$ = ecx
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 716
	xor	eax, eax
	jne	SHORT $LN1@handlePreW@4
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handlePreWrite@SResource@@UAEXPAI@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@handlePreW@4:
; Line 717
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?handlePreWrite@SResource@@UAEXPAI@Z ENDP		; SResource::handlePreWrite
_TEXT	ENDS
PUBLIC	?getBuffer@StringBaseResource@@QBEPB_WXZ	; StringBaseResource::getBuffer
EXTRN	_udata_writeUString:PROC
EXTRN	_udata_write32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; StringBaseResource::handleWrite, COMDAT
; _this$ = ecx
; Line 724
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 726
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	DWORD PTR _len$[ebp], eax
; Line 727
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 728
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_writeUString
	add	esp, 12					; 0000000cH
; Line 729
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2+6]
	mov	ecx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 731
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@StringBaseResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; StringBaseResource::handleWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getBuffer@StringBaseResource@@QBEPB_WXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBuffer@StringBaseResource@@QBEPB_WXZ PROC		; StringBaseResource::getBuffer, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBuffer@StringBaseResource@@QBEPB_WXZ ENDP		; StringBaseResource::getBuffer
_TEXT	ENDS
PUBLIC	??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA ; `ContainerResource::writeAllRes'::`2'::__LINE__Var
PUBLIC	?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z	; SResource::write
PUBLIC	?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes
;	COMDAT ??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
CONST	SEGMENT
??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ DB 'i'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'f', 00H, 'C', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA DD 02deH ; `ContainerResource::writeAllRes'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_current$36189 = -32					; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z PROC ; ContainerResource::writeAllRes, COMDAT
; _this$ = ecx
; Line 734
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 735
	mov	DWORD PTR _i$[ebp], 0
; Line 736
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36189[ebp], ecx
	jmp	SHORT $LN3@writeAllRe@2
$LN2@writeAllRe@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _current$36189[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _current$36189[ebp], edx
$LN3@writeAllRe@2:
	cmp	DWORD PTR _current$36189[ebp], 0
	je	SHORT $LN1@writeAllRe@2
; Line 737
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _current$36189[ebp]
	call	?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z ; SResource::write
; Line 738
	jmp	SHORT $LN2@writeAllRe@2
$LN1@writeAllRe@2:
; Line 739
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	je	SHORT $LN4@writeAllRe@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z@4JA
	add	edx, 5
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BI@KFIEGPAA@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAf?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@writeAllRe@2:
; Line 740
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ENDP ; ContainerResource::writeAllRes
_TEXT	ENDS
PUBLIC	?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_current$36201 = -20					; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z PROC ; ContainerResource::writeAllRes32, COMDAT
; _this$ = ecx
; Line 743
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36201[ebp], ecx
	jmp	SHORT $LN3@writeAllRe@3
$LN2@writeAllRe@3:
	mov	eax, DWORD PTR _current$36201[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36201[ebp], ecx
$LN3@writeAllRe@3:
	cmp	DWORD PTR _current$36201[ebp], 0
	je	SHORT $LN1@writeAllRe@3
; Line 745
	mov	eax, DWORD PTR _current$36201[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 746
	jmp	SHORT $LN2@writeAllRe@3
$LN1@writeAllRe@3:
; Line 747
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 748
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ENDP ; ContainerResource::writeAllRes32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; ArrayResource::handleWrite, COMDAT
; _this$ = ecx
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 752
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes
; Line 753
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 754
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 755
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes32
; Line 756
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@ArrayResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; ArrayResource::handleWrite
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_i$36215 = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; IntVectorResource::handleWrite, COMDAT
; _this$ = ecx
; Line 759
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 760
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 761
	mov	DWORD PTR _i$36215[ebp], 0
	jmp	SHORT $LN3@handleWrit@4
$LN2@handleWrit@4:
	mov	eax, DWORD PTR _i$36215[ebp]
	add	eax, 1
	mov	DWORD PTR _i$36215[ebp], eax
$LN3@handleWrit@4:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$36215[ebp]
	cmp	ecx, DWORD PTR [eax+44]
	jae	SHORT $LN1@handleWrit@4
; Line 762
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _i$36215[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 763
	jmp	SHORT $LN2@handleWrit@4
$LN1@handleWrit@4:
; Line 764
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 765
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@IntVectorResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; IntVectorResource::handleWrite
_TEXT	ENDS
EXTRN	_udata_writeBlock:PROC
EXTRN	_udata_writePadding:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_dataStart$ = -32					; size = 4
_pad$ = -20						; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; BinaryResource::handleWrite, COMDAT
; _this$ = ecx
; Line 768
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 769
	mov	DWORD PTR _pad$[ebp], 0
; Line 770
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR _dataStart$[ebp], ecx
; Line 772
	mov	eax, DWORD PTR _dataStart$[ebp]
	xor	edx, edx
	mov	ecx, 16					; 00000010H
	div	ecx
	test	edx, edx
	je	SHORT $LN2@handleWrit@5
; Line 773
	mov	eax, DWORD PTR _dataStart$[ebp]
	xor	edx, edx
	mov	ecx, 16					; 00000010H
	div	ecx
	mov	eax, 16					; 00000010H
	sub	eax, edx
	mov	DWORD PTR _pad$[ebp], eax
; Line 774
	mov	eax, DWORD PTR _pad$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_writePadding
	add	esp, 8
; Line 775
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _pad$[ebp]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN2@handleWrit@5:
; Line 778
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	jbe	SHORT $LN1@handleWrit@5
; Line 780
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
$LN1@handleWrit@5:
; Line 782
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 783
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@BinaryResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; BinaryResource::handleWrite
_TEXT	ENDS
EXTRN	_udata_write16:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_current$36241 = -32					; size = 4
_current$36235 = -20					; size = 4
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; TableResource::handleWrite, COMDAT
; _this$ = ecx
; Line 786
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes
; Line 788
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+52]
	cmp	ecx, 2
	jne	$LN9@handleWrit@6
; Line 789
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write16
	add	esp, 8
; Line 790
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36235[ebp], ecx
	jmp	SHORT $LN8@handleWrit@6
$LN7@handleWrit@6:
	mov	eax, DWORD PTR _current$36235[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36235[ebp], ecx
$LN8@handleWrit@6:
	cmp	DWORD PTR _current$36235[ebp], 0
	je	SHORT $LN6@handleWrit@6
; Line 791
	mov	eax, DWORD PTR _current$36235[ebp]
	movzx	ecx, WORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write16
	add	esp, 8
; Line 792
	jmp	SHORT $LN7@handleWrit@6
$LN6@handleWrit@6:
; Line 793
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*2+2]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 794
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	and	ecx, 1
	jne	SHORT $LN5@handleWrit@6
; Line 796
	push	2
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_udata_writePadding
	add	esp, 8
; Line 797
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 2
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN5@handleWrit@6:
; Line 799
	jmp	SHORT $LN4@handleWrit@6
$LN9@handleWrit@6:
; Line 800
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 801
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _current$36241[ebp], ecx
	jmp	SHORT $LN3@handleWrit@6
$LN2@handleWrit@6:
	mov	eax, DWORD PTR _current$36241[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36241[ebp], ecx
$LN3@handleWrit@6:
	cmp	DWORD PTR _current$36241[ebp], 0
	je	SHORT $LN1@handleWrit@6
; Line 802
	mov	eax, DWORD PTR _current$36241[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 803
	jmp	SHORT $LN2@handleWrit@6
$LN1@handleWrit@6:
; Line 804
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*4+4]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], ecx
$LN4@handleWrit@6:
; Line 806
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?writeAllRes32@ContainerResource@@IAEXPAUUNewDataMemory@@PAI@Z ; ContainerResource::writeAllRes32
; Line 807
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@TableResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; TableResource::handleWrite
_TEXT	ENDS
PUBLIC	??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA ; `SResource::write'::`2'::__LINE__Var
;	COMDAT ??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@ DB 'f'
	DB	00H, 'R', 00H, 'e', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'R', 00H, 'E', 00H, 'S', 00H, '_', 00H, 'B', 00H, 'O'
	DB	00H, 'G', 00H, 'U', 00H, 'S', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA DD 032aH ; `SResource::write'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_paddingSize$ = -17					; size = 1
_this$ = -8						; size = 4
_mem$ = 8						; size = 4
_byteOffset$ = 12					; size = 4
?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z PROC	; SResource::write, COMDAT
; _this$ = ecx
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 811
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN2@write
; Line 812
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], -1
	jne	SHORT $LN5@write
	mov	ecx, DWORD PTR ?__LINE__Var@?1??write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CE@CHJMEHIA@?$AAf?$AAR?$AAe?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAR?$AAE?$AAS?$AA_?$AAB?$AAO?$AAG?$AAU?$AAS?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@write:
; Line 813
	jmp	SHORT $LN3@write
$LN2@write:
; Line 815
	mov	esi, esp
	mov	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 816
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?calcPadding@@YAEI@Z			; calcPadding
	add	esp, 4
	mov	BYTE PTR _paddingSize$[ebp], al
; Line 817
	movzx	eax, BYTE PTR _paddingSize$[ebp]
	test	eax, eax
	jle	SHORT $LN1@write
; Line 818
	movzx	eax, BYTE PTR _paddingSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_writePadding
	add	esp, 8
; Line 819
	movzx	eax, BYTE PTR _paddingSize$[ebp]
	mov	ecx, DWORD PTR _byteOffset$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@write:
; Line 821
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
$LN3@write:
; Line 822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z ENDP	; SResource::write
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA ; `SResource::handleWrite'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA DD 0339H ; `SResource::handleWrite'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z PROC ; SResource::handleWrite, COMDAT
; _this$ = ecx
; Line 825
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 826
	xor	eax, eax
	jne	SHORT $LN1@handleWrit@7
	mov	ecx, DWORD PTR ?__LINE__Var@?1??handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z@4JA
	add	ecx, 1
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1M@HCOOECOK@?$AAF?$AAA?$AAL?$AAS?$AAE?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@handleWrit@7:
; Line 827
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?handleWrite@SResource@@UAEXPAUUNewDataMemory@@PAI@Z ENDP ; SResource::handleWrite
_TEXT	ENDS
PUBLIC	??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@ ; `string'
PUBLIC	??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA ; `SRBRoot::write'::`2'::__LINE__Var
PUBLIC	??_C@_03FFIDGLAK@res?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??_C@_04MMBENCGO@?4res?$AA@			; `string'
PUBLIC	?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z ; SRBRoot::compactStringsV2
PUBLIC	?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z	; SRBRoot::compactKeys
PUBLIC	__$ArrayPad$
PUBLIC	?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z	; SRBRoot::write
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_udata_finish:PROC
EXTRN	_computeCRC:PROC
EXTRN	_memset:PROC
EXTRN	_udata_create:PROC
EXTRN	_strcat:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_uhash_close_56:PROC
EXTRN	_uhash_open_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
;	COMDAT ??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@
CONST	SEGMENT
??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@ DB 'genrb '
	DB	'error: wrote %u bytes but counted %u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@ DB 'b'
	DB	00H, 'y', 00H, 't', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, 's', 00H, '.', 00H, 'i', 00H, 's', 00H, 'B', 00H, 'o', 00H
	DB	'g', 00H, 'u', 00H, 's', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA DD 033fH ; `SRBRoot::write'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03FFIDGLAK@res?$AA@
CONST	SEGMENT
??_C@_03FFIDGLAK@res?$AA@ DB 'res', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MMBENCGO@?4res?$AA@
CONST	SEGMENT
??_C@_04MMBENCGO@?4res?$AA@ DB '.res', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z$0
__ehfuncinfo$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_x$36359 = -1348					; size = 2
_count$36355 = -1336					; size = 4
_p$36353 = -1324					; size = 4
_s$36348 = -1312					; size = 64
_checksum$36339 = -1240					; size = 4
_len$36314 = -1228					; size = 4
_off$36313 = -1216					; size = 4
_sum$36300 = -1204					; size = 4
_formatVersion$ = -1192					; size = 4
_sr$36293 = -1180					; size = 4
_current$36289 = -1168					; size = 4
_stringSet$ = -1156					; size = 4
_indexes$ = -1144					; size = 32
_dataName$ = -1104					; size = 1024
_size$ = -72						; size = 4
_top$ = -60						; size = 4
_byteOffset$ = -48					; size = 4
_mem$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_outputDir$ = 8						; size = 4
_outputPkg$ = 12					; size = 4
_writtenFilename$ = 16					; size = 4
_writtenFilenameLen$ = 20				; size = 4
_errorCode$ = 24					; size = 4
?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z PROC	; SRBRoot::write, COMDAT
; _this$ = ecx
; Line 831
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1532				; 000005fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1544]
	mov	ecx, 383				; 0000017fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 832
	mov	DWORD PTR _mem$[ebp], 0
; Line 833
	mov	DWORD PTR _byteOffset$[ebp], 0
; Line 838
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z ; SRBRoot::compactKeys
$LN49@write@2:
; Line 843
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	and	ecx, 3
	je	SHORT $LN48@write@2
; Line 844
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	BYTE PTR [ecx+eax], -86			; ffffffaaH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], edx
; Line 845
	jmp	SHORT $LN49@write@2
$LN48@write@2:
; Line 854
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+28]
	cmp	edx, DWORD PTR [ecx+32]
	jge	SHORT $LN47@write@2
; Line 855
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 65536		; 00010000H
	jg	SHORT $LN46@write@2
; Line 856
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+44], edx
; Line 857
	jmp	SHORT $LN45@write@2
$LN46@write@2:
; Line 858
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 65536		; 00010000H
$LN45@write@2:
; Line 860
	jmp	SHORT $LN44@write@2
$LN47@write@2:
; Line 861
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
$LN44@write@2:
; Line 865
	cmp	DWORD PTR _gFormatVersion, 1
	jle	$LN43@write@2
; Line 866
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ?string_comp@@YACTUElement@@0@Z	; string_comp
	push	OFFSET ?string_comp@@YACTUElement@@0@Z	; string_comp
	push	OFFSET ?string_hash@@YAHTUElement@@@Z	; string_hash
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _stringSet$[ebp], eax
; Line 868
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN42@write@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	$LN42@write@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN42@write@2
; Line 869
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+20]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR _current$36289[ebp], eax
	jmp	SHORT $LN41@write@2
$LN40@write@2:
; Line 871
	mov	eax, DWORD PTR _current$36289[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _current$36289[ebp], ecx
$LN41@write@2:
	cmp	DWORD PTR _current$36289[ebp], 0
	je	SHORT $LN42@write@2
; Line 872
	mov	eax, DWORD PTR _current$36289[ebp]
	mov	DWORD PTR _sr$36293[ebp], eax
; Line 873
	mov	eax, DWORD PTR _sr$36293[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 874
	mov	eax, DWORD PTR _sr$36293[ebp]
	mov	DWORD PTR [eax+120], 0
; Line 875
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sr$36293[ebp]
	push	ecx
	mov	edx, DWORD PTR _sr$36293[ebp]
	push	edx
	mov	eax, DWORD PTR _stringSet$[ebp]
	push	eax
	call	_uhash_put_56
	add	esp, 16					; 00000010H
; Line 876
	jmp	SHORT $LN40@write@2
$LN42@write@2:
; Line 878
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?preflightStrings@SResource@@QAEXPAUSRBRoot@@PAUUHashtable@@AAW4UErrorCode@@@Z ; SResource::preflightStrings
; Line 879
	jmp	SHORT $LN38@write@2
$LN43@write@2:
; Line 880
	mov	DWORD PTR _stringSet$[ebp], 0
$LN38@write@2:
; Line 882
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	cmp	ecx, 1
	jne	SHORT $LN37@write@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jle	SHORT $LN37@write@2
; Line 883
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z ; SRBRoot::compactStringsV2
$LN37@write@2:
; Line 885
	mov	eax, DWORD PTR _stringSet$[ebp]
	push	eax
	call	_uhash_close_56
	add	esp, 4
; Line 886
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN36@write@2
; Line 887
	jmp	$LN50@write@2
$LN36@write@2:
; Line 890
	mov	eax, DWORD PTR _gFormatVersion
	mov	DWORD PTR _formatVersion$[ebp], eax
; Line 891
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	$LN35@write@2
; Line 892
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+128]
	mov	DWORD PTR _sum$36300[ebp], ecx
; Line 893
	mov	eax, DWORD PTR _sum$36300[ebp]
	sub	eax, 1
	cmp	eax, 268435455				; 0fffffffH
	jle	SHORT $LN34@write@2
; Line 894
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 895
	jmp	$LN50@write@2
$LN34@write@2:
; Line 897
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+120], 65536		; 00010000H
	jge	SHORT $LN33@write@2
	cmp	DWORD PTR _sum$36300[ebp], 65536	; 00010000H
	jg	SHORT $LN33@write@2
; Line 899
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+124], edx
; Line 900
	jmp	SHORT $LN32@write@2
$LN33@write@2:
; Line 904
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+120]
	cdq
	push	0
	push	65535					; 0000ffffH
	push	edx
	push	eax
	call	__allmul
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _sum$36300[ebp]
	cdq
	push	edx
	push	eax
	push	esi
	push	ecx
	call	__alldiv
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+124], eax
$LN32@write@2:
; Line 905
	jmp	SHORT $LN31@write@2
$LN35@write@2:
; Line 906
	movsx	eax, BYTE PTR _gIsDefaultFormatVersion
	test	eax, eax
	je	SHORT $LN31@write@2
	cmp	DWORD PTR _formatVersion$[ebp], 3
	jne	SHORT $LN31@write@2
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	jne	SHORT $LN31@write@2
; Line 911
	mov	DWORD PTR _formatVersion$[ebp], 2
$LN31@write@2:
; Line 914
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?write16@SResource@@QAEXPAUSRBRoot@@@Z	; SResource::write16
; Line 915
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN29@write@2
; Line 916
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 917
	jmp	$LN50@write@2
$LN29@write@2:
; Line 919
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	and	eax, 1
	je	SHORT $LN28@write@2
; Line 920
	mov	esi, esp
	push	43690					; 0000aaaaH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@write@2:
; Line 923
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 924
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 926
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _byteOffset$[ebp], eax
; Line 927
	lea	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?preWrite@SResource@@QAEXPAI@Z		; SResource::preWrite
; Line 930
	mov	eax, DWORD PTR _byteOffset$[ebp]
	mov	DWORD PTR _top$[ebp], eax
; Line 932
	cmp	DWORD PTR _writtenFilename$[ebp], 0
	je	SHORT $LN27@write@2
	cmp	DWORD PTR _writtenFilenameLen$[ebp], 0
	je	SHORT $LN27@write@2
; Line 933
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	mov	BYTE PTR [eax], 0
$LN27@write@2:
; Line 936
	cmp	DWORD PTR _writtenFilename$[ebp], 0
	je	$LN26@write@2
; Line 937
	mov	DWORD PTR _off$36313[ebp], 0
	mov	DWORD PTR _len$36314[ebp], 0
; Line 938
	cmp	DWORD PTR _outputDir$[ebp], 0
	je	SHORT $LN25@write@2
; Line 939
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$36314[ebp], eax
; Line 940
	mov	eax, DWORD PTR _len$36314[ebp]
	cmp	eax, DWORD PTR _writtenFilenameLen$[ebp]
	jle	SHORT $LN24@write@2
; Line 941
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	mov	DWORD PTR _len$36314[ebp], eax
$LN24@write@2:
; Line 943
	push	1
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _len$36314[ebp]
	push	ecx
	mov	edx, DWORD PTR _outputDir$[ebp]
	push	edx
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN25@write@2:
; Line 945
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	sub	eax, DWORD PTR _len$36314[ebp]
	mov	DWORD PTR _writtenFilenameLen$[ebp], eax
	je	$LN26@write@2
; Line 946
	mov	eax, DWORD PTR _off$36313[ebp]
	add	eax, DWORD PTR _len$36314[ebp]
	mov	DWORD PTR _off$36313[ebp], eax
; Line 947
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	add	eax, DWORD PTR _off$36313[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
; Line 948
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _writtenFilenameLen$[ebp], eax
	je	$LN26@write@2
; Line 949
	mov	eax, DWORD PTR _off$36313[ebp]
	add	eax, 1
	mov	DWORD PTR _off$36313[ebp], eax
; Line 950
	cmp	DWORD PTR _outputPkg$[ebp], 0
	je	SHORT $LN21@write@2
; Line 952
	mov	eax, DWORD PTR _outputPkg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writtenFilename$[ebp]
	add	ecx, DWORD PTR _off$36313[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 953
	mov	eax, DWORD PTR _outputPkg$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _off$36313[ebp]
	mov	DWORD PTR _off$36313[ebp], eax
; Line 954
	mov	eax, DWORD PTR _writtenFilename$[ebp]
	add	eax, DWORD PTR _off$36313[ebp]
	mov	BYTE PTR [eax], 95			; 0000005fH
; Line 955
	mov	eax, DWORD PTR _off$36313[ebp]
	add	eax, 1
	mov	DWORD PTR _off$36313[ebp], eax
$LN21@write@2:
; Line 958
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$36314[ebp], eax
; Line 959
	mov	eax, DWORD PTR _len$36314[ebp]
	cmp	eax, DWORD PTR _writtenFilenameLen$[ebp]
	jle	SHORT $LN20@write@2
; Line 960
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	mov	DWORD PTR _len$36314[ebp], eax
$LN20@write@2:
; Line 962
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	edx, DWORD PTR _len$36314[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _writtenFilename$[ebp]
	add	edx, DWORD PTR _off$36313[ebp]
	push	edx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 963
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	sub	eax, DWORD PTR _len$36314[ebp]
	mov	DWORD PTR _writtenFilenameLen$[ebp], eax
	je	SHORT $LN26@write@2
; Line 964
	mov	eax, DWORD PTR _off$36313[ebp]
	add	eax, DWORD PTR _len$36314[ebp]
	mov	DWORD PTR _off$36313[ebp], eax
; Line 965
	mov	DWORD PTR _len$36314[ebp], 5
; Line 966
	mov	eax, DWORD PTR _len$36314[ebp]
	cmp	eax, DWORD PTR _writtenFilenameLen$[ebp]
	jle	SHORT $LN18@write@2
; Line 967
	mov	eax, DWORD PTR _writtenFilenameLen$[ebp]
	mov	DWORD PTR _len$36314[ebp], eax
$LN18@write@2:
; Line 969
	push	1
	push	OFFSET ??_C@_04MMBENCGO@?4res?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	eax, DWORD PTR _len$36314[ebp]
	push	eax
	push	OFFSET ??_C@_04MMBENCGO@?4res?$AA@
	mov	ecx, DWORD PTR _writtenFilename$[ebp]
	add	ecx, DWORD PTR _off$36313[ebp]
	push	ecx
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@write@2:
; Line 975
	cmp	DWORD PTR _outputPkg$[ebp], 0
	je	SHORT $LN17@write@2
; Line 977
	mov	eax, DWORD PTR _outputPkg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 978
	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	lea	eax, DWORD PTR _dataName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 979
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _dataName$[ebp]
	push	edx
	call	_strcat
	add	esp, 8
; Line 981
	jmp	SHORT $LN16@write@2
$LN17@write@2:
; Line 983
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _dataName$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN16@write@2:
; Line 986
	push	1
	mov	eax, DWORD PTR _formatVersion$[ebp]
	lea	ecx, DWORD PTR _gFormatVersions[eax*4]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	mov	edx, DWORD PTR _formatVersion$[ebp]
	lea	eax, DWORD PTR _gFormatVersions[edx*4]
	push	eax
	push	OFFSET _dataInfo+12
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 989
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _gIncludeCopyright
	sub	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	not	ecx
	and	ecx, OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	ecx
	push	OFFSET _dataInfo
	lea	edx, DWORD PTR _dataName$[ebp]
	push	edx
	push	OFFSET ??_C@_03FFIDGLAK@res?$AA@
	mov	eax, DWORD PTR _outputDir$[ebp]
	push	eax
	call	_udata_create
	add	esp, 24					; 00000018H
	mov	DWORD PTR _mem$[ebp], eax
; Line 990
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@write@2
; Line 991
	jmp	$LN50@write@2
$LN15@write@2:
; Line 995
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
; Line 1002
	push	32					; 00000020H
	push	0
	lea	eax, DWORD PTR _indexes$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1003
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _indexes$[ebp], ecx
; Line 1004
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sar	ecx, 2
	mov	DWORD PTR _indexes$[ebp+4], ecx
; Line 1005
	mov	eax, DWORD PTR _top$[ebp]
	shr	eax, 2
	mov	DWORD PTR _indexes$[ebp+8], eax
; Line 1006
	mov	eax, DWORD PTR _indexes$[ebp+8]
	mov	DWORD PTR _indexes$[ebp+12], eax
; Line 1007
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _indexes$[ebp+16], ecx
; Line 1014
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN14@write@2
; Line 1015
	mov	DWORD PTR _indexes$[ebp+20], 1
$LN14@write@2:
; Line 1021
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 6
	jle	SHORT $LN13@write@2
; Line 1022
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+32]
	sar	esi, 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sar	eax, 1
	add	esi, eax
	mov	DWORD PTR _indexes$[ebp+24], esi
$LN13@write@2:
; Line 1024
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 7
	jle	$LN12@write@2
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	$LN11@write@2
; Line 1026
	mov	eax, DWORD PTR _indexes$[ebp+20]
	or	eax, 3
	mov	DWORD PTR _indexes$[ebp+20], eax
; Line 1028
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	sub	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	push	ecx
	call	_computeCRC
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _checksum$36339[ebp], eax
; Line 1029
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jg	SHORT $LN10@write@2
	jmp	$LN9@write@2
$LN10@write@2:
; Line 1031
	xor	eax, eax
	je	SHORT $LN8@write@2
; Line 1033
	mov	eax, DWORD PTR _checksum$36339[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_computeCRC
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _checksum$36339[ebp], eax
; Line 1034
	jmp	$LN9@write@2
$LN8@write@2:
; Line 1037
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1038
	mov	esi, esp
	push	1
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1039
	mov	esi, esp
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN52@write@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA
	add	ecx, 208				; 000000d0H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BK@FLPIONDA@?$AA?$CB?$AAs?$AA?4?$AAi?$AAs?$AAB?$AAo?$AAg?$AAu?$AAs?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN52@write@2:
; Line 1040
	mov	esi, esp
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$36353[ebp], eax
; Line 1041
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$36355[ebp], eax
	jmp	SHORT $LN6@write@2
$LN5@write@2:
	mov	eax, DWORD PTR _count$36355[ebp]
	sub	eax, 1
	mov	DWORD PTR _count$36355[ebp], eax
$LN6@write@2:
	cmp	DWORD PTR _count$36355[ebp], 0
	jle	SHORT $LN4@write@2
; Line 1042
	mov	eax, DWORD PTR _p$36353[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _x$36359[ebp], cx
; Line 1043
	movzx	eax, WORD PTR _x$36359[ebp]
	shl	eax, 8
	movzx	ecx, WORD PTR _x$36359[ebp]
	sar	ecx, 8
	or	eax, ecx
	mov	edx, DWORD PTR _p$36353[ebp]
	mov	WORD PTR [edx], ax
	mov	eax, DWORD PTR _p$36353[ebp]
	add	eax, 2
	mov	DWORD PTR _p$36353[ebp], eax
; Line 1044
	jmp	SHORT $LN5@write@2
$LN4@write@2:
; Line 1046
	mov	eax, DWORD PTR _checksum$36339[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _p$36353[ebp]
	push	ecx
	call	_computeCRC
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _checksum$36339[ebp], eax
; Line 1047
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@write@2:
; Line 1048
	mov	eax, DWORD PTR _checksum$36339[ebp]
	mov	DWORD PTR _indexes$[ebp+28], eax
	jmp	SHORT $LN12@write@2
$LN11@write@2:
; Line 1049
	movsx	eax, BYTE PTR _gUsePoolBundle
	test	eax, eax
	je	SHORT $LN12@write@2
; Line 1050
	mov	eax, DWORD PTR _indexes$[ebp+20]
	or	eax, 4
	mov	DWORD PTR _indexes$[ebp+20], eax
; Line 1051
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR _indexes$[ebp+28], edx
$LN12@write@2:
; Line 1056
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	shl	ecx, 8
	or	ecx, DWORD PTR _indexes$[ebp]
	mov	DWORD PTR _indexes$[ebp], ecx
; Line 1057
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	sar	ecx, 12					; 0000000cH
	and	ecx, 61440				; 0000f000H
	or	ecx, DWORD PTR _indexes$[ebp+20]
	mov	DWORD PTR _indexes$[ebp+20], ecx
; Line 1058
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	shl	ecx, 16					; 00000010H
	or	ecx, DWORD PTR _indexes$[ebp+20]
	mov	DWORD PTR _indexes$[ebp+20], ecx
; Line 1061
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shl	ecx, 2
	push	ecx
	lea	edx, DWORD PTR _indexes$[ebp]
	push	edx
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1065
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	sub	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	push	ecx
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1068
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1071
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	lea	eax, DWORD PTR [edx+eax*2]
	mov	DWORD PTR _byteOffset$[ebp], eax
; Line 1072
	lea	eax, DWORD PTR _byteOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?write@SResource@@QAEXPAUUNewDataMemory@@PAI@Z ; SResource::write
; Line 1073
	mov	eax, DWORD PTR _byteOffset$[ebp]
	cmp	eax, DWORD PTR _top$[ebp]
	je	SHORT $LN53@write@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z@4JA
	add	ecx, 242				; 000000f2H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CE@GCLAAIOL@?$AAb?$AAy?$AAt?$AAe?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAo?$AAp?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@write@2:
; Line 1075
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_finish
	add	esp, 8
	mov	DWORD PTR _size$[ebp], eax
; Line 1076
	mov	eax, DWORD PTR _top$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN50@write@2
; Line 1078
	mov	esi, esp
	mov	eax, DWORD PTR _top$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CM@MMAKLGBL@genrb?5error?3?5wrote?5?$CFu?5bytes?5but?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1079
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 5
$LN50@write@2:
; Line 1081
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN61@write@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1544				; 00000608H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN61@write@2:
	DD	4
	DD	$LN60@write@2
$LN60@write@2:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN55@write@2
	DD	-1104					; fffffbb0H
	DD	1024					; 00000400H
	DD	$LN56@write@2
	DD	-1144					; fffffb88H
	DD	32					; 00000020H
	DD	$LN57@write@2
	DD	-1312					; fffffae0H
	DD	64					; 00000040H
	DD	$LN58@write@2
$LN58@write@2:
	DB	115					; 00000073H
	DB	0
$LN57@write@2:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN56@write@2:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN55@write@2:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$36348[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1548]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?write@SRBRoot@@QAEXPBD0PADHAAW4UErrorCode@@@Z ENDP	; SRBRoot::write
EXTRN	__imp_?hashCode@UnicodeString@icu_56@@QBEHXZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?string_hash@@YAHTUElement@@@Z
_TEXT	SEGMENT
_res$ = -8						; size = 4
_key$ = 8						; size = 4
?string_hash@@YAHTUElement@@@Z PROC			; string_hash, COMDAT
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 306
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _res$[ebp], eax
; Line 307
	mov	ecx, DWORD PTR _res$[ebp]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?hashCode@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?string_hash@@YAHTUElement@@@Z ENDP			; string_hash
_TEXT	ENDS
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?string_comp@@YACTUElement@@0@Z
_TEXT	SEGMENT
_res2$ = -20						; size = 4
_res1$ = -8						; size = 4
_key1$ = 8						; size = 4
_key2$ = 12						; size = 4
?string_comp@@YACTUElement@@0@Z PROC			; string_comp, COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	mov	eax, DWORD PTR _key1$[ebp]
	mov	DWORD PTR _res1$[ebp], eax
; Line 313
	mov	eax, DWORD PTR _key2$[ebp]
	mov	DWORD PTR _res2$[ebp], eax
; Line 314
	mov	eax, DWORD PTR _res2$[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _res1$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?string_comp@@YACTUElement@@0@Z ENDP			; string_comp
_TEXT	ENDS
PUBLIC	??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<TableResource>::~LocalPointer<TableResource>
PUBLIC	?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ ; icu_56::LocalPointerBase<TableResource>::orphan
PUBLIC	??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<TableResource>::LocalPointer<TableResource>
PUBLIC	??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; TableResource::TableResource
PUBLIC	_table_open
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _table_open
_TEXT	SEGMENT
tv90 = -244						; size = 4
tv78 = -244						; size = 4
$T44500 = -236						; size = 4
$T44501 = -224						; size = 4
$T44504 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_status$ = 20						; size = 4
_table_open PROC					; COMDAT
; Line 1085
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1086
	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44501[ebp], eax
	cmp	DWORD PTR $T44501[ebp], 0
	je	SHORT $LN3@table_open
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44501[ebp]
	call	??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; TableResource::TableResource
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@table_open
$LN3@table_open:
	mov	DWORD PTR tv78[ebp], 0
$LN4@table_open:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T44500[ebp], ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T44500[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<TableResource>::LocalPointer<TableResource>
; Line 1087
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@table_open
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ ; icu_56::LocalPointerBase<TableResource>::orphan
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@table_open
$LN5@table_open:
	mov	DWORD PTR tv90[ebp], 0
$LN6@table_open:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T44504[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<TableResource>::~LocalPointer<TableResource>
	mov	eax, DWORD PTR $T44504[ebp]
; Line 1088
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@table_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@table_open:
	DD	1
	DD	$LN8@table_open
$LN8@table_open:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@table_open
$LN7@table_open:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_table_open ENDP
_TEXT	ENDS
PUBLIC	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_errorCode$ = 20					; size = 4
??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z PROC ; TableResource::TableResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TableResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+52], 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bundle$[ebp]
	mov	DWORD PTR [eax+56], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ENDP ; TableResource::TableResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_type$ = 16						; size = 1
_comment$ = 20						; size = 4
_errorCode$ = 24					; size = 4
??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z PROC ; ContainerResource::ContainerResource, COMDAT
; _this$ = ecx
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _type$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; SResource::SResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ContainerResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ENDP ; ContainerResource::ContainerResource
_TEXT	ENDS
PUBLIC	??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<ArrayResource>::~LocalPointer<ArrayResource>
PUBLIC	?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ ; icu_56::LocalPointerBase<ArrayResource>::orphan
PUBLIC	??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<ArrayResource>::LocalPointer<ArrayResource>
PUBLIC	??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; ArrayResource::ArrayResource
PUBLIC	_array_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _array_open
_TEXT	SEGMENT
tv90 = -244						; size = 4
tv78 = -244						; size = 4
$T44518 = -236						; size = 4
$T44519 = -224						; size = 4
$T44522 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_status$ = 20						; size = 4
_array_open PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1090
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1091
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44519[ebp], eax
	cmp	DWORD PTR $T44519[ebp], 0
	je	SHORT $LN3@array_open
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44519[ebp]
	call	??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; ArrayResource::ArrayResource
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@array_open
$LN3@array_open:
	mov	DWORD PTR tv78[ebp], 0
$LN4@array_open:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T44518[ebp], ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T44518[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<ArrayResource>::LocalPointer<ArrayResource>
; Line 1092
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@array_open
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ ; icu_56::LocalPointerBase<ArrayResource>::orphan
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@array_open
$LN5@array_open:
	mov	DWORD PTR tv90[ebp], 0
$LN6@array_open:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T44522[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<ArrayResource>::~LocalPointer<ArrayResource>
	mov	eax, DWORD PTR $T44522[ebp]
; Line 1093
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@array_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@array_open:
	DD	1
	DD	$LN8@array_open
$LN8@array_open:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@array_open
$LN7@array_open:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_array_open ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_errorCode$ = 20					; size = 4
??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z PROC ; ArrayResource::ArrayResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7ArrayResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0ArrayResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ENDP ; ArrayResource::ArrayResource
_TEXT	ENDS
PUBLIC	??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ	; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
PUBLIC	?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ; icu_56::LocalPointerBase<SResource>::orphan
PUBLIC	??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
PUBLIC	??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ; StringResource::StringResource
PUBLIC	_string_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _string_open
_TEXT	SEGMENT
tv128 = -244						; size = 4
tv83 = -244						; size = 4
$T44533 = -236						; size = 4
$T44534 = -224						; size = 4
$T44537 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_len$ = 20						; size = 4
_comment$ = 24						; size = 4
_status$ = 28						; size = 4
_string_open PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1095
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1097
	push	128					; 00000080H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44534[ebp], eax
	cmp	DWORD PTR $T44534[ebp], 0
	je	SHORT $LN3@string_ope
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T44534[ebp]
	call	??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ; StringResource::StringResource
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@string_ope
$LN3@string_ope:
	mov	DWORD PTR tv83[ebp], 0
$LN4@string_ope:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T44533[ebp], eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T44533[ebp]
	push	edx
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
; Line 1098
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@string_ope
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ; icu_56::LocalPointerBase<SResource>::orphan
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN6@string_ope
$LN5@string_ope:
	mov	DWORD PTR tv128[ebp], 0
$LN6@string_ope:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T44537[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
	mov	eax, DWORD PTR $T44537[ebp]
; Line 1099
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@string_ope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@string_ope:
	DD	1
	DD	$LN8@string_ope
$LN8@string_ope:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@string_ope
$LN7@string_ope:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_string_open ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_len$ = 20						; size = 4
_comment$ = 24						; size = 4
_errorCode$ = 28					; size = 4
??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z PROC ; StringResource::StringResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0StringResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ENDP ; StringResource::StringResource
_TEXT	ENDS
PUBLIC	??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ; AliasResource::AliasResource
PUBLIC	_alias_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _alias_open
_TEXT	SEGMENT
tv128 = -244						; size = 4
tv83 = -244						; size = 4
$T44548 = -236						; size = 4
$T44549 = -224						; size = 4
$T44552 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_len$ = 20						; size = 4
_comment$ = 24						; size = 4
_status$ = 28						; size = 4
_alias_open PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1101
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1103
	push	108					; 0000006cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44549[ebp], eax
	cmp	DWORD PTR $T44549[ebp], 0
	je	SHORT $LN3@alias_open
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T44549[ebp]
	call	??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ; AliasResource::AliasResource
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@alias_open
$LN3@alias_open:
	mov	DWORD PTR tv83[ebp], 0
$LN4@alias_open:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T44548[ebp], eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	edx, DWORD PTR $T44548[ebp]
	push	edx
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
; Line 1104
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@alias_open
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ; icu_56::LocalPointerBase<SResource>::orphan
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN6@alias_open
$LN5@alias_open:
	mov	DWORD PTR tv128[ebp], 0
$LN6@alias_open:
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR $T44552[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
	mov	eax, DWORD PTR $T44552[ebp]
; Line 1105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@alias_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@alias_open:
	DD	1
	DD	$LN8@alias_open
$LN8@alias_open:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@alias_open
$LN7@alias_open:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_alias_open ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_len$ = 20						; size = 4
_comment$ = 24						; size = 4
_errorCode$ = 28					; size = 4
??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z PROC ; AliasResource::AliasResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 356
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0StringBaseResource@@QAE@PAUSRBRoot@@PBDCPB_WHPBUUString@@AAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7AliasResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
??0AliasResource@@QAE@PAUSRBRoot@@PBDPB_WHPBUUString@@AAW4UErrorCode@@@Z ENDP ; AliasResource::AliasResource
_TEXT	ENDS
PUBLIC	??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<IntVectorResource>::~LocalPointer<IntVectorResource>
PUBLIC	?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ ; icu_56::LocalPointerBase<IntVectorResource>::orphan
PUBLIC	??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<IntVectorResource>::LocalPointer<IntVectorResource>
PUBLIC	_intvector_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _intvector_open
_TEXT	SEGMENT
tv90 = -244						; size = 4
tv78 = -244						; size = 4
$T44563 = -236						; size = 4
$T44564 = -224						; size = 4
$T44567 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_comment$ = 16						; size = 4
_status$ = 20						; size = 4
_intvector_open PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1107
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1109
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44564[ebp], eax
	cmp	DWORD PTR $T44564[ebp], 0
	je	SHORT $LN3@intvector_
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44564[ebp]
	call	??0IntVectorResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; IntVectorResource::IntVectorResource
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN4@intvector_
$LN3@intvector_:
	mov	DWORD PTR tv78[ebp], 0
$LN4@intvector_:
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T44563[ebp], ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T44563[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<IntVectorResource>::LocalPointer<IntVectorResource>
; Line 1110
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@intvector_
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ ; icu_56::LocalPointerBase<IntVectorResource>::orphan
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN6@intvector_
$LN5@intvector_:
	mov	DWORD PTR tv90[ebp], 0
$LN6@intvector_:
	mov	eax, DWORD PTR tv90[ebp]
	mov	DWORD PTR $T44567[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<IntVectorResource>::~LocalPointer<IntVectorResource>
	mov	eax, DWORD PTR $T44567[ebp]
; Line 1111
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@intvector_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@intvector_:
	DD	1
	DD	$LN8@intvector_
$LN8@intvector_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@intvector_
$LN7@intvector_:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_intvector_open ENDP
_TEXT	ENDS
PUBLIC	_int_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _int_open
_TEXT	SEGMENT
tv95 = -244						; size = 4
tv82 = -244						; size = 4
$T44575 = -236						; size = 4
$T44576 = -224						; size = 4
$T44579 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_value$ = 16						; size = 4
_comment$ = 20						; size = 4
_status$ = 24						; size = 4
_int_open PROC						; COMDAT
; Line 1113
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1114
	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44576[ebp], eax
	cmp	DWORD PTR $T44576[ebp], 0
	je	SHORT $LN3@int_open
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T44576[ebp]
	call	??0IntResource@@QAE@PAUSRBRoot@@PBDHPBUUString@@AAW4UErrorCode@@@Z ; IntResource::IntResource
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN4@int_open
$LN3@int_open:
	mov	DWORD PTR tv82[ebp], 0
$LN4@int_open:
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR $T44575[ebp], edx
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44575[ebp]
	push	ecx
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
; Line 1115
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@int_open
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ; icu_56::LocalPointerBase<SResource>::orphan
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN6@int_open
$LN5@int_open:
	mov	DWORD PTR tv95[ebp], 0
$LN6@int_open:
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T44579[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
	mov	eax, DWORD PTR $T44579[ebp]
; Line 1116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@int_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@int_open:
	DD	1
	DD	$LN8@int_open
$LN8@int_open:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@int_open
$LN7@int_open:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_int_open ENDP
_TEXT	ENDS
PUBLIC	_bin_open
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _bin_open
_TEXT	SEGMENT
tv129 = -244						; size = 4
tv84 = -244						; size = 4
$T44587 = -236						; size = 4
$T44588 = -224						; size = 4
$T44591 = -212						; size = 4
_res$ = -8						; size = 4
_bundle$ = 8						; size = 4
_tag$ = 12						; size = 4
_length$ = 16						; size = 4
_data$ = 20						; size = 4
_fileName$ = 24						; size = 4
_comment$ = 28						; size = 4
_status$ = 32						; size = 4
_bin_open PROC						; COMDAT
; Line 1118
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1120
	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44588[ebp], eax
	cmp	DWORD PTR $T44588[ebp], 0
	je	SHORT $LN3@bin_open
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	eax, DWORD PTR _bundle$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44588[ebp]
	call	??0BinaryResource@@QAE@PAUSRBRoot@@PBDIPAE1PBUUString@@AAW4UErrorCode@@@Z ; BinaryResource::BinaryResource
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@bin_open
$LN3@bin_open:
	mov	DWORD PTR tv84[ebp], 0
$LN4@bin_open:
	mov	ecx, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T44587[ebp], ecx
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	mov	eax, DWORD PTR $T44587[ebp]
	push	eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
; Line 1121
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@bin_open
	lea	ecx, DWORD PTR _res$[ebp]
	call	?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ; icu_56::LocalPointerBase<SResource>::orphan
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN6@bin_open
$LN5@bin_open:
	mov	DWORD PTR tv129[ebp], 0
$LN6@bin_open:
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T44591[ebp], eax
	lea	ecx, DWORD PTR _res$[ebp]
	call	??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
	mov	eax, DWORD PTR $T44591[ebp]
; Line 1122
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@bin_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@bin_open:
	DD	1
	DD	$LN8@bin_open
$LN8@bin_open:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@bin_open
$LN7@bin_open:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_bin_open ENDP
_TEXT	ENDS
PUBLIC	??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ; PseudoListResource::PseudoListResource
PUBLIC	??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z	; SRBRoot::SRBRoot
EXTRN	_uprv_malloc_56:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$2
__ehfuncinfo$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv160 = -268						; size = 4
tv145 = -268						; size = 4
$T44599 = -260						; size = 4
$T44600 = -248						; size = 4
$T44603 = -236						; size = 4
$T44604 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_comment$ = 8						; size = 4
_isPoolBundle$ = 12					; size = 1
_errorCode$ = 16					; size = 4
??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z PROC	; SRBRoot::SRBRoot, COMDAT
; _this$ = ecx
; Line 1132
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _isPoolBundle$[ebp]
	mov	BYTE PTR [eax+18], cl
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+44], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], OFFSET _kNoPoolBundle
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+124], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 1133
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN14@SRBRoot@2
; Line 1134
	jmp	$LN15@SRBRoot@2
$LN14@SRBRoot@2:
; Line 1137
	cmp	DWORD PTR _gFormatVersion, 1
	jle	SHORT $LN13@SRBRoot@2
; Line 1140
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@SRBRoot@2:
; Line 1143
	push	65536					; 00010000H
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1144
	movsx	eax, BYTE PTR _isPoolBundle$[ebp]
	test	eax, eax
	je	SHORT $LN12@SRBRoot@2
; Line 1145
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44600[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T44600[ebp], 0
	je	SHORT $LN17@SRBRoot@2
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T44600[ebp]
	call	??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ; PseudoListResource::PseudoListResource
	mov	DWORD PTR tv145[ebp], eax
	jmp	SHORT $LN18@SRBRoot@2
$LN17@SRBRoot@2:
	mov	DWORD PTR tv145[ebp], 0
$LN18@SRBRoot@2:
	mov	edx, DWORD PTR tv145[ebp]
	mov	DWORD PTR $T44599[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T44599[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1146
	jmp	SHORT $LN11@SRBRoot@2
$LN12@SRBRoot@2:
; Line 1147
	push	60					; 0000003cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44604[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T44604[ebp], 0
	je	SHORT $LN19@SRBRoot@2
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T44604[ebp]
	call	??0TableResource@@QAE@PAUSRBRoot@@PBDPBUUString@@AAW4UErrorCode@@@Z ; TableResource::TableResource
	mov	DWORD PTR tv160[ebp], eax
	jmp	SHORT $LN20@SRBRoot@2
$LN19@SRBRoot@2:
	mov	DWORD PTR tv160[ebp], 0
$LN20@SRBRoot@2:
	mov	eax, DWORD PTR tv160[ebp]
	mov	DWORD PTR $T44603[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T44603[ebp]
	mov	DWORD PTR [ecx], edx
$LN11@SRBRoot@2:
; Line 1149
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN9@SRBRoot@2
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN9@SRBRoot@2
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@SRBRoot@2
$LN9@SRBRoot@2:
; Line 1150
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@SRBRoot@2
; Line 1151
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN8@SRBRoot@2:
; Line 1153
	jmp	$LN15@SRBRoot@2
$LN10@SRBRoot@2:
; Line 1156
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 65536		; 00010000H
; Line 1158
	movsx	eax, BYTE PTR _gUsePoolBundle
	test	eax, eax
	jne	SHORT $LN6@SRBRoot@2
	movsx	eax, BYTE PTR _isPoolBundle$[ebp]
	test	eax, eax
	je	SHORT $LN7@SRBRoot@2
$LN6@SRBRoot@2:
; Line 1159
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 8
	jmp	SHORT $LN5@SRBRoot@2
$LN7@SRBRoot@2:
; Line 1160
	cmp	DWORD PTR _gFormatVersion, 2
	jl	SHORT $LN4@SRBRoot@2
; Line 1161
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 7
; Line 1162
	jmp	SHORT $LN5@SRBRoot@2
$LN4@SRBRoot@2:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 6
$LN5@SRBRoot@2:
; Line 1165
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [ecx*4+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], edx
; Line 1166
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+32], edx
; Line 1169
	cmp	DWORD PTR _gFormatVersion, 1
	jne	SHORT $LN2@SRBRoot@2
; Line 1170
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 0
; Line 1171
	jmp	SHORT $LN15@SRBRoot@2
$LN2@SRBRoot@2:
; Line 1172
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+17], 1
$LN15@SRBRoot@2:
; Line 1174
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T44600[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z$2:
	mov	eax, DWORD PTR $T44604[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SRBRoot@@QAE@PBUUString@@CAAW4UErrorCode@@@Z ENDP	; SRBRoot::SRBRoot
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z PROC ; PseudoListResource::PseudoListResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	2
	push	0
	mov	ecx, DWORD PTR _bundle$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ContainerResource@@QAE@PAUSRBRoot@@PBDCPBUUString@@AAW4UErrorCode@@@Z ; ContainerResource::ContainerResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PseudoListResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0PseudoListResource@@QAE@PAUSRBRoot@@AAW4UErrorCode@@@Z ENDP ; PseudoListResource::PseudoListResource
_TEXT	ENDS
PUBLIC	_res_close
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _res_close
_TEXT	SEGMENT
tv70 = -220						; size = 4
$T44621 = -212						; size = 4
$T44622 = -200						; size = 4
_res$ = 8						; size = 4
_res_close PROC						; COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1178
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1179
	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR $T44622[ebp], eax
	mov	ecx, DWORD PTR $T44622[ebp]
	mov	DWORD PTR $T44621[ebp], ecx
	cmp	DWORD PTR $T44621[ebp], 0
	je	SHORT $LN3@res_close
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T44621[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T44621[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN1@res_close
$LN3@res_close:
	mov	DWORD PTR tv70[ebp], 0
$LN1@res_close:
; Line 1180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_res_close ENDP
_TEXT	ENDS
PUBLIC	??1SRBRoot@@QAE@XZ				; SRBRoot::~SRBRoot
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SRBRoot@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SRBRoot@@QAE@XZ$0
__ehfuncinfo$??1SRBRoot@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SRBRoot@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1SRBRoot@@QAE@XZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T44627 = -236						; size = 4
$T44628 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1SRBRoot@@QAE@XZ PROC					; SRBRoot::~SRBRoot, COMDAT
; _this$ = ecx
; Line 1182
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SRBRoot@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1183
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44628[ebp], ecx
	mov	edx, DWORD PTR $T44628[ebp]
	mov	DWORD PTR $T44627[ebp], edx
	cmp	DWORD PTR $T44627[ebp], 0
	je	SHORT $LN3@SRBRoot@3
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44627[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44627[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@SRBRoot@3
$LN3@SRBRoot@3:
	mov	DWORD PTR tv72[ebp], 0
$LN4@SRBRoot@3:
; Line 1184
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1185
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1187
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SRBRoot@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1SRBRoot@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SRBRoot@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SRBRoot@@QAE@XZ ENDP					; SRBRoot::~SRBRoot
PUBLIC	?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z	; SRBRoot::setLocale
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_u_strlen_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_locale$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z PROC	; SRBRoot::setLocale, COMDAT
; _this$ = ecx
; Line 1191
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1192
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@setLocale
; Line 1193
	jmp	SHORT $LN3@setLocale
$LN2@setLocale:
; Line 1196
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 1197
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 1198
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@setLocale
; Line 1199
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1200
	jmp	SHORT $LN3@setLocale
$LN1@setLocale:
; Line 1203
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
$LN3@setLocale:
; Line 1204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setLocale@SRBRoot@@QAEXPA_WAAW4UErrorCode@@@Z ENDP	; SRBRoot::setLocale
_TEXT	ENDS
PUBLIC	?getKeyString@SRBRoot@@QBEPBDH@Z		; SRBRoot::getKeyString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKeyString@SRBRoot@@QBEPBDH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_key$ = 8						; size = 4
?getKeyString@SRBRoot@@QBEPBDH@Z PROC			; SRBRoot::getKeyString, COMDAT
; _this$ = ecx
; Line 1207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1208
	cmp	DWORD PTR _key$[ebp], 0
	jge	SHORT $LN2@getKeyStri
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	eax, DWORD PTR _key$[ebp]
	and	eax, 2147483647				; 7fffffffH
	add	eax, DWORD PTR [ecx+8]
	jmp	SHORT $LN3@getKeyStri
; Line 1210
	jmp	SHORT $LN3@getKeyStri
$LN2@getKeyStri:
; Line 1211
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	add	eax, DWORD PTR _key$[ebp]
$LN3@getKeyStri:
; Line 1213
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getKeyString@SRBRoot@@QBEPBDH@Z ENDP			; SRBRoot::getKeyString
_TEXT	ENDS
PUBLIC	?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z	; SResource::getKeyString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z PROC	; SResource::getKeyString, COMDAT
; _this$ = ecx
; Line 1216
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1217
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], -1
	jne	SHORT $LN1@getKeyStri@2
; Line 1218
	xor	eax, eax
	jmp	SHORT $LN2@getKeyStri@2
$LN1@getKeyStri@2:
; Line 1220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?getKeyString@SRBRoot@@QBEPBDH@Z	; SRBRoot::getKeyString
$LN2@getKeyStri@2:
; Line 1221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getKeyString@SResource@@QBEPBDPBUSRBRoot@@@Z ENDP	; SResource::getKeyString
_TEXT	ENDS
PUBLIC	?getKeyBytes@SRBRoot@@QBEPBDPAH@Z		; SRBRoot::getKeyBytes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKeyBytes@SRBRoot@@QBEPBDPAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pLength$ = 8						; size = 4
?getKeyBytes@SRBRoot@@QBEPBDPAH@Z PROC			; SRBRoot::getKeyBytes, COMDAT
; _this$ = ecx
; Line 1224
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1225
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	sub	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _pLength$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1226
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
; Line 1227
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getKeyBytes@SRBRoot@@QBEPBDPAH@Z ENDP			; SRBRoot::getKeyBytes
_TEXT	ENDS
PUBLIC	?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z ; SRBRoot::addKeyBytes
EXTRN	_uprv_realloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_keypos$ = -20						; size = 4
_this$ = -8						; size = 4
_keyBytes$ = 8						; size = 4
_length$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z PROC	; SRBRoot::addKeyBytes, COMDAT
; _this$ = ecx
; Line 1230
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1233
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@addKeyByte
; Line 1234
	or	eax, -1
	jmp	$LN7@addKeyByte
$LN6@addKeyByte:
; Line 1236
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN4@addKeyByte
	cmp	DWORD PTR _keyBytes$[ebp], 0
	jne	SHORT $LN5@addKeyByte
	cmp	DWORD PTR _length$[ebp], 0
	je	SHORT $LN5@addKeyByte
$LN4@addKeyByte:
; Line 1237
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 1238
	or	eax, -1
	jmp	$LN7@addKeyByte
$LN5@addKeyByte:
; Line 1240
	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN3@addKeyByte
; Line 1241
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	jmp	$LN7@addKeyByte
$LN3@addKeyByte:
; Line 1244
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _keypos$[ebp], ecx
; Line 1245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 1246
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+36]
	jl	SHORT $LN2@addKeyByte
; Line 1248
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	add	ecx, 65536				; 00010000H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 1249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 1250
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN2@addKeyByte
; Line 1251
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1252
	or	eax, -1
	jmp	SHORT $LN7@addKeyByte
$LN2@addKeyByte:
; Line 1256
	push	1
	mov	eax, DWORD PTR _keyBytes$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _keyBytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, DWORD PTR _keypos$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1258
	mov	eax, DWORD PTR _keypos$[ebp]
$LN7@addKeyByte:
; Line 1259
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z ENDP	; SRBRoot::addKeyBytes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_keypos$ = -20						; size = 4
_this$ = -8						; size = 4
_tag$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z PROC		; SRBRoot::addTag, COMDAT
; _this$ = ecx
; Line 1262
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1265
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@addTag
; Line 1266
	or	eax, -1
	jmp	SHORT $LN4@addTag
$LN3@addTag:
; Line 1269
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN2@addTag
; Line 1271
	or	eax, -1
	jmp	SHORT $LN4@addTag
$LN2@addTag:
; Line 1274
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	edx, DWORD PTR _tag$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addKeyBytes@SRBRoot@@QAEHPBDHAAW4UErrorCode@@@Z ; SRBRoot::addKeyBytes
	mov	DWORD PTR _keypos$[ebp], eax
; Line 1275
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@addTag
; Line 1276
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+40], ecx
$LN1@addTag:
; Line 1278
	mov	eax, DWORD PTR _keypos$[ebp]
$LN4@addTag:
; Line 1279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?addTag@SRBRoot@@QAEHPBDAAW4UErrorCode@@@Z ENDP		; SRBRoot::addTag
_TEXT	ENDS
PUBLIC	??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA ; `SRBRoot::compactKeys'::`2'::__LINE__Var
EXTRN	_uprv_sortArray_56:PROC
;	COMDAT ??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@ DB 'i'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'k', 00H, 'e', 00H
	DB	'y', 00H, 's', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA DD 0537H ; `SRBRoot::compactKeys'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_limit$37029 = -176					; size = 4
_newpos$37028 = -164					; size = 4
_oldpos$37027 = -152					; size = 4
_offset$37010 = -140					; size = 4
_suffixLimit$37009 = -128				; size = 4
_suffix$37008 = -116					; size = 4
_k$37007 = -104						; size = 4
_j$36999 = -92						; size = 4
_keyLimit$36998 = -80					; size = 4
_key$36997 = -68					; size = 4
_keysCount$ = -56					; size = 4
_i$ = -44						; size = 4
_keys$ = -32						; size = 4
_map$ = -20						; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z PROC	; SRBRoot::compactKeys, COMDAT
; _this$ = ecx
; Line 1335
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+40]
	mov	DWORD PTR _keysCount$[ebp], edx
; Line 1340
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN44@compactKey
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN44@compactKey
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN45@compactKey
$LN44@compactKey:
; Line 1341
	jmp	$LN46@compactKey
$LN45@compactKey:
; Line 1343
	mov	eax, DWORD PTR _keysCount$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _map$[ebp], eax
; Line 1344
	cmp	DWORD PTR _map$[ebp], 0
	jne	SHORT $LN43@compactKey
; Line 1345
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1346
	jmp	$LN46@compactKey
$LN43@compactKey:
; Line 1348
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _keys$[ebp], edx
; Line 1349
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN42@compactKey
$LN41@compactKey:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN42@compactKey:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+16]
	jge	SHORT $LN40@compactKey
; Line 1351
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _keys$[ebp]
	sub	edx, DWORD PTR [ecx+8]
	or	edx, -2147483648			; 80000000H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
; Line 1352
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], 0
$LN39@compactKey:
; Line 1353
	mov	eax, DWORD PTR _keys$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN38@compactKey
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, 1
	mov	DWORD PTR _keys$[ebp], eax
	jmp	SHORT $LN39@compactKey
$LN38@compactKey:
; Line 1354
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, 1
	mov	DWORD PTR _keys$[ebp], eax
; Line 1355
	jmp	SHORT $LN41@compactKey
$LN40@compactKey:
; Line 1356
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR _keys$[ebp], ecx
	jmp	SHORT $LN37@compactKey
$LN36@compactKey:
; Line 1357
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN37@compactKey:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	SHORT $LN35@compactKey
; Line 1358
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _keys$[ebp]
	sub	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _map$[ebp]
	mov	DWORD PTR [eax+edx*8], ecx
; Line 1359
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], 0
$LN34@compactKey:
; Line 1360
	mov	eax, DWORD PTR _keys$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN33@compactKey
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, 1
	mov	DWORD PTR _keys$[ebp], eax
	jmp	SHORT $LN34@compactKey
$LN33@compactKey:
; Line 1361
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, 1
	mov	DWORD PTR _keys$[ebp], eax
; Line 1362
	jmp	SHORT $LN36@compactKey
$LN35@compactKey:
; Line 1365
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	push	OFFSET ?compareKeySuffixes@@YAHPBX00@Z	; compareKeySuffixes
	push	8
	mov	edx, DWORD PTR _keysCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _map$[ebp]
	push	eax
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1370
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN32@compactKey
; Line 1371
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _keys$[ebp], ecx
; Line 1372
	mov	DWORD PTR _i$[ebp], 0
$LN31@compactKey:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	$LN30@compactKey
; Line 1380
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$36999[ebp], eax
; Line 1381
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR [esi+edx*8]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 1382
	mov	eax, DWORD PTR _j$36999[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	SHORT $LN29@compactKey
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	cmp	DWORD PTR [ecx+eax*8], 0
	jge	SHORT $LN29@compactKey
; Line 1384
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 1385
	jmp	SHORT $LN31@compactKey
$LN29@compactKey:
; Line 1387
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?getKeyString@SRBRoot@@QBEPBDH@Z	; SRBRoot::getKeyString
	mov	DWORD PTR _key$36997[ebp], eax
; Line 1388
	mov	eax, DWORD PTR _key$36997[ebp]
	mov	DWORD PTR _keyLimit$36998[ebp], eax
	jmp	SHORT $LN28@compactKey
$LN27@compactKey:
	mov	eax, DWORD PTR _keyLimit$36998[ebp]
	add	eax, 1
	mov	DWORD PTR _keyLimit$36998[ebp], eax
$LN28@compactKey:
	mov	eax, DWORD PTR _keyLimit$36998[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN26@compactKey
	jmp	SHORT $LN27@compactKey
$LN26@compactKey:
; Line 1389
	jmp	SHORT $LN25@compactKey
$LN24@compactKey:
	mov	eax, DWORD PTR _j$36999[ebp]
	add	eax, 1
	mov	DWORD PTR _j$36999[ebp], eax
$LN25@compactKey:
	mov	eax, DWORD PTR _j$36999[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	$LN23@compactKey
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	cmp	DWORD PTR [ecx+eax*8], 0
	jl	$LN23@compactKey
; Line 1394
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR _keys$[ebp]
	add	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _suffix$37008[ebp], edx
; Line 1395
	mov	eax, DWORD PTR _suffix$37008[ebp]
	mov	DWORD PTR _suffixLimit$37009[ebp], eax
	jmp	SHORT $LN22@compactKey
$LN21@compactKey:
	mov	eax, DWORD PTR _suffixLimit$37009[ebp]
	add	eax, 1
	mov	DWORD PTR _suffixLimit$37009[ebp], eax
$LN22@compactKey:
	mov	eax, DWORD PTR _suffixLimit$37009[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN20@compactKey
	jmp	SHORT $LN21@compactKey
$LN20@compactKey:
; Line 1396
	mov	eax, DWORD PTR _keyLimit$36998[ebp]
	sub	eax, DWORD PTR _key$36997[ebp]
	mov	ecx, DWORD PTR _suffixLimit$37009[ebp]
	sub	ecx, DWORD PTR _suffix$37008[ebp]
	sub	eax, ecx
	mov	DWORD PTR _offset$37010[ebp], eax
; Line 1397
	jns	SHORT $LN19@compactKey
; Line 1398
	jmp	$LN23@compactKey
$LN19@compactKey:
; Line 1401
	mov	eax, DWORD PTR _keyLimit$36998[ebp]
	mov	DWORD PTR _k$37007[ebp], eax
$LN18@compactKey:
	mov	eax, DWORD PTR _suffix$37008[ebp]
	cmp	eax, DWORD PTR _suffixLimit$37009[ebp]
	jae	SHORT $LN17@compactKey
	mov	eax, DWORD PTR _k$37007[ebp]
	sub	eax, 1
	mov	DWORD PTR _k$37007[ebp], eax
	mov	ecx, DWORD PTR _suffixLimit$37009[ebp]
	sub	ecx, 1
	mov	DWORD PTR _suffixLimit$37009[ebp], ecx
	mov	edx, DWORD PTR _suffixLimit$37009[ebp]
	movsx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _k$37007[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, eax
	jne	SHORT $LN17@compactKey
	jmp	SHORT $LN18@compactKey
$LN17@compactKey:
; Line 1402
	mov	eax, DWORD PTR _suffix$37008[ebp]
	cmp	eax, DWORD PTR _suffixLimit$37009[ebp]
	jne	SHORT $LN16@compactKey
	mov	eax, DWORD PTR _k$37007[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _suffixLimit$37009[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN16@compactKey
; Line 1403
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	add	edx, DWORD PTR _offset$37010[ebp]
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
$LN15@compactKey:
; Line 1405
	mov	eax, DWORD PTR _suffix$37008[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN14@compactKey
	mov	eax, DWORD PTR _suffix$37008[ebp]
	mov	BYTE PTR [eax], 1
	mov	ecx, DWORD PTR _suffix$37008[ebp]
	add	ecx, 1
	mov	DWORD PTR _suffix$37008[ebp], ecx
	jmp	SHORT $LN15@compactKey
$LN14@compactKey:
; Line 1406
	mov	eax, DWORD PTR _suffix$37008[ebp]
	mov	BYTE PTR [eax], 1
; Line 1407
	jmp	SHORT $LN13@compactKey
$LN16@compactKey:
; Line 1408
	jmp	SHORT $LN23@compactKey
$LN13@compactKey:
; Line 1410
	jmp	$LN24@compactKey
$LN23@compactKey:
; Line 1411
	mov	eax, DWORD PTR _j$36999[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 1412
	jmp	$LN31@compactKey
$LN30@compactKey:
; Line 1418
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?compareKeyNewpos@@YAHPBX00@Z	; compareKeyNewpos
	push	8
	mov	ecx, DWORD PTR _keysCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _map$[ebp]
	push	edx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1419
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN32@compactKey
; Line 1421
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _newpos$37028[ebp], ecx
	mov	edx, DWORD PTR _newpos$37028[ebp]
	mov	DWORD PTR _oldpos$37027[ebp], edx
; Line 1422
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _limit$37029[ebp], ecx
; Line 1424
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@compactKey
$LN10@compactKey:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@compactKey:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	SHORT $LN9@compactKey
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	cmp	DWORD PTR [ecx+eax*8+4], 0
	jge	SHORT $LN9@compactKey
	jmp	SHORT $LN10@compactKey
$LN9@compactKey:
; Line 1425
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	$LN8@compactKey
$LN7@compactKey:
; Line 1426
	mov	eax, DWORD PTR _oldpos$37027[ebp]
	cmp	eax, DWORD PTR _limit$37029[ebp]
	jge	$LN6@compactKey
; Line 1427
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, DWORD PTR _oldpos$37027[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	SHORT $LN3@compactKey
; Line 1428
	mov	eax, DWORD PTR _oldpos$37027[ebp]
	add	eax, 1
	mov	DWORD PTR _oldpos$37027[ebp], eax
; Line 1429
	jmp	SHORT $LN4@compactKey
$LN3@compactKey:
; Line 1431
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	jge	SHORT $LN2@compactKey
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	cmp	edx, DWORD PTR _oldpos$37027[ebp]
	jne	SHORT $LN2@compactKey
; Line 1432
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	edx, DWORD PTR _newpos$37028[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1433
	jmp	SHORT $LN3@compactKey
$LN2@compactKey:
; Line 1435
	mov	eax, DWORD PTR _keys$[ebp]
	add	eax, DWORD PTR _newpos$37028[ebp]
	mov	ecx, DWORD PTR _keys$[ebp]
	add	ecx, DWORD PTR _oldpos$37027[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _newpos$37028[ebp]
	add	eax, 1
	mov	DWORD PTR _newpos$37028[ebp], eax
	mov	ecx, DWORD PTR _oldpos$37027[ebp]
	add	ecx, 1
	mov	DWORD PTR _oldpos$37027[ebp], ecx
$LN4@compactKey:
; Line 1437
	jmp	$LN7@compactKey
$LN6@compactKey:
; Line 1438
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _keysCount$[ebp]
	je	SHORT $LN8@compactKey
	mov	ecx, DWORD PTR ?__LINE__Var@?1??compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z@4JA
	add	ecx, 103				; 00000067H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BO@GFDGCGLD@?$AAi?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAk?$AAe?$AAy?$AAs?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@compactKey:
; Line 1440
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newpos$37028[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 1443
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?compareKeyOldpos@@YAHPBX00@Z	; compareKeyOldpos
	push	8
	mov	ecx, DWORD PTR _keysCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _map$[ebp]
	push	edx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1444
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN32@compactKey
; Line 1446
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 1447
	mov	DWORD PTR _map$[ebp], 0
$LN32@compactKey:
; Line 1451
	mov	eax, DWORD PTR _map$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN46@compactKey:
; Line 1452
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?compactKeys@SRBRoot@@QAEXAAW4UErrorCode@@@Z ENDP	; SRBRoot::compactKeys
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareKeySuffixes@@YAHPBX00@Z
_TEXT	SEGMENT
_diff$ = -92						; size = 4
_rLimit$ = -80						; size = 4
_rStart$ = -68						; size = 4
_lLimit$ = -56						; size = 4
_lStart$ = -44						; size = 4
_rPos$ = -32						; size = 4
_lPos$ = -20						; size = 4
_bundle$ = -8						; size = 4
_context$ = 8						; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
?compareKeySuffixes@@YAHPBX00@Z PROC			; compareKeySuffixes, COMDAT
; Line 1297
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1298
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _bundle$[ebp], eax
; Line 1299
	mov	eax, DWORD PTR _l$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _lPos$[ebp], ecx
; Line 1300
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rPos$[ebp], ecx
; Line 1301
	mov	eax, DWORD PTR _lPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?getKeyString@SRBRoot@@QBEPBDH@Z	; SRBRoot::getKeyString
	mov	DWORD PTR _lStart$[ebp], eax
; Line 1302
	mov	eax, DWORD PTR _lStart$[ebp]
	mov	DWORD PTR _lLimit$[ebp], eax
; Line 1303
	mov	eax, DWORD PTR _rPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundle$[ebp]
	call	?getKeyString@SRBRoot@@QBEPBDH@Z	; SRBRoot::getKeyString
	mov	DWORD PTR _rStart$[ebp], eax
; Line 1304
	mov	eax, DWORD PTR _rStart$[ebp]
	mov	DWORD PTR _rLimit$[ebp], eax
$LN8@compareKey:
; Line 1306
	mov	eax, DWORD PTR _lLimit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@compareKey
	mov	eax, DWORD PTR _lLimit$[ebp]
	add	eax, 1
	mov	DWORD PTR _lLimit$[ebp], eax
	jmp	SHORT $LN8@compareKey
$LN6@compareKey:
; Line 1307
	mov	eax, DWORD PTR _rLimit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@compareKey
	mov	eax, DWORD PTR _rLimit$[ebp]
	add	eax, 1
	mov	DWORD PTR _rLimit$[ebp], eax
	jmp	SHORT $LN6@compareKey
$LN4@compareKey:
; Line 1309
	mov	eax, DWORD PTR _lStart$[ebp]
	cmp	eax, DWORD PTR _lLimit$[ebp]
	jae	SHORT $LN3@compareKey
	mov	eax, DWORD PTR _rStart$[ebp]
	cmp	eax, DWORD PTR _rLimit$[ebp]
	jae	SHORT $LN3@compareKey
; Line 1310
	mov	eax, DWORD PTR _lLimit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _lLimit$[ebp], eax
	mov	ecx, DWORD PTR _rLimit$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _rLimit$[ebp], ecx
	mov	edx, DWORD PTR _rLimit$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _lLimit$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sub	edx, eax
	mov	DWORD PTR _diff$[ebp], edx
; Line 1311
	je	SHORT $LN2@compareKey
; Line 1312
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN9@compareKey
$LN2@compareKey:
; Line 1314
	jmp	SHORT $LN4@compareKey
$LN3@compareKey:
; Line 1316
	mov	eax, DWORD PTR _rLimit$[ebp]
	sub	eax, DWORD PTR _rStart$[ebp]
	mov	ecx, DWORD PTR _lLimit$[ebp]
	sub	ecx, DWORD PTR _lStart$[ebp]
	sub	eax, ecx
	mov	DWORD PTR _diff$[ebp], eax
; Line 1317
	je	SHORT $LN1@compareKey
; Line 1318
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN9@compareKey
$LN1@compareKey:
; Line 1321
	mov	eax, DWORD PTR _rPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lPos$[ebp]
	push	ecx
	call	?compareInt32@@YAHHH@Z			; compareInt32
	add	esp, 8
$LN9@compareKey:
; Line 1322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareKeySuffixes@@YAHPBX00@Z ENDP			; compareKeySuffixes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareInt32@@YAHHH@Z
_TEXT	SEGMENT
_lPos$ = 8						; size = 4
_rPos$ = 12						; size = 4
?compareInt32@@YAHHH@Z PROC				; compareInt32, COMDAT
; Line 1282
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1287
	mov	eax, DWORD PTR _lPos$[ebp]
	cmp	eax, DWORD PTR _rPos$[ebp]
	jge	SHORT $LN4@compareInt
; Line 1288
	or	eax, -1
	jmp	SHORT $LN5@compareInt
	jmp	SHORT $LN5@compareInt
$LN4@compareInt:
; Line 1289
	mov	eax, DWORD PTR _lPos$[ebp]
	cmp	eax, DWORD PTR _rPos$[ebp]
	jle	SHORT $LN2@compareInt
; Line 1290
	mov	eax, 1
	jmp	SHORT $LN5@compareInt
; Line 1291
	jmp	SHORT $LN5@compareInt
$LN2@compareInt:
; Line 1292
	xor	eax, eax
$LN5@compareInt:
; Line 1294
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?compareInt32@@YAHHH@Z ENDP				; compareInt32
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareKeyNewpos@@YAHPBX00@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
?compareKeyNewpos@@YAHPBX00@Z PROC			; compareKeyNewpos, COMDAT
; Line 1325
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1326
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _l$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	?compareInt32@@YAHHH@Z			; compareInt32
	add	esp, 8
; Line 1327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareKeyNewpos@@YAHPBX00@Z ENDP			; compareKeyNewpos
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareKeyOldpos@@YAHPBX00@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
?compareKeyOldpos@@YAHPBX00@Z PROC			; compareKeyOldpos, COMDAT
; Line 1330
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1331
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _l$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	?compareInt32@@YAHHH@Z			; compareInt32
	add	esp, 8
; Line 1332
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareKeyOldpos@@YAHPBX00@Z ENDP			; compareKeyOldpos
_TEXT	ENDS
PUBLIC	?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z ; StringResource::writeUTF16v2
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z
_TEXT	SEGMENT
tv86 = -220						; size = 4
_len$ = -20						; size = 4
_this$ = -8						; size = 4
_base$ = 8						; size = 4
_dest$ = 12						; size = 4
?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z PROC ; StringResource::writeUTF16v2, COMDAT
; _this$ = ecx
; Line 1499
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1500
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	DWORD PTR _len$[ebp], eax
; Line 1501
	mov	esi, esp
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _base$[ebp]
	or	eax, 1610612736				; 60000000H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1502
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 1503
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+124]
	mov	BYTE PTR tv86[ebp], cl
	cmp	BYTE PTR tv86[ebp], 1
	je	SHORT $LN4@writeUTF16
	cmp	BYTE PTR tv86[ebp], 2
	je	SHORT $LN3@writeUTF16
	cmp	BYTE PTR tv86[ebp], 3
	je	SHORT $LN2@writeUTF16
	jmp	$LN6@writeUTF16
; Line 1505
	jmp	$LN6@writeUTF16
$LN4@writeUTF16:
; Line 1507
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 56320				; 0000dc00H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1508
	jmp	SHORT $LN6@writeUTF16
$LN3@writeUTF16:
; Line 1510
	mov	eax, DWORD PTR _len$[ebp]
	sar	eax, 16					; 00000010H
	add	eax, 57327				; 0000dfefH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1511
	mov	esi, esp
	movzx	eax, WORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1512
	jmp	SHORT $LN6@writeUTF16
$LN2@writeUTF16:
; Line 1514
	mov	esi, esp
	push	57343					; 0000dfffH
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1515
	mov	eax, DWORD PTR _len$[ebp]
	sar	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1516
	mov	esi, esp
	movzx	eax, WORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@writeUTF16:
; Line 1521
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1522
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _dest$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1523
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z ENDP ; StringResource::writeUTF16v2
_TEXT	ENDS
PUBLIC	??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@ ; `string'
PUBLIC	??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ; StringResource::StringResource
PUBLIC	??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@ ; `string'
PUBLIC	??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@ ; `string'
PUBLIC	??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@ ; `string'
PUBLIC	??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@ ; `string'
PUBLIC	??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@ ; `string'
PUBLIC	??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@ ; `string'
PUBLIC	?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA ; `SRBRoot::compactStringsV2'::`2'::__LINE__Var
PUBLIC	?get16BitStringsLength@StringResource@@QBEHXZ	; StringResource::get16BitStringsLength
PUBLIC	?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ ; icu_56::LocalPointerBase<StringResource *>::getAlias
PUBLIC	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
PUBLIC	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
PUBLIC	??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z ; icu_56::LocalArray<StringResource *>::LocalArray<StringResource *>
EXTRN	__imp__printf:PROC
EXTRN	_getShowWarning:PROC
EXTRN	__imp_?endsWith@UnicodeString@icu_56@@QBECABV12@@Z:PROC
EXTRN	_uhash_nextElement_56:PROC
EXTRN	_uhash_count_56:PROC
;	COMDAT ??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@
CONST	SEGMENT
??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@ DB 'f'
	DB	00H, '1', 00H, '6', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'U', 00H
	DB	'n', 00H, 'i', 00H, 't', 00H, 's', 00H, '.', 00H, 'l', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 'f', 00H, '1'
	DB	00H, '6', 00H, 'B', 00H, 'i', 00H, 't', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 's', 00H, 'L', 00H, 'e'
	DB	00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '+', 00H
	DB	' ', 00H, '1', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@ DB 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'x', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H
	DB	'0', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, 's', 00H, 'a', 00H, 'm', 00H
	DB	'e', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g'
	DB	00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '[', 00H
	DB	'i', 00H, ']', 00H, '-', 00H, '>', 00H, 'f', 00H, 'S', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '.', 00H, 'i', 00H
	DB	's', 00H, 'E', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, '('
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@
CONST	SEGMENT
??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@ DB 'f'
	DB	00H, 'P', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 'S', 00H, 't', 00H
	DB	'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 'd'
	DB	00H, 'e', 00H, 'x', 00H, 'L', 00H, 'i', 00H, 'm', 00H, 'i', 00H
	DB	't', 00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, 'f', 00H, 'U'
	DB	00H, 's', 00H, 'e', 00H, 'P', 00H, 'o', 00H, 'o', 00H, 'l', 00H
	DB	'B', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '-'
	DB	00H, '>', 00H, 'f', 00H, 'S', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, 'I', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x'
	DB	00H, 'L', 00H, 'i', 00H, 'm', 00H, 'i', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@
CONST	SEGMENT
??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@ DB '1'
	DB	'6-bit units not saved:   %6d = %6d bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@
CONST	SEGMENT
??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@ DB '1'
	DB	'6-bit units saved:       %6d = %6d bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@
CONST	SEGMENT
??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@ DB '16'
	DB	'-bit units for strings: %6d = %6d bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@ DB 'number'
	DB	' of shared strings: %d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@ DB 'r'
	DB	00H, 'e', 00H, 's', 00H, '-', 00H, '>', 00H, 'l', 00H, 'e', 00H
	DB	'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, '(', 00H, ')', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, 's', 00H, 'u', 00H, 'f', 00H
	DB	'f', 00H, 'i', 00H, 'x', 00H, 'R', 00H, 'e', 00H, 's', 00H, '-'
	DB	00H, '>', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H
	DB	'h', 00H, '(', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA DD 05f6H ; `SRBRoot::compactStringsV2'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$1
__ehfuncinfo$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv447 = -532						; size = 4
$T44666 = -524						; size = 4
$T44670 = -512						; size = 4
$T44671 = -500						; size = 4
_localStringIndex$37303 = -296				; size = 4
_same$37300 = -284					; size = 4
_res$37298 = -272					; size = 4
_poolString$37289 = -260				; size = 4
_poolStrings$37282 = -248				; size = 4
_localStringIndex$37278 = -236				; size = 4
_res$37276 = -224					; size = 4
_i$37272 = -212						; size = 4
_maxStringIndex$37252 = -200				; size = 4
_res$37251 = -188					; size = 4
_i$37247 = -176						; size = 4
_numUnitsNotSaved$37246 = -164				; size = 4
_numUnitsSaved$37245 = -152				; size = 4
_numStringsWritten$37244 = -140				; size = 4
_poolStringIndex$37235 = -128				; size = 4
_suffixRes$37226 = -116					; size = 4
_j$37222 = -104						; size = 4
_res$37221 = -92					; size = 4
_i$37217 = -80						; size = 4
_i$37209 = -68						; size = 4
_pos$37208 = -56					; size = 4
_array$ = -44						; size = 4
_count$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_stringSet$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z PROC ; SRBRoot::compactStringsV2, COMDAT
; _this$ = ecx
; Line 1526
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-532]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1527
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN45@compactStr
; Line 1528
	jmp	$LN46@compactStr
$LN45@compactStr:
; Line 1533
	mov	eax, DWORD PTR _stringSet$[ebp]
	push	eax
	call	_uhash_count_56
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
; Line 1534
	xor	ecx, ecx
	mov	eax, DWORD PTR _count$[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T44666[ebp], eax
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T44666[ebp]
	push	ecx
	lea	ecx, DWORD PTR _array$[ebp]
	call	??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z ; icu_56::LocalArray<StringResource *>::LocalArray<StringResource *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1535
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN44@compactStr
; Line 1536
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
	jmp	$LN46@compactStr
$LN44@compactStr:
; Line 1538
	mov	DWORD PTR _pos$37208[ebp], -1
	mov	DWORD PTR _i$37209[ebp], 0
	jmp	SHORT $LN43@compactStr
$LN42@compactStr:
	mov	eax, DWORD PTR _i$37209[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37209[ebp], eax
$LN43@compactStr:
	mov	eax, DWORD PTR _i$37209[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN41@compactStr
; Line 1539
	lea	eax, DWORD PTR _pos$37208[ebp]
	push	eax
	mov	ecx, DWORD PTR _stringSet$[ebp]
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	esi, eax
	mov	edx, DWORD PTR _i$37209[ebp]
	push	edx
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [esi+8]
	mov	DWORD PTR [eax], ecx
; Line 1540
	jmp	SHORT $LN42@compactStr
$LN41@compactStr:
; Line 1543
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?compareStringSuffixes@@YAHPBX00@Z ; compareStringSuffixes
	push	4
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _array$[ebp]
	call	?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ ; icu_56::LocalPointerBase<StringResource *>::getAlias
	push	eax
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1544
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN40@compactStr
; Line 1545
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
	jmp	$LN46@compactStr
$LN40@compactStr:
; Line 1552
	mov	DWORD PTR _i$37217[ebp], 0
$LN39@compactStr:
	mov	eax, DWORD PTR _i$37217[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN38@compactStr
; Line 1558
	mov	eax, DWORD PTR _i$37217[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$37221[ebp], ecx
; Line 1559
	mov	eax, DWORD PTR _res$37221[ebp]
	mov	esi, DWORD PTR [eax+116]
	sub	esi, 1
	mov	ecx, DWORD PTR _res$37221[ebp]
	call	?get16BitStringsLength@StringResource@@QBEHXZ ; StringResource::get16BitStringsLength
	imul	esi, eax
	mov	ecx, DWORD PTR _res$37221[ebp]
	mov	DWORD PTR [ecx+120], esi
; Line 1563
	mov	eax, DWORD PTR _i$37217[ebp]
	add	eax, 1
	mov	DWORD PTR _j$37222[ebp], eax
	jmp	SHORT $LN37@compactStr
$LN36@compactStr:
	mov	eax, DWORD PTR _j$37222[ebp]
	add	eax, 1
	mov	DWORD PTR _j$37222[ebp], eax
$LN37@compactStr:
	mov	eax, DWORD PTR _j$37222[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN35@compactStr
; Line 1564
	mov	eax, DWORD PTR _j$37222[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _suffixRes$37226[ebp], ecx
; Line 1566
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _res$37221[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_?endsWith@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN34@compactStr
; Line 1567
	mov	ecx, DWORD PTR _res$37221[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	esi, eax
	mov	ecx, DWORD PTR _suffixRes$37226[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	cmp	esi, eax
	jne	SHORT $LN48@compactStr
	mov	eax, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	eax, 41					; 00000029H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1EK@IGAAGIHI@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAu?$AAf?$AAf?$AAi?$AAx?$AAR?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN48@compactStr:
; Line 1568
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN33@compactStr
	jmp	$LN32@compactStr
$LN33@compactStr:
; Line 1570
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	movsx	ecx, BYTE PTR [eax+124]
	test	ecx, ecx
	jne	$LN32@compactStr
; Line 1572
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	mov	ecx, DWORD PTR _res$37221[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 1573
	mov	ecx, DWORD PTR _res$37221[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	esi, eax
	mov	ecx, DWORD PTR _suffixRes$37226[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	sub	esi, eax
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	mov	DWORD PTR [eax+112], esi
; Line 1574
	mov	eax, DWORD PTR _res$37221[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN30@compactStr
; Line 1578
	mov	eax, DWORD PTR _res$37221[ebp]
	movsx	ecx, BYTE PTR [eax+124]
	mov	edx, DWORD PTR _res$37221[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, ecx
	mov	ecx, DWORD PTR _suffixRes$37226[ebp]
	add	eax, DWORD PTR [ecx+112]
	mov	edx, DWORD PTR _suffixRes$37226[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1579
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 268435455				; 0fffffffH
	mov	DWORD PTR _poolStringIndex$37235[ebp], ecx
; Line 1580
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _poolStringIndex$37235[ebp]
	cmp	ecx, DWORD PTR [eax+120]
	jl	SHORT $LN29@compactStr
; Line 1581
	mov	eax, DWORD PTR _poolStringIndex$37235[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+120], eax
$LN29@compactStr:
; Line 1583
	mov	eax, DWORD PTR _suffixRes$37226[ebp]
	mov	BYTE PTR [eax+5], 1
$LN30@compactStr:
; Line 1585
	mov	ecx, DWORD PTR _suffixRes$37226[ebp]
	call	?get16BitStringsLength@StringResource@@QBEHXZ ; StringResource::get16BitStringsLength
	mov	ecx, DWORD PTR _suffixRes$37226[ebp]
	imul	eax, DWORD PTR [ecx+116]
	mov	edx, DWORD PTR _res$37221[ebp]
	add	eax, DWORD PTR [edx+120]
	mov	ecx, DWORD PTR _res$37221[ebp]
	mov	DWORD PTR [ecx+120], eax
$LN32@compactStr:
; Line 1589
	jmp	SHORT $LN27@compactStr
$LN34@compactStr:
; Line 1590
	jmp	SHORT $LN35@compactStr
$LN27@compactStr:
; Line 1592
	jmp	$LN36@compactStr
$LN35@compactStr:
; Line 1593
	mov	eax, DWORD PTR _j$37222[ebp]
	mov	DWORD PTR _i$37217[ebp], eax
; Line 1594
	jmp	$LN39@compactStr
$LN38@compactStr:
; Line 1601
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET ?compareStringLengths@@YAHPBX00@Z ; compareStringLengths
	push	4
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _array$[ebp]
	call	?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ ; icu_56::LocalPointerBase<StringResource *>::getAlias
	push	eax
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1602
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@compactStr
; Line 1603
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
	jmp	$LN46@compactStr
$LN26@compactStr:
; Line 1605
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+18]
	test	ecx, ecx
	je	$LN25@compactStr
; Line 1608
	mov	DWORD PTR _numStringsWritten$37244[ebp], 0
; Line 1609
	mov	DWORD PTR _numUnitsSaved$37245[ebp], 0
; Line 1610
	mov	DWORD PTR _numUnitsNotSaved$37246[ebp], 0
; Line 1611
	mov	DWORD PTR _i$37247[ebp], 0
	jmp	SHORT $LN24@compactStr
$LN23@compactStr:
	mov	eax, DWORD PTR _i$37247[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37247[ebp], eax
$LN24@compactStr:
	mov	eax, DWORD PTR _i$37247[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN22@compactStr
; Line 1612
	mov	eax, DWORD PTR _i$37247[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$37251[ebp], ecx
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	eax, DWORD PTR _res$37251[ebp]
	movsx	ecx, BYTE PTR [eax+124]
	add	esi, ecx
	mov	ecx, DWORD PTR _res$37251[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	lea	edx, DWORD PTR [esi+eax-1]
	mov	DWORD PTR _maxStringIndex$37252[ebp], edx
; Line 1617
	mov	eax, DWORD PTR _res$37251[ebp]
	cmp	DWORD PTR [eax+120], 10			; 0000000aH
	jl	SHORT $LN21@compactStr
	cmp	DWORD PTR _maxStringIndex$37252[ebp], 268435455 ; 0fffffffH
	jge	SHORT $LN21@compactStr
; Line 1618
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	push	0
	mov	ecx, DWORD PTR _res$37251[ebp]
	call	?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z ; StringResource::writeUTF16v2
; Line 1619
	mov	eax, DWORD PTR _numStringsWritten$37244[ebp]
	add	eax, 1
	mov	DWORD PTR _numStringsWritten$37244[ebp], eax
; Line 1620
	mov	eax, DWORD PTR _res$37251[ebp]
	mov	ecx, DWORD PTR _numUnitsSaved$37245[ebp]
	add	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _numUnitsSaved$37245[ebp], ecx
; Line 1621
	jmp	SHORT $LN20@compactStr
$LN21@compactStr:
; Line 1622
	mov	eax, DWORD PTR _res$37251[ebp]
	mov	ecx, DWORD PTR _numUnitsNotSaved$37246[ebp]
	add	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _numUnitsNotSaved$37246[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _res$37251[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1624
	mov	eax, DWORD PTR _res$37251[ebp]
	mov	BYTE PTR [eax+5], 1
$LN20@compactStr:
; Line 1626
	jmp	$LN23@compactStr
$LN22@compactStr:
; Line 1627
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN19@compactStr
; Line 1628
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN19@compactStr:
; Line 1630
	call	_getShowWarning
	movsx	eax, al
	test	eax, eax
	je	$LN18@compactStr
; Line 1631
	mov	esi, esp
	mov	eax, DWORD PTR _numStringsWritten$37244[ebp]
	push	eax
	push	OFFSET ??_C@_0BO@NIMJDNJE@number?5of?5shared?5strings?3?5?$CFd?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1633
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	edi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CL@HOCPNJGA@16?9bit?5units?5for?5strings?3?5?$CF6d?5?$DN?5@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1635
	mov	eax, DWORD PTR _numUnitsSaved$37245[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _numUnitsSaved$37245[ebp]
	push	ecx
	push	OFFSET ??_C@_0CL@EPPOPPIO@16?9bit?5units?5saved?3?5?5?5?5?5?5?5?$CF6d?5?$DN?5@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1637
	mov	eax, DWORD PTR _numUnitsNotSaved$37246[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _numUnitsNotSaved$37246[ebp]
	push	ecx
	push	OFFSET ??_C@_0CL@LICABABH@16?9bit?5units?5not?5saved?3?5?5?5?$CF6d?5?$DN?5@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@compactStr:
; Line 1639
	jmp	$LN17@compactStr
$LN25@compactStr:
; Line 1640
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	cmp	eax, DWORD PTR [ecx+24]
	jle	SHORT $LN49@compactStr
	mov	ecx, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	ecx, 114				; 00000072H
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1HG@OLEMCCJA@?$AAf?$AAP?$AAo?$AAo?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AAL?$AAi?$AAm?$AAi?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AAf?$AAU?$AAs?$AAe?$AAP?$AAo?$AAo@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@compactStr:
; Line 1643
	mov	DWORD PTR _i$37272[ebp], 0
	jmp	SHORT $LN16@compactStr
$LN15@compactStr:
	mov	eax, DWORD PTR _i$37272[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37272[ebp], eax
$LN16@compactStr:
	mov	eax, DWORD PTR _i$37272[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN14@compactStr
	mov	eax, DWORD PTR _i$37272[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+108], 0
	jne	$LN14@compactStr
; Line 1644
	mov	eax, DWORD PTR _i$37272[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$37276[ebp], ecx
; Line 1645
	mov	eax, DWORD PTR _res$37276[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	jne	SHORT $LN13@compactStr
; Line 1646
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _localStringIndex$37278[ebp], eax
; Line 1647
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _localStringIndex$37278[ebp]
	cmp	ecx, DWORD PTR [eax+128]
	jl	SHORT $LN12@compactStr
; Line 1648
	mov	eax, DWORD PTR _localStringIndex$37278[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
$LN12@compactStr:
; Line 1650
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	ecx, DWORD PTR _res$37276[ebp]
	call	?writeUTF16v2@StringResource@@QAEXHAAVUnicodeString@icu_56@@@Z ; StringResource::writeUTF16v2
$LN13@compactStr:
; Line 1652
	jmp	$LN15@compactStr
$LN14@compactStr:
; Line 1653
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?isBogus@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@compactStr
; Line 1654
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1655
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
	jmp	$LN46@compactStr
$LN11@compactStr:
; Line 1657
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+132], 0
	je	$LN10@compactStr
	cmp	DWORD PTR _gFormatVersion, 3
	jl	$LN10@compactStr
; Line 1659
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _poolStrings$37282[ebp], edx
; Line 1660
	mov	DWORD PTR _i$37272[ebp], 0
	jmp	SHORT $LN9@compactStr
$LN8@compactStr:
	mov	eax, DWORD PTR _i$37272[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37272[ebp], eax
$LN9@compactStr:
	mov	eax, DWORD PTR _i$37272[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN10@compactStr
	mov	eax, DWORD PTR _i$37272[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	cmp	DWORD PTR [ecx+108], 0
	jne	$LN10@compactStr
; Line 1661
	mov	eax, DWORD PTR _i$37272[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 44					; 0000002cH
	mov	esi, esp
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN50@compactStr
	mov	edx, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	edx, 135				; 00000087H
	mov	esi, esp
	push	edx
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1DK@JFMIABKJ@?$AA?$CB?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?$FL?$AAi?$AA?$FN?$AA?9?$AA?$DO?$AAf?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?4?$AAi?$AAs?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN50@compactStr:
; Line 1663
	push	128					; 00000080H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T44671[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T44671[ebp], 0
	je	SHORT $LN51@compactStr
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$37272[ebp]
	push	ecx
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	edx, DWORD PTR [eax]
	add	edx, 44					; 0000002cH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	ecx, DWORD PTR $T44671[ebp]
	call	??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ; StringResource::StringResource
	mov	DWORD PTR tv447[ebp], eax
	jmp	SHORT $LN52@compactStr
$LN51@compactStr:
	mov	DWORD PTR tv447[ebp], 0
$LN52@compactStr:
	mov	edx, DWORD PTR tv447[ebp]
	mov	DWORD PTR $T44670[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T44670[ebp]
	mov	DWORD PTR _poolString$37289[ebp], eax
; Line 1664
	cmp	DWORD PTR _poolString$37289[ebp], 0
	jne	SHORT $LN6@compactStr
; Line 1665
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1666
	jmp	SHORT $LN10@compactStr
$LN6@compactStr:
; Line 1668
	mov	eax, DWORD PTR _poolString$37289[ebp]
	push	eax
	mov	ecx, DWORD PTR _poolStrings$37282[ebp]
	call	?add@PseudoListResource@@QAEXPAUSResource@@@Z ; PseudoListResource::add
; Line 1669
	jmp	$LN8@compactStr
$LN10@compactStr:
; Line 1670
	jmp	SHORT $LN5@compactStr
$LN4@compactStr:
; Line 1672
	mov	eax, DWORD PTR _i$37272[ebp]
	add	eax, 1
	mov	DWORD PTR _i$37272[ebp], eax
$LN5@compactStr:
	mov	eax, DWORD PTR _i$37272[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	$LN17@compactStr
; Line 1673
	mov	eax, DWORD PTR _i$37272[ebp]
	push	eax
	lea	ecx, DWORD PTR _array$[ebp]
	call	??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ; icu_56::LocalArray<StringResource *>::operator[]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _res$37298[ebp], ecx
; Line 1674
	mov	eax, DWORD PTR _res$37298[ebp]
	movsx	ecx, BYTE PTR [eax+5]
	test	ecx, ecx
	je	SHORT $LN2@compactStr
; Line 1675
	jmp	SHORT $LN4@compactStr
$LN2@compactStr:
; Line 1677
	mov	eax, DWORD PTR _res$37298[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _same$37300[ebp], ecx
; Line 1678
	mov	ecx, DWORD PTR _res$37298[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	esi, eax
	mov	ecx, DWORD PTR _same$37300[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	cmp	esi, eax
	jne	SHORT $LN53@compactStr
	mov	eax, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	eax, 152				; 00000098H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1EA@ECNKOEMO@?$AAr?$AAe?$AAs?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAs?$AAa?$AAm?$AAe?$AA?9?$AA?$DO?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN53@compactStr:
; Line 1679
	mov	eax, DWORD PTR _same$37300[ebp]
	movsx	ecx, BYTE PTR [eax+124]
	mov	edx, DWORD PTR _same$37300[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, ecx
	mov	ecx, DWORD PTR _res$37298[ebp]
	add	eax, DWORD PTR [ecx+112]
	mov	edx, DWORD PTR _res$37298[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 1680
	mov	eax, DWORD PTR _res$37298[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 268435455				; 0fffffffH
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+120]
	mov	DWORD PTR _localStringIndex$37303[ebp], ecx
; Line 1682
	jns	SHORT $LN54@compactStr
	mov	eax, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	eax, 156				; 0000009cH
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1CM@IKLOGPLH@?$AAl?$AAo?$AAc?$AAa?$AAl?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN54@compactStr:
; Line 1683
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _localStringIndex$37303[ebp]
	cmp	ecx, DWORD PTR [eax+128]
	jl	SHORT $LN1@compactStr
; Line 1684
	mov	eax, DWORD PTR _localStringIndex$37303[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
$LN1@compactStr:
; Line 1686
	mov	eax, DWORD PTR _res$37298[ebp]
	mov	BYTE PTR [eax+5], 1
; Line 1687
	jmp	$LN4@compactStr
$LN17@compactStr:
; Line 1690
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	mov	esi, esp
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+112]
	add	edx, 1
	cmp	eax, edx
	jle	SHORT $LN55@compactStr
	mov	eax, DWORD PTR ?__LINE__Var@?1??compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z@4JA
	add	eax, 164				; 000000a4H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GG@EAGMGBK@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1GE@MIPJNEOK@?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAU?$AAn?$AAi?$AAt?$AAs?$AA?4?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAf?$AA1?$AA6?$AAB?$AAi?$AAt?$AAS@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN55@compactStr:
; Line 1691
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _array$[ebp]
	call	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
$LN46@compactStr:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN62@compactStr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 532				; 00000214H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN62@compactStr:
	DD	2
	DD	$LN61@compactStr
$LN61@compactStr:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN58@compactStr
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN59@compactStr
$LN59@compactStr:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN58@compactStr:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$0:
	lea	ecx, DWORD PTR _array$[ebp]
	jmp	??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
__unwindfunclet$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T44671[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-536]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?compactStringsV2@SRBRoot@@AAEXPAUUHashtable@@AAW4UErrorCode@@@Z ENDP ; SRBRoot::compactStringsV2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bundle$ = 8						; size = 4
_value$ = 12						; size = 4
_errorCode$ = 16					; size = 4
??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z PROC ; StringResource::StringResource, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 325
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bundle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0StringBaseResource@@QAE@PAUSRBRoot@@CABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ; StringBaseResource::StringBaseResource
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7StringResource@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+108], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+112], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+116], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+120], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+124], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0StringResource@@QAE@PAUSRBRoot@@ABVUnicodeString@icu_56@@AAW4UErrorCode@@@Z ENDP ; StringResource::StringResource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?get16BitStringsLength@StringResource@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?get16BitStringsLength@StringResource@@QBEHXZ PROC	; StringResource::get16BitStringsLength, COMDAT
; _this$ = ecx
; Line 338
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	movsx	esi, BYTE PTR [eax+124]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	lea	eax, DWORD PTR [esi+eax+1]
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?get16BitStringsLength@StringResource@@QBEHXZ ENDP	; StringResource::get16BitStringsLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?compareStringSuffixes@@YAHPBX00@Z
_TEXT	SEGMENT
_diff$ = -80						; size = 4
_rLimit$ = -68						; size = 4
_rStart$ = -56						; size = 4
_lLimit$ = -44						; size = 4
_lStart$ = -32						; size = 4
_right$ = -20						; size = 4
_left$ = -8						; size = 4
___formal$ = 8						; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
?compareStringSuffixes@@YAHPBX00@Z PROC			; compareStringSuffixes, COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 1455
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1456
	mov	eax, DWORD PTR _l$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _left$[ebp], ecx
; Line 1457
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _right$[ebp], ecx
; Line 1458
	mov	ecx, DWORD PTR _left$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	mov	DWORD PTR _lStart$[ebp], eax
; Line 1459
	mov	ecx, DWORD PTR _left$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	ecx, DWORD PTR _lStart$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _lLimit$[ebp], edx
; Line 1460
	mov	ecx, DWORD PTR _right$[ebp]
	call	?getBuffer@StringBaseResource@@QBEPB_WXZ ; StringBaseResource::getBuffer
	mov	DWORD PTR _rStart$[ebp], eax
; Line 1461
	mov	ecx, DWORD PTR _right$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	ecx, DWORD PTR _rStart$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _rLimit$[ebp], edx
$LN3@compareStr:
; Line 1464
	mov	eax, DWORD PTR _lStart$[ebp]
	cmp	eax, DWORD PTR _lLimit$[ebp]
	jae	SHORT $LN2@compareStr
	mov	eax, DWORD PTR _rStart$[ebp]
	cmp	eax, DWORD PTR _rLimit$[ebp]
	jae	SHORT $LN2@compareStr
; Line 1465
	mov	eax, DWORD PTR _lLimit$[ebp]
	sub	eax, 2
	mov	DWORD PTR _lLimit$[ebp], eax
	mov	ecx, DWORD PTR _rLimit$[ebp]
	sub	ecx, 2
	mov	DWORD PTR _rLimit$[ebp], ecx
	mov	edx, DWORD PTR _rLimit$[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _lLimit$[ebp]
	movzx	edx, WORD PTR [ecx]
	sub	edx, eax
	mov	DWORD PTR _diff$[ebp], edx
; Line 1466
	je	SHORT $LN1@compareStr
; Line 1467
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN4@compareStr
$LN1@compareStr:
; Line 1469
	jmp	SHORT $LN3@compareStr
$LN2@compareStr:
; Line 1471
	mov	ecx, DWORD PTR _right$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	esi, eax
	mov	ecx, DWORD PTR _left$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	sub	esi, eax
	mov	eax, esi
$LN4@compareStr:
; Line 1472
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareStringSuffixes@@YAHPBX00@Z ENDP			; compareStringSuffixes
_TEXT	ENDS
EXTRN	__imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?compareStringLengths@@YAHPBX00@Z
_TEXT	SEGMENT
_diff$ = -32						; size = 4
_right$ = -20						; size = 4
_left$ = -8						; size = 4
___formal$ = 8						; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
?compareStringLengths@@YAHPBX00@Z PROC			; compareStringLengths, COMDAT
; Line 1475
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1476
	mov	eax, DWORD PTR _l$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _left$[ebp], ecx
; Line 1477
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _right$[ebp], ecx
; Line 1480
	mov	eax, DWORD PTR _left$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [eax+108], 0
	setne	cl
	mov	edx, DWORD PTR _right$[ebp]
	xor	eax, eax
	cmp	DWORD PTR [edx+108], 0
	setne	al
	sub	ecx, eax
	mov	DWORD PTR _diff$[ebp], ecx
; Line 1481
	je	SHORT $LN3@compareStr@2
; Line 1482
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN4@compareStr@2
$LN3@compareStr@2:
; Line 1485
	mov	ecx, DWORD PTR _left$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	mov	esi, eax
	mov	ecx, DWORD PTR _right$[ebp]
	call	?length@StringBaseResource@@QBEHXZ	; StringBaseResource::length
	sub	esi, eax
	mov	DWORD PTR _diff$[ebp], esi
; Line 1486
	je	SHORT $LN2@compareStr@2
; Line 1487
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN4@compareStr@2
$LN2@compareStr@2:
; Line 1490
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR _left$[ebp]
	mov	edx, DWORD PTR [eax+120]
	sub	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR _diff$[ebp], edx
; Line 1491
	je	SHORT $LN1@compareStr@2
; Line 1492
	mov	eax, DWORD PTR _diff$[ebp]
	jmp	SHORT $LN4@compareStr@2
$LN1@compareStr@2:
; Line 1495
	mov	eax, DWORD PTR _right$[ebp]
	add	eax, 44					; 0000002cH
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _left$[ebp]
	add	ecx, 44					; 0000002cH
	call	DWORD PTR __imp_?compare@UnicodeString@icu_56@@QBECABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
$LN4@compareStr@2:
; Line 1496
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?compareStringLengths@@YAHPBX00@Z ENDP			; compareStringLengths
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>
PUBLIC	??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z ; icu_56::LocalPointerBase<TableResource>::LocalPointerBase<TableResource>
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<TableResource>::LocalPointer<TableResource>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z ; icu_56::LocalPointerBase<TableResource>::LocalPointerBase<TableResource>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>
__ehhandler$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@VTableResource@@@icu_56@@QAE@PAVTableResource@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<TableResource>::LocalPointer<TableResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T44709 = -236						; size = 4
$T44710 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointer<TableResource>::~LocalPointer<TableResource>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44710[ebp], ecx
	mov	edx, DWORD PTR $T44710[ebp]
	mov	DWORD PTR $T44709[ebp], edx
	cmp	DWORD PTR $T44709[ebp], 0
	je	SHORT $LN3@LocalPoint@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44709[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44709[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@2
$LN3@LocalPoint@2:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@2:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>
__ehhandler$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VTableResource@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointer<TableResource>::~LocalPointer<TableResource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ PROC ; icu_56::LocalPointerBase<TableResource>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VTableResource@@@icu_56@@QAEPAVTableResource@@XZ ENDP ; icu_56::LocalPointerBase<TableResource>::orphan
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>
PUBLIC	??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z ; icu_56::LocalPointerBase<ArrayResource>::LocalPointerBase<ArrayResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<ArrayResource>::LocalPointer<ArrayResource>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z ; icu_56::LocalPointerBase<ArrayResource>::LocalPointerBase<ArrayResource>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint@3
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint@3
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint@3:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>
__ehhandler$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<ArrayResource>::LocalPointer<ArrayResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T44733 = -236						; size = 4
$T44734 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointer<ArrayResource>::~LocalPointer<ArrayResource>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44734[ebp], ecx
	mov	edx, DWORD PTR $T44734[ebp]
	mov	DWORD PTR $T44733[ebp], edx
	cmp	DWORD PTR $T44733[ebp], 0
	je	SHORT $LN3@LocalPoint@4
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44733[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44733[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@4
$LN3@LocalPoint@4:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@4:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>
__ehhandler$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VArrayResource@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointer<ArrayResource>::~LocalPointer<ArrayResource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ PROC ; icu_56::LocalPointerBase<ArrayResource>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VArrayResource@@@icu_56@@QAEPAVArrayResource@@XZ ENDP ; icu_56::LocalPointerBase<ArrayResource>::orphan
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>
PUBLIC	??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z ; icu_56::LocalPointerBase<SResource>::LocalPointerBase<SResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z ; icu_56::LocalPointerBase<SResource>::LocalPointerBase<SResource>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint@5
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint@5
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint@5:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>
__ehhandler$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@USResource@@@icu_56@@QAE@PAUSResource@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<SResource>::LocalPointer<SResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv80 = -244						; size = 4
$T44757 = -236						; size = 4
$T44758 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44758[ebp], ecx
	mov	edx, DWORD PTR $T44758[ebp]
	mov	DWORD PTR $T44757[ebp], edx
	cmp	DWORD PTR $T44757[ebp], 0
	je	SHORT $LN3@LocalPoint@6
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44757[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44757[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN1@LocalPoint@6
$LN3@LocalPoint@6:
	mov	DWORD PTR tv80[ebp], 0
$LN1@LocalPoint@6:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>
__ehhandler$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@USResource@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointer<SResource>::~LocalPointer<SResource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ PROC ; icu_56::LocalPointerBase<SResource>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@USResource@@@icu_56@@QAEPAUSResource@@XZ ENDP ; icu_56::LocalPointerBase<SResource>::orphan
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>
PUBLIC	??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z ; icu_56::LocalPointerBase<IntVectorResource>::LocalPointerBase<IntVectorResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalPointer<IntVectorResource>::LocalPointer<IntVectorResource>, COMDAT
; _this$ = ecx
; Line 208
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z ; icu_56::LocalPointerBase<IntVectorResource>::LocalPointerBase<IntVectorResource>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 209
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalPoint@7
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalPoint@7
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalPoint@7:
; Line 212
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>
__ehhandler$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalPointer<IntVectorResource>::LocalPointer<IntVectorResource>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ$0
__ehfuncinfo$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T44781 = -236						; size = 4
$T44782 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointer<IntVectorResource>::~LocalPointer<IntVectorResource>, COMDAT
; _this$ = ecx
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44782[ebp], ecx
	mov	edx, DWORD PTR $T44782[ebp]
	mov	DWORD PTR $T44781[ebp], edx
	cmp	DWORD PTR $T44781[ebp], 0
	je	SHORT $LN3@LocalPoint@8
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T44781[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T44781[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN1@LocalPoint@8
$LN3@LocalPoint@8:
	mov	DWORD PTR tv84[ebp], 0
$LN1@LocalPoint@8:
; Line 230
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>
__ehhandler$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$LocalPointer@VIntVectorResource@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointer<IntVectorResource>::~LocalPointer<IntVectorResource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ PROC ; icu_56::LocalPointerBase<IntVectorResource>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAEPAVIntVectorResource@@XZ ENDP ; icu_56::LocalPointerBase<IntVectorResource>::orphan
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<StringResource *>::~LocalPointerBase<StringResource *>
PUBLIC	??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z ; icu_56::LocalPointerBase<StringResource *>::LocalPointerBase<StringResource *>
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z$0
__ehfuncinfo$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
_errorCode$ = 12					; size = 4
??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z PROC ; icu_56::LocalArray<StringResource *>::LocalArray<StringResource *>, COMDAT
; _this$ = ecx
; Line 360
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z ; icu_56::LocalPointerBase<StringResource *>::LocalPointerBase<StringResource *>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 361
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@LocalArray
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@LocalArray
; Line 362
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
$LN2@LocalArray:
; Line 364
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<StringResource *>::~LocalPointerBase<StringResource *>
__ehhandler$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$LocalArray@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@AAW4UErrorCode@@@Z ENDP ; icu_56::LocalArray<StringResource *>::LocalArray<StringResource *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
$T44805 = -212						; size = 4
_this$ = -8						; size = 4
??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ PROC	; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>, COMDAT
; _this$ = ecx
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 381
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T44805[ebp], ecx
	mov	edx, DWORD PTR $T44805[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 382
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ ; icu_56::LocalPointerBase<StringResource *>::~LocalPointerBase<StringResource *>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalArray@PAVStringResource@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalArray<StringResource *>::~LocalArray<StringResource *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z PROC ; icu_56::LocalArray<StringResource *>::operator[], COMDAT
; _this$ = ecx
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$LocalArray@PAVStringResource@@@icu_56@@QBEAAPAVStringResource@@H@Z ENDP ; icu_56::LocalArray<StringResource *>::operator[]
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ PROC ; icu_56::LocalPointerBase<StringResource *>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@PAVStringResource@@@icu_56@@QBEPAPAVStringResource@@XZ ENDP ; icu_56::LocalPointerBase<StringResource *>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z PROC ; icu_56::LocalPointerBase<TableResource>::LocalPointerBase<TableResource>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VTableResource@@@icu_56@@QAE@PAVTableResource@@@Z ENDP ; icu_56::LocalPointerBase<TableResource>::LocalPointerBase<TableResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VTableResource@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<TableResource>::~LocalPointerBase<TableResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z PROC ; icu_56::LocalPointerBase<ArrayResource>::LocalPointerBase<ArrayResource>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@PAVArrayResource@@@Z ENDP ; icu_56::LocalPointerBase<ArrayResource>::LocalPointerBase<ArrayResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VArrayResource@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<ArrayResource>::~LocalPointerBase<ArrayResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z PROC ; icu_56::LocalPointerBase<SResource>::LocalPointerBase<SResource>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@USResource@@@icu_56@@QAE@PAUSResource@@@Z ENDP ; icu_56::LocalPointerBase<SResource>::LocalPointerBase<SResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ PROC	; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@USResource@@@icu_56@@QAE@XZ ENDP	; icu_56::LocalPointerBase<SResource>::~LocalPointerBase<SResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z PROC ; icu_56::LocalPointerBase<IntVectorResource>::LocalPointerBase<IntVectorResource>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@PAVIntVectorResource@@@Z ENDP ; icu_56::LocalPointerBase<IntVectorResource>::LocalPointerBase<IntVectorResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@VIntVectorResource@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<IntVectorResource>::~LocalPointerBase<IntVectorResource>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z PROC ; icu_56::LocalPointerBase<StringResource *>::LocalPointerBase<StringResource *>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@PAPAVStringResource@@@Z ENDP ; icu_56::LocalPointerBase<StringResource *>::LocalPointerBase<StringResource *>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ PROC ; icu_56::LocalPointerBase<StringResource *>::~LocalPointerBase<StringResource *>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@PAVStringResource@@@icu_56@@QAE@XZ ENDP ; icu_56::LocalPointerBase<StringResource *>::~LocalPointerBase<StringResource *>
_TEXT	ENDS
PUBLIC	??0ResFile@@QAE@XZ				; ResFile::ResFile
EXTRN	_atexit:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EkNoPoolBundle@@YAXXZ
text$yc	SEGMENT
??__EkNoPoolBundle@@YAXXZ PROC				; `dynamic initializer for 'kNoPoolBundle'', COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _kNoPoolBundle
	call	??0ResFile@@QAE@XZ			; ResFile::ResFile
	push	OFFSET ??__FkNoPoolBundle@@YAXXZ	; `dynamic atexit destructor for 'kNoPoolBundle''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EkNoPoolBundle@@YAXXZ ENDP				; `dynamic initializer for 'kNoPoolBundle''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??0ResFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ResFile@@QAE@XZ PROC					; ResFile::ResFile, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ResFile@@QAE@XZ ENDP					; ResFile::ResFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??__EkNoResource@@YAXXZ
text$yc	SEGMENT
??__EkNoResource@@YAXXZ PROC				; `dynamic initializer for 'kNoResource'', COMDAT
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.cpp
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _kNoResource
	call	??0SResource@@QAE@XZ			; SResource::SResource
	push	OFFSET ??__FkNoResource@@YAXXZ		; `dynamic atexit destructor for 'kNoResource''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EkNoResource@@YAXXZ ENDP				; `dynamic initializer for 'kNoResource''
text$yc	ENDS
PUBLIC	??1ResFile@@QAE@XZ				; ResFile::~ResFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FkNoPoolBundle@@YAXXZ
text$yd	SEGMENT
??__FkNoPoolBundle@@YAXXZ PROC				; `dynamic atexit destructor for 'kNoPoolBundle'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _kNoPoolBundle
	call	??1ResFile@@QAE@XZ			; ResFile::~ResFile
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FkNoPoolBundle@@YAXXZ ENDP				; `dynamic atexit destructor for 'kNoPoolBundle''
text$yd	ENDS
EXTRN	?close@ResFile@@QAEXXZ:PROC			; ResFile::close
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ResFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ResFile@@QAE@XZ PROC					; ResFile::~ResFile, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\genrb\reslist.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@ResFile@@QAEXXZ			; ResFile::close
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ResFile@@QAE@XZ ENDP					; ResFile::~ResFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??__FkNoResource@@YAXXZ
text$yd	SEGMENT
??__FkNoResource@@YAXXZ PROC				; `dynamic atexit destructor for 'kNoResource'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET _kNoResource
	call	??1SResource@@UAE@XZ			; SResource::~SResource
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FkNoResource@@YAXXZ ENDP				; `dynamic atexit destructor for 'kNoResource''
text$yd	ENDS
_BSS	SEGMENT
	ALIGN	4

_kNoResource DB	02cH DUP (?)
_kNoPoolBundle DB 020H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_kNoPoolBundle$initializer$ DD FLAT:??__EkNoPoolBundle@@YAXXZ
_kNoResource$initializer$ DD FLAT:??__EkNoResource@@YAXXZ
CRT$XCU	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\gencnval\gencnval.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05PMBAOCDH@quiet?$AA@			; `string'
PUBLIC	??_C@_09CMGPLHNH@sourcedir?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_09JHBDCMB@copyright?$AA@			; `string'
PUBLIC	??_C@_07KBAMPNJK@verbose?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
_BSS	SEGMENT
_tagStore DB	0400H DUP (?)
_stringStore DB	01fbfeH DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_path:DWORD
_DATA	ENDS
_BSS	SEGMENT
	ALIGN	4

_converterCount DW 01H DUP (?)
	ALIGN	4

_tagCount DW	01H DUP (?)
	ALIGN	4

_knownAliasesCount DW 01H DUP (?)
	ALIGN	4

_aliasListsSize DW 01H DUP (?)
	ALIGN	4

_standardTagsUsed DB 01H DUP (?)
	ALIGN	4

_verbose DB	01H DUP (?)
	ALIGN	4

_quiet	DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05PMBAOCDH@quiet?$AA@
CONST	SEGMENT
??_C@_05PMBAOCDH@quiet?$AA@ DB 'quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMGPLHNH@sourcedir?$AA@
CONST	SEGMENT
??_C@_09CMGPLHNH@sourcedir?$AA@ DB 'sourcedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHBDCMB@copyright?$AA@
CONST	SEGMENT
??_C@_09JHBDCMB@copyright?$AA@ DB 'copyright', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBAMPNJK@verbose?$AA@
CONST	SEGMENT
??_C@_07KBAMPNJK@verbose?$AA@ DB 'verbose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_stringBlock DD	FLAT:_stringStore
	DD	00H
	DD	01fbfeH
_tagBlock DD	FLAT:_tagStore
	DD	00H
	DD	0400H
_lineNum DD	01H
_tableOptions DW 01H
	DW	01H
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07KBAMPNJK@verbose?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	076H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09JHBDCMB@copyright?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09CMGPLHNH@sourcedir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	073H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_05PMBAOCDH@quiet?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	071H
	DB	00H
	DB	00H
	ORG $+1
_DATA	ENDS
CONST	SEGMENT
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	043H
	DB	076H
	DB	041H
	DB	06cH
	DB	03H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	04H
	DB	02H
	DB	00H
?WHITESPACE@?1??addOfficialTaggedStandards@@9@9 DB ' ', 09H, 00H ; `addOfficialTaggedStandards'::`2'::WHITESPACE
CONST	ENDS
PUBLIC	??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@ ; `string'
PUBLIC	??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@ ; `string'
PUBLIC	??_C@_03IAEMGAKA@icu?$AA@			; `string'
PUBLIC	??_C@_08KCICHELA@cnvalias?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@		; `string'
PUBLIC	??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@ ; `string'
PUBLIC	??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_uprv_free_56:PROC
EXTRN	_udata_finish:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_udata_create:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	__imp__exit:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	_memset:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
	ALIGN	4

_knownAliases DW 0ffffH DUP (?)
	ALIGN	4

_aliasLists DW	0ffffH DUP (?)
	ALIGN	4

_tags	DB	01f7f04H DUP (?)
_converters DD	0fffH DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@
; File d:\mozilla\intl\icu\source\tools\gencnval\gencnval.c
CONST	SEGMENT
??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@ DB 'gencnval: er'
	DB	'ror finishing output file - %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@
CONST	SEGMENT
??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@ DB 'gencnval: '
	DB	'unable to open output file - error %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IAEMGAKA@icu?$AA@
CONST	SEGMENT
??_C@_03IAEMGAKA@icu?$AA@ DB 'icu', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KCICHELA@cnvalias?$AA@
CONST	SEGMENT
??_C@_08KCICHELA@cnvalias?$AA@ DB 'cnvalias', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@
CONST	SEGMENT
??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@ DB 'gencnval: '
	DB	'unable to open input file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@
CONST	SEGMENT
??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@ DB 'convrtrs.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@
CONST	SEGMENT
??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@ DB 'u'
	DB	'sage: %s [-options] [convrtrs.txt]', 0aH, 09H, 'read convrtrs'
	DB	'.txt and create icudt56l_cnvalias.icu', 0aH, 'options:', 0aH, 09H
	DB	'-h or -? or --help  this usage text', 0aH, 09H, '-v or --verb'
	DB	'ose     prints out extra information about the alias table', 0aH
	DB	09H, '-q or --quiet       do not display warnings and progress'
	DB	0aH, 09H, '-c or --copyright   include a copyright notice', 0aH
	DB	09H, '-d or --destdir     destination directory, followed by t'
	DB	'he path', 0aH, 09H, '-s or --sourcedir   source directory, fo'
	DB	'llowed by the path', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
CONST	SEGMENT
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ DB 'error in'
	DB	' command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_end$10716 = -592					; size = 4
_errorCode$ = -580					; size = 4
_out$ = -568						; size = 4
_in$ = -556						; size = 4
_pathBuf$ = -544					; size = 512
_n$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 788				; 00000314H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-788]
	mov	ecx, 197				; 000000c5H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 227
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 232
	call	_u_getDataDirectory_56
	mov	DWORD PTR _options+104, eax
	mov	eax, DWORD PTR _options+104
	mov	DWORD PTR _options+84, eax
; Line 233
	push	OFFSET _options
	push	7
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 236
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN20@main
; Line 239
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@main:
; Line 241
	cmp	DWORD PTR _argc$[ebp], 0
	jl	SHORT $LN18@main
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN18@main
	movsx	eax, BYTE PTR _options+38
	test	eax, eax
	je	SHORT $LN19@main
$LN18@main:
; Line 252
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BLG@MNNNABDA@usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLconvrtrs?4t@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 253
	xor	eax, eax
	cmp	DWORD PTR _argc$[ebp], 0
	setl	al
	jmp	$LN22@main
$LN19@main:
; Line 256
	movsx	eax, BYTE PTR _options+58
	test	eax, eax
	je	SHORT $LN17@main
; Line 257
	mov	BYTE PTR _verbose, 1
$LN17@main:
; Line 260
	movsx	eax, BYTE PTR _options+138
	test	eax, eax
	je	SHORT $LN16@main
; Line 261
	mov	BYTE PTR _quiet, 1
$LN16@main:
; Line 264
	cmp	DWORD PTR _argc$[ebp], 2
	jl	SHORT $LN15@main
; Line 265
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _path, ecx
; Line 266
	jmp	$LN14@main
$LN15@main:
; Line 267
	mov	eax, DWORD PTR _options+104
	mov	DWORD PTR _path, eax
; Line 268
	cmp	DWORD PTR _path, 0
	je	$LN13@main
	mov	eax, DWORD PTR _path
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN13@main
; Line 271
	mov	eax, DWORD PTR _path
	push	eax
	lea	ecx, DWORD PTR _pathBuf$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 272
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _pathBuf$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$10716[ebp], eax
; Line 273
	mov	eax, DWORD PTR _end$10716[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN12@main
; Line 274
	mov	eax, DWORD PTR _end$10716[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _end$10716[ebp]
	add	ecx, 1
	mov	DWORD PTR _end$10716[ebp], ecx
$LN12@main:
; Line 276
	push	OFFSET ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@
	mov	eax, DWORD PTR _end$10716[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 277
	lea	eax, DWORD PTR _pathBuf$[ebp]
	mov	DWORD PTR _path, eax
; Line 278
	jmp	SHORT $LN14@main
$LN13@main:
; Line 279
	mov	DWORD PTR _path, OFFSET ??_C@_0N@GLJCFNJF@convrtrs?4txt?$AA@
$LN14@main:
; Line 283
	push	130046					; 0001fbfeH
	push	0
	push	OFFSET _stringStore
	call	_memset
	add	esp, 12					; 0000000cH
; Line 284
	push	1024					; 00000400H
	push	0
	push	OFFSET _tagStore
	call	_memset
	add	esp, 12					; 0000000cH
; Line 285
	push	16380					; 00003ffcH
	push	0
	push	OFFSET _converters
	call	_memset
	add	esp, 12					; 0000000cH
; Line 286
	push	2064132					; 001f7f04H
	push	0
	push	OFFSET _tags
	call	_memset
	add	esp, 12					; 0000000cH
; Line 287
	push	131070					; 0001fffeH
	push	0
	push	OFFSET _aliasLists
	call	_memset
	add	esp, 12					; 0000000cH
; Line 288
	push	131070					; 0001fffeH
	push	0
	push	OFFSET _knownAliases
	call	_memset
	add	esp, 12					; 0000000cH
; Line 291
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _path
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _in$[ebp], eax
; Line 292
	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN10@main
; Line 293
	mov	esi, esp
	mov	eax, DWORD PTR _path
	push	eax
	push	OFFSET ??_C@_0CI@JFPBPMDK@gencnval?3?5unable?5to?5open?5input?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 294
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@main:
; Line 296
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_parseFile
	add	esp, 4
; Line 297
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 301
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _options+78
	neg	ecx
	sbb	ecx, ecx
	and	ecx, OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	ecx
	push	OFFSET _dataInfo
	push	OFFSET ??_C@_08KCICHELA@cnvalias?$AA@
	push	OFFSET ??_C@_03IAEMGAKA@icu?$AA@
	mov	edx, DWORD PTR _options+84
	push	edx
	call	_udata_create
	add	esp, 24					; 00000018H
	mov	DWORD PTR _out$[ebp], eax
; Line 302
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN9@main
; Line 303
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DB@IJDGILDA@gencnval?3?5unable?5to?5open?5output?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 304
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@main:
; Line 308
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_writeAliasTable
	add	esp, 4
; Line 311
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_finish
	add	esp, 8
; Line 312
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN8@main
; Line 313
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CM@EHLHEMJI@gencnval?3?5error?5finishing?5output@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 314
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@main:
; Line 318
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@main
$LN6@main:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@main:
	cmp	DWORD PTR _i$[ebp], 63			; 0000003fH
	jge	SHORT $LN5@main
; Line 319
	mov	DWORD PTR _n$[ebp], 0
	jmp	SHORT $LN4@main
$LN3@main:
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN4@main:
	cmp	DWORD PTR _n$[ebp], 4095		; 00000fffH
	jge	SHORT $LN2@main
; Line 320
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	ecx, DWORD PTR _n$[ebp]
	cmp	DWORD PTR _tags[eax+ecx*8+8], 0
	je	SHORT $LN1@main
; Line 321
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	ecx, DWORD PTR _n$[ebp]
	mov	edx, DWORD PTR _tags[eax+ecx*8+8]
	push	edx
	call	_uprv_free_56
	add	esp, 4
$LN1@main:
; Line 323
	jmp	SHORT $LN3@main
$LN2@main:
; Line 324
	jmp	SHORT $LN6@main
$LN5@main:
; Line 326
	xor	eax, eax
$LN22@main:
; Line 327
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 788				; 00000314H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN26@main:
	DD	2
	DD	$LN25@main
$LN25@main:
	DD	-544					; fffffde0H
	DD	512					; 00000200H
	DD	$LN23@main
	DD	-580					; fffffdbcH
	DD	4
	DD	$LN24@main
$LN24@main:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN23@main:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_main	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@ ; `string'
PUBLIC	??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@ ; `string'
PUBLIC	??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@ ; `string'
PUBLIC	??_C@_03NIFPGLBG@ALL?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__isspace:PROC
EXTRN	_T_FileStream_readLine:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@
CONST	SEGMENT
??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@ DB '%s'
	DB	':%d: error: alias table needs to start a list of standard tag'
	DB	's', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@
CONST	SEGMENT
??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@ DB '%s'
	DB	':%d: error: alias needs to start with a converter name', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@
CONST	SEGMENT
??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@ DB '%s'
	DB	':%d: error: cannot start an alias with a space', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NIFPGLBG@ALL?$AA@
CONST	SEGMENT
??_C@_03NIFPGLBG@ALL?$AA@ DB 'ALL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _parseFile
_TEXT	SEGMENT
_validParse$ = -65585					; size = 1
_lastLineSize$ = -65576					; size = 4
_lineSize$ = -65564					; size = 4
_lastLine$ = -65552					; size = 32767
_line$ = -32776						; size = 32767
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_parseFile PROC						; COMDAT
; Line 330
	push	ebp
	mov	ebp, esp
	mov	eax, 65784				; 000100f8H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-65784]
	mov	ecx, 16446				; 0000403eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 333
	mov	DWORD PTR _lineSize$[ebp], 0
; Line 334
	mov	DWORD PTR _lastLineSize$[ebp], 0
; Line 335
	mov	BYTE PTR _validParse$[ebp], 1
; Line 337
	mov	DWORD PTR _lineNum, 0
; Line 340
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	_getTagNumber
	add	esp, 8
; Line 341
	push	3
	push	OFFSET ??_C@_03NIFPGLBG@ALL?$AA@
	call	_getTagNumber
	add	esp, 8
; Line 342
	push	0
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	push	OFFSET _stringBlock
	call	_allocString
	add	esp, 12					; 0000000cH
$LN19@parseFile:
; Line 345
	movsx	eax, BYTE PTR _validParse$[ebp]
	test	eax, eax
	je	$LN21@parseFile
; Line 346
	mov	BYTE PTR _validParse$[ebp], 0
$LN17@parseFile:
; Line 349
	push	32767					; 00007fffH
	lea	eax, DWORD PTR _lastLine$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	_T_FileStream_readLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN16@parseFile
; Line 350
	lea	eax, DWORD PTR _lastLine$[ebp]
	push	eax
	call	_chomp
	add	esp, 4
	mov	DWORD PTR _lastLineSize$[ebp], eax
; Line 351
	cmp	DWORD PTR _lineSize$[ebp], 0
	je	SHORT $LN14@parseFile
	cmp	DWORD PTR _lastLineSize$[ebp], 0
	jle	SHORT $LN15@parseFile
	movsx	eax, BYTE PTR _lastLine$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN15@parseFile
$LN14@parseFile:
; Line 352
	lea	eax, DWORD PTR _lastLine$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineSize$[ebp]
	lea	edx, DWORD PTR _line$[ebp+ecx]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 353
	mov	eax, DWORD PTR _lineSize$[ebp]
	add	eax, DWORD PTR _lastLineSize$[ebp]
	mov	DWORD PTR _lineSize$[ebp], eax
	jmp	SHORT $LN13@parseFile
$LN15@parseFile:
; Line 354
	cmp	DWORD PTR _lineSize$[ebp], 0
	jle	SHORT $LN13@parseFile
; Line 355
	mov	BYTE PTR _validParse$[ebp], 1
; Line 356
	jmp	SHORT $LN16@parseFile
$LN13@parseFile:
; Line 358
	mov	eax, DWORD PTR _lineNum
	add	eax, 1
	mov	DWORD PTR _lineNum, eax
; Line 359
	jmp	$LN17@parseFile
$LN16@parseFile:
; Line 361
	movsx	eax, BYTE PTR _validParse$[ebp]
	test	eax, eax
	jne	SHORT $LN10@parseFile
	cmp	DWORD PTR _lineSize$[ebp], 0
	jle	$LN11@parseFile
$LN10@parseFile:
; Line 362
	movsx	eax, BYTE PTR _line$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@parseFile
; Line 363
	mov	eax, DWORD PTR _lineNum
	sub	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0DC@OOOGMDPK@?$CFs?3?$CFd?3?5error?3?5cannot?5start?5an?5al@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 364
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN8@parseFile
$LN9@parseFile:
; Line 365
	movsx	eax, BYTE PTR _line$[ebp]
	cmp	eax, 123				; 0000007bH
	jne	$LN7@parseFile
; Line 366
	movsx	eax, BYTE PTR _standardTagsUsed
	test	eax, eax
	jne	SHORT $LN6@parseFile
	mov	eax, DWORD PTR _lineSize$[ebp]
	movsx	ecx, BYTE PTR _line$[ebp+eax-1]
	cmp	ecx, 125				; 0000007dH
	je	SHORT $LN6@parseFile
; Line 367
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0DK@NBOJOHIA@?$CFs?3?$CFd?3?5error?3?5alias?5needs?5to?5sta@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 368
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@parseFile:
; Line 370
	mov	eax, DWORD PTR _lineSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_addOfficialTaggedStandards
	add	esp, 8
; Line 371
	mov	BYTE PTR _standardTagsUsed, 1
; Line 372
	jmp	SHORT $LN8@parseFile
$LN7@parseFile:
; Line 373
	movsx	eax, BYTE PTR _standardTagsUsed
	test	eax, eax
	je	SHORT $LN4@parseFile
; Line 374
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_parseLine
	add	esp, 4
; Line 376
	jmp	SHORT $LN8@parseFile
$LN4@parseFile:
; Line 377
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0EC@DFFMNFMG@?$CFs?3?$CFd?3?5error?3?5alias?5table?5needs?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 378
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@parseFile:
; Line 382
	cmp	DWORD PTR _lastLineSize$[ebp], 0
	jle	SHORT $LN2@parseFile
; Line 383
	lea	eax, DWORD PTR _lastLine$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 384
	mov	eax, DWORD PTR _lastLineSize$[ebp]
	mov	DWORD PTR _lineSize$[ebp], eax
; Line 386
	jmp	SHORT $LN11@parseFile
$LN2@parseFile:
; Line 387
	mov	DWORD PTR _lineSize$[ebp], 0
$LN11@parseFile:
; Line 390
	mov	eax, DWORD PTR _lineNum
	add	eax, 1
	mov	DWORD PTR _lineNum, eax
; Line 391
	jmp	$LN19@parseFile
$LN21@parseFile:
; Line 392
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@parseFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 65784				; 000100f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN25@parseFile:
	DD	2
	DD	$LN24@parseFile
$LN24@parseFile:
	DD	-32776					; ffff7ff8H
	DD	32767					; 00007fffH
	DD	$LN22@parseFile
	DD	-65552					; fffefff0H
	DD	32767					; 00007fffH
	DD	$LN23@parseFile
$LN23@parseFile:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN22@parseFile:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
_parseFile ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _chomp
_TEXT	SEGMENT
tv79 = -220						; size = 4
_lastNonSpace$ = -20					; size = 4
_s$ = -8						; size = 4
_line$ = 8						; size = 4
_chomp	PROC						; COMDAT
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 399
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 400
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _lastNonSpace$[ebp], eax
$LN6@chomp:
; Line 401
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@chomp
; Line 403
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN3@chomp
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN3@chomp
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN4@chomp
$LN3@chomp:
; Line 404
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 0
; Line 405
	jmp	SHORT $LN5@chomp
$LN4@chomp:
; Line 407
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@chomp
; Line 408
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _lastNonSpace$[ebp], eax
$LN2@chomp:
; Line 410
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 411
	jmp	SHORT $LN6@chomp
$LN5@chomp:
; Line 412
	mov	eax, DWORD PTR _lastNonSpace$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	edx, DWORD PTR _lastNonSpace$[ebp]
	add	edx, 1
	mov	DWORD PTR _lastNonSpace$[ebp], edx
	cmp	eax, ecx
	jbe	SHORT $LN9@chomp
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN10@chomp
$LN9@chomp:
	mov	DWORD PTR tv79[ebp], 0
$LN10@chomp:
	cmp	DWORD PTR tv79[ebp], 0
	je	SHORT $LN1@chomp
; Line 413
	mov	eax, DWORD PTR _lastNonSpace$[ebp]
	mov	BYTE PTR [eax], 0
; Line 414
	mov	eax, DWORD PTR _lastNonSpace$[ebp]
	mov	DWORD PTR _s$[ebp], eax
$LN1@chomp:
; Line 416
	mov	eax, DWORD PTR _s$[ebp]
	sub	eax, DWORD PTR _line$[ebp]
; Line 417
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_chomp	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@ ; `string'
;	COMDAT ??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@
CONST	SEGMENT
??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@ DB '%s:'
	DB	'%d: Unterminated tag list', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _parseLine
_TEXT	SEGMENT
_tag$10835 = -92					; size = 2
_alias$ = -80						; size = 4
_converter$ = -68					; size = 4
_cnv$ = -56						; size = 2
_length$ = -44						; size = 2
_limit$ = -32						; size = 2
_start$ = -20						; size = 2
_pos$ = -8						; size = 2
_line$ = 8						; size = 4
_parseLine PROC						; COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	xor	eax, eax
	mov	WORD PTR _pos$[ebp], ax
; Line 432
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	jne	SHORT $LN27@parseLine
; Line 433
	jmp	$LN29@parseLine
$LN27@parseLine:
; Line 437
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _start$[ebp], ax
$LN26@parseLine:
; Line 438
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN25@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN25@parseLine
; Line 439
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 440
	jmp	SHORT $LN26@parseLine
$LN25@parseLine:
; Line 441
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _limit$[ebp], ax
; Line 444
	movzx	eax, WORD PTR _limit$[ebp]
	movzx	ecx, WORD PTR _start$[ebp]
	sub	eax, ecx
	mov	WORD PTR _length$[ebp], ax
; Line 445
	movzx	eax, WORD PTR _length$[ebp]
	push	eax
	movzx	ecx, WORD PTR _start$[ebp]
	add	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	OFFSET _stringBlock
	call	_allocString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _converter$[ebp], eax
; Line 448
	mov	eax, DWORD PTR _converter$[ebp]
	push	eax
	call	_addConverter
	add	esp, 4
	mov	WORD PTR _cnv$[ebp], ax
; Line 451
	mov	ax, WORD PTR _start$[ebp]
	mov	WORD PTR _pos$[ebp], ax
$LN22@parseLine:
; Line 457
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN21@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN21@parseLine
; Line 458
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 459
	jmp	SHORT $LN22@parseLine
$LN21@parseLine:
; Line 462
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	jne	SHORT $LN20@parseLine
; Line 463
	jmp	$LN29@parseLine
$LN20@parseLine:
; Line 467
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _start$[ebp], ax
$LN19@parseLine:
; Line 468
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN18@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 123				; 0000007bH
	je	SHORT $LN18@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN18@parseLine
; Line 469
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 470
	jmp	SHORT $LN19@parseLine
$LN18@parseLine:
; Line 471
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _limit$[ebp], ax
; Line 474
	movzx	eax, WORD PTR _limit$[ebp]
	movzx	ecx, WORD PTR _start$[ebp]
	sub	eax, ecx
	mov	WORD PTR _length$[ebp], ax
; Line 475
	movzx	eax, WORD PTR _start$[ebp]
	test	eax, eax
	jne	SHORT $LN17@parseLine
; Line 477
	mov	eax, DWORD PTR _converter$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 478
	push	1
	movzx	eax, WORD PTR _cnv$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	call	_addAlias
	add	esp, 16					; 00000010H
; Line 480
	jmp	SHORT $LN16@parseLine
$LN17@parseLine:
; Line 481
	movzx	eax, WORD PTR _length$[ebp]
	push	eax
	movzx	ecx, WORD PTR _start$[ebp]
	add	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	OFFSET _stringBlock
	call	_allocString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _alias$[ebp], eax
; Line 482
	push	0
	movzx	eax, WORD PTR _cnv$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	call	_addAlias
	add	esp, 16					; 00000010H
$LN16@parseLine:
; Line 484
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	call	_addToKnownAliases
	add	esp, 4
$LN15@parseLine:
; Line 490
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN14@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN14@parseLine
; Line 491
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 492
	jmp	SHORT $LN15@parseLine
$LN14@parseLine:
; Line 495
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 123				; 0000007bH
	jne	$LN13@parseLine
; Line 496
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
$LN12@parseLine:
; Line 498
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _start$[ebp], ax
$LN9@parseLine:
; Line 499
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN8@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 125				; 0000007dH
	je	SHORT $LN8@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@parseLine
; Line 500
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 501
	jmp	SHORT $LN9@parseLine
$LN8@parseLine:
; Line 502
	mov	ax, WORD PTR _pos$[ebp]
	mov	WORD PTR _limit$[ebp], ax
; Line 504
	movzx	eax, WORD PTR _start$[ebp]
	movzx	ecx, WORD PTR _limit$[ebp]
	cmp	eax, ecx
	je	SHORT $LN6@parseLine
; Line 506
	movzx	eax, WORD PTR _limit$[ebp]
	movzx	ecx, WORD PTR _start$[ebp]
	sub	eax, ecx
	push	eax
	movzx	edx, WORD PTR _start$[ebp]
	add	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_getTagNumber
	add	esp, 8
	mov	WORD PTR _tag$10835[ebp], ax
; Line 507
	movzx	eax, WORD PTR _limit$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax-1]
	cmp	edx, 42					; 0000002aH
	sete	al
	movzx	ecx, al
	push	ecx
	movzx	edx, WORD PTR _cnv$[ebp]
	push	edx
	movzx	eax, WORD PTR _tag$10835[ebp]
	push	eax
	mov	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	call	_addAlias
	add	esp, 16					; 00000010H
$LN6@parseLine:
; Line 510
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN11@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	esi, esp
	push	edx
	call	DWORD PTR __imp__isspace
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN11@parseLine
; Line 511
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 512
	jmp	SHORT $LN6@parseLine
$LN11@parseLine:
; Line 513
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN10@parseLine
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 125				; 0000007dH
	jne	$LN12@parseLine
$LN10@parseLine:
; Line 515
	movzx	eax, WORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 125				; 0000007dH
	jne	SHORT $LN3@parseLine
; Line 516
	mov	ax, WORD PTR _pos$[ebp]
	add	ax, 1
	mov	WORD PTR _pos$[ebp], ax
; Line 517
	jmp	SHORT $LN2@parseLine
$LN3@parseLine:
; Line 518
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0BO@BMDOLGFL@?$CFs?3?$CFd?3?5Unterminated?5tag?5list?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 519
	mov	esi, esp
	push	65801					; 00010109H
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@parseLine:
; Line 521
	jmp	SHORT $LN1@parseLine
$LN13@parseLine:
; Line 522
	movzx	eax, WORD PTR _cnv$[ebp]
	movzx	ecx, WORD PTR _tags[eax*8+4]
	test	ecx, ecx
	sete	dl
	movzx	eax, dl
	push	eax
	movzx	ecx, WORD PTR _cnv$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	call	_addAlias
	add	esp, 16					; 00000010H
$LN1@parseLine:
; Line 524
	jmp	$LN22@parseLine
$LN29@parseLine:
; Line 525
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_parseLine ENDP
_TEXT	ENDS
PUBLIC	??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@ ; `string'
PUBLIC	??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@ ; `string'
PUBLIC	??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@ ; `string'
PUBLIC	??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@ ; `string'
EXTRN	_strcmp:PROC
EXTRN	_uprv_strnicmp_56:PROC
EXTRN	_strlen:PROC
;	COMDAT ??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@
CONST	SEGMENT
??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@ DB '%'
	DB	's:%d: warning: Tag "%s" was added to the list of standards be'
	DB	'cause it was not declared at beginning of the alias table.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@
CONST	SEGMENT
??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@ DB '%'
	DB	's:%d: error: Tag "%s" is not declared at the beginning of the'
	DB	' alias table.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@
CONST	SEGMENT
??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@ DB '%s'
	DB	':%d: error: too many tags', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@
CONST	SEGMENT
??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@ DB '%s:%d: too '
	DB	'many tags', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _getTagNumber
_TEXT	SEGMENT
tv72 = -244						; size = 4
tv182 = -242						; size = 2
_currTag$10862 = -44					; size = 4
_preferredName$ = -29					; size = 1
_t$ = -20						; size = 2
_atag$ = -8						; size = 4
_tag$ = 8						; size = 4
_tagLen$ = 12						; size = 2
_getTagNumber PROC					; COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 531
	movzx	eax, WORD PTR _tagLen$[ebp]
	test	eax, eax
	jle	SHORT $LN13@getTagNumb
	movzx	ecx, WORD PTR _tagLen$[ebp]
	mov	edx, DWORD PTR _tag$[ebp]
	movsx	eax, BYTE PTR [edx+ecx-1]
	xor	ecx, ecx
	cmp	eax, 42					; 0000002aH
	sete	cl
	mov	DWORD PTR tv72[ebp], ecx
	jmp	SHORT $LN14@getTagNumb
$LN13@getTagNumb:
	mov	DWORD PTR tv72[ebp], 0
$LN14@getTagNumb:
	mov	dl, BYTE PTR tv72[ebp]
	mov	BYTE PTR _preferredName$[ebp], dl
; Line 533
	movzx	eax, WORD PTR _tagCount
	cmp	eax, 63					; 0000003fH
	jl	SHORT $LN10@getTagNumb
; Line 534
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0BG@JGEFIOIB@?$CFs?3?$CFd?3?5too?5many?5tags?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 535
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@getTagNumb:
; Line 538
	movsx	eax, BYTE PTR _preferredName$[ebp]
	test	eax, eax
	je	SHORT $LN9@getTagNumb
; Line 540
	mov	ax, WORD PTR _tagLen$[ebp]
	sub	ax, 1
	mov	WORD PTR _tagLen$[ebp], ax
$LN9@getTagNumb:
; Line 543
	xor	eax, eax
	mov	WORD PTR _t$[ebp], ax
	jmp	SHORT $LN8@getTagNumb
$LN7@getTagNumb:
	mov	ax, WORD PTR _t$[ebp]
	add	ax, 1
	mov	WORD PTR _t$[ebp], ax
$LN8@getTagNumb:
	movzx	eax, WORD PTR _t$[ebp]
	movzx	ecx, WORD PTR _tagCount
	cmp	eax, ecx
	jge	SHORT $LN6@getTagNumb
; Line 544
	movzx	eax, WORD PTR _t$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	lea	edx, DWORD PTR _tagStore[ecx*2]
	mov	DWORD PTR _currTag$10862[ebp], edx
; Line 545
	mov	eax, DWORD PTR _currTag$10862[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movzx	ecx, WORD PTR _tagLen$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN5@getTagNumb
	movzx	eax, WORD PTR _tagLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _currTag$10862[ebp]
	push	edx
	call	_uprv_strnicmp_56
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@getTagNumb
; Line 546
	mov	ax, WORD PTR _t$[ebp]
	jmp	$LN12@getTagNumb
$LN5@getTagNumb:
; Line 548
	jmp	SHORT $LN7@getTagNumb
$LN6@getTagNumb:
; Line 551
	movzx	eax, WORD PTR _tagCount
	cmp	eax, 63					; 0000003fH
	jl	SHORT $LN4@getTagNumb
; Line 552
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0BN@LPAONBGN@?$CFs?3?$CFd?3?5error?3?5too?5many?5tags?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 553
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@getTagNumb:
; Line 557
	movzx	eax, WORD PTR _tagLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tag$[ebp]
	push	ecx
	push	OFFSET _tagBlock
	call	_allocString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _atag$[ebp], eax
; Line 559
	movsx	eax, BYTE PTR _standardTagsUsed
	test	eax, eax
	je	SHORT $LN3@getTagNumb
; Line 561
	mov	esi, esp
	mov	eax, DWORD PTR _atag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0EN@IJIEILCJ@?$CFs?3?$CFd?3?5error?3?5Tag?5?$CC?$CFs?$CC?5is?5not?5de@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 562
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@getTagNumb
$LN3@getTagNumb:
; Line 564
	movzx	eax, WORD PTR _tagLen$[ebp]
	test	eax, eax
	jle	SHORT $LN2@getTagNumb
	push	OFFSET ??_C@_03NIFPGLBG@ALL?$AA@
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@getTagNumb
; Line 566
	mov	esi, esp
	mov	eax, DWORD PTR _atag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0HK@IFEFCAGL@?$CFs?3?$CFd?3?5warning?3?5Tag?5?$CC?$CFs?$CC?5was?5add@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getTagNumb:
; Line 570
	mov	eax, DWORD PTR _atag$[ebp]
	sub	eax, OFFSET _tagStore
	sar	eax, 1
	movzx	ecx, WORD PTR _tagCount
	imul	ecx, 32764				; 00007ffcH
	mov	WORD PTR _tags[ecx], ax
; Line 573
	mov	ax, WORD PTR _tagCount
	mov	WORD PTR tv182[ebp], ax
	mov	cx, WORD PTR _tagCount
	add	cx, 1
	mov	WORD PTR _tagCount, cx
	mov	ax, WORD PTR tv182[ebp]
$LN12@getTagNumb:
; Line 574
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_getTagNumber ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@ ; `string'
PUBLIC	??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@ ; `string'
PUBLIC	??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@ ; `string'
EXTRN	__imp__strtok:PROC
;	COMDAT ??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@
CONST	SEGMENT
??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@ DB '%s:'
	DB	'%d: error: Missing end of tag group', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@
CONST	SEGMENT
??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@ DB '%s'
	DB	':%d: error: Missing start of tag group', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@
CONST	SEGMENT
??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@ DB '%s:'
	DB	'%d: error: official tags already added', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addOfficialTaggedStandards
_TEXT	SEGMENT
_tag$ = -32						; size = 4
_endTagExp$ = -20					; size = 4
_atag$ = -8						; size = 4
_line$ = 8						; size = 4
_lineLen$ = 12						; size = 4
_addOfficialTaggedStandards PROC			; COMDAT
; Line 583
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 589
	movzx	eax, WORD PTR _tagCount
	cmp	eax, 2
	jle	SHORT $LN5@addOfficia
; Line 590
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CL@GDJBOBOF@?$CFs?3?$CFd?3?5error?3?5official?5tags?5alre@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 591
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@addOfficia:
; Line 593
	mov	esi, esp
	push	123					; 0000007bH
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tag$[ebp], eax
; Line 594
	cmp	DWORD PTR _tag$[ebp], 0
	jne	SHORT $LN4@addOfficia
; Line 596
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CK@DOGPHJHD@?$CFs?3?$CFd?3?5error?3?5Missing?5start?5of?5t@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 597
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@addOfficia:
; Line 599
	mov	eax, DWORD PTR _tag$[ebp]
	add	eax, 1
	mov	DWORD PTR _tag$[ebp], eax
; Line 600
	mov	esi, esp
	push	125					; 0000007dH
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _endTagExp$[ebp], eax
; Line 601
	cmp	DWORD PTR _endTagExp$[ebp], 0
	jne	SHORT $LN3@addOfficia
; Line 602
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CI@OIJCJKO@?$CFs?3?$CFd?3?5error?3?5Missing?5end?5of?5tag@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 603
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@addOfficia:
; Line 605
	mov	eax, DWORD PTR _endTagExp$[ebp]
	mov	BYTE PTR [eax], 0
; Line 607
	mov	esi, esp
	push	OFFSET ?WHITESPACE@?1??addOfficialTaggedStandards@@9@9
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	call	DWORD PTR __imp__strtok
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tag$[ebp], eax
$LN2@addOfficia:
; Line 608
	cmp	DWORD PTR _tag$[ebp], 0
	je	SHORT $LN7@addOfficia
; Line 612
	push	-1
	mov	eax, DWORD PTR _tag$[ebp]
	push	eax
	push	OFFSET _tagBlock
	call	_allocString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _atag$[ebp], eax
; Line 615
	mov	eax, DWORD PTR _atag$[ebp]
	sub	eax, OFFSET _tagStore
	sar	eax, 1
	movzx	ecx, WORD PTR _tagCount
	imul	ecx, 32764				; 00007ffcH
	mov	WORD PTR _tags[ecx], ax
	mov	dx, WORD PTR _tagCount
	add	dx, 1
	mov	WORD PTR _tagCount, dx
; Line 620
	mov	esi, esp
	push	OFFSET ?WHITESPACE@?1??addOfficialTaggedStandards@@9@9
	push	0
	call	DWORD PTR __imp__strtok
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _tag$[ebp], eax
; Line 621
	jmp	SHORT $LN2@addOfficia
$LN7@addOfficia:
; Line 622
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addOfficialTaggedStandards ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@ ; `string'
;	COMDAT ??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@
CONST	SEGMENT
??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@ DB '%s:'
	DB	'%d: warning: Too many aliases defined for all converters', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addToKnownAliases
_TEXT	SEGMENT
tv78 = -196						; size = 4
_alias$ = 8						; size = 4
_addToKnownAliases PROC					; COMDAT
; Line 625
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 650
	movzx	eax, WORD PTR _knownAliasesCount
	cmp	eax, 65535				; 0000ffffH
	jl	SHORT $LN1@addToKnown
; Line 652
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0DN@NPGNEHFG@?$CFs?3?$CFd?3?5warning?3?5Too?5many?5aliases@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 653
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@addToKnown:
; Line 656
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, OFFSET _stringStore
	sar	eax, 1
	mov	DWORD PTR tv78[ebp], eax
	movzx	ecx, WORD PTR _knownAliasesCount
	mov	dx, WORD PTR tv78[ebp]
	mov	WORD PTR _knownAliases[ecx*2], dx
	mov	ax, WORD PTR _knownAliasesCount
	add	ax, 1
	mov	WORD PTR _knownAliasesCount, ax
	mov	ax, WORD PTR tv78[ebp]
$LN3@addToKnown:
; Line 657
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addToKnownAliases ENDP
_TEXT	ENDS
PUBLIC	??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@ ; `string'
PUBLIC	??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ ; `string'
PUBLIC	??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ ; `string'
PUBLIC	??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ ; `string'
PUBLIC	??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ ; `string'
PUBLIC	??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@ ; `string'
PUBLIC	??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@ ; `string'
PUBLIC	??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ ; `string'
PUBLIC	??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@ ; `string'
EXTRN	_uprv_realloc_56:PROC
EXTRN	_ucnv_compareNames_56:PROC
;	COMDAT ??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@
CONST	SEGMENT
??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@ DB '%'
	DB	's:%d: error: Alias %s and %s cannot both be the default alias'
	DB	' for standard tag %s and converter %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
CONST	SEGMENT
??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ DB '%s:%'
	DB	'd: warning: duplicate aliases %s and %s found for standard ta'
	DB	'g %s between converter %s and converter %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
CONST	SEGMENT
??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@ DB '%s:%'
	DB	'd: warning: duplicate aliases %s and %s found for standard %s'
	DB	' and converter %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
CONST	SEGMENT
??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ DB 'w'
	DB	'arning(line %d): alias %s contains an "=". Options are parsed'
	DB	' at run-time and do not need to be in the alias table.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
CONST	SEGMENT
??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@ DB 'w'
	DB	'arning(line %d): alias %s contains a ",". Options are parsed '
	DB	'at run-time and do not need to be in the alias table.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@
CONST	SEGMENT
??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@ DB '%s'
	DB	':%d: error: too many aliases for alias %s and converter %s', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@
CONST	SEGMENT
??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@ DB '%'
	DB	's:%d: error: unmatched } found', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
CONST	SEGMENT
??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ DB '%s:'
	DB	'%d: error: too many converter names', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@
CONST	SEGMENT
??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@ DB '%s'
	DB	':%d: error: too many standard tags', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addAlias
_TEXT	SEGMENT
_aliasNum$10938 = -56					; size = 2
_aliasList$ = -44					; size = 4
_startEmptyWithoutDefault$ = -29			; size = 1
_idx2$ = -20						; size = 4
_idx$ = -8						; size = 4
_alias$ = 8						; size = 4
_standard$ = 12						; size = 2
_converter$ = 16					; size = 2
_defaultName$ = 20					; size = 1
_addAlias PROC						; COMDAT
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 665
	mov	BYTE PTR _startEmptyWithoutDefault$[ebp], 0
; Line 668
	movzx	eax, WORD PTR _standard$[ebp]
	cmp	eax, 63					; 0000003fH
	jl	SHORT $LN24@addAlias
; Line 669
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CG@NAPMOKLF@?$CFs?3?$CFd?3?5error?3?5too?5many?5standard?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 670
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@addAlias:
; Line 672
	movzx	eax, WORD PTR _converter$[ebp]
	cmp	eax, 4095				; 00000fffH
	jl	SHORT $LN23@addAlias
; Line 673
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CI@GPNAFMAH@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 674
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@addAlias:
; Line 676
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _converter$[ebp]
	lea	edx, DWORD PTR _tags[eax+ecx*8+4]
	mov	DWORD PTR _aliasList$[ebp], edx
; Line 678
	mov	esi, esp
	push	125					; 0000007dH
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN22@addAlias
; Line 680
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CB@BLKOHOMF@?$CFs?3?$CFd?3?5error?3?5unmatched?5?$HN?5found?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@addAlias:
; Line 683
	mov	eax, DWORD PTR _aliasList$[ebp]
	movzx	ecx, WORD PTR [eax]
	add	ecx, 1
	cmp	ecx, 31					; 0000001fH
	jl	SHORT $LN21@addAlias
; Line 685
	movzx	eax, WORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0DO@KLALHEPH@?$CFs?3?$CFd?3?5error?3?5too?5many?5aliases?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 686
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@addAlias:
; Line 690
	movzx	eax, WORD PTR _standard$[ebp]
	cmp	eax, 1
	jne	$LN20@addAlias
	movzx	eax, WORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	cmp	edx, DWORD PTR _alias$[ebp]
	je	$LN20@addAlias
; Line 694
	mov	esi, esp
	push	44					; 0000002cH
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN19@addAlias
; Line 697
	mov	esi, esp
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	push	OFFSET ??_C@_0HF@JCIPJLJA@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@addAlias:
; Line 699
	mov	esi, esp
	push	61					; 0000003dH
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN20@addAlias
; Line 702
	mov	esi, esp
	mov	eax, DWORD PTR _alias$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	push	OFFSET ??_C@_0HG@DEHPCLGO@warning?$CIline?5?$CFd?$CJ?3?5alias?5?$CFs?5conta@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@addAlias:
; Line 706
	movzx	eax, WORD PTR _standard$[ebp]
	cmp	eax, 1
	je	$LN17@addAlias
; Line 708
	mov	DWORD PTR _idx$[ebp], 0
	jmp	SHORT $LN16@addAlias
$LN15@addAlias:
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN16@addAlias:
	movzx	eax, WORD PTR _converterCount
	cmp	DWORD PTR _idx$[ebp], eax
	jae	$LN17@addAlias
; Line 709
	mov	DWORD PTR _idx2$[ebp], 0
	jmp	SHORT $LN13@addAlias
$LN12@addAlias:
	mov	eax, DWORD PTR _idx2$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx2$[ebp], eax
$LN13@addAlias:
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	ecx, DWORD PTR _idx$[ebp]
	movzx	edx, WORD PTR _tags[eax+ecx*8+4]
	cmp	DWORD PTR _idx2$[ebp], edx
	jae	$LN11@addAlias
; Line 710
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	ecx, DWORD PTR _idx$[ebp]
	mov	edx, DWORD PTR _tags[eax+ecx*8+8]
	mov	eax, DWORD PTR _idx2$[ebp]
	mov	cx, WORD PTR [edx+eax*2]
	mov	WORD PTR _aliasNum$10938[ebp], cx
; Line 712
	movzx	eax, WORD PTR _aliasNum$10938[ebp]
	test	eax, eax
	je	$LN10@addAlias
	movzx	eax, WORD PTR _aliasNum$10938[ebp]
	lea	ecx, DWORD PTR _stringStore[eax*2]
	push	ecx
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	$LN10@addAlias
; Line 714
	movzx	eax, WORD PTR _converter$[ebp]
	cmp	DWORD PTR _idx$[ebp], eax
	jne	$LN9@addAlias
; Line 720
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	jne	SHORT $LN7@addAlias
	movzx	eax, WORD PTR _aliasNum$10938[ebp]
	lea	ecx, DWORD PTR _stringStore[eax*2]
	push	ecx
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@addAlias
$LN7@addAlias:
; Line 724
	movzx	eax, WORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	lea	edx, DWORD PTR _tagStore[ecx*2]
	push	edx
	movzx	eax, WORD PTR _aliasNum$10938[ebp]
	lea	ecx, DWORD PTR _stringStore[eax*2]
	push	ecx
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0FE@BFCOODGC@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 32					; 00000020H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@addAlias:
; Line 726
	jmp	$LN6@addAlias
$LN9@addAlias:
; Line 731
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	movzx	eax, WORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	lea	edx, DWORD PTR _tagStore[ecx*2]
	push	edx
	movzx	eax, WORD PTR _aliasNum$10938[ebp]
	lea	ecx, DWORD PTR _stringStore[eax*2]
	push	ecx
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0GN@KMHDEICL@?$CFs?3?$CFd?3?5warning?3?5duplicate?5aliase@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 36					; 00000024H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@addAlias:
; Line 733
	jmp	SHORT $LN11@addAlias
$LN10@addAlias:
; Line 735
	jmp	$LN12@addAlias
$LN11@addAlias:
; Line 736
	jmp	$LN15@addAlias
$LN17@addAlias:
; Line 756
	mov	eax, DWORD PTR _aliasList$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jg	SHORT $LN5@addAlias
; Line 757
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	cx, WORD PTR [eax]
	add	cx, 1
	mov	edx, DWORD PTR _aliasList$[ebp]
	mov	WORD PTR [edx], cx
; Line 758
	mov	BYTE PTR _startEmptyWithoutDefault$[ebp], 1
$LN5@addAlias:
; Line 760
	mov	eax, DWORD PTR _aliasList$[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR [ecx+ecx+2]
	push	edx
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_uprv_realloc_56
	add	esp, 8
	mov	edx, DWORD PTR _aliasList$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 761
	movsx	eax, BYTE PTR _startEmptyWithoutDefault$[ebp]
	test	eax, eax
	je	SHORT $LN4@addAlias
; Line 762
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	xor	edx, edx
	mov	WORD PTR [ecx], dx
$LN4@addAlias:
; Line 764
	movsx	eax, BYTE PTR _defaultName$[ebp]
	test	eax, eax
	je	$LN3@addAlias
; Line 765
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	test	edx, edx
	je	$LN2@addAlias
; Line 771
	movzx	eax, WORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	lea	edx, DWORD PTR _tagStore[ecx*2]
	push	edx
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	lea	eax, DWORD PTR _stringStore[edx*2]
	push	eax
	mov	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lineNum
	push	edx
	mov	eax, DWORD PTR _path
	push	eax
	push	OFFSET ??_C@_0GF@BIKCGJBN@?$CFs?3?$CFd?3?5error?3?5Alias?5?$CFs?5and?5?$CFs?5ca@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 32					; 00000020H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 772
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@addAlias:
; Line 774
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, OFFSET _stringStore
	sar	eax, 1
	mov	ecx, DWORD PTR _aliasList$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	WORD PTR [edx], ax
; Line 775
	jmp	SHORT $LN1@addAlias
$LN3@addAlias:
; Line 776
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, OFFSET _stringStore
	sar	eax, 1
	mov	ecx, DWORD PTR _aliasList$[ebp]
	movzx	edx, WORD PTR [ecx]
	mov	ecx, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	WORD PTR [ecx+edx*2], ax
	mov	edx, DWORD PTR _aliasList$[ebp]
	mov	ax, WORD PTR [edx]
	add	ax, 1
	mov	ecx, DWORD PTR _aliasList$[ebp]
	mov	WORD PTR [ecx], ax
$LN1@addAlias:
; Line 780
	movzx	eax, WORD PTR _converter$[ebp]
	mov	cx, WORD PTR _converters[eax*4+2]
	add	cx, 1
	movzx	edx, WORD PTR _converter$[ebp]
	mov	WORD PTR _converters[edx*4+2], cx
; Line 781
	movzx	eax, WORD PTR _standard$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	cx, WORD PTR _tags[eax+2]
	add	cx, 1
	movzx	edx, WORD PTR _standard$[ebp]
	imul	edx, 32764				; 00007ffcH
	mov	WORD PTR _tags[edx+2], cx
; Line 783
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ax, WORD PTR [eax]
$LN26@addAlias:
; Line 784
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addAlias ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@ ; `string'
PUBLIC	??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ ; `string'
;	COMDAT ??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@
CONST	SEGMENT
??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@ DB '%s:%'
	DB	'd: error: duplicate converter %s found!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
CONST	SEGMENT
??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@ DB '%s:'
	DB	'%d: error: too many converters', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addConverter
_TEXT	SEGMENT
tv136 = -206						; size = 2
_idx$ = -8						; size = 4
_converter$ = 8						; size = 4
_addConverter PROC					; COMDAT
; Line 787
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 789
	movzx	eax, WORD PTR _converterCount
	cmp	eax, 4095				; 00000fffH
	jl	SHORT $LN5@addConvert
; Line 790
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0CD@GMGFFHOI@?$CFs?3?$CFd?3?5error?3?5too?5many?5converter@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 791
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@addConvert:
; Line 794
	mov	DWORD PTR _idx$[ebp], 0
	jmp	SHORT $LN4@addConvert
$LN3@addConvert:
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN4@addConvert:
	movzx	eax, WORD PTR _converterCount
	cmp	DWORD PTR _idx$[ebp], eax
	jae	SHORT $LN2@addConvert
; Line 795
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	mov	eax, DWORD PTR _converter$[ebp]
	push	eax
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@addConvert
; Line 796
	mov	esi, esp
	mov	eax, DWORD PTR _converter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0CN@HFJPBAMD@?$CFs?3?$CFd?3?5error?3?5duplicate?5converte@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 797
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 798
	jmp	SHORT $LN2@addConvert
$LN1@addConvert:
; Line 800
	jmp	$LN3@addConvert
$LN2@addConvert:
; Line 802
	mov	eax, DWORD PTR _converter$[ebp]
	sub	eax, OFFSET _stringStore
	sar	eax, 1
	movzx	ecx, WORD PTR _converterCount
	mov	WORD PTR _converters[ecx*4], ax
; Line 803
	movzx	eax, WORD PTR _converterCount
	xor	ecx, ecx
	mov	WORD PTR _converters[eax*4+2], cx
; Line 805
	mov	ax, WORD PTR _converterCount
	mov	WORD PTR tv136[ebp], ax
	mov	cx, WORD PTR _converterCount
	add	cx, 1
	mov	WORD PTR _converterCount, cx
	mov	ax, WORD PTR tv136[ebp]
$LN7@addConvert:
; Line 806
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addConverter ENDP
_TEXT	ENDS
EXTRN	_udata_writeString:PROC
EXTRN	_udata_writeBlock:PROC
EXTRN	_udata_write16:PROC
EXTRN	_udata_write32:PROC
EXTRN	__imp__qsort:PROC
EXTRN	_uprv_malloc_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _writeAliasTable
_TEXT	SEGMENT
_normalizedStrings$11144 = -92				; size = 4
_uniqueAliasesToConverter$ = -80			; size = 4
_uniqueAliases$ = -68					; size = 4
_aliasArrLists$ = -56					; size = 4
_aliasOffset$ = -44					; size = 2
_uniqueAliasesSize$ = -32				; size = 4
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_out$ = 8						; size = 4
_writeAliasTable PROC					; COMDAT
; Line 978
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 981
	mov	eax, DWORD PTR _tagBlock+4
	shr	eax, 1
	mov	WORD PTR _aliasOffset$[ebp], ax
; Line 982
	movzx	eax, WORD PTR _tagCount
	movzx	ecx, WORD PTR _converterCount
	imul	eax, ecx
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _aliasArrLists$[ebp], eax
; Line 983
	movzx	eax, WORD PTR _knownAliasesCount
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _uniqueAliases$[ebp], eax
; Line 984
	movzx	eax, WORD PTR _knownAliasesCount
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _uniqueAliasesToConverter$[ebp], eax
; Line 986
	mov	esi, esp
	push	OFFSET _compareAliases
	push	2
	movzx	eax, WORD PTR _knownAliasesCount
	push	eax
	push	OFFSET _knownAliases
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 987
	movzx	eax, WORD PTR _aliasOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uniqueAliasesToConverter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _uniqueAliases$[ebp]
	push	edx
	call	_resolveAliases
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _uniqueAliasesSize$[ebp], eax
; Line 990
	xor	eax, eax
	mov	WORD PTR _aliasListsSize, ax
; Line 993
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN16@writeAlias
$LN15@writeAlias:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN16@writeAlias:
	movzx	eax, WORD PTR _tagCount
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN14@writeAlias
; Line 994
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN13@writeAlias
$LN12@writeAlias:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN13@writeAlias:
	movzx	eax, WORD PTR _converterCount
	cmp	DWORD PTR _j$[ebp], eax
	jae	SHORT $LN11@writeAlias
; Line 995
	movzx	eax, WORD PTR _aliasOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _j$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _aliasArrLists$[ebp]
	push	eax
	call	_createOneAliasList
	add	esp, 16					; 00000010H
; Line 996
	jmp	SHORT $LN12@writeAlias
$LN11@writeAlias:
; Line 997
	jmp	SHORT $LN15@writeAlias
$LN14@writeAlias:
; Line 1000
	movzx	eax, WORD PTR _tableOptions
	test	eax, eax
	jne	SHORT $LN10@writeAlias
; Line 1001
	push	8
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
; Line 1003
	jmp	SHORT $LN9@writeAlias
$LN10@writeAlias:
; Line 1004
	push	9
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
$LN9@writeAlias:
; Line 1009
	movzx	eax, WORD PTR _converterCount
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1010
	movzx	eax, WORD PTR _tagCount
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1011
	mov	eax, DWORD PTR _uniqueAliasesSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1012
	mov	eax, DWORD PTR _uniqueAliasesSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1013
	movzx	eax, WORD PTR _tagCount
	movzx	ecx, WORD PTR _converterCount
	imul	eax, ecx
	push	eax
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_write32
	add	esp, 8
; Line 1014
	movzx	eax, WORD PTR _aliasListsSize
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1015
	push	2
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
; Line 1016
	mov	eax, DWORD PTR _tagBlock+4
	add	eax, DWORD PTR _stringBlock+4
	shr	eax, 1
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 1017
	movzx	eax, WORD PTR _tableOptions
	test	eax, eax
	je	SHORT $LN8@writeAlias
; Line 1018
	mov	eax, DWORD PTR _tagBlock+4
	add	eax, DWORD PTR _stringBlock+4
	shr	eax, 1
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
$LN8@writeAlias:
; Line 1023
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@writeAlias
$LN6@writeAlias:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@writeAlias:
	movzx	eax, WORD PTR _converterCount
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN5@writeAlias
; Line 1024
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	movzx	edx, WORD PTR _aliasOffset$[ebp]
	add	ecx, edx
	push	ecx
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_write16
	add	esp, 8
; Line 1025
	jmp	SHORT $LN6@writeAlias
$LN5@writeAlias:
; Line 1029
	mov	DWORD PTR _i$[ebp], 2
	jmp	SHORT $LN4@writeAlias
$LN3@writeAlias:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@writeAlias:
	movzx	eax, WORD PTR _tagCount
	cmp	DWORD PTR _i$[ebp], eax
	jae	SHORT $LN2@writeAlias
; Line 1030
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_write16
	add	esp, 8
; Line 1031
	jmp	SHORT $LN3@writeAlias
$LN2@writeAlias:
; Line 1033
	movzx	eax, WORD PTR _tags
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write16
	add	esp, 8
; Line 1034
	movzx	eax, WORD PTR _tags+32764
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_write16
	add	esp, 8
; Line 1037
	mov	eax, DWORD PTR _uniqueAliasesSize$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _uniqueAliases$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1040
	mov	eax, DWORD PTR _uniqueAliasesSize$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _uniqueAliasesToConverter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1043
	movzx	eax, WORD PTR _tagCount
	sub	eax, 2
	movzx	ecx, WORD PTR _converterCount
	imul	eax, ecx
	shl	eax, 1
	push	eax
	movzx	edx, WORD PTR _converterCount
	shl	edx, 1
	mov	eax, DWORD PTR _aliasArrLists$[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1045
	movzx	eax, WORD PTR _converterCount
	shl	eax, 1
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _aliasArrLists$[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1048
	push	57005					; 0000deadH
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_write16
	add	esp, 8
; Line 1051
	movzx	eax, WORD PTR _aliasListsSize
	shl	eax, 1
	push	eax
	push	OFFSET _aliasLists
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1054
	push	4
	push	OFFSET _tableOptions
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 1057
	mov	eax, DWORD PTR _tagBlock+4
	push	eax
	mov	ecx, DWORD PTR _tagBlock
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeString
	add	esp, 12					; 0000000cH
; Line 1060
	mov	eax, DWORD PTR _stringBlock+4
	push	eax
	mov	ecx, DWORD PTR _stringBlock
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeString
	add	esp, 12					; 0000000cH
; Line 1063
	movzx	eax, WORD PTR _tableOptions
	test	eax, eax
	je	SHORT $LN1@writeAlias
; Line 1064
	mov	eax, DWORD PTR _tagBlock+4
	add	eax, DWORD PTR _stringBlock+4
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _normalizedStrings$11144[ebp], eax
; Line 1065
	mov	eax, DWORD PTR _tagBlock+4
	push	eax
	mov	ecx, DWORD PTR _tagBlock
	push	ecx
	mov	edx, DWORD PTR _normalizedStrings$11144[ebp]
	push	edx
	call	_createNormalizedAliasStrings
	add	esp, 12					; 0000000cH
; Line 1066
	mov	eax, DWORD PTR _stringBlock+4
	push	eax
	mov	ecx, DWORD PTR _stringBlock
	push	ecx
	mov	edx, DWORD PTR _normalizedStrings$11144[ebp]
	add	edx, DWORD PTR _tagBlock+4
	push	edx
	call	_createNormalizedAliasStrings
	add	esp, 12					; 0000000cH
; Line 1069
	mov	eax, DWORD PTR _tagBlock+4
	add	eax, DWORD PTR _stringBlock+4
	push	eax
	mov	ecx, DWORD PTR _normalizedStrings$11144[ebp]
	push	ecx
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_udata_writeString
	add	esp, 12					; 0000000cH
; Line 1070
	mov	eax, DWORD PTR _normalizedStrings$11144[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@writeAlias:
; Line 1073
	mov	eax, DWORD PTR _uniqueAliasesToConverter$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1074
	mov	eax, DWORD PTR _uniqueAliases$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1075
	mov	eax, DWORD PTR _aliasArrLists$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1076
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_writeAliasTable ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@ ; `string'
EXTRN	__imp__puts:PROC
EXTRN	__imp__printf:PROC
;	COMDAT ??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@ DB 'fol'
	DB	'ding %s into %s -> %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@ DB ' (alias conflict)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@ DB 'u'
	DB	'sing %s instead of %s -> %s', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _resolveAliases
_TEXT	SEGMENT
_lastName$ = -80					; size = 4
_oldConvNum$ = -68					; size = 2
_currConvNum$ = -56					; size = 2
_oldTagNum$ = -44					; size = 2
_currTagNum$ = -32					; size = 2
_idx$ = -20						; size = 4
_uniqueAliasIdx$ = -8					; size = 4
_uniqueAliasArr$ = 8					; size = 4
_uniqueAliasToConverterArr$ = 12			; size = 4
_aliasOffset$ = 16					; size = 2
_resolveAliases PROC					; COMDAT
; Line 848
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 849
	mov	DWORD PTR _uniqueAliasIdx$[ebp], 0
; Line 855
	lea	eax, DWORD PTR _currConvNum$[ebp]
	push	eax
	lea	ecx, DWORD PTR _oldTagNum$[ebp]
	push	ecx
	movzx	edx, WORD PTR _knownAliases
	push	edx
	call	_resolveAliasToConverter
	add	esp, 12					; 0000000cH
; Line 856
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	mov	dx, WORD PTR _currConvNum$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 857
	mov	ax, WORD PTR _currConvNum$[ebp]
	mov	WORD PTR _oldConvNum$[ebp], ax
; Line 858
	movzx	eax, WORD PTR _knownAliases
	movzx	ecx, WORD PTR _aliasOffset$[ebp]
	add	eax, ecx
	mov	edx, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasArr$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
; Line 859
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	add	eax, 1
	mov	DWORD PTR _uniqueAliasIdx$[ebp], eax
; Line 860
	movzx	eax, WORD PTR _knownAliases
	lea	ecx, DWORD PTR _stringStore[eax*2]
	mov	DWORD PTR _lastName$[ebp], ecx
; Line 862
	mov	DWORD PTR _idx$[ebp], 1
	jmp	SHORT $LN15@resolveAli
$LN14@resolveAli:
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN15@resolveAli:
	movzx	eax, WORD PTR _knownAliasesCount
	cmp	DWORD PTR _idx$[ebp], eax
	jae	$LN13@resolveAli
; Line 863
	lea	eax, DWORD PTR _currConvNum$[ebp]
	push	eax
	lea	ecx, DWORD PTR _currTagNum$[ebp]
	push	ecx
	mov	edx, DWORD PTR _idx$[ebp]
	movzx	eax, WORD PTR _knownAliases[edx*2]
	push	eax
	call	_resolveAliasToConverter
	add	esp, 12					; 0000000cH
; Line 864
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _knownAliases[eax*2]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	mov	eax, DWORD PTR _lastName$[ebp]
	push	eax
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	$LN12@resolveAli
; Line 867
	movzx	eax, WORD PTR _currTagNum$[ebp]
	movzx	ecx, WORD PTR _oldTagNum$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN9@resolveAli
	movzx	eax, WORD PTR _currTagNum$[ebp]
	cmp	eax, 2
	jge	SHORT $LN10@resolveAli
$LN9@resolveAli:
	movzx	eax, WORD PTR _oldTagNum$[ebp]
	test	eax, eax
	jne	$LN11@resolveAli
$LN10@resolveAli:
; Line 868
	mov	ax, WORD PTR _currTagNum$[ebp]
	mov	WORD PTR _oldTagNum$[ebp], ax
; Line 869
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	mov	dx, WORD PTR _currConvNum$[ebp]
	mov	WORD PTR [ecx+eax*2-2], dx
; Line 870
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _knownAliases[eax*2]
	movzx	edx, WORD PTR _aliasOffset$[ebp]
	add	ecx, edx
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	edx, DWORD PTR _uniqueAliasArr$[ebp]
	mov	WORD PTR [edx+eax*2-2], cx
; Line 871
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN8@resolveAli
; Line 875
	movzx	eax, WORD PTR _currConvNum$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _lastName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	movzx	edx, WORD PTR _knownAliases[ecx*2]
	lea	eax, DWORD PTR _stringStore[edx*2]
	push	eax
	push	OFFSET ??_C@_0BN@OFMNIJOK@using?5?$CFs?5instead?5of?5?$CFs?5?9?$DO?5?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 876
	movzx	eax, WORD PTR _oldConvNum$[ebp]
	movzx	ecx, WORD PTR _currConvNum$[ebp]
	cmp	eax, ecx
	je	SHORT $LN7@resolveAli
; Line 877
	mov	esi, esp
	push	OFFSET ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@resolveAli:
; Line 879
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@resolveAli:
; Line 882
	jmp	$LN6@resolveAli
$LN11@resolveAli:
; Line 884
	movsx	eax, BYTE PTR _verbose
	test	eax, eax
	je	SHORT $LN6@resolveAli
; Line 888
	movzx	eax, WORD PTR _oldConvNum$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _lastName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	movzx	edx, WORD PTR _knownAliases[ecx*2]
	lea	eax, DWORD PTR _stringStore[edx*2]
	push	eax
	push	OFFSET ??_C@_0BJ@EAAIBDN@folding?5?$CFs?5into?5?$CFs?5?9?$DO?5?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 889
	movzx	eax, WORD PTR _oldConvNum$[ebp]
	movzx	ecx, WORD PTR _currConvNum$[ebp]
	cmp	eax, ecx
	je	SHORT $LN4@resolveAli
; Line 890
	mov	esi, esp
	push	OFFSET ??_C@_0BC@PIGBENFB@?5?$CIalias?5conflict?$CJ?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@resolveAli:
; Line 892
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@resolveAli:
; Line 895
	movzx	eax, WORD PTR _oldConvNum$[ebp]
	movzx	ecx, WORD PTR _currConvNum$[ebp]
	cmp	eax, ecx
	je	SHORT $LN3@resolveAli
; Line 896
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	or	edx, 32768				; 00008000H
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	mov	WORD PTR [ecx+eax*2-2], dx
$LN3@resolveAli:
; Line 899
	jmp	SHORT $LN2@resolveAli
$LN12@resolveAli:
; Line 900
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	mov	dx, WORD PTR _currConvNum$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 901
	mov	ax, WORD PTR _currConvNum$[ebp]
	mov	WORD PTR _oldConvNum$[ebp], ax
; Line 902
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _knownAliases[eax*2]
	movzx	edx, WORD PTR _aliasOffset$[ebp]
	add	ecx, edx
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	edx, DWORD PTR _uniqueAliasArr$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 903
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	add	eax, 1
	mov	DWORD PTR _uniqueAliasIdx$[ebp], eax
; Line 904
	mov	eax, DWORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _knownAliases[eax*2]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	DWORD PTR _lastName$[ebp], edx
; Line 905
	mov	ax, WORD PTR _currTagNum$[ebp]
	mov	WORD PTR _oldTagNum$[ebp], ax
$LN2@resolveAli:
; Line 908
	mov	esi, esp
	push	44					; 0000002cH
	movzx	eax, WORD PTR _currConvNum$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@resolveAli
; Line 909
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	or	edx, 16384				; 00004000H
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
	mov	ecx, DWORD PTR _uniqueAliasToConverterArr$[ebp]
	mov	WORD PTR [ecx+eax*2-2], dx
$LN1@resolveAli:
; Line 911
	jmp	$LN14@resolveAli
$LN13@resolveAli:
; Line 912
	mov	eax, DWORD PTR _uniqueAliasIdx$[ebp]
; Line 913
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@resolveAli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@resolveAli:
	DD	3
	DD	$LN21@resolveAli
$LN21@resolveAli:
	DD	-32					; ffffffe0H
	DD	2
	DD	$LN18@resolveAli
	DD	-44					; ffffffd4H
	DD	2
	DD	$LN19@resolveAli
	DD	-56					; ffffffc8H
	DD	2
	DD	$LN20@resolveAli
$LN20@resolveAli:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN19@resolveAli:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN18@resolveAli:
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
_resolveAliases ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@ ; `string'
;	COMDAT ??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@
CONST	SEGMENT
??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@ DB '%s'
	DB	': warning: alias %s not found', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _resolveAliasToConverter
_TEXT	SEGMENT
_aliasNum$11008 = -56					; size = 2
_aliasNum$11000 = -44					; size = 2
_idx3$ = -32						; size = 2
_idx2$ = -20						; size = 2
_idx$ = -8						; size = 2
_alias$ = 8						; size = 2
_tagNum$ = 12						; size = 4
_converterNum$ = 16					; size = 4
_resolveAliasToConverter PROC				; COMDAT
; Line 810
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 813
	mov	eax, 2
	mov	WORD PTR _idx$[ebp], ax
	jmp	SHORT $LN17@resolveAli@2
$LN16@resolveAli@2:
	mov	ax, WORD PTR _idx$[ebp]
	add	ax, 1
	mov	WORD PTR _idx$[ebp], ax
$LN17@resolveAli@2:
	movzx	eax, WORD PTR _idx$[ebp]
	movzx	ecx, WORD PTR _tagCount
	cmp	eax, ecx
	jge	$LN15@resolveAli@2
; Line 814
	xor	eax, eax
	mov	WORD PTR _idx2$[ebp], ax
	jmp	SHORT $LN14@resolveAli@2
$LN13@resolveAli@2:
	mov	ax, WORD PTR _idx2$[ebp]
	add	ax, 1
	mov	WORD PTR _idx2$[ebp], ax
$LN14@resolveAli@2:
	movzx	eax, WORD PTR _idx2$[ebp]
	movzx	ecx, WORD PTR _converterCount
	cmp	eax, ecx
	jge	SHORT $LN12@resolveAli@2
; Line 815
	xor	eax, eax
	mov	WORD PTR _idx3$[ebp], ax
	jmp	SHORT $LN11@resolveAli@2
$LN10@resolveAli@2:
	mov	ax, WORD PTR _idx3$[ebp]
	add	ax, 1
	mov	WORD PTR _idx3$[ebp], ax
$LN11@resolveAli@2:
	movzx	eax, WORD PTR _idx3$[ebp]
	movzx	ecx, WORD PTR _idx$[ebp]
	imul	ecx, 32764				; 00007ffcH
	movzx	edx, WORD PTR _idx2$[ebp]
	movzx	ecx, WORD PTR _tags[ecx+edx*8+4]
	cmp	eax, ecx
	jge	SHORT $LN9@resolveAli@2
; Line 816
	movzx	eax, WORD PTR _idx$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _idx2$[ebp]
	movzx	edx, WORD PTR _idx3$[ebp]
	mov	eax, DWORD PTR _tags[eax+ecx*8+8]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _aliasNum$11000[ebp], cx
; Line 817
	movzx	eax, WORD PTR _aliasNum$11000[ebp]
	movzx	ecx, WORD PTR _alias$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN8@resolveAli@2
; Line 818
	mov	eax, DWORD PTR _tagNum$[ebp]
	mov	cx, WORD PTR _idx$[ebp]
	mov	WORD PTR [eax], cx
; Line 819
	mov	eax, DWORD PTR _converterNum$[ebp]
	mov	cx, WORD PTR _idx2$[ebp]
	mov	WORD PTR [eax], cx
; Line 820
	jmp	$LN18@resolveAli@2
$LN8@resolveAli@2:
; Line 822
	jmp	SHORT $LN10@resolveAli@2
$LN9@resolveAli@2:
; Line 823
	jmp	$LN13@resolveAli@2
$LN12@resolveAli@2:
; Line 824
	jmp	$LN16@resolveAli@2
$LN15@resolveAli@2:
; Line 827
	xor	eax, eax
	mov	WORD PTR _idx$[ebp], ax
; Line 828
	xor	eax, eax
	mov	WORD PTR _idx2$[ebp], ax
	jmp	SHORT $LN7@resolveAli@2
$LN6@resolveAli@2:
	mov	ax, WORD PTR _idx2$[ebp]
	add	ax, 1
	mov	WORD PTR _idx2$[ebp], ax
$LN7@resolveAli@2:
	movzx	eax, WORD PTR _idx2$[ebp]
	movzx	ecx, WORD PTR _converterCount
	cmp	eax, ecx
	jge	SHORT $LN5@resolveAli@2
; Line 829
	xor	eax, eax
	mov	WORD PTR _idx3$[ebp], ax
	jmp	SHORT $LN4@resolveAli@2
$LN3@resolveAli@2:
	mov	ax, WORD PTR _idx3$[ebp]
	add	ax, 1
	mov	WORD PTR _idx3$[ebp], ax
$LN4@resolveAli@2:
	movzx	eax, WORD PTR _idx3$[ebp]
	movzx	ecx, WORD PTR _idx$[ebp]
	imul	ecx, 32764				; 00007ffcH
	movzx	edx, WORD PTR _idx2$[ebp]
	movzx	ecx, WORD PTR _tags[ecx+edx*8+4]
	cmp	eax, ecx
	jge	SHORT $LN2@resolveAli@2
; Line 830
	movzx	eax, WORD PTR _idx$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _idx2$[ebp]
	movzx	edx, WORD PTR _idx3$[ebp]
	mov	eax, DWORD PTR _tags[eax+ecx*8+8]
	mov	cx, WORD PTR [eax+edx*2]
	mov	WORD PTR _aliasNum$11008[ebp], cx
; Line 831
	movzx	eax, WORD PTR _aliasNum$11008[ebp]
	movzx	ecx, WORD PTR _alias$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@resolveAli@2
; Line 832
	mov	eax, DWORD PTR _tagNum$[ebp]
	mov	cx, WORD PTR _idx$[ebp]
	mov	WORD PTR [eax], cx
; Line 833
	mov	eax, DWORD PTR _converterNum$[ebp]
	mov	cx, WORD PTR _idx2$[ebp]
	mov	WORD PTR [eax], cx
; Line 834
	jmp	SHORT $LN18@resolveAli@2
$LN1@resolveAli@2:
; Line 836
	jmp	SHORT $LN3@resolveAli@2
$LN2@resolveAli@2:
; Line 837
	jmp	$LN6@resolveAli@2
$LN5@resolveAli@2:
; Line 838
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _tagNum$[ebp]
	mov	WORD PTR [ecx], ax
; Line 839
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _converterNum$[ebp]
	mov	WORD PTR [ecx], ax
; Line 842
	movzx	eax, WORD PTR _alias$[ebp]
	lea	ecx, DWORD PTR _stringStore[eax*2]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0CB@JJJIOJDP@?$CFs?3?5warning?3?5alias?5?$CFs?5not?5found?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@resolveAli@2:
; Line 844
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_resolveAliasToConverter ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@ ; `string'
PUBLIC	??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@ ; `string'
;	COMDAT ??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@
CONST	SEGMENT
??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@ DB '%s: e'
	DB	'rror: Too many alias lists', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@
CONST	SEGMENT
??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@ DB '%s'
	DB	': warning: tag %s does not have a default alias for %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _createOneAliasList
_TEXT	SEGMENT
_value$11071 = -32					; size = 2
_aliasList$ = -20					; size = 4
_aliasNum$ = -8						; size = 4
_aliasArrLists$ = 8					; size = 4
_tag$ = 12						; size = 4
_converter$ = 16					; size = 4
_offset$ = 20						; size = 2
_createOneAliasList PROC				; COMDAT
; Line 916
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 918
	mov	eax, DWORD PTR _tag$[ebp]
	imul	eax, 32764				; 00007ffcH
	mov	ecx, DWORD PTR _converter$[ebp]
	lea	edx, DWORD PTR _tags[eax+ecx*8+4]
	mov	DWORD PTR _aliasList$[ebp], edx
; Line 920
	mov	eax, DWORD PTR _aliasList$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN9@createOneA
; Line 921
	movzx	eax, WORD PTR _converterCount
	imul	eax, DWORD PTR _tag$[ebp]
	add	eax, DWORD PTR _converter$[ebp]
	xor	ecx, ecx
	mov	edx, DWORD PTR _aliasArrLists$[ebp]
	mov	WORD PTR [edx+eax*2], cx
; Line 923
	jmp	$LN11@createOneA
$LN9@createOneA:
; Line 924
	movzx	eax, WORD PTR _aliasListsSize
	mov	ecx, DWORD PTR _aliasList$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR _aliasLists[eax*2], dx
	mov	ax, WORD PTR _aliasListsSize
	add	ax, 1
	mov	WORD PTR _aliasListsSize, ax
; Line 927
	movzx	eax, WORD PTR _converterCount
	imul	eax, DWORD PTR _tag$[ebp]
	add	eax, DWORD PTR _converter$[ebp]
	mov	ecx, DWORD PTR _aliasArrLists$[ebp]
	mov	dx, WORD PTR _aliasListsSize
	mov	WORD PTR [ecx+eax*2], dx
; Line 932
	mov	DWORD PTR _aliasNum$[ebp], 0
	jmp	SHORT $LN7@createOneA
$LN6@createOneA:
	mov	eax, DWORD PTR _aliasNum$[ebp]
	add	eax, 1
	mov	DWORD PTR _aliasNum$[ebp], eax
$LN7@createOneA:
	mov	eax, DWORD PTR _aliasList$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	DWORD PTR _aliasNum$[ebp], ecx
	jae	$LN11@createOneA
; Line 936
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _aliasNum$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	test	eax, eax
	je	SHORT $LN4@createOneA
; Line 937
	mov	eax, DWORD PTR _aliasList$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _aliasNum$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	movzx	ecx, WORD PTR _offset$[ebp]
	add	eax, ecx
	mov	WORD PTR _value$11071[ebp], ax
; Line 938
	jmp	SHORT $LN3@createOneA
$LN4@createOneA:
; Line 939
	xor	eax, eax
	mov	WORD PTR _value$11071[ebp], ax
; Line 940
	cmp	DWORD PTR _tag$[ebp], 0
	je	SHORT $LN3@createOneA
	movsx	eax, BYTE PTR _quiet
	test	eax, eax
	jne	SHORT $LN3@createOneA
; Line 944
	mov	eax, DWORD PTR _converter$[ebp]
	movzx	ecx, WORD PTR _converters[eax*4]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _tag$[ebp]
	imul	eax, 32764				; 00007ffcH
	movzx	ecx, WORD PTR _tags[eax]
	lea	edx, DWORD PTR _tagStore[ecx*2]
	push	edx
	mov	eax, DWORD PTR _path
	push	eax
	push	OFFSET ??_C@_0DK@KFMHEEIA@?$CFs?3?5warning?3?5tag?5?$CFs?5does?5not?5hav@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@createOneA:
; Line 947
	movzx	eax, WORD PTR _aliasListsSize
	mov	cx, WORD PTR _value$11071[ebp]
	mov	WORD PTR _aliasLists[eax*2], cx
	mov	dx, WORD PTR _aliasListsSize
	add	dx, 1
	mov	WORD PTR _aliasListsSize, dx
; Line 948
	movzx	eax, WORD PTR _aliasListsSize
	cmp	eax, 65535				; 0000ffffH
	jl	SHORT $LN1@createOneA
; Line 949
	mov	esi, esp
	mov	eax, DWORD PTR _path
	push	eax
	push	OFFSET ??_C@_0CB@FBNGFKLH@?$CFs?3?5error?3?5Too?5many?5alias?5lists?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 950
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@createOneA:
; Line 953
	jmp	$LN6@createOneA
$LN11@createOneA:
; Line 955
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_createOneAliasList ENDP
_TEXT	ENDS
EXTRN	_ucnv_io_stripASCIIForCompare_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _createNormalizedAliasStrings
_TEXT	SEGMENT
_normStrLen$11095 = -32					; size = 4
_currStrSize$11093 = -20				; size = 4
_currStrLen$ = -8					; size = 4
_normalizedStrings$ = 8					; size = 4
_origStringBlock$ = 12					; size = 4
_stringBlockLength$ = 16				; size = 4
_createNormalizedAliasStrings PROC			; COMDAT
; Line 958
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 960
	push	1
	mov	eax, DWORD PTR _origStringBlock$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _stringBlockLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _origStringBlock$[ebp]
	push	edx
	mov	eax, DWORD PTR _normalizedStrings$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN4@createNorm:
; Line 961
	mov	eax, DWORD PTR _origStringBlock$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _currStrLen$[ebp], eax
	mov	ecx, DWORD PTR _currStrLen$[ebp]
	cmp	ecx, DWORD PTR _stringBlockLength$[ebp]
	jge	SHORT $LN5@createNorm
; Line 962
	mov	eax, DWORD PTR _currStrLen$[ebp]
	add	eax, 1
	mov	DWORD PTR _currStrSize$11093[ebp], eax
; Line 963
	cmp	DWORD PTR _currStrLen$[ebp], 0
	jle	SHORT $LN2@createNorm
; Line 965
	mov	eax, DWORD PTR _origStringBlock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _normalizedStrings$[ebp]
	push	ecx
	call	_ucnv_io_stripASCIIForCompare_56
	add	esp, 8
; Line 966
	mov	eax, DWORD PTR _normalizedStrings$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _normStrLen$11095[ebp], eax
; Line 967
	cmp	DWORD PTR _normStrLen$11095[ebp], 0
	jle	SHORT $LN2@createNorm
; Line 968
	mov	eax, DWORD PTR _currStrSize$11093[ebp]
	sub	eax, DWORD PTR _normStrLen$11095[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _normalizedStrings$[ebp]
	add	ecx, DWORD PTR _normStrLen$11095[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN2@createNorm:
; Line 971
	mov	eax, DWORD PTR _stringBlockLength$[ebp]
	sub	eax, DWORD PTR _currStrSize$11093[ebp]
	mov	DWORD PTR _stringBlockLength$[ebp], eax
; Line 972
	mov	eax, DWORD PTR _normalizedStrings$[ebp]
	add	eax, DWORD PTR _currStrSize$11093[ebp]
	mov	DWORD PTR _normalizedStrings$[ebp], eax
; Line 973
	mov	eax, DWORD PTR _origStringBlock$[ebp]
	add	eax, DWORD PTR _currStrSize$11093[ebp]
	mov	DWORD PTR _origStringBlock$[ebp], eax
; Line 974
	jmp	SHORT $LN4@createNorm
$LN5@createNorm:
; Line 975
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_createNormalizedAliasStrings ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@ ; `string'
PUBLIC	??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@ ; `string'
EXTRN	_uprv_isInvariantString_56:PROC
;	COMDAT ??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@
CONST	SEGMENT
??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@ DB '%'
	DB	's:%d: error: the name %s contains not just invariant characte'
	DB	'rs', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@ DB '%s'
	DB	':%d: error: out of memory', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _allocString
_TEXT	SEGMENT
_p$ = -20						; size = 4
_top$ = -8						; size = 4
_block$ = 8						; size = 4
_s$ = 12						; size = 4
_length$ = 16						; size = 4
_allocString PROC					; COMDAT
; Line 1079
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1083
	cmp	DWORD PTR _length$[ebp], 0
	jge	SHORT $LN4@allocStrin
; Line 1084
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
$LN4@allocStrin:
; Line 1092
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 2
	and	eax, -2					; fffffffeH
	mov	ecx, DWORD PTR _block$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _top$[ebp], eax
; Line 1094
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _top$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jb	SHORT $LN3@allocStrin
; Line 1095
	mov	esi, esp
	mov	eax, DWORD PTR _lineNum
	push	eax
	mov	ecx, DWORD PTR _path
	push	ecx
	push	OFFSET ??_C@_0BN@HBEIMHDJ@?$CFs?3?$CFd?3?5error?3?5out?5of?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1096
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@allocStrin:
; Line 1100
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _block$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR _p$[ebp], ecx
; Line 1101
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1102
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	BYTE PTR [eax], 0
; Line 1103
	mov	eax, DWORD PTR _length$[ebp]
	and	eax, 1
	jne	SHORT $LN2@allocStrin
; Line 1104
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	BYTE PTR [eax+1], 0
$LN2@allocStrin:
; Line 1108
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_uprv_isInvariantString_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN1@allocStrin
; Line 1109
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineNum
	push	ecx
	mov	edx, DWORD PTR _path
	push	edx
	push	OFFSET ??_C@_0EC@GIBIBDN@?$CFs?3?$CFd?3?5error?3?5the?5name?5?$CFs?5contai@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1110
	mov	esi, esp
	push	13					; 0000000dH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@allocStrin:
; Line 1113
	mov	eax, DWORD PTR _block$[ebp]
	mov	ecx, DWORD PTR _top$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1114
	mov	eax, DWORD PTR _p$[ebp]
$LN6@allocStrin:
; Line 1115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_allocString ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _compareAliases
_TEXT	SEGMENT
_result$ = -8						; size = 4
_alias1$ = 8						; size = 4
_alias2$ = 12						; size = 4
_compareAliases PROC					; COMDAT
; Line 1118
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1120
	mov	eax, DWORD PTR _alias2$[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	mov	eax, DWORD PTR _alias1$[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	call	_ucnv_compareNames_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 1121
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@compareAli
; Line 1123
	mov	eax, DWORD PTR _alias1$[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR _alias2$[ebp]
	movzx	ecx, WORD PTR [eax]
	lea	edx, DWORD PTR _stringStore[ecx*2]
	push	edx
	call	_strlen
	add	esp, 4
	sub	esi, eax
	mov	eax, esi
	jmp	SHORT $LN2@compareAli
$LN1@compareAli:
; Line 1125
	mov	eax, DWORD PTR _result$[ebp]
$LN2@compareAli:
; Line 1126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_compareAliases ENDP
_TEXT	ENDS
END

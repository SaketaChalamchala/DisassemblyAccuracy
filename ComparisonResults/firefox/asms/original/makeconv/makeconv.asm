; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\makeconv\makeconv.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05PMBAOCDH@quiet?$AA@			; `string'
PUBLIC	??_C@_0BC@IGJCHNOE@ignore?9siso?9check?$AA@	; `string'
PUBLIC	??_C@_05KJDGBEEG@small?$AA@			; `string'
PUBLIC	??_C@_07KBAMPNJK@verbose?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_09JHBDCMB@copyright?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	_VERBOSE
PUBLIC	?QUIET@@3CA					; QUIET
PUBLIC	_SMALL
PUBLIC	_IGNORE_SISO_CHECK
PUBLIC	?haveCopyright@@3CA				; haveCopyright
_BSS	SEGMENT
_VERBOSE DB	01H DUP (?)
?QUIET@@3CA DB	01H DUP (?)				; QUIET
_SMALL	DB	01H DUP (?)
_IGNORE_SISO_CHECK DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05PMBAOCDH@quiet?$AA@
CONST	SEGMENT
??_C@_05PMBAOCDH@quiet?$AA@ DB 'quiet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IGJCHNOE@ignore?9siso?9check?$AA@
CONST	SEGMENT
??_C@_0BC@IGJCHNOE@ignore?9siso?9check?$AA@ DB 'ignore-siso-check', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KJDGBEEG@small?$AA@
CONST	SEGMENT
??_C@_05KJDGBEEG@small?$AA@ DB 'small', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBAMPNJK@verbose?$AA@
CONST	SEGMENT
??_C@_07KBAMPNJK@verbose?$AA@ DB 'verbose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHBDCMB@copyright?$AA@
CONST	SEGMENT
??_C@_09JHBDCMB@copyright?$AA@ DB 'copyright', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?haveCopyright@@3CA DB 01H				; haveCopyright
	ORG $+3
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	063H
	DB	06eH
	DB	076H
	DB	074H
	DB	06H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09JHBDCMB@copyright?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	056H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07KBAMPNJK@verbose?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	076H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_05KJDGBEEG@small?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BC@IGJCHNOE@ignore?9siso?9check?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_05PMBAOCDH@quiet?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	071H
	DB	00H
	DB	00H
	ORG $+1
_DATA	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	_uprv_isInvariantUnicodeString
EXTRN	_uprv_isInvariantUString_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\common\uinvchar.h
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_isInvariantUnicodeString
_TEXT	SEGMENT
_s$ = 8							; size = 4
_uprv_isInvariantUnicodeString PROC			; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_uprv_isInvariantUString_56
	add	esp, 8
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_isInvariantUnicodeString ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@ ; `string'
PUBLIC	??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@ ; `string'
PUBLIC	??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@ ; `string'
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@ ; `string'
PUBLIC	??_C@_04FFJDPJDA@?4cnv?$AA@			; `string'
PUBLIC	??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@ ; `string'
PUBLIC	??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@ ; `string'
PUBLIC	??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@ ; `string'
PUBLIC	??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	__imp__fflush:PROC
EXTRN	__imp__puts:PROC
EXTRN	_uprv_isInvariantString_56:PROC
EXTRN	_uprv_stricmp_56:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?lastIndexOf@CharString@icu_56@@QBEHD@Z:PROC
EXTRN	_findBasename:PROC
EXTRN	__imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	_getLongPathname:PROC
EXTRN	__imp_?length@CharString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_?ensureEndsWithFileSeparator@CharString@icu_56@@QAEAAV12@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0StringPiece@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_u_getVersion_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@
; File d:\mozilla\intl\icu\source\tools\makeconv\makeconv.cpp
CONST	SEGMENT
??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@ DB 'E'
	DB	'rror writing "%s" file for "%s" (%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@
CONST	SEGMENT
??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@ DB 'Error: A c'
	DB	'onverter name must contain only invariant characters.', 0aH, '%'
	DB	's is not a valid converter name.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@
CONST	SEGMENT
??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@ DB 'W'
	DB	'arning: %s%s claims to be ''%s''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@
CONST	SEGMENT
??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@ DB 'Error '
	DB	'creating converter for "%s" file for "%s" (%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FFJDPJDA@?4cnv?$AA@
CONST	SEGMENT
??_C@_04FFJDPJDA@?4cnv?$AA@ DB '.cnv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@ DB 'converter'
	DB	' name %s too long', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@
CONST	SEGMENT
??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@ DB 'make'
	DB	'conv version %u.%u, ICU tool to read .ucm codepage mapping fi'
	DB	'les and write .cnv files', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@
CONST	SEGMENT
??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@ DB 09H
	DB	'      --small       Generate smaller .cnv files. They will be'
	DB	0aH, 09H, '                    significantly smaller but may n'
	DB	'ot be compatible with', 0aH, 09H, '                    older '
	DB	'versions of ICU and will require heap memory', 0aH, 09H, '   '
	DB	'                 allocation when loaded.', 0aH, 09H, '      -'
	DB	'-ignore-siso-check         Use SI/SO other than 0xf/0xe.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@
CONST	SEGMENT
??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@ DB 'u'
	DB	'sage: %s [-options] files...', 0aH, 09H, 'read .ucm codepage '
	DB	'mapping files and write .cnv files', 0aH, 'options:', 0aH, 09H
	DB	'-h or -? or --help  this usage text', 0aH, 09H, '-V or --vers'
	DB	'ion     show a version message', 0aH, 09H, '-c or --copyright'
	DB	'   include a copyright notice', 0aH, 09H, '-d or --destdir   '
	DB	'  destination directory, followed by the path', 0aH, 09H, '-v'
	DB	' or --verbose     Turn on verbose output', 0aH, 09H, '-q or -'
	DB	'-quiet       do not display warnings and progress', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
CONST	SEGMENT
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ DB 'error in'
	DB	' command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT _main
_TEXT	SEGMENT
tv132 = -1548						; size = 4
tv190 = -1545						; size = 1
$T45167 = -1540						; size = 8
$T45168 = -1524						; size = 4
$T45171 = -1512						; size = 8
$T45172 = -1496						; size = 8
$T45173 = -1480						; size = 4
$T45174 = -1468						; size = 4
$T45175 = -1456						; size = 8
$T45176 = -1440						; size = 4
$T45177 = -1428						; size = 4
_p$38291 = -1224					; size = 4
_lastDotIndex$38277 = -1212				; size = 4
_basename$38271 = -1200					; size = 4
_arg$38269 = -1188					; size = 4
_localError$38268 = -1176				; size = 4
_printFilename$ = -1161					; size = 1
_outBasenameStart$ = -1152				; size = 4
_err$ = -1140						; size = 4
_outFileName$ = -1128					; size = 56
_destdir$ = -1064					; size = 4
_stdfile$38248 = -1052					; size = 4
_icuVersion$ = -1040					; size = 4
_cnvName$ = -1028					; size = 660
_data$ = -360						; size = 340
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1536				; 00000600H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1548]
	mov	ecx, 384				; 00000180H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 205
	lea	eax, DWORD PTR _icuVersion$[ebp]
	push	eax
	call	_u_getVersion_56
	add	esp, 4
; Line 206
	push	1
	lea	eax, DWORD PTR _icuVersion$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	lea	ecx, DWORD PTR _icuVersion$[ebp]
	push	ecx
	push	OFFSET _dataInfo+16
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 209
	call	_u_getDataDirectory_56
	mov	DWORD PTR _options+84, eax
; Line 210
	push	OFFSET _options
	push	9
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 213
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN31@main
; Line 216
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN30@main
$LN31@main:
; Line 217
	cmp	DWORD PTR _argc$[ebp], 2
	jge	SHORT $LN30@main
; Line 218
	mov	DWORD PTR _argc$[ebp], -1
$LN30@main:
; Line 220
	cmp	DWORD PTR _argc$[ebp], 0
	jl	SHORT $LN27@main
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN27@main
	movsx	eax, BYTE PTR _options+38
	test	eax, eax
	je	$LN28@main
$LN27@main:
; Line 221
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN34@main
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN35@main
$LN34@main:
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv132[ebp], eax
$LN35@main:
	mov	eax, DWORD PTR tv132[ebp]
	mov	DWORD PTR _stdfile$38248[ebp], eax
; Line 232
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BIH@LEKGGKP@usage?3?5?$CFs?5?$FL?9options?$FN?5files?4?4?4?6?7r@
	mov	edx, DWORD PTR _stdfile$38248[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 238
	mov	esi, esp
	push	OFFSET ??_C@_0BEA@MBIOMLNL@?7?5?5?5?5?5?5?9?9small?5?5?5?5?5?5?5Generate?5sm@
	mov	eax, DWORD PTR _stdfile$38248[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 239
	xor	eax, eax
	cmp	DWORD PTR _argc$[ebp], 0
	setl	al
	jmp	$LN33@main
$LN28@main:
; Line 242
	movsx	eax, BYTE PTR _options+78
	test	eax, eax
	je	SHORT $LN26@main
; Line 244
	movzx	eax, BYTE PTR _dataInfo+13
	mov	esi, esp
	push	eax
	movzx	ecx, BYTE PTR _dataInfo+12
	push	ecx
	push	OFFSET ??_C@_0FL@GKOCANAO@makeconv?5version?5?$CFu?4?$CFu?0?5ICU?5tool@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	mov	esi, esp
	push	OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 246
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@main:
; Line 250
	mov	al, BYTE PTR _options+58
	mov	BYTE PTR ?haveCopyright@@3CA, al	; haveCopyright
; Line 251
	mov	eax, DWORD PTR _options+84
	mov	DWORD PTR _destdir$[ebp], eax
; Line 252
	mov	al, BYTE PTR _options+118
	mov	BYTE PTR _VERBOSE, al
; Line 253
	mov	al, BYTE PTR _options+178
	mov	BYTE PTR ?QUIET@@3CA, al		; QUIET
; Line 254
	mov	al, BYTE PTR _options+138
	mov	BYTE PTR _SMALL, al
; Line 256
	movsx	eax, BYTE PTR _options+158
	test	eax, eax
	je	SHORT $LN25@main
; Line 257
	mov	BYTE PTR _IGNORE_SISO_CHECK, 1
$LN25@main:
; Line 260
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 261
	mov	DWORD PTR _err$[ebp], 0
; Line 262
	cmp	DWORD PTR _destdir$[ebp], 0
	je	$LN24@main
	mov	eax, DWORD PTR _destdir$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN24@main
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _destdir$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T45167[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _err$[ebp]
	push	ecx
	mov	edi, esp
	lea	edx, DWORD PTR _err$[ebp]
	push	edx
	lea	eax, DWORD PTR $T45167[ebp]
	push	eax
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?ensureEndsWithFileSeparator@CharString@icu_56@@QAEAAV12@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN24@main
; Line 265
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR $T45168[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45168[ebp]
	jmp	$LN33@main
$LN24@main:
; Line 268
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _outBasenameStart$[ebp], eax
; Line 282
	cmp	DWORD PTR _argc$[ebp], 2
	jg	SHORT $LN36@main
	movsx	eax, BYTE PTR _VERBOSE
	test	eax, eax
	jne	SHORT $LN36@main
	mov	BYTE PTR tv190[ebp], 0
	jmp	SHORT $LN37@main
$LN36@main:
	mov	BYTE PTR tv190[ebp], 1
$LN37@main:
	mov	cl, BYTE PTR tv190[ebp]
	mov	BYTE PTR _printFilename$[ebp], cl
; Line 283
	mov	eax, DWORD PTR _argv$[ebp]
	add	eax, 4
	mov	DWORD PTR _argv$[ebp], eax
	jmp	SHORT $LN22@main
$LN21@main:
	mov	eax, DWORD PTR _argv$[ebp]
	add	eax, 4
	mov	DWORD PTR _argv$[ebp], eax
$LN22@main:
	mov	eax, DWORD PTR _argc$[ebp]
	sub	eax, 1
	mov	DWORD PTR _argc$[ebp], eax
	je	$LN20@main
; Line 285
	mov	DWORD PTR _localError$38268[ebp], 0
; Line 286
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_getLongPathname
	add	esp, 4
	mov	DWORD PTR _arg$38269[ebp], eax
; Line 289
	mov	esi, esp
	mov	eax, DWORD PTR _outBasenameStart$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 290
	cmp	DWORD PTR _outBasenameStart$[ebp], 0
	je	SHORT $LN19@main
; Line 293
	mov	eax, DWORD PTR _arg$38269[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _basename$38271[ebp], eax
; Line 294
	mov	esi, esp
	mov	eax, DWORD PTR _basename$38271[ebp]
	push	eax
	lea	ecx, DWORD PTR $T45171[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _localError$38268[ebp]
	push	ecx
	lea	edx, DWORD PTR $T45171[ebp]
	push	edx
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 296
	jmp	SHORT $LN18@main
$LN19@main:
; Line 298
	mov	esi, esp
	mov	eax, DWORD PTR _arg$38269[ebp]
	push	eax
	lea	ecx, DWORD PTR $T45172[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR _localError$38268[ebp]
	push	ecx
	lea	edx, DWORD PTR $T45172[ebp]
	push	edx
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@main:
; Line 300
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN17@main
; Line 301
	mov	eax, DWORD PTR _localError$38268[ebp]
	mov	DWORD PTR $T45173[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45173[ebp]
	jmp	$LN33@main
$LN17@main:
; Line 305
	mov	esi, esp
	push	46					; 0000002eH
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?lastIndexOf@CharString@icu_56@@QBEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _lastDotIndex$38277[ebp], eax
; Line 306
	mov	eax, DWORD PTR _lastDotIndex$38277[ebp]
	cmp	eax, DWORD PTR _outBasenameStart$[ebp]
	jl	SHORT $LN16@main
; Line 307
	mov	esi, esp
	mov	eax, DWORD PTR _lastDotIndex$38277[ebp]
	push	eax
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?truncate@CharString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@main:
; Line 311
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?length@CharString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _outBasenameStart$[ebp]
	cmp	eax, 660				; 00000294H
	jl	SHORT $LN15@main
; Line 312
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _outBasenameStart$[ebp]
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BM@NPOCIIDC@converter?5name?5?$CFs?5too?5long?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 313
	mov	DWORD PTR $T45174[ebp], 15		; 0000000fH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45174[ebp]
	jmp	$LN33@main
$LN15@main:
; Line 315
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _outBasenameStart$[ebp]
	push	eax
	lea	eax, DWORD PTR _cnvName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 318
	mov	esi, esp
	push	OFFSET ??_C@_04FFJDPJDA@?4cnv?$AA@
	lea	ecx, DWORD PTR $T45175[ebp]
	call	DWORD PTR __imp_??0StringPiece@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	lea	ecx, DWORD PTR $T45175[ebp]
	push	ecx
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@ABVStringPiece@2@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 319
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN14@main
; Line 320
	mov	eax, DWORD PTR _localError$38268[ebp]
	mov	DWORD PTR $T45176[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45176[ebp]
	jmp	$LN33@main
$LN14@main:
; Line 327
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	?initConvData@@YAXPAUConvData@@@Z	; initConvData
	add	esp, 4
; Line 328
	lea	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	mov	ecx, DWORD PTR _arg$38269[ebp]
	push	ecx
	lea	edx, DWORD PTR _data$[ebp]
	push	edx
	call	?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z ; createConverter
	add	esp, 12					; 0000000cH
; Line 330
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@main
; Line 334
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _arg$38269[ebp]
	push	ecx
	mov	edi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0DG@BIFONMIB@Error?5creating?5converter?5for?5?$CC?$CFs@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 335
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@main
; Line 336
	mov	eax, DWORD PTR _localError$38268[ebp]
	mov	DWORD PTR _err$[ebp], eax
$LN12@main:
; Line 339
	jmp	$LN11@main
$LN13@main:
; Line 345
	push	92					; 0000005cH
	lea	eax, DWORD PTR _cnvName$[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _p$38291[ebp], eax
; Line 347
	cmp	DWORD PTR _p$38291[ebp], 0
	jne	SHORT $LN10@main
; Line 349
	push	47					; 0000002fH
	lea	eax, DWORD PTR _cnvName$[ebp]
	push	eax
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _p$38291[ebp], eax
; Line 350
	cmp	DWORD PTR _p$38291[ebp], 0
	jne	SHORT $LN9@main
; Line 352
	lea	eax, DWORD PTR _cnvName$[ebp]
	mov	DWORD PTR _p$38291[ebp], eax
$LN9@main:
; Line 355
	jmp	SHORT $LN8@main
$LN10@main:
; Line 357
	mov	eax, DWORD PTR _p$38291[ebp]
	add	eax, 1
	mov	DWORD PTR _p$38291[ebp], eax
$LN8@main:
; Line 359
	lea	eax, DWORD PTR _data$[ebp+244]
	push	eax
	mov	ecx, DWORD PTR _p$38291[ebp]
	push	ecx
	call	_uprv_stricmp_56
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@main
	movsx	eax, BYTE PTR ?QUIET@@3CA		; QUIET
	test	eax, eax
	jne	SHORT $LN7@main
; Line 363
	mov	esi, esp
	lea	eax, DWORD PTR _data$[ebp+244]
	push	eax
	push	OFFSET ??_C@_04FFJDPJDA@?4cnv?$AA@
	lea	ecx, DWORD PTR _cnvName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CB@FAAGEOEI@Warning?3?5?$CFs?$CFs?5claims?5to?5be?5?8?$CFs?8?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@main:
; Line 366
	lea	eax, DWORD PTR _cnvName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp+244]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 368
	push	-1
	lea	eax, DWORD PTR _data$[ebp+244]
	push	eax
	call	_uprv_isInvariantString_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN6@main
; Line 372
	mov	esi, esp
	lea	eax, DWORD PTR _data$[ebp+244]
	push	eax
	push	OFFSET ??_C@_0GD@PLKDPECN@Error?3?5A?5converter?5name?5must?5con@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 373
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN6@main
; Line 374
	mov	DWORD PTR _err$[ebp], 13		; 0000000dH
$LN6@main:
; Line 378
	mov	DWORD PTR _localError$38268[ebp], 0
; Line 379
	lea	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	mov	ecx, DWORD PTR _destdir$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cnvName$[ebp]
	push	edx
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z ; writeConverterData
	add	esp, 16					; 00000010H
; Line 381
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@main
; Line 385
	mov	eax, DWORD PTR _localError$38268[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _arg$38269[ebp]
	push	ecx
	mov	edi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CH@GKPFJOEP@Error?5writing?5?$CC?$CFs?$CC?5file?5for?5?$CC?$CFs?$CC@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 386
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@main
; Line 387
	mov	eax, DWORD PTR _localError$38268[ebp]
	mov	DWORD PTR _err$[ebp], eax
$LN3@main:
; Line 389
	jmp	SHORT $LN11@main
$LN4@main:
; Line 390
	movsx	eax, BYTE PTR _printFilename$[ebp]
	test	eax, eax
	je	SHORT $LN11@main
; Line 392
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _outBasenameStart$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@main:
; Line 395
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 396
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 398
	lea	eax, DWORD PTR _data$[ebp]
	push	eax
	call	?cleanupConvData@@YAXPAUConvData@@@Z	; cleanupConvData
	add	esp, 4
; Line 399
	jmp	$LN21@main
$LN20@main:
; Line 401
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR $T45177[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T45177[ebp]
$LN33@main:
; Line 402
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN47@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1548				; 0000060cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN47@main:
	DD	6
	DD	$LN46@main
$LN46@main:
	DD	-360					; fffffe98H
	DD	340					; 00000154H
	DD	$LN39@main
	DD	-1028					; fffffbfcH
	DD	660					; 00000294H
	DD	$LN40@main
	DD	-1040					; fffffbf0H
	DD	4
	DD	$LN41@main
	DD	-1128					; fffffb98H
	DD	56					; 00000038H
	DD	$LN42@main
	DD	-1140					; fffffb8cH
	DD	4
	DD	$LN43@main
	DD	-1176					; fffffb68H
	DD	4
	DD	$LN44@main
$LN44@main:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN43@main:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN42@main:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN41@main:
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN40@main:
	DB	99					; 00000063H
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN39@main:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _outFileName$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1552]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initConvData@@YAXPAUConvData@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initConvData@@YAXPAUConvData@@@Z PROC			; initConvData, COMDAT
; File d:\mozilla\intl\icu\source\tools\makeconv\makeconv.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	push	340					; 00000154H
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 50
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+12], 228			; 000000e4H
; Line 51
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+240], 100		; 00000064H
; Line 52
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?initConvData@@YAXPAUConvData@@@Z ENDP			; initConvData
_TEXT	ENDS
EXTRN	_ucm_close:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cleanupConvData@@YAXPAUConvData@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?cleanupConvData@@YAXPAUConvData@@@Z PROC		; cleanupConvData, COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN4@cleanupCon
; Line 58
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@cleanupCon
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@cleanupCon:
; Line 62
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@cleanupCon
; Line 63
	mov	esi, esp
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax+8], 0
$LN1@cleanupCon:
; Line 66
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucm_close
	add	esp, 4
; Line 67
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@cleanupCon:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cleanupConvData@@YAXPAUConvData@@@Z ENDP		; cleanupConvData
_TEXT	ENDS
PUBLIC	??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@ ; `string'
PUBLIC	??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@ ; `string'
PUBLIC	??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@ ; `string'
PUBLIC	??_C@_03MMAEEAFE@cnv?$AA@			; `string'
EXTRN	_udata_finish:PROC
EXTRN	_udata_writeBlock:PROC
EXTRN	_udata_create:PROC
;	COMDAT ??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@
CONST	SEGMENT
??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@ DB '-'
	DB	' Wrote %u bytes to the udata.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@
CONST	SEGMENT
??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@ DB 'error'
	DB	': wrote %u bytes to the .cnv file but counted %u bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@ DB '- Opened ud'
	DB	'ata %s.%s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@
CONST	SEGMENT
??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@ DB 'Cou'
	DB	'ldn''t create the udata %s.%s: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MMAEEAFE@cnv?$AA@
CONST	SEGMENT
??_C@_03MMAEEAFE@cnv?$AA@ DB 'cnv', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_tableType$ = -44					; size = 4
_size$ = -32						; size = 4
_sz2$ = -20						; size = 4
_mem$ = -8						; size = 4
_data$ = 8						; size = 4
_cnvName$ = 12						; size = 4
_cnvDir$ = 16						; size = 4
_status$ = 20						; size = 4
?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z PROC ; writeConverterData, COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	DWORD PTR _mem$[ebp], 0
; Line 114
	mov	DWORD PTR _size$[ebp], 0
; Line 117
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@writeConve
; Line 119
	jmp	$LN10@writeConve
$LN9@writeConve:
; Line 122
	mov	DWORD PTR _tableType$[ebp], 0
; Line 123
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN8@writeConve
; Line 124
	mov	eax, DWORD PTR _tableType$[ebp]
	or	eax, 1
	mov	DWORD PTR _tableType$[ebp], eax
$LN8@writeConve:
; Line 126
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@writeConve
; Line 127
	mov	eax, DWORD PTR _tableType$[ebp]
	or	eax, 2
	mov	DWORD PTR _tableType$[ebp], eax
$LN7@writeConve:
; Line 130
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	movsx	ecx, BYTE PTR ?haveCopyright@@3CA	; haveCopyright
	neg	ecx
	sbb	ecx, ecx
	and	ecx, OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	ecx
	push	OFFSET _dataInfo
	mov	edx, DWORD PTR _cnvName$[ebp]
	push	edx
	push	OFFSET ??_C@_03MMAEEAFE@cnv?$AA@
	mov	eax, DWORD PTR _cnvDir$[ebp]
	push	eax
	call	_udata_create
	add	esp, 24					; 00000018H
	mov	DWORD PTR _mem$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN6@writeConve
; Line 137
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_03MMAEEAFE@cnv?$AA@
	mov	edx, DWORD PTR _cnvName$[ebp]
	push	edx
	push	OFFSET ??_C@_0CF@IKBMFADM@Couldn?8t?5create?5the?5udata?5?$CFs?4?$CFs?3@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 138
	jmp	$LN10@writeConve
$LN6@writeConve:
; Line 141
	movsx	eax, BYTE PTR _VERBOSE
	test	eax, eax
	je	SHORT $LN5@writeConve
; Line 143
	mov	esi, esp
	push	OFFSET ??_C@_03MMAEEAFE@cnv?$AA@
	mov	eax, DWORD PTR _cnvName$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@PJEDMNNG@?9?5Opened?5udata?5?$CFs?4?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@writeConve:
; Line 148
	push	100					; 00000064H
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 149
	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 100				; 00000064H
	mov	DWORD PTR _size$[ebp], eax
; Line 151
	mov	eax, DWORD PTR _tableType$[ebp]
	and	eax, 1
	je	SHORT $LN4@writeConve
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _tableType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 240				; 000000f0H
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax
$LN4@writeConve:
; Line 154
	mov	eax, DWORD PTR _tableType$[ebp]
	and	eax, 2
	je	SHORT $LN3@writeConve
; Line 155
	mov	esi, esp
	mov	eax, DWORD PTR _tableType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	add	edx, 240				; 000000f0H
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _size$[ebp]
	mov	DWORD PTR _size$[ebp], eax
$LN3@writeConve:
; Line 158
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_udata_finish
	add	esp, 8
	mov	DWORD PTR _sz2$[ebp], eax
; Line 159
	mov	eax, DWORD PTR _size$[ebp]
	cmp	eax, DWORD PTR _sz2$[ebp]
	je	SHORT $LN2@writeConve
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sz2$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DN@INPLCDOJ@error?3?5wrote?5?$CFu?5bytes?5to?5the?5?4cn@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 5
$LN2@writeConve:
; Line 164
	movsx	eax, BYTE PTR _VERBOSE
	test	eax, eax
	je	SHORT $LN10@writeConve
; Line 166
	mov	esi, esp
	mov	eax, DWORD PTR _sz2$[ebp]
	push	eax
	push	OFFSET ??_C@_0CA@EDMMBPAH@?9?5Wrote?5?$CFu?5bytes?5to?5the?5udata?4?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@writeConve:
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?writeConverterData@@YAXPAUConvData@@PBD1PAW4UErrorCode@@@Z ENDP ; writeConverterData
_TEXT	ENDS
PUBLIC	??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@ ; `string'
PUBLIC	??_C@_04IBAPKJLK@?4ucm?$AA@			; `string'
PUBLIC	??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@ ; `string'
PUBLIC	??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_MBCSOkForBaseFromUnicode:PROC
EXTRN	_MBCSGetDummy:PROC
EXTRN	_ucm_checkValidity:PROC
EXTRN	_ucm_countChars:PROC
EXTRN	_strcat:PROC
EXTRN	_CnvExtOpen:PROC
EXTRN	_ucm_moveMappings:PROC
EXTRN	_ucm_sortTable:PROC
EXTRN	_ucm_checkBaseExt:PROC
EXTRN	_MBCSOpen:PROC
;	COMDAT ??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@
CONST	SEGMENT
??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@ DB 'e'
	DB	'rror: the <icu:base> file "%s" is not a base table file', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04IBAPKJLK@?4ucm?$AA@
CONST	SEGMENT
??_C@_04IBAPKJLK@?4ucm?$AA@ DB '.ucm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@
CONST	SEGMENT
??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@ DB '     '
	DB	'  the subchar1 byte is illegal in this codepage structure!', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@
CONST	SEGMENT
??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@ DB '       '
	DB	'the substitution character byte sequence is illegal in this c'
	DB	'odepage structure!', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_needsMove$38481 = -976					; size = 4
_mbcsData$38480 = -964					; size = 4
_fallbackFlags$38455 = -949				; size = 1
_mLimit$38454 = -940					; size = 4
_m$38453 = -928						; size = 4
_basename$38443 = -916					; size = 4
_baseFilename$38442 = -904				; size = 500
_baseStates$ = -396					; size = 4
_states$ = -384						; size = 4
_staticData$ = -372					; size = 4
_dataIsBase$ = -357					; size = 1
_baseData$ = -348					; size = 340
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_converterName$ = 12					; size = 4
_pErrorCode$ = 16					; size = 4
?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z PROC ; createConverter, COMDAT
; Line 625
	push	ebp
	mov	ebp, esp
	sub	esp, 1172				; 00000494H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1172]
	mov	ecx, 293				; 00000125H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 632
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN53@createConv
; Line 633
	jmp	$LN54@createConv
$LN53@createConv:
; Line 636
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	?initConvData@@YAXPAUConvData@@@Z	; initConvData
	add	esp, 4
; Line 638
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _converterName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	call	?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z ; readFile
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _dataIsBase$[ebp], al
; Line 639
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN52@createConv
; Line 640
	jmp	$LN54@createConv
$LN52@createConv:
; Line 643
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	DWORD PTR _staticData$[ebp], eax
; Line 644
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	DWORD PTR _states$[ebp], ecx
; Line 646
	movsx	eax, BYTE PTR _dataIsBase$[ebp]
	test	eax, eax
	je	$LN51@createConv
; Line 651
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_MBCSOpen
	add	esp, 4
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 652
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN50@createConv
; Line 653
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 655
	jmp	$LN49@createConv
$LN50@createConv:
; Line 657
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+76]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _staticData$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN48@createConv
; Line 658
	mov	esi, esp
	push	OFFSET ??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 659
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 661
	jmp	$LN49@createConv
$LN48@createConv:
; Line 663
	mov	eax, DWORD PTR _staticData$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	test	ecx, ecx
	je	SHORT $LN46@createConv
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _staticData$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN46@createConv
; Line 664
	mov	esi, esp
	push	OFFSET ??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 665
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 667
	jmp	SHORT $LN49@createConv
$LN46@createConv:
; Line 670
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+8], 0
	jle	SHORT $LN44@createConv
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _states$[ebp]
	push	eax
	call	_ucm_checkBaseExt
	add	esp, 20					; 00000014H
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN44@createConv
; Line 671
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
	jmp	SHORT $LN49@createConv
$LN44@createConv:
; Line 672
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+41]
	and	eax, 1
	je	SHORT $LN49@createConv
; Line 674
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucm_sortTable
	add	esp, 4
$LN49@createConv:
; Line 677
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	$LN41@createConv
; Line 681
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN40@createConv
; Line 682
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 683
	jmp	$LN41@createConv
$LN40@createConv:
; Line 694
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucm_moveMappings
	add	esp, 8
; Line 695
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ucm_sortTable
	add	esp, 4
; Line 696
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+8], 0
	jle	SHORT $LN41@createConv
; Line 698
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_CnvExtOpen
	add	esp, 4
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 699
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN37@createConv
; Line 700
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 701
	jmp	SHORT $LN41@createConv
$LN37@createConv:
; Line 703
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN41@createConv
; Line 704
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
$LN41@createConv:
; Line 709
	jmp	$LN54@createConv
$LN51@createConv:
; Line 714
	lea	eax, DWORD PTR _baseData$[ebp]
	push	eax
	call	?initConvData@@YAXPAUConvData@@@Z	; initConvData
	add	esp, 4
; Line 717
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _baseFilename$38442[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 718
	lea	eax, DWORD PTR _baseFilename$38442[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _basename$38443[ebp], eax
; Line 719
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 132124				; 0002041cH
	push	ecx
	mov	edx, DWORD PTR _basename$38443[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 720
	push	OFFSET ??_C@_04IBAPKJLK@?4ucm?$AA@
	mov	eax, DWORD PTR _basename$38443[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 723
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _baseFilename$38442[ebp]
	push	ecx
	lea	edx, DWORD PTR _baseData$[ebp]
	push	edx
	call	?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z ; readFile
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _dataIsBase$[ebp], al
; Line 724
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN33@createConv
; Line 725
	jmp	$LN54@createConv
	jmp	$LN32@createConv
$LN33@createConv:
; Line 726
	movsx	eax, BYTE PTR _dataIsBase$[ebp]
	test	eax, eax
	jne	SHORT $LN31@createConv
; Line 727
	mov	esi, esp
	lea	eax, DWORD PTR _baseFilename$38442[ebp]
	push	eax
	push	OFFSET ??_C@_0DK@DHKEHOLK@error?3?5the?5?$DMicu?3base?$DO?5file?5?$CC?$CFs?$CC?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 728
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 729
	jmp	$LN32@createConv
$LN31@createConv:
; Line 731
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_CnvExtOpen
	add	esp, 4
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 732
	mov	eax, DWORD PTR _data$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN29@createConv
; Line 733
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 734
	jmp	$LN32@createConv
$LN29@createConv:
; Line 739
	mov	eax, DWORD PTR _baseData$[ebp]
	add	eax, 8
	mov	DWORD PTR _baseStates$[ebp], eax
; Line 740
	mov	eax, DWORD PTR _states$[ebp]
	movsx	ecx, BYTE PTR [eax+132112]
	cmp	ecx, 1
	jne	SHORT $LN27@createConv
; Line 741
	mov	eax, DWORD PTR _states$[ebp]
	mov	DWORD PTR [eax+132100], 2
	mov	ecx, DWORD PTR _staticData$[ebp]
	mov	BYTE PTR [ecx+70], 2
	jmp	SHORT $LN26@createConv
$LN27@createConv:
; Line 742
	mov	eax, DWORD PTR _states$[ebp]
	cmp	DWORD PTR [eax+132100], 0
	jne	SHORT $LN26@createConv
; Line 743
	mov	eax, DWORD PTR _states$[ebp]
	mov	ecx, DWORD PTR _baseStates$[ebp]
	mov	edx, DWORD PTR [ecx+132100]
	mov	DWORD PTR [eax+132100], edx
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _states$[ebp]
	mov	dl, BYTE PTR [ecx+132100]
	mov	BYTE PTR [eax+70], dl
$LN26@createConv:
; Line 745
	mov	eax, DWORD PTR _states$[ebp]
	mov	ecx, DWORD PTR _states$[ebp]
	mov	edx, DWORD PTR [eax+132104]
	cmp	edx, DWORD PTR [ecx+132100]
	jge	SHORT $LN24@createConv
; Line 746
	mov	eax, DWORD PTR _states$[ebp]
	mov	ecx, DWORD PTR _baseStates$[ebp]
	mov	edx, DWORD PTR [ecx+132104]
	mov	DWORD PTR [eax+132104], edx
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _states$[ebp]
	mov	dl, BYTE PTR [ecx+132104]
	mov	BYTE PTR [eax+71], dl
$LN24@createConv:
; Line 749
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jne	SHORT $LN23@createConv
; Line 750
	push	1
	lea	eax, DWORD PTR _baseData$[ebp+312]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	lea	ecx, DWORD PTR _baseData$[ebp+312]
	push	ecx
	mov	edx, DWORD PTR _staticData$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 751
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	cl, BYTE PTR _baseData$[ebp+316]
	mov	BYTE PTR [eax+76], cl
$LN23@createConv:
; Line 760
	mov	BYTE PTR _fallbackFlags$38455[ebp], 0
; Line 761
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _m$38453[ebp], edx
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _m$38453[ebp]
	mov	DWORD PTR _mLimit$38454[ebp], edx
; Line 762
	jmp	SHORT $LN22@createConv
$LN21@createConv:
; Line 764
	mov	eax, DWORD PTR _m$38453[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _m$38453[ebp], eax
$LN22@createConv:
	mov	eax, DWORD PTR _m$38453[ebp]
	cmp	eax, DWORD PTR _mLimit$38454[ebp]
	jae	SHORT $LN20@createConv
	movzx	eax, BYTE PTR _fallbackFlags$38455[ebp]
	cmp	eax, 3
	je	SHORT $LN20@createConv
; Line 765
	mov	eax, DWORD PTR _m$38453[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 1
	jne	SHORT $LN19@createConv
; Line 766
	movzx	eax, BYTE PTR _fallbackFlags$38455[ebp]
	or	eax, 1
	mov	BYTE PTR _fallbackFlags$38455[ebp], al
	jmp	SHORT $LN18@createConv
$LN19@createConv:
; Line 767
	mov	eax, DWORD PTR _m$38453[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 3
	jne	SHORT $LN18@createConv
; Line 768
	movzx	eax, BYTE PTR _fallbackFlags$38455[ebp]
	or	eax, 2
	mov	BYTE PTR _fallbackFlags$38455[ebp], al
$LN18@createConv:
; Line 770
	jmp	SHORT $LN21@createConv
$LN20@createConv:
; Line 772
	movzx	eax, BYTE PTR _fallbackFlags$38455[ebp]
	and	eax, 1
	je	SHORT $LN16@createConv
; Line 773
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	BYTE PTR [eax+78], 1
$LN16@createConv:
; Line 775
	movzx	eax, BYTE PTR _fallbackFlags$38455[ebp]
	and	eax, 2
	je	SHORT $LN15@createConv
; Line 776
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	BYTE PTR [eax+77], 1
$LN15@createConv:
; Line 779
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+76]
	push	ecx
	mov	edx, DWORD PTR _staticData$[ebp]
	add	edx, 72					; 00000048H
	push	edx
	mov	eax, DWORD PTR _baseStates$[ebp]
	push	eax
	call	_ucm_countChars
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	je	SHORT $LN14@createConv
; Line 780
	mov	esi, esp
	push	OFFSET ??_C@_0FI@KLHCIHED@?5?5?5?5?5?5?5the?5substitution?5characte@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 781
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
	jmp	$LN32@createConv
$LN14@createConv:
; Line 783
	mov	eax, DWORD PTR _staticData$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	test	ecx, ecx
	je	SHORT $LN12@createConv
	push	1
	mov	eax, DWORD PTR _staticData$[ebp]
	add	eax, 80					; 00000050H
	push	eax
	mov	ecx, DWORD PTR _baseStates$[ebp]
	push	ecx
	call	_ucm_countChars
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	je	SHORT $LN12@createConv
; Line 784
	mov	esi, esp
	push	OFFSET ??_C@_0EB@PMEFADGL@?5?5?5?5?5?5?5the?5subchar1?5byte?5is?5ille@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 785
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 787
	jmp	$LN32@createConv
$LN12@createConv:
; Line 790
	mov	eax, DWORD PTR _baseStates$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_ucm_checkValidity
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@createConv
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _baseStates$[ebp]
	push	edx
	call	_ucm_checkBaseExt
	add	esp, 20					; 00000014H
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN10@createConv
$LN9@createConv:
; Line 791
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 792
	jmp	$LN32@createConv
$LN10@createConv:
; Line 793
	mov	eax, DWORD PTR _states$[ebp]
	cmp	DWORD PTR [eax+132104], 1
	jle	$LN7@createConv
; Line 812
	call	_MBCSGetDummy
	mov	DWORD PTR _mbcsData$38480[ebp], eax
; Line 813
	mov	DWORD PTR _needsMove$38481[ebp], 0
; Line 814
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _m$38453[ebp], edx
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	imul	edx, 12					; 0000000cH
	add	edx, DWORD PTR _m$38453[ebp]
	mov	DWORD PTR _mLimit$38454[ebp], edx
; Line 815
	jmp	SHORT $LN6@createConv
$LN5@createConv:
; Line 817
	mov	eax, DWORD PTR _m$38453[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _m$38453[ebp], eax
$LN6@createConv:
	mov	eax, DWORD PTR _m$38453[ebp]
	cmp	eax, DWORD PTR _mLimit$38454[ebp]
	jae	SHORT $LN4@createConv
; Line 818
	mov	eax, DWORD PTR _m$38453[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	push	ecx
	mov	edx, DWORD PTR _m$38453[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _m$38453[ebp]
	movsx	edx, BYTE PTR [ecx+9]
	push	edx
	mov	eax, DWORD PTR _m$38453[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _mbcsData$38480[ebp]
	push	ecx
	call	_MBCSOkForBaseFromUnicode
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN3@createConv
; Line 819
	mov	eax, DWORD PTR _m$38453[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _m$38453[ebp]
	mov	BYTE PTR [edx+10], cl
; Line 820
	mov	eax, DWORD PTR _m$38453[ebp]
	mov	BYTE PTR [eax+11], 1
; Line 821
	mov	eax, DWORD PTR _needsMove$38481[ebp]
	add	eax, 1
	mov	DWORD PTR _needsMove$38481[ebp], eax
$LN3@createConv:
; Line 823
	jmp	$LN5@createConv
$LN4@createConv:
; Line 825
	cmp	DWORD PTR _needsMove$38481[ebp], 0
	je	SHORT $LN7@createConv
; Line 826
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _baseData$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucm_moveMappings
	add	esp, 8
; Line 827
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_ucm_sortTable
	add	esp, 4
$LN7@createConv:
; Line 830
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN32@createConv
; Line 831
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
$LN32@createConv:
; Line 837
	lea	eax, DWORD PTR _baseData$[ebp]
	push	eax
	call	?cleanupConvData@@YAXPAUConvData@@@Z	; cleanupConvData
	add	esp, 4
$LN54@createConv:
; Line 839
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN59@createConv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1172				; 00000494H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN59@createConv:
	DD	2
	DD	$LN58@createConv
$LN58@createConv:
	DD	-348					; fffffea4H
	DD	340					; 00000154H
	DD	$LN56@createConv
	DD	-904					; fffffc78H
	DD	500					; 000001f4H
	DD	$LN57@createConv
$LN57@createConv:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN56@createConv:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
?createConverter@@YAXPAUConvData@@PBDPAW4UErrorCode@@@Z ENDP ; createConverter
_TEXT	ENDS
PUBLIC	??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@ ; `string'
PUBLIC	??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@ ; `string'
PUBLIC	??_C@_07GOGBKBKH@CHARMAP?$AA@			; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	_T_FileStream_close:PROC
EXTRN	_strcmp:PROC
EXTRN	_u_skipWhitespace:PROC
EXTRN	_T_FileStream_readLine:PROC
EXTRN	_ucm_readTable:PROC
EXTRN	_ucm_processStates:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	_ucm_open:PROC
;	COMDAT ??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@
CONST	SEGMENT
??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@ DB 'error: som'
	DB	'e entries have the mapping precision (with ''|''), some do no'
	DB	't', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@
CONST	SEGMENT
??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@ DB 'unexpected '
	DB	'text after the base mapping table', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07GOGBKBKH@CHARMAP?$AA@
CONST	SEGMENT
??_C@_07GOGBKBKH@CHARMAP?$AA@ DB 'CHARMAP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_dataIsBase$ = -1077					; size = 1
_baseStates$ = -1068					; size = 4
_convFile$ = -1056					; size = 4
_end$ = -1044						; size = 4
_line$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_converterName$ = 12					; size = 4
_pErrorCode$ = 16					; size = 4
?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z PROC	; readFile, COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
	sub	esp, 1276				; 000004fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1276]
	mov	ecx, 319				; 0000013fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 560
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN17@readFile
; Line 561
	xor	al, al
	jmp	$LN18@readFile
$LN17@readFile:
; Line 564
	call	_ucm_open
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 566
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _converterName$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _convFile$[ebp], eax
; Line 567
	cmp	DWORD PTR _convFile$[ebp], 0
	jne	SHORT $LN16@readFile
; Line 568
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 4
; Line 569
	xor	al, al
	jmp	$LN18@readFile
$LN16@readFile:
; Line 572
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _convFile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	call	?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z ; readHeader
	add	esp, 12					; 0000000cH
; Line 573
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@readFile
; Line 574
	xor	al, al
	jmp	$LN18@readFile
$LN15@readFile:
; Line 577
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+132124]
	test	edx, edx
	jne	SHORT $LN14@readFile
; Line 578
	mov	BYTE PTR _dataIsBase$[ebp], 1
; Line 579
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 8
	mov	DWORD PTR _baseStates$[ebp], ecx
; Line 580
	movzx	eax, BYTE PTR _IGNORE_SISO_CHECK
	push	eax
	mov	ecx, DWORD PTR _baseStates$[ebp]
	push	ecx
	call	_ucm_processStates
	add	esp, 8
; Line 581
	jmp	SHORT $LN13@readFile
$LN14@readFile:
; Line 582
	mov	BYTE PTR _dataIsBase$[ebp], 0
; Line 583
	mov	DWORD PTR _baseStates$[ebp], 0
$LN13@readFile:
; Line 587
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _baseStates$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _dataIsBase$[ebp]
	push	edx
	mov	eax, DWORD PTR _convFile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucm_readTable
	add	esp, 20					; 00000014H
; Line 588
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@readFile
; Line 589
	xor	al, al
	jmp	$LN18@readFile
$LN11@readFile:
; Line 593
	push	1024					; 00000400H
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _convFile$[ebp]
	push	ecx
	call	_T_FileStream_readLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN10@readFile
; Line 594
	push	0
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _end$[ebp], eax
$LN9@readFile:
; Line 596
	lea	eax, DWORD PTR _line$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	SHORT $LN8@readFile
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN7@readFile
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN7@readFile
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN7@readFile
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 9
	jne	SHORT $LN8@readFile
$LN7@readFile:
; Line 597
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, 1
	mov	DWORD PTR _end$[ebp], eax
; Line 598
	jmp	SHORT $LN9@readFile
$LN8@readFile:
; Line 599
	mov	eax, DWORD PTR _end$[ebp]
	mov	BYTE PTR [eax], 0
; Line 601
	movsx	eax, BYTE PTR _line$[ebp]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN5@readFile
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	cmp	eax, DWORD PTR _end$[ebp]
	jne	SHORT $LN6@readFile
$LN5@readFile:
; Line 602
	jmp	$LN11@readFile
$LN6@readFile:
; Line 605
	push	OFFSET ??_C@_07GOGBKBKH@CHARMAP?$AA@
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@readFile
; Line 607
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _baseStates$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _convFile$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucm_readTable
	add	esp, 20					; 00000014H
; Line 608
	jmp	SHORT $LN3@readFile
$LN4@readFile:
; Line 609
	mov	esi, esp
	push	OFFSET ??_C@_0CO@BNKIBFOH@unexpected?5text?5after?5the?5base?5m@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@readFile:
; Line 611
	jmp	SHORT $LN10@readFile
; Line 612
	jmp	$LN11@readFile
$LN10@readFile:
; Line 614
	mov	eax, DWORD PTR _convFile$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 616
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+41]
	cmp	eax, 3
	je	SHORT $LN1@readFile
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	movsx	eax, BYTE PTR [edx+41]
	cmp	eax, 3
	jne	SHORT $LN2@readFile
$LN1@readFile:
; Line 617
	mov	esi, esp
	push	OFFSET ??_C@_0EI@JJAOHFPI@error?3?5some?5entries?5have?5the?5map@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 618
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
$LN2@readFile:
; Line 621
	mov	al, BYTE PTR _dataIsBase$[ebp]
$LN18@readFile:
; Line 622
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@readFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1276				; 000004fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN22@readFile:
	DD	1
	DD	$LN21@readFile
$LN21@readFile:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN20@readFile
$LN20@readFile:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
?readFile@@YACPAUConvData@@PBDPAW4UErrorCode@@@Z ENDP	; readFile
_TEXT	ENDS
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
PUBLIC	??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@ ; `string'
PUBLIC	??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@ ; `string'
PUBLIC	??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_08BNNBLMOL@subchar1?$AA@			; `string'
PUBLIC	??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_07DHHCIPCK@subchar?$AA@			; `string'
PUBLIC	??_C@_0O@PMHEBCGH@code_set_name?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	_ucnv_converterStaticData:BYTE
EXTRN	_ucm_parseBytes:PROC
EXTRN	_ucm_parseHeaderLine:PROC
;	COMDAT ??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@
; File d:\mozilla\intl\icu\source\tools\makeconv\makeconv.cpp
CONST	SEGMENT
??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@ DB 'erro'
	DB	'r: <subchar1> defined for a type other than MBCS or EBCDIC_ST'
	DB	'ATEFUL', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@
CONST	SEGMENT
??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@ DB 'ucm error: '
	DB	'missing conversion type (<uconv_class>)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@ DB 'e'
	DB	'rror: illegal <subchar1> %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNNBLMOL@subchar1?$AA@
CONST	SEGMENT
??_C@_08BNNBLMOL@subchar1?$AA@ DB 'subchar1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@ DB 'er'
	DB	'ror: illegal <subchar> %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DHHCIPCK@subchar?$AA@
CONST	SEGMENT
??_C@_07DHHCIPCK@subchar?$AA@ DB 'subchar', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PMHEBCGH@code_set_name?$AA@
CONST	SEGMENT
??_C@_0O@PMHEBCGH@code_set_name?$AA@ DB 'code_set_name', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z
_TEXT	SEGMENT
_bytes$38354 = -1184					; size = 31
_length$38346 = -1141					; size = 1
_bytes$38345 = -1132					; size = 31
_staticData$ = -1092					; size = 4
_prototype$ = -1080					; size = 4
_value$ = -1068						; size = 4
_key$ = -1056						; size = 4
_s$ = -1044						; size = 4
_line$ = -1032						; size = 1024
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_convFile$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z PROC ; readHeader, COMDAT
; Line 425
	push	ebp
	mov	ebp, esp
	sub	esp, 1380				; 00000564H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1380]
	mov	ecx, 345				; 00000159H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 431
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN28@readHeader
; Line 432
	jmp	$LN29@readHeader
$LN28@readHeader:
; Line 435
	mov	eax, DWORD PTR _data$[ebp]
	add	eax, 240				; 000000f0H
	mov	DWORD PTR _staticData$[ebp], eax
; Line 436
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	BYTE PTR [eax+68], 0
; Line 437
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	BYTE PTR [eax+76], 0
$LN27@readHeader:
; Line 439
	push	1024					; 00000400H
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _convFile$[ebp]
	push	ecx
	call	_T_FileStream_readLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN26@readHeader
; Line 441
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	lea	edx, DWORD PTR _line$[ebp]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucm_parseHeaderLine
	add	esp, 16					; 00000010H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN25@readHeader
; Line 442
	jmp	SHORT $LN27@readHeader
$LN25@readHeader:
; Line 446
	push	OFFSET ??_C@_07GOGBKBKH@CHARMAP?$AA@
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN24@readHeader
; Line 447
	jmp	$LN26@readHeader
$LN24@readHeader:
; Line 451
	push	OFFSET ??_C@_0O@PMHEBCGH@code_set_name?$AA@
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN23@readHeader
; Line 452
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN22@readHeader
; Line 453
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _staticData$[ebp]
	add	ecx, 4
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 454
	mov	eax, DWORD PTR _staticData$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _staticData$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z ; getPlatformAndCCSIDFromName
	add	esp, 12					; 0000000cH
$LN22@readHeader:
; Line 455
	jmp	$LN21@readHeader
$LN23@readHeader:
; Line 456
	push	OFFSET ??_C@_07DHHCIPCK@subchar?$AA@
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN20@readHeader
; Line 460
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 461
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bytes$38345[ebp]
	push	edx
	call	_ucm_parseBytes
	add	esp, 12					; 0000000cH
	mov	BYTE PTR _length$38346[ebp], al
; Line 462
	movsx	eax, BYTE PTR _length$38346[ebp]
	cmp	eax, 1
	jl	SHORT $LN19@readHeader
	movsx	eax, BYTE PTR _length$38346[ebp]
	cmp	eax, 4
	jg	SHORT $LN19@readHeader
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN19@readHeader
; Line 463
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	cl, BYTE PTR _length$38346[ebp]
	mov	BYTE PTR [eax+76], cl
; Line 464
	push	1
	lea	eax, DWORD PTR _bytes$38345[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	movsx	ecx, BYTE PTR _length$38346[ebp]
	push	ecx
	lea	edx, DWORD PTR _bytes$38345[ebp]
	push	edx
	mov	eax, DWORD PTR _staticData$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 465
	jmp	SHORT $LN18@readHeader
$LN19@readHeader:
; Line 466
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@IKIAJPCK@error?3?5illegal?5?$DMsubchar?$DO?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 467
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 468
	jmp	$LN29@readHeader
$LN18@readHeader:
; Line 469
	jmp	$LN21@readHeader
$LN20@readHeader:
; Line 470
	push	OFFSET ??_C@_08BNNBLMOL@subchar1?$AA@
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN21@readHeader
; Line 473
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 474
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _line$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bytes$38354[ebp]
	push	edx
	call	_ucm_parseBytes
	add	esp, 12					; 0000000cH
	movsx	eax, al
	cmp	eax, 1
	jne	SHORT $LN15@readHeader
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN15@readHeader
; Line 475
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	cl, BYTE PTR _bytes$38354[ebp]
	mov	BYTE PTR [eax+80], cl
; Line 476
	jmp	SHORT $LN21@readHeader
$LN15@readHeader:
; Line 477
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET ??_C@_0BO@JDOMDOBA@error?3?5illegal?5?$DMsubchar1?$DO?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 478
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 479
	jmp	$LN29@readHeader
$LN21@readHeader:
; Line 482
	jmp	$LN27@readHeader
$LN26@readHeader:
; Line 485
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _staticData$[ebp]
	mov	al, BYTE PTR [ecx+132112]
	mov	BYTE PTR [edx+71], al
; Line 486
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _staticData$[ebp]
	mov	al, BYTE PTR [ecx+132108]
	mov	BYTE PTR [edx+70], al
; Line 487
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _staticData$[ebp]
	mov	al, BYTE PTR [ecx+132120]
	mov	BYTE PTR [edx+69], al
; Line 489
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, -1
	jne	SHORT $LN13@readHeader
; Line 490
	mov	esi, esp
	push	OFFSET ??_C@_0DE@KDMCFGMF@ucm?5error?3?5missing?5conversion?5ty@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 491
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
; Line 492
	jmp	$LN29@readHeader
$LN13@readHeader:
; Line 503
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+132124]
	test	edx, edx
	jne	$LN12@readHeader
; Line 504
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	mov	edx, DWORD PTR _ucnv_converterStaticData[ecx*4]
	mov	DWORD PTR _prototype$[ebp], edx
; Line 505
	cmp	DWORD PTR _prototype$[ebp], 0
	je	$LN12@readHeader
; Line 506
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN10@readHeader
; Line 507
	mov	eax, DWORD PTR _prototype$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _staticData$[ebp]
	add	ecx, 4
	push	ecx
	call	_strcpy
	add	esp, 8
$LN10@readHeader:
; Line 510
	mov	eax, DWORD PTR _staticData$[ebp]
	cmp	DWORD PTR [eax+64], 0
	jne	SHORT $LN9@readHeader
; Line 511
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _prototype$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR [eax+64], edx
$LN9@readHeader:
; Line 514
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	jne	SHORT $LN8@readHeader
; Line 515
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _prototype$[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl
$LN8@readHeader:
; Line 518
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	test	ecx, ecx
	jne	SHORT $LN7@readHeader
; Line 519
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _prototype$[ebp]
	mov	dl, BYTE PTR [ecx+70]
	mov	BYTE PTR [eax+70], dl
$LN7@readHeader:
; Line 522
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+71]
	test	ecx, ecx
	jne	SHORT $LN6@readHeader
; Line 523
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _prototype$[ebp]
	mov	dl, BYTE PTR [ecx+71]
	mov	BYTE PTR [eax+71], dl
$LN6@readHeader:
; Line 526
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jne	SHORT $LN12@readHeader
; Line 527
	mov	eax, DWORD PTR _staticData$[ebp]
	mov	ecx, DWORD PTR _prototype$[ebp]
	mov	dl, BYTE PTR [ecx+76]
	mov	BYTE PTR [eax+76], dl
; Line 528
	mov	eax, DWORD PTR _prototype$[ebp]
	movsx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	jle	SHORT $LN12@readHeader
; Line 529
	push	1
	mov	eax, DWORD PTR _prototype$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _prototype$[ebp]
	movsx	edx, BYTE PTR [ecx+76]
	push	edx
	mov	eax, DWORD PTR _prototype$[ebp]
	add	eax, 72					; 00000048H
	push	eax
	mov	ecx, DWORD PTR _staticData$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN12@readHeader:
; Line 535
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+132121]
	test	edx, edx
	jge	SHORT $LN3@readHeader
; Line 536
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+132112]
	sub	edx, 1
	mov	eax, DWORD PTR _data$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx+132121], dl
$LN3@readHeader:
; Line 543
	mov	eax, DWORD PTR _staticData$[ebp]
	movzx	ecx, BYTE PTR [eax+80]
	test	ecx, ecx
	je	SHORT $LN29@readHeader
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+70]
	cmp	ecx, 1
	jg	SHORT $LN1@readHeader
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, 2
	je	SHORT $LN29@readHeader
	mov	eax, DWORD PTR _staticData$[ebp]
	movsx	ecx, BYTE PTR [eax+69]
	cmp	ecx, 9
	je	SHORT $LN29@readHeader
$LN1@readHeader:
; Line 544
	mov	esi, esp
	push	OFFSET ??_C@_0EJ@LKLPEECH@error?3?5?$DMsubchar1?$DO?5defined?5for?5a?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 545
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 13			; 0000000dH
$LN29@readHeader:
; Line 547
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@readHeader
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1380				; 00000564H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN39@readHeader:
	DD	6
	DD	$LN38@readHeader
$LN38@readHeader:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN32@readHeader
	DD	-1044					; fffffbecH
	DD	4
	DD	$LN33@readHeader
	DD	-1056					; fffffbe0H
	DD	4
	DD	$LN34@readHeader
	DD	-1068					; fffffbd4H
	DD	4
	DD	$LN35@readHeader
	DD	-1132					; fffffb94H
	DD	31					; 0000001fH
	DD	$LN36@readHeader
	DD	-1184					; fffffb60H
	DD	31					; 0000001fH
	DD	$LN37@readHeader
$LN37@readHeader:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN36@readHeader:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN35@readHeader:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN34@readHeader:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN33@readHeader:
	DB	115					; 00000073H
	DB	0
$LN32@readHeader:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
?readHeader@@YAXPAUConvData@@PAU_FileStream@@PAW4UErrorCode@@@Z ENDP ; readHeader
_TEXT	ENDS
EXTRN	__imp__strtoul:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
_pPlatform$ = 12					; size = 4
_pCCSID$ = 16						; size = 4
?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z PROC	; getPlatformAndCCSIDFromName, COMDAT
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 409
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 105				; 00000069H
	je	SHORT $LN5@getPlatfor
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 73					; 00000049H
	jne	SHORT $LN6@getPlatfor
$LN5@getPlatfor:
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 98					; 00000062H
	je	SHORT $LN4@getPlatfor
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 66					; 00000042H
	jne	SHORT $LN6@getPlatfor
$LN4@getPlatfor:
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+2]
	cmp	ecx, 109				; 0000006dH
	je	SHORT $LN3@getPlatfor
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+2]
	cmp	ecx, 77					; 0000004dH
	jne	SHORT $LN6@getPlatfor
$LN3@getPlatfor:
; Line 410
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, 3
	mov	DWORD PTR _name$[ebp], eax
; Line 411
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN2@getPlatfor
; Line 412
	mov	eax, DWORD PTR _name$[ebp]
	add	eax, 1
	mov	DWORD PTR _name$[ebp], eax
$LN2@getPlatfor:
; Line 414
	mov	eax, DWORD PTR _pPlatform$[ebp]
	mov	BYTE PTR [eax], 0
; Line 415
	mov	esi, esp
	push	10					; 0000000aH
	push	0
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pCCSID$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 416
	jmp	SHORT $LN7@getPlatfor
$LN6@getPlatfor:
; Line 417
	mov	eax, DWORD PTR _pPlatform$[ebp]
	mov	BYTE PTR [eax], -1
; Line 418
	mov	eax, DWORD PTR _pCCSID$[ebp]
	mov	DWORD PTR [eax], 0
$LN7@getPlatfor:
; Line 420
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getPlatformAndCCSIDFromName@@YAXPBDPACPAH@Z ENDP	; getPlatformAndCCSIDFromName
_TEXT	ENDS
END

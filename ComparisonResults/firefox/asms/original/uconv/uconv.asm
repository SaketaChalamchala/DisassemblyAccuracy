; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\extra\uconv\uconv.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_01HJOKEEBB@U?$AA@				; `string'
PUBLIC	??_C@_0P@IPEGBPCC@escape?9unicode?$AA@		; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_0P@BCDMCNEF@escape?9xml?9dec?$AA@		; `string'
PUBLIC	??_C@_0P@PBNMFJGH@escape?9xml?9hex?$AA@		; `string'
PUBLIC	??_C@_01MMEEDKFM@X?$AA@				; `string'
PUBLIC	??_C@_0L@HLOGAGGK@escape?9xml?$AA@		; `string'
PUBLIC	??_C@_01GFHCPBMG@C?$AA@				; `string'
PUBLIC	??_C@_08NPEEDJGH@escape?9c?$AA@			; `string'
PUBLIC	??_C@_01LELAEKIP@J?$AA@				; `string'
PUBLIC	??_C@_0M@JALNGJFK@escape?9java?$AA@		; `string'
PUBLIC	??_C@_0L@CNNLCIC@escape?9icu?$AA@		; `string'
PUBLIC	??_C@_06CHNIFGOF@escape?$AA@			; `string'
PUBLIC	??_C@_04PEGFANN@stop?$AA@			; `string'
PUBLIC	??_C@_04DLBGLKG@skip?$AA@			; `string'
PUBLIC	??_C@_0L@JPIPOIAJ@substitute?$AA@		; `string'
EXTRN	_UCNV_TO_U_CALLBACK_ESCAPE_56:PROC
EXTRN	_UCNV_FROM_U_CALLBACK_ESCAPE_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_STOP_56:PROC
EXTRN	_UCNV_FROM_U_CALLBACK_STOP_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_SKIP_56:PROC
EXTRN	_UCNV_FROM_U_CALLBACK_SKIP_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_SUBSTITUTE_56:PROC
EXTRN	_UCNV_FROM_U_CALLBACK_SUBSTITUTE_56:PROC
_BSS	SEGMENT
_gBundle DD	01H DUP (?)
?ps@?1??initMsg@@YAXPBD@Z@4HA DD 01H DUP (?)		; `initMsg'::`2'::ps
_BSS	ENDS
CONST	SEGMENT
?paraEnds@?1??getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z@4QB_WB DW 0dH ; `getChunkLimit'::`2'::paraEnds
	DW	0aH
	DW	085H
	DW	02028H
	DW	02029H
CONST	ENDS
_DATA	SEGMENT
_transcode_callbacks DD FLAT:??_C@_0L@JPIPOIAJ@substitute?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_SUBSTITUTE_56
	DD	00H
	DD	FLAT:_UCNV_TO_U_CALLBACK_SUBSTITUTE_56
	DD	00H
	DD	FLAT:??_C@_04DLBGLKG@skip?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_SKIP_56
	DD	00H
	DD	FLAT:_UCNV_TO_U_CALLBACK_SKIP_56
	DD	00H
	DD	FLAT:??_C@_04PEGFANN@stop?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_STOP_56
	DD	00H
	DD	FLAT:_UCNV_TO_U_CALLBACK_STOP_56
	DD	00H
	DD	FLAT:??_C@_06CHNIFGOF@escape?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	00H
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	00H
	DD	FLAT:??_C@_0L@CNNLCIC@escape?9icu?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	00H
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	00H
	DD	FLAT:??_C@_0M@JALNGJFK@escape?9java?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01LELAEKIP@J?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01LELAEKIP@J?$AA@
	DD	FLAT:??_C@_08NPEEDJGH@escape?9c?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01GFHCPBMG@C?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01GFHCPBMG@C?$AA@
	DD	FLAT:??_C@_0L@HLOGAGGK@escape?9xml?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01MMEEDKFM@X?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01MMEEDKFM@X?$AA@
	DD	FLAT:??_C@_0P@PBNMFJGH@escape?9xml?9hex?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01MMEEDKFM@X?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01MMEEDKFM@X?$AA@
	DD	FLAT:??_C@_0P@BCDMCNEF@escape?9xml?9dec?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
	DD	FLAT:??_C@_0P@IPEGBPCC@escape?9unicode?$AA@
	DD	FLAT:_UCNV_FROM_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01HJOKEEBB@U?$AA@
	DD	FLAT:_UCNV_TO_U_CALLBACK_ESCAPE_56
	DD	FLAT:??_C@_01HJOKEEBB@U?$AA@
_DATA	ENDS
;	COMDAT ??_C@_01HJOKEEBB@U?$AA@
CONST	SEGMENT
??_C@_01HJOKEEBB@U?$AA@ DB 'U', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IPEGBPCC@escape?9unicode?$AA@
CONST	SEGMENT
??_C@_0P@IPEGBPCC@escape?9unicode?$AA@ DB 'escape-unicode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BCDMCNEF@escape?9xml?9dec?$AA@
CONST	SEGMENT
??_C@_0P@BCDMCNEF@escape?9xml?9dec?$AA@ DB 'escape-xml-dec', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PBNMFJGH@escape?9xml?9hex?$AA@
CONST	SEGMENT
??_C@_0P@PBNMFJGH@escape?9xml?9hex?$AA@ DB 'escape-xml-hex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X?$AA@
CONST	SEGMENT
??_C@_01MMEEDKFM@X?$AA@ DB 'X', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HLOGAGGK@escape?9xml?$AA@
CONST	SEGMENT
??_C@_0L@HLOGAGGK@escape?9xml?$AA@ DB 'escape-xml', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C?$AA@
CONST	SEGMENT
??_C@_01GFHCPBMG@C?$AA@ DB 'C', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NPEEDJGH@escape?9c?$AA@
CONST	SEGMENT
??_C@_08NPEEDJGH@escape?9c?$AA@ DB 'escape-c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LELAEKIP@J?$AA@
CONST	SEGMENT
??_C@_01LELAEKIP@J?$AA@ DB 'J', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JALNGJFK@escape?9java?$AA@
CONST	SEGMENT
??_C@_0M@JALNGJFK@escape?9java?$AA@ DB 'escape-java', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CNNLCIC@escape?9icu?$AA@
CONST	SEGMENT
??_C@_0L@CNNLCIC@escape?9icu?$AA@ DB 'escape-icu', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CHNIFGOF@escape?$AA@
CONST	SEGMENT
??_C@_06CHNIFGOF@escape?$AA@ DB 'escape', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PEGFANN@stop?$AA@
CONST	SEGMENT
??_C@_04PEGFANN@stop?$AA@ DB 'stop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DLBGLKG@skip?$AA@
CONST	SEGMENT
??_C@_04DLBGLKG@skip?$AA@ DB 'skip', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JPIPOIAJ@substitute?$AA@
CONST	SEGMENT
??_C@_0L@JPIPOIAJ@substitute?$AA@ DB 'substitute', 00H	; `string'
CONST	ENDS
PUBLIC	??_C@_09CPDOJHKL@cantWrite?$AA@			; `string'
PUBLIC	??_C@_0N@HAOGBCJJ@errorUnicode?$AA@		; `string'
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	??_C@_0BD@NCCFBJBC@problemCvtFromUOut?$AA@	; `string'
PUBLIC	??_C@_0BA@NFEOLDHD@problemCvtFromU?$AA@		; `string'
PUBLIC	??_C@_0O@LONOMPID@problemCvtToU?$AA@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	??_C@_08CNMMBKFE@cantRead?$AA@			; `string'
PUBLIC	??_C@_0BC@LMDIHKPE@cantOpenToCodeset?$AA@	; `string'
PUBLIC	??_C@_0BA@DEEJENAC@cantSetCallback?$AA@		; `string'
PUBLIC	??_C@_0BE@OPFOLKHG@cantOpenFromCodeset?$AA@	; `string'
PUBLIC	??_C@_0BD@MIJIPECE@cantCreateTranslit?$AA@	; `string'
PUBLIC	??_C@_0BL@OKGLONBE@cantCreateTranslitParseErr?$AA@ ; `string'
PUBLIC	??_C@_1M@GPEDIIIC@?$AAU?$AAc?$AAo?$AAn?$AAv?$AA?$AA@ ; `string'
PUBLIC	??_C@_04JKGFCPCI@?$CFs?3?6?$AA@			; `string'
PUBLIC	??_C@_0BB@LCJGENKD@cantSetInBinMode?$AA@	; `string'
PUBLIC	??_C@_0P@GKANAJIF@cantOpenInputF?$AA@		; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z ; ConvertFile::convertFile
EXTRN	__imp__fclose:PROC
EXTRN	_ucnv_close_56:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	_ucnv_getInvalidUChars_56:PROC
EXTRN	_ucnv_fromUnicode_56:PROC
EXTRN	__imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?isEmpty@UnicodeString@icu_56@@QBECXZ:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	_ucnv_getInvalidChars_56:PROC
EXTRN	__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC
EXTRN	_ucnv_toUnicode_56:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fread:PROC
EXTRN	_ucnv_setFallback_56:PROC
EXTRN	_ucnv_setFromUCallBack_56:PROC
EXTRN	_ucnv_setToUCallBack_56:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	__imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ:PROC
EXTRN	_u_wmsg_errorName:PROC
EXTRN	_uprv_itou_56:PROC
EXTRN	__imp_?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	__imp_?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp___setmode:PROC
EXTRN	__imp___fileno:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	_u_wmsg:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	__imp__strerror:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD0@Z:PROC
EXTRN	__imp__fopen:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_09CPDOJHKL@cantWrite?$AA@
; File d:\mozilla\intl\icu\source\extra\uconv\uconv.cpp
CONST	SEGMENT
??_C@_09CPDOJHKL@cantWrite?$AA@ DB 'cantWrite', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HAOGBCJJ@errorUnicode?$AA@
CONST	SEGMENT
??_C@_0N@HAOGBCJJ@errorUnicode?$AA@ DB 'errorUnicode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NCCFBJBC@problemCvtFromUOut?$AA@
CONST	SEGMENT
??_C@_0BD@NCCFBJBC@problemCvtFromUOut?$AA@ DB 'problemCvtFromUOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NFEOLDHD@problemCvtFromU?$AA@
CONST	SEGMENT
??_C@_0BA@NFEOLDHD@problemCvtFromU?$AA@ DB 'problemCvtFromU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LONOMPID@problemCvtToU?$AA@
CONST	SEGMENT
??_C@_0O@LONOMPID@problemCvtToU?$AA@ DB 'problemCvtToU', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNMMBKFE@cantRead?$AA@
CONST	SEGMENT
??_C@_08CNMMBKFE@cantRead?$AA@ DB 'cantRead', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LMDIHKPE@cantOpenToCodeset?$AA@
CONST	SEGMENT
??_C@_0BC@LMDIHKPE@cantOpenToCodeset?$AA@ DB 'cantOpenToCodeset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DEEJENAC@cantSetCallback?$AA@
CONST	SEGMENT
??_C@_0BA@DEEJENAC@cantSetCallback?$AA@ DB 'cantSetCallback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OPFOLKHG@cantOpenFromCodeset?$AA@
CONST	SEGMENT
??_C@_0BE@OPFOLKHG@cantOpenFromCodeset?$AA@ DB 'cantOpenFromCodeset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIJIPECE@cantCreateTranslit?$AA@
CONST	SEGMENT
??_C@_0BD@MIJIPECE@cantCreateTranslit?$AA@ DB 'cantCreateTranslit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OKGLONBE@cantCreateTranslitParseErr?$AA@
CONST	SEGMENT
??_C@_0BL@OKGLONBE@cantCreateTranslitParseErr?$AA@ DB 'cantCreateTranslit'
	DB	'ParseErr', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@GPEDIIIC@?$AAU?$AAc?$AAo?$AAn?$AAv?$AA?$AA@
CONST	SEGMENT
??_C@_1M@GPEDIIIC@?$AAU?$AAc?$AAo?$AAn?$AAv?$AA?$AA@ DB 'U', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 'v', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JKGFCPCI@?$CFs?3?6?$AA@
CONST	SEGMENT
??_C@_04JKGFCPCI@?$CFs?3?6?$AA@ DB '%s:', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LCJGENKD@cantSetInBinMode?$AA@
CONST	SEGMENT
??_C@_0BB@LCJGENKD@cantSetInBinMode?$AA@ DB 'cantSetInBinMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GKANAJIF@cantOpenInputF?$AA@
CONST	SEGMENT
??_C@_0P@GKANAJIF@cantOpenInputF?$AA@ DB 'cantOpenInputF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z DD 019930522H
	DD	011H
	DD	FLAT:__unwindtable$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$9
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$10
	DD	02H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$11
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$12
	DD	04H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$13
	DD	05H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$14
	DD	05H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$15
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$16
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$17
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$18
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$19
	DD	0bH
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$20
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$21
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$22
	DD	0eH
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$23
	DD	01H
	DD	FLAT:__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$24
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z
_TEXT	SEGMENT
tv898 = -2316						; size = 4
tv894 = -2316						; size = 4
tv883 = -2316						; size = 4
tv881 = -2316						; size = 4
tv923 = -2312						; size = 4
tv918 = -2312						; size = 4
tv911 = -2312						; size = 4
tv908 = -2312						; size = 4
tv864 = -2312						; size = 4
tv432 = -2312						; size = 4
tv414 = -2312						; size = 4
tv291 = -2312						; size = 4
tv669 = -2309						; size = 1
$T35442 = -2301						; size = 1
$T35443 = -2289						; size = 1
$T35444 = -2280						; size = 4
$T35445 = -2268						; size = 4
$T35454 = -2256						; size = 4
$T35455 = -2244						; size = 4
$T35458 = -2229						; size = 1
$T28373 = -2220						; size = 64
$T28376 = -2148						; size = 64
$T28444 = -2076						; size = 64
$T28518 = -2004						; size = 64
_str$28524 = -1740					; size = 64
_outlen$28520 = -1668					; size = 4
___c2$28506 = -1656					; size = 2
_str$28499 = -1644					; size = 64
_fromoffset$28487 = -1572				; size = 4
_ferroffset$28483 = -1560				; size = 4
_localError$28478 = -1548				; size = 4
_errorLength$28477 = -1533				; size = 1
_length$28476 = -1521					; size = 1
_i$28475 = -1509					; size = 1
_c$28474 = -1500					; size = 4
_pos$28473 = -1488					; size = 32
_errtag$28472 = -1448					; size = 4
_errorUChars$28471 = -1436				; size = 8
_chunkLimit$28452 = -1420				; size = 4
_out$28451 = -1408					; size = 64
_str$28436 = -1336					; size = 64
_localError$28429 = -1264				; size = 4
_errorLength$28428 = -1249				; size = 1
_length$28427 = -1237					; size = 1
_i$28426 = -1225					; size = 1
_errorBytes$28425 = -1216				; size = 32
_pos$28424 = -1176					; size = 32
_str$28411 = -1136					; size = 64
_sig$ = -1061						; size = 1
_toSawEndOfUnicode$ = -1049				; size = 1
_fromSawEndOfBytes$ = -1037				; size = 1
_willexit$ = -1025					; size = 1
_str$28398 = -1016					; size = 64
_str$28391 = -944					; size = 64
_offsetbuf$28381 = -872					; size = 40
_linebuf$28380 = -824					; size = 40
_pestr$28369 = -776					; size = 64
_str$28368 = -704					; size = 64
_parse$28367 = -632					; size = 72
_str2$28356 = -552					; size = 64
_str1$28354 = -480					; size = 64
_useOffsets$ = -405					; size = 1
_ulen$ = -396						; size = 4
_u$ = -384						; size = 64
_chunk$ = -312						; size = 64
_t$ = -240						; size = 4
_wr$ = -228						; size = 4
_rd$ = -216						; size = 4
_unibufp$ = -204					; size = 4
_unibufbp$ = -192					; size = 4
_unibuf$ = -180						; size = 4
_outfoffset$ = -168					; size = 4
_infoffset$ = -156					; size = 4
_bufp$ = -144						; size = 4
_prevbufp$ = -132					; size = 4
_cbufp$ = -120						; size = 4
_closeFile$ = -105					; size = 1
_flush$ = -93						; size = 1
_err$ = -84						; size = 4
_convto$ = -72						; size = 4
_convfrom$ = -60					; size = 4
_ret$ = -45						; size = 1
_infile$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pname$ = 8						; size = 4
_fromcpage$ = 12					; size = 4
_toucallback$ = 16					; size = 4
_touctxt$ = 20						; size = 4
_tocpage$ = 24						; size = 4
_fromucallback$ = 28					; size = 4
_fromuctxt$ = 32					; size = 4
_fallback$ = 36						; size = 1
_translit$ = 40						; size = 4
_infilestr$ = 44					; size = 4
_outfile$ = 48						; size = 4
_verbose$ = 52						; size = 4
?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z PROC ; ConvertFile::convertFile, COMDAT
; _this$ = ecx
; Line 588
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2304				; 00000900H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2316]
	mov	ecx, 576				; 00000240H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 590
	mov	BYTE PTR _ret$[ebp], 1
; Line 591
	mov	DWORD PTR _convfrom$[ebp], 0
; Line 592
	mov	DWORD PTR _convto$[ebp], 0
; Line 593
	mov	DWORD PTR _err$[ebp], 0
; Line 595
	mov	BYTE PTR _closeFile$[ebp], 0
; Line 599
	mov	DWORD PTR _infoffset$[ebp], 0
	mov	DWORD PTR _outfoffset$[ebp], 0
; Line 607
	mov	DWORD PTR _t$[ebp], 0
; Line 608
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 610
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 616
	mov	BYTE PTR _useOffsets$[ebp], 1
; Line 620
	cmp	DWORD PTR _infilestr$[ebp], 0
	je	$LN80@convertFil
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _infilestr$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN80@convertFil
; Line 621
	mov	esi, esp
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _infilestr$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _infile$[ebp], eax
; Line 622
	cmp	DWORD PTR _infile$[ebp], 0
	jne	$LN79@convertFil
; Line 623
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _infilestr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str1$28354[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 624
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _str1$28354[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 625
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	edi, esp
	call	DWORD PTR __imp___errno
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	edi, esp
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp__strerror
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _str2$28356[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 626
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _str2$28356[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 627
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 628
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28356[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28354[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0P@GKANAJIF@cantOpenInputF?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 629
	mov	BYTE PTR $T35442[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28356[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28354[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T35442[ebp]
	jmp	$LN81@convertFil
$LN79@convertFil:
; Line 631
	mov	BYTE PTR _closeFile$[ebp], 1
; Line 632
	jmp	$LN78@convertFil
$LN80@convertFil:
; Line 633
	mov	DWORD PTR _infilestr$[ebp], OFFSET ??_C@_01JOAMLHOP@?9?$AA@
; Line 634
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _infile$[ebp], eax
; Line 636
	mov	esi, esp
	push	32768					; 00008000H
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	edi, esp
	push	eax
	call	DWORD PTR __imp___fileno
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp___setmode
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN78@convertFil
; Line 637
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 638
	push	OFFSET ??_C@_0BB@LCJGENKD@cantSetInBinMode?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 8
; Line 639
	mov	BYTE PTR $T35443[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T35443[ebp]
	jmp	$LN81@convertFil
$LN78@convertFil:
; Line 644
	cmp	DWORD PTR _verbose$[ebp], 0
	je	SHORT $LN76@convertFil
; Line 645
	mov	esi, esp
	mov	eax, DWORD PTR _infilestr$[ebp]
	push	eax
	push	OFFSET ??_C@_04JKGFCPCI@?$CFs?3?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN76@convertFil:
; Line 651
	cmp	DWORD PTR _translit$[ebp], 0
	je	$LN75@convertFil
	mov	eax, DWORD PTR _translit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN75@convertFil
; Line 653
	mov	esi, esp
	mov	eax, DWORD PTR _translit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _pestr$28369[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 657
	mov	DWORD PTR _parse$28367[ebp], -1
; Line 659
	mov	esi, esp
	push	58					; 0000003aH
	mov	eax, DWORD PTR _translit$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN73@convertFil
	mov	esi, esp
	push	62					; 0000003eH
	mov	eax, DWORD PTR _translit$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN73@convertFil
	mov	esi, esp
	push	60					; 0000003cH
	mov	eax, DWORD PTR _translit$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN73@convertFil
	mov	esi, esp
	push	62					; 0000003eH
	mov	eax, DWORD PTR _translit$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN74@convertFil
$LN73@convertFil:
; Line 660
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parse$28367[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _str$28368[ebp]
	push	edx
	mov	edi, esp
	push	-1
	push	OFFSET ??_C@_1M@GPEDIIIC@?$AAU?$AAc?$AAo?$AAn?$AAv?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T28373[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv908[ebp], eax
	mov	eax, DWORD PTR tv908[ebp]
	mov	DWORD PTR tv881[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv881[ebp]
	push	ecx
	call	DWORD PTR __imp_?createFromRules@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@0W4UTransDirection@@AAUUParseError@@AAW4UErrorCode@@@Z
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T28373[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 661
	jmp	SHORT $LN72@convertFil
$LN74@convertFil:
; Line 662
	mov	esi, esp
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	mov	ecx, DWORD PTR _translit$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T28376[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv911[ebp], eax
	mov	edx, DWORD PTR tv911[ebp]
	mov	DWORD PTR tv883[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv883[ebp]
	push	eax
	call	DWORD PTR __imp_?createInstance@Transliterator@icu_56@@SAPAV12@ABVUnicodeString@2@W4UTransDirection@@AAW4UErrorCode@@@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	lea	ecx, DWORD PTR $T28376[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN72@convertFil:
; Line 665
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN71@convertFil
; Line 666
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 667
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 669
	cmp	DWORD PTR _parse$28367[ebp], 0
	jl	$LN70@convertFil
; Line 671
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _parse$28367[ebp]
	push	eax
	push	20					; 00000014H
	lea	ecx, DWORD PTR _linebuf$28380[ebp]
	push	ecx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 672
	push	0
	push	10					; 0000000aH
	mov	eax, DWORD PTR _parse$28367[ebp+4]
	push	eax
	push	20					; 00000014H
	lea	ecx, DWORD PTR _offsetbuf$28381[ebp]
	push	ecx
	call	_uprv_itou_56
	add	esp, 20					; 00000014H
; Line 674
	lea	eax, DWORD PTR _offsetbuf$28381[ebp]
	push	eax
	lea	ecx, DWORD PTR _linebuf$28380[ebp]
	push	ecx
	mov	edx, DWORD PTR _err$[ebp]
	push	edx
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BL@OKGLONBE@cantCreateTranslitParseErr?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 24					; 00000018H
; Line 675
	jmp	SHORT $LN69@convertFil
$LN70@convertFil:
; Line 677
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BD@MIJIPECE@cantCreateTranslit?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
$LN69@convertFil:
; Line 680
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT __unwind$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$0
; Line 681
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T35445[ebp], eax
	mov	ecx, DWORD PTR $T35445[ebp]
	mov	DWORD PTR $T35444[ebp], ecx
	cmp	DWORD PTR $T35444[ebp], 0
	je	SHORT $LN83@convertFil
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T35444[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T35444[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv291[ebp], eax
	jmp	SHORT $LN84@convertFil
$LN83@convertFil:
	mov	DWORD PTR tv291[ebp], 0
$LN84@convertFil:
; Line 682
	mov	DWORD PTR _t$[ebp], 0
__unwind$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$0:
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _pestr$28369[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 684
	jmp	$error_exit$28388
$LN71@convertFil:
; Line 687
	mov	BYTE PTR _useOffsets$[ebp], 0
; Line 688
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _pestr$28369[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN75@convertFil:
; Line 695
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromcpage$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _convfrom$[ebp], eax
; Line 696
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN66@convertFil
; Line 697
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _fromcpage$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$28391[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
; Line 698
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 700
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28391[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BE@OPFOLKHG@cantOpenFromCodeset?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28391[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 701
	jmp	$error_exit$28388
$LN66@convertFil:
; Line 703
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _touctxt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _toucallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _convfrom$[ebp]
	push	eax
	call	_ucnv_setToUCallBack_56
	add	esp, 24					; 00000018H
; Line 704
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN64@convertFil
; Line 705
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 706
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BA@DEEJENAC@cantSetCallback?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 707
	jmp	$error_exit$28388
$LN64@convertFil:
; Line 710
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _tocpage$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _convto$[ebp], eax
; Line 711
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN62@convertFil
; Line 712
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _tocpage$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$28398[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 9
; Line 713
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 715
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28398[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BC@LMDIHKPE@cantOpenToCodeset?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28398[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 716
	jmp	$error_exit$28388
$LN62@convertFil:
; Line 718
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _fromuctxt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromucallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _convto$[ebp]
	push	eax
	call	_ucnv_setFromUCallBack_56
	add	esp, 24					; 00000018H
; Line 719
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN60@convertFil
; Line 720
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 721
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0BA@DEEJENAC@cantSetCallback?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 722
	jmp	$error_exit$28388
$LN60@convertFil:
; Line 724
	movzx	eax, BYTE PTR _fallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _convto$[ebp]
	push	ecx
	call	_ucnv_setFallback_56
	add	esp, 8
; Line 730
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR [eax+16]
	mov	BYTE PTR _sig$[ebp], cl
; Line 731
	mov	DWORD PTR _rd$[ebp], 0
$LN58@convertFil:
; Line 734
	mov	BYTE PTR _willexit$[ebp], 0
; Line 737
	mov	eax, DWORD PTR _infoffset$[ebp]
	add	eax, DWORD PTR _rd$[ebp]
	mov	DWORD PTR _infoffset$[ebp], eax
; Line 739
	mov	esi, esp
	mov	eax, DWORD PTR _infile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rd$[ebp], eax
; Line 740
	mov	esi, esp
	mov	eax, DWORD PTR _infile$[ebp]
	push	eax
	call	DWORD PTR __imp__ferror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN55@convertFil
; Line 741
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp__strerror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _str$28411[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
; Line 742
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 743
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28411[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_08CNMMBKFE@cantRead?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1042
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28411[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 744
	jmp	$error_exit$28388
$LN55@convertFil:
; Line 758
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _cbufp$[ebp], ecx
; Line 759
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rd$[ebp]
	cmp	ecx, DWORD PTR [eax+12]
	setne	dl
	mov	BYTE PTR _flush$[ebp], dl
$LN53@convertFil:
; Line 764
	mov	eax, DWORD PTR _cbufp$[ebp]
	mov	DWORD PTR _prevbufp$[ebp], eax
; Line 766
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _unibufp$[ebp], eax
	mov	edx, DWORD PTR _unibufp$[ebp]
	mov	DWORD PTR _unibuf$[ebp], edx
; Line 771
	movsx	eax, BYTE PTR _useOffsets$[ebp]
	test	eax, eax
	je	SHORT $LN85@convertFil
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv414[ebp], edx
	jmp	SHORT $LN86@convertFil
$LN85@convertFil:
	mov	DWORD PTR tv414[ebp], 0
$LN86@convertFil:
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _flush$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv414[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _rd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _cbufp$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _unibuf$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	lea	ecx, DWORD PTR _unibufp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _convfrom$[ebp]
	push	edx
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 773
	mov	eax, DWORD PTR _unibufp$[ebp]
	sub	eax, DWORD PTR _unibuf$[ebp]
	sar	eax, 1
	mov	DWORD PTR _ulen$[ebp], eax
; Line 774
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN87@convertFil
	mov	edx, DWORD PTR _ulen$[ebp]
	mov	DWORD PTR tv432[ebp], edx
	jmp	SHORT $LN88@convertFil
$LN87@convertFil:
	mov	DWORD PTR tv432[ebp], 0
$LN88@convertFil:
	mov	esi, esp
	mov	eax, DWORD PTR tv432[ebp]
	push	eax
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 785
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	mov	BYTE PTR _fromSawEndOfBytes$[ebp], al
; Line 787
	cmp	DWORD PTR _err$[ebp], 15		; 0000000fH
	jne	SHORT $LN50@convertFil
; Line 788
	mov	DWORD PTR _err$[ebp], 0
	jmp	$LN49@convertFil
$LN50@convertFil:
; Line 789
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN49@convertFil
; Line 793
	mov	DWORD PTR _localError$28429[ebp], 0
; Line 794
	mov	BYTE PTR _errorLength$28428[ebp], 32	; 00000020H
; Line 795
	lea	eax, DWORD PTR _localError$28429[ebp]
	push	eax
	lea	ecx, DWORD PTR _errorLength$28428[ebp]
	push	ecx
	lea	edx, DWORD PTR _errorBytes$28425[ebp]
	push	edx
	mov	eax, DWORD PTR _convfrom$[ebp]
	push	eax
	call	_ucnv_getInvalidChars_56
	add	esp, 16					; 00000010H
; Line 796
	mov	eax, DWORD PTR _localError$28429[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN46@convertFil
	movsx	eax, BYTE PTR _errorLength$28428[ebp]
	test	eax, eax
	jne	SHORT $LN47@convertFil
$LN46@convertFil:
; Line 797
	mov	BYTE PTR _errorLength$28428[ebp], 1
$LN47@convertFil:
; Line 806
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cbufp$[ebp]
	sub	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _infoffset$[ebp]
	movsx	edx, BYTE PTR _errorLength$28428[ebp]
	sub	ecx, edx
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	lea	eax, DWORD PTR _pos$28424[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _length$28427[ebp], al
; Line 809
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
; Line 810
	mov	BYTE PTR _i$28426[ebp], 0
	jmp	SHORT $LN45@convertFil
$LN44@convertFil:
	mov	al, BYTE PTR _i$28426[ebp]
	add	al, 1
	mov	BYTE PTR _i$28426[ebp], al
$LN45@convertFil:
	movsx	eax, BYTE PTR _i$28426[ebp]
	movsx	ecx, BYTE PTR _errorLength$28428[ebp]
	cmp	eax, ecx
	jge	$LN43@convertFil
; Line 811
	movsx	eax, BYTE PTR _i$28426[ebp]
	test	eax, eax
	jle	SHORT $LN42@convertFil
; Line 812
	mov	esi, esp
	push	32					; 00000020H
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN42@convertFil:
; Line 814
	movsx	eax, BYTE PTR _i$28426[ebp]
	movzx	ecx, BYTE PTR _errorBytes$28425[ebp+eax]
	sar	ecx, 4
	push	ecx
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	edx, ax
	push	edx
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 815
	movsx	eax, BYTE PTR _i$28426[ebp]
	movzx	ecx, BYTE PTR _errorBytes$28425[ebp+eax]
	push	ecx
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	edx, ax
	push	edx
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 816
	jmp	$LN44@convertFil
$LN43@convertFil:
; Line 818
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 822
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	movsx	ecx, BYTE PTR _length$28427[ebp]
	push	ecx
	lea	edx, DWORD PTR _pos$28424[ebp]
	push	edx
	lea	ecx, DWORD PTR $T28444[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv918[ebp], eax
	mov	eax, DWORD PTR tv918[ebp]
	mov	DWORD PTR tv894[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	mov	ecx, DWORD PTR tv894[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0O@LONOMPID@problemCvtToU?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 20					; 00000014H
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28444[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 824
	mov	BYTE PTR _willexit$[ebp], 1
; Line 825
	mov	DWORD PTR _err$[ebp], 0
; Line 826
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN49@convertFil:
; Line 831
	cmp	DWORD PTR _ulen$[ebp], 0
	jne	SHORT $LN41@convertFil
; Line 832
	jmp	$LN52@convertFil
$LN41@convertFil:
; Line 836
	movsx	eax, BYTE PTR _sig$[ebp]
	test	eax, eax
	jge	$LN40@convertFil
; Line 837
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 65279				; 0000feffH
	jne	SHORT $LN39@convertFil
; Line 838
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 841
	mov	eax, DWORD PTR _ulen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _ulen$[ebp], eax
; Line 843
	movsx	eax, BYTE PTR _useOffsets$[ebp]
	test	eax, eax
	je	SHORT $LN39@convertFil
; Line 846
	mov	eax, DWORD PTR _ulen$[ebp]
	shl	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@convertFil:
; Line 850
	mov	BYTE PTR _sig$[ebp], 0
$LN40@convertFil:
; Line 863
	cmp	DWORD PTR _t$[ebp], 0
	je	$LN37@convertFil
; Line 864
	mov	esi, esp
	lea	ecx, DWORD PTR _out$28451[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
$LN36@convertFil:
; Line 868
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	lea	ecx, DWORD PTR _chunk$[ebp]
	push	ecx
	call	?getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z ; getChunkLimit
	add	esp, 8
	mov	DWORD PTR _chunkLimit$28452[ebp], eax
; Line 869
	cmp	DWORD PTR _chunkLimit$28452[ebp], 0
	jge	SHORT $LN33@convertFil
	movsx	eax, BYTE PTR _flush$[ebp]
	test	eax, eax
	je	SHORT $LN33@convertFil
	movsx	eax, BYTE PTR _fromSawEndOfBytes$[ebp]
	test	eax, eax
	je	SHORT $LN33@convertFil
; Line 871
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _chunkLimit$28452[ebp], eax
$LN33@convertFil:
; Line 873
	cmp	DWORD PTR _chunkLimit$28452[ebp], 0
	jl	$LN32@convertFil
; Line 875
	mov	esi, esp
	mov	eax, DWORD PTR _chunkLimit$28452[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 876
	mov	esi, esp
	mov	eax, DWORD PTR _chunkLimit$28452[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 877
	mov	esi, esp
	lea	eax, DWORD PTR _chunk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 880
	mov	esi, esp
	lea	eax, DWORD PTR _chunk$[ebp]
	push	eax
	lea	ecx, DWORD PTR _out$28451[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 881
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 882
	jmp	SHORT $LN35@convertFil
$LN32@convertFil:
; Line 884
	mov	esi, esp
	lea	eax, DWORD PTR _u$[ebp]
	push	eax
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 885
	jmp	SHORT $LN34@convertFil
$LN35@convertFil:
; Line 887
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN36@convertFil
$LN34@convertFil:
; Line 889
	mov	esi, esp
	lea	eax, DWORD PTR _out$28451[ebp]
	push	eax
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 890
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ulen$[ebp], eax
; Line 891
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _out$28451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@convertFil:
; Line 896
	movsx	eax, BYTE PTR _sig$[ebp]
	test	eax, eax
	jle	$LN30@convertFil
; Line 897
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, ax
	cmp	eax, 65279				; 0000feffH
	je	$LN29@convertFil
	mov	eax, DWORD PTR _convto$[ebp]
	push	eax
	call	?cnvSigType@@YAHPAUUConverter@@@Z	; cnvSigType
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN29@convertFil
; Line 898
	mov	esi, esp
	push	65279					; 0000feffH
	push	0
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?insert@UnicodeString@icu_56@@QAEAAV12@H_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 900
	movsx	eax, BYTE PTR _useOffsets$[ebp]
	test	eax, eax
	je	SHORT $LN28@convertFil
; Line 903
	mov	eax, DWORD PTR _ulen$[ebp]
	shl	eax, 2
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 4
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 904
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], -1
$LN28@convertFil:
; Line 908
	mov	eax, DWORD PTR _ulen$[ebp]
	add	eax, 1
	mov	DWORD PTR _ulen$[ebp], eax
$LN29@convertFil:
; Line 910
	mov	BYTE PTR _sig$[ebp], 0
$LN30@convertFil:
; Line 919
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _unibufbp$[ebp], eax
	mov	eax, DWORD PTR _unibufbp$[ebp]
	mov	DWORD PTR _unibuf$[ebp], eax
$LN27@convertFil:
; Line 922
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _bufp$[ebp], ecx
; Line 930
	movsx	eax, BYTE PTR _flush$[ebp]
	test	eax, eax
	je	SHORT $LN89@convertFil
	movsx	ecx, BYTE PTR _fromSawEndOfBytes$[ebp]
	test	ecx, ecx
	je	SHORT $LN89@convertFil
	mov	BYTE PTR tv669[ebp], 1
	jmp	SHORT $LN90@convertFil
$LN89@convertFil:
	mov	BYTE PTR tv669[ebp], 0
$LN90@convertFil:
	lea	edx, DWORD PTR _err$[ebp]
	push	edx
	movzx	eax, BYTE PTR tv669[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ulen$[ebp]
	mov	edx, DWORD PTR _unibuf$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	lea	ecx, DWORD PTR _unibufbp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+12]
	push	eax
	lea	edx, DWORD PTR _bufp$[ebp]
	push	edx
	mov	eax, DWORD PTR _convto$[ebp]
	push	eax
	call	_ucnv_fromUnicode_56
	add	esp, 32					; 00000020H
; Line 935
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	mov	BYTE PTR _toSawEndOfUnicode$[ebp], al
; Line 937
	cmp	DWORD PTR _err$[ebp], 15		; 0000000fH
	jne	SHORT $LN24@convertFil
; Line 938
	mov	DWORD PTR _err$[ebp], 0
	jmp	$LN23@convertFil
$LN24@convertFil:
; Line 939
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN23@convertFil
; Line 946
	mov	DWORD PTR _localError$28478[ebp], 0
; Line 947
	mov	BYTE PTR _errorLength$28477[ebp], 4
; Line 948
	lea	eax, DWORD PTR _localError$28478[ebp]
	push	eax
	lea	ecx, DWORD PTR _errorLength$28477[ebp]
	push	ecx
	lea	edx, DWORD PTR _errorUChars$28471[ebp]
	push	edx
	mov	eax, DWORD PTR _convto$[ebp]
	push	eax
	call	_ucnv_getInvalidUChars_56
	add	esp, 16					; 00000010H
; Line 949
	mov	eax, DWORD PTR _localError$28478[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN20@convertFil
	movsx	eax, BYTE PTR _errorLength$28477[ebp]
	test	eax, eax
	jne	SHORT $LN21@convertFil
$LN20@convertFil:
; Line 951
	mov	BYTE PTR _errorLength$28477[ebp], 1
$LN21@convertFil:
; Line 956
	movsx	eax, BYTE PTR _useOffsets$[ebp]
	test	eax, eax
	je	$LN19@convertFil
; Line 958
	mov	eax, DWORD PTR _unibufbp$[ebp]
	sub	eax, DWORD PTR _unibuf$[ebp]
	sar	eax, 1
	movsx	ecx, BYTE PTR _errorLength$28477[ebp]
	sub	eax, ecx
	mov	DWORD PTR _ferroffset$28483[ebp], eax
; Line 959
	jns	SHORT $LN17@convertFil
; Line 961
	mov	DWORD PTR _ferroffset$28483[ebp], 0
$LN17@convertFil:
; Line 968
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _ferroffset$28483[ebp]
	mov	eax, DWORD PTR [ecx+edx*4]
	mov	DWORD PTR _fromoffset$28487[ebp], eax
; Line 969
	cmp	DWORD PTR _fromoffset$28487[ebp], 0
	jge	SHORT $LN15@convertFil
	mov	eax, DWORD PTR _ferroffset$28483[ebp]
	sub	eax, 1
	mov	DWORD PTR _ferroffset$28483[ebp], eax
	jns	SHORT $LN17@convertFil
$LN15@convertFil:
; Line 975
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _prevbufp$[ebp]
	sub	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _infoffset$[ebp]
	add	ecx, DWORD PTR _fromoffset$28487[ebp]
	mov	DWORD PTR _ferroffset$28483[ebp], ecx
; Line 976
	mov	DWORD PTR _errtag$28472[ebp], OFFSET ??_C@_0BA@NFEOLDHD@problemCvtFromU?$AA@
; Line 977
	jmp	SHORT $LN13@convertFil
$LN19@convertFil:
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _outfoffset$[ebp]
	mov	DWORD PTR _ferroffset$28483[ebp], ecx
; Line 983
	mov	DWORD PTR _errtag$28472[ebp], OFFSET ??_C@_0BD@NCCFBJBC@problemCvtFromUOut?$AA@
$LN13@convertFil:
; Line 986
	mov	esi, esp
	mov	eax, DWORD PTR _ferroffset$28483[ebp]
	push	eax
	push	OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
	lea	ecx, DWORD PTR _pos$28473[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _length$28476[ebp], al
; Line 989
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
; Line 990
	mov	BYTE PTR _i$28475[ebp], 0
$LN12@convertFil:
	movsx	eax, BYTE PTR _i$28475[ebp]
	movsx	ecx, BYTE PTR _errorLength$28477[ebp]
	cmp	eax, ecx
	jge	$LN11@convertFil
; Line 991
	movsx	eax, BYTE PTR _i$28475[ebp]
	test	eax, eax
	jle	SHORT $LN10@convertFil
; Line 992
	mov	esi, esp
	push	32					; 00000020H
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@convertFil:
; Line 994
	movsx	eax, BYTE PTR _i$28475[ebp]
	movzx	ecx, WORD PTR _errorUChars$28471[ebp+eax*2]
	mov	DWORD PTR _c$28474[ebp], ecx
	mov	dl, BYTE PTR _i$28475[ebp]
	add	dl, 1
	mov	BYTE PTR _i$28475[ebp], dl
	mov	eax, DWORD PTR _c$28474[ebp]
	and	eax, -1024				; fffffc00H
	cmp	eax, 55296				; 0000d800H
	jne	SHORT $LN9@convertFil
	movsx	eax, BYTE PTR _i$28475[ebp]
	movsx	ecx, BYTE PTR _errorLength$28477[ebp]
	cmp	eax, ecx
	je	SHORT $LN9@convertFil
	movsx	eax, BYTE PTR _i$28475[ebp]
	mov	cx, WORD PTR _errorUChars$28471[ebp+eax*2]
	mov	WORD PTR ___c2$28506[ebp], cx
	movzx	edx, WORD PTR ___c2$28506[ebp]
	and	edx, -1024				; fffffc00H
	cmp	edx, 56320				; 0000dc00H
	jne	SHORT $LN9@convertFil
	mov	al, BYTE PTR _i$28475[ebp]
	add	al, 1
	mov	BYTE PTR _i$28475[ebp], al
	mov	eax, DWORD PTR _c$28474[ebp]
	shl	eax, 10					; 0000000aH
	movzx	ecx, WORD PTR ___c2$28506[ebp]
	lea	edx, DWORD PTR [eax+ecx-56613888]
	mov	DWORD PTR _c$28474[ebp], edx
$LN9@convertFil:
; Line 995
	cmp	DWORD PTR _c$28474[ebp], 1048576	; 00100000H
	jl	SHORT $LN7@convertFil
; Line 996
	mov	eax, DWORD PTR _c$28474[ebp]
	sar	eax, 20					; 00000014H
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@convertFil:
; Line 998
	cmp	DWORD PTR _c$28474[ebp], 65536		; 00010000H
	jl	SHORT $LN6@convertFil
; Line 999
	mov	eax, DWORD PTR _c$28474[ebp]
	sar	eax, 16					; 00000010H
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@convertFil:
; Line 1001
	mov	eax, DWORD PTR _c$28474[ebp]
	sar	eax, 12					; 0000000cH
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1002
	mov	eax, DWORD PTR _c$28474[ebp]
	sar	eax, 8
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1003
	mov	eax, DWORD PTR _c$28474[ebp]
	sar	eax, 4
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1004
	movzx	eax, BYTE PTR _c$28474[ebp]
	push	eax
	call	?nibbleToHex@@YA_WE@Z			; nibbleToHex
	add	esp, 4
	mov	esi, esp
	movzx	ecx, ax
	push	ecx
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1005
	jmp	$LN12@convertFil
$LN11@convertFil:
; Line 1007
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1011
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	movsx	ecx, BYTE PTR _length$28476[ebp]
	push	ecx
	lea	edx, DWORD PTR _pos$28473[ebp]
	push	edx
	lea	ecx, DWORD PTR $T28518[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv923[ebp], eax
	mov	eax, DWORD PTR tv923[ebp]
	mov	DWORD PTR tv898[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	esi, esp
	mov	ecx, DWORD PTR tv898[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _errtag$28472[ebp]
	push	ecx
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 20					; 00000014H
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28518[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1012
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0N@HAOGBCJJ@errorUnicode?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1014
	mov	BYTE PTR _willexit$[ebp], 1
; Line 1015
	mov	DWORD PTR _err$[ebp], 0
; Line 1016
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@convertFil:
; Line 1022
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _outlen$28520[ebp], ecx
; Line 1023
	mov	esi, esp
	mov	eax, DWORD PTR _outfile$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outlen$28520[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wr$[ebp], eax
	mov	ecx, DWORD PTR _outfoffset$[ebp]
	add	ecx, DWORD PTR _wr$[ebp]
	mov	DWORD PTR _outfoffset$[ebp], ecx
; Line 1024
	mov	eax, DWORD PTR _wr$[ebp]
	cmp	eax, DWORD PTR _outlen$28520[ebp]
	je	$LN5@convertFil
; Line 1025
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp__strerror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _str$28524[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
; Line 1026
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1027
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28524[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_09CPDOJHKL@cantWrite?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1028
	mov	BYTE PTR _willexit$[ebp], 1
; Line 1029
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28524[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@convertFil:
; Line 1031
	movsx	eax, BYTE PTR _willexit$[ebp]
	test	eax, eax
	je	SHORT $LN26@convertFil
; Line 1032
	jmp	SHORT $error_exit$28388
$LN26@convertFil:
; Line 1034
	movsx	eax, BYTE PTR _toSawEndOfUnicode$[ebp]
	test	eax, eax
	je	$LN27@convertFil
$LN52@convertFil:
; Line 1035
	movsx	eax, BYTE PTR _fromSawEndOfBytes$[ebp]
	test	eax, eax
	je	$LN53@convertFil
; Line 1036
	movsx	eax, BYTE PTR _flush$[ebp]
	test	eax, eax
	je	$LN58@convertFil
; Line 1040
	jmp	SHORT $normal_exit$28528
$error_exit$28388:
; Line 1043
	mov	BYTE PTR _ret$[ebp], 0
$normal_exit$28528:
; Line 1048
	mov	eax, DWORD PTR _convfrom$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 1049
	mov	eax, DWORD PTR _convto$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 1052
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR $T35455[ebp], eax
	mov	ecx, DWORD PTR $T35455[ebp]
	mov	DWORD PTR $T35454[ebp], ecx
	cmp	DWORD PTR $T35454[ebp], 0
	je	SHORT $LN91@convertFil
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T35454[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T35454[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv864[ebp], eax
	jmp	SHORT $LN92@convertFil
$LN91@convertFil:
	mov	DWORD PTR tv864[ebp], 0
$LN92@convertFil:
; Line 1055
	movsx	eax, BYTE PTR _closeFile$[ebp]
	test	eax, eax
	je	SHORT $LN1@convertFil
; Line 1056
	mov	esi, esp
	mov	eax, DWORD PTR _infile$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@convertFil:
; Line 1059
	mov	al, BYTE PTR _ret$[ebp]
	mov	BYTE PTR $T35458[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T35458[ebp]
$LN81@convertFil:
; Line 1060
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN141@convertFil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2316				; 0000090cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
$LN141@convertFil:
	DD	29					; 0000001dH
	DD	$LN140@convertFil
$LN140@convertFil:
	DD	-84					; ffffffacH
	DD	4
	DD	$LN110@convertFil
	DD	-120					; ffffff88H
	DD	4
	DD	$LN111@convertFil
	DD	-144					; ffffff70H
	DD	4
	DD	$LN112@convertFil
	DD	-192					; ffffff40H
	DD	4
	DD	$LN113@convertFil
	DD	-204					; ffffff34H
	DD	4
	DD	$LN114@convertFil
	DD	-312					; fffffec8H
	DD	64					; 00000040H
	DD	$LN115@convertFil
	DD	-384					; fffffe80H
	DD	64					; 00000040H
	DD	$LN116@convertFil
	DD	-480					; fffffe20H
	DD	64					; 00000040H
	DD	$LN117@convertFil
	DD	-552					; fffffdd8H
	DD	64					; 00000040H
	DD	$LN118@convertFil
	DD	-632					; fffffd88H
	DD	72					; 00000048H
	DD	$LN119@convertFil
	DD	-704					; fffffd40H
	DD	64					; 00000040H
	DD	$LN120@convertFil
	DD	-776					; fffffcf8H
	DD	64					; 00000040H
	DD	$LN121@convertFil
	DD	-824					; fffffcc8H
	DD	40					; 00000028H
	DD	$LN122@convertFil
	DD	-872					; fffffc98H
	DD	40					; 00000028H
	DD	$LN123@convertFil
	DD	-944					; fffffc50H
	DD	64					; 00000040H
	DD	$LN124@convertFil
	DD	-1016					; fffffc08H
	DD	64					; 00000040H
	DD	$LN125@convertFil
	DD	-1136					; fffffb90H
	DD	64					; 00000040H
	DD	$LN126@convertFil
	DD	-1176					; fffffb68H
	DD	32					; 00000020H
	DD	$LN127@convertFil
	DD	-1216					; fffffb40H
	DD	32					; 00000020H
	DD	$LN128@convertFil
	DD	-1249					; fffffb1fH
	DD	1
	DD	$LN129@convertFil
	DD	-1264					; fffffb10H
	DD	4
	DD	$LN130@convertFil
	DD	-1336					; fffffac8H
	DD	64					; 00000040H
	DD	$LN131@convertFil
	DD	-1408					; fffffa80H
	DD	64					; 00000040H
	DD	$LN132@convertFil
	DD	-1436					; fffffa64H
	DD	8
	DD	$LN133@convertFil
	DD	-1488					; fffffa30H
	DD	32					; 00000020H
	DD	$LN134@convertFil
	DD	-1533					; fffffa03H
	DD	1
	DD	$LN135@convertFil
	DD	-1548					; fffff9f4H
	DD	4
	DD	$LN136@convertFil
	DD	-1644					; fffff994H
	DD	64					; 00000040H
	DD	$LN137@convertFil
	DD	-1740					; fffff934H
	DD	64					; 00000040H
	DD	$LN138@convertFil
$LN138@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN137@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN136@convertFil:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN135@convertFil:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN134@convertFil:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN133@convertFil:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	85					; 00000055H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
$LN132@convertFil:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN131@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN130@convertFil:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN129@convertFil:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN128@convertFil:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN127@convertFil:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN126@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN125@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN124@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN123@convertFil:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN122@convertFil:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN121@convertFil:
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN120@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN119@convertFil:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	0
$LN118@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN117@convertFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN116@convertFil:
	DB	117					; 00000075H
	DB	0
$LN115@convertFil:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN114@convertFil:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	112					; 00000070H
	DB	0
$LN113@convertFil:
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	98					; 00000062H
	DB	112					; 00000070H
	DB	0
$LN112@convertFil:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	112					; 00000070H
	DB	0
$LN111@convertFil:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	112					; 00000070H
	DB	0
$LN110@convertFil:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _chunk$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR _u$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$10:
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28354[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28356[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$12:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28368[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR _pestr$28369[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$14:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28373[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$15:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28376[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$16:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28391[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28398[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$18:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28411[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$19:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28436[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$20:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28444[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$21:
	mov	esi, esp
	lea	ecx, DWORD PTR _out$28451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$22:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28499[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$23:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28518[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z$24:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28524[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2320]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z ENDP ; ConvertFile::convertFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??_C@_0CN@EPOJPPLK@?$CFs?3?5warning?3?5messages?5will?5not?5b@ ; `string'
PUBLIC	??_C@_0DA@PPMDEJBN@?$CFs?3?5warning?3?5still?5couldn?8t?5open@ ; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0DM@JIOGEEDO@?$CFs?3?5setAppData?5was?5called?0?5inter@ ; `string'
PUBLIC	??_C@_0CK@CHGPIDIO@?$CFs?3?5warning?3?5couldn?8t?5open?5bundl@ ; `string'
PUBLIC	??_C@_0GA@KAOLFKPJ@?$CFs?3?5warning?0?5problem?5installing?5@ ; `string'
PUBLIC	??_C@_08HBHDIJGN@uconvmsg?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	_u_wmsg_setPath:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_udata_setAppData_56:PROC
EXTRN	_uconvmsg_dat:BYTE
;	COMDAT ??_C@_0CN@EPOJPPLK@?$CFs?3?5warning?3?5messages?5will?5not?5b@
; File d:\mozilla\intl\icu\source\extra\uconv\uconv.cpp
CONST	SEGMENT
??_C@_0CN@EPOJPPLK@?$CFs?3?5warning?3?5messages?5will?5not?5b@ DB '%s: wa'
	DB	'rning: messages will not be displayed', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PPMDEJBN@?$CFs?3?5warning?3?5still?5couldn?8t?5open@
CONST	SEGMENT
??_C@_0DA@PPMDEJBN@?$CFs?3?5warning?3?5still?5couldn?8t?5open@ DB '%s: wa'
	DB	'rning: still couldn''t open bundle %s: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@JIOGEEDO@?$CFs?3?5setAppData?5was?5called?0?5inter@
CONST	SEGMENT
??_C@_0DM@JIOGEEDO@?$CFs?3?5setAppData?5was?5called?0?5inter@ DB '%s: set'
	DB	'AppData was called, internal data %s failed to load', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CHGPIDIO@?$CFs?3?5warning?3?5couldn?8t?5open?5bundl@
CONST	SEGMENT
??_C@_0CK@CHGPIDIO@?$CFs?3?5warning?3?5couldn?8t?5open?5bundl@ DB '%s: wa'
	DB	'rning: couldn''t open bundle %s: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@KAOLFKPJ@?$CFs?3?5warning?0?5problem?5installing?5@
CONST	SEGMENT
??_C@_0GA@KAOLFKPJ@?$CFs?3?5warning?0?5problem?5installing?5@ DB '%s: war'
	DB	'ning, problem installing our static resource bundle data ucon'
	DB	'vmsg: %s - trying anyways.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBHDIJGN@uconvmsg?$AA@
CONST	SEGMENT
??_C@_08HBHDIJGN@uconvmsg?$AA@ DB 'uconvmsg', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?initMsg@@YAXPBD@Z
_TEXT	SEGMENT
_err$28055 = -2068					; size = 4
_dataPath$28054 = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_pname$ = 8						; size = 4
?initMsg@@YAXPBD@Z PROC					; initMsg, COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 2264				; 000008d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2264]
	mov	ecx, 566				; 00000236H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 83
	cmp	DWORD PTR ?ps@?1??initMsg@@YAXPBD@Z@4HA, 0
	jne	$LN5@initMsg
; Line 85
	mov	DWORD PTR _err$28055[ebp], 0
; Line 87
	mov	DWORD PTR ?ps@?1??initMsg@@YAXPBD@Z@4HA, 1
; Line 91
	lea	eax, DWORD PTR _err$28055[ebp]
	push	eax
	push	OFFSET _uconvmsg_dat
	push	OFFSET ??_C@_08HBHDIJGN@uconvmsg?$AA@
	call	_udata_setAppData_56
	add	esp, 12					; 0000000cH
; Line 92
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@initMsg
; Line 94
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	push	OFFSET ??_C@_0GA@KAOLFKPJ@?$CFs?3?5warning?0?5problem?5installing?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 95
	mov	DWORD PTR _err$28055[ebp], 0
$LN3@initMsg:
; Line 100
	lea	eax, DWORD PTR _err$28055[ebp]
	push	eax
	push	OFFSET ??_C@_08HBHDIJGN@uconvmsg?$AA@
	call	_u_wmsg_setPath
	add	esp, 8
	mov	DWORD PTR _gBundle, eax
; Line 101
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN5@initMsg
; Line 104
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_08HBHDIJGN@uconvmsg?$AA@
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CK@CHGPIDIO@?$CFs?3?5warning?3?5couldn?8t?5open?5bundl@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 108
	mov	esi, esp
	push	OFFSET ??_C@_08HBHDIJGN@uconvmsg?$AA@
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0DM@JIOGEEDO@?$CFs?3?5setAppData?5was?5called?0?5inter@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 111
	mov	DWORD PTR _err$28055[ebp], 0
; Line 113
	call	_u_getDataDirectory_56
	push	eax
	lea	eax, DWORD PTR _dataPath$28054[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 114
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _dataPath$28054[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 115
	push	OFFSET ??_C@_08HBHDIJGN@uconvmsg?$AA@
	lea	eax, DWORD PTR _dataPath$28054[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 117
	lea	eax, DWORD PTR _err$28055[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataPath$28054[ebp]
	push	ecx
	call	_u_wmsg_setPath
	add	esp, 8
	mov	DWORD PTR _gBundle, eax
; Line 118
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@initMsg
; Line 121
	mov	eax, DWORD PTR _err$28055[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _dataPath$28054[ebp]
	push	ecx
	mov	edx, DWORD PTR _pname$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@PPMDEJBN@?$CFs?3?5warning?3?5still?5couldn?8t?5open@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	mov	esi, esp
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0CN@EPOJPPLK@?$CFs?3?5warning?3?5messages?5will?5not?5b@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@initMsg:
; Line 126
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@initMsg
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2264				; 000008d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@initMsg:
	DD	2
	DD	$LN9@initMsg
$LN9@initMsg:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN7@initMsg
	DD	-2068					; fffff7ecH
	DD	4
	DD	$LN8@initMsg
$LN8@initMsg:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN7@initMsg:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?initMsg@@YAXPBD@Z ENDP					; initMsg
_TEXT	ENDS
EXTRN	__imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
EXTRN	__imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z
_TEXT	SEGMENT
_c$ = -32						; size = 2
_limit$ = -20						; size = 4
_u$ = -8						; size = 4
_prev$ = 8						; size = 4
_s$ = 12						; size = 4
?getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z PROC	; getChunkLimit, COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 436
	mov	esi, esp
	push	1
	push	OFFSET ?paraEnds@?1??getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z@4QB_WB
	mov	ecx, DWORD PTR _prev$[ebp]
	call	DWORD PTR __imp_?endsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN14@getChunkLi
; Line 437
	mov	esi, esp
	push	1
	push	OFFSET ?paraEnds@?1??getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z@4QB_WB+2
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?startsWith@UnicodeString@icu_56@@QBECPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN13@getChunkLi
; Line 438
	mov	eax, 1
	jmp	$LN15@getChunkLi
	jmp	SHORT $LN14@getChunkLi
$LN13@getChunkLi:
; Line 439
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?isEmpty@UnicodeString@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN11@getChunkLi
; Line 440
	xor	eax, eax
	jmp	$LN15@getChunkLi
; Line 441
	jmp	SHORT $LN14@getChunkLi
$LN11@getChunkLi:
; Line 442
	or	eax, -1
	jmp	$LN15@getChunkLi
$LN14@getChunkLi:
; Line 446
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u$[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _u$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _limit$[ebp], edx
$LN9@getChunkLi:
; Line 449
	mov	eax, DWORD PTR _u$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	$LN8@getChunkLi
; Line 450
	mov	eax, DWORD PTR _u$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$[ebp], cx
	mov	edx, DWORD PTR _u$[ebp]
	add	edx, 2
	mov	DWORD PTR _u$[ebp], edx
; Line 455
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 32					; 00000020H
	jge	SHORT $LN5@getChunkLi
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN6@getChunkLi
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN6@getChunkLi
$LN5@getChunkLi:
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 133				; 00000085H
	je	SHORT $LN6@getChunkLi
	movzx	eax, WORD PTR _c$[ebp]
	and	eax, 8232				; 00002028H
	cmp	eax, 8232				; 00002028H
	jne	SHORT $LN7@getChunkLi
$LN6@getChunkLi:
; Line 456
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN4@getChunkLi
; Line 458
	mov	eax, DWORD PTR _u$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN3@getChunkLi
; Line 459
	or	eax, -1
	jmp	SHORT $LN15@getChunkLi
	jmp	SHORT $LN4@getChunkLi
$LN3@getChunkLi:
; Line 460
	mov	eax, DWORD PTR _u$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN4@getChunkLi
; Line 461
	mov	eax, DWORD PTR _u$[ebp]
	add	eax, 2
	mov	DWORD PTR _u$[ebp], eax
$LN4@getChunkLi:
; Line 464
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _u$[ebp]
	sub	ecx, eax
	sar	ecx, 1
	mov	eax, ecx
	jmp	SHORT $LN15@getChunkLi
$LN7@getChunkLi:
; Line 466
	jmp	$LN9@getChunkLi
$LN8@getChunkLi:
; Line 468
	or	eax, -1
$LN15@getChunkLi:
; Line 469
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getChunkLimit@@YAHABVUnicodeString@icu_56@@0@Z ENDP	; getChunkLimit
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?nibbleToHex@@YA_WE@Z
_TEXT	SEGMENT
tv75 = -194						; size = 2
_n$ = 8							; size = 1
?nibbleToHex@@YA_WE@Z PROC				; nibbleToHex, COMDAT
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 479
	movzx	eax, BYTE PTR _n$[ebp]
	and	eax, 15					; 0000000fH
	mov	BYTE PTR _n$[ebp], al
; Line 483
	movzx	eax, BYTE PTR _n$[ebp]
	cmp	eax, 9
	jg	SHORT $LN3@nibbleToHe
	movzx	ecx, BYTE PTR _n$[ebp]
	add	ecx, 48					; 00000030H
	mov	WORD PTR tv75[ebp], cx
	jmp	SHORT $LN4@nibbleToHe
$LN3@nibbleToHe:
	movzx	edx, BYTE PTR _n$[ebp]
	add	edx, 87					; 00000057H
	mov	WORD PTR tv75[ebp], dx
$LN4@nibbleToHe:
	mov	ax, WORD PTR tv75[ebp]
; Line 484
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?nibbleToHex@@YA_WE@Z ENDP				; nibbleToHex
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_ucnv_detectUnicodeSignature_56:PROC
EXTRN	_ucnv_resetFromUnicode_56:PROC
EXTRN	_uset_close_56:PROC
EXTRN	_uset_contains_56:PROC
EXTRN	_ucnv_getUnicodeSet_56:PROC
EXTRN	_uset_open_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cnvSigType@@YAHPAUUConverter@@@Z
_TEXT	SEGMENT
_out$28264 = -100					; size = 4
_buffer$28263 = -88					; size = 20
_in$28262 = -60						; size = 4
_a$28261 = -48						; size = 2
_set$ = -36						; size = 4
_result$ = -24						; size = 4
_err$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_cnv$ = 8						; size = 4
?cnvSigType@@YAHPAUUConverter@@@Z PROC			; cnvSigType, COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 495
	push	0
	push	1
	call	_uset_open_56
	add	esp, 8
	mov	DWORD PTR _set$[ebp], eax
; Line 496
	mov	DWORD PTR _err$[ebp], 0
; Line 497
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _set$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	push	edx
	call	_ucnv_getUnicodeSet_56
	add	esp, 16					; 00000010H
; Line 498
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@cnvSigType
	push	65279					; 0000feffH
	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	call	_uset_contains_56
	add	esp, 8
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@cnvSigType
; Line 499
	mov	DWORD PTR _result$[ebp], 1
; Line 500
	jmp	SHORT $LN3@cnvSigType
$LN4@cnvSigType:
; Line 501
	mov	DWORD PTR _result$[ebp], 0
$LN3@cnvSigType:
; Line 503
	mov	eax, DWORD PTR _set$[ebp]
	push	eax
	call	_uset_close_56
	add	esp, 4
; Line 505
	cmp	DWORD PTR _result$[ebp], 1
	jne	$LN2@cnvSigType
; Line 507
	mov	eax, 97					; 00000061H
	mov	WORD PTR _a$28261[ebp], ax
; Line 513
	lea	eax, DWORD PTR _a$28261[ebp]
	mov	DWORD PTR _in$28262[ebp], eax
; Line 514
	lea	eax, DWORD PTR _buffer$28263[ebp]
	mov	DWORD PTR _out$28264[ebp], eax
; Line 515
	mov	DWORD PTR _err$[ebp], 0
; Line 519
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	1
	push	0
	lea	ecx, DWORD PTR _a$28261[ebp+2]
	push	ecx
	lea	edx, DWORD PTR _in$28262[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$28263[ebp+20]
	push	eax
	lea	ecx, DWORD PTR _out$28264[ebp]
	push	ecx
	mov	edx, DWORD PTR _cnv$[ebp]
	push	edx
	call	_ucnv_fromUnicode_56
	add	esp, 32					; 00000020H
; Line 520
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	_ucnv_resetFromUnicode_56
	add	esp, 4
; Line 524
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _out$28264[ebp]
	lea	edx, DWORD PTR _buffer$28263[ebp]
	sub	ecx, edx
	push	ecx
	lea	eax, DWORD PTR _buffer$28263[ebp]
	push	eax
	call	_ucnv_detectUnicodeSignature_56
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@cnvSigType
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@cnvSigType
; Line 525
	mov	DWORD PTR _result$[ebp], 2
$LN2@cnvSigType:
; Line 529
	mov	eax, DWORD PTR _result$[ebp]
; Line 530
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@cnvSigType
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@cnvSigType:
	DD	5
	DD	$LN12@cnvSigType
$LN12@cnvSigType:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN7@cnvSigType
	DD	-48					; ffffffd0H
	DD	2
	DD	$LN8@cnvSigType
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN9@cnvSigType
	DD	-88					; ffffffa8H
	DD	20					; 00000014H
	DD	$LN10@cnvSigType
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN11@cnvSigType
$LN11@cnvSigType:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN10@cnvSigType:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN9@cnvSigType:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN8@cnvSigType:
	DB	97					; 00000061H
	DB	0
$LN7@cnvSigType:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
?cnvSigType@@YAHPAUUConverter@@@Z ENDP			; cnvSigType
_TEXT	ENDS
PUBLIC	?setBufferSize@ConvertFile@@QAEXI@Z		; ConvertFile::setBufferSize
PUBLIC	??_C@_0BC@LAHGFELN@cantSetOutBinMode?$AA@	; `string'
PUBLIC	??_C@_0BC@FFDCCNFG@cantCreateOutputF?$AA@	; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0BD@NKEJKBBI@?9?9remove?9signature?$AA@	; `string'
PUBLIC	??_C@_0BA@PAMDPENA@?9?9add?9signature?$AA@	; `string'
PUBLIC	??_C@_08FACOKJIG@?9?9output?$AA@		; `string'
PUBLIC	??_C@_02NCEOIEDG@?9o?$AA@			; `string'
PUBLIC	??_C@_0BD@CIGJICAA@?$CFs?5v2?41?5?5ICU?556?41?6?$AA@ ; `string'
PUBLIC	??_C@_09GAJKMFCA@?9?9version?$AA@		; `string'
PUBLIC	??_C@_02NMMKAJIM@?9V?$AA@			; `string'
PUBLIC	??_C@_09OOLJKHBB@?9?9verbose?$AA@		; `string'
PUBLIC	??_C@_02EJEOCNCO@?9v?$AA@			; `string'
PUBLIC	??_C@_08KDGAKKKD@?9?9silent?$AA@		; `string'
PUBLIC	??_C@_02DEDJNJGL@?9s?$AA@			; `string'
PUBLIC	??_C@_0L@IFKMIDAJ@?9?9callback?$AA@		; `string'
PUBLIC	??_C@_02IEBECDLA@?9i?$AA@			; `string'
PUBLIC	??_C@_0BA@EKBHOLMA@?9?9from?9callback?$AA@	; `string'
PUBLIC	??_C@_0BA@ILJGANK@unknownCallback?$AA@		; `string'
PUBLIC	??_C@_0O@BIDEHCIP@?9?9to?9callback?$AA@		; `string'
PUBLIC	??_C@_02HOPLMLDK@?9c?$AA@			; `string'
PUBLIC	??_C@_06LMIDBODK@?9?9help?$AA@			; `string'
PUBLIC	??_C@_02GIPFNJGC@?9?$DP?$AA@			; `string'
PUBLIC	??_C@_02JNAPBCPB@?9h?$AA@			; `string'
PUBLIC	??_C@_0BH@BNGPFDIM@?9?9list?9transliterators?$AA@ ; `string'
PUBLIC	??_C@_02GMOHPDFH@?9L?$AA@			; `string'
PUBLIC	??_C@_07BPPKGGEA@?9?9canon?$AA@			; `string'
PUBLIC	??_C@_0O@DNOEEPEA@noSuchCodeset?$AA@		; `string'
PUBLIC	??_C@_0M@BPOOJACC@?9?9list?9code?$AA@		; `string'
PUBLIC	??_C@_0P@KKGAOHIE@?9?9default?9code?$AA@	; `string'
PUBLIC	??_C@_06HAMDCGAL@?9?9list?$AA@			; `string'
PUBLIC	??_C@_02PJGDNHPF@?9l?$AA@			; `string'
PUBLIC	??1ConvertFile@@QAE@XZ				; ConvertFile::~ConvertFile
PUBLIC	??_C@_0N@EEBBNCJI@badBlockSize?$AA@		; `string'
PUBLIC	??_C@_0N@BHKJDEMP@?9?9block?9size?$AA@		; `string'
PUBLIC	??_C@_02GHOAPKHL@?9b?$AA@			; `string'
PUBLIC	??_C@_0O@LEIMDCFN@?9?9no?9fallback?$AA@		; `string'
PUBLIC	??_C@_0L@MPDLMGEG@?9?9fallback?$AA@		; `string'
PUBLIC	??_C@_02NHMNAAKA@?9x?$AA@			; `string'
PUBLIC	??_C@_09NBDNNJEF@?9?9to?9code?$AA@		; `string'
PUBLIC	??_C@_02HLHIEPKM@?9t?$AA@			; `string'
PUBLIC	??_C@_0M@PPALCBDO@?9?9from?9code?$AA@		; `string'
PUBLIC	??_C@_02DIMDPHP@?9f?$AA@			; `string'
PUBLIC	?strrchr@@YAPADPADH@Z				; strrchr
PUBLIC	??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@ ; `string'
PUBLIC	??0ConvertFile@@QAE@XZ				; ConvertFile::ConvertFile
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	_u_cleanup_56:PROC
EXTRN	__imp__printf:PROC
EXTRN	_ucnv_getAlias_56:PROC
EXTRN	_ucnv_getDefaultName_56:PROC
EXTRN	__imp__atoi:PROC
EXTRN	__imp__exit:PROC
EXTRN	_u_init_56:PROC
;	COMDAT ??_C@_0BC@LAHGFELN@cantSetOutBinMode?$AA@
CONST	SEGMENT
??_C@_0BC@LAHGFELN@cantSetOutBinMode?$AA@ DB 'cantSetOutBinMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FFDCCNFG@cantCreateOutputF?$AA@
CONST	SEGMENT
??_C@_0BC@FFDCCNFG@cantCreateOutputF?$AA@ DB 'cantCreateOutputF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKEJKBBI@?9?9remove?9signature?$AA@
CONST	SEGMENT
??_C@_0BD@NKEJKBBI@?9?9remove?9signature?$AA@ DB '--remove-signature', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PAMDPENA@?9?9add?9signature?$AA@
CONST	SEGMENT
??_C@_0BA@PAMDPENA@?9?9add?9signature?$AA@ DB '--add-signature', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FACOKJIG@?9?9output?$AA@
CONST	SEGMENT
??_C@_08FACOKJIG@?9?9output?$AA@ DB '--output', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NCEOIEDG@?9o?$AA@
CONST	SEGMENT
??_C@_02NCEOIEDG@?9o?$AA@ DB '-o', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CIGJICAA@?$CFs?5v2?41?5?5ICU?556?41?6?$AA@
CONST	SEGMENT
??_C@_0BD@CIGJICAA@?$CFs?5v2?41?5?5ICU?556?41?6?$AA@ DB '%s v2.1  ICU 56.'
	DB	'1', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09GAJKMFCA@?9?9version?$AA@
CONST	SEGMENT
??_C@_09GAJKMFCA@?9?9version?$AA@ DB '--version', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NMMKAJIM@?9V?$AA@
CONST	SEGMENT
??_C@_02NMMKAJIM@?9V?$AA@ DB '-V', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09OOLJKHBB@?9?9verbose?$AA@
CONST	SEGMENT
??_C@_09OOLJKHBB@?9?9verbose?$AA@ DB '--verbose', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02EJEOCNCO@?9v?$AA@
CONST	SEGMENT
??_C@_02EJEOCNCO@?9v?$AA@ DB '-v', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KDGAKKKD@?9?9silent?$AA@
CONST	SEGMENT
??_C@_08KDGAKKKD@?9?9silent?$AA@ DB '--silent', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DEDJNJGL@?9s?$AA@
CONST	SEGMENT
??_C@_02DEDJNJGL@?9s?$AA@ DB '-s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IFKMIDAJ@?9?9callback?$AA@
CONST	SEGMENT
??_C@_0L@IFKMIDAJ@?9?9callback?$AA@ DB '--callback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02IEBECDLA@?9i?$AA@
CONST	SEGMENT
??_C@_02IEBECDLA@?9i?$AA@ DB '-i', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EKBHOLMA@?9?9from?9callback?$AA@
CONST	SEGMENT
??_C@_0BA@EKBHOLMA@?9?9from?9callback?$AA@ DB '--from-callback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ILJGANK@unknownCallback?$AA@
CONST	SEGMENT
??_C@_0BA@ILJGANK@unknownCallback?$AA@ DB 'unknownCallback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BIDEHCIP@?9?9to?9callback?$AA@
CONST	SEGMENT
??_C@_0O@BIDEHCIP@?9?9to?9callback?$AA@ DB '--to-callback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HOPLMLDK@?9c?$AA@
CONST	SEGMENT
??_C@_02HOPLMLDK@?9c?$AA@ DB '-c', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMIDBODK@?9?9help?$AA@
CONST	SEGMENT
??_C@_06LMIDBODK@?9?9help?$AA@ DB '--help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GIPFNJGC@?9?$DP?$AA@
CONST	SEGMENT
??_C@_02GIPFNJGC@?9?$DP?$AA@ DB '-?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02JNAPBCPB@?9h?$AA@
CONST	SEGMENT
??_C@_02JNAPBCPB@?9h?$AA@ DB '-h', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BNGPFDIM@?9?9list?9transliterators?$AA@
CONST	SEGMENT
??_C@_0BH@BNGPFDIM@?9?9list?9transliterators?$AA@ DB '--list-transliterat'
	DB	'ors', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMOHPDFH@?9L?$AA@
CONST	SEGMENT
??_C@_02GMOHPDFH@?9L?$AA@ DB '-L', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07BPPKGGEA@?9?9canon?$AA@
CONST	SEGMENT
??_C@_07BPPKGGEA@?9?9canon?$AA@ DB '--canon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DNOEEPEA@noSuchCodeset?$AA@
CONST	SEGMENT
??_C@_0O@DNOEEPEA@noSuchCodeset?$AA@ DB 'noSuchCodeset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BPOOJACC@?9?9list?9code?$AA@
CONST	SEGMENT
??_C@_0M@BPOOJACC@?9?9list?9code?$AA@ DB '--list-code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KKGAOHIE@?9?9default?9code?$AA@
CONST	SEGMENT
??_C@_0P@KKGAOHIE@?9?9default?9code?$AA@ DB '--default-code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HAMDCGAL@?9?9list?$AA@
CONST	SEGMENT
??_C@_06HAMDCGAL@?9?9list?$AA@ DB '--list', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PJGDNHPF@?9l?$AA@
CONST	SEGMENT
??_C@_02PJGDNHPF@?9l?$AA@ DB '-l', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EEBBNCJI@badBlockSize?$AA@
CONST	SEGMENT
??_C@_0N@EEBBNCJI@badBlockSize?$AA@ DB 'badBlockSize', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BHKJDEMP@?9?9block?9size?$AA@
CONST	SEGMENT
??_C@_0N@BHKJDEMP@?9?9block?9size?$AA@ DB '--block-size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GHOAPKHL@?9b?$AA@
CONST	SEGMENT
??_C@_02GHOAPKHL@?9b?$AA@ DB '-b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LEIMDCFN@?9?9no?9fallback?$AA@
CONST	SEGMENT
??_C@_0O@LEIMDCFN@?9?9no?9fallback?$AA@ DB '--no-fallback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MPDLMGEG@?9?9fallback?$AA@
CONST	SEGMENT
??_C@_0L@MPDLMGEG@?9?9fallback?$AA@ DB '--fallback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02NHMNAAKA@?9x?$AA@
CONST	SEGMENT
??_C@_02NHMNAAKA@?9x?$AA@ DB '-x', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09NBDNNJEF@?9?9to?9code?$AA@
CONST	SEGMENT
??_C@_09NBDNNJEF@?9?9to?9code?$AA@ DB '--to-code', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02HLHIEPKM@?9t?$AA@
CONST	SEGMENT
??_C@_02HLHIEPKM@?9t?$AA@ DB '-t', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PPALCBDO@?9?9from?9code?$AA@
CONST	SEGMENT
??_C@_0M@PPALCBDO@?9?9from?9code?$AA@ DB '--from-code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DIMDPHP@?9f?$AA@
CONST	SEGMENT
??_C@_02DIMDPHP@?9f?$AA@ DB '-f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@
CONST	SEGMENT
??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@ DB '%s: c'
	DB	'an not initialize ICU.  status = %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$3
	DD	00H
	DD	FLAT:__unwindfunclet$_main$4
	DD	00H
	DD	FLAT:__unwindfunclet$_main$5
	DD	00H
	DD	FLAT:__unwindfunclet$_main$6
	DD	00H
	DD	FLAT:__unwindfunclet$_main$7
	DD	00H
	DD	FLAT:__unwindfunclet$_main$8
	DD	00H
	DD	FLAT:__unwindfunclet$_main$9
	DD	06H
	DD	FLAT:__unwindfunclet$_main$10
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT _main
_TEXT	SEGMENT
$T35558 = -1180						; size = 4
$T35559 = -1168						; size = 4
$T35560 = -1156						; size = 4
$T35561 = -1144						; size = 4
$T35562 = -1132						; size = 4
$T35563 = -1120						; size = 4
$T35564 = -1108						; size = 4
$T35565 = -1096						; size = 4
$T35566 = -1084						; size = 4
$T35567 = -1072						; size = 4
_str2$28752 = -868					; size = 64
_str1$28751 = -796					; size = 64
_str$28702 = -724					; size = 64
_cbe$28699 = -652					; size = 4
_str$28689 = -640					; size = 64
_cbe$28686 = -568					; size = 4
_str$28678 = -556					; size = 64
_cbe$28675 = -484					; size = 4
_str$28649 = -472					; size = 64
_e$28646 = -400						; size = 4
_str$28627 = -388					; size = 64
_cf$ = -316						; size = 20
_status$ = -288						; size = 4
_verbose$ = -273					; size = 1
_printName$ = -264					; size = 4
_printTranslits$ = -249					; size = 1
_printCanon$ = -237					; size = 1
_printConvs$ = -225					; size = 1
_pname$ = -216						; size = 4
_end$ = -204						; size = 4
_remainArgvLimit$ = -192				; size = 4
_remainArgv$ = -180					; size = 4
_iter$ = -168						; size = 4
_touctxt$ = -156					; size = 4
_toucallback$ = -144					; size = 4
_fromuctxt$ = -132					; size = 4
_fromucallback$ = -120					; size = 4
_fallback$ = -105					; size = 1
_outfilestr$ = -96					; size = 4
_translit$ = -84					; size = 4
_tocpage$ = -72						; size = 4
_fromcpage$ = -60					; size = 4
_bufsz$ = -48						; size = 4
_ret$ = -36						; size = 4
_outfile$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 1098
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1172				; 00000494H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1184]
	mov	ecx, 293				; 00000125H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1100
	mov	DWORD PTR _ret$[ebp], 0
; Line 1102
	mov	DWORD PTR _bufsz$[ebp], 4096		; 00001000H
; Line 1104
	mov	DWORD PTR _fromcpage$[ebp], 0
; Line 1105
	mov	DWORD PTR _tocpage$[ebp], 0
; Line 1106
	mov	DWORD PTR _translit$[ebp], 0
; Line 1107
	mov	DWORD PTR _outfilestr$[ebp], 0
; Line 1108
	mov	BYTE PTR _fallback$[ebp], 0
; Line 1110
	mov	DWORD PTR _fromucallback$[ebp], OFFSET _UCNV_FROM_U_CALLBACK_STOP_56
; Line 1111
	mov	DWORD PTR _fromuctxt$[ebp], 0
; Line 1112
	mov	DWORD PTR _toucallback$[ebp], OFFSET _UCNV_TO_U_CALLBACK_STOP_56
; Line 1113
	mov	DWORD PTR _touctxt$[ebp], 0
; Line 1116
	mov	eax, DWORD PTR _argc$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _end$[ebp], edx
; Line 1120
	mov	BYTE PTR _printConvs$[ebp], 0
	mov	BYTE PTR _printCanon$[ebp], 0
	mov	BYTE PTR _printTranslits$[ebp], 0
; Line 1121
	mov	DWORD PTR _printName$[ebp], 0
; Line 1123
	mov	BYTE PTR _verbose$[ebp], 0
; Line 1124
	mov	DWORD PTR _status$[ebp], 0
; Line 1126
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??0ConvertFile@@QAE@XZ			; ConvertFile::ConvertFile
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1129
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_init_56
	add	esp, 4
; Line 1130
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN119@main
; Line 1132
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ??_C@_0CK@CCPENKNA@?$CFs?3?5can?5not?5initialize?5ICU?4?5?5sta@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1133
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN119@main:
; Line 1137
	push	92					; 0000005cH
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _pname$[ebp], eax
; Line 1139
	cmp	DWORD PTR _pname$[ebp], 0
	jne	SHORT $LN118@main
; Line 1140
	push	47					; 0000002fH
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?strrchr@@YAPADPADH@Z			; strrchr
	add	esp, 8
	mov	DWORD PTR _pname$[ebp], eax
$LN118@main:
; Line 1143
	cmp	DWORD PTR _pname$[ebp], 0
	jne	SHORT $LN117@main
; Line 1144
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pname$[ebp], ecx
; Line 1145
	jmp	SHORT $LN116@main
$LN117@main:
; Line 1146
	mov	eax, DWORD PTR _pname$[ebp]
	add	eax, 1
	mov	DWORD PTR _pname$[ebp], eax
$LN116@main:
; Line 1152
	mov	eax, DWORD PTR _argv$[ebp]
	add	eax, 4
	mov	DWORD PTR _remainArgvLimit$[ebp], eax
	mov	ecx, DWORD PTR _remainArgvLimit$[ebp]
	mov	DWORD PTR _remainArgv$[ebp], ecx
; Line 1153
	mov	eax, DWORD PTR _argv$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
	jmp	SHORT $LN115@main
$LN114@main:
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
$LN115@main:
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN113@main
; Line 1155
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02DIMDPHP@?9f?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN111@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0M@PPALCBDO@?9?9from?9code?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN112@main
$LN111@main:
; Line 1156
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1157
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	SHORT $LN110@main
; Line 1158
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _fromcpage$[ebp], ecx
; Line 1159
	jmp	SHORT $LN109@main
$LN110@main:
; Line 1160
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN109@main:
	jmp	$LN108@main
$LN112@main:
; Line 1161
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02HLHIEPKM@?9t?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN106@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_09NBDNNJEF@?9?9to?9code?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN107@main
$LN106@main:
; Line 1162
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1163
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	SHORT $LN105@main
; Line 1164
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _tocpage$[ebp], ecx
; Line 1165
	jmp	SHORT $LN104@main
$LN105@main:
; Line 1166
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN104@main:
	jmp	$LN108@main
$LN107@main:
; Line 1167
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02NHMNAAKA@?9x?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN102@main
; Line 1168
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1169
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	SHORT $LN101@main
; Line 1170
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _translit$[ebp], ecx
; Line 1171
	jmp	SHORT $LN100@main
$LN101@main:
; Line 1172
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN100@main:
	jmp	$LN108@main
$LN102@main:
; Line 1173
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0L@MPDLMGEG@?9?9fallback?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN98@main
; Line 1174
	mov	BYTE PTR _fallback$[ebp], 1
	jmp	$LN108@main
$LN98@main:
; Line 1175
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0O@LEIMDCFN@?9?9no?9fallback?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN96@main
; Line 1176
	mov	BYTE PTR _fallback$[ebp], 0
	jmp	$LN108@main
$LN96@main:
; Line 1177
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02GHOAPKHL@?9b?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN93@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0N@BHKJDEMP@?9?9block?9size?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN94@main
$LN93@main:
; Line 1178
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1179
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN92@main
; Line 1180
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _bufsz$[ebp], eax
; Line 1181
	cmp	DWORD PTR _bufsz$[ebp], 0
	jg	$LN91@main
; Line 1182
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1183
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _str$28627[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1184
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1185
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28627[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0N@EEBBNCJI@badBlockSize?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1186
	mov	DWORD PTR $T35558[ebp], 3
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28627[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35558[ebp]
	jmp	$LN121@main
$LN91@main:
; Line 1188
	jmp	SHORT $LN90@main
$LN92@main:
; Line 1189
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN90@main:
; Line 1190
	jmp	$LN108@main
$LN94@main:
; Line 1191
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02PJGDNHPF@?9l?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN87@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_06HAMDCGAL@?9?9list?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN88@main
$LN87@main:
; Line 1192
	movsx	eax, BYTE PTR _printTranslits$[ebp]
	test	eax, eax
	je	SHORT $LN86@main
; Line 1193
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN86@main:
; Line 1195
	mov	BYTE PTR _printConvs$[ebp], 1
	jmp	$LN108@main
$LN88@main:
; Line 1196
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0P@KKGAOHIE@?9?9default?9code?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN84@main
; Line 1197
	movsx	eax, BYTE PTR _printTranslits$[ebp]
	test	eax, eax
	je	SHORT $LN83@main
; Line 1198
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN83@main:
; Line 1200
	call	_ucnv_getDefaultName_56
	mov	DWORD PTR _printName$[ebp], eax
	jmp	$LN108@main
$LN84@main:
; Line 1201
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0M@BPOOJACC@?9?9list?9code?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN81@main
; Line 1202
	movsx	eax, BYTE PTR _printTranslits$[ebp]
	test	eax, eax
	je	SHORT $LN80@main
; Line 1203
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN80@main:
; Line 1206
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1207
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN79@main
; Line 1208
	mov	DWORD PTR _e$28646[ebp], 0
; Line 1209
	lea	eax, DWORD PTR _e$28646[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _iter$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucnv_getAlias_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _printName$[ebp], eax
; Line 1210
	mov	eax, DWORD PTR _e$28646[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN77@main
	cmp	DWORD PTR _printName$[ebp], 0
	jne	$LN78@main
$LN77@main:
; Line 1211
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _str$28649[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 1212
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1213
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28649[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0O@DNOEEPEA@noSuchCodeset?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1214
	mov	DWORD PTR $T35559[ebp], 2
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28649[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35559[ebp]
	jmp	$LN121@main
$LN78@main:
; Line 1216
	jmp	SHORT $LN76@main
$LN79@main:
; Line 1217
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN76@main:
	jmp	$LN108@main
$LN81@main:
; Line 1218
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_07BPPKGGEA@?9?9canon?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN74@main
; Line 1219
	mov	BYTE PTR _printCanon$[ebp], 1
; Line 1220
	jmp	$LN108@main
$LN74@main:
; Line 1221
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02GMOHPDFH@?9L?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN71@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BH@BNGPFDIM@?9?9list?9transliterators?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN72@main
$LN71@main:
; Line 1222
	movsx	eax, BYTE PTR _printConvs$[ebp]
	test	eax, eax
	je	SHORT $LN70@main
; Line 1223
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN70@main:
; Line 1225
	mov	BYTE PTR _printTranslits$[ebp], 1
; Line 1226
	jmp	$LN108@main
$LN72@main:
; Line 1227
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02JNAPBCPB@?9h?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02GIPFNJGC@?9?$DP?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN67@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_06LMIDBODK@?9?9help?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN68@main
$LN67@main:
; Line 1228
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
	jmp	$LN108@main
$LN68@main:
; Line 1229
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02HOPLMLDK@?9c?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN65@main
; Line 1230
	mov	DWORD PTR _fromucallback$[ebp], OFFSET _UCNV_FROM_U_CALLBACK_SKIP_56
	jmp	$LN108@main
$LN65@main:
; Line 1231
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0O@BIDEHCIP@?9?9to?9callback?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN63@main
; Line 1232
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1233
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN62@main
; Line 1234
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?findCallback@@YAPBUcallback_ent@@PBD@Z	; findCallback
	add	esp, 4
	mov	DWORD PTR _cbe$28675[ebp], eax
; Line 1235
	cmp	DWORD PTR _cbe$28675[ebp], 0
	je	SHORT $LN61@main
; Line 1236
	mov	eax, DWORD PTR _cbe$28675[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _fromucallback$[ebp], ecx
; Line 1237
	mov	eax, DWORD PTR _cbe$28675[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fromuctxt$[ebp], ecx
; Line 1238
	jmp	$LN60@main
$LN61@main:
; Line 1239
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _str$28678[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 1240
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1241
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28678[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BA@ILJGANK@unknownCallback?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1242
	mov	DWORD PTR $T35560[ebp], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28678[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35560[ebp]
	jmp	$LN121@main
$LN60@main:
; Line 1244
	jmp	SHORT $LN59@main
$LN62@main:
; Line 1245
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN59@main:
; Line 1246
	jmp	$LN108@main
$LN63@main:
; Line 1247
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BA@EKBHOLMA@?9?9from?9callback?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN57@main
; Line 1248
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1249
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN56@main
; Line 1250
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?findCallback@@YAPBUcallback_ent@@PBD@Z	; findCallback
	add	esp, 4
	mov	DWORD PTR _cbe$28686[ebp], eax
; Line 1251
	cmp	DWORD PTR _cbe$28686[ebp], 0
	je	SHORT $LN55@main
; Line 1252
	mov	eax, DWORD PTR _cbe$28686[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _toucallback$[ebp], ecx
; Line 1253
	mov	eax, DWORD PTR _cbe$28686[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _touctxt$[ebp], ecx
; Line 1254
	jmp	$LN54@main
$LN55@main:
; Line 1255
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _str$28689[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 1256
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1257
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28689[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BA@ILJGANK@unknownCallback?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1258
	mov	DWORD PTR $T35561[ebp], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28689[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35561[ebp]
	jmp	$LN121@main
$LN54@main:
; Line 1260
	jmp	SHORT $LN53@main
$LN56@main:
; Line 1261
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN53@main:
; Line 1262
	jmp	$LN108@main
$LN57@main:
; Line 1263
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02IEBECDLA@?9i?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN51@main
; Line 1264
	mov	DWORD PTR _toucallback$[ebp], OFFSET _UCNV_TO_U_CALLBACK_SKIP_56
	jmp	$LN108@main
$LN51@main:
; Line 1265
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0L@IFKMIDAJ@?9?9callback?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN49@main
; Line 1266
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1267
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	$LN48@main
; Line 1268
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?findCallback@@YAPBUcallback_ent@@PBD@Z	; findCallback
	add	esp, 4
	mov	DWORD PTR _cbe$28699[ebp], eax
; Line 1269
	cmp	DWORD PTR _cbe$28699[ebp], 0
	je	SHORT $LN47@main
; Line 1270
	mov	eax, DWORD PTR _cbe$28699[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _fromucallback$[ebp], ecx
; Line 1271
	mov	eax, DWORD PTR _cbe$28699[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fromuctxt$[ebp], ecx
; Line 1272
	mov	eax, DWORD PTR _cbe$28699[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _toucallback$[ebp], ecx
; Line 1273
	mov	eax, DWORD PTR _cbe$28699[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _touctxt$[ebp], ecx
; Line 1274
	jmp	$LN46@main
$LN47@main:
; Line 1275
	mov	esi, esp
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR _str$28702[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 1276
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1277
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28702[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BA@ILJGANK@unknownCallback?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 1278
	mov	DWORD PTR $T35562[ebp], 4
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28702[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35562[ebp]
	jmp	$LN121@main
$LN46@main:
; Line 1280
	jmp	SHORT $LN45@main
$LN48@main:
; Line 1281
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN45@main:
; Line 1282
	jmp	$LN108@main
$LN49@main:
; Line 1283
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02DEDJNJGL@?9s?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN42@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_08KDGAKKKD@?9?9silent?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN43@main
$LN42@main:
; Line 1284
	mov	BYTE PTR _verbose$[ebp], 0
	jmp	$LN108@main
$LN43@main:
; Line 1285
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02EJEOCNCO@?9v?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN39@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_09OOLJKHBB@?9?9verbose?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN40@main
$LN39@main:
; Line 1286
	mov	BYTE PTR _verbose$[ebp], 1
	jmp	$LN108@main
$LN40@main:
; Line 1287
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02NMMKAJIM@?9V?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN36@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_09GAJKMFCA@?9?9version?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN37@main
$LN36@main:
; Line 1288
	mov	esi, esp
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@CIGJICAA@?$CFs?5v2?41?5?5ICU?556?41?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1289
	mov	DWORD PTR $T35563[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35563[ebp]
	jmp	$LN121@main
	jmp	$LN108@main
$LN37@main:
; Line 1290
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_02NCEOIEDG@?9o?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN33@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_08FACOKJIG@?9?9output?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN34@main
$LN33@main:
; Line 1291
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
; Line 1292
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	je	SHORT $LN32@main
	cmp	DWORD PTR _outfilestr$[ebp], 0
	jne	SHORT $LN32@main
; Line 1293
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _outfilestr$[ebp], ecx
; Line 1294
	jmp	SHORT $LN31@main
$LN32@main:
; Line 1295
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
$LN31@main:
; Line 1296
	jmp	$LN108@main
$LN34@main:
; Line 1297
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BA@PAMDPENA@?9?9add?9signature?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN29@main
; Line 1298
	mov	BYTE PTR _cf$[ebp+16], 1
	jmp	SHORT $LN108@main
$LN29@main:
; Line 1299
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BD@NKEJKBBI@?9?9remove?9signature?$AA@
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN27@main
; Line 1300
	mov	BYTE PTR _cf$[ebp+16], -1
	jmp	SHORT $LN108@main
$LN27@main:
; Line 1301
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN25@main
	mov	eax, DWORD PTR _iter$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx+1]
	test	edx, edx
	je	SHORT $LN25@main
; Line 1302
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?usage@@YAXPBDH@Z			; usage
	add	esp, 8
; Line 1303
	jmp	SHORT $LN108@main
$LN25@main:
; Line 1305
	mov	eax, DWORD PTR _remainArgvLimit$[ebp]
	mov	ecx, DWORD PTR _iter$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _remainArgvLimit$[ebp]
	add	eax, 4
	mov	DWORD PTR _remainArgvLimit$[ebp], eax
$LN108@main:
; Line 1307
	jmp	$LN114@main
$LN113@main:
; Line 1309
	movsx	eax, BYTE PTR _printConvs$[ebp]
	test	eax, eax
	jne	SHORT $LN22@main
	cmp	DWORD PTR _printName$[ebp], 0
	je	SHORT $LN23@main
$LN22@main:
; Line 1310
	movzx	eax, BYTE PTR _printCanon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _printName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pname$[ebp]
	push	edx
	call	?printConverters@@YAHPBD0C@Z		; printConverters
	add	esp, 12					; 0000000cH
	neg	eax
	sbb	eax, eax
	and	eax, 2
	mov	DWORD PTR $T35564[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35564[ebp]
	jmp	$LN121@main
	jmp	SHORT $LN21@main
$LN23@main:
; Line 1311
	movsx	eax, BYTE PTR _printTranslits$[ebp]
	test	eax, eax
	je	SHORT $LN21@main
; Line 1312
	movzx	eax, BYTE PTR _printCanon$[ebp]
	push	eax
	call	?printTransliterators@@YAHC@Z		; printTransliterators
	add	esp, 4
	neg	eax
	sbb	eax, eax
	and	eax, 3
	mov	DWORD PTR $T35565[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35565[ebp]
	jmp	$LN121@main
$LN21@main:
; Line 1315
	cmp	DWORD PTR _fromcpage$[ebp], 0
	je	SHORT $LN18@main
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _fromcpage$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN19@main
$LN18@main:
; Line 1316
	call	_ucnv_getDefaultName_56
	mov	DWORD PTR _fromcpage$[ebp], eax
$LN19@main:
; Line 1318
	cmp	DWORD PTR _tocpage$[ebp], 0
	je	SHORT $LN16@main
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _tocpage$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@main
$LN16@main:
; Line 1319
	call	_ucnv_getDefaultName_56
	mov	DWORD PTR _tocpage$[ebp], eax
$LN17@main:
; Line 1323
	cmp	DWORD PTR _outfilestr$[ebp], 0
	je	$LN15@main
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _outfilestr$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN15@main
; Line 1324
	mov	esi, esp
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	mov	eax, DWORD PTR _outfilestr$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _outfile$[ebp], eax
; Line 1325
	cmp	DWORD PTR _outfile$[ebp], 0
	jne	$LN14@main
; Line 1326
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _outfilestr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str1$28751[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 1327
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	edi, esp
	call	DWORD PTR __imp___errno
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	edi, esp
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp__strerror
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _str2$28752[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 1328
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1330
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28752[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28751[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0BC@FFDCCNFG@cantCreateOutputF?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 1331
	mov	DWORD PTR $T35566[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28752[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28751[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35566[ebp]
	jmp	$LN121@main
$LN14@main:
; Line 1333
	jmp	$LN13@main
$LN15@main:
; Line 1334
	mov	DWORD PTR _outfilestr$[ebp], OFFSET ??_C@_01JOAMLHOP@?9?$AA@
; Line 1335
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	DWORD PTR _outfile$[ebp], eax
; Line 1337
	mov	esi, esp
	push	32768					; 00008000H
	mov	edi, esp
	mov	eax, DWORD PTR _outfile$[ebp]
	push	eax
	call	DWORD PTR __imp___fileno
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp___setmode
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN13@main
; Line 1338
	push	OFFSET ??_C@_0BC@LAHGFELN@cantSetOutBinMode?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 8
; Line 1339
	mov	esi, esp
	push	-1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@main:
; Line 1347
	mov	eax, DWORD PTR _bufsz$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cf$[ebp]
	call	?setBufferSize@ConvertFile@@QAEXI@Z	; ConvertFile::setBufferSize
; Line 1349
	mov	eax, DWORD PTR _remainArgv$[ebp]
	cmp	eax, DWORD PTR _remainArgvLimit$[ebp]
	jae	$LN11@main
; Line 1350
	mov	eax, DWORD PTR _remainArgv$[ebp]
	mov	DWORD PTR _iter$[ebp], eax
	jmp	SHORT $LN10@main
$LN9@main:
	mov	eax, DWORD PTR _iter$[ebp]
	add	eax, 4
	mov	DWORD PTR _iter$[ebp], eax
$LN10@main:
	mov	eax, DWORD PTR _iter$[ebp]
	cmp	eax, DWORD PTR _remainArgvLimit$[ebp]
	je	SHORT $LN8@main
; Line 1355
	movsx	eax, BYTE PTR _verbose$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iter$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _translit$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _fallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _fromuctxt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromucallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _tocpage$[ebp]
	push	edx
	mov	eax, DWORD PTR _touctxt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _toucallback$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromcpage$[ebp]
	push	edx
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cf$[ebp]
	call	?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z ; ConvertFile::convertFile
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN7@main
; Line 1356
	jmp	SHORT $error_exit$28763
$LN7@main:
; Line 1358
	jmp	SHORT $LN9@main
$LN8@main:
; Line 1359
	jmp	SHORT __unwind$_main$2
$LN11@main:
; Line 1364
	movsx	eax, BYTE PTR _verbose$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outfile$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _translit$[ebp]
	push	edx
	movzx	eax, BYTE PTR _fallback$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fromuctxt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fromucallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _tocpage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _touctxt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _toucallback$[ebp]
	push	edx
	mov	eax, DWORD PTR _fromcpage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cf$[ebp]
	call	?convertFile@ConvertFile@@QAECPBD0P6AXPBXPAUUConverterToUnicodeArgs@@0HW4UConverterCallbackReason@@PAW4UErrorCode@@@Z10P6AX1PAUUConverterFromUnicodeArgs@@PB_WHH34@Z1C00PAU_iobuf@@H@Z ; ConvertFile::convertFile
	movsx	edx, al
	test	edx, edx
	jne	SHORT __unwind$_main$2
; Line 1365
	jmp	SHORT $error_exit$28763
__unwind$_main$2:
; Line 1369
	jmp	SHORT $normal_exit$28768
$error_exit$28763:
; Line 1372
	mov	DWORD PTR _ret$[ebp], 1
$normal_exit$28768:
; Line 1378
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	cmp	DWORD PTR _outfile$[ebp], eax
	je	SHORT $LN1@main
; Line 1379
	mov	esi, esp
	mov	eax, DWORD PTR _outfile$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@main:
; Line 1382
	call	_u_cleanup_56
; Line 1384
	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR $T35567[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _cf$[ebp]
	call	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
	mov	eax, DWORD PTR $T35567[ebp]
$LN121@main:
; Line 1385
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN142@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1184				; 000004a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN142@main:
	DD	10					; 0000000aH
	DD	$LN141@main
$LN141@main:
	DD	-288					; fffffee0H
	DD	4
	DD	$LN130@main
	DD	-316					; fffffec4H
	DD	20					; 00000014H
	DD	$LN131@main
	DD	-388					; fffffe7cH
	DD	64					; 00000040H
	DD	$LN132@main
	DD	-400					; fffffe70H
	DD	4
	DD	$LN133@main
	DD	-472					; fffffe28H
	DD	64					; 00000040H
	DD	$LN134@main
	DD	-556					; fffffdd4H
	DD	64					; 00000040H
	DD	$LN135@main
	DD	-640					; fffffd80H
	DD	64					; 00000040H
	DD	$LN136@main
	DD	-724					; fffffd2cH
	DD	64					; 00000040H
	DD	$LN137@main
	DD	-796					; fffffce4H
	DD	64					; 00000040H
	DD	$LN138@main
	DD	-868					; fffffc9cH
	DD	64					; 00000040H
	DD	$LN139@main
$LN139@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN138@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN137@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN136@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN135@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN134@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN133@main:
	DB	101					; 00000065H
	DB	0
$LN132@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN131@main:
	DB	99					; 00000063H
	DB	102					; 00000066H
	DB	0
$LN130@main:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$3:
	lea	ecx, DWORD PTR _cf$[ebp]
	jmp	??1ConvertFile@@QAE@XZ			; ConvertFile::~ConvertFile
__unwindfunclet$_main$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28627[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28649[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28678[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$7:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28689[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$8:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28702[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$9:
	mov	esi, esp
	lea	ecx, DWORD PTR _str1$28751[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$_main$10:
	mov	esi, esp
	lea	ecx, DWORD PTR _str2$28752[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1188]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
EXTRN	__imp__strrchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strrchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strrchr@@YAPADPADH@Z PROC				; strrchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strrchr@@YAPADPADH@Z ENDP				; strrchr
_TEXT	ENDS
EXTRN	_uprv_stricmp_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findCallback@@YAPBUcallback_ent@@PBD@Z
_TEXT	SEGMENT
_count$ = -20						; size = 4
_i$ = -8						; size = 4
_name$ = 8						; size = 4
?findCallback@@YAPBUcallback_ent@@PBD@Z PROC		; findCallback, COMDAT
; File d:\mozilla\intl\icu\source\extra\uconv\uconv.cpp
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	mov	DWORD PTR _count$[ebp], 11		; 0000000bH
; Line 181
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@findCallba
$LN3@findCallba:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@findCallba:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@findCallba
; Line 182
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _transcode_callbacks[eax]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_uprv_stricmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@findCallba
; Line 183
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 20					; 00000014H
	add	eax, OFFSET _transcode_callbacks
	jmp	SHORT $LN5@findCallba
$LN1@findCallba:
; Line 185
	jmp	SHORT $LN3@findCallba
$LN2@findCallba:
; Line 187
	xor	eax, eax
$LN5@findCallba:
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?findCallback@@YAPBUcallback_ent@@PBD@Z ENDP		; findCallback
_TEXT	ENDS
PUBLIC	??_C@_02KCGCGHLG@?5?$HN?$AA@			; `string'
PUBLIC	??_C@_05DKOFKFC@?5?$CFs?$CFs?$AA@		; `string'
PUBLIC	??_C@_01NBENCBCI@?$CK?$AA@			; `string'
PUBLIC	??_C@_02PEDIMADA@?5?$HL?$AA@			; `string'
PUBLIC	??_C@_06DIJPEION@?$CFs?$CFs?$CFs?$AA@		; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_0P@MNBKEIDI@cantGetAliases?$AA@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_01CELHOKLL@?$HN?$AA@			; `string'
PUBLIC	??_C@_03IKGEINEE@?$CFs?5?$AA@			; `string'
PUBLIC	??_C@_02MNJOIFPO@?$HL?5?$AA@			; `string'
PUBLIC	??_C@_0L@CNNBEDKL@cantGetTag?$AA@		; `string'
PUBLIC	??_C@_0N@CFNILKLO@cantGetNames?$AA@		; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_uprv_free_56:PROC
EXTRN	_uenum_next_56:PROC
EXTRN	_ucnv_openStandardNames_56:PROC
EXTRN	__imp__putchar:PROC
EXTRN	_ucnv_countAliases_56:PROC
EXTRN	_ucnv_getAvailableName_56:PROC
EXTRN	__imp__puts:PROC
EXTRN	_ucnv_getStandard_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_ucnv_countStandards_56:PROC
EXTRN	_ucnv_countAvailable_56:PROC
;	COMDAT ??_C@_02KCGCGHLG@?5?$HN?$AA@
CONST	SEGMENT
??_C@_02KCGCGHLG@?5?$HN?$AA@ DB ' }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DKOFKFC@?5?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_05DKOFKFC@?5?$CFs?$CFs?$AA@ DB ' %s%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NBENCBCI@?$CK?$AA@
CONST	SEGMENT
??_C@_01NBENCBCI@?$CK?$AA@ DB '*', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PEDIMADA@?5?$HL?$AA@
CONST	SEGMENT
??_C@_02PEDIMADA@?5?$HL?$AA@ DB ' {', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DIJPEION@?$CFs?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_06DIJPEION@?$CFs?$CFs?$CFs?$AA@ DB '%s%s%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7?$AA@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7?$AA@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MNBKEIDI@cantGetAliases?$AA@
CONST	SEGMENT
??_C@_0P@MNBKEIDI@cantGetAliases?$AA@ DB 'cantGetAliases', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN?$AA@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGEINEE@?$CFs?5?$AA@
CONST	SEGMENT
??_C@_03IKGEINEE@?$CFs?5?$AA@ DB '%s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MNJOIFPO@?$HL?5?$AA@
CONST	SEGMENT
??_C@_02MNJOIFPO@?$HL?5?$AA@ DB '{ ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CNNBEDKL@cantGetTag?$AA@
CONST	SEGMENT
??_C@_0L@CNNBEDKL@cantGetTag?$AA@ DB 'cantGetTag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CFNILKLO@cantGetNames?$AA@
CONST	SEGMENT
??_C@_0N@CFNILKLO@cantGetNames?$AA@ DB 'cantGetNames', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?printConverters@@YAHPBD0C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?printConverters@@YAHPBD0C@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?printConverters@@YAHPBD0C@Z$4
__ehfuncinfo$?printConverters@@YAHPBD0C@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?printConverters@@YAHPBD0C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?printConverters@@YAHPBD0C@Z
_TEXT	SEGMENT
tv233 = -568						; size = 4
tv230 = -564						; size = 4
tv268 = -560						; size = 4
tv225 = -560						; size = 4
_enumError$28176 = -360					; size = 4
_isFirst$28175 = -345					; size = 1
_standardName$28174 = -336				; size = 4
_nameEnum$28172 = -324					; size = 4
_str$28163 = -312					; size = 64
_alias$28161 = -240					; size = 4
_t$28157 = -228						; size = 2
_s$28156 = -216						; size = 2
_a$28155 = -204						; size = 2
_str$28150 = -192					; size = 64
_num_aliases$28145 = -120				; size = 2
_name$28144 = -108					; size = 4
_i$28140 = -96						; size = 4
_s$28127 = -84						; size = 2
_truename$28117 = -72					; size = 4
_stds$ = -60						; size = 4
_num_stds$ = -48					; size = 2
_num$ = -36						; size = 4
_err$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pname$ = 8						; size = 4
_lookfor$ = 12						; size = 4
_canon$ = 16						; size = 1
?printConverters@@YAHPBD0C@Z PROC			; printConverters, COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?printConverters@@YAHPBD0C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 556				; 0000022cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-568]
	mov	ecx, 139				; 0000008bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 198
	mov	DWORD PTR _err$[ebp], 0
; Line 205
	cmp	DWORD PTR _lookfor$[ebp], 0
	je	SHORT $LN42@printConve
; Line 206
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	jne	SHORT $LN41@printConve
; Line 207
	mov	esi, esp
	mov	eax, DWORD PTR _lookfor$[ebp]
	push	eax
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	xor	eax, eax
	jmp	$LN43@printConve
; Line 209
	jmp	SHORT $LN42@printConve
$LN41@printConve:
; Line 219
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lookfor$[ebp]
	push	ecx
	call	_ucnv_getAlias_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _truename$28117[ebp], eax
; Line 220
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@printConve
; Line 221
	mov	eax, DWORD PTR _truename$28117[ebp]
	mov	DWORD PTR _lookfor$[ebp], eax
; Line 222
	jmp	SHORT $LN42@printConve
$LN39@printConve:
; Line 223
	mov	DWORD PTR _err$[ebp], 0
$LN42@printConve:
; Line 233
	call	_ucnv_countAvailable_56
	mov	DWORD PTR _num$[ebp], eax
; Line 234
	cmp	DWORD PTR _num$[ebp], 0
	jg	SHORT $LN37@printConve
; Line 235
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 236
	push	OFFSET ??_C@_0N@CFNILKLO@cantGetNames?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 8
; Line 237
	or	eax, -1
	jmp	$LN43@printConve
$LN37@printConve:
; Line 239
	cmp	DWORD PTR _lookfor$[ebp], 0
	je	SHORT $LN36@printConve
; Line 240
	mov	DWORD PTR _num$[ebp], 1
$LN36@printConve:
; Line 243
	call	_ucnv_countStandards_56
	mov	WORD PTR _num_stds$[ebp], ax
; Line 244
	movzx	eax, WORD PTR _num_stds$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _stds$[ebp], eax
; Line 245
	cmp	DWORD PTR _stds$[ebp], 0
	jne	SHORT $LN35@printConve
; Line 246
	push	7
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0L@CNNBEDKL@cantGetTag?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 247
	or	eax, -1
	jmp	$LN43@printConve
; Line 248
	jmp	$LN34@printConve
$LN35@printConve:
; Line 251
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	SHORT $LN33@printConve
; Line 252
	mov	esi, esp
	push	OFFSET ??_C@_02MNJOIFPO@?$HL?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@printConve:
; Line 254
	xor	eax, eax
	mov	WORD PTR _s$28127[ebp], ax
	jmp	SHORT $LN32@printConve
$LN31@printConve:
	mov	ax, WORD PTR _s$28127[ebp]
	add	ax, 1
	mov	WORD PTR _s$28127[ebp], ax
$LN32@printConve:
	movzx	eax, WORD PTR _s$28127[ebp]
	movzx	ecx, WORD PTR _num_stds$[ebp]
	cmp	eax, ecx
	jge	$LN30@printConve
; Line 255
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	movzx	ecx, WORD PTR _s$28127[ebp]
	push	ecx
	call	_ucnv_getStandard_56
	add	esp, 8
	movzx	edx, WORD PTR _s$28127[ebp]
	mov	ecx, DWORD PTR _stds$[ebp]
	mov	DWORD PTR [ecx+edx*4], eax
; Line 256
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	SHORT $LN29@printConve
; Line 257
	movzx	eax, WORD PTR _s$28127[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR _stds$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_03IKGEINEE@?$CFs?5?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN29@printConve:
; Line 259
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN28@printConve
; Line 260
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	push	OFFSET ??_C@_0L@CNNBEDKL@cantGetTag?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 12					; 0000000cH
; Line 261
	jmp	$error_cleanup$28136
$LN28@printConve:
; Line 263
	jmp	$LN31@printConve
$LN30@printConve:
; Line 264
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	SHORT $LN34@printConve
; Line 265
	mov	esi, esp
	push	OFFSET ??_C@_01CELHOKLL@?$HN?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@printConve:
; Line 269
	mov	DWORD PTR _i$28140[ebp], 0
	jmp	SHORT $LN25@printConve
$LN24@printConve:
	mov	eax, DWORD PTR _i$28140[ebp]
	add	eax, 1
	mov	DWORD PTR _i$28140[ebp], eax
$LN25@printConve:
	mov	eax, DWORD PTR _i$28140[ebp]
	cmp	eax, DWORD PTR _num$[ebp]
	jge	$LN23@printConve
; Line 276
	cmp	DWORD PTR _lookfor$[ebp], 0
	je	SHORT $LN22@printConve
; Line 277
	mov	eax, DWORD PTR _lookfor$[ebp]
	mov	DWORD PTR _name$28144[ebp], eax
; Line 278
	jmp	SHORT $LN21@printConve
$LN22@printConve:
; Line 279
	mov	eax, DWORD PTR _i$28140[ebp]
	push	eax
	call	_ucnv_getAvailableName_56
	add	esp, 4
	mov	DWORD PTR _name$28144[ebp], eax
$LN21@printConve:
; Line 284
	mov	DWORD PTR _err$[ebp], 0
; Line 285
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$28144[ebp]
	push	ecx
	call	_ucnv_countAliases_56
	add	esp, 8
	mov	WORD PTR _num_aliases$28145[ebp], ax
; Line 286
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN20@printConve
; Line 287
	mov	esi, esp
	mov	eax, DWORD PTR _name$28144[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _name$28144[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$28150[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 290
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 292
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28150[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0P@MNBKEIDI@cantGetAliases?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 365
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28150[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 293
	jmp	$error_cleanup$28136
; Line 294
	jmp	$LN18@printConve
$LN20@printConve:
; Line 299
	xor	eax, eax
	mov	WORD PTR _a$28155[ebp], ax
	jmp	SHORT $LN17@printConve
$LN16@printConve:
	mov	ax, WORD PTR _a$28155[ebp]
	add	ax, 1
	mov	WORD PTR _a$28155[ebp], ax
$LN17@printConve:
	movzx	eax, WORD PTR _a$28155[ebp]
	movzx	ecx, WORD PTR _num_aliases$28145[ebp]
	cmp	eax, ecx
	jge	$LN15@printConve
; Line 300
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	movzx	ecx, WORD PTR _a$28155[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$28144[ebp]
	push	edx
	call	_ucnv_getAlias_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _alias$28161[ebp], eax
; Line 302
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN14@printConve
; Line 303
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _name$28144[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$28163[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 304
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 306
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	_u_wmsg_errorName
	add	esp, 4
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28163[ebp]
	call	DWORD PTR __imp_?getTerminatedBuffer@UnicodeString@icu_56@@QAEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0P@MNBKEIDI@cantGetAliases?$AA@
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
; Line 365
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28163[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 307
	jmp	$error_cleanup$28136
$LN14@printConve:
; Line 313
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	SHORT $LN45@printConve
	mov	DWORD PTR tv225[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN46@printConve
$LN45@printConve:
	mov	DWORD PTR tv225[ebp], OFFSET ??_C@_01CLKCMJKC@?5?$AA@
$LN46@printConve:
	movsx	ecx, BYTE PTR _canon$[ebp]
	test	ecx, ecx
	je	SHORT $LN49@printConve
	movzx	edx, WORD PTR _a$28155[ebp]
	test	edx, edx
	jne	SHORT $LN47@printConve
	mov	DWORD PTR tv230[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN48@printConve
$LN47@printConve:
	mov	DWORD PTR tv230[ebp], OFFSET ??_C@_01GPOEFGEJ@?7?$AA@
$LN48@printConve:
	mov	eax, DWORD PTR tv230[ebp]
	mov	DWORD PTR tv233[ebp], eax
	jmp	SHORT $LN50@printConve
$LN49@printConve:
	mov	DWORD PTR tv233[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN50@printConve:
	mov	esi, esp
	mov	ecx, DWORD PTR tv225[ebp]
	push	ecx
	mov	edx, DWORD PTR _alias$28161[ebp]
	push	edx
	mov	eax, DWORD PTR tv233[ebp]
	push	eax
	push	OFFSET ??_C@_06DIJPEION@?$CFs?$CFs?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 317
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	$LN12@printConve
; Line 319
	xor	eax, eax
	mov	WORD PTR _t$28157[ebp], ax
	mov	cx, WORD PTR _t$28157[ebp]
	mov	WORD PTR _s$28156[ebp], cx
	jmp	SHORT $LN11@printConve
$LN10@printConve:
	mov	ax, WORD PTR _s$28156[ebp]
	add	ax, 1
	mov	WORD PTR _s$28156[ebp], ax
$LN11@printConve:
	movzx	eax, WORD PTR _s$28156[ebp]
	movzx	ecx, WORD PTR _num_stds$[ebp]
	sub	ecx, 1
	cmp	eax, ecx
	jge	$LN9@printConve
; Line 320
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	movzx	ecx, WORD PTR _s$28156[ebp]
	mov	edx, DWORD PTR _stds$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _name$28144[ebp]
	push	ecx
	call	_ucnv_openStandardNames_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nameEnum$28172[ebp], eax
; Line 321
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	$LN8@printConve
; Line 324
	mov	BYTE PTR _isFirst$28175[ebp], 1
; Line 325
	mov	DWORD PTR _enumError$28176[ebp], 0
$LN7@printConve:
; Line 326
	lea	eax, DWORD PTR _enumError$28176[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _nameEnum$28172[ebp]
	push	ecx
	call	_uenum_next_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _standardName$28174[ebp], eax
	cmp	DWORD PTR _standardName$28174[ebp], 0
	je	$LN8@printConve
; Line 328
	mov	eax, DWORD PTR _alias$28161[ebp]
	push	eax
	mov	ecx, DWORD PTR _standardName$28174[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@printConve
; Line 329
	movzx	eax, WORD PTR _t$28157[ebp]
	test	eax, eax
	jne	SHORT $LN4@printConve
; Line 330
	mov	esi, esp
	push	OFFSET ??_C@_02PEDIMADA@?5?$HL?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 331
	mov	eax, 1
	mov	WORD PTR _t$28157[ebp], ax
$LN4@printConve:
; Line 334
	movsx	eax, BYTE PTR _isFirst$28175[ebp]
	test	eax, eax
	je	SHORT $LN51@printConve
	mov	DWORD PTR tv268[ebp], OFFSET ??_C@_01NBENCBCI@?$CK?$AA@
	jmp	SHORT $LN52@printConve
$LN51@printConve:
	mov	DWORD PTR tv268[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN52@printConve:
	mov	esi, esp
	mov	ecx, DWORD PTR tv268[ebp]
	push	ecx
	movzx	edx, WORD PTR _s$28156[ebp]
	mov	eax, DWORD PTR _stds$[ebp]
	mov	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	push	OFFSET ??_C@_05DKOFKFC@?5?$CFs?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@printConve:
; Line 336
	mov	BYTE PTR _isFirst$28175[ebp], 0
; Line 337
	jmp	$LN7@printConve
$LN8@printConve:
; Line 339
	jmp	$LN10@printConve
$LN9@printConve:
; Line 340
	movzx	eax, WORD PTR _t$28157[ebp]
	test	eax, eax
	je	SHORT $LN12@printConve
; Line 341
	mov	esi, esp
	push	OFFSET ??_C@_02KCGCGHLG@?5?$HN?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@printConve:
; Line 345
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	je	SHORT $LN2@printConve
; Line 346
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@printConve:
; Line 350
	jmp	$LN16@printConve
$LN15@printConve:
; Line 352
	movsx	eax, BYTE PTR _canon$[ebp]
	test	eax, eax
	jne	SHORT $LN18@printConve
; Line 353
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@printConve:
; Line 356
	jmp	$LN24@printConve
$LN23@printConve:
; Line 360
	mov	eax, DWORD PTR _stds$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 364
	xor	eax, eax
	jmp	SHORT $LN43@printConve
$error_cleanup$28136:
; Line 366
	mov	eax, DWORD PTR _stds$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 367
	or	eax, -1
$LN43@printConve:
; Line 368
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN61@printConve
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 568				; 00000238H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN61@printConve:
	DD	4
	DD	$LN60@printConve
$LN60@printConve:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN55@printConve
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN56@printConve
	DD	-312					; fffffec8H
	DD	64					; 00000040H
	DD	$LN57@printConve
	DD	-360					; fffffe98H
	DD	4
	DD	$LN58@printConve
$LN58@printConve:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN57@printConve:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN56@printConve:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN55@printConve:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?printConverters@@YAHPBD0C@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28150[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?printConverters@@YAHPBD0C@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _str$28163[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?printConverters@@YAHPBD0C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-572]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?printConverters@@YAHPBD0C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?printConverters@@YAHPBD0C@Z ENDP			; printConverters
EXTRN	_uenum_close_56:PROC
EXTRN	_uenum_count_56:PROC
EXTRN	_utrans_openIDs_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?printTransliterators@@YAHC@Z
_TEXT	SEGMENT
_nextTrans$28200 = -80					; size = 4
_len$28199 = -68					; size = 4
_sepchar$ = -53						; size = 1
_numtrans$ = -44					; size = 4
_i$ = -32						; size = 4
_ids$ = -20						; size = 4
_status$ = -8						; size = 4
_canon$ = 8						; size = 1
?printTransliterators@@YAHC@Z PROC			; printTransliterators, COMDAT
; Line 374
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 379
	mov	DWORD PTR _status$[ebp], 0
; Line 380
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_utrans_openIDs_56
	add	esp, 4
	mov	DWORD PTR _ids$[ebp], eax
; Line 381
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ids$[ebp]
	push	ecx
	call	_uenum_count_56
	add	esp, 8
	mov	DWORD PTR _numtrans$[ebp], eax
; Line 383
	movsx	eax, BYTE PTR _canon$[ebp]
	neg	eax
	sbb	al, al
	and	al, -22					; ffffffeaH
	add	al, 32					; 00000020H
	mov	BYTE PTR _sepchar$[ebp], al
; Line 385
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@printTrans
$LN4@printTrans:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@printTrans:
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@printTrans
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numtrans$[ebp]
	jge	SHORT $LN3@printTrans
; Line 387
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$28199[ebp]
	push	ecx
	mov	edx, DWORD PTR _ids$[ebp]
	push	edx
	call	_uenum_next_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nextTrans$28200[ebp], eax
; Line 389
	mov	esi, esp
	mov	eax, DWORD PTR _nextTrans$28200[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 390
	mov	eax, DWORD PTR _numtrans$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@printTrans
; Line 391
	movsx	eax, BYTE PTR _sepchar$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@printTrans:
; Line 393
	jmp	SHORT $LN4@printTrans
$LN3@printTrans:
; Line 395
	mov	eax, DWORD PTR _ids$[ebp]
	push	eax
	call	_uenum_close_56
	add	esp, 4
; Line 399
	movsx	eax, BYTE PTR _sepchar$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN1@printTrans
; Line 400
	mov	esi, esp
	push	10					; 0000000aH
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@printTrans:
; Line 405
	xor	eax, eax
; Line 407
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@printTrans
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@printTrans:
	DD	2
	DD	$LN10@printTrans
$LN10@printTrans:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@printTrans
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN9@printTrans
$LN9@printTrans:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN8@printTrans:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
?printTransliterators@@YAHC@Z ENDP			; printTransliterators
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0ConvertFile@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0ConvertFile@@QAE@XZ PROC				; ConvertFile::ConvertFile, COMDAT
; _this$ = ecx
; Line 536
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+16], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0ConvertFile@@QAE@XZ ENDP				; ConvertFile::ConvertFile
_TEXT	ENDS
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setBufferSize@ConvertFile@@QAEXI@Z
_TEXT	SEGMENT
$T35633 = -224						; size = 4
$T35634 = -212						; size = 4
_this$ = -8						; size = 4
_bufferSize$ = 8					; size = 4
?setBufferSize@ConvertFile@@QAEXI@Z PROC		; ConvertFile::setBufferSize, COMDAT
; _this$ = ecx
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _bufferSize$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 542
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T35633[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T35633[ebp]
	mov	DWORD PTR [edx], eax
; Line 543
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 546
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	add	eax, 1
	xor	ecx, ecx
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T35634[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T35634[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 547
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setBufferSize@ConvertFile@@QAEXI@Z ENDP		; ConvertFile::setBufferSize
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConvertFile@@QAE@XZ
_TEXT	SEGMENT
$T35637 = -224						; size = 4
$T35638 = -212						; size = 4
_this$ = -8						; size = 4
??1ConvertFile@@QAE@XZ PROC				; ConvertFile::~ConvertFile, COMDAT
; _this$ = ecx
; Line 549
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 550
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T35637[ebp], ecx
	mov	edx, DWORD PTR $T35637[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 551
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR $T35638[ebp], ecx
	mov	edx, DWORD PTR $T35638[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 552
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConvertFile@@QAE@XZ ENDP				; ConvertFile::~ConvertFile
_TEXT	ENDS
PUBLIC	??_C@_03EEBNCBOD@?5?$CFs?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	??_C@_05HNCIIKBA@usage?$AA@			; `string'
PUBLIC	??_C@_0M@NCBNCHOF@ucUsageWord?$AA@		; `string'
PUBLIC	??_C@_0M@EDKMPAII@lcUsageWord?$AA@		; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__fputc:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDH@Z:PROC
EXTRN	_strlen:PROC
EXTRN	_ures_getStringByKey_56:PROC
;	COMDAT ??_C@_03EEBNCBOD@?5?$CFs?$AA@
CONST	SEGMENT
??_C@_03EEBNCBOD@?5?$CFs?$AA@ DB ' %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HNCIIKBA@usage?$AA@
CONST	SEGMENT
??_C@_05HNCIIKBA@usage?$AA@ DB 'usage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NCBNCHOF@ucUsageWord?$AA@
CONST	SEGMENT
??_C@_0M@NCBNCHOF@ucUsageWord?$AA@ DB 'ucUsageWord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EDKMPAII@lcUsageWord?$AA@
CONST	SEGMENT
??_C@_0M@EDKMPAII@lcUsageWord?$AA@ DB 'lcUsageWord', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?usage@@YAXPBDH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?usage@@YAXPBDH@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?usage@@YAXPBDH@Z$1
__ehfuncinfo$?usage@@YAXPBDH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?usage@@YAXPBDH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?usage@@YAXPBDH@Z
_TEXT	SEGMENT
tv75 = -440						; size = 4
tv69 = -440						; size = 4
_count$28554 = -240					; size = 4
_i$28553 = -228						; size = 4
_mname$ = -216						; size = 64
_upname$ = -144						; size = 64
_res$ = -72						; size = 4
_fp$ = -60						; size = 4
_err$ = -48						; size = 4
_msgLen$ = -36						; size = 4
_msg$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pname$ = 8						; size = 4
_ecode$ = 12						; size = 4
?usage@@YAXPBDH@Z PROC					; usage, COMDAT
; Line 1062
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?usage@@YAXPBDH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 1065
	mov	DWORD PTR _err$[ebp], 0
; Line 1066
	cmp	DWORD PTR _ecode$[ebp], 0
	je	SHORT $LN9@usage
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN10@usage
$LN9@usage:
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv69[ebp], eax
$LN10@usage:
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _fp$[ebp], eax
; Line 1069
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?initMsg@@YAXPBD@Z			; initMsg
	add	esp, 4
; Line 1072
	cmp	DWORD PTR _ecode$[ebp], 0
	je	SHORT $LN11@usage
	mov	DWORD PTR tv75[ebp], OFFSET ??_C@_0M@EDKMPAII@lcUsageWord?$AA@
	jmp	SHORT $LN12@usage
$LN11@usage:
	mov	DWORD PTR tv75[ebp], OFFSET ??_C@_0M@NCBNCHOF@ucUsageWord?$AA@
$LN12@usage:
	lea	eax, DWORD PTR _err$[ebp]
	push	eax
	lea	ecx, DWORD PTR _msgLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR _gBundle
	push	eax
	call	_ures_getStringByKey_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _msg$[ebp], eax
; Line 1073
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pname$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _upname$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1074
	mov	eax, DWORD PTR _msgLen$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mname$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 1076
	mov	esi, esp
	lea	ecx, DWORD PTR _upname$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _mname$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_05HNCIIKBA@usage?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_u_wmsg
	add	esp, 16					; 00000010H
	mov	DWORD PTR _res$[ebp], eax
; Line 1077
	cmp	DWORD PTR _ecode$[ebp], 0
	jne	$LN6@usage
; Line 1078
	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN5@usage
; Line 1079
	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@usage:
; Line 1081
	push	OFFSET ??_C@_04PCJFHION@help?$AA@
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_u_wmsg
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@usage
; Line 1085
	mov	DWORD PTR _count$28554[ebp], 11		; 0000000bH
; Line 1086
	mov	DWORD PTR _i$28553[ebp], 0
	jmp	SHORT $LN3@usage
$LN2@usage:
	mov	eax, DWORD PTR _i$28553[ebp]
	add	eax, 1
	mov	DWORD PTR _i$28553[ebp], eax
$LN3@usage:
	mov	eax, DWORD PTR _i$28553[ebp]
	cmp	eax, DWORD PTR _count$28554[ebp]
	jge	SHORT $LN1@usage
; Line 1087
	mov	eax, DWORD PTR _i$28553[ebp]
	imul	eax, 20					; 00000014H
	mov	esi, esp
	mov	ecx, DWORD PTR _transcode_callbacks[eax]
	push	ecx
	push	OFFSET ??_C@_03EEBNCBOD@?5?$CFs?$AA@
	mov	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1088
	jmp	SHORT $LN2@usage
$LN1@usage:
; Line 1089
	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	10					; 0000000aH
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@usage:
; Line 1093
	mov	esi, esp
	mov	eax, DWORD PTR _ecode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1094
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _mname$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _upname$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@usage:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@usage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@usage:
	DD	4
	DD	$LN20@usage
$LN20@usage:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN15@usage
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN16@usage
	DD	-144					; ffffff70H
	DD	64					; 00000040H
	DD	$LN17@usage
	DD	-216					; ffffff28H
	DD	64					; 00000040H
	DD	$LN18@usage
$LN18@usage:
	DB	109					; 0000006dH
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN17@usage:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN16@usage:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN15@usage:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?usage@@YAXPBDH@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _upname$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?usage@@YAXPBDH@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _mname$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?usage@@YAXPBDH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?usage@@YAXPBDH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?usage@@YAXPBDH@Z ENDP					; usage
END

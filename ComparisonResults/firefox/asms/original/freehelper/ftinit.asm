; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftinit.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

EXTRN	_autofit_module_class:BYTE
EXTRN	_tt_driver_class:BYTE
EXTRN	_t1_driver_class:BYTE
EXTRN	_cff_driver_class:BYTE
EXTRN	_t1cid_driver_class:BYTE
EXTRN	_pfr_driver_class:BYTE
EXTRN	_t42_driver_class:BYTE
EXTRN	_winfnt_driver_class:BYTE
EXTRN	_pcf_driver_class:BYTE
EXTRN	_psaux_module_class:BYTE
EXTRN	_psnames_module_class:BYTE
EXTRN	_pshinter_module_class:BYTE
EXTRN	_ft_raster1_renderer_class:BYTE
EXTRN	_sfnt_module_class:BYTE
EXTRN	_ft_smooth_renderer_class:BYTE
EXTRN	_ft_smooth_lcd_renderer_class:BYTE
EXTRN	_ft_smooth_lcdv_renderer_class:BYTE
EXTRN	_bdf_driver_class:BYTE
_DATA	SEGMENT
$SG7016	DB	'FT_Add_Default_Module: Cannot install `%s'', error = 0x%'
	DB	'x', 0aH, 00H
	ORG $+2
$SG7023	DB	'FT_Init_FreeType: cannot find memory manager', 0aH, 00H
	ORG $+2
$SG7024	DB	'..\..\..\src\base\ftinit.c', 00H
	ORG $+1
$SG7032	DB	'..\..\..\src\base\ftinit.c', 00H
_DATA	ENDS
CONST	SEGMENT
_ft_default_modules DD FLAT:_autofit_module_class
	DD	FLAT:_tt_driver_class
	DD	FLAT:_t1_driver_class
	DD	FLAT:_cff_driver_class
	DD	FLAT:_t1cid_driver_class
	DD	FLAT:_pfr_driver_class
	DD	FLAT:_t42_driver_class
	DD	FLAT:_winfnt_driver_class
	DD	FLAT:_pcf_driver_class
	DD	FLAT:_psaux_module_class
	DD	FLAT:_psnames_module_class
	DD	FLAT:_pshinter_module_class
	DD	FLAT:_ft_raster1_renderer_class
	DD	FLAT:_sfnt_module_class
	DD	FLAT:_ft_smooth_renderer_class
	DD	FLAT:_ft_smooth_lcd_renderer_class
	DD	FLAT:_ft_smooth_lcdv_renderer_class
	DD	FLAT:_bdf_driver_class
	DD	00H
CONST	ENDS
PUBLIC	_FT_Init_FreeType
PUBLIC	_FT_Done_FreeType
PUBLIC	_FT_Add_Default_Modules
EXTRN	_FT_Add_Module:PROC
EXTRN	_FT_New_Library:PROC
EXTRN	_FT_Done_Library:PROC
EXTRN	_FT_New_Memory:PROC
EXTRN	_FT_Done_Memory:PROC
EXTRN	_FT_Message:PROC
EXTRN	_FT_Throw:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_ft_trace_levels:BYTE
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_cur$ = -8						; size = 4
_error$ = -4						; size = 4
_library$ = 8						; size = 4
_FT_Add_Default_Modules PROC
; File d:\mozilla\modules\freetype2\src\base\ftinit.c
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 213
	mov	DWORD PTR _cur$[ebp], OFFSET _ft_default_modules
$LN7@FT_Add_Def:
; Line 216
	mov	eax, DWORD PTR _cur$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN8@FT_Add_Def
; Line 218
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _library$[ebp]
	push	eax
	call	_FT_Add_Module
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 220
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN5@FT_Add_Def
$LN4@FT_Add_Def:
; Line 223
	mov	ecx, 4
	imul	edx, ecx, 6
	cmp	DWORD PTR _ft_trace_levels[edx], 0
	jl	SHORT $LN3@FT_Add_Def
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cur$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	push	OFFSET $SG7016
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN3@FT_Add_Def:
	xor	ecx, ecx
	jne	SHORT $LN4@FT_Add_Def
$LN5@FT_Add_Def:
; Line 224
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 4
	mov	DWORD PTR _cur$[ebp], edx
; Line 225
	jmp	SHORT $LN7@FT_Add_Def
$LN8@FT_Add_Def:
; Line 226
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Add_Default_Modules ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_library$ = 8						; size = 4
_FT_Done_FreeType PROC
; File d:\mozilla\modules\freetype2\src\base\ftinit.c
; Line 267
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 271
	cmp	DWORD PTR _library$[ebp], 0
	jne	SHORT $LN1@FT_Done_Fr
; Line 272
	push	OFFSET $SG7032
	push	272					; 00000110H
	push	33					; 00000021H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 33					; 00000021H
	jmp	SHORT $LN2@FT_Done_Fr
$LN1@FT_Done_Fr:
; Line 274
	mov	eax, DWORD PTR _library$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 277
	mov	edx, DWORD PTR _library$[ebp]
	push	edx
	call	_FT_Done_Library
	add	esp, 4
; Line 280
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_FT_Done_Memory
	add	esp, 4
; Line 282
	xor	eax, eax
$LN2@FT_Done_Fr:
; Line 283
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Done_FreeType ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -8						; size = 4
_error$ = -4						; size = 4
_alibrary$ = 8						; size = 4
_FT_Init_FreeType PROC
; File d:\mozilla\modules\freetype2\src\base\ftinit.c
; Line 233
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 243
	call	_FT_New_Memory
	mov	DWORD PTR _memory$[ebp], eax
; Line 244
	cmp	DWORD PTR _memory$[ebp], 0
	jne	SHORT $LN3@FT_Init_Fr
; Line 246
	push	OFFSET $SG7023
	call	_FT_Message
	add	esp, 4
; Line 247
	push	OFFSET $SG7024
	push	247					; 000000f7H
	push	7
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 7
	jmp	SHORT $LN4@FT_Init_Fr
$LN3@FT_Init_Fr:
; Line 253
	mov	eax, DWORD PTR _alibrary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_FT_New_Library
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 254
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@FT_Init_Fr
; Line 255
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_FT_Done_Memory
	add	esp, 4
; Line 256
	jmp	SHORT $LN1@FT_Init_Fr
$LN2@FT_Init_Fr:
; Line 257
	mov	eax, DWORD PTR _alibrary$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_FT_Add_Default_Modules
	add	esp, 4
$LN1@FT_Init_Fr:
; Line 259
	mov	eax, DWORD PTR _error$[ebp]
$LN4@FT_Init_Fr:
; Line 260
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Init_FreeType ENDP
_TEXT	ENDS
END

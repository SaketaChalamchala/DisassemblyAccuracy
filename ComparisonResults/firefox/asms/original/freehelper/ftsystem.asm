; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftsystem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7177	DB	'..\..\..\src\base\ftsystem.c', 00H
	ORG $+3
$SG7182	DB	'rb', 00H
	ORG $+1
$SG7184	DB	'FT_Stream_Open: could not open `%s''', 0aH, 00H
	ORG $+3
$SG7185	DB	'..\..\..\src\base\ftsystem.c', 00H
	ORG $+3
$SG7187	DB	'FT_Stream_Open:', 00H
$SG7188	DB	' opened `%s'' but zero-sized', 0aH, 00H
	ORG $+3
$SG7189	DB	'..\..\..\src\base\ftsystem.c', 00H
	ORG $+3
$SG7194	DB	'FT_Stream_Open:', 00H
$SG7199	DB	' opened `%s'' (%d bytes) successfully', 0aH, 00H
_DATA	ENDS
PUBLIC	_FT_New_Memory
PUBLIC	_FT_Done_Memory
PUBLIC	_FT_Stream_Open
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__realloc:PROC
EXTRN	_FT_Message:PROC
EXTRN	_FT_Throw:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_ft_trace_levels:BYTE
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_file$ = -4						; size = 4
_stream$ = 8						; size = 4
_offset$ = 12						; size = 4
_buffer$ = 16						; size = 4
_count$ = 20						; size = 4
_ft_ansi_stream_io PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 205
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 209
	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN2@ft_ansi_st
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR _offset$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	SHORT $LN2@ft_ansi_st
; Line 210
	mov	eax, 1
	jmp	SHORT $LN3@ft_ansi_st
$LN2@ft_ansi_st:
; Line 212
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _file$[ebp], eax
; Line 214
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR _offset$[ebp]
	je	SHORT $LN1@ft_ansi_st
; Line 215
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ft_ansi_st:
; Line 217
	mov	esi, esp
	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	mov	eax, DWORD PTR _count$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ft_ansi_st:
; Line 218
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_ansi_stream_io ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_stream$ = 8						; size = 4
_ft_ansi_stream_close PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 169
	push	ebp
	mov	ebp, esp
	push	esi
; Line 170
	mov	esi, esp
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 173
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 174
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 175
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ft_ansi_stream_close ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = 8						; size = 4
_block$ = 12						; size = 4
_ft_free PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 127
	push	ebp
	mov	ebp, esp
	push	esi
; Line 128
	mov	eax, DWORD PTR _memory$[ebp]
	mov	DWORD PTR _memory$[ebp], eax
; Line 130
	mov	esi, esp
	mov	ecx, DWORD PTR _block$[ebp]
	push	ecx
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ft_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = 8						; size = 4
_cur_size$ = 12						; size = 4
_new_size$ = 16						; size = 4
_block$ = 20						; size = 4
_ft_realloc PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 103
	push	ebp
	mov	ebp, esp
	push	esi
; Line 104
	mov	eax, DWORD PTR _memory$[ebp]
	mov	DWORD PTR _memory$[ebp], eax
; Line 105
	mov	ecx, DWORD PTR _cur_size$[ebp]
	mov	DWORD PTR _cur_size$[ebp], ecx
; Line 107
	mov	esi, esp
	mov	edx, DWORD PTR _new_size$[ebp]
	push	edx
	mov	eax, DWORD PTR _block$[ebp]
	push	eax
	call	DWORD PTR __imp__realloc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 108
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ft_realloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = 8						; size = 4
_size$ = 12						; size = 4
_ft_alloc PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 71
	push	ebp
	mov	ebp, esp
	push	esi
; Line 72
	mov	eax, DWORD PTR _memory$[ebp]
	mov	DWORD PTR _memory$[ebp], eax
; Line 74
	mov	esi, esp
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 75
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ft_alloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_file$ = -4						; size = 4
_stream$ = 8						; size = 4
_filepathname$ = 12					; size = 4
_FT_Stream_Open PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 226
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 230
	cmp	DWORD PTR _stream$[ebp], 0
	jne	SHORT $LN11@FT_Stream_
; Line 231
	push	OFFSET $SG7177
	push	231					; 000000e7H
	push	40					; 00000028H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 40					; 00000028H
	jmp	$LN12@FT_Stream_
$LN11@FT_Stream_:
; Line 233
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 234
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR _filepathname$[ebp]
	mov	DWORD PTR [ecx+16], edx
; Line 235
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax], 0
; Line 236
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 237
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx+20], 0
; Line 238
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 240
	mov	esi, esp
	push	OFFSET $SG7182
	mov	ecx, DWORD PTR _filepathname$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _file$[ebp], eax
; Line 241
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN10@FT_Stream_
; Line 244
	mov	edx, DWORD PTR _filepathname$[ebp]
	push	edx
	push	OFFSET $SG7184
	call	_FT_Message
	add	esp, 8
; Line 246
	push	OFFSET $SG7185
	push	246					; 000000f6H
	push	1
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 1
	jmp	$LN12@FT_Stream_
$LN10@FT_Stream_:
; Line 249
	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	mov	esi, esp
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	DWORD PTR __imp__ftell
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 251
	mov	eax, DWORD PTR _stream$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN9@FT_Stream_
; Line 253
	push	OFFSET $SG7187
	call	_FT_Message
	add	esp, 4
; Line 254
	mov	ecx, DWORD PTR _filepathname$[ebp]
	push	ecx
	push	OFFSET $SG7188
	call	_FT_Message
	add	esp, 8
; Line 255
	mov	esi, esp
	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 256
	push	OFFSET $SG7189
	push	256					; 00000100H
	push	81					; 00000051H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 81					; 00000051H
	jmp	$LN12@FT_Stream_
$LN9@FT_Stream_:
; Line 258
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 260
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	edx, DWORD PTR _file$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 261
	mov	eax, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [eax+20], OFFSET _ft_ansi_stream_io
; Line 262
	mov	ecx, DWORD PTR _stream$[ebp]
	mov	DWORD PTR [ecx+24], OFFSET _ft_ansi_stream_close
$LN8@FT_Stream_:
; Line 264
	mov	edx, 4
	shl	edx, 2
	cmp	DWORD PTR _ft_trace_levels[edx], 1
	jl	SHORT $LN7@FT_Stream_
	push	OFFSET $SG7194
	call	_FT_Message
	add	esp, 4
$LN7@FT_Stream_:
	xor	eax, eax
	jne	SHORT $LN8@FT_Stream_
$LN4@FT_Stream_:
; Line 266
	mov	ecx, 4
	shl	ecx, 2
	cmp	DWORD PTR _ft_trace_levels[ecx], 1
	jl	SHORT $LN3@FT_Stream_
	mov	edx, DWORD PTR _stream$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _filepathname$[ebp]
	push	ecx
	push	OFFSET $SG7199
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN3@FT_Stream_:
	xor	edx, edx
	jne	SHORT $LN4@FT_Stream_
; Line 268
	xor	eax, eax
$LN12@FT_Stream_:
; Line 269
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Stream_Open ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = 8						; size = 4
_FT_Done_Memory PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 312
	push	ebp
	mov	ebp, esp
	push	esi
; Line 316
	mov	esi, esp
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 317
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_FT_Done_Memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_FT_New_Memory PROC
; File d:\mozilla\modules\freetype2\src\base\ftsystem.c
; Line 288
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 292
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__malloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _memory$[ebp], eax
; Line 293
	cmp	DWORD PTR _memory$[ebp], 0
	je	SHORT $LN1@FT_New_Mem
; Line 295
	mov	eax, DWORD PTR _memory$[ebp]
	mov	DWORD PTR [eax], 0
; Line 296
	mov	ecx, DWORD PTR _memory$[ebp]
	mov	DWORD PTR [ecx+4], OFFSET _ft_alloc
; Line 297
	mov	edx, DWORD PTR _memory$[ebp]
	mov	DWORD PTR [edx+12], OFFSET _ft_realloc
; Line 298
	mov	eax, DWORD PTR _memory$[ebp]
	mov	DWORD PTR [eax+8], OFFSET _ft_free
$LN1@FT_New_Mem:
; Line 304
	mov	eax, DWORD PTR _memory$[ebp]
; Line 305
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_New_Memory ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftpfr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7053	DB	'pfr-metrics', 00H
$SG7073	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7083	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7096	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7098	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7111	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7113	DB	'..\..\..\src\base\ftpfr.c', 00H
	ORG $+2
$SG7116	DB	'..\..\..\src\base\ftpfr.c', 00H
_DATA	ENDS
PUBLIC	_FT_Get_PFR_Metrics
PUBLIC	_FT_Get_PFR_Kerning
PUBLIC	_FT_Get_PFR_Advance
EXTRN	_FT_Get_Kerning:PROC
EXTRN	_FT_Throw:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -20						; size = 4
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_svc$3 = -8						; size = 4
_service$ = -4						; size = 4
_face$ = 8						; size = 4
_ft_pfr_check PROC
; File d:\mozilla\modules\freetype2\src\base\ftpfr.c
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 29
	mov	DWORD PTR _service$[ebp], 0
; Line 32
	cmp	DWORD PTR _face$[ebp], 0
	je	$LN11@ft_pfr_che
$LN10@ft_pfr_che:
; Line 33
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR _svc$3[ebp], edx
	cmp	DWORD PTR _svc$3[ebp], -2		; fffffffeH
	jne	SHORT $LN7@ft_pfr_che
	mov	DWORD PTR _svc$3[ebp], 0
	jmp	SHORT $LN6@ft_pfr_che
$LN7@ft_pfr_che:
	cmp	DWORD PTR _svc$3[ebp], 0
	jne	SHORT $LN6@ft_pfr_che
$LN4@ft_pfr_che:
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	mov	DWORD PTR __tmp_$1[ebp], 0
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN1@ft_pfr_che
	mov	esi, esp
	push	OFFSET $SG7053
	mov	ecx, DWORD PTR _module$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __tmp_$1[ebp], eax
$LN1@ft_pfr_che:
	mov	edx, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _svc$3[ebp], edx
	xor	eax, eax
	jne	SHORT $LN4@ft_pfr_che
	cmp	DWORD PTR _svc$3[ebp], 0
	je	SHORT $LN14@ft_pfr_che
	mov	ecx, DWORD PTR _svc$3[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $LN15@ft_pfr_che
$LN14@ft_pfr_che:
	mov	DWORD PTR tv82[ebp], -2			; fffffffeH
$LN15@ft_pfr_che:
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+128]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR [eax+40], ecx
$LN6@ft_pfr_che:
	mov	edx, DWORD PTR _svc$3[ebp]
	mov	DWORD PTR _service$[ebp], edx
	xor	eax, eax
	jne	$LN10@ft_pfr_che
$LN11@ft_pfr_che:
; Line 35
	mov	eax, DWORD PTR _service$[ebp]
; Line 36
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_pfr_check ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_service$ = -8						; size = 4
_error$ = -4						; size = 4
_face$ = 8						; size = 4
_gindex$ = 12						; size = 4
_aadvance$ = 16						; size = 4
_FT_Get_PFR_Advance PROC
; File d:\mozilla\modules\freetype2\src\base\ftpfr.c
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 136
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN4@FT_Get_PFR
; Line 137
	push	OFFSET $SG7111
	push	137					; 00000089H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	jmp	SHORT $LN5@FT_Get_PFR
$LN4@FT_Get_PFR:
; Line 139
	cmp	DWORD PTR _aadvance$[ebp], 0
	jne	SHORT $LN3@FT_Get_PFR
; Line 140
	push	OFFSET $SG7113
	push	140					; 0000008cH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	SHORT $LN5@FT_Get_PFR
$LN3@FT_Get_PFR:
; Line 142
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	call	_ft_pfr_check
	add	esp, 4
	mov	DWORD PTR _service$[ebp], eax
; Line 143
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_Get_PFR
; Line 144
	mov	esi, esp
	mov	ecx, DWORD PTR _aadvance$[ebp]
	push	ecx
	mov	edx, DWORD PTR _gindex$[ebp]
	push	edx
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 145
	jmp	SHORT $LN1@FT_Get_PFR
$LN2@FT_Get_PFR:
; Line 147
	push	OFFSET $SG7116
	push	147					; 00000093H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
$LN1@FT_Get_PFR:
; Line 149
	mov	eax, DWORD PTR _error$[ebp]
$LN5@FT_Get_PFR:
; Line 150
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PFR_Advance ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_service$ = -8						; size = 4
_error$ = -4						; size = 4
_face$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
_avector$ = 20						; size = 4
_FT_Get_PFR_Kerning PROC
; File d:\mozilla\modules\freetype2\src\base\ftpfr.c
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 108
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN4@FT_Get_PFR
; Line 109
	push	OFFSET $SG7096
	push	109					; 0000006dH
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	jmp	SHORT $LN5@FT_Get_PFR
$LN4@FT_Get_PFR:
; Line 111
	cmp	DWORD PTR _avector$[ebp], 0
	jne	SHORT $LN3@FT_Get_PFR
; Line 112
	push	OFFSET $SG7098
	push	112					; 00000070H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	SHORT $LN5@FT_Get_PFR
$LN3@FT_Get_PFR:
; Line 114
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	call	_ft_pfr_check
	add	esp, 4
	mov	DWORD PTR _service$[ebp], eax
; Line 115
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_Get_PFR
; Line 116
	mov	esi, esp
	mov	ecx, DWORD PTR _avector$[ebp]
	push	ecx
	mov	edx, DWORD PTR _right$[ebp]
	push	edx
	mov	eax, DWORD PTR _left$[ebp]
	push	eax
	mov	ecx, DWORD PTR _face$[ebp]
	push	ecx
	mov	edx, DWORD PTR _service$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 117
	jmp	SHORT $LN1@FT_Get_PFR
$LN2@FT_Get_PFR:
; Line 119
	mov	ecx, DWORD PTR _avector$[ebp]
	push	ecx
	push	2
	mov	edx, DWORD PTR _right$[ebp]
	push	edx
	mov	eax, DWORD PTR _left$[ebp]
	push	eax
	mov	ecx, DWORD PTR _face$[ebp]
	push	ecx
	call	_FT_Get_Kerning
	add	esp, 20					; 00000014H
	mov	DWORD PTR _error$[ebp], eax
$LN1@FT_Get_PFR:
; Line 121
	mov	eax, DWORD PTR _error$[ebp]
$LN5@FT_Get_PFR:
; Line 122
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PFR_Kerning ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_y_scale$1 = -16					; size = 4
_x_scale$2 = -12					; size = 4
_service$ = -8						; size = 4
_error$ = -4						; size = 4
_face$ = 8						; size = 4
_aoutline_resolution$ = 12				; size = 4
_ametrics_resolution$ = 16				; size = 4
_ametrics_x_scale$ = 20					; size = 4
_ametrics_y_scale$ = 24					; size = 4
_FT_Get_PFR_Metrics PROC
; File d:\mozilla\modules\freetype2\src\base\ftpfr.c
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 48
	mov	DWORD PTR _error$[ebp], 0
; Line 52
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN8@FT_Get_PFR
; Line 53
	push	OFFSET $SG7073
	push	53					; 00000035H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	jmp	$LN9@FT_Get_PFR
$LN8@FT_Get_PFR:
; Line 55
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	call	_ft_pfr_check
	add	esp, 4
	mov	DWORD PTR _service$[ebp], eax
; Line 56
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN7@FT_Get_PFR
; Line 62
	mov	esi, esp
	mov	ecx, DWORD PTR _ametrics_y_scale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ametrics_x_scale$[ebp]
	push	edx
	mov	eax, DWORD PTR _ametrics_resolution$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aoutline_resolution$[ebp]
	push	ecx
	mov	edx, DWORD PTR _face$[ebp]
	push	edx
	mov	eax, DWORD PTR _service$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 64
	jmp	$LN6@FT_Get_PFR
$LN7@FT_Get_PFR:
; Line 70
	cmp	DWORD PTR _aoutline_resolution$[ebp], 0
	je	SHORT $LN5@FT_Get_PFR
; Line 71
	mov	edx, DWORD PTR _face$[ebp]
	movzx	eax, WORD PTR [edx+68]
	mov	ecx, DWORD PTR _aoutline_resolution$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@FT_Get_PFR:
; Line 73
	cmp	DWORD PTR _ametrics_resolution$[ebp], 0
	je	SHORT $LN4@FT_Get_PFR
; Line 74
	mov	edx, DWORD PTR _face$[ebp]
	movzx	eax, WORD PTR [edx+68]
	mov	ecx, DWORD PTR _ametrics_resolution$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@FT_Get_PFR:
; Line 76
	mov	DWORD PTR _y_scale$1[ebp], 65536	; 00010000H
	mov	edx, DWORD PTR _y_scale$1[ebp]
	mov	DWORD PTR _x_scale$2[ebp], edx
; Line 77
	mov	eax, DWORD PTR _face$[ebp]
	cmp	DWORD PTR [eax+88], 0
	je	SHORT $LN3@FT_Get_PFR
; Line 79
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR _x_scale$2[ebp], eax
; Line 80
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _y_scale$1[ebp], eax
$LN3@FT_Get_PFR:
; Line 83
	cmp	DWORD PTR _ametrics_x_scale$[ebp], 0
	je	SHORT $LN2@FT_Get_PFR
; Line 84
	mov	ecx, DWORD PTR _ametrics_x_scale$[ebp]
	mov	edx, DWORD PTR _x_scale$2[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@FT_Get_PFR:
; Line 86
	cmp	DWORD PTR _ametrics_y_scale$[ebp], 0
	je	SHORT $LN1@FT_Get_PFR
; Line 87
	mov	eax, DWORD PTR _ametrics_y_scale$[ebp]
	mov	ecx, DWORD PTR _y_scale$1[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@FT_Get_PFR:
; Line 89
	push	OFFSET $SG7083
	push	89					; 00000059H
	push	2
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 2
	mov	DWORD PTR _error$[ebp], eax
$LN6@FT_Get_PFR:
; Line 92
	mov	eax, DWORD PTR _error$[ebp]
$LN9@FT_Get_PFR:
; Line 93
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PFR_Metrics ENDP
_TEXT	ENDS
END

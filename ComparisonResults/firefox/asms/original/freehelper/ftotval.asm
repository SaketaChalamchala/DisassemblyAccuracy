; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftotval.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7053	DB	'..\..\..\src\base\ftotval.c', 00H
$SG7057	DB	'..\..\..\src\base\ftotval.c', 00H
$SG7065	DB	'opentype-validate', 00H
	ORG $+2
$SG7068	DB	'..\..\..\src\base\ftotval.c', 00H
_DATA	ENDS
PUBLIC	_FT_OpenType_Validate
PUBLIC	_FT_OpenType_Free
EXTRN	_FT_Throw:PROC
EXTRN	_ft_mem_free:PROC
EXTRN	_ft_module_get_service:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_face$ = 8						; size = 4
_table$ = 12						; size = 4
_FT_OpenType_Free PROC
; File d:\mozilla\modules\freetype2\src\base\ftotval.c
; Line 78
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 82
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN4@FT_OpenTyp
; Line 83
	jmp	SHORT $LN5@FT_OpenTyp
$LN4@FT_OpenTyp:
; Line 85
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _memory$[ebp], ecx
$LN3@FT_OpenTyp:
; Line 87
	mov	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _table$[ebp], 0
	xor	ecx, ecx
	jne	SHORT $LN3@FT_OpenTyp
$LN5@FT_OpenTyp:
; Line 88
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_OpenType_Free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_error$ = -8						; size = 4
_service$ = -4						; size = 4
_face$ = 8						; size = 4
_validation_flags$ = 12					; size = 4
_BASE_table$ = 16					; size = 4
_GDEF_table$ = 20					; size = 4
_GPOS_table$ = 24					; size = 4
_GSUB_table$ = 28					; size = 4
_JSTF_table$ = 32					; size = 4
_FT_OpenType_Validate PROC
; File d:\mozilla\modules\freetype2\src\base\ftotval.c
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 41
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN8@FT_OpenTyp
; Line 43
	push	OFFSET $SG7053
	push	43					; 0000002bH
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	mov	DWORD PTR _error$[ebp], eax
; Line 44
	jmp	$Exit$11
$LN8@FT_OpenTyp:
; Line 51
	cmp	DWORD PTR _BASE_table$[ebp], 0
	je	SHORT $LN6@FT_OpenTyp
	cmp	DWORD PTR _GDEF_table$[ebp], 0
	je	SHORT $LN6@FT_OpenTyp
	cmp	DWORD PTR _GPOS_table$[ebp], 0
	je	SHORT $LN6@FT_OpenTyp
	cmp	DWORD PTR _GSUB_table$[ebp], 0
	je	SHORT $LN6@FT_OpenTyp
	cmp	DWORD PTR _JSTF_table$[ebp], 0
	jne	SHORT $LN5@FT_OpenTyp
$LN6@FT_OpenTyp:
; Line 53
	push	OFFSET $SG7057
	push	53					; 00000035H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 54
	jmp	SHORT $Exit$11
$LN5@FT_OpenTyp:
; Line 57
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	push	OFFSET $SG7065
	mov	edx, DWORD PTR _module$2[ebp]
	push	edx
	call	_ft_module_get_service
	add	esp, 8
	mov	DWORD PTR __tmp_$1[ebp], eax
	mov	eax, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN5@FT_OpenTyp
; Line 59
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_OpenTyp
; Line 66
	mov	esi, esp
	mov	edx, DWORD PTR _JSTF_table$[ebp]
	push	edx
	mov	eax, DWORD PTR _GSUB_table$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GPOS_table$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GDEF_table$[ebp]
	push	edx
	mov	eax, DWORD PTR _BASE_table$[ebp]
	push	eax
	mov	ecx, DWORD PTR _validation_flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _face$[ebp]
	push	edx
	mov	eax, DWORD PTR _service$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 67
	jmp	SHORT $Exit$11
$LN2@FT_OpenTyp:
; Line 68
	push	OFFSET $SG7068
	push	68					; 00000044H
	push	7
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 7
	mov	DWORD PTR _error$[ebp], eax
$Exit$11:
; Line 71
	mov	eax, DWORD PTR _error$[ebp]
; Line 72
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_OpenType_Validate ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\bdf\bdf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	_bdf_driver_class
CONST	SEGMENT
_bdf_service_bdf DD FLAT:_bdf_get_charset_id
	DD	FLAT:_bdf_get_bdf_property
_bdf_services DD FLAT:$SG9336
	DD	FLAT:_bdf_service_bdf
	DD	FLAT:$SG9337
	DD	FLAT:$SG9338
	DD	00H
	DD	00H
__bdf_opts DD	01H
	DD	01H
	DD	00H
	DD	08H
__bdf_properties DD FLAT:$SG7427
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7428
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7429
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7430
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7431
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7432
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7433
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7434
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7435
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7436
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7437
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7438
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7439
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7440
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7441
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7442
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7443
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7444
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7445
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7446
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7447
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7448
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7449
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7450
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7451
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7452
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7453
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7454
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7455
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7456
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7457
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7458
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7459
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7460
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7461
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7462
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7463
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7464
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7465
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7466
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7467
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7468
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7469
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7470
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7471
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7472
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7473
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7474
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7475
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7476
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7477
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7478
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7479
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7480
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7481
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7482
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7483
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7484
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7485
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7486
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7487
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7488
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7489
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7490
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7491
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7492
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7493
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7494
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7495
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7496
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7497
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7498
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7499
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7500
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7501
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7502
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7503
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7504
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7505
	DD	03H
	DD	01H
	DD	00H
	DD	FLAT:$SG7506
	DD	01H
	DD	01H
	DD	00H
	DD	FLAT:$SG7507
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7508
	DD	02H
	DD	01H
	DD	00H
	DD	FLAT:$SG7509
	DD	02H
	DD	01H
	DD	00H
__num_bdf_properties DD 053H
_empty	DB	00H
	ORG $+3
_bdf_driver_class DD 0201H
	DD	01cH
	DD	FLAT:$SG9349
	DD	010000H
	DD	020000H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_bdf_driver_requester
	DD	0a8H
	DD	02cH
	DD	0a0H
	DD	FLAT:_BDF_Face_Init
	DD	FLAT:_BDF_Face_Done
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_BDF_Glyph_Load
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_BDF_Size_Request
	DD	FLAT:_BDF_Size_Select
_a2i	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	03H
	DB	04H
	DB	05H
	DB	06H
	DB	07H
	DB	08H
	DB	09H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	0bH
	DB	0cH
	DB	0dH
	DB	0eH
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+1
_odigits DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_ddigits DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_hdigits DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	03H
	DB	07eH
	DB	00H
	DB	00H
	DB	00H
	DB	07eH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_bdf_cmap_class DD 018H
	DD	FLAT:_bdf_cmap_init
	DD	FLAT:_bdf_cmap_done
	DD	FLAT:_bdf_cmap_char_index
	DD	FLAT:_bdf_cmap_char_next
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
_nibble_mask DB	0ffH
	DB	080H
	DB	0c0H
	DB	0e0H
	DB	0f0H
	DB	0f8H
	DB	0fcH
	DB	0feH
CONST	ENDS
_DATA	SEGMENT
$SG8194	DB	'CHARS', 00H
	ORG $+2
$SG8195	DB	'CHARS', 00H
	ORG $+2
$SG8196	DB	'_bdf_parse_glyphs: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+2
$SG8197	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8199	DB	' +', 00H
	ORG $+1
$SG8203	DB	'CHARS', 00H
	ORG $+2
$SG8204	DB	'_bdf_parse_glyphs: [line %ld] `%s'' value too big.', 0aH
	DB	00H
	ORG $+1
$SG8205	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG9230	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG8210	DB	'ENDFONT', 00H
$SG8212	DB	'ENDCHAR', 00H
$SG8213	DB	'_bdf_parse_glyphs: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+2
$SG8214	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8218	DB	'ENDCHAR', 00H
$SG8221	DB	'STARTCHAR', 00H
	ORG $+2
$SG8227	DB	' +', 00H
	ORG $+1
$SG9253	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG8230	DB	'STARTCHAR', 00H
	ORG $+2
$SG8231	DB	'_bdf_parse_glyphs: [line %ld] Invalid `%s'' value.', 0aH
	DB	00H
	ORG $+1
$SG8232	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG9257	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG9262	DB	'BDF_Glyph_Load: glyph index %d', 0aH, 00H
$SG8240	DB	'  [%6ld] %s', 00H
$SG8242	DB	'ENCODING', 00H
	ORG $+3
$SG8244	DB	'STARTCHAR', 00H
	ORG $+2
$SG8245	DB	'_bdf_parse_glyphs: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+2
$SG9270	DB	'BDF_Glyph_Load: too large pitch %d is truncated', 0aH, 00H
	ORG $+3
$SG8246	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8248	DB	' +', 00H
	ORG $+1
$SG8257	DB	' (0x%lX)', 0aH, 00H
	ORG $+2
$SG8261	DB	'ENCODING', 00H
	ORG $+3
$SG8262	DB	'_bdf_parse_glyphs: [line %ld] `%s'' value too big.', 0aH
	DB	00H
	ORG $+1
$SG8263	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG9294	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG9309	DB	'bdf_get_bdf_property: too large integer 0x%x is truncate'
	DB	'd', 0aH, 00H
	ORG $+1
$SG8270	DB	'_bdf_parse_glyphs: Duplicate encoding %ld (%s) changed t'
	DB	'o unencoded.', 0aH, 00H
	ORG $+2
$SG9295	DB	'assertion failed on line %d of file %s', 0aH, 00H
$SG9317	DB	'bdf_get_bdf_property: too large cardinal 0x%x is truncat'
	DB	'ed', 0aH, 00H
$SG9321	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG8298	DB	'_bdf_parse_glyphs: Glyph %ld extra rows removed.', 0aH, 00H
	ORG $+2
$SG8311	DB	'_bdf_parse_glyphs: Glyph %ld missing columns padded with'
	DB	' zero bits.', 0aH, 00H
	ORG $+3
$SG9336	DB	'bdf', 00H
$SG9337	DB	'xf86-driver-name', 00H
	ORG $+3
$SG9338	DB	'BDF', 00H
$SG8319	DB	'_bdf_parse_glyphs: Glyph %ld extra columns removed.', 0aH
	DB	00H
	ORG $+3
$SG8321	DB	'SWIDTH', 00H
	ORG $+1
$SG9349	DB	'bdf', 00H
$SG8325	DB	' +', 00H
	ORG $+1
$SG8329	DB	'DWIDTH', 00H
	ORG $+1
$SG8332	DB	' +', 00H
	ORG $+1
$SG8340	DB	'_bdf_parse_glyphs: SWIDTH field missing at line %ld.  Se'
	DB	't automatically.', 0aH, 00H
	ORG $+2
$SG8344	DB	'BBX', 00H
$SG8347	DB	' +', 00H
	ORG $+1
$SG8374	DB	'BBX', 00H
$SG8362	DB	'_bdf_parse_glyphs: DWIDTH field missing at line %ld.  Se'
	DB	't to glyph width.', 0aH, 00H
	ORG $+1
$SG8371	DB	'BITMAP', 00H
	ORG $+1
$SG8375	DB	'_bdf_parse_glyphs: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+2
$SG8376	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8379	DB	'_bdf_parse_glyphs: [line %ld] BBX too big.', 0aH, 00H
$SG8380	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8386	DB	'_bdf_parse_glyphs: [line %ld] Invalid keyword.', 0aH, 00H
$SG8387	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8388	DB	'ENCODING', 00H
	ORG $+3
$SG8389	DB	'_bdf_parse_glyphs: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+2
$SG8390	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8418	DB	'ENDPROPERTIES', 00H
	ORG $+2
$SG8420	DB	'FONT_ASCENT', 00H
$SG8421	DB	'%hd', 00H
$SG8423	DB	'FONT_ASCENT', 00H
$SG8430	DB	'_bdf_parse_properties: FONT_ASCENT property missing.  Ad'
	DB	'ded `FONT_ASCENT %hd''.', 0aH, 00H
$SG8432	DB	'FONT_DESCENT', 00H
	ORG $+3
$SG8433	DB	'%hd', 00H
$SG8435	DB	'FONT_DESCENT', 00H
	ORG $+3
$SG8443	DB	'_XFREE86_GLYPH_RANGES', 00H
	ORG $+2
$SG8445	DB	'COMMENT', 00H
$SG8453	DB	' +', 00H
	ORG $+1
$SG8441	DB	'_bdf_parse_properties: FONT_DESCENT property missing.  A'
	DB	'dded `FONT_DESCENT %hd''.', 0aH, 00H
	ORG $+2
$SG7427	DB	'ADD_STYLE_NAME', 00H
	ORG $+1
$SG7428	DB	'AVERAGE_WIDTH', 00H
	ORG $+2
$SG7429	DB	'AVG_CAPITAL_WIDTH', 00H
	ORG $+2
$SG7430	DB	'AVG_LOWERCASE_WIDTH', 00H
$SG7431	DB	'CAP_HEIGHT', 00H
	ORG $+1
$SG7432	DB	'CHARSET_COLLECTIONS', 00H
$SG7433	DB	'CHARSET_ENCODING', 00H
	ORG $+3
$SG7434	DB	'CHARSET_REGISTRY', 00H
	ORG $+3
$SG7435	DB	'COMMENT', 00H
$SG7436	DB	'COPYRIGHT', 00H
	ORG $+2
$SG7437	DB	'DEFAULT_CHAR', 00H
	ORG $+3
$SG7438	DB	'DESTINATION', 00H
$SG7439	DB	'DEVICE_FONT_NAME', 00H
	ORG $+3
$SG7440	DB	'END_SPACE', 00H
	ORG $+2
$SG7441	DB	'FACE_NAME', 00H
	ORG $+2
$SG7442	DB	'FAMILY_NAME', 00H
$SG7443	DB	'FIGURE_WIDTH', 00H
	ORG $+3
$SG7444	DB	'FONT', 00H
	ORG $+3
$SG7445	DB	'FONTNAME_REGISTRY', 00H
	ORG $+2
$SG7446	DB	'FONT_ASCENT', 00H
$SG7447	DB	'FONT_DESCENT', 00H
	ORG $+3
$SG7448	DB	'FOUNDRY', 00H
$SG7449	DB	'FULL_NAME', 00H
	ORG $+2
$SG7450	DB	'ITALIC_ANGLE', 00H
	ORG $+3
$SG7451	DB	'MAX_SPACE', 00H
	ORG $+2
$SG7452	DB	'MIN_SPACE', 00H
	ORG $+2
$SG7453	DB	'NORM_SPACE', 00H
	ORG $+1
$SG7454	DB	'NOTICE', 00H
	ORG $+1
$SG7455	DB	'PIXEL_SIZE', 00H
	ORG $+1
$SG8480	DB	'COMMENT', 00H
$SG7456	DB	'POINT_SIZE', 00H
	ORG $+1
$SG7457	DB	'QUAD_WIDTH', 00H
	ORG $+1
$SG7458	DB	'RAW_ASCENT', 00H
	ORG $+1
$SG7459	DB	'RAW_AVERAGE_WIDTH', 00H
	ORG $+2
$SG7460	DB	'RAW_AVG_CAPITAL_WIDTH', 00H
	ORG $+2
$SG7461	DB	'RAW_AVG_LOWERCASE_WIDTH', 00H
$SG7462	DB	'RAW_CAP_HEIGHT', 00H
	ORG $+1
$SG8487	DB	'STARTFONT', 00H
	ORG $+2
$SG7463	DB	'RAW_DESCENT', 00H
$SG8488	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7464	DB	'RAW_END_SPACE', 00H
	ORG $+2
$SG7465	DB	'RAW_FIGURE_WIDTH', 00H
	ORG $+3
$SG7466	DB	'RAW_MAX_SPACE', 00H
	ORG $+2
$SG7467	DB	'RAW_MIN_SPACE', 00H
	ORG $+2
$SG7468	DB	'RAW_NORM_SPACE', 00H
	ORG $+1
$SG7469	DB	'RAW_PIXEL_SIZE', 00H
	ORG $+1
$SG7470	DB	'RAW_POINT_SIZE', 00H
	ORG $+1
$SG7471	DB	'RAW_PIXELSIZE', 00H
	ORG $+2
$SG7472	DB	'RAW_POINTSIZE', 00H
	ORG $+2
$SG7473	DB	'RAW_QUAD_WIDTH', 00H
	ORG $+1
$SG7474	DB	'RAW_SMALL_CAP_SIZE', 00H
	ORG $+1
$SG7475	DB	'RAW_STRIKEOUT_ASCENT', 00H
	ORG $+3
$SG7476	DB	'RAW_STRIKEOUT_DESCENT', 00H
	ORG $+2
$SG7477	DB	'RAW_SUBSCRIPT_SIZE', 00H
	ORG $+1
$SG7478	DB	'RAW_SUBSCRIPT_X', 00H
$SG7479	DB	'RAW_SUBSCRIPT_Y', 00H
$SG7480	DB	'RAW_SUPERSCRIPT_SIZE', 00H
	ORG $+3
$SG8505	DB	'STARTPROPERTIES', 00H
$SG7481	DB	'RAW_SUPERSCRIPT_X', 00H
	ORG $+2
$SG7482	DB	'RAW_SUPERSCRIPT_Y', 00H
	ORG $+2
$SG8507	DB	'FONTBOUNDINGBOX', 00H
$SG7483	DB	'RAW_UNDERLINE_POSITION', 00H
	ORG $+1
$SG8508	DB	'_bdf_parse_start: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+3
$SG7484	DB	'RAW_UNDERLINE_THICKNESS', 00H
$SG8509	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7485	DB	'RAW_X_HEIGHT', 00H
	ORG $+3
$SG7486	DB	'RELATIVE_SETWIDTH', 00H
	ORG $+2
$SG8511	DB	' +', 00H
	ORG $+1
$SG7487	DB	'RELATIVE_WEIGHT', 00H
$SG7488	DB	'RESOLUTION', 00H
	ORG $+1
$SG7489	DB	'RESOLUTION_X', 00H
	ORG $+3
$SG7490	DB	'RESOLUTION_Y', 00H
	ORG $+3
$SG7491	DB	'SETWIDTH_NAME', 00H
	ORG $+2
$SG7492	DB	'SLANT', 00H
	ORG $+2
$SG8517	DB	'FONTBOUNDINGBOX', 00H
$SG7493	DB	'SMALL_CAP_SIZE', 00H
	ORG $+1
$SG7494	DB	'SPACING', 00H
$SG8519	DB	'SIZE', 00H
	ORG $+3
$SG7495	DB	'STRIKEOUT_ASCENT', 00H
	ORG $+3
$SG8520	DB	'_bdf_parse_start: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+3
$SG7496	DB	'STRIKEOUT_DESCENT', 00H
	ORG $+2
$SG8521	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7497	DB	'SUBSCRIPT_SIZE', 00H
	ORG $+1
$SG7498	DB	'SUBSCRIPT_X', 00H
$SG8523	DB	' +', 00H
	ORG $+1
$SG7499	DB	'SUBSCRIPT_Y', 00H
$SG7500	DB	'SUPERSCRIPT_SIZE', 00H
	ORG $+3
$SG7501	DB	'SUPERSCRIPT_X', 00H
	ORG $+2
$SG7502	DB	'SUPERSCRIPT_Y', 00H
	ORG $+2
$SG7503	DB	'UNDERLINE_POSITION', 00H
	ORG $+1
$SG8528	DB	'FONT', 00H
	ORG $+3
$SG7504	DB	'UNDERLINE_THICKNESS', 00H
$SG7505	DB	'WEIGHT', 00H
	ORG $+1
$SG8530	DB	' +', 00H
	ORG $+1
$SG7506	DB	'WEIGHT_NAME', 00H
$SG7507	DB	'X_HEIGHT', 00H
	ORG $+3
$SG7508	DB	'_MULE_BASELINE_OFFSET', 00H
	ORG $+2
$SG8533	DB	'FONT', 00H
	ORG $+3
$SG7509	DB	'_MULE_RELATIVE_COMPOSE', 00H
	ORG $+1
$SG8534	DB	'_bdf_parse_start: [line %ld] Invalid `%s'' value.', 0aH, 00H
	ORG $+2
$SG8535	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8545	DB	'SIZE', 00H
	ORG $+3
$SG8547	DB	'FONT', 00H
	ORG $+3
$SG8548	DB	'_bdf_parse_start: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+3
$SG8549	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8551	DB	' +', 00H
	ORG $+1
$SG8570	DB	'_bdf_parse_start: SIZE bits per pixel field adjusted to '
	DB	'%hd.', 0aH, 00H
	ORG $+2
$SG8573	DB	'CHARS', 00H
	ORG $+2
$SG8576	DB	'FONTBOUNDINGBOX', 00H
$SG8577	DB	'_bdf_parse_start: [line %ld] Missing `%s'' line.', 0aH, 00H
	ORG $+3
$SG8578	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8579	DB	'%hd', 00H
$SG8581	DB	'FONT_ASCENT', 00H
$SG8588	DB	'%hd', 00H
$SG8587	DB	'_bdf_parse_properties: FONT_ASCENT property missing.  Ad'
	DB	'ded `FONT_ASCENT %hd''.', 0aH, 00H
$SG8590	DB	'FONT_DESCENT', 00H
	ORG $+3
$SG8596	DB	'_bdf_parse_properties: FONT_DESCENT property missing.  A'
	DB	'dded `FONT_DESCENT %hd''.', 0aH, 00H
	ORG $+2
$SG8597	DB	'_bdf_parse_start: [line %ld] Invalid keyword.', 0aH, 00H
	ORG $+1
$SG8598	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7831	DB	'_bdf_readstream: [line %ld] Input line too long.', 0aH, 00H
	ORG $+2
$SG8628	DB	'bdf_load_font: Incorrect glyph count: %ld indicated but '
	DB	'%ld found.', 0aH, 00H
$SG8977	DB	'WEIGHT_NAME', 00H
$SG8636	DB	'bdf_load_font: Font width != actual width.  Old: %hd New'
	DB	': %hd.', 0aH, 00H
$SG8643	DB	'bdf_load_font: Font left bearing != actual left bearing.'
	DB	'  Old: %hd New: %hd.', 0aH, 00H
	ORG $+2
$SG8649	DB	'bdf_load_font: Font ascent != actual ascent.  Old: %hd N'
	DB	'ew: %hd.', 0aH, 00H
	ORG $+2
$SG8974	DB	'Oblique', 00H
$SG8025	DB	'_bdf_set_default_spacing: [line %ld] Font name too long.'
	DB	0aH, 00H
	ORG $+2
$SG8655	DB	'bdf_load_font: Font descent != actual descent.  Old: %hd'
	DB	' New: %hd.', 0aH, 00H
$SG8029	DB	'-', 00H
	ORG $+2
$SG8662	DB	'bdf_load_font: Font height != actual height. Old: %hd Ne'
	DB	'w: %hd.', 0aH, 00H
	ORG $+3
$SG8673	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8975	DB	'Italic', 00H
	ORG $+1
$SG8996	DB	'Regular', 00H
$SG9075	DB	'BDF driver', 0aH, 00H
$SG8669	DB	'bdf_load_font: Glyph scalable width (SWIDTH) adjustments'
	DB	' made.', 0aH, 00H
$SG8672	DB	'bdf_load_font: [line %ld] Font header corrupted or missi'
	DB	'ng fields.', 0aH, 00H
$SG9084	DB	'  not a BDF file', 0aH, 00H
	ORG $+2
$SG8675	DB	'bdf_load_font: [line %ld] Font glyphs corrupted or missi'
	DB	'ng fields.', 0aH, 00H
$SG8676	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8684	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7682	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7756	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7810	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG7832	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8940	DB	'bdf_cmap_char_next: charcode 0x%x > 32bit API', 00H
	ORG $+2
$SG8969	DB	'SLANT', 00H
	ORG $+2
$SG8981	DB	'Bold', 00H
	ORG $+3
$SG8983	DB	'SETWIDTH_NAME', 00H
	ORG $+2
$SG8987	DB	'ADD_STYLE_NAME', 00H
	ORG $+1
$SG7974	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8022	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG8026	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG9089	DB	'BDF_Face_Init: invalid face index', 0aH, 00H
	ORG $+1
$SG9090	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG9097	DB	'  number of glyphs: allocated %d (used %d)', 0aH, 00H
$SG9102	DB	'  number of unencoded glyphs: allocated %d (used %d)', 0aH
	DB	00H
	ORG $+2
$SG9103	DB	'SPACING', 00H
$SG9106	DB	'FAMILY_NAME', 00H
$SG9121	DB	'AVERAGE_WIDTH', 00H
	ORG $+2
$SG9126	DB	'POINT_SIZE', 00H
	ORG $+1
$SG9130	DB	'PIXEL_SIZE', 00H
	ORG $+1
$SG9133	DB	'RESOLUTION_X', 00H
	ORG $+3
$SG9136	DB	'RESOLUTION_Y', 00H
	ORG $+3
$SG9155	DB	'  idx %d, val 0x%lX', 0aH, 00H
	ORG $+3
$SG8136	DB	'COMMENT', 00H
$SG8140	DB	'DEFAULT_CHAR', 00H
	ORG $+3
$SG9165	DB	'BDF_Face_Init: idx %d is too large for this system', 0aH
	DB	00H
$SG8143	DB	'FONT_ASCENT', 00H
$SG9169	DB	'CHARSET_REGISTRY', 00H
	ORG $+3
$SG9170	DB	'CHARSET_ENCODING', 00H
	ORG $+3
$SG8146	DB	'FONT_DESCENT', 00H
	ORG $+3
$SG8149	DB	'SPACING', 00H
$SG8151	DB	'SPACING', 00H
$SG8152	DB	'_bdf_add_property: [line %ld] Invalid `%s'' value.', 0aH
	DB	00H
	ORG $+1
$SG8153	DB	'd:\mozilla\modules\freetype2\src\bdf\bdflib.c', 00H
	ORG $+2
$SG9186	DB	'10646', 00H
	ORG $+2
$SG9187	DB	'8859', 00H
	ORG $+3
$SG9188	DB	'1', 00H
	ORG $+2
$SG9199	DB	'd:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c', 00H
$SG8189	DB	'COMMENT', 00H
_DATA	ENDS
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__memmove:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	__imp__qsort:PROC
EXTRN	_FT_MulDiv:PROC
EXTRN	_FT_Message:PROC
EXTRN	_FT_Panic:PROC
EXTRN	_FT_Throw:PROC
EXTRN	_ft_mem_alloc:PROC
EXTRN	_ft_mem_realloc:PROC
EXTRN	_ft_mem_free:PROC
EXTRN	_ft_mem_strdup:PROC
EXTRN	_ft_service_list_lookup:PROC
EXTRN	_FT_CMap_New:PROC
EXTRN	_FT_Select_Metrics:PROC
EXTRN	_ft_synthesize_vertical_metrics:PROC
EXTRN	_ft_glyphslot_set_bitmap:PROC
EXTRN	_FT_Stream_Seek:PROC
EXTRN	_FT_Stream_TryRead:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_ft_trace_levels:BYTE
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_module$ = 8						; size = 4
_name$ = 12						; size = 4
_bdf_driver_requester PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 848
	push	ebp
	mov	ebp, esp
; Line 849
	mov	eax, DWORD PTR _module$[ebp]
	mov	DWORD PTR _module$[ebp], eax
; Line 851
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET _bdf_services
	call	_ft_service_list_lookup
	add	esp, 8
; Line 852
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_bdf_driver_requester ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_face$ = 8						; size = 4
_acharset_encoding$ = 12				; size = 4
_acharset_registry$ = 16				; size = 4
_bdf_get_charset_id PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 816
	push	ebp
	mov	ebp, esp
; Line 817
	mov	eax, DWORD PTR _acharset_encoding$[ebp]
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR [eax], edx
; Line 818
	mov	eax, DWORD PTR _acharset_registry$[ebp]
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	DWORD PTR [eax], edx
; Line 820
	xor	eax, eax
; Line 821
	pop	ebp
	ret	0
_bdf_get_charset_id ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -8						; size = 4
_prop$ = -4						; size = 4
_face$ = 8						; size = 4
_prop_name$ = 12					; size = 4
_aproperty$ = 16					; size = 4
_bdf_get_bdf_property PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 765
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
$LN23@bdf_get_bd:
; Line 769
	cmp	DWORD PTR _face$[ebp], 0
	je	SHORT $LN19@bdf_get_bd
	mov	eax, DWORD PTR _face$[ebp]
	cmp	DWORD PTR [eax+140], 0
	jne	SHORT $LN22@bdf_get_bd
$LN19@bdf_get_bd:
	push	OFFSET $SG9294
	push	769					; 00000301H
	push	OFFSET $SG9295
	call	_FT_Panic
	add	esp, 12					; 0000000cH
$LN22@bdf_get_bd:
	xor	ecx, ecx
	jne	SHORT $LN23@bdf_get_bd
; Line 771
	mov	edx, DWORD PTR _prop_name$[ebp]
	push	edx
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$[ebp], eax
; Line 772
	cmp	DWORD PTR _prop$[ebp], 0
	je	$Fail$26
; Line 774
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 1
	je	SHORT $LN15@bdf_get_bd
	cmp	DWORD PTR tv77[ebp], 2
	je	SHORT $LN14@bdf_get_bd
	cmp	DWORD PTR tv77[ebp], 3
	je	SHORT $LN7@bdf_get_bd
	jmp	$LN1@bdf_get_bd
$LN15@bdf_get_bd:
; Line 777
	mov	ecx, DWORD PTR _aproperty$[ebp]
	mov	DWORD PTR [ecx], 1
; Line 778
	mov	edx, DWORD PTR _aproperty$[ebp]
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+4], ecx
; Line 779
	jmp	$LN16@bdf_get_bd
$LN14@bdf_get_bd:
; Line 782
	mov	edx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [edx+12], 2147483647		; 7fffffffH
	jg	SHORT $LN11@bdf_get_bd
	mov	eax, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [eax+12], -2147483648		; 80000000H
	jge	SHORT $LN13@bdf_get_bd
$LN11@bdf_get_bd:
; Line 785
	mov	ecx, 4
	shl	ecx, 6
	cmp	DWORD PTR _ft_trace_levels[ecx], 1
	jl	SHORT $LN10@bdf_get_bd
	push	OFFSET $SG9309
	call	_FT_Message
	add	esp, 4
$LN10@bdf_get_bd:
	xor	edx, edx
	jne	SHORT $LN11@bdf_get_bd
$LN13@bdf_get_bd:
; Line 787
	mov	eax, DWORD PTR _aproperty$[ebp]
	mov	DWORD PTR [eax], 2
; Line 788
	mov	ecx, DWORD PTR _aproperty$[ebp]
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+4], eax
; Line 789
	jmp	SHORT $LN16@bdf_get_bd
$LN7@bdf_get_bd:
; Line 792
	mov	ecx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [ecx+12], -1
	jbe	SHORT $LN6@bdf_get_bd
$LN5@bdf_get_bd:
; Line 795
	mov	edx, 4
	shl	edx, 6
	cmp	DWORD PTR _ft_trace_levels[edx], 1
	jl	SHORT $LN4@bdf_get_bd
	push	OFFSET $SG9317
	call	_FT_Message
	add	esp, 4
$LN4@bdf_get_bd:
	xor	eax, eax
	jne	SHORT $LN5@bdf_get_bd
$LN6@bdf_get_bd:
; Line 797
	mov	ecx, DWORD PTR _aproperty$[ebp]
	mov	DWORD PTR [ecx], 3
; Line 798
	mov	edx, DWORD PTR _aproperty$[ebp]
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+4], ecx
; Line 799
	jmp	SHORT $LN16@bdf_get_bd
$LN1@bdf_get_bd:
; Line 802
	jmp	SHORT $Fail$26
$LN16@bdf_get_bd:
; Line 804
	xor	eax, eax
	jmp	SHORT $LN24@bdf_get_bd
$Fail$26:
; Line 808
	push	OFFSET $SG9321
	push	808					; 00000328H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
$LN24@bdf_get_bd:
; Line 809
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_get_bdf_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv142 = -72						; size = 4
_bpp$ = -68						; size = 4
_glyph$ = -60						; size = 36
_bitmap$ = -20						; size = 4
_error$ = -16						; size = 4
_face$ = -12						; size = 4
_bdf$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_slot$ = 8						; size = 4
_size$ = 12						; size = 4
_glyph_index$ = 16					; size = 4
_load_flags$ = 20					; size = 4
_BDF_Glyph_Load PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 671
	push	ebp
	mov	ebp, esp
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 672
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _bdf$[ebp], ecx
; Line 673
	mov	edx, DWORD PTR _bdf$[ebp]
	mov	DWORD PTR _face$[ebp], edx
; Line 674
	mov	DWORD PTR _error$[ebp], 0
; Line 675
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 76					; 0000004cH
	mov	DWORD PTR _bitmap$[ebp], eax
; Line 677
	mov	ecx, DWORD PTR _bdf$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	movzx	eax, WORD PTR [edx+278662]
	mov	DWORD PTR _bpp$[ebp], eax
; Line 679
	mov	ecx, DWORD PTR _load_flags$[ebp]
	mov	DWORD PTR _load_flags$[ebp], ecx
; Line 682
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN19@BDF_Glyph_
; Line 684
	push	OFFSET $SG9253
	push	684					; 000002acH
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	mov	DWORD PTR _error$[ebp], eax
; Line 685
	jmp	$Exit$26
$LN19@BDF_Glyph_:
; Line 688
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR _glyph_index$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jb	SHORT $LN17@BDF_Glyph_
; Line 690
	push	OFFSET $SG9257
	push	690					; 000002b2H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 691
	jmp	$Exit$26
$LN17@BDF_Glyph_:
; Line 694
	mov	ecx, 4
	shl	ecx, 6
	cmp	DWORD PTR _ft_trace_levels[ecx], 1
	jl	SHORT $LN16@BDF_Glyph_
	mov	edx, DWORD PTR _glyph_index$[ebp]
	push	edx
	push	OFFSET $SG9262
	call	_FT_Message
	add	esp, 8
$LN16@BDF_Glyph_:
	xor	eax, eax
	jne	SHORT $LN17@BDF_Glyph_
; Line 697
	cmp	DWORD PTR _glyph_index$[ebp], 0
	jne	SHORT $LN13@BDF_Glyph_
; Line 698
	mov	ecx, DWORD PTR _bdf$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR _glyph_index$[ebp], edx
; Line 699
	jmp	SHORT $LN12@BDF_Glyph_
$LN13@BDF_Glyph_:
; Line 700
	mov	eax, DWORD PTR _glyph_index$[ebp]
	sub	eax, 1
	mov	DWORD PTR _glyph_index$[ebp], eax
$LN12@BDF_Glyph_:
; Line 703
	mov	ecx, DWORD PTR _bdf$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	imul	eax, DWORD PTR _glyph_index$[ebp], 36
	mov	esi, DWORD PTR [edx+56]
	add	esi, eax
	mov	ecx, 9
	lea	edi, DWORD PTR _glyph$[ebp]
	rep movsd
; Line 705
	movzx	ecx, WORD PTR _glyph$[ebp+14]
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 706
	movzx	eax, WORD PTR _glyph$[ebp+12]
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 707
	cmp	DWORD PTR _glyph$[ebp+28], 2147483647	; 7fffffffH
	jbe	SHORT $LN11@BDF_Glyph_
$LN10@BDF_Glyph_:
; Line 709
	mov	edx, 4
	shl	edx, 6
	cmp	DWORD PTR _ft_trace_levels[edx], 1
	jl	SHORT $LN9@BDF_Glyph_
	mov	eax, DWORD PTR _glyph$[ebp+28]
	push	eax
	push	OFFSET $SG9270
	call	_FT_Message
	add	esp, 8
$LN9@BDF_Glyph_:
	xor	ecx, ecx
	jne	SHORT $LN10@BDF_Glyph_
$LN11@BDF_Glyph_:
; Line 710
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR _glyph$[ebp+28]
	mov	DWORD PTR [edx+8], eax
; Line 714
	mov	ecx, DWORD PTR _glyph$[ebp+24]
	push	ecx
	mov	edx, DWORD PTR _slot$[ebp]
	push	edx
	call	_ft_glyphslot_set_bitmap
	add	esp, 8
; Line 716
	mov	eax, DWORD PTR _bpp$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv142[ebp], ecx
	cmp	DWORD PTR tv142[ebp], 7
	ja	SHORT $LN5@BDF_Glyph_
	mov	edx, DWORD PTR tv142[ebp]
	jmp	DWORD PTR $LN25@BDF_Glyph_[edx*4]
$LN4@BDF_Glyph_:
; Line 719
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	BYTE PTR [eax+18], 1
; Line 720
	jmp	SHORT $LN5@BDF_Glyph_
$LN3@BDF_Glyph_:
; Line 722
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	BYTE PTR [ecx+18], 3
; Line 723
	jmp	SHORT $LN5@BDF_Glyph_
$LN2@BDF_Glyph_:
; Line 725
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	BYTE PTR [edx+18], 4
; Line 726
	jmp	SHORT $LN5@BDF_Glyph_
$LN1@BDF_Glyph_:
; Line 728
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	BYTE PTR [eax+18], 2
; Line 729
	mov	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	WORD PTR [edx+16], cx
$LN5@BDF_Glyph_:
; Line 733
	mov	eax, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [eax+72], 1651078259		; 62697473H
; Line 734
	movsx	ecx, WORD PTR _glyph$[ebp+16]
	mov	edx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [edx+100], ecx
; Line 735
	movsx	eax, WORD PTR _glyph$[ebp+20]
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [ecx+104], eax
; Line 737
	movzx	edx, WORD PTR _glyph$[ebp+10]
	shl	edx, 6
	mov	eax, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [eax+40], edx
; Line 738
	movsx	ecx, WORD PTR _glyph$[ebp+16]
	shl	ecx, 6
	mov	edx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 739
	movsx	eax, WORD PTR _glyph$[ebp+20]
	shl	eax, 6
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [ecx+36], eax
; Line 740
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shl	eax, 6
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [ecx+24], eax
; Line 741
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx]
	shl	eax, 6
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 748
	mov	edx, DWORD PTR _bdf$[ebp]
	mov	eax, DWORD PTR [edx+140]
	movzx	ecx, WORD PTR [eax+6]
	shl	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _slot$[ebp]
	add	edx, 24					; 00000018H
	push	edx
	call	_ft_synthesize_vertical_metrics
	add	esp, 8
$Exit$26:
; Line 751
	mov	eax, DWORD PTR _error$[ebp]
; Line 752
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@BDF_Glyph_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN24@BDF_Glyph_:
	DD	1
	DD	$LN23@BDF_Glyph_
$LN23@BDF_Glyph_:
	DD	-60					; ffffffc4H
	DD	36					; 00000024H
	DD	$LN22@BDF_Glyph_
$LN22@BDF_Glyph_:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	0
	npad	2
$LN25@BDF_Glyph_:
	DD	$LN4@BDF_Glyph_
	DD	$LN3@BDF_Glyph_
	DD	$LN5@BDF_Glyph_
	DD	$LN2@BDF_Glyph_
	DD	$LN5@BDF_Glyph_
	DD	$LN5@BDF_Glyph_
	DD	$LN5@BDF_Glyph_
	DD	$LN1@BDF_Glyph_
_BDF_Glyph_Load ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -28						; size = 4
tv75 = -24						; size = 4
_height$ = -20						; size = 4
_error$ = -16						; size = 4
_bdffont$ = -12						; size = 4
_bsize$ = -8						; size = 4
_face$ = -4						; size = 4
_size$ = 8						; size = 4
_req$ = 12						; size = 4
_BDF_Size_Request PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 629
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 630
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _face$[ebp], ecx
; Line 631
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR _bsize$[ebp], eax
; Line 632
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR _bdffont$[ebp], edx
; Line 633
	mov	DWORD PTR _error$[ebp], 23		; 00000017H
; Line 637
	mov	eax, DWORD PTR _req$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN12@BDF_Size_R
	mov	ecx, DWORD PTR _req$[ebp]
	mov	edx, DWORD PTR _req$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	imul	eax, DWORD PTR [edx+16]
	add	eax, 36					; 00000024H
	cdq
	mov	ecx, 72					; 00000048H
	idiv	ecx
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN13@BDF_Size_R
$LN12@BDF_Size_R:
	mov	edx, DWORD PTR _req$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR tv75[ebp], eax
$LN13@BDF_Size_R:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _height$[ebp], ecx
; Line 638
	mov	edx, DWORD PTR _height$[ebp]
	add	edx, 32					; 00000020H
	sar	edx, 6
	mov	DWORD PTR _height$[ebp], edx
; Line 640
	mov	eax, DWORD PTR _req$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 0
	je	SHORT $LN7@BDF_Size_R
	cmp	DWORD PTR tv79[ebp], 1
	je	SHORT $LN5@BDF_Size_R
	jmp	SHORT $LN3@BDF_Size_R
$LN7@BDF_Size_R:
; Line 643
	mov	edx, DWORD PTR _bsize$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 32					; 00000020H
	sar	eax, 6
	cmp	DWORD PTR _height$[ebp], eax
	jne	SHORT $LN6@BDF_Size_R
; Line 644
	mov	DWORD PTR _error$[ebp], 0
$LN6@BDF_Size_R:
; Line 645
	jmp	SHORT $LN8@BDF_Size_R
$LN5@BDF_Size_R:
; Line 649
	mov	ecx, DWORD PTR _bdffont$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR _bdffont$[ebp]
	add	edx, DWORD PTR [eax+44]
	cmp	DWORD PTR _height$[ebp], edx
	jne	SHORT $LN4@BDF_Size_R
; Line 650
	mov	DWORD PTR _error$[ebp], 0
$LN4@BDF_Size_R:
; Line 651
	jmp	SHORT $LN8@BDF_Size_R
$LN3@BDF_Size_R:
; Line 654
	push	OFFSET $SG9230
	push	654					; 0000028eH
	push	7
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 7
	mov	DWORD PTR _error$[ebp], eax
$LN8@BDF_Size_R:
; Line 658
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@BDF_Size_R
; Line 659
	mov	eax, DWORD PTR _error$[ebp]
	jmp	SHORT $LN10@BDF_Size_R
; Line 660
	jmp	SHORT $LN10@BDF_Size_R
$LN2@BDF_Size_R:
; Line 661
	push	0
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	_BDF_Size_Select
	add	esp, 8
$LN10@BDF_Size_R:
; Line 662
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_BDF_Size_Request ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bdffont$ = -4						; size = 4
_size$ = 8						; size = 4
_strike_index$ = 12					; size = 4
_BDF_Size_Select PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 612
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 613
	mov	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+140]
	mov	DWORD PTR _bdffont$[ebp], edx
; Line 616
	mov	eax, DWORD PTR _strike_index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_FT_Select_Metrics
	add	esp, 8
; Line 618
	mov	eax, DWORD PTR _bdffont$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	shl	ecx, 6
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 619
	mov	eax, DWORD PTR _bdffont$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	neg	ecx
	shl	ecx, 6
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+28], ecx
; Line 620
	mov	eax, DWORD PTR _bdffont$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	shl	ecx, 6
	mov	edx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [edx+36], ecx
; Line 622
	xor	eax, eax
; Line 623
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_BDF_Size_Select ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_charmap$1 = -136					; size = 12
_charmap$2 = -116					; size = 12
_s$3 = -100						; size = 4
_unicode_charmap$4 = -93				; size = 1
_charset_encoding$5 = -92				; size = 4
_charset_registry$6 = -88				; size = 4
_n$7 = -84						; size = 4
_cur$8 = -80						; size = 4
_resolution_y$9 = -76					; size = 2
_resolution_x$10 = -72					; size = 2
_bsize$11 = -68						; size = 4
_prop$12 = -64						; size = 4
_options$ = -56						; size = 16
_font$ = -32						; size = 4
_memory$ = -24						; size = 4
_face$ = -20						; size = 4
_error$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_stream$ = 8						; size = 4
_bdfface$ = 12						; size = 4
_face_index$ = 16					; size = 4
_num_params$ = 20					; size = 4
_params$ = 24						; size = 4
_BDF_Face_Init PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-140]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 343
	mov	DWORD PTR _error$[ebp], 0
; Line 344
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR _face$[ebp], eax
; Line 345
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR _memory$[ebp], edx
; Line 347
	mov	DWORD PTR _font$[ebp], 0
; Line 350
	mov	eax, DWORD PTR _num_params$[ebp]
	mov	DWORD PTR _num_params$[ebp], eax
; Line 351
	mov	ecx, DWORD PTR _params$[ebp]
	mov	DWORD PTR _params$[ebp], ecx
$LN66@BDF_Face_I:
; Line 354
	mov	edx, 4
	shl	edx, 6
	cmp	DWORD PTR _ft_trace_levels[edx], 2
	jl	SHORT $LN65@BDF_Face_I
	push	OFFSET $SG9075
	call	_FT_Message
	add	esp, 4
$LN65@BDF_Face_I:
	xor	eax, eax
	jne	SHORT $LN66@BDF_Face_I
; Line 356
	push	0
	mov	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	call	_FT_Stream_Seek
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN62@BDF_Face_I
; Line 357
	jmp	$Exit$76
$LN62@BDF_Face_I:
; Line 359
	mov	DWORD PTR _options$[ebp], 1
; Line 360
	mov	DWORD PTR _options$[ebp+4], 1
; Line 361
	mov	DWORD PTR _options$[ebp+8], 0
; Line 362
	mov	DWORD PTR _options$[ebp+12], 8
; Line 364
	lea	edx, DWORD PTR _font$[ebp]
	push	edx
	lea	eax, DWORD PTR _options$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	_bdf_load_font
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 365
	mov	eax, DWORD PTR _error$[ebp]
	and	eax, 255				; 000000ffH
	cmp	eax, 176				; 000000b0H
	jne	SHORT $LN61@BDF_Face_I
$LN60@BDF_Face_I:
; Line 367
	mov	ecx, 4
	shl	ecx, 6
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN59@BDF_Face_I
	push	OFFSET $SG9084
	call	_FT_Message
	add	esp, 4
$LN59@BDF_Face_I:
	xor	edx, edx
	jne	SHORT $LN60@BDF_Face_I
; Line 368
	jmp	$Fail$77
	jmp	SHORT $LN56@BDF_Face_I
$LN61@BDF_Face_I:
; Line 370
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN56@BDF_Face_I
; Line 371
	jmp	$Exit$76
$LN56@BDF_Face_I:
; Line 374
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+140], ecx
; Line 382
	cmp	DWORD PTR _face_index$[ebp], 0
	jle	SHORT $LN54@BDF_Face_I
; Line 383
	push	OFFSET $SG9089
	call	_FT_Message
	add	esp, 4
; Line 384
	mov	edx, DWORD PTR _bdfface$[ebp]
	push	edx
	call	_BDF_Face_Done
	add	esp, 4
; Line 385
	push	OFFSET $SG9090
	push	385					; 00000181H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN67@BDF_Face_I
$LN54@BDF_Face_I:
; Line 389
	mov	DWORD PTR _prop$12[ebp], 0
$LN53@BDF_Face_I:
; Line 394
	mov	eax, 4
	shl	eax, 6
	cmp	DWORD PTR _ft_trace_levels[eax], 4
	jl	SHORT $LN52@BDF_Face_I
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	OFFSET $SG9097
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN52@BDF_Face_I:
	xor	edx, edx
	jne	SHORT $LN53@BDF_Face_I
$LN49@BDF_Face_I:
; Line 397
	mov	eax, 4
	shl	eax, 6
	cmp	DWORD PTR _ft_trace_levels[eax], 4
	jl	SHORT $LN48@BDF_Face_I
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	push	OFFSET $SG9102
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN48@BDF_Face_I:
	xor	edx, edx
	jne	SHORT $LN49@BDF_Face_I
; Line 399
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [eax], 1
; Line 400
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 404
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 146				; 00000092H
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 406
	push	OFFSET $SG9103
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 410
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN45@BDF_Face_I
	mov	eax, DWORD PTR _prop$12[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN45@BDF_Face_I
	mov	ecx, DWORD PTR _prop$12[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN45@BDF_Face_I
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 77					; 0000004dH
	je	SHORT $LN44@BDF_Face_I
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 109				; 0000006dH
	je	SHORT $LN44@BDF_Face_I
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 67					; 00000043H
	je	SHORT $LN44@BDF_Face_I
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 99					; 00000063H
	jne	SHORT $LN45@BDF_Face_I
$LN44@BDF_Face_I:
; Line 411
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	eax, DWORD PTR [edx+8]
	or	eax, 4
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN45@BDF_Face_I:
; Line 416
	push	OFFSET $SG9106
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 417
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN43@BDF_Face_I
	mov	eax, DWORD PTR _prop$12[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN43@BDF_Face_I
; Line 419
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_strdup
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [edx+20], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN42@BDF_Face_I
; Line 420
	jmp	$Exit$76
$LN42@BDF_Face_I:
; Line 422
	jmp	SHORT $LN41@BDF_Face_I
$LN43@BDF_Face_I:
; Line 423
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN41@BDF_Face_I:
; Line 425
	mov	ecx, DWORD PTR _face$[ebp]
	push	ecx
	call	_bdf_interpret_style
	add	esp, 4
	mov	DWORD PTR _error$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN40@BDF_Face_I
; Line 426
	jmp	$Exit$76
$LN40@BDF_Face_I:
; Line 430
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+48]
	add	eax, 1
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 432
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [edx+28], 1
; Line 433
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	1
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [edx+32], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN39@BDF_Face_I
; Line 434
	jmp	$Exit$76
$LN39@BDF_Face_I:
; Line 437
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _bsize$11[ebp], ecx
; Line 438
	xor	edx, edx
	mov	WORD PTR _resolution_x$10[ebp], dx
	xor	eax, eax
	mov	WORD PTR _resolution_y$9[ebp], ax
; Line 441
	push	16					; 00000010H
	push	0
	mov	ecx, DWORD PTR _bsize$11[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 443
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+44]
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	WORD PTR [edx], ax
; Line 445
	push	OFFSET $SG9121
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 446
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN38@BDF_Face_I
; Line 447
	mov	ecx, DWORD PTR _prop$12[ebp]
	mov	eax, DWORD PTR [ecx+12]
	add	eax, 5
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	WORD PTR [edx+2], ax
; Line 448
	jmp	SHORT $LN37@BDF_Face_I
$LN38@BDF_Face_I:
; Line 449
	mov	eax, DWORD PTR _bsize$11[ebp]
	movsx	eax, WORD PTR [eax]
	shl	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	WORD PTR [edx+2], ax
$LN37@BDF_Face_I:
; Line 451
	push	OFFSET $SG9126
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 452
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN36@BDF_Face_I
; Line 455
	mov	ecx, DWORD PTR _prop$12[ebp]
	mov	edx, DWORD PTR [ecx+12]
	shl	edx, 6
	imul	eax, edx, 7200
	add	eax, 36135				; 00008d27H
	cdq
	mov	ecx, 72270				; 00011a4eH
	idiv	ecx
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 456
	jmp	SHORT $LN35@BDF_Face_I
$LN36@BDF_Face_I:
; Line 457
	mov	eax, DWORD PTR _bsize$11[ebp]
	movsx	ecx, WORD PTR [eax+2]
	shl	ecx, 6
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN35@BDF_Face_I:
; Line 459
	push	OFFSET $SG9130
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 460
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN34@BDF_Face_I
; Line 461
	mov	ecx, DWORD PTR _prop$12[ebp]
	movsx	edx, WORD PTR [ecx+12]
	shl	edx, 6
	mov	eax, DWORD PTR _bsize$11[ebp]
	mov	DWORD PTR [eax+12], edx
$LN34@BDF_Face_I:
; Line 463
	push	OFFSET $SG9133
	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 464
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN33@BDF_Face_I
; Line 465
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR _resolution_x$10[ebp], ax
$LN33@BDF_Face_I:
; Line 467
	push	OFFSET $SG9136
	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$12[ebp], eax
; Line 468
	cmp	DWORD PTR _prop$12[ebp], 0
	je	SHORT $LN32@BDF_Face_I
; Line 469
	mov	edx, DWORD PTR _prop$12[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR _resolution_y$9[ebp], ax
$LN32@BDF_Face_I:
; Line 471
	mov	ecx, DWORD PTR _bsize$11[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN31@BDF_Face_I
; Line 473
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	eax, DWORD PTR _bsize$11[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+12], ecx
; Line 474
	movsx	edx, WORD PTR _resolution_y$9[ebp]
	test	edx, edx
	je	SHORT $LN31@BDF_Face_I
; Line 475
	movsx	eax, WORD PTR _resolution_y$9[ebp]
	mov	ecx, DWORD PTR _bsize$11[ebp]
	imul	eax, DWORD PTR [ecx+12]
	cdq
	mov	ecx, 72					; 00000048H
	idiv	ecx
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	DWORD PTR [edx+12], eax
$LN31@BDF_Face_I:
; Line 477
	movsx	eax, WORD PTR _resolution_x$10[ebp]
	test	eax, eax
	je	SHORT $LN29@BDF_Face_I
	movsx	ecx, WORD PTR _resolution_y$9[ebp]
	test	ecx, ecx
	je	SHORT $LN29@BDF_Face_I
; Line 478
	movsx	edx, WORD PTR _resolution_x$10[ebp]
	mov	eax, DWORD PTR _bsize$11[ebp]
	mov	ecx, edx
	imul	ecx, DWORD PTR [eax+12]
	movsx	esi, WORD PTR _resolution_y$9[ebp]
	mov	eax, ecx
	cdq
	idiv	esi
	mov	edx, DWORD PTR _bsize$11[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 479
	jmp	SHORT $LN28@BDF_Face_I
$LN29@BDF_Face_I:
; Line 480
	mov	eax, DWORD PTR _bsize$11[ebp]
	mov	ecx, DWORD PTR _bsize$11[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+8], edx
$LN28@BDF_Face_I:
; Line 485
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _cur$8[ebp], ecx
; Line 489
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	0
	push	8
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [ecx+144], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN27@BDF_Face_I
; Line 490
	jmp	$Exit$76
$LN27@BDF_Face_I:
; Line 492
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+164], 0
; Line 493
	mov	DWORD PTR _n$7[ebp], 0
	jmp	SHORT $LN26@BDF_Face_I
$LN25@BDF_Face_I:
	mov	eax, DWORD PTR _n$7[ebp]
	add	eax, 1
	mov	DWORD PTR _n$7[ebp], eax
$LN26@BDF_Face_I:
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR _n$7[ebp]
	cmp	edx, DWORD PTR [ecx+48]
	jae	$LN24@BDF_Face_I
; Line 495
	imul	eax, DWORD PTR _n$7[ebp], 36
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	ecx, DWORD PTR _n$7[ebp]
	mov	esi, DWORD PTR _cur$8[ebp]
	mov	eax, DWORD PTR [esi+eax+4]
	mov	DWORD PTR [edx+ecx*8], eax
$LN23@BDF_Face_I:
; Line 496
	mov	ecx, 4
	shl	ecx, 6
	cmp	DWORD PTR _ft_trace_levels[ecx], 4
	jl	SHORT $LN22@BDF_Face_I
	imul	edx, DWORD PTR _n$7[ebp], 36
	mov	eax, DWORD PTR _cur$8[ebp]
	mov	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	mov	edx, DWORD PTR _n$7[ebp]
	push	edx
	push	OFFSET $SG9155
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN22@BDF_Face_I:
	xor	eax, eax
	jne	SHORT $LN23@BDF_Face_I
; Line 497
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	eax, DWORD PTR _n$7[ebp]
	mov	cx, WORD PTR _n$7[ebp]
	mov	WORD PTR [edx+eax*8+4], cx
; Line 499
	imul	edx, DWORD PTR _n$7[ebp], 36
	mov	eax, DWORD PTR _cur$8[ebp]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax+edx+4]
	cmp	edx, DWORD PTR [ecx+36]
	jne	SHORT $LN19@BDF_Face_I
; Line 501
	cmp	DWORD PTR _n$7[ebp], -1
	jae	SHORT $LN16@BDF_Face_I
; Line 502
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR _n$7[ebp]
	mov	DWORD PTR [eax+164], ecx
; Line 503
	jmp	SHORT $LN19@BDF_Face_I
$LN16@BDF_Face_I:
; Line 505
	mov	edx, 4
	shl	edx, 6
	cmp	DWORD PTR _ft_trace_levels[edx], 1
	jl	SHORT $LN15@BDF_Face_I
	mov	eax, DWORD PTR _n$7[ebp]
	push	eax
	push	OFFSET $SG9165
	call	_FT_Message
	add	esp, 8
$LN15@BDF_Face_I:
	xor	ecx, ecx
	jne	SHORT $LN16@BDF_Face_I
$LN19@BDF_Face_I:
; Line 507
	jmp	$LN25@BDF_Face_I
$LN24@BDF_Face_I:
; Line 512
	mov	DWORD PTR _charset_registry$6[ebp], 0
	mov	DWORD PTR _charset_encoding$5[ebp], 0
; Line 513
	mov	BYTE PTR _unicode_charmap$4[ebp], 0
; Line 517
	push	OFFSET $SG9169
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _charset_registry$6[ebp], eax
; Line 519
	push	OFFSET $SG9170
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _charset_encoding$5[ebp], eax
; Line 520
	cmp	DWORD PTR _charset_registry$6[ebp], 0
	je	$LN12@BDF_Face_I
	cmp	DWORD PTR _charset_encoding$5[ebp], 0
	je	$LN12@BDF_Face_I
; Line 525
	mov	ecx, DWORD PTR _charset_registry$6[ebp]
	cmp	DWORD PTR [ecx+4], 1
	jne	$LN12@BDF_Face_I
	mov	edx, DWORD PTR _charset_encoding$5[ebp]
	cmp	DWORD PTR [edx+4], 1
	jne	$LN12@BDF_Face_I
	mov	eax, DWORD PTR _charset_registry$6[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN12@BDF_Face_I
	mov	ecx, DWORD PTR _charset_encoding$5[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	$LN12@BDF_Face_I
; Line 533
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _charset_encoding$5[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_strdup
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [ecx+132], eax
	cmp	DWORD PTR _error$[ebp], 0
	jne	SHORT $LN9@BDF_Face_I
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _charset_registry$6[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_strdup
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [ecx+136], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN10@BDF_Face_I
$LN9@BDF_Face_I:
; Line 534
	jmp	$Exit$76
$LN10@BDF_Face_I:
; Line 538
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+136]
	mov	DWORD PTR _s$3[ebp], eax
; Line 541
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _s$3[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 105				; 00000069H
	je	SHORT $LN7@BDF_Face_I
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _s$3[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 73					; 00000049H
	jne	$LN8@BDF_Face_I
$LN7@BDF_Face_I:
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _s$3[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 115				; 00000073H
	je	SHORT $LN6@BDF_Face_I
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _s$3[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 83					; 00000053H
	jne	SHORT $LN8@BDF_Face_I
$LN6@BDF_Face_I:
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _s$3[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 111				; 0000006fH
	je	SHORT $LN5@BDF_Face_I
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _s$3[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 79					; 0000004fH
	jne	SHORT $LN8@BDF_Face_I
$LN5@BDF_Face_I:
; Line 543
	mov	eax, DWORD PTR _s$3[ebp]
	add	eax, 3
	mov	DWORD PTR _s$3[ebp], eax
; Line 546
	push	OFFSET $SG9186
	mov	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@BDF_Face_I
	push	OFFSET $SG9187
	mov	edx, DWORD PTR _s$3[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@BDF_Face_I
	push	OFFSET $SG9188
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@BDF_Face_I
$LN3@BDF_Face_I:
; Line 547
	mov	BYTE PTR _unicode_charmap$4[ebp], 1
$LN8@BDF_Face_I:
; Line 554
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR _charmap$2[ebp], edx
; Line 555
	mov	DWORD PTR _charmap$2[ebp+4], 0
; Line 557
	xor	eax, eax
	mov	WORD PTR _charmap$2[ebp+8], ax
; Line 558
	xor	ecx, ecx
	mov	WORD PTR _charmap$2[ebp+10], cx
; Line 560
	movzx	edx, BYTE PTR _unicode_charmap$4[ebp]
	test	edx, edx
	je	SHORT $LN2@BDF_Face_I
; Line 562
	mov	DWORD PTR _charmap$2[ebp+4], 1970170211	; 756e6963H
; Line 563
	mov	eax, 3
	mov	WORD PTR _charmap$2[ebp+8], ax
; Line 564
	mov	ecx, 1
	mov	WORD PTR _charmap$2[ebp+10], cx
$LN2@BDF_Face_I:
; Line 567
	push	0
	lea	edx, DWORD PTR _charmap$2[ebp]
	push	edx
	push	0
	push	OFFSET _bdf_cmap_class
	call	_FT_CMap_New
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 576
	jmp	SHORT $Exit$76
$LN12@BDF_Face_I:
; Line 586
	mov	eax, DWORD PTR _face$[ebp]
	mov	DWORD PTR _charmap$1[ebp], eax
; Line 587
	mov	DWORD PTR _charmap$1[ebp+4], 1094995778	; 41444f42H
; Line 588
	mov	ecx, 7
	mov	WORD PTR _charmap$1[ebp+8], cx
; Line 589
	xor	edx, edx
	mov	WORD PTR _charmap$1[ebp+10], dx
; Line 591
	push	0
	lea	eax, DWORD PTR _charmap$1[ebp]
	push	eax
	push	0
	push	OFFSET _bdf_cmap_class
	call	_FT_CMap_New
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 594
	mov	ecx, DWORD PTR _bdfface$[ebp]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $Exit$76
; Line 595
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	edx, DWORD PTR [eax+edx]
	mov	DWORD PTR [ecx+92], edx
$Exit$76:
; Line 601
	mov	eax, DWORD PTR _error$[ebp]
	jmp	SHORT $LN67@BDF_Face_I
$Fail$77:
; Line 604
	mov	eax, DWORD PTR _bdfface$[ebp]
	push	eax
	call	_BDF_Face_Done
	add	esp, 4
; Line 605
	push	OFFSET $SG9199
	push	605					; 0000025dH
	push	2
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 2
$LN67@BDF_Face_I:
; Line 606
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN75@BDF_Face_I
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 140				; 0000008cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN75@BDF_Face_I:
	DD	5
	DD	$LN74@BDF_Face_I
$LN74@BDF_Face_I:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN69@BDF_Face_I
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN70@BDF_Face_I
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN71@BDF_Face_I
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN72@BDF_Face_I
	DD	-136					; ffffff78H
	DD	12					; 0000000cH
	DD	$LN73@BDF_Face_I
$LN73@BDF_Face_I:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN72@BDF_Face_I:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
$LN71@BDF_Face_I:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
$LN70@BDF_Face_I:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN69@BDF_Face_I:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_BDF_Face_Init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -8						; size = 4
_face$ = -4						; size = 4
_bdfface$ = 8						; size = 4
_BDF_Face_Done PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 312
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR _face$[ebp], eax
; Line 316
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN22@BDF_Face_D
; Line 317
	jmp	$LN23@BDF_Face_D
$LN22@BDF_Face_D:
; Line 319
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR _memory$[ebp], edx
; Line 321
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	call	_bdf_free_font
	add	esp, 4
$LN21@BDF_Face_D:
; Line 323
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+144], 0
	xor	eax, eax
	jne	SHORT $LN21@BDF_Face_D
$LN18@BDF_Face_D:
; Line 325
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+132]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [ecx+132], 0
	xor	edx, edx
	jne	SHORT $LN18@BDF_Face_D
$LN15@BDF_Face_D:
; Line 326
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _face$[ebp]
	mov	DWORD PTR [eax+136], 0
	xor	ecx, ecx
	jne	SHORT $LN15@BDF_Face_D
$LN12@BDF_Face_D:
; Line 327
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [edx+20], 0
	xor	eax, eax
	jne	SHORT $LN12@BDF_Face_D
$LN9@BDF_Face_D:
; Line 328
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [ecx+24], 0
	xor	edx, edx
	jne	SHORT $LN9@BDF_Face_D
$LN6@BDF_Face_D:
; Line 330
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _bdfface$[ebp]
	mov	DWORD PTR [eax+32], 0
	xor	ecx, ecx
	jne	SHORT $LN6@BDF_Face_D
$LN3@BDF_Face_D:
; Line 332
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+140]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+140], 0
	xor	eax, eax
	jne	SHORT $LN3@BDF_Face_D
$LN23@BDF_Face_D:
; Line 333
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_BDF_Face_Done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -104						; size = 4
_mm$1 = -100						; size = 4
_src$2 = -96						; size = 4
_s$3 = -92						; size = 4
_lengths$ = -84						; size = 16
_len$ = -64						; size = 4
_nn$ = -60						; size = 4
_strings$ = -52						; size = 16
_prop$ = -32						; size = 4
_font$ = -28						; size = 4
_memory$ = -24						; size = 4
_face$ = -20						; size = 4
_error$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_bdf$ = 8						; size = 4
_bdf_interpret_style PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 104				; 00000068H
	push	edi
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 26					; 0000001aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 201
	mov	DWORD PTR _error$[ebp], 0
; Line 202
	mov	eax, DWORD PTR _bdf$[ebp]
	mov	DWORD PTR _face$[ebp], eax
; Line 203
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR _memory$[ebp], edx
; Line 204
	mov	eax, DWORD PTR _bdf$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _font$[ebp], ecx
; Line 207
	mov	DWORD PTR _strings$[ebp], 0
	mov	DWORD PTR _strings$[ebp+4], 0
	mov	DWORD PTR _strings$[ebp+8], 0
	mov	DWORD PTR _strings$[ebp+12], 0
; Line 211
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 213
	push	OFFSET $SG8969
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$[ebp], eax
; Line 217
	cmp	DWORD PTR _prop$[ebp], 0
	je	$LN23@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [ecx+4], 1
	jne	$LN23@bdf_interp
	mov	edx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	$LN23@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 79					; 0000004fH
	je	SHORT $LN22@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 111				; 0000006fH
	je	SHORT $LN22@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 73					; 00000049H
	je	SHORT $LN22@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 105				; 00000069H
	jne	SHORT $LN23@bdf_interp
$LN22@bdf_interp:
; Line 219
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	or	ecx, 1
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 222
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 79					; 0000004fH
	je	SHORT $LN26@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 111				; 0000006fH
	je	SHORT $LN26@bdf_interp
	mov	DWORD PTR tv136[ebp], OFFSET $SG8975
	jmp	SHORT $LN27@bdf_interp
$LN26@bdf_interp:
	mov	DWORD PTR tv136[ebp], OFFSET $SG8974
$LN27@bdf_interp:
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR _strings$[ebp+eax], ecx
$LN23@bdf_interp:
; Line 225
	push	OFFSET $SG8977
	mov	edx, DWORD PTR _font$[ebp]
	push	edx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$[ebp], eax
; Line 228
	cmp	DWORD PTR _prop$[ebp], 0
	je	SHORT $LN21@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN21@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN21@bdf_interp
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 66					; 00000042H
	je	SHORT $LN20@bdf_interp
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 98					; 00000062H
	jne	SHORT $LN21@bdf_interp
$LN20@bdf_interp:
; Line 230
	mov	edx, DWORD PTR _face$[ebp]
	mov	eax, DWORD PTR [edx+12]
	or	eax, 2
	mov	ecx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 231
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR _strings$[ebp+edx], OFFSET $SG8981
$LN21@bdf_interp:
; Line 234
	push	OFFSET $SG8983
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$[ebp], eax
; Line 237
	cmp	DWORD PTR _prop$[ebp], 0
	je	SHORT $LN19@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [ecx+4], 1
	jne	SHORT $LN19@bdf_interp
	mov	edx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN19@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN19@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 78					; 0000004eH
	je	SHORT $LN19@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 110				; 0000006eH
	je	SHORT $LN19@bdf_interp
; Line 238
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _strings$[ebp+ecx], eax
$LN19@bdf_interp:
; Line 240
	push	OFFSET $SG8987
	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	mov	DWORD PTR _prop$[ebp], eax
; Line 243
	cmp	DWORD PTR _prop$[ebp], 0
	je	SHORT $LN18@bdf_interp
	mov	edx, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [edx+4], 1
	jne	SHORT $LN18@bdf_interp
	mov	eax, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN18@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN18@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 78					; 0000004eH
	je	SHORT $LN18@bdf_interp
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 110				; 0000006eH
	je	SHORT $LN18@bdf_interp
; Line 244
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _strings$[ebp+edx], ecx
$LN18@bdf_interp:
; Line 246
	mov	DWORD PTR _len$[ebp], 0
	mov	DWORD PTR _nn$[ebp], 0
	jmp	SHORT $LN17@bdf_interp
$LN16@bdf_interp:
	mov	edx, DWORD PTR _nn$[ebp]
	add	edx, 1
	mov	DWORD PTR _nn$[ebp], edx
$LN17@bdf_interp:
	cmp	DWORD PTR _nn$[ebp], 4
	jae	SHORT $LN15@bdf_interp
; Line 248
	mov	eax, DWORD PTR _nn$[ebp]
	mov	DWORD PTR _lengths$[ebp+eax*4], 0
; Line 249
	mov	ecx, DWORD PTR _nn$[ebp]
	cmp	DWORD PTR _strings$[ebp+ecx*4], 0
	je	SHORT $LN14@bdf_interp
; Line 251
	mov	edx, DWORD PTR _nn$[ebp]
	mov	eax, DWORD PTR _strings$[ebp+edx*4]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _nn$[ebp]
	mov	DWORD PTR _lengths$[ebp+ecx*4], eax
; Line 252
	mov	edx, DWORD PTR _nn$[ebp]
	mov	eax, DWORD PTR _lengths$[ebp+edx*4]
	mov	ecx, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _len$[ebp], edx
$LN14@bdf_interp:
; Line 254
	jmp	SHORT $LN16@bdf_interp
$LN15@bdf_interp:
; Line 256
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN13@bdf_interp
; Line 258
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR _strings$[ebp+ecx], OFFSET $SG8996
; Line 259
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _strings$[ebp+eax]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	edx, 4
	imul	ecx, edx, 0
	mov	DWORD PTR _lengths$[ebp+ecx], eax
; Line 260
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _lengths$[ebp+eax]
	add	ecx, 1
	mov	DWORD PTR _len$[ebp], ecx
$LN13@bdf_interp:
; Line 267
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _face$[ebp]
	mov	DWORD PTR [edx+24], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN12@bdf_interp
; Line 268
	mov	eax, DWORD PTR _error$[ebp]
	jmp	$LN24@bdf_interp
$LN12@bdf_interp:
; Line 270
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _s$3[ebp], ecx
; Line 272
	mov	DWORD PTR _nn$[ebp], 0
	jmp	SHORT $LN11@bdf_interp
$LN10@bdf_interp:
	mov	edx, DWORD PTR _nn$[ebp]
	add	edx, 1
	mov	DWORD PTR _nn$[ebp], edx
$LN11@bdf_interp:
	cmp	DWORD PTR _nn$[ebp], 4
	jae	$LN9@bdf_interp
; Line 274
	mov	eax, DWORD PTR _nn$[ebp]
	mov	ecx, DWORD PTR _strings$[ebp+eax*4]
	mov	DWORD PTR _src$2[ebp], ecx
; Line 277
	mov	edx, DWORD PTR _nn$[ebp]
	mov	eax, DWORD PTR _lengths$[ebp+edx*4]
	mov	DWORD PTR _len$[ebp], eax
; Line 279
	cmp	DWORD PTR _src$2[ebp], 0
	jne	SHORT $LN8@bdf_interp
; Line 280
	jmp	SHORT $LN10@bdf_interp
$LN8@bdf_interp:
; Line 283
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR _s$3[ebp]
	cmp	edx, DWORD PTR [ecx+24]
	je	SHORT $LN7@bdf_interp
; Line 284
	mov	eax, DWORD PTR _s$3[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
	mov	ecx, DWORD PTR _s$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$3[ebp], ecx
$LN7@bdf_interp:
; Line 286
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _src$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$3[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 290
	cmp	DWORD PTR _nn$[ebp], 0
	je	SHORT $LN5@bdf_interp
	cmp	DWORD PTR _nn$[ebp], 3
	jne	SHORT $LN6@bdf_interp
$LN5@bdf_interp:
; Line 295
	mov	DWORD PTR _mm$1[ebp], 0
	jmp	SHORT $LN4@bdf_interp
$LN3@bdf_interp:
	mov	edx, DWORD PTR _mm$1[ebp]
	add	edx, 1
	mov	DWORD PTR _mm$1[ebp], edx
$LN4@bdf_interp:
	mov	eax, DWORD PTR _mm$1[ebp]
	cmp	eax, DWORD PTR _len$[ebp]
	jae	SHORT $LN6@bdf_interp
; Line 296
	mov	ecx, DWORD PTR _s$3[ebp]
	add	ecx, DWORD PTR _mm$1[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN1@bdf_interp
; Line 297
	mov	eax, DWORD PTR _s$3[ebp]
	add	eax, DWORD PTR _mm$1[ebp]
	mov	BYTE PTR [eax], 45			; 0000002dH
$LN1@bdf_interp:
; Line 298
	jmp	SHORT $LN3@bdf_interp
$LN6@bdf_interp:
; Line 300
	mov	ecx, DWORD PTR _s$3[ebp]
	add	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _s$3[ebp], ecx
; Line 301
	jmp	$LN10@bdf_interp
$LN9@bdf_interp:
; Line 302
	mov	edx, DWORD PTR _s$3[ebp]
	mov	BYTE PTR [edx], 0
; Line 305
	mov	eax, DWORD PTR _error$[ebp]
$LN24@bdf_interp:
; Line 306
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@bdf_interp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@bdf_interp:
	DD	3
	DD	$LN31@bdf_interp
$LN31@bdf_interp:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN28@bdf_interp
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN29@bdf_interp
	DD	-84					; ffffffacH
	DD	16					; 00000010H
	DD	$LN30@bdf_interp
$LN30@bdf_interp:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	115					; 00000073H
	DB	0
$LN29@bdf_interp:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN28@bdf_interp:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_bdf_interpret_style ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_code$1 = -32						; size = 4
_charcode$ = -28					; size = 4
_result$ = -24						; size = 2
_mid$ = -20						; size = 4
_max$ = -16						; size = 4
_min$ = -12						; size = 4
_encodings$ = -8					; size = 4
_cmap$ = -4						; size = 4
_bdfcmap$ = 8						; size = 4
_acharcode$ = 12					; size = 4
_bdf_cmap_char_next PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 133
	mov	eax, DWORD PTR _bdfcmap$[ebp]
	mov	DWORD PTR _cmap$[ebp], eax
; Line 134
	mov	ecx, DWORD PTR _cmap$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _encodings$[ebp], edx
; Line 136
	xor	eax, eax
	mov	WORD PTR _result$[ebp], ax
; Line 137
	mov	ecx, DWORD PTR _acharcode$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	DWORD PTR _charcode$[ebp], edx
; Line 140
	mov	DWORD PTR _min$[ebp], 0
; Line 141
	mov	eax, DWORD PTR _cmap$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _max$[ebp], ecx
$LN12@bdf_cmap_c:
; Line 143
	mov	edx, DWORD PTR _min$[ebp]
	cmp	edx, DWORD PTR _max$[ebp]
	jae	SHORT $LN11@bdf_cmap_c
; Line 148
	mov	eax, DWORD PTR _min$[ebp]
	add	eax, DWORD PTR _max$[ebp]
	shr	eax, 1
	mov	DWORD PTR _mid$[ebp], eax
; Line 149
	mov	ecx, DWORD PTR _mid$[ebp]
	mov	edx, DWORD PTR _encodings$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	DWORD PTR _code$1[ebp], eax
; Line 151
	mov	ecx, DWORD PTR _charcode$[ebp]
	cmp	ecx, DWORD PTR _code$1[ebp]
	jne	SHORT $LN10@bdf_cmap_c
; Line 155
	mov	edx, DWORD PTR _mid$[ebp]
	mov	eax, DWORD PTR _encodings$[ebp]
	movzx	ecx, WORD PTR [eax+edx*8+4]
	add	ecx, 1
	mov	WORD PTR _result$[ebp], cx
; Line 156
	jmp	SHORT $Exit$15
$LN10@bdf_cmap_c:
; Line 159
	mov	edx, DWORD PTR _charcode$[ebp]
	cmp	edx, DWORD PTR _code$1[ebp]
	jae	SHORT $LN9@bdf_cmap_c
; Line 160
	mov	eax, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _max$[ebp], eax
; Line 161
	jmp	SHORT $LN8@bdf_cmap_c
$LN9@bdf_cmap_c:
; Line 162
	mov	ecx, DWORD PTR _mid$[ebp]
	add	ecx, 1
	mov	DWORD PTR _min$[ebp], ecx
$LN8@bdf_cmap_c:
; Line 163
	jmp	SHORT $LN12@bdf_cmap_c
$LN11@bdf_cmap_c:
; Line 165
	mov	DWORD PTR _charcode$[ebp], 0
; Line 166
	mov	edx, DWORD PTR _cmap$[ebp]
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR [edx+16]
	jae	SHORT $Exit$15
; Line 168
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR _encodings$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8]
	mov	DWORD PTR _charcode$[ebp], eax
; Line 169
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR _encodings$[ebp]
	movzx	eax, WORD PTR [edx+ecx*8+4]
	add	eax, 1
	mov	WORD PTR _result$[ebp], ax
$Exit$15:
; Line 173
	cmp	DWORD PTR _charcode$[ebp], -1
	jbe	SHORT $LN6@bdf_cmap_c
$LN5@bdf_cmap_c:
; Line 175
	mov	ecx, 4
	shl	ecx, 6
	cmp	DWORD PTR _ft_trace_levels[ecx], 1
	jl	SHORT $LN4@bdf_cmap_c
	push	OFFSET $SG8940
	call	_FT_Message
	add	esp, 4
$LN4@bdf_cmap_c:
	xor	edx, edx
	jne	SHORT $LN5@bdf_cmap_c
; Line 176
	mov	eax, DWORD PTR _acharcode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	jmp	SHORT $LN1@bdf_cmap_c
$LN6@bdf_cmap_c:
; Line 180
	mov	ecx, DWORD PTR _acharcode$[ebp]
	mov	edx, DWORD PTR _charcode$[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@bdf_cmap_c:
; Line 181
	movzx	eax, WORD PTR _result$[ebp]
; Line 182
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_cmap_char_next ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_code$1 = -28						; size = 4
_result$ = -24						; size = 2
_mid$ = -20						; size = 4
_max$ = -16						; size = 4
_min$ = -12						; size = 4
_encodings$ = -8					; size = 4
_cmap$ = -4						; size = 4
_bdfcmap$ = 8						; size = 4
_charcode$ = 12						; size = 4
_bdf_cmap_char_index PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 94
	mov	eax, DWORD PTR _bdfcmap$[ebp]
	mov	DWORD PTR _cmap$[ebp], eax
; Line 95
	mov	ecx, DWORD PTR _cmap$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR _encodings$[ebp], edx
; Line 97
	xor	eax, eax
	mov	WORD PTR _result$[ebp], ax
; Line 100
	mov	DWORD PTR _min$[ebp], 0
; Line 101
	mov	ecx, DWORD PTR _cmap$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _max$[ebp], edx
$LN5@bdf_cmap_c:
; Line 103
	mov	eax, DWORD PTR _min$[ebp]
	cmp	eax, DWORD PTR _max$[ebp]
	jae	SHORT $LN4@bdf_cmap_c
; Line 108
	mov	ecx, DWORD PTR _min$[ebp]
	add	ecx, DWORD PTR _max$[ebp]
	shr	ecx, 1
	mov	DWORD PTR _mid$[ebp], ecx
; Line 109
	mov	edx, DWORD PTR _mid$[ebp]
	mov	eax, DWORD PTR _encodings$[ebp]
	mov	ecx, DWORD PTR [eax+edx*8]
	mov	DWORD PTR _code$1[ebp], ecx
; Line 111
	mov	edx, DWORD PTR _charcode$[ebp]
	cmp	edx, DWORD PTR _code$1[ebp]
	jne	SHORT $LN3@bdf_cmap_c
; Line 115
	mov	eax, DWORD PTR _mid$[ebp]
	mov	ecx, DWORD PTR _encodings$[ebp]
	movzx	edx, WORD PTR [ecx+eax*8+4]
	add	edx, 1
	mov	WORD PTR _result$[ebp], dx
; Line 116
	jmp	SHORT $LN4@bdf_cmap_c
$LN3@bdf_cmap_c:
; Line 119
	mov	eax, DWORD PTR _charcode$[ebp]
	cmp	eax, DWORD PTR _code$1[ebp]
	jae	SHORT $LN2@bdf_cmap_c
; Line 120
	mov	ecx, DWORD PTR _mid$[ebp]
	mov	DWORD PTR _max$[ebp], ecx
; Line 121
	jmp	SHORT $LN1@bdf_cmap_c
$LN2@bdf_cmap_c:
; Line 122
	mov	edx, DWORD PTR _mid$[ebp]
	add	edx, 1
	mov	DWORD PTR _min$[ebp], edx
$LN1@bdf_cmap_c:
; Line 123
	jmp	SHORT $LN5@bdf_cmap_c
$LN4@bdf_cmap_c:
; Line 125
	movzx	eax, WORD PTR _result$[ebp]
; Line 126
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_cmap_char_index ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_cmap$ = -4						; size = 4
_bdfcmap$ = 8						; size = 4
_bdf_cmap_done PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 81
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 82
	mov	eax, DWORD PTR _bdfcmap$[ebp]
	mov	DWORD PTR _cmap$[ebp], eax
; Line 85
	mov	ecx, DWORD PTR _cmap$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 86
	mov	edx, DWORD PTR _cmap$[ebp]
	mov	DWORD PTR [edx+16], 0
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_cmap_done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_face$ = -8						; size = 4
_cmap$ = -4						; size = 4
_bdfcmap$ = 8						; size = 4
_init_data$ = 12					; size = 4
_bdf_cmap_init PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdfdrivr.c
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 67
	mov	eax, DWORD PTR _bdfcmap$[ebp]
	mov	DWORD PTR _cmap$[ebp], eax
; Line 68
	mov	ecx, DWORD PTR _cmap$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _face$[ebp], edx
; Line 69
	mov	eax, DWORD PTR _init_data$[ebp]
	mov	DWORD PTR _init_data$[ebp], eax
; Line 72
	mov	ecx, DWORD PTR _face$[ebp]
	mov	edx, DWORD PTR [ecx+140]
	mov	eax, DWORD PTR _cmap$[ebp]
	mov	ecx, DWORD PTR [edx+52]
	mov	DWORD PTR [eax+16], ecx
; Line 73
	mov	edx, DWORD PTR _cmap$[ebp]
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR [edx+20], ecx
; Line 75
	xor	eax, eax
; Line 76
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_cmap_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv635 = -240						; size = 4
tv579 = -236						; size = 4
tv508 = -232						; size = 4
tv423 = -228						; size = 4
tv322 = -224						; size = 4
tv274 = -220						; size = 4
tv251 = -216						; size = 4
tv173 = -212						; size = 4
tv93 = -208						; size = 4
_nbuf$1 = -200						; size = 128
_shift$2 = -68						; size = 2
_i$3 = -64						; size = 2
_bitcount$4 = -60					; size = 2
_prop$5 = -56						; size = 4
_i$6 = -52						; size = 4
_error$ = -44						; size = 4
_memory$ = -36						; size = 4
_s$ = -32						; size = 4
_font$ = -28						; size = 4
_p$ = -24						; size = 4
_next$ = -20						; size = 4
_slen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_line$ = 8						; size = 4
_linelen$ = 12						; size = 4
_lineno$ = 16						; size = 4
_call_data$ = 20					; size = 4
_client_data$ = 24					; size = 4
__bdf_parse_start PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 2090
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2097
	mov	DWORD PTR _memory$[ebp], 0
; Line 2098
	mov	DWORD PTR _error$[ebp], 0
; Line 2100
	mov	eax, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR _lineno$[ebp], eax
; Line 2103
	mov	ecx, DWORD PTR _call_data$[ebp]
	mov	DWORD PTR _next$[ebp], ecx
; Line 2104
	mov	edx, DWORD PTR _client_data$[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 2106
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN57@bdf_parse_
; Line 2107
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+278664]
	mov	DWORD PTR _memory$[ebp], eax
$LN57@bdf_parse_:
; Line 2111
	mov	esi, esp
	push	7
	push	OFFSET $SG8480
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN61@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN60@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN60@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN60@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN60@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN61@bdf_parse_
$LN60@bdf_parse_:
	mov	DWORD PTR tv93[ebp], 0
	jmp	SHORT $LN62@bdf_parse_
$LN61@bdf_parse_:
	mov	DWORD PTR tv93[ebp], 1
$LN62@bdf_parse_:
	cmp	DWORD PTR tv93[ebp], 0
	jne	SHORT $LN56@bdf_parse_
; Line 2113
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN55@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN55@bdf_parse_
; Line 2115
	mov	ecx, DWORD PTR _linelen$[ebp]
	sub	ecx, 7
	mov	DWORD PTR _linelen$[ebp], ecx
; Line 2117
	mov	edx, DWORD PTR _line$[ebp]
	add	edx, 7
	mov	DWORD PTR _s$[ebp], edx
; Line 2118
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN54@bdf_parse_
; Line 2120
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 2121
	mov	eax, DWORD PTR _linelen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _linelen$[ebp], eax
$LN54@bdf_parse_:
; Line 2124
	mov	ecx, DWORD PTR _linelen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	__bdf_add_comment
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 2125
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN55@bdf_parse_
; Line 2126
	jmp	$Exit$88
$LN55@bdf_parse_:
; Line 2130
	jmp	$Exit$88
$LN56@bdf_parse_:
; Line 2133
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1
	jne	$LN52@bdf_parse_
; Line 2135
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139320]
	mov	DWORD PTR _memory$[ebp], edx
; Line 2137
	mov	esi, esp
	push	9
	push	OFFSET $SG8487
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN64@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN63@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 9
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN63@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN63@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN63@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 9
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN64@bdf_parse_
$LN63@bdf_parse_:
	mov	DWORD PTR tv173[ebp], 0
	jmp	SHORT $LN65@bdf_parse_
$LN64@bdf_parse_:
	mov	DWORD PTR tv173[ebp], 1
$LN65@bdf_parse_:
	cmp	DWORD PTR tv173[ebp], 0
	je	SHORT $LN51@bdf_parse_
; Line 2141
	push	OFFSET $SG8488
	push	2141					; 0000085dH
	push	176					; 000000b0H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 176				; 000000b0H
	mov	DWORD PTR _error$[ebp], eax
; Line 2142
	jmp	$Exit$88
$LN51@bdf_parse_:
; Line 2145
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], 1
; Line 2146
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+32], 0
	mov	DWORD PTR _font$[ebp], 0
; Line 2148
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	278692					; 000440a4H
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _font$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN50@bdf_parse_
; Line 2149
	jmp	$Exit$88
$LN50@bdf_parse_:
; Line 2150
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+32], edx
; Line 2152
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139320]
	mov	DWORD PTR [eax+278664], edx
; Line 2153
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+139320], 0
; Line 2160
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	add	edx, 278676				; 00044094H
	push	edx
	call	_hash_init
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 2161
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN49@bdf_parse_
; Line 2162
	jmp	$Exit$88
$LN49@bdf_parse_:
; Line 2164
	mov	DWORD PTR _i$6[ebp], 0
	mov	DWORD PTR _prop$5[ebp], OFFSET __bdf_properties
	jmp	SHORT $LN48@bdf_parse_
$LN47@bdf_parse_:
	mov	eax, DWORD PTR _i$6[ebp]
	add	eax, 1
	mov	DWORD PTR _i$6[ebp], eax
	mov	ecx, DWORD PTR _prop$5[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _prop$5[ebp], ecx
$LN48@bdf_parse_:
	mov	edx, DWORD PTR _i$6[ebp]
	cmp	edx, DWORD PTR __num_bdf_properties
	jae	SHORT $LN46@bdf_parse_
; Line 2167
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	add	ecx, 278676				; 00044094H
	push	ecx
	mov	edx, DWORD PTR _i$6[ebp]
	push	edx
	mov	eax, DWORD PTR _prop$5[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_hash_insert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2168
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN45@bdf_parse_
; Line 2169
	jmp	$Exit$88
$LN45@bdf_parse_:
; Line 2170
	jmp	SHORT $LN47@bdf_parse_
$LN46@bdf_parse_:
; Line 2173
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+128], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN44@bdf_parse_
; Line 2174
	jmp	$Exit$88
$LN44@bdf_parse_:
; Line 2175
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	call	_hash_init
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 2176
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN43@bdf_parse_
; Line 2177
	jmp	$Exit$88
$LN43@bdf_parse_:
; Line 2178
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [edx+12]
	mov	DWORD PTR [ecx+28], edx
; Line 2179
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx+36], -1
; Line 2181
	jmp	$Exit$88
$LN52@bdf_parse_:
; Line 2185
	mov	esi, esp
	push	15					; 0000000fH
	push	OFFSET $SG8505
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN67@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 15
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN66@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN66@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 15
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN66@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 15
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN66@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN67@bdf_parse_
$LN66@bdf_parse_:
	mov	DWORD PTR tv251[ebp], 0
	jmp	SHORT $LN68@bdf_parse_
$LN67@bdf_parse_:
	mov	DWORD PTR tv251[ebp], 1
$LN68@bdf_parse_:
	cmp	DWORD PTR tv251[ebp], 0
	jne	$LN42@bdf_parse_
; Line 2187
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 8
	jne	SHORT $LN41@bdf_parse_
; Line 2190
	push	OFFSET $SG8507
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8508
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 2191
	push	OFFSET $SG8509
	push	2191					; 0000088fH
	push	179					; 000000b3H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 179				; 000000b3H
	mov	DWORD PTR _error$[ebp], eax
; Line 2192
	jmp	$Exit$88
$LN41@bdf_parse_:
; Line 2195
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8511
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2196
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN40@bdf_parse_
; Line 2197
	jmp	$Exit$88
$LN40@bdf_parse_:
; Line 2199
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv274[ebp], eax
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR tv274[ebp]
	mov	DWORD PTR [ecx+72], edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR tv274[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2201
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	0
	push	16					; 00000010H
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+80], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN39@bdf_parse_
; Line 2203
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx+72], 0
; Line 2204
	jmp	$Exit$88
$LN39@bdf_parse_:
; Line 2207
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 2208
	mov	edx, DWORD PTR _next$[ebp]
	mov	DWORD PTR [edx], OFFSET __bdf_parse_properties
; Line 2210
	jmp	$Exit$88
$LN42@bdf_parse_:
; Line 2214
	mov	esi, esp
	push	15					; 0000000fH
	push	OFFSET $SG8517
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN70@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN69@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 15
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN69@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 15
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN69@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN69@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 15
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN70@bdf_parse_
$LN69@bdf_parse_:
	mov	DWORD PTR tv322[ebp], 0
	jmp	SHORT $LN71@bdf_parse_
$LN70@bdf_parse_:
	mov	DWORD PTR tv322[ebp], 1
$LN71@bdf_parse_:
	cmp	DWORD PTR tv322[ebp], 0
	jne	$LN38@bdf_parse_
; Line 2216
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 4
	jne	SHORT $LN37@bdf_parse_
; Line 2219
	push	OFFSET $SG8519
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8520
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 2220
	push	OFFSET $SG8521
	push	2220					; 000008acH
	push	178					; 000000b2H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 178				; 000000b2H
	mov	DWORD PTR _error$[ebp], eax
; Line 2221
	jmp	$Exit$88
$LN37@bdf_parse_:
; Line 2224
	mov	eax, DWORD PTR _linelen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	OFFSET $SG8523
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2225
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN36@bdf_parse_
; Line 2226
	jmp	$Exit$88
$LN36@bdf_parse_:
; Line 2228
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+4], ax
; Line 2229
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+6], ax
; Line 2231
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+139304]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	mov	WORD PTR [ecx+8], ax
; Line 2232
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+10], ax
; Line 2235
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [ecx+6]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	eax, WORD PTR [ecx+10]
	add	edx, eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [ecx+32]
	mov	WORD PTR [eax+12], dx
; Line 2237
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+10]
	neg	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+14], ax
; Line 2239
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 2241
	jmp	$Exit$88
$LN38@bdf_parse_:
; Line 2245
	mov	esi, esp
	push	4
	push	OFFSET $SG8528
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN73@bdf_parse_
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN72@bdf_parse_
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN72@bdf_parse_
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN72@bdf_parse_
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN72@bdf_parse_
	mov	ecx, 1
	shl	ecx, 2
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN73@bdf_parse_
$LN72@bdf_parse_:
	mov	DWORD PTR tv423[ebp], 0
	jmp	SHORT $LN74@bdf_parse_
$LN73@bdf_parse_:
	mov	DWORD PTR tv423[ebp], 1
$LN74@bdf_parse_:
	cmp	DWORD PTR tv423[ebp], 0
	jne	$LN35@bdf_parse_
; Line 2247
	mov	ecx, DWORD PTR _linelen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	push	OFFSET $SG8530
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 139304				; 00022028H
	push	eax
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2248
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN34@bdf_parse_
; Line 2249
	jmp	$Exit$88
$LN34@bdf_parse_:
; Line 2250
	push	1
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_shift
	add	esp, 8
; Line 2252
	lea	edx, DWORD PTR _slen$[ebp]
	push	edx
	push	32					; 00000020H
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 139304				; 00022028H
	push	eax
	call	__bdf_list_join
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$[ebp], eax
; Line 2254
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN32@bdf_parse_
; Line 2256
	push	OFFSET $SG8533
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8534
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 2257
	push	OFFSET $SG8535
	push	2257					; 000008d1H
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
; Line 2258
	jmp	$Exit$88
$LN32@bdf_parse_:
; Line 2262
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx], 0
	xor	edx, edx
	jne	SHORT $LN32@bdf_parse_
; Line 2264
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _slen$[ebp]
	add	ecx, 1
	push	ecx
	push	0
	push	1
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN29@bdf_parse_
; Line 2265
	jmp	$Exit$88
$LN29@bdf_parse_:
; Line 2266
	mov	eax, DWORD PTR _slen$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2270
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	__bdf_set_default_spacing
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 2271
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN28@bdf_parse_
; Line 2272
	jmp	$Exit$88
$LN28@bdf_parse_:
; Line 2274
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	or	edx, 2
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], edx
; Line 2276
	jmp	$Exit$88
$LN35@bdf_parse_:
; Line 2280
	mov	esi, esp
	push	4
	push	OFFSET $SG8545
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN76@bdf_parse_
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN75@bdf_parse_
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN75@bdf_parse_
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN75@bdf_parse_
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN75@bdf_parse_
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN76@bdf_parse_
$LN75@bdf_parse_:
	mov	DWORD PTR tv508[ebp], 0
	jmp	SHORT $LN77@bdf_parse_
$LN76@bdf_parse_:
	mov	DWORD PTR tv508[ebp], 1
$LN77@bdf_parse_:
	cmp	DWORD PTR tv508[ebp], 0
	jne	$LN27@bdf_parse_
; Line 2282
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2
	jne	SHORT $LN26@bdf_parse_
; Line 2285
	push	OFFSET $SG8547
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8548
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 2286
	push	OFFSET $SG8549
	push	2286					; 000008eeH
	push	177					; 000000b1H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 177				; 000000b1H
	mov	DWORD PTR _error$[ebp], eax
; Line 2287
	jmp	$Exit$88
$LN26@bdf_parse_:
; Line 2290
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8551
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2291
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN25@bdf_parse_
; Line 2292
	jmp	$Exit$88
$LN25@bdf_parse_:
; Line 2294
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+16], eax
; Line 2295
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+20], eax
; Line 2296
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+139304]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+24], eax
; Line 2299
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+139312], 5
	jne	$LN24@bdf_parse_
; Line 2304
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+278662], ax
; Line 2307
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	dx, WORD PTR [ecx+278662]
	mov	WORD PTR _shift$2[ebp], dx
; Line 2308
	xor	eax, eax
	mov	WORD PTR _bitcount$4[ebp], ax
; Line 2309
	xor	ecx, ecx
	mov	WORD PTR _i$3[ebp], cx
	jmp	SHORT $LN23@bdf_parse_
$LN22@bdf_parse_:
	mov	dx, WORD PTR _i$3[ebp]
	add	dx, 1
	mov	WORD PTR _i$3[ebp], dx
$LN23@bdf_parse_:
	movzx	eax, WORD PTR _shift$2[ebp]
	test	eax, eax
	jle	SHORT $LN21@bdf_parse_
; Line 2311
	movzx	ecx, WORD PTR _shift$2[ebp]
	and	ecx, 1
	je	SHORT $LN20@bdf_parse_
; Line 2312
	mov	dx, WORD PTR _i$3[ebp]
	mov	WORD PTR _bitcount$4[ebp], dx
$LN20@bdf_parse_:
; Line 2313
	mov	ax, WORD PTR _shift$2[ebp]
	shr	ax, 1
	mov	WORD PTR _shift$2[ebp], ax
; Line 2314
	jmp	SHORT $LN22@bdf_parse_
$LN21@bdf_parse_:
; Line 2316
	movzx	ecx, WORD PTR _bitcount$4[ebp]
	cmp	ecx, 3
	jle	SHORT $LN78@bdf_parse_
	mov	DWORD PTR tv579[ebp], 8
	jmp	SHORT $LN79@bdf_parse_
$LN78@bdf_parse_:
	movzx	ecx, WORD PTR _bitcount$4[ebp]
	mov	edx, 1
	shl	edx, cl
	mov	DWORD PTR tv579[ebp], edx
$LN79@bdf_parse_:
	mov	ax, WORD PTR tv579[ebp]
	mov	WORD PTR _shift$2[ebp], ax
; Line 2318
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movzx	eax, WORD PTR [edx+278662]
	movzx	ecx, WORD PTR _shift$2[ebp]
	cmp	eax, ecx
	jg	SHORT $LN18@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movzx	ecx, WORD PTR [eax+278662]
	movzx	edx, WORD PTR _shift$2[ebp]
	cmp	ecx, edx
	je	SHORT $LN19@bdf_parse_
$LN18@bdf_parse_:
; Line 2321
	movzx	eax, WORD PTR _shift$2[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+278662], ax
$LN17@bdf_parse_:
; Line 2322
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN16@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movzx	ecx, WORD PTR [eax+278662]
	push	ecx
	push	OFFSET $SG8570
	call	_FT_Message
	add	esp, 8
$LN16@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN17@bdf_parse_
$LN19@bdf_parse_:
; Line 2325
	jmp	SHORT $LN13@bdf_parse_
$LN24@bdf_parse_:
; Line 2326
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278662], dx
$LN13@bdf_parse_:
; Line 2328
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 2330
	jmp	$Exit$88
$LN27@bdf_parse_:
; Line 2334
	mov	esi, esp
	push	5
	push	OFFSET $SG8573
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN81@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN80@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 5
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN80@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN80@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN80@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 5
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN81@bdf_parse_
$LN80@bdf_parse_:
	mov	DWORD PTR tv635[ebp], 0
	jmp	SHORT $LN82@bdf_parse_
$LN81@bdf_parse_:
	mov	DWORD PTR tv635[ebp], 1
$LN82@bdf_parse_:
	cmp	DWORD PTR tv635[ebp], 0
	jne	$LN12@bdf_parse_
; Line 2339
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 8
	jne	SHORT $LN11@bdf_parse_
; Line 2342
	push	OFFSET $SG8576
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8577
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 2343
	push	OFFSET $SG8578
	push	2343					; 00000927H
	push	179					; 000000b3H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 179				; 000000b3H
	mov	DWORD PTR _error$[ebp], eax
; Line 2344
	jmp	$Exit$88
$LN11@bdf_parse_:
; Line 2349
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [ecx+12]
	mov	DWORD PTR [eax+40], ecx
; Line 2350
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [eax+12]
	mov	esi, esp
	push	ecx
	push	OFFSET $SG8579
	lea	edx, DWORD PTR _nbuf$1[ebp]
	push	edx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2352
	mov	eax, DWORD PTR _lineno$[ebp]
	push	eax
	lea	ecx, DWORD PTR _nbuf$1[ebp]
	push	ecx
	push	OFFSET $SG8581
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2353
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN9@bdf_parse_
; Line 2354
	jmp	$Exit$88
$LN9@bdf_parse_:
; Line 2355
	mov	ecx, 4
	imul	edx, ecx, 65
	cmp	DWORD PTR _ft_trace_levels[edx], 2
	jl	SHORT $LN8@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	edx, WORD PTR [ecx+12]
	push	edx
	push	OFFSET $SG8587
	call	_FT_Message
	add	esp, 8
$LN8@bdf_parse_:
	xor	eax, eax
	jne	SHORT $LN9@bdf_parse_
; Line 2357
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	edx, WORD PTR [edx+14]
	mov	DWORD PTR [ecx+44], edx
; Line 2358
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	edx, WORD PTR [ecx+14]
	mov	esi, esp
	push	edx
	push	OFFSET $SG8588
	lea	eax, DWORD PTR _nbuf$1[ebp]
	push	eax
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2360
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	lea	edx, DWORD PTR _nbuf$1[ebp]
	push	edx
	push	OFFSET $SG8590
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2361
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@bdf_parse_
; Line 2362
	jmp	SHORT $Exit$88
$LN4@bdf_parse_:
; Line 2363
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN3@bdf_parse_
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+14]
	push	eax
	push	OFFSET $SG8596
	call	_FT_Message
	add	esp, 8
$LN3@bdf_parse_:
	xor	ecx, ecx
	jne	SHORT $LN4@bdf_parse_
; Line 2365
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, 1
	mov	WORD PTR [eax+278660], cx
; Line 2367
	mov	edx, DWORD PTR _next$[ebp]
	mov	DWORD PTR [edx], OFFSET __bdf_parse_glyphs
; Line 2370
	mov	DWORD PTR _error$[ebp], -1
; Line 2371
	jmp	SHORT $Exit$88
$LN12@bdf_parse_:
; Line 2374
	mov	eax, DWORD PTR _lineno$[ebp]
	push	eax
	push	OFFSET $SG8597
	call	_FT_Message
	add	esp, 8
; Line 2375
	push	OFFSET $SG8598
	push	2375					; 00000947H
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
$Exit$88:
; Line 2378
	mov	eax, DWORD PTR _error$[ebp]
; Line 2379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN87@bdf_parse_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN87@bdf_parse_:
	DD	3
	DD	$LN86@bdf_parse_
$LN86@bdf_parse_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN83@bdf_parse_
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN84@bdf_parse_
	DD	-200					; ffffff38H
	DD	128					; 00000080H
	DD	$LN85@bdf_parse_
$LN85@bdf_parse_:
	DB	110					; 0000006eH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN84@bdf_parse_:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN83@bdf_parse_:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
__bdf_parse_start ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv246 = -200						; size = 4
tv219 = -196						; size = 4
tv89 = -192						; size = 4
_error$ = -188						; size = 4
_nbuf$ = -180						; size = 128
_value$ = -44						; size = 4
_name$ = -32						; size = 4
_p$ = -24						; size = 4
_next$ = -20						; size = 4
_vlen$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_line$ = 8						; size = 4
_linelen$ = 12						; size = 4
_lineno$ = 16						; size = 4
_call_data$ = 20					; size = 4
_client_data$ = 24					; size = 4
__bdf_parse_properties PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1985
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1992
	mov	DWORD PTR _error$[ebp], 0
; Line 1994
	mov	eax, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR _lineno$[ebp], eax
; Line 1997
	mov	ecx, DWORD PTR _call_data$[ebp]
	mov	DWORD PTR _next$[ebp], ecx
; Line 1998
	mov	edx, DWORD PTR _client_data$[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 2001
	mov	esi, esp
	push	13					; 0000000dH
	push	OFFSET $SG8418
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN27@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 13
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN26@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 13
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN26@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 13
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN26@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 13
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN26@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 13
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN27@bdf_parse_
$LN26@bdf_parse_:
	mov	DWORD PTR tv89[ebp], 0
	jmp	SHORT $LN28@bdf_parse_
$LN27@bdf_parse_:
	mov	DWORD PTR tv89[ebp], 1
$LN28@bdf_parse_:
	cmp	DWORD PTR tv89[ebp], 0
	jne	$LN23@bdf_parse_
; Line 2009
	push	OFFSET $SG8420
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	test	eax, eax
	jne	$LN22@bdf_parse_
; Line 2011
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [eax+12]
	mov	DWORD PTR [edx+40], eax
; Line 2012
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+12]
	mov	esi, esp
	push	eax
	push	OFFSET $SG8421
	lea	ecx, DWORD PTR _nbuf$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2014
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	lea	eax, DWORD PTR _nbuf$[ebp]
	push	eax
	push	OFFSET $SG8423
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2015
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN20@bdf_parse_
; Line 2016
	jmp	$Exit$41
$LN20@bdf_parse_:
; Line 2018
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN19@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	push	OFFSET $SG8430
	call	_FT_Message
	add	esp, 8
$LN19@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN20@bdf_parse_
; Line 2019
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278660], dx
$LN22@bdf_parse_:
; Line 2022
	push	OFFSET $SG8432
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_bdf_get_font_property
	add	esp, 8
	test	eax, eax
	jne	$LN16@bdf_parse_
; Line 2024
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [eax+14]
	mov	DWORD PTR [edx+44], eax
; Line 2025
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+14]
	mov	esi, esp
	push	eax
	push	OFFSET $SG8433
	lea	ecx, DWORD PTR _nbuf$[ebp]
	push	ecx
	call	DWORD PTR __imp__sprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2027
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	lea	eax, DWORD PTR _nbuf$[ebp]
	push	eax
	push	OFFSET $SG8435
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2028
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN14@bdf_parse_
; Line 2029
	jmp	$Exit$41
$LN14@bdf_parse_:
; Line 2031
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN13@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [eax+14]
	push	ecx
	push	OFFSET $SG8441
	call	_FT_Message
	add	esp, 8
$LN13@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN14@bdf_parse_
; Line 2032
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278660], dx
$LN16@bdf_parse_:
; Line 2035
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 2036
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], OFFSET __bdf_parse_glyphs
; Line 2038
	jmp	$Exit$41
$LN23@bdf_parse_:
; Line 2042
	mov	esi, esp
	push	21					; 00000015H
	push	OFFSET $SG8443
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN30@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 21
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN29@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 21
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN29@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 21
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN29@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 21
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN29@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 21
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN30@bdf_parse_
$LN29@bdf_parse_:
	mov	DWORD PTR tv219[ebp], 0
	jmp	SHORT $LN31@bdf_parse_
$LN30@bdf_parse_:
	mov	DWORD PTR tv219[ebp], 1
$LN31@bdf_parse_:
	cmp	DWORD PTR tv219[ebp], 0
	jne	SHORT $LN10@bdf_parse_
; Line 2043
	jmp	$Exit$41
$LN10@bdf_parse_:
; Line 2047
	mov	esi, esp
	push	7
	push	OFFSET $SG8445
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN33@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN32@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN32@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN32@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN32@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN33@bdf_parse_
$LN32@bdf_parse_:
	mov	DWORD PTR tv246[ebp], 0
	jmp	SHORT $LN34@bdf_parse_
$LN33@bdf_parse_:
	mov	DWORD PTR tv246[ebp], 1
$LN34@bdf_parse_:
	cmp	DWORD PTR tv246[ebp], 0
	jne	SHORT $LN9@bdf_parse_
; Line 2049
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR _value$[ebp], ecx
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR _name$[ebp], edx
; Line 2050
	mov	eax, DWORD PTR _value$[ebp]
	add	eax, 7
	mov	DWORD PTR _value$[ebp], eax
; Line 2051
	mov	ecx, DWORD PTR _value$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN8@bdf_parse_
; Line 2052
	mov	eax, DWORD PTR _value$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _value$[ebp]
	add	ecx, 1
	mov	DWORD PTR _value$[ebp], ecx
$LN8@bdf_parse_:
; Line 2053
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2054
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN7@bdf_parse_
; Line 2055
	jmp	$Exit$41
$LN7@bdf_parse_:
; Line 2057
	jmp	$Exit$41
$LN9@bdf_parse_:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	__bdf_is_atom
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN5@bdf_parse_
; Line 2059
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2060
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@bdf_parse_
; Line 2061
	jmp	$Exit$41
$LN4@bdf_parse_:
; Line 2063
	jmp	$Exit$41
$LN5@bdf_parse_:
; Line 2065
	mov	eax, DWORD PTR _linelen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	OFFSET $SG8453
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2066
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@bdf_parse_
; Line 2067
	jmp	SHORT $Exit$41
$LN2@bdf_parse_:
; Line 2068
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+139304]
	mov	ecx, DWORD PTR [ecx+eax]
	mov	DWORD PTR _name$[ebp], ecx
; Line 2070
	push	1
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_shift
	add	esp, 8
; Line 2071
	lea	eax, DWORD PTR _vlen$[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_join
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _value$[ebp], eax
; Line 2073
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	call	__bdf_add_property
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
$Exit$41:
; Line 2079
	mov	eax, DWORD PTR _error$[ebp]
; Line 2080
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@bdf_parse_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN40@bdf_parse_:
	DD	4
	DD	$LN39@bdf_parse_
$LN39@bdf_parse_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN35@bdf_parse_
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN36@bdf_parse_
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN37@bdf_parse_
	DD	-180					; ffffff4cH
	DD	128					; 00000080H
	DD	$LN38@bdf_parse_
$LN38@bdf_parse_:
	DB	110					; 0000006eH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN37@bdf_parse_:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN36@bdf_parse_:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN35@bdf_parse_:
	DB	118					; 00000076H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
__bdf_parse_properties ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv1110 = -136						; size = 4
tv1014 = -132						; size = 4
tv1002 = -128						; size = 4
tv990 = -124						; size = 4
tv971 = -120						; size = 4
tv959 = -116						; size = 4
tv893 = -112						; size = 4
tv824 = -108						; size = 4
tv775 = -104						; size = 4
tv408 = -100						; size = 4
tv327 = -96						; size = 4
tv288 = -92						; size = 4
tv241 = -88						; size = 4
tv183 = -84						; size = 4
tv164 = -80						; size = 4
tv91 = -76						; size = 4
_bitmap_size$1 = -72					; size = 4
_sw$2 = -68						; size = 2
_error$ = -60						; size = 4
_memory$ = -52						; size = 4
_font$ = -48						; size = 4
_glyph$ = -44						; size = 4
_p$ = -40						; size = 4
_nibbles$ = -36						; size = 4
_slen$ = -28						; size = 4
_i$ = -20						; size = 4
_bp$ = -16						; size = 4
_s$ = -12						; size = 4
_mask_index$ = -8					; size = 4
_c$ = -4						; size = 4
_line$ = 8						; size = 4
_linelen$ = 12						; size = 4
_lineno$ = 16						; size = 4
_call_data$ = 20					; size = 4
_client_data$ = 24					; size = 4
__bdf_parse_glyphs PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1482
	push	ebp
	mov	ebp, esp
	sub	esp, 136				; 00000088H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1493
	mov	DWORD PTR _error$[ebp], 0
; Line 1495
	mov	eax, DWORD PTR _call_data$[ebp]
	mov	DWORD PTR _call_data$[ebp], eax
; Line 1496
	mov	ecx, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR _lineno$[ebp], ecx
; Line 1499
	mov	edx, DWORD PTR _client_data$[ebp]
	mov	DWORD PTR _p$[ebp], edx
; Line 1501
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _font$[ebp], ecx
; Line 1502
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+278664]
	mov	DWORD PTR _memory$[ebp], eax
; Line 1505
	mov	esi, esp
	push	7
	push	OFFSET $SG8189
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN114@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN113@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN113@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN113@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN113@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN114@bdf_parse_
$LN113@bdf_parse_:
	mov	DWORD PTR tv91[ebp], 0
	jmp	SHORT $LN115@bdf_parse_
$LN114@bdf_parse_:
	mov	DWORD PTR tv91[ebp], 1
$LN115@bdf_parse_:
	cmp	DWORD PTR tv91[ebp], 0
	jne	SHORT $LN110@bdf_parse_
; Line 1507
	mov	ecx, DWORD PTR _linelen$[ebp]
	sub	ecx, 7
	mov	DWORD PTR _linelen$[ebp], ecx
; Line 1509
	mov	edx, DWORD PTR _line$[ebp]
	add	edx, 7
	mov	DWORD PTR _s$[ebp], edx
; Line 1510
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN109@bdf_parse_
; Line 1512
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 1513
	mov	eax, DWORD PTR _linelen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _linelen$[ebp], eax
$LN109@bdf_parse_:
; Line 1515
	mov	ecx, DWORD PTR _linelen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	__bdf_add_comment
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 1516
	jmp	$Exit$157
$LN110@bdf_parse_:
; Line 1520
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 32					; 00000020H
	jne	$LN108@bdf_parse_
; Line 1522
	mov	esi, esp
	push	5
	push	OFFSET $SG8194
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN117@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 5
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN116@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN116@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN116@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 5
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN116@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 9
	jne	SHORT $LN117@bdf_parse_
$LN116@bdf_parse_:
	mov	DWORD PTR tv164[ebp], 0
	jmp	SHORT $LN118@bdf_parse_
$LN117@bdf_parse_:
	mov	DWORD PTR tv164[ebp], 1
$LN118@bdf_parse_:
	cmp	DWORD PTR tv164[ebp], 0
	je	SHORT $LN107@bdf_parse_
; Line 1524
	push	OFFSET $SG8195
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8196
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1525
	push	OFFSET $SG8197
	push	1525					; 000005f5H
	push	180					; 000000b4H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 180				; 000000b4H
	mov	DWORD PTR _error$[ebp], eax
; Line 1526
	jmp	$Exit$157
$LN107@bdf_parse_:
; Line 1529
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8199
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1530
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN106@bdf_parse_
; Line 1531
	jmp	$Exit$157
$LN106@bdf_parse_:
; Line 1532
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv183[ebp], eax
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR tv183[ebp]
	mov	DWORD PTR [eax+48], ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR tv183[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1535
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN105@bdf_parse_
; Line 1536
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+48], 64			; 00000040H
$LN105@bdf_parse_:
; Line 1540
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+4], 1114112		; 00110000H
	jb	SHORT $LN104@bdf_parse_
; Line 1542
	push	OFFSET $SG8203
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8204
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1543
	push	OFFSET $SG8205
	push	1543					; 00000607H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 1544
	jmp	$Exit$157
$LN104@bdf_parse_:
; Line 1547
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	0
	push	36					; 00000024H
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+56], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN103@bdf_parse_
; Line 1548
	jmp	$Exit$157
$LN103@bdf_parse_:
; Line 1550
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1552
	jmp	$Exit$157
$LN108@bdf_parse_:
; Line 1556
	mov	esi, esp
	push	7
	push	OFFSET $SG8210
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN120@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN119@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN119@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN119@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN119@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN120@bdf_parse_
$LN119@bdf_parse_:
	mov	DWORD PTR tv241[ebp], 0
	jmp	SHORT $LN121@bdf_parse_
$LN120@bdf_parse_:
	mov	DWORD PTR tv241[ebp], 1
$LN121@bdf_parse_:
	cmp	DWORD PTR tv241[ebp], 0
	jne	SHORT $LN102@bdf_parse_
; Line 1558
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4032				; 00000fc0H
	je	SHORT $LN101@bdf_parse_
; Line 1561
	push	OFFSET $SG8212
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8213
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1562
	push	OFFSET $SG8214
	push	1562					; 0000061aH
	push	186					; 000000baH
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 186				; 000000baH
	mov	DWORD PTR _error$[ebp], eax
; Line 1563
	jmp	$Exit$157
$LN101@bdf_parse_:
; Line 1570
	mov	esi, esp
	push	OFFSET _by_encoding
	push	36					; 00000024H
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+52]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1572
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1574
	jmp	$Exit$157
$LN102@bdf_parse_:
; Line 1578
	mov	esi, esp
	push	7
	push	OFFSET $SG8218
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN123@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN122@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN122@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN122@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN122@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN123@bdf_parse_
$LN122@bdf_parse_:
	mov	DWORD PTR tv288[ebp], 0
	jmp	SHORT $LN124@bdf_parse_
$LN123@bdf_parse_:
	mov	DWORD PTR tv288[ebp], 1
$LN124@bdf_parse_:
	cmp	DWORD PTR tv288[ebp], 0
	jne	SHORT $LN100@bdf_parse_
; Line 1580
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 1581
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -4033				; fffff03fH
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1583
	jmp	$Exit$157
$LN100@bdf_parse_:
; Line 1590
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 64					; 00000040H
	je	SHORT $LN99@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+28], -1
	jne	SHORT $LN99@bdf_parse_
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN99@bdf_parse_
; Line 1591
	jmp	$Exit$157
$LN99@bdf_parse_:
; Line 1594
	mov	esi, esp
	push	9
	push	OFFSET $SG8221
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN126@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN125@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 9
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN125@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN125@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 9
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN125@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 9
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN126@bdf_parse_
$LN125@bdf_parse_:
	mov	DWORD PTR tv327[ebp], 0
	jmp	SHORT $LN127@bdf_parse_
$LN126@bdf_parse_:
	mov	DWORD PTR tv327[ebp], 1
$LN127@bdf_parse_:
	cmp	DWORD PTR tv327[ebp], 0
	jne	$LN98@bdf_parse_
$LN97@bdf_parse_:
; Line 1598
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+24], 0
	xor	ecx, ecx
	jne	SHORT $LN97@bdf_parse_
; Line 1600
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8227
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1601
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN94@bdf_parse_
; Line 1602
	jmp	$Exit$157
$LN94@bdf_parse_:
; Line 1604
	push	1
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_shift
	add	esp, 8
; Line 1606
	lea	eax, DWORD PTR _slen$[ebp]
	push	eax
	push	32					; 00000020H
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_join
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$[ebp], eax
; Line 1608
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN93@bdf_parse_
; Line 1610
	push	OFFSET $SG8230
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8231
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1611
	push	OFFSET $SG8232
	push	1611					; 0000064bH
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
; Line 1612
	jmp	$Exit$157
$LN93@bdf_parse_:
; Line 1615
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _slen$[ebp]
	add	ecx, 1
	push	ecx
	push	0
	push	1
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+24], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN92@bdf_parse_
; Line 1616
	jmp	$Exit$157
$LN92@bdf_parse_:
; Line 1618
	mov	edx, DWORD PTR _slen$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1620
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
$LN91@bdf_parse_:
; Line 1622
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 4
	jl	SHORT $LN90@bdf_parse_
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	eax, DWORD PTR _lineno$[ebp]
	push	eax
	push	OFFSET $SG8240
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN90@bdf_parse_:
	xor	ecx, ecx
	jne	SHORT $LN91@bdf_parse_
; Line 1624
	jmp	$Exit$157
$LN98@bdf_parse_:
; Line 1628
	mov	esi, esp
	push	8
	push	OFFSET $SG8242
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN129@bdf_parse_
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN128@bdf_parse_
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN128@bdf_parse_
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN128@bdf_parse_
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 13					; 0000000dH
	je	SHORT $LN128@bdf_parse_
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN129@bdf_parse_
$LN128@bdf_parse_:
	mov	DWORD PTR tv408[ebp], 0
	jmp	SHORT $LN130@bdf_parse_
$LN129@bdf_parse_:
	mov	DWORD PTR tv408[ebp], 1
$LN130@bdf_parse_:
	cmp	DWORD PTR tv408[ebp], 0
	jne	$LN87@bdf_parse_
; Line 1630
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 64					; 00000040H
	jne	SHORT $LN86@bdf_parse_
; Line 1633
	push	OFFSET $SG8244
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8245
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1634
	push	OFFSET $SG8246
	push	1634					; 00000662H
	push	181					; 000000b5H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 181				; 000000b5H
	mov	DWORD PTR _error$[ebp], eax
; Line 1635
	jmp	$Exit$157
$LN86@bdf_parse_:
; Line 1638
	mov	eax, DWORD PTR _linelen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	push	OFFSET $SG8248
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1639
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN85@bdf_parse_
; Line 1640
	jmp	$Exit$157
$LN85@bdf_parse_:
; Line 1642
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+28], eax
; Line 1646
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+28], -1
	jge	SHORT $LN84@bdf_parse_
; Line 1647
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+28], -1
$LN84@bdf_parse_:
; Line 1650
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+28], -1
	jne	SHORT $LN83@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+139312], 2
	jbe	SHORT $LN83@bdf_parse_
; Line 1651
	push	10					; 0000000aH
	push	0
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN83@bdf_parse_:
; Line 1653
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+28], -1
	jge	SHORT $LN81@bdf_parse_
; Line 1654
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+28], -1
$LN81@bdf_parse_:
; Line 1656
	mov	ecx, 4
	imul	edx, ecx, 65
	cmp	DWORD PTR _ft_trace_levels[edx], 4
	jl	SHORT $LN80@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	OFFSET $SG8257
	call	_FT_Message
	add	esp, 8
$LN80@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN81@bdf_parse_
; Line 1662
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jle	SHORT $LN77@bdf_parse_
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+28], 1114112		; 00110000H
	jb	SHORT $LN77@bdf_parse_
; Line 1664
	push	OFFSET $SG8261
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8262
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1665
	push	OFFSET $SG8263
	push	1665					; 00000681H
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
; Line 1666
	jmp	$Exit$157
$LN77@bdf_parse_:
; Line 1672
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jl	$LN76@bdf_parse_
; Line 1674
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	sar	edx, 5
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _p$[ebp]
	and	eax, DWORD PTR [ecx+edx*4+40]
	je	SHORT $LN75@bdf_parse_
$LN74@bdf_parse_:
; Line 1679
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN73@bdf_parse_
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	push	OFFSET $SG8270
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN73@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN74@bdf_parse_
; Line 1680
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+28], -1
; Line 1681
	mov	ecx, 1
	mov	edx, DWORD PTR _font$[ebp]
	mov	WORD PTR [edx+278660], cx
; Line 1683
	jmp	SHORT $LN76@bdf_parse_
$LN75@bdf_parse_:
; Line 1684
	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [eax+28]
	sar	edx, 5
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _p$[ebp]
	or	eax, DWORD PTR [ecx+edx*4+40]
	mov	edx, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	sar	ecx, 5
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+ecx*4+40], eax
$LN76@bdf_parse_:
; Line 1687
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jl	$LN69@bdf_parse_
; Line 1691
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [ecx+52]
	cmp	eax, DWORD PTR [edx+48]
	jne	SHORT $LN68@bdf_parse_
; Line 1695
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+56]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	add	edx, 64					; 00000040H
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	push	36					; 00000024H
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+56], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN67@bdf_parse_
; Line 1696
	jmp	$Exit$157
$LN67@bdf_parse_:
; Line 1698
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+48]
	add	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+48], eax
$LN68@bdf_parse_:
; Line 1701
	mov	edx, DWORD PTR _font$[ebp]
	imul	eax, DWORD PTR [edx+52], 36
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR _glyph$[ebp], eax
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+52]
	add	eax, 1
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+52], eax
; Line 1702
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx], ecx
; Line 1703
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR [edx+4], ecx
; Line 1706
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+24], 0
; Line 1708
	jmp	$LN66@bdf_parse_
$LN69@bdf_parse_:
; Line 1712
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx+4], 0
	je	$LN61@bdf_parse_
; Line 1715
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [edx+64]
	cmp	ecx, DWORD PTR [eax+60]
	jne	SHORT $LN64@bdf_parse_
; Line 1719
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+60]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	push	36					; 00000024H
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+68], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN63@bdf_parse_
; Line 1720
	jmp	$Exit$157
$LN63@bdf_parse_:
; Line 1722
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+60]
	add	eax, 4
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+60], eax
$LN64@bdf_parse_:
; Line 1725
	mov	edx, DWORD PTR _font$[ebp]
	imul	eax, DWORD PTR [edx+64], 36
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+68]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 1726
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR [edx], ecx
; Line 1727
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR [edx+4], ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+64]
	add	eax, 1
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 1729
	jmp	SHORT $LN62@bdf_parse_
$LN61@bdf_parse_:
; Line 1732
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+24], 0
	xor	eax, eax
	jne	SHORT $LN61@bdf_parse_
$LN62@bdf_parse_:
; Line 1734
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+24], 0
$LN66@bdf_parse_:
; Line 1739
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1073741823				; 3fffffffH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1741
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1743
	jmp	$Exit$157
$LN87@bdf_parse_:
; Line 1747
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+28], -1
	jne	SHORT $LN58@bdf_parse_
; Line 1748
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	imul	edx, ecx, 36
	mov	eax, DWORD PTR _font$[ebp]
	add	edx, DWORD PTR [eax+68]
	mov	DWORD PTR _glyph$[ebp], edx
; Line 1749
	jmp	SHORT $LN57@bdf_parse_
$LN58@bdf_parse_:
; Line 1750
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+52]
	sub	edx, 1
	imul	eax, edx, 36
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+56]
	mov	DWORD PTR _glyph$[ebp], eax
$LN57@bdf_parse_:
; Line 1753
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 2048				; 00000800H
	je	$LN56@bdf_parse_
; Line 1757
	mov	ecx, DWORD PTR _glyph$[ebp]
	movzx	edx, WORD PTR [ecx+14]
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+8], edx
	jb	SHORT $LN55@bdf_parse_
; Line 1759
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, -2147483648			; 80000000H
	jne	SHORT $LN54@bdf_parse_
$LN53@bdf_parse_:
; Line 1761
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN52@bdf_parse_
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET $SG8298
	call	_FT_Message
	add	esp, 8
$LN52@bdf_parse_:
	xor	ecx, ecx
	jne	SHORT $LN53@bdf_parse_
; Line 1762
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1763
	mov	edx, 1
	mov	eax, DWORD PTR _font$[ebp]
	mov	WORD PTR [eax+278660], dx
$LN54@bdf_parse_:
; Line 1766
	jmp	$Exit$157
$LN55@bdf_parse_:
; Line 1771
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shl	edx, 1
	mov	DWORD PTR _nibbles$[ebp], edx
; Line 1772
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [eax+8]
	imul	edx, DWORD PTR [ecx+28]
	mov	eax, DWORD PTR _glyph$[ebp]
	add	edx, DWORD PTR [eax+24]
	mov	DWORD PTR _bp$[ebp], edx
; Line 1774
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN49@bdf_parse_
$LN48@bdf_parse_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN49@bdf_parse_:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _nibbles$[ebp]
	jae	SHORT $LN47@bdf_parse_
; Line 1776
	mov	eax, DWORD PTR _line$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
; Line 1777
	movzx	edx, BYTE PTR _c$[ebp]
	sar	edx, 3
	movzx	eax, BYTE PTR _hdigits[edx]
	mov	ecx, DWORD PTR _c$[ebp]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	and	eax, edx
	jne	SHORT $LN46@bdf_parse_
; Line 1778
	jmp	SHORT $LN47@bdf_parse_
$LN46@bdf_parse_:
; Line 1779
	mov	eax, DWORD PTR _bp$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 4
	mov	edx, DWORD PTR _c$[ebp]
	movzx	eax, BYTE PTR _a2i[edx]
	add	ecx, eax
	mov	edx, DWORD PTR _bp$[ebp]
	mov	BYTE PTR [edx], cl
; Line 1780
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _nibbles$[ebp]
	jae	SHORT $LN45@bdf_parse_
	mov	ecx, DWORD PTR _i$[ebp]
	and	ecx, 1
	je	SHORT $LN45@bdf_parse_
; Line 1781
	mov	edx, DWORD PTR _bp$[ebp]
	add	edx, 1
	mov	DWORD PTR _bp$[ebp], edx
	mov	eax, DWORD PTR _bp$[ebp]
	mov	BYTE PTR [eax], 0
$LN45@bdf_parse_:
; Line 1782
	jmp	SHORT $LN48@bdf_parse_
$LN47@bdf_parse_:
; Line 1787
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _nibbles$[ebp]
	jae	SHORT $LN44@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1073741824				; 40000000H
	jne	SHORT $LN44@bdf_parse_
$LN43@bdf_parse_:
; Line 1789
	mov	ecx, 4
	imul	edx, ecx, 65
	cmp	DWORD PTR _ft_trace_levels[edx], 2
	jl	SHORT $LN42@bdf_parse_
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG8311
	call	_FT_Message
	add	esp, 8
$LN42@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN43@bdf_parse_
; Line 1790
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 1073741824				; 40000000H
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1791
	mov	eax, 1
	mov	ecx, DWORD PTR _font$[ebp]
	mov	WORD PTR [ecx+278660], ax
$LN44@bdf_parse_:
; Line 1795
	mov	edx, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [edx+12]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movzx	ecx, WORD PTR [edx+278662]
	imul	eax, ecx
	and	eax, 7
	mov	DWORD PTR _mask_index$[ebp], eax
; Line 1796
	mov	edx, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [edx+12]
	test	eax, eax
	je	SHORT $LN39@bdf_parse_
; Line 1797
	mov	ecx, DWORD PTR _mask_index$[ebp]
	movzx	edx, BYTE PTR _nibble_mask[ecx]
	mov	eax, DWORD PTR _bp$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, edx
	mov	edx, DWORD PTR _bp$[ebp]
	mov	BYTE PTR [edx], cl
$LN39@bdf_parse_:
; Line 1802
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _nibbles$[ebp]
	jne	SHORT $LN38@bdf_parse_
	mov	ecx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR _nibbles$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sar	edx, 3
	movzx	eax, BYTE PTR _hdigits[edx]
	mov	ecx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR _nibbles$[ebp]
	movsx	ecx, BYTE PTR [ecx]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	and	eax, edx
	je	SHORT $LN38@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1073741824				; 40000000H
	jne	SHORT $LN38@bdf_parse_
$LN37@bdf_parse_:
; Line 1804
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN36@bdf_parse_
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET $SG8319
	call	_FT_Message
	add	esp, 8
$LN36@bdf_parse_:
	xor	eax, eax
	jne	SHORT $LN37@bdf_parse_
; Line 1805
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	or	edx, 1073741824				; 40000000H
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1806
	mov	ecx, 1
	mov	edx, DWORD PTR _font$[ebp]
	mov	WORD PTR [edx+278660], cx
$LN38@bdf_parse_:
; Line 1809
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1810
	jmp	$Exit$157
$LN56@bdf_parse_:
; Line 1814
	mov	esi, esp
	push	6
	push	OFFSET $SG8321
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN132@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN131@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN131@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN131@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN131@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN132@bdf_parse_
$LN131@bdf_parse_:
	mov	DWORD PTR tv775[ebp], 0
	jmp	SHORT $LN133@bdf_parse_
$LN132@bdf_parse_:
	mov	DWORD PTR tv775[ebp], 1
$LN133@bdf_parse_:
	cmp	DWORD PTR tv775[ebp], 0
	jne	SHORT $LN33@bdf_parse_
; Line 1816
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN32@bdf_parse_
; Line 1817
	jmp	$Missing_Encoding$158
$LN32@bdf_parse_:
; Line 1819
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8325
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1820
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN31@bdf_parse_
; Line 1821
	jmp	$Exit$157
$LN31@bdf_parse_:
; Line 1823
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 1824
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1826
	jmp	$Exit$157
$LN33@bdf_parse_:
; Line 1830
	mov	esi, esp
	push	6
	push	OFFSET $SG8329
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN135@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN134@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN134@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN134@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN134@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN135@bdf_parse_
$LN134@bdf_parse_:
	mov	DWORD PTR tv824[ebp], 0
	jmp	SHORT $LN136@bdf_parse_
$LN135@bdf_parse_:
	mov	DWORD PTR tv824[ebp], 1
$LN136@bdf_parse_:
	cmp	DWORD PTR tv824[ebp], 0
	jne	$LN30@bdf_parse_
; Line 1832
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 128				; 00000080H
	jne	SHORT $LN29@bdf_parse_
; Line 1833
	jmp	$Missing_Encoding$158
$LN29@bdf_parse_:
; Line 1835
	mov	ecx, DWORD PTR _linelen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	push	OFFSET $SG8332
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 139304				; 00022028H
	push	eax
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1836
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN28@bdf_parse_
; Line 1837
	jmp	$Exit$157
$LN28@bdf_parse_:
; Line 1839
	push	10					; 0000000aH
	push	0
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+139304]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [edx+10], ax
; Line 1841
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 256				; 00000100H
	jne	SHORT $LN27@bdf_parse_
$LN26@bdf_parse_:
; Line 1845
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN25@bdf_parse_
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8340
	call	_FT_Message
	add	esp, 8
$LN25@bdf_parse_:
	xor	edx, edx
	jne	SHORT $LN26@bdf_parse_
; Line 1850
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax+16]
	imul	edx, DWORD PTR [ecx+20]
	push	edx
	push	72000					; 00011940H
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	push	ecx
	call	_FT_MulDiv
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [edx+8], ax
$LN27@bdf_parse_:
; Line 1853
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 512				; 00000200H
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1854
	jmp	$Exit$157
$LN30@bdf_parse_:
; Line 1858
	mov	esi, esp
	push	3
	push	OFFSET $SG8344
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN138@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 3
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN137@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN137@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN137@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 3
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN137@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN138@bdf_parse_
$LN137@bdf_parse_:
	mov	DWORD PTR tv893[ebp], 0
	jmp	SHORT $LN139@bdf_parse_
$LN138@bdf_parse_:
	mov	DWORD PTR tv893[ebp], 1
$LN139@bdf_parse_:
	cmp	DWORD PTR tv893[ebp], 0
	jne	$LN22@bdf_parse_
; Line 1860
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN21@bdf_parse_
; Line 1861
	jmp	$Missing_Encoding$158
$LN21@bdf_parse_:
; Line 1863
	mov	edx, DWORD PTR _linelen$[ebp]
	push	edx
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	push	OFFSET $SG8347
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1864
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN20@bdf_parse_
; Line 1865
	jmp	$Exit$157
$LN20@bdf_parse_:
; Line 1867
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 1868
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 1
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+14], ax
; Line 1869
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	imul	eax, edx, 3
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+139304]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+16], ax
; Line 1870
	push	10					; 0000000aH
	push	0
	mov	edx, 4
	shl	edx, 2
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+139304]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	call	__bdf_atos
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+18], ax
; Line 1873
	mov	edx, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [edx+14]
	mov	ecx, DWORD PTR _glyph$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	add	eax, edx
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+20], ax
; Line 1874
	mov	edx, DWORD PTR _glyph$[ebp]
	movsx	eax, WORD PTR [edx+18]
	neg	eax
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	WORD PTR [ecx+22], ax
; Line 1878
	mov	edx, DWORD PTR _glyph$[ebp]
	movsx	eax, WORD PTR [edx+20]
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	cmp	eax, edx
	jle	SHORT $LN140@bdf_parse_
	mov	eax, DWORD PTR _glyph$[ebp]
	movsx	ecx, WORD PTR [eax+20]
	mov	DWORD PTR tv959[ebp], ecx
	jmp	SHORT $LN141@bdf_parse_
$LN140@bdf_parse_:
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+18]
	mov	DWORD PTR tv959[ebp], eax
$LN141@bdf_parse_:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR tv959[ebp]
	mov	WORD PTR [ecx+18], dx
; Line 1879
	mov	eax, DWORD PTR _glyph$[ebp]
	movsx	ecx, WORD PTR [eax+22]
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+20]
	cmp	ecx, eax
	jle	SHORT $LN142@bdf_parse_
	mov	ecx, DWORD PTR _glyph$[ebp]
	movsx	edx, WORD PTR [ecx+22]
	mov	DWORD PTR tv971[ebp], edx
	jmp	SHORT $LN143@bdf_parse_
$LN142@bdf_parse_:
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+20]
	mov	DWORD PTR tv971[ebp], ecx
$LN143@bdf_parse_:
	mov	edx, DWORD PTR _p$[ebp]
	mov	ax, WORD PTR tv971[ebp]
	mov	WORD PTR [edx+20], ax
; Line 1881
	mov	ecx, DWORD PTR _glyph$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	mov	eax, DWORD PTR _glyph$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	add	edx, ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	WORD PTR [eax+22], dx
; Line 1883
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+22]
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	cmp	edx, ecx
	jle	SHORT $LN144@bdf_parse_
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+22]
	mov	DWORD PTR tv990[ebp], eax
	jmp	SHORT $LN145@bdf_parse_
$LN144@bdf_parse_:
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	mov	DWORD PTR tv990[ebp], edx
$LN145@bdf_parse_:
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR tv990[ebp]
	mov	WORD PTR [eax+16], cx
; Line 1884
	mov	edx, DWORD PTR _glyph$[ebp]
	movsx	eax, WORD PTR [edx+16]
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	cmp	eax, edx
	jge	SHORT $LN146@bdf_parse_
	mov	eax, DWORD PTR _glyph$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	mov	DWORD PTR tv1002[ebp], ecx
	jmp	SHORT $LN147@bdf_parse_
$LN146@bdf_parse_:
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+12]
	mov	DWORD PTR tv1002[ebp], eax
$LN147@bdf_parse_:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR tv1002[ebp]
	mov	WORD PTR [ecx+12], dx
; Line 1885
	mov	eax, DWORD PTR _glyph$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+14]
	cmp	ecx, eax
	jle	SHORT $LN148@bdf_parse_
	mov	ecx, DWORD PTR _glyph$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	mov	DWORD PTR tv1014[ebp], edx
	jmp	SHORT $LN149@bdf_parse_
$LN148@bdf_parse_:
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+14]
	mov	DWORD PTR tv1014[ebp], ecx
$LN149@bdf_parse_:
	mov	edx, DWORD PTR _p$[ebp]
	mov	ax, WORD PTR tv1014[ebp]
	mov	WORD PTR [edx+14], ax
; Line 1887
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 512				; 00000200H
	jne	SHORT $LN19@bdf_parse_
$LN18@bdf_parse_:
; Line 1891
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN17@bdf_parse_
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8362
	call	_FT_Message
	add	esp, 8
$LN17@bdf_parse_:
	xor	eax, eax
	jne	SHORT $LN18@bdf_parse_
; Line 1892
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR [ecx+10], ax
$LN19@bdf_parse_:
; Line 1897
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	cmp	DWORD PTR [edx], 0
	je	$LN14@bdf_parse_
; Line 1903
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax+16]
	imul	edx, DWORD PTR [ecx+20]
	push	edx
	push	72000					; 00011940H
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	push	ecx
	call	_FT_MulDiv
	add	esp, 12					; 0000000cH
	mov	WORD PTR _sw$2[ebp], ax
; Line 1906
	movzx	edx, WORD PTR _sw$2[ebp]
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	edx, ecx
	je	$LN14@bdf_parse_
; Line 1908
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	ax, WORD PTR _sw$2[ebp]
	mov	WORD PTR [edx+8], ax
; Line 1910
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+28], -1
	jne	SHORT $LN12@bdf_parse_
; Line 1912
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+64]
	sub	eax, 1
	shr	eax, 5
	mov	ecx, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [ecx+64]
	sub	ecx, 1
	and	ecx, 31					; 0000001fH
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR _font$[ebp]
	or	edx, DWORD PTR [ecx+eax*4+139396]
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	shr	ecx, 5
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+ecx*4+139396], edx
; Line 1913
	jmp	SHORT $LN11@bdf_parse_
$LN12@bdf_parse_:
; Line 1914
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sar	edx, 5
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 31					; 0000001fH
	mov	eax, 1
	shl	eax, cl
	mov	ecx, DWORD PTR _font$[ebp]
	or	eax, DWORD PTR [ecx+edx*4+132]
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	sar	ecx, 5
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+ecx*4+132], eax
$LN11@bdf_parse_:
; Line 1916
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	or	ecx, 4096				; 00001000H
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1917
	mov	eax, 1
	mov	ecx, DWORD PTR _font$[ebp]
	mov	WORD PTR [ecx+278660], ax
$LN14@bdf_parse_:
; Line 1921
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	or	eax, 1024				; 00000400H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1922
	jmp	$Exit$157
$LN22@bdf_parse_:
; Line 1926
	mov	esi, esp
	push	6
	push	OFFSET $SG8371
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN151@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN150@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN150@bdf_parse_
	mov	edx, 1
	imul	eax, edx, 6
	mov	ecx, DWORD PTR _line$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN150@bdf_parse_
	mov	eax, 1
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _line$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN150@bdf_parse_
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN151@bdf_parse_
$LN150@bdf_parse_:
	mov	DWORD PTR tv1110[ebp], 0
	jmp	SHORT $LN152@bdf_parse_
$LN151@bdf_parse_:
	mov	DWORD PTR tv1110[ebp], 1
$LN152@bdf_parse_:
	cmp	DWORD PTR tv1110[ebp], 0
	jne	$LN10@bdf_parse_
; Line 1931
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 1024				; 00000400H
	jne	SHORT $LN9@bdf_parse_
; Line 1934
	push	OFFSET $SG8374
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8375
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1935
	push	OFFSET $SG8376
	push	1935					; 0000078fH
	push	183					; 000000b7H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 183				; 000000b7H
	mov	DWORD PTR _error$[ebp], eax
; Line 1936
	jmp	$Exit$157
$LN9@bdf_parse_:
; Line 1940
	mov	edx, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [edx+12]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movzx	ecx, WORD PTR [edx+278662]
	imul	eax, ecx
	add	eax, 7
	sar	eax, 3
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [edx+28], eax
; Line 1942
	mov	eax, DWORD PTR _glyph$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	mov	edx, DWORD PTR _glyph$[ebp]
	imul	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR _bitmap_size$1[ebp], ecx
; Line 1943
	mov	eax, DWORD PTR _glyph$[ebp]
	cmp	DWORD PTR [eax+28], 65535		; 0000ffffH
	ja	SHORT $LN7@bdf_parse_
	cmp	DWORD PTR _bitmap_size$1[ebp], 65535	; 0000ffffH
	jbe	SHORT $LN8@bdf_parse_
$LN7@bdf_parse_:
; Line 1945
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8379
	call	_FT_Message
	add	esp, 8
; Line 1946
	push	OFFSET $SG8380
	push	1946					; 0000079aH
	push	184					; 000000b8H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 184				; 000000b8H
	mov	DWORD PTR _error$[ebp], eax
; Line 1947
	jmp	$Exit$157
; Line 1949
	jmp	SHORT $LN6@bdf_parse_
$LN8@bdf_parse_:
; Line 1950
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	ax, WORD PTR _bitmap_size$1[ebp]
	mov	WORD PTR [edx+32], ax
$LN6@bdf_parse_:
; Line 1952
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _glyph$[ebp]
	movzx	eax, WORD PTR [edx+32]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [edx+24], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN5@bdf_parse_
; Line 1953
	jmp	SHORT $Exit$157
$LN5@bdf_parse_:
; Line 1955
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1956
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	or	edx, 2048				; 00000800H
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], edx
; Line 1958
	jmp	SHORT $Exit$157
$LN10@bdf_parse_:
; Line 1961
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8386
	call	_FT_Message
	add	esp, 8
; Line 1962
	push	OFFSET $SG8387
	push	1962					; 000007aaH
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
; Line 1963
	jmp	SHORT $Exit$157
$Missing_Encoding$158:
; Line 1967
	push	OFFSET $SG8388
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8389
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1968
	push	OFFSET $SG8390
	push	1968					; 000007b0H
	push	182					; 000000b6H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 182				; 000000b6H
	mov	DWORD PTR _error$[ebp], eax
$Exit$157:
; Line 1971
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@bdf_parse_
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 64					; 00000040H
	je	SHORT $LN4@bdf_parse_
$LN3@bdf_parse_:
; Line 1972
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+24], 0
	xor	eax, eax
	jne	SHORT $LN3@bdf_parse_
$LN4@bdf_parse_:
; Line 1974
	mov	eax, DWORD PTR _error$[ebp]
; Line 1975
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN156@bdf_parse_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN156@bdf_parse_:
	DD	2
	DD	$LN155@bdf_parse_
$LN155@bdf_parse_:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN153@bdf_parse_
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN154@bdf_parse_
$LN154@bdf_parse_:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN153@bdf_parse_:
	DB	115					; 00000073H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
__bdf_parse_glyphs ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv386 = -60						; size = 4
tv357 = -56						; size = 4
tv328 = -52						; size = 4
tv299 = -48						; size = 4
tv259 = -44						; size = 4
tv208 = -40						; size = 4
tv75 = -36						; size = 4
_error$ = -28						; size = 4
_memory$ = -20						; size = 4
_fp$ = -16						; size = 4
_prop$ = -12						; size = 4
_hn$ = -8						; size = 4
_propid$ = -4						; size = 4
_font$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_lineno$ = 20						; size = 4
__bdf_add_property PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1312
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1316
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278664]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 1317
	mov	DWORD PTR _error$[ebp], 0
; Line 1319
	mov	edx, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR _lineno$[ebp], edx
; Line 1323
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_hash_lookup
	add	esp, 8
	mov	DWORD PTR _hn$[ebp], eax
	cmp	DWORD PTR _hn$[ebp], 0
	je	$LN46@bdf_add_pr
; Line 1327
	mov	eax, DWORD PTR _hn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 4
	mov	edx, DWORD PTR _font$[ebp]
	add	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR _fp$[ebp], ecx
; Line 1329
	mov	eax, DWORD PTR _fp$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv75[ebp], ecx
	cmp	DWORD PTR tv75[ebp], 1
	je	SHORT $LN42@bdf_add_pr
	cmp	DWORD PTR tv75[ebp], 2
	je	SHORT $LN37@bdf_add_pr
	cmp	DWORD PTR tv75[ebp], 3
	je	SHORT $LN36@bdf_add_pr
	jmp	$LN44@bdf_add_pr
$LN42@bdf_add_pr:
; Line 1333
	mov	edx, DWORD PTR _fp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [edx+12], 0
	xor	eax, eax
	jne	SHORT $LN42@bdf_add_pr
; Line 1335
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN39@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN39@bdf_add_pr
; Line 1337
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_strdup
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN39@bdf_add_pr
; Line 1338
	jmp	$Exit$67
$LN39@bdf_add_pr:
; Line 1340
	jmp	SHORT $LN44@bdf_add_pr
$LN37@bdf_add_pr:
; Line 1343
	push	10					; 0000000aH
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	__bdf_atol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1344
	jmp	SHORT $LN44@bdf_add_pr
$LN36@bdf_add_pr:
; Line 1347
	push	10					; 0000000aH
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN44@bdf_add_pr:
; Line 1354
	jmp	$Exit$67
$LN46@bdf_add_pr:
; Line 1359
	mov	edx, DWORD PTR _font$[ebp]
	add	edx, 278676				; 00044094H
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_hash_lookup
	add	esp, 8
	mov	DWORD PTR _hn$[ebp], eax
; Line 1360
	cmp	DWORD PTR _hn$[ebp], 0
	jne	SHORT $LN34@bdf_add_pr
; Line 1362
	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_bdf_create_property
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 1363
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN33@bdf_add_pr
; Line 1364
	jmp	$Exit$67
$LN33@bdf_add_pr:
; Line 1365
	mov	eax, DWORD PTR _font$[ebp]
	add	eax, 278676				; 00044094H
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_hash_lookup
	add	esp, 8
	mov	DWORD PTR _hn$[ebp], eax
$LN34@bdf_add_pr:
; Line 1369
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [edx+76]
	cmp	ecx, DWORD PTR [eax+72]
	jne	$LN32@bdf_add_pr
; Line 1371
	mov	edx, DWORD PTR _font$[ebp]
	cmp	DWORD PTR [edx+72], 0
	jne	SHORT $LN31@bdf_add_pr
; Line 1373
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	1
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+80], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN30@bdf_add_pr
; Line 1374
	jmp	$Exit$67
$LN30@bdf_add_pr:
; Line 1376
	jmp	SHORT $LN29@bdf_add_pr
$LN31@bdf_add_pr:
; Line 1380
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+72]
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+80], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN29@bdf_add_pr
; Line 1381
	jmp	$Exit$67
$LN29@bdf_add_pr:
; Line 1384
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	shl	ecx, 4
	mov	edx, DWORD PTR _font$[ebp]
	add	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR _fp$[ebp], ecx
; Line 1385
	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1386
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	add	edx, 1
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+72], edx
$LN32@bdf_add_pr:
; Line 1389
	mov	ecx, DWORD PTR _hn$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _propid$[ebp], edx
; Line 1390
	mov	eax, DWORD PTR _propid$[ebp]
	cmp	eax, DWORD PTR __num_bdf_properties
	jb	SHORT $LN27@bdf_add_pr
; Line 1391
	mov	ecx, DWORD PTR _propid$[ebp]
	sub	ecx, DWORD PTR __num_bdf_properties
	shl	ecx, 4
	mov	edx, DWORD PTR _font$[ebp]
	add	ecx, DWORD PTR [edx+278668]
	mov	DWORD PTR _prop$[ebp], ecx
; Line 1392
	jmp	SHORT $LN26@bdf_add_pr
$LN27@bdf_add_pr:
; Line 1393
	mov	eax, DWORD PTR _propid$[ebp]
	shl	eax, 4
	add	eax, OFFSET __bdf_properties
	mov	DWORD PTR _prop$[ebp], eax
$LN26@bdf_add_pr:
; Line 1395
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	shl	edx, 4
	mov	eax, DWORD PTR _font$[ebp]
	add	edx, DWORD PTR [eax+80]
	mov	DWORD PTR _fp$[ebp], edx
; Line 1397
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
; Line 1398
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 1399
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR _prop$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 1401
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv208[ebp], edx
	cmp	DWORD PTR tv208[ebp], 1
	je	SHORT $LN23@bdf_add_pr
	cmp	DWORD PTR tv208[ebp], 2
	je	SHORT $LN20@bdf_add_pr
	cmp	DWORD PTR tv208[ebp], 3
	je	SHORT $LN19@bdf_add_pr
	jmp	SHORT $LN24@bdf_add_pr
$LN23@bdf_add_pr:
; Line 1404
	mov	eax, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 1405
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN22@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN22@bdf_add_pr
; Line 1407
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_strdup
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [edx+12], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN22@bdf_add_pr
; Line 1408
	jmp	$Exit$67
$LN22@bdf_add_pr:
; Line 1410
	jmp	SHORT $LN24@bdf_add_pr
$LN20@bdf_add_pr:
; Line 1413
	push	10					; 0000000aH
	push	0
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	__bdf_atol
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1414
	jmp	SHORT $LN24@bdf_add_pr
$LN19@bdf_add_pr:
; Line 1417
	push	10					; 0000000aH
	push	0
	mov	edx, DWORD PTR _value$[ebp]
	push	edx
	call	__bdf_atoul
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN24@bdf_add_pr:
; Line 1423
	mov	esi, esp
	push	7
	push	OFFSET $SG8136
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN50@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN49@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	je	SHORT $LN49@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN49@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN49@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 9
	jne	SHORT $LN50@bdf_add_pr
$LN49@bdf_add_pr:
	mov	DWORD PTR tv259[ebp], 0
	jmp	SHORT $LN51@bdf_add_pr
$LN50@bdf_add_pr:
	mov	DWORD PTR tv259[ebp], 1
$LN51@bdf_add_pr:
	cmp	DWORD PTR tv259[ebp], 0
	je	SHORT $LN18@bdf_add_pr
; Line 1429
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+76]
	push	eax
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_hash_insert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1430
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN18@bdf_add_pr
; Line 1431
	jmp	$Exit$67
$LN18@bdf_add_pr:
; Line 1434
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	add	ecx, 1
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 1441
	mov	esi, esp
	push	12					; 0000000cH
	push	OFFSET $SG8140
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN53@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN52@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN52@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN52@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN52@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN53@bdf_add_pr
$LN52@bdf_add_pr:
	mov	DWORD PTR tv299[ebp], 0
	jmp	SHORT $LN54@bdf_add_pr
$LN53@bdf_add_pr:
	mov	DWORD PTR tv299[ebp], 1
$LN54@bdf_add_pr:
	cmp	DWORD PTR tv299[ebp], 0
	jne	SHORT $LN16@bdf_add_pr
; Line 1442
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+36], edx
	jmp	$Exit$67
$LN16@bdf_add_pr:
; Line 1443
	mov	esi, esp
	push	11					; 0000000bH
	push	OFFSET $SG8143
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN56@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 11
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN55@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 11
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN55@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 11
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN55@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 11
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN55@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 11
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN56@bdf_add_pr
$LN55@bdf_add_pr:
	mov	DWORD PTR tv328[ebp], 0
	jmp	SHORT $LN57@bdf_add_pr
$LN56@bdf_add_pr:
	mov	DWORD PTR tv328[ebp], 1
$LN57@bdf_add_pr:
	cmp	DWORD PTR tv328[ebp], 0
	jne	SHORT $LN14@bdf_add_pr
; Line 1444
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+40], edx
	jmp	$Exit$67
$LN14@bdf_add_pr:
; Line 1445
	mov	esi, esp
	push	12					; 0000000cH
	push	OFFSET $SG8146
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN59@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN58@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN58@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN58@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN58@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 12
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN59@bdf_add_pr
$LN58@bdf_add_pr:
	mov	DWORD PTR tv357[ebp], 0
	jmp	SHORT $LN60@bdf_add_pr
$LN59@bdf_add_pr:
	mov	DWORD PTR tv357[ebp], 1
$LN60@bdf_add_pr:
	cmp	DWORD PTR tv357[ebp], 0
	jne	SHORT $LN12@bdf_add_pr
; Line 1446
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+44], edx
	jmp	$Exit$67
$LN12@bdf_add_pr:
; Line 1447
	mov	esi, esp
	push	7
	push	OFFSET $SG8149
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN62@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN61@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	test	edx, edx
	je	SHORT $LN61@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _name$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN61@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN61@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 7
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 9
	jne	SHORT $LN62@bdf_add_pr
$LN61@bdf_add_pr:
	mov	DWORD PTR tv386[ebp], 0
	jmp	SHORT $LN63@bdf_add_pr
$LN62@bdf_add_pr:
	mov	DWORD PTR tv386[ebp], 1
$LN63@bdf_add_pr:
	cmp	DWORD PTR tv386[ebp], 0
	jne	$Exit$67
; Line 1449
	mov	eax, DWORD PTR _fp$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN9@bdf_add_pr
; Line 1451
	push	OFFSET $SG8151
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8152
	call	_FT_Message
	add	esp, 12					; 0000000cH
; Line 1452
	push	OFFSET $SG8153
	push	1452					; 000005acH
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
; Line 1453
	jmp	$Exit$67
$LN9@bdf_add_pr:
; Line 1456
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx+eax]
	cmp	eax, 112				; 00000070H
	je	SHORT $LN7@bdf_add_pr
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _fp$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+edx]
	cmp	edx, 80					; 00000050H
	jne	SHORT $LN8@bdf_add_pr
$LN7@bdf_add_pr:
; Line 1457
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+28], 8
	jmp	SHORT $Exit$67
$LN8@bdf_add_pr:
; Line 1458
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _fp$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movsx	edx, BYTE PTR [ecx+edx]
	cmp	edx, 109				; 0000006dH
	je	SHORT $LN4@bdf_add_pr
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _fp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 77					; 0000004dH
	jne	SHORT $LN5@bdf_add_pr
$LN4@bdf_add_pr:
; Line 1459
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+28], 16			; 00000010H
	jmp	SHORT $Exit$67
$LN5@bdf_add_pr:
; Line 1460
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _fp$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movsx	ecx, BYTE PTR [eax+ecx]
	cmp	ecx, 99					; 00000063H
	je	SHORT $LN1@bdf_add_pr
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _fp$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	movsx	eax, BYTE PTR [edx+eax]
	cmp	eax, 67					; 00000043H
	jne	SHORT $Exit$67
$LN1@bdf_add_pr:
; Line 1461
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+28], 32			; 00000020H
$Exit$67:
; Line 1465
	mov	eax, DWORD PTR _error$[ebp]
; Line 1466
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN66@bdf_add_pr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN66@bdf_add_pr:
	DD	1
	DD	$LN65@bdf_add_pr
$LN65@bdf_add_pr:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN64@bdf_add_pr
$LN64@bdf_add_pr:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
__bdf_add_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p$ = -16						; size = 4
_ep$ = -12						; size = 4
_sp$ = -8						; size = 4
_hold$ = -4						; size = 4
_line$ = 8						; size = 4
_linelen$ = 12						; size = 4
_name$ = 16						; size = 4
_value$ = 20						; size = 4
_font$ = 24						; size = 4
__bdf_is_atom PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1249
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1255
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _ep$[ebp], eax
	mov	ecx, DWORD PTR _ep$[ebp]
	mov	DWORD PTR _sp$[ebp], ecx
	mov	edx, DWORD PTR _name$[ebp]
	mov	eax, DWORD PTR _sp$[ebp]
	mov	DWORD PTR [edx], eax
$LN14@bdf_is_ato:
; Line 1257
	mov	ecx, DWORD PTR _ep$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN13@bdf_is_ato
	mov	eax, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN13@bdf_is_ato
	mov	edx, DWORD PTR _ep$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 9
	je	SHORT $LN13@bdf_is_ato
; Line 1258
	mov	ecx, DWORD PTR _ep$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ep$[ebp], ecx
	jmp	SHORT $LN14@bdf_is_ato
$LN13@bdf_is_ato:
; Line 1260
	mov	DWORD PTR _hold$[ebp], -1
; Line 1261
	mov	edx, DWORD PTR _ep$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN12@bdf_is_ato
; Line 1263
	mov	ecx, DWORD PTR _ep$[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _hold$[ebp], edx
; Line 1264
	mov	eax, DWORD PTR _ep$[ebp]
	mov	BYTE PTR [eax], 0
$LN12@bdf_is_ato:
; Line 1267
	mov	ecx, DWORD PTR _font$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sp$[ebp]
	push	edx
	call	_bdf_get_property
	add	esp, 8
	mov	DWORD PTR _p$[ebp], eax
; Line 1270
	cmp	DWORD PTR _hold$[ebp], -1
	je	SHORT $LN11@bdf_is_ato
; Line 1271
	mov	eax, DWORD PTR _ep$[ebp]
	mov	cl, BYTE PTR _hold$[ebp]
	mov	BYTE PTR [eax], cl
$LN11@bdf_is_ato:
; Line 1274
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN10@bdf_is_ato
	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx+4], 1
	je	SHORT $LN10@bdf_is_ato
; Line 1275
	xor	eax, eax
	jmp	$LN15@bdf_is_ato
$LN10@bdf_is_ato:
; Line 1279
	mov	eax, DWORD PTR _ep$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
; Line 1280
	mov	ecx, DWORD PTR _line$[ebp]
	add	ecx, DWORD PTR _linelen$[ebp]
	mov	DWORD PTR _ep$[ebp], ecx
; Line 1283
	mov	edx, DWORD PTR _sp$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN8@bdf_is_ato
; Line 1284
	mov	ecx, DWORD PTR _sp$[ebp]
	mov	BYTE PTR [ecx], 0
	mov	edx, DWORD PTR _sp$[ebp]
	add	edx, 1
	mov	DWORD PTR _sp$[ebp], edx
$LN8@bdf_is_ato:
; Line 1286
	mov	eax, DWORD PTR _sp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@bdf_is_ato
	mov	edx, DWORD PTR _sp$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN6@bdf_is_ato
	mov	ecx, DWORD PTR _sp$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 9
	jne	SHORT $LN7@bdf_is_ato
$LN6@bdf_is_ato:
; Line 1287
	mov	eax, DWORD PTR _sp$[ebp]
	add	eax, 1
	mov	DWORD PTR _sp$[ebp], eax
	jmp	SHORT $LN8@bdf_is_ato
$LN7@bdf_is_ato:
; Line 1290
	mov	ecx, DWORD PTR _sp$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 34					; 00000022H
	jne	SHORT $LN5@bdf_is_ato
; Line 1291
	mov	eax, DWORD PTR _sp$[ebp]
	add	eax, 1
	mov	DWORD PTR _sp$[ebp], eax
$LN5@bdf_is_ato:
; Line 1292
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR _sp$[ebp]
	mov	DWORD PTR [ecx], edx
$LN4@bdf_is_ato:
; Line 1296
	mov	eax, DWORD PTR _ep$[ebp]
	cmp	eax, DWORD PTR _sp$[ebp]
	jbe	SHORT $LN3@bdf_is_ato
	mov	ecx, DWORD PTR _ep$[ebp]
	movsx	edx, BYTE PTR [ecx-1]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN2@bdf_is_ato
	mov	eax, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 9
	jne	SHORT $LN3@bdf_is_ato
$LN2@bdf_is_ato:
; Line 1297
	mov	edx, DWORD PTR _ep$[ebp]
	sub	edx, 1
	mov	DWORD PTR _ep$[ebp], edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	BYTE PTR [eax], 0
	jmp	SHORT $LN4@bdf_is_ato
$LN3@bdf_is_ato:
; Line 1300
	mov	ecx, DWORD PTR _ep$[ebp]
	cmp	ecx, DWORD PTR _sp$[ebp]
	jbe	SHORT $LN1@bdf_is_ato
	mov	edx, DWORD PTR _ep$[ebp]
	movsx	eax, BYTE PTR [edx-1]
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN1@bdf_is_ato
; Line 1301
	mov	ecx, DWORD PTR _ep$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _ep$[ebp], ecx
	mov	edx, DWORD PTR _ep$[ebp]
	mov	BYTE PTR [edx], 0
$LN1@bdf_is_ato:
; Line 1303
	mov	eax, 1
$LN15@bdf_is_ato:
; Line 1304
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_is_atom ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv142 = -308						; size = 4
_error$ = -304						; size = 4
_memory$ = -300						; size = 4
_list$ = -292						; size = 16
_name$ = -268						; size = 256
_len$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_font$ = 8						; size = 4
_opts$ = 12						; size = 4
_lineno$ = 16						; size = 4
__bdf_set_default_spacing PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1177
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1182
	mov	DWORD PTR _error$[ebp], 0
; Line 1184
	mov	eax, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR _lineno$[ebp], eax
; Line 1187
	cmp	DWORD PTR _font$[ebp], 0
	je	SHORT $LN9@bdf_set_de
	mov	ecx, DWORD PTR _font$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN9@bdf_set_de
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, BYTE PTR [edx+eax]
	test	eax, eax
	jne	SHORT $LN10@bdf_set_de
$LN9@bdf_set_de:
; Line 1189
	push	OFFSET $SG8022
	push	1189					; 000004a5H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 1190
	jmp	$Exit$19
$LN10@bdf_set_de:
; Line 1193
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+278664]
	mov	DWORD PTR _memory$[ebp], edx
; Line 1195
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	lea	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	__bdf_list_init
	add	esp, 8
; Line 1197
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR _opts$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+28], ecx
; Line 1199
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
; Line 1201
	cmp	DWORD PTR _len$[ebp], 256		; 00000100H
	jb	SHORT $LN8@bdf_set_de
; Line 1203
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG8025
	call	_FT_Message
	add	esp, 8
; Line 1204
	push	OFFSET $SG8026
	push	1204					; 000004b4H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 1205
	jmp	$Exit$19
$LN8@bdf_set_de:
; Line 1208
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1210
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET $SG8029
	lea	edx, DWORD PTR _list$[ebp]
	push	edx
	call	__bdf_list_split
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1211
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN7@bdf_set_de
; Line 1212
	jmp	SHORT $Fail$20
$LN7@bdf_set_de:
; Line 1214
	cmp	DWORD PTR _list$[ebp+8], 15		; 0000000fH
	jne	SHORT $Fail$20
; Line 1216
	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, 1
	imul	eax, edx, 0
	mov	edx, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [edx+ecx]
	movsx	edx, BYTE PTR [ecx+eax]
	mov	DWORD PTR tv142[ebp], edx
	mov	eax, DWORD PTR tv142[ebp]
	sub	eax, 67					; 00000043H
	mov	DWORD PTR tv142[ebp], eax
	cmp	DWORD PTR tv142[ebp], 45		; 0000002dH
	ja	SHORT $Fail$20
	mov	ecx, DWORD PTR tv142[ebp]
	movzx	edx, BYTE PTR $LN13@bdf_set_de[ecx]
	jmp	DWORD PTR $LN18@bdf_set_de[edx*4]
$LN3@bdf_set_de:
; Line 1220
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+28], 32			; 00000020H
; Line 1221
	jmp	SHORT $Fail$20
$LN2@bdf_set_de:
; Line 1224
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+28], 16			; 00000010H
; Line 1225
	jmp	SHORT $Fail$20
$LN1@bdf_set_de:
; Line 1228
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+28], 8
$Fail$20:
; Line 1234
	lea	eax, DWORD PTR _list$[ebp]
	push	eax
	call	__bdf_list_done
	add	esp, 4
$Exit$19:
; Line 1237
	mov	eax, DWORD PTR _error$[ebp]
; Line 1238
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@bdf_set_de
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN17@bdf_set_de:
	DD	2
	DD	$LN16@bdf_set_de
$LN16@bdf_set_de:
	DD	-268					; fffffef4H
	DD	256					; 00000100H
	DD	$LN14@bdf_set_de
	DD	-292					; fffffedcH
	DD	16					; 00000010H
	DD	$LN15@bdf_set_de
$LN15@bdf_set_de:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN14@bdf_set_de:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
	npad	2
$LN18@bdf_set_de:
	DD	$LN3@bdf_set_de
	DD	$LN2@bdf_set_de
	DD	$LN1@bdf_set_de
	DD	$Fail$20
$LN13@bdf_set_de:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	2
__bdf_set_default_spacing ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$ = -16						; size = 4
_memory$ = -8						; size = 4
_cp$ = -4						; size = 4
_font$ = 8						; size = 4
_comment$ = 12						; size = 4
_len$ = 16						; size = 4
__bdf_add_comment PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1148
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1150
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278664]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 1151
	mov	DWORD PTR _error$[ebp], 0
; Line 1156
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+88]
	mov	ecx, DWORD PTR _len$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	push	1
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+84], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@bdf_add_co
; Line 1157
	jmp	SHORT $Exit$7
$LN1@bdf_add_co:
; Line 1159
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+84]
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+88]
	mov	DWORD PTR _cp$[ebp], eax
; Line 1161
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _comment$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cp$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1162
	mov	edx, DWORD PTR _cp$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	BYTE PTR [edx], 10			; 0000000aH
; Line 1164
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+88], eax
$Exit$7:
; Line 1167
	mov	eax, DWORD PTR _error$[ebp]
; Line 1168
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@bdf_add_co
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@bdf_add_co:
	DD	1
	DD	$LN5@bdf_add_co
$LN5@bdf_add_co:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN4@bdf_add_co
$LN4@bdf_add_co:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
__bdf_add_comment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$ = -20						; size = 4
_memory$ = -12						; size = 4
_p$ = -8						; size = 4
_n$ = -4						; size = 4
_name$ = 8						; size = 4
_format$ = 12						; size = 4
_font$ = 16						; size = 4
_bdf_create_property PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1041
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 1044
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278664]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 1045
	mov	DWORD PTR _error$[ebp], 0
; Line 1051
	mov	edx, DWORD PTR _font$[ebp]
	add	edx, 278676				; 00044094H
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_hash_lookup
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@bdf_create
; Line 1052
	jmp	$Exit$11
$LN5@bdf_create:
; Line 1056
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+278668]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+278672]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278672]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+278668], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@bdf_create
; Line 1057
	jmp	$Exit$11
$LN4@bdf_create:
; Line 1059
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+278672]
	shl	eax, 4
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+278668]
	mov	DWORD PTR _p$[ebp], eax
; Line 1060
	push	16					; 00000010H
	push	0
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1062
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 1063
	cmp	DWORD PTR _n$[ebp], -1
	jbe	SHORT $LN3@bdf_create
; Line 1064
	push	OFFSET $SG7974
	push	1064					; 00000428H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN6@bdf_create
$LN3@bdf_create:
; Line 1066
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	push	0
	push	1
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@bdf_create
; Line 1067
	jmp	SHORT $Exit$11
$LN2@bdf_create:
; Line 1069
	mov	edx, DWORD PTR _n$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1071
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _format$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1072
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1074
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR __num_bdf_properties
	add	ecx, DWORD PTR [eax+278672]
	mov	DWORD PTR _n$[ebp], ecx
; Line 1076
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	add	eax, 278676				; 00044094H
	push	eax
	mov	ecx, DWORD PTR _n$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_hash_insert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 1077
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@bdf_create
; Line 1078
	jmp	SHORT $Exit$11
$LN1@bdf_create:
; Line 1080
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+278672]
	add	edx, 1
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+278672], edx
$Exit$11:
; Line 1083
	mov	eax, DWORD PTR _error$[ebp]
$LN6@bdf_create:
; Line 1084
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@bdf_create
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@bdf_create:
	DD	1
	DD	$LN9@bdf_create
$LN9@bdf_create:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@bdf_create
$LN8@bdf_create:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_bdf_create_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_c2$ = -8						; size = 4
_c1$ = -4						; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_by_encoding PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1020
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1024
	mov	eax, DWORD PTR _a$[ebp]
	mov	DWORD PTR _c1$[ebp], eax
; Line 1025
	mov	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _c2$[ebp], ecx
; Line 1027
	mov	edx, DWORD PTR _c1$[ebp]
	mov	eax, DWORD PTR _c2$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN2@by_encodin
; Line 1028
	or	eax, -1
	jmp	SHORT $LN3@by_encodin
$LN2@by_encodin:
; Line 1030
	mov	edx, DWORD PTR _c1$[ebp]
	mov	eax, DWORD PTR _c2$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	cmp	ecx, DWORD PTR [eax+4]
	jle	SHORT $LN1@by_encodin
; Line 1031
	mov	eax, 1
	jmp	SHORT $LN3@by_encodin
$LN1@by_encodin:
; Line 1033
	xor	eax, eax
$LN3@by_encodin:
; Line 1034
	mov	esp, ebp
	pop	ebp
	ret	0
_by_encoding ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv141 = -24						; size = 4
tv136 = -20						; size = 4
tv67 = -16						; size = 4
_dmap$ = -12						; size = 4
_neg$ = -8						; size = 2
_v$ = -4						; size = 2
_s$ = 8							; size = 4
_end$ = 12						; size = 4
_base$ = 16						; size = 4
__bdf_atos PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 966
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 971
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN13@bdf_atos
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@bdf_atos
$LN13@bdf_atos:
; Line 972
	xor	eax, eax
	jmp	$LN15@bdf_atos
$LN14@bdf_atos:
; Line 975
	mov	edx, DWORD PTR _base$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 8
	je	SHORT $LN10@bdf_atos
	cmp	DWORD PTR tv67[ebp], 16			; 00000010H
	je	SHORT $LN9@bdf_atos
	jmp	SHORT $LN8@bdf_atos
$LN10@bdf_atos:
; Line 978
	mov	DWORD PTR _dmap$[ebp], OFFSET _odigits
; Line 979
	jmp	SHORT $LN11@bdf_atos
$LN9@bdf_atos:
; Line 981
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 982
	jmp	SHORT $LN11@bdf_atos
$LN8@bdf_atos:
; Line 984
	mov	DWORD PTR _base$[ebp], 10		; 0000000aH
; Line 985
	mov	DWORD PTR _dmap$[ebp], OFFSET _ddigits
$LN11@bdf_atos:
; Line 990
	xor	eax, eax
	mov	WORD PTR _neg$[ebp], ax
; Line 991
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN7@bdf_atos
; Line 993
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 994
	mov	ecx, 1
	mov	WORD PTR _neg$[ebp], cx
$LN7@bdf_atos:
; Line 999
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 48					; 00000030H
	jne	SHORT $LN6@bdf_atos
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx+1]
	cmp	edx, 120				; 00000078H
	je	SHORT $LN5@bdf_atos
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 88					; 00000058H
	jne	SHORT $LN6@bdf_atos
$LN5@bdf_atos:
; Line 1001
	mov	DWORD PTR _base$[ebp], 16		; 00000010H
; Line 1002
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 1003
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
$LN6@bdf_atos:
; Line 1006
	xor	eax, eax
	mov	WORD PTR _v$[ebp], ax
	jmp	SHORT $LN4@bdf_atos
$LN3@bdf_atos:
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN4@bdf_atos:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 3
	mov	ecx, DWORD PTR _dmap$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	and	edx, eax
	je	SHORT $LN2@bdf_atos
; Line 1007
	movsx	ecx, WORD PTR _v$[ebp]
	imul	ecx, DWORD PTR _base$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx]
	movzx	edx, BYTE PTR _a2i[eax]
	add	ecx, edx
	mov	WORD PTR _v$[ebp], cx
	jmp	SHORT $LN3@bdf_atos
$LN2@bdf_atos:
; Line 1009
	cmp	DWORD PTR _end$[ebp], 0
	je	SHORT $LN1@bdf_atos
; Line 1010
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@bdf_atos:
; Line 1012
	movsx	edx, WORD PTR _neg$[ebp]
	test	edx, edx
	jne	SHORT $LN17@bdf_atos
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN18@bdf_atos
$LN17@bdf_atos:
	mov	DWORD PTR tv136[ebp], 0
$LN18@bdf_atos:
	cmp	DWORD PTR tv136[ebp], 0
	je	SHORT $LN19@bdf_atos
	movsx	eax, WORD PTR _v$[ebp]
	mov	DWORD PTR tv141[ebp], eax
	jmp	SHORT $LN20@bdf_atos
$LN19@bdf_atos:
	movsx	ecx, WORD PTR _v$[ebp]
	neg	ecx
	mov	DWORD PTR tv141[ebp], ecx
$LN20@bdf_atos:
	mov	ax, WORD PTR tv141[ebp]
$LN15@bdf_atos:
; Line 1013
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_atos ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv136 = -24						; size = 4
tv133 = -20						; size = 4
tv67 = -16						; size = 4
_dmap$ = -12						; size = 4
_neg$ = -8						; size = 4
_v$ = -4						; size = 4
_s$ = 8							; size = 4
_end$ = 12						; size = 4
_base$ = 16						; size = 4
__bdf_atol PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 911
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 916
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN13@bdf_atol
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@bdf_atol
$LN13@bdf_atol:
; Line 917
	xor	eax, eax
	jmp	$LN15@bdf_atol
$LN14@bdf_atol:
; Line 920
	mov	edx, DWORD PTR _base$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 8
	je	SHORT $LN10@bdf_atol
	cmp	DWORD PTR tv67[ebp], 16			; 00000010H
	je	SHORT $LN9@bdf_atol
	jmp	SHORT $LN8@bdf_atol
$LN10@bdf_atol:
; Line 923
	mov	DWORD PTR _dmap$[ebp], OFFSET _odigits
; Line 924
	jmp	SHORT $LN11@bdf_atol
$LN9@bdf_atol:
; Line 926
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 927
	jmp	SHORT $LN11@bdf_atol
$LN8@bdf_atol:
; Line 929
	mov	DWORD PTR _base$[ebp], 10		; 0000000aH
; Line 930
	mov	DWORD PTR _dmap$[ebp], OFFSET _ddigits
$LN11@bdf_atol:
; Line 935
	mov	DWORD PTR _neg$[ebp], 0
; Line 936
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN7@bdf_atol
; Line 938
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 939
	mov	DWORD PTR _neg$[ebp], 1
$LN7@bdf_atol:
; Line 944
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jne	SHORT $LN6@bdf_atol
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	cmp	eax, 120				; 00000078H
	je	SHORT $LN5@bdf_atol
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx+1]
	cmp	edx, 88					; 00000058H
	jne	SHORT $LN6@bdf_atol
$LN5@bdf_atol:
; Line 946
	mov	DWORD PTR _base$[ebp], 16		; 00000010H
; Line 947
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 948
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN6@bdf_atol:
; Line 951
	mov	DWORD PTR _v$[ebp], 0
	jmp	SHORT $LN4@bdf_atol
$LN3@bdf_atol:
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN4@bdf_atol:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 3
	mov	ecx, DWORD PTR _dmap$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	and	edx, eax
	je	SHORT $LN2@bdf_atol
; Line 952
	mov	ecx, DWORD PTR _v$[ebp]
	imul	ecx, DWORD PTR _base$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx]
	movzx	edx, BYTE PTR _a2i[eax]
	add	ecx, edx
	mov	DWORD PTR _v$[ebp], ecx
	jmp	SHORT $LN3@bdf_atol
$LN2@bdf_atol:
; Line 954
	cmp	DWORD PTR _end$[ebp], 0
	je	SHORT $LN1@bdf_atol
; Line 955
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@bdf_atol:
; Line 957
	cmp	DWORD PTR _neg$[ebp], 0
	jne	SHORT $LN17@bdf_atol
	mov	DWORD PTR tv133[ebp], 1
	jmp	SHORT $LN18@bdf_atol
$LN17@bdf_atol:
	mov	DWORD PTR tv133[ebp], 0
$LN18@bdf_atol:
	cmp	DWORD PTR tv133[ebp], 0
	je	SHORT $LN19@bdf_atol
	mov	edx, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv136[ebp], edx
	jmp	SHORT $LN20@bdf_atol
$LN19@bdf_atol:
	mov	eax, DWORD PTR _v$[ebp]
	neg	eax
	mov	DWORD PTR tv136[ebp], eax
$LN20@bdf_atol:
	mov	eax, DWORD PTR tv136[ebp]
$LN15@bdf_atol:
; Line 958
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_atol ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv67 = -12						; size = 4
_dmap$ = -8						; size = 4
_v$ = -4						; size = 4
_s$ = 8							; size = 4
_end$ = 12						; size = 4
_base$ = 16						; size = 4
__bdf_atoul PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 864
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 869
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN12@bdf_atoul
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN13@bdf_atoul
$LN12@bdf_atoul:
; Line 870
	xor	eax, eax
	jmp	$LN14@bdf_atoul
$LN13@bdf_atoul:
; Line 873
	mov	edx, DWORD PTR _base$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 8
	je	SHORT $LN9@bdf_atoul
	cmp	DWORD PTR tv67[ebp], 16			; 00000010H
	je	SHORT $LN8@bdf_atoul
	jmp	SHORT $LN7@bdf_atoul
$LN9@bdf_atoul:
; Line 876
	mov	DWORD PTR _dmap$[ebp], OFFSET _odigits
; Line 877
	jmp	SHORT $LN10@bdf_atoul
$LN8@bdf_atoul:
; Line 879
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 880
	jmp	SHORT $LN10@bdf_atoul
$LN7@bdf_atoul:
; Line 882
	mov	DWORD PTR _base$[ebp], 10		; 0000000aH
; Line 883
	mov	DWORD PTR _dmap$[ebp], OFFSET _ddigits
$LN10@bdf_atoul:
; Line 889
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jne	SHORT $LN6@bdf_atoul
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	cmp	eax, 120				; 00000078H
	je	SHORT $LN5@bdf_atoul
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx+1]
	cmp	edx, 88					; 00000058H
	jne	SHORT $LN6@bdf_atoul
$LN5@bdf_atoul:
; Line 891
	mov	DWORD PTR _base$[ebp], 16		; 00000010H
; Line 892
	mov	DWORD PTR _dmap$[ebp], OFFSET _hdigits
; Line 893
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN6@bdf_atoul:
; Line 896
	mov	DWORD PTR _v$[ebp], 0
	jmp	SHORT $LN4@bdf_atoul
$LN3@bdf_atoul:
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN4@bdf_atoul:
	mov	edx, DWORD PTR _s$[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 3
	mov	ecx, DWORD PTR _dmap$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	and	edx, eax
	je	SHORT $LN2@bdf_atoul
; Line 897
	mov	ecx, DWORD PTR _v$[ebp]
	imul	ecx, DWORD PTR _base$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	movsx	eax, BYTE PTR [edx]
	movzx	edx, BYTE PTR _a2i[eax]
	add	ecx, edx
	mov	DWORD PTR _v$[ebp], ecx
	jmp	SHORT $LN3@bdf_atoul
$LN2@bdf_atoul:
; Line 899
	cmp	DWORD PTR _end$[ebp], 0
	je	SHORT $LN1@bdf_atoul
; Line 900
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@bdf_atoul:
; Line 902
	mov	eax, DWORD PTR _v$[ebp]
$LN14@bdf_atoul:
; Line 903
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_atoul ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_new_size$1 = -76					; size = 4
_error$ = -68						; size = 4
_memory$ = -60						; size = 4
_buf$ = -56						; size = 4
_avail$ = -52						; size = 4
_cursor$ = -48						; size = 4
_end$ = -44						; size = 4
_start$ = -40						; size = 4
_bytes$ = -36						; size = 4
_to_skip$ = -32						; size = 4
_hold$ = -28						; size = 4
_refill$ = -24						; size = 4
_buf_size$ = -20					; size = 4
_lineno$ = -16						; size = 4
_cb$ = -8						; size = 4
_stream$ = 8						; size = 4
_callback$ = 12						; size = 4
_client_data$ = 16					; size = 4
_lno$ = 20						; size = 4
__bdf_readstream PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 685
	mov	DWORD PTR _buf$[ebp], 0
; Line 686
	mov	eax, DWORD PTR _stream$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 687
	mov	DWORD PTR _error$[ebp], 0
; Line 690
	cmp	DWORD PTR _callback$[ebp], 0
	jne	SHORT $LN24@bdf_readst
; Line 692
	push	OFFSET $SG7810
	push	692					; 000002b4H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 693
	jmp	$Exit$33
$LN24@bdf_readst:
; Line 697
	mov	DWORD PTR _buf_size$[ebp], 1024		; 00000400H
; Line 699
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _buf_size$[ebp]
	push	eax
	push	0
	push	1
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN23@bdf_readst
; Line 700
	jmp	$Exit$33
$LN23@bdf_readst:
; Line 702
	mov	edx, DWORD PTR _callback$[ebp]
	mov	DWORD PTR _cb$[ebp], edx
; Line 703
	mov	DWORD PTR _lineno$[ebp], 1
; Line 704
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _buf$[ebp]
	mov	BYTE PTR [edx+ecx], 0
; Line 705
	mov	DWORD PTR _start$[ebp], 0
; Line 706
	mov	DWORD PTR _avail$[ebp], 0
; Line 707
	mov	DWORD PTR _cursor$[ebp], 0
; Line 708
	mov	DWORD PTR _refill$[ebp], 1
; Line 709
	mov	DWORD PTR _to_skip$[ebp], 256		; 00000100H
; Line 710
	mov	DWORD PTR _bytes$[ebp], 0
$LN22@bdf_readst:
; Line 714
	cmp	DWORD PTR _refill$[ebp], 0
	je	SHORT $LN20@bdf_readst
; Line 718
	mov	eax, DWORD PTR _buf_size$[ebp]
	sub	eax, DWORD PTR _cursor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _cursor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	_FT_Stream_TryRead
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bytes$[ebp], eax
; Line 719
	mov	eax, DWORD PTR _cursor$[ebp]
	add	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _avail$[ebp], eax
; Line 720
	mov	DWORD PTR _cursor$[ebp], 0
; Line 721
	mov	DWORD PTR _refill$[ebp], 0
$LN20@bdf_readst:
; Line 724
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR _end$[ebp], ecx
; Line 727
	mov	edx, DWORD PTR _start$[ebp]
	cmp	edx, DWORD PTR _avail$[ebp]
	jge	SHORT $LN18@bdf_readst
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, DWORD PTR _to_skip$[ebp]
	jne	SHORT $LN18@bdf_readst
; Line 729
	mov	edx, DWORD PTR _start$[ebp]
	add	edx, 1
	mov	DWORD PTR _start$[ebp], edx
; Line 730
	mov	DWORD PTR _to_skip$[ebp], 256		; 00000100H
; Line 731
	jmp	SHORT $LN22@bdf_readst
$LN18@bdf_readst:
; Line 735
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _avail$[ebp]
	jge	SHORT $LN17@bdf_readst
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _end$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN17@bdf_readst
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN17@bdf_readst
; Line 736
	mov	edx, DWORD PTR _end$[ebp]
	add	edx, 1
	mov	DWORD PTR _end$[ebp], edx
	jmp	SHORT $LN18@bdf_readst
$LN17@bdf_readst:
; Line 740
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _avail$[ebp]
	jl	$LN16@bdf_readst
; Line 742
	cmp	DWORD PTR _bytes$[ebp], 0
	jne	SHORT $LN15@bdf_readst
; Line 743
	jmp	$LN21@bdf_readst
$LN15@bdf_readst:
; Line 745
	cmp	DWORD PTR _start$[ebp], 0
	jne	SHORT $LN14@bdf_readst
; Line 752
	cmp	DWORD PTR _buf_size$[ebp], 65536	; 00010000H
	jb	SHORT $LN13@bdf_readst
; Line 754
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	push	OFFSET $SG7831
	call	_FT_Message
	add	esp, 8
; Line 755
	push	OFFSET $SG7832
	push	755					; 000002f3H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 756
	jmp	$Exit$33
$LN13@bdf_readst:
; Line 759
	mov	edx, DWORD PTR _buf_size$[ebp]
	shl	edx, 1
	mov	DWORD PTR _new_size$1[ebp], edx
; Line 760
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _new_size$1[ebp]
	push	edx
	mov	eax, DWORD PTR _buf_size$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buf$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN12@bdf_readst
; Line 761
	jmp	$Exit$33
$LN12@bdf_readst:
; Line 763
	mov	edx, DWORD PTR _buf_size$[ebp]
	mov	DWORD PTR _cursor$[ebp], edx
; Line 764
	mov	eax, DWORD PTR _new_size$1[ebp]
	mov	DWORD PTR _buf_size$[ebp], eax
; Line 766
	jmp	SHORT $LN11@bdf_readst
$LN14@bdf_readst:
; Line 768
	mov	ecx, DWORD PTR _avail$[ebp]
	sub	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR _bytes$[ebp], ecx
; Line 770
	mov	esi, esp
	mov	edx, DWORD PTR _bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 772
	mov	edx, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _cursor$[ebp], edx
; Line 773
	mov	eax, DWORD PTR _avail$[ebp]
	sub	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _avail$[ebp], eax
; Line 774
	mov	DWORD PTR _start$[ebp], 0
$LN11@bdf_readst:
; Line 776
	mov	DWORD PTR _refill$[ebp], 1
; Line 777
	jmp	$LN22@bdf_readst
$LN16@bdf_readst:
; Line 781
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _end$[ebp]
	movsx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _hold$[ebp], edx
; Line 782
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _end$[ebp]
	mov	BYTE PTR [eax], 0
; Line 785
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _start$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 35					; 00000023H
	je	SHORT $LN10@bdf_readst
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 26					; 0000001aH
	je	SHORT $LN10@bdf_readst
	mov	edx, DWORD PTR _end$[ebp]
	cmp	edx, DWORD PTR _start$[ebp]
	jle	SHORT $LN10@bdf_readst
; Line 788
	mov	esi, esp
	mov	eax, DWORD PTR _client_data$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cb$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	add	ecx, DWORD PTR _start$[ebp]
	push	ecx
	call	DWORD PTR _cb$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 790
	cmp	DWORD PTR _error$[ebp], -1
	jne	SHORT $LN9@bdf_readst
; Line 792
	mov	esi, esp
	mov	edx, DWORD PTR _client_data$[ebp]
	push	edx
	lea	eax, DWORD PTR _cb$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lineno$[ebp]
	push	ecx
	mov	edx, DWORD PTR _end$[ebp]
	sub	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _start$[ebp]
	push	eax
	call	DWORD PTR _cb$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
$LN9@bdf_readst:
; Line 793
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN10@bdf_readst
; Line 794
	jmp	SHORT $LN21@bdf_readst
$LN10@bdf_readst:
; Line 797
	mov	ecx, DWORD PTR _lineno$[ebp]
	add	ecx, 1
	mov	DWORD PTR _lineno$[ebp], ecx
; Line 798
	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, DWORD PTR _end$[ebp]
	mov	al, BYTE PTR _hold$[ebp]
	mov	BYTE PTR [edx], al
; Line 799
	mov	ecx, DWORD PTR _end$[ebp]
	add	ecx, 1
	mov	DWORD PTR _start$[ebp], ecx
; Line 801
	cmp	DWORD PTR _hold$[ebp], 10		; 0000000aH
	jne	SHORT $LN7@bdf_readst
; Line 802
	mov	DWORD PTR _to_skip$[ebp], 13		; 0000000dH
	jmp	SHORT $LN6@bdf_readst
$LN7@bdf_readst:
; Line 803
	cmp	DWORD PTR _hold$[ebp], 13		; 0000000dH
	jne	SHORT $LN5@bdf_readst
; Line 804
	mov	DWORD PTR _to_skip$[ebp], 10		; 0000000aH
; Line 805
	jmp	SHORT $LN6@bdf_readst
$LN5@bdf_readst:
; Line 806
	mov	DWORD PTR _to_skip$[ebp], 256		; 00000100H
$LN6@bdf_readst:
; Line 807
	jmp	$LN22@bdf_readst
$LN21@bdf_readst:
; Line 809
	mov	edx, DWORD PTR _lno$[ebp]
	mov	eax, DWORD PTR _lineno$[ebp]
	mov	DWORD PTR [edx], eax
$Exit$33:
; Line 812
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], 0
	xor	eax, eax
	jne	SHORT $Exit$33
; Line 813
	mov	eax, DWORD PTR _error$[ebp]
; Line 814
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@bdf_readst
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@bdf_readst:
	DD	2
	DD	$LN31@bdf_readst
$LN31@bdf_readst:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN29@bdf_readst
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN30@bdf_readst
$LN30@bdf_readst:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN29@bdf_readst:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	0
__bdf_readstream ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv210 = -76						; size = 4
tv189 = -72						; size = 4
_error$ = -68						; size = 4
_seps$ = -60						; size = 32
_end$ = -24						; size = 4
_ep$ = -20						; size = 4
_sp$ = -16						; size = 4
_final_empty$ = -12					; size = 4
_mult$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_list$ = 8						; size = 4
_separators$ = 12					; size = 4
_line$ = 16						; size = 4
_linelen$ = 20						; size = 4
__bdf_list_split PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 572
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 576
	mov	DWORD PTR _error$[ebp], 0
; Line 580
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 581
	mov	ecx, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN26@bdf_list_s
; Line 583
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], OFFSET _empty
; Line 584
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], OFFSET _empty
; Line 585
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+edx], OFFSET _empty
; Line 586
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], OFFSET _empty
; Line 587
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+eax], OFFSET _empty
$LN26@bdf_list_s:
; Line 591
	cmp	DWORD PTR _linelen$[ebp], 0
	je	SHORT $LN24@bdf_list_s
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	jne	SHORT $LN25@bdf_list_s
$LN24@bdf_list_s:
; Line 592
	jmp	$Exit$36
$LN25@bdf_list_s:
; Line 597
	cmp	DWORD PTR _separators$[ebp], 0
	je	SHORT $LN22@bdf_list_s
	mov	edx, DWORD PTR _separators$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN23@bdf_list_s
$LN22@bdf_list_s:
; Line 599
	push	OFFSET $SG7756
	push	599					; 00000257H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 600
	jmp	$Exit$36
$LN23@bdf_list_s:
; Line 604
	push	32					; 00000020H
	push	0
	lea	ecx, DWORD PTR _seps$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 609
	mov	DWORD PTR _mult$[ebp], 0
	mov	edx, DWORD PTR _separators$[ebp]
	mov	DWORD PTR _sp$[ebp], edx
	jmp	SHORT $LN21@bdf_list_s
$LN20@bdf_list_s:
	mov	eax, DWORD PTR _sp$[ebp]
	add	eax, 1
	mov	DWORD PTR _sp$[ebp], eax
$LN21@bdf_list_s:
	cmp	DWORD PTR _sp$[ebp], 0
	je	SHORT $LN19@bdf_list_s
	mov	ecx, DWORD PTR _sp$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN19@bdf_list_s
; Line 611
	mov	eax, DWORD PTR _sp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 43					; 0000002bH
	jne	SHORT $LN18@bdf_list_s
	mov	edx, DWORD PTR _sp$[ebp]
	movsx	eax, BYTE PTR [edx+1]
	test	eax, eax
	jne	SHORT $LN18@bdf_list_s
; Line 612
	mov	DWORD PTR _mult$[ebp], 1
; Line 613
	jmp	SHORT $LN17@bdf_list_s
$LN18@bdf_list_s:
; Line 614
	mov	ecx, DWORD PTR _sp$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sar	edx, 3
	mov	eax, DWORD PTR _sp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	movzx	ecx, al
	movsx	edx, BYTE PTR _seps$[ebp+edx]
	or	edx, ecx
	mov	eax, DWORD PTR _sp$[ebp]
	movzx	ecx, BYTE PTR [eax]
	sar	ecx, 3
	mov	BYTE PTR _seps$[ebp+ecx], dl
$LN17@bdf_list_s:
; Line 615
	jmp	SHORT $LN20@bdf_list_s
$LN19@bdf_list_s:
; Line 619
	mov	DWORD PTR _final_empty$[ebp], 0
	mov	edx, DWORD PTR _line$[ebp]
	mov	DWORD PTR _ep$[ebp], edx
	mov	eax, DWORD PTR _ep$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
	mov	ecx, DWORD PTR _sp$[ebp]
	add	ecx, DWORD PTR _linelen$[ebp]
	mov	DWORD PTR _end$[ebp], ecx
$LN16@bdf_list_s:
	mov	edx, DWORD PTR _sp$[ebp]
	cmp	edx, DWORD PTR _end$[ebp]
	jae	$LN15@bdf_list_s
	mov	eax, DWORD PTR _sp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN15@bdf_list_s
; Line 622
	jmp	SHORT $LN14@bdf_list_s
$LN13@bdf_list_s:
	mov	edx, DWORD PTR _ep$[ebp]
	add	edx, 1
	mov	DWORD PTR _ep$[ebp], edx
$LN14@bdf_list_s:
	mov	eax, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN12@bdf_list_s
	mov	edx, DWORD PTR _ep$[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 3
	movsx	edx, BYTE PTR _seps$[ebp+eax]
	mov	eax, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [eax]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	and	edx, eax
	jne	SHORT $LN12@bdf_list_s
; Line 623
	jmp	SHORT $LN13@bdf_list_s
$LN12@bdf_list_s:
; Line 626
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+4]
	jne	SHORT $LN11@bdf_list_s
; Line 628
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	__bdf_list_ensure
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 629
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN11@bdf_list_s
; Line 630
	jmp	$Exit$36
$LN11@bdf_list_s:
; Line 634
	mov	ecx, DWORD PTR _ep$[ebp]
	cmp	ecx, DWORD PTR _sp$[ebp]
	jbe	SHORT $LN29@bdf_list_s
	mov	edx, DWORD PTR _sp$[ebp]
	mov	DWORD PTR tv189[ebp], edx
	jmp	SHORT $LN30@bdf_list_s
$LN29@bdf_list_s:
	mov	DWORD PTR tv189[ebp], OFFSET _empty
$LN30@bdf_list_s:
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR tv189[ebp]
	mov	DWORD PTR [eax+ecx*4], edx
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 636
	mov	eax, DWORD PTR _ep$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
; Line 638
	cmp	DWORD PTR _mult$[ebp], 0
	je	SHORT $LN9@bdf_list_s
; Line 642
	jmp	SHORT $LN8@bdf_list_s
$LN7@bdf_list_s:
	mov	ecx, DWORD PTR _ep$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ep$[ebp], ecx
$LN8@bdf_list_s:
	mov	edx, DWORD PTR _ep$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	je	SHORT $LN6@bdf_list_s
	mov	ecx, DWORD PTR _ep$[ebp]
	movzx	edx, BYTE PTR [ecx]
	sar	edx, 3
	movsx	eax, BYTE PTR _seps$[ebp+edx]
	mov	ecx, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [ecx]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	and	eax, edx
	je	SHORT $LN6@bdf_list_s
; Line 643
	mov	eax, DWORD PTR _ep$[ebp]
	mov	BYTE PTR [eax], 0
	jmp	SHORT $LN7@bdf_list_s
$LN6@bdf_list_s:
; Line 645
	jmp	SHORT $LN5@bdf_list_s
$LN9@bdf_list_s:
	mov	ecx, DWORD PTR _ep$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN5@bdf_list_s
; Line 648
	mov	eax, DWORD PTR _ep$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _ep$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ep$[ebp], ecx
$LN5@bdf_list_s:
; Line 650
	mov	edx, DWORD PTR _ep$[ebp]
	cmp	edx, DWORD PTR _sp$[ebp]
	jbe	SHORT $LN31@bdf_list_s
	mov	eax, DWORD PTR _ep$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN31@bdf_list_s
	mov	DWORD PTR tv210[ebp], 1
	jmp	SHORT $LN32@bdf_list_s
$LN31@bdf_list_s:
	mov	DWORD PTR tv210[ebp], 0
$LN32@bdf_list_s:
	mov	edx, DWORD PTR tv210[ebp]
	mov	DWORD PTR _final_empty$[ebp], edx
; Line 651
	mov	eax, DWORD PTR _ep$[ebp]
	mov	DWORD PTR _sp$[ebp], eax
; Line 652
	jmp	$LN16@bdf_list_s
$LN15@bdf_list_s:
; Line 655
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, DWORD PTR _final_empty$[ebp]
	mov	eax, DWORD PTR _list$[ebp]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN3@bdf_list_s
; Line 657
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _final_empty$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	push	edx
	call	__bdf_list_ensure
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 658
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN3@bdf_list_s
; Line 659
	jmp	SHORT $Exit$36
$LN3@bdf_list_s:
; Line 662
	cmp	DWORD PTR _final_empty$[ebp], 0
	je	SHORT $LN1@bdf_list_s
; Line 663
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax+ecx*4], OFFSET _empty
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 1
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN1@bdf_list_s:
; Line 665
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+edx*4], 0
$Exit$36:
; Line 668
	mov	eax, DWORD PTR _error$[ebp]
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@bdf_list_s
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@bdf_list_s:
	DD	1
	DD	$LN34@bdf_list_s
$LN34@bdf_list_s:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN33@bdf_list_s
$LN33@bdf_list_s:
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
__bdf_list_split ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_fp$1 = -16						; size = 4
_dp$ = -12						; size = 4
_j$ = -8						; size = 4
_i$ = -4						; size = 4
_list$ = 8						; size = 4
_c$ = 12						; size = 4
_alen$ = 16						; size = 4
__bdf_list_join PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 533
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 538
	mov	eax, DWORD PTR _alen$[ebp]
	mov	DWORD PTR [eax], 0
; Line 540
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN8@bdf_list_j
	mov	ecx, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jne	SHORT $LN9@bdf_list_j
$LN8@bdf_list_j:
; Line 541
	xor	eax, eax
	jmp	$LN10@bdf_list_j
$LN9@bdf_list_j:
; Line 543
	mov	edx, 4
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+edx]
	mov	DWORD PTR _dp$[ebp], eax
; Line 544
	mov	DWORD PTR _j$[ebp], 0
	mov	ecx, DWORD PTR _j$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN7@bdf_list_j
$LN6@bdf_list_j:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN7@bdf_list_j:
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN5@bdf_list_j
; Line 546
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _fp$1[ebp], edx
$LN4@bdf_list_j:
; Line 549
	mov	eax, DWORD PTR _fp$1[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@bdf_list_j
; Line 550
	mov	edx, DWORD PTR _dp$[ebp]
	add	edx, DWORD PTR _j$[ebp]
	mov	eax, DWORD PTR _fp$1[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx], cl
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
	mov	eax, DWORD PTR _fp$1[ebp]
	add	eax, 1
	mov	DWORD PTR _fp$1[ebp], eax
	jmp	SHORT $LN4@bdf_list_j
$LN3@bdf_list_j:
; Line 552
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	edx, DWORD PTR _list$[ebp]
	cmp	ecx, DWORD PTR [edx+8]
	jae	SHORT $LN2@bdf_list_j
; Line 553
	mov	eax, DWORD PTR _dp$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _j$[ebp]
	add	edx, 1
	mov	DWORD PTR _j$[ebp], edx
$LN2@bdf_list_j:
; Line 554
	jmp	SHORT $LN6@bdf_list_j
$LN5@bdf_list_j:
; Line 555
	cmp	DWORD PTR _dp$[ebp], OFFSET _empty
	je	SHORT $LN1@bdf_list_j
; Line 556
	mov	eax, DWORD PTR _dp$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@bdf_list_j:
; Line 558
	mov	ecx, DWORD PTR _alen$[ebp]
	mov	edx, DWORD PTR _j$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 559
	mov	eax, DWORD PTR _dp$[ebp]
$LN10@bdf_list_j:
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_list_join ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_u$ = -8						; size = 4
_i$ = -4						; size = 4
_list$ = 8						; size = 4
_n$ = 12						; size = 4
__bdf_list_shift PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 505
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 509
	cmp	DWORD PTR _list$[ebp], 0
	je	SHORT $LN5@bdf_list_s
	mov	eax, DWORD PTR _list$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN5@bdf_list_s
	cmp	DWORD PTR _n$[ebp], 0
	jne	SHORT $LN6@bdf_list_s
$LN5@bdf_list_s:
; Line 510
	jmp	SHORT $LN7@bdf_list_s
$LN6@bdf_list_s:
; Line 512
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR _n$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jb	SHORT $LN4@bdf_list_s
; Line 514
	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 515
	jmp	SHORT $LN7@bdf_list_s
$LN4@bdf_list_s:
; Line 518
	mov	ecx, DWORD PTR _n$[ebp]
	mov	DWORD PTR _u$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@bdf_list_s
$LN2@bdf_list_s:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	mov	eax, DWORD PTR _u$[ebp]
	add	eax, 1
	mov	DWORD PTR _u$[ebp], eax
$LN3@bdf_list_s:
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR _u$[ebp]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN1@bdf_list_s
; Line 519
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _u$[ebp]
	mov	ecx, DWORD PTR [ecx+esi*4]
	mov	DWORD PTR [eax+edx*4], ecx
	jmp	SHORT $LN2@bdf_list_s
$LN1@bdf_list_s:
; Line 520
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN7@bdf_list_s:
; Line 521
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_list_shift ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$1 = -28						; size = 4
_bigsize$2 = -24					; size = 4
_newsize$3 = -20					; size = 4
_oldsize$4 = -16					; size = 4
_error$ = -8						; size = 4
_list$ = 8						; size = 4
_num_items$ = 12					; size = 4
__bdf_list_ensure PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 471
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 472
	mov	DWORD PTR _error$[ebp], 0
; Line 475
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR _num_items$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jbe	$Exit$12
; Line 477
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _oldsize$4[ebp], eax
; Line 478
	mov	ecx, DWORD PTR _oldsize$4[ebp]
	shr	ecx, 1
	mov	edx, DWORD PTR _oldsize$4[ebp]
	lea	eax, DWORD PTR [edx+ecx+5]
	mov	DWORD PTR _newsize$3[ebp], eax
; Line 479
	mov	DWORD PTR _bigsize$2[ebp], 536870911	; 1fffffffH
; Line 480
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _memory$1[ebp], edx
; Line 483
	mov	eax, DWORD PTR _oldsize$4[ebp]
	cmp	eax, DWORD PTR _bigsize$2[ebp]
	jne	SHORT $LN5@bdf_list_e
; Line 485
	push	OFFSET $SG7682
	push	485					; 000001e5H
	push	64					; 00000040H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 64					; 00000040H
	mov	DWORD PTR _error$[ebp], eax
; Line 486
	jmp	SHORT $Exit$12
	jmp	SHORT $LN4@bdf_list_e
$LN5@bdf_list_e:
; Line 488
	mov	ecx, DWORD PTR _newsize$3[ebp]
	cmp	ecx, DWORD PTR _oldsize$4[ebp]
	jb	SHORT $LN2@bdf_list_e
	mov	edx, DWORD PTR _newsize$3[ebp]
	cmp	edx, DWORD PTR _bigsize$2[ebp]
	jbe	SHORT $LN4@bdf_list_e
$LN2@bdf_list_e:
; Line 489
	mov	eax, DWORD PTR _bigsize$2[ebp]
	mov	DWORD PTR _newsize$3[ebp], eax
$LN4@bdf_list_e:
; Line 491
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _newsize$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _oldsize$4[ebp]
	push	edx
	push	4
	mov	eax, DWORD PTR _memory$1[ebp]
	push	eax
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [ecx], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@bdf_list_e
; Line 492
	jmp	SHORT $Exit$12
$LN1@bdf_list_e:
; Line 494
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR _newsize$3[ebp]
	mov	DWORD PTR [edx+4], eax
$Exit$12:
; Line 498
	mov	eax, DWORD PTR _error$[ebp]
; Line 499
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@bdf_list_e
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@bdf_list_e:
	DD	1
	DD	$LN10@bdf_list_e
$LN10@bdf_list_e:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@bdf_list_e
$LN9@bdf_list_e:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
__bdf_list_ensure ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_list$ = 8						; size = 4
__bdf_list_done PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 456
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 457
	mov	eax, DWORD PTR _list$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 460
	cmp	DWORD PTR _memory$[ebp], 0
	je	SHORT $LN5@bdf_list_d
$LN3@bdf_list_d:
; Line 462
	mov	edx, DWORD PTR _list$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _list$[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jne	SHORT $LN3@bdf_list_d
; Line 463
	push	16					; 00000010H
	push	0
	mov	ecx, DWORD PTR _list$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
$LN5@bdf_list_d:
; Line 465
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__bdf_list_done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_list$ = 8						; size = 4
_memory$ = 12						; size = 4
__bdf_list_init PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 448
	push	ebp
	mov	ebp, esp
; Line 449
	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR _list$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 450
	mov	ecx, DWORD PTR _list$[ebp]
	mov	edx, DWORD PTR _memory$[ebp]
	mov	DWORD PTR [ecx+12], edx
; Line 451
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
__bdf_list_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_np$ = -4						; size = 4
_key$ = 8						; size = 4
_ht$ = 12						; size = 4
_hash_lookup PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 371
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 372
	mov	eax, DWORD PTR _ht$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_hash_bucket
	add	esp, 8
	mov	DWORD PTR _np$[ebp], eax
; Line 375
	mov	edx, DWORD PTR _np$[ebp]
	mov	eax, DWORD PTR [edx]
; Line 376
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_hash_lookup ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$ = -16						; size = 4
_bp$ = -8						; size = 4
_nn$ = -4						; size = 4
_key$ = 8						; size = 4
_data$ = 12						; size = 4
_ht$ = 16						; size = 4
_memory$ = 20						; size = 4
_hash_insert PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 338
	mov	eax, DWORD PTR _ht$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_hash_bucket
	add	esp, 8
	mov	DWORD PTR _bp$[ebp], eax
; Line 339
	mov	DWORD PTR _error$[ebp], 0
; Line 342
	mov	edx, DWORD PTR _bp$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _nn$[ebp], eax
; Line 343
	cmp	DWORD PTR _nn$[ebp], 0
	jne	SHORT $LN5@hash_inser
; Line 345
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	8
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _nn$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@hash_inser
; Line 346
	jmp	SHORT $Exit$11
$LN4@hash_inser:
; Line 347
	mov	eax, DWORD PTR _bp$[ebp]
	mov	ecx, DWORD PTR _nn$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 349
	mov	edx, DWORD PTR _nn$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR [edx], eax
; Line 350
	mov	ecx, DWORD PTR _nn$[ebp]
	mov	edx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 352
	mov	eax, DWORD PTR _ht$[ebp]
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx]
	jl	SHORT $LN3@hash_inser
; Line 354
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ht$[ebp]
	push	ecx
	call	_hash_rehash
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 355
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN3@hash_inser
; Line 356
	jmp	SHORT $Exit$11
$LN3@hash_inser:
; Line 358
	mov	edx, DWORD PTR _ht$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 360
	jmp	SHORT $Exit$11
$LN5@hash_inser:
; Line 361
	mov	edx, DWORD PTR _nn$[ebp]
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+4], eax
$Exit$11:
; Line 364
	mov	eax, DWORD PTR _error$[ebp]
; Line 365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@hash_inser
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@hash_inser:
	DD	1
	DD	$LN9@hash_inser
$LN9@hash_inser:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN8@hash_inser
$LN8@hash_inser:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_hash_insert ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_bp$1 = -12						; size = 4
_sz$2 = -8						; size = 4
_i$3 = -4						; size = 4
_ht$ = 8						; size = 4
_memory$ = 12						; size = 4
_hash_free PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 317
	cmp	DWORD PTR _ht$[ebp], 0
	je	SHORT $LN11@hash_free
; Line 319
	mov	eax, DWORD PTR _ht$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _sz$2[ebp], ecx
; Line 320
	mov	edx, DWORD PTR _ht$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _bp$1[ebp], eax
; Line 323
	mov	DWORD PTR _i$3[ebp], 0
	jmp	SHORT $LN9@hash_free
$LN8@hash_free:
	mov	ecx, DWORD PTR _i$3[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
	mov	edx, DWORD PTR _bp$1[ebp]
	add	edx, 4
	mov	DWORD PTR _bp$1[ebp], edx
$LN9@hash_free:
	mov	eax, DWORD PTR _i$3[ebp]
	cmp	eax, DWORD PTR _sz$2[ebp]
	jge	SHORT $LN3@hash_free
$LN6@hash_free:
; Line 324
	mov	ecx, DWORD PTR _bp$1[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _bp$1[ebp]
	mov	DWORD PTR [ecx], 0
	xor	edx, edx
	jne	SHORT $LN6@hash_free
	jmp	SHORT $LN8@hash_free
$LN3@hash_free:
; Line 326
	mov	eax, DWORD PTR _ht$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [eax+12], 0
	xor	ecx, ecx
	jne	SHORT $LN3@hash_free
$LN11@hash_free:
; Line 328
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_hash_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$ = -12						; size = 4
_sz$ = -4						; size = 4
_ht$ = 8						; size = 4
_memory$ = 12						; size = 4
_hash_init PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 297
	mov	DWORD PTR _sz$[ebp], 241		; 000000f1H
; Line 298
	mov	DWORD PTR _error$[ebp], 0
; Line 301
	mov	eax, DWORD PTR _ht$[ebp]
	mov	ecx, DWORD PTR _sz$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 302
	mov	eax, DWORD PTR _sz$[ebp]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [edx], eax
; Line 303
	mov	eax, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 305
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _sz$[ebp]
	push	edx
	push	0
	push	4
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [ecx+12], eax
$Exit$7:
; Line 309
	mov	eax, DWORD PTR _error$[ebp]
; Line 310
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@hash_init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@hash_init:
	DD	1
	DD	$LN5@hash_init
$LN5@hash_init:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@hash_init
$LN4@hash_init:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_hash_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$ = -28						; size = 4
_sz$ = -20						; size = 4
_i$ = -16						; size = 4
_nbp$ = -12						; size = 4
_bp$ = -8						; size = 4
_obp$ = -4						; size = 4
_ht$ = 8						; size = 4
_memory$ = 12						; size = 4
_hash_rehash PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 266
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 267
	mov	eax, DWORD PTR _ht$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _obp$[ebp], ecx
; Line 268
	mov	edx, DWORD PTR _ht$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _sz$[ebp], eax
; Line 269
	mov	DWORD PTR _error$[ebp], 0
; Line 272
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shl	edx, 1
	mov	eax, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 273
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [edx], eax
; Line 275
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	0
	push	4
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	DWORD PTR [ecx+12], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN8@hash_rehas
; Line 276
	jmp	SHORT $Exit$14
$LN8@hash_rehas:
; Line 278
	mov	DWORD PTR _i$[ebp], 0
	mov	edx, DWORD PTR _obp$[ebp]
	mov	DWORD PTR _bp$[ebp], edx
	jmp	SHORT $LN7@hash_rehas
$LN6@hash_rehas:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _bp$[ebp]
	add	ecx, 4
	mov	DWORD PTR _bp$[ebp], ecx
$LN7@hash_rehas:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _sz$[ebp]
	jge	SHORT $LN3@hash_rehas
; Line 280
	mov	eax, DWORD PTR _bp$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@hash_rehas
; Line 282
	mov	ecx, DWORD PTR _ht$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bp$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_hash_bucket
	add	esp, 8
	mov	DWORD PTR _nbp$[ebp], eax
; Line 283
	mov	edx, DWORD PTR _nbp$[ebp]
	mov	eax, DWORD PTR _bp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
$LN4@hash_rehas:
; Line 285
	jmp	SHORT $LN6@hash_rehas
$LN3@hash_rehas:
; Line 286
	mov	edx, DWORD PTR _obp$[ebp]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _obp$[ebp], 0
	xor	ecx, ecx
	jne	SHORT $LN3@hash_rehas
$Exit$14:
; Line 289
	mov	eax, DWORD PTR _error$[ebp]
; Line 290
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@hash_rehas
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@hash_rehas:
	DD	1
	DD	$LN12@hash_rehas
$LN12@hash_rehas:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN11@hash_rehas
$LN11@hash_rehas:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_hash_rehash ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_ndp$ = -16						; size = 4
_bp$ = -12						; size = 4
_res$ = -8						; size = 4
_kp$ = -4						; size = 4
_key$ = 8						; size = 4
_ht$ = 12						; size = 4
_hash_bucket PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 238
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 239
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _kp$[ebp], eax
; Line 240
	mov	DWORD PTR _res$[ebp], 0
; Line 241
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _bp$[ebp], edx
$LN6@hash_bucke:
; Line 245
	mov	eax, DWORD PTR _kp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@hash_bucke
; Line 246
	mov	edx, DWORD PTR _res$[ebp]
	shl	edx, 5
	sub	edx, DWORD PTR _res$[ebp]
	mov	eax, DWORD PTR _kp$[ebp]
	movsx	ecx, BYTE PTR [eax]
	add	edx, ecx
	mov	DWORD PTR _res$[ebp], edx
	mov	edx, DWORD PTR _kp$[ebp]
	add	edx, 1
	mov	DWORD PTR _kp$[ebp], edx
	jmp	SHORT $LN6@hash_bucke
$LN5@hash_bucke:
; Line 248
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	eax, DWORD PTR _res$[ebp]
	xor	edx, edx
	div	DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _bp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	DWORD PTR _ndp$[ebp], ecx
$LN4@hash_bucke:
; Line 249
	mov	edx, DWORD PTR _ndp$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN3@hash_bucke
; Line 251
	mov	eax, DWORD PTR _ndp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _kp$[ebp], edx
; Line 252
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _kp$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _key$[ebp]
	movsx	edx, BYTE PTR [ecx+edx]
	cmp	eax, edx
	jne	SHORT $LN2@hash_bucke
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _kp$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@hash_bucke
; Line 253
	jmp	SHORT $LN3@hash_bucke
$LN2@hash_bucke:
; Line 254
	mov	edx, DWORD PTR _ndp$[ebp]
	sub	edx, 4
	mov	DWORD PTR _ndp$[ebp], edx
; Line 255
	mov	eax, DWORD PTR _ndp$[ebp]
	cmp	eax, DWORD PTR _bp$[ebp]
	jae	SHORT $LN1@hash_bucke
; Line 256
	mov	ecx, DWORD PTR _ht$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _bp$[ebp]
	lea	ecx, DWORD PTR [eax+edx*4-4]
	mov	DWORD PTR _ndp$[ebp], ecx
$LN1@hash_bucke:
; Line 257
	jmp	SHORT $LN4@hash_bucke
$LN3@hash_bucke:
; Line 259
	mov	eax, DWORD PTR _ndp$[ebp]
; Line 260
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_hash_bucket ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -8						; size = 4
_hn$ = -4						; size = 4
_font$ = 8						; size = 4
_name$ = 12						; size = 4
_bdf_get_font_property PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 2630
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2634
	cmp	DWORD PTR _font$[ebp], 0
	je	SHORT $LN1@bdf_get_fo
	mov	eax, DWORD PTR _font$[ebp]
	cmp	DWORD PTR [eax+72], 0
	je	SHORT $LN1@bdf_get_fo
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN1@bdf_get_fo
	mov	ecx, DWORD PTR _name$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN2@bdf_get_fo
$LN1@bdf_get_fo:
; Line 2635
	xor	eax, eax
	jmp	SHORT $LN3@bdf_get_fo
$LN2@bdf_get_fo:
; Line 2637
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_hash_lookup
	add	esp, 8
	mov	DWORD PTR _hn$[ebp], eax
; Line 2639
	cmp	DWORD PTR _hn$[ebp], 0
	je	SHORT $LN5@bdf_get_fo
	mov	eax, DWORD PTR _hn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 4
	mov	edx, DWORD PTR _font$[ebp]
	add	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN6@bdf_get_fo
$LN5@bdf_get_fo:
	mov	DWORD PTR tv79[ebp], 0
$LN6@bdf_get_fo:
	mov	eax, DWORD PTR tv79[ebp]
$LN3@bdf_get_fo:
; Line 2640
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_get_font_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_propid$ = -8						; size = 4
_hn$ = -4						; size = 4
_name$ = 8						; size = 4
_font$ = 12						; size = 4
_bdf_get_property PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 1090
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1095
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@bdf_get_pr
	mov	eax, DWORD PTR _name$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@bdf_get_pr
$LN3@bdf_get_pr:
; Line 1096
	xor	eax, eax
	jmp	SHORT $LN5@bdf_get_pr
$LN4@bdf_get_pr:
; Line 1098
	mov	edx, DWORD PTR _font$[ebp]
	add	edx, 278676				; 00044094H
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_hash_lookup
	add	esp, 8
	mov	DWORD PTR _hn$[ebp], eax
	cmp	DWORD PTR _hn$[ebp], 0
	jne	SHORT $LN2@bdf_get_pr
; Line 1099
	xor	eax, eax
	jmp	SHORT $LN5@bdf_get_pr
$LN2@bdf_get_pr:
; Line 1101
	mov	ecx, DWORD PTR _hn$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _propid$[ebp], edx
; Line 1102
	mov	eax, DWORD PTR _propid$[ebp]
	cmp	eax, DWORD PTR __num_bdf_properties
	jb	SHORT $LN1@bdf_get_pr
; Line 1103
	mov	eax, DWORD PTR _propid$[ebp]
	sub	eax, DWORD PTR __num_bdf_properties
	shl	eax, 4
	mov	ecx, DWORD PTR _font$[ebp]
	add	eax, DWORD PTR [ecx+278668]
	jmp	SHORT $LN5@bdf_get_pr
$LN1@bdf_get_pr:
; Line 1105
	mov	eax, DWORD PTR _propid$[ebp]
	shl	eax, 4
	add	eax, OFFSET __bdf_properties
$LN5@bdf_get_pr:
; Line 1106
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_get_property ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -16						; size = 4
_glyphs$ = -12						; size = 4
_i$ = -8						; size = 4
_prop$ = -4						; size = 4
_font$ = 8						; size = 4
_bdf_free_font PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 2548
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2555
	cmp	DWORD PTR _font$[ebp], 0
	jne	SHORT $LN70@bdf_free_f
; Line 2556
	jmp	$LN71@bdf_free_f
$LN70@bdf_free_f:
; Line 2558
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278664]
	mov	DWORD PTR _memory$[ebp], ecx
$LN69@bdf_free_f:
; Line 2560
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jne	SHORT $LN69@bdf_free_f
; Line 2563
	mov	ecx, DWORD PTR _font$[ebp]
	cmp	DWORD PTR [ecx+128], 0
	je	SHORT $LN62@bdf_free_f
; Line 2565
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_hash_free
	add	esp, 8
$LN65@bdf_free_f:
; Line 2566
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+128]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [edx+128], 0
	xor	eax, eax
	jne	SHORT $LN65@bdf_free_f
$LN62@bdf_free_f:
; Line 2570
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+84]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+84], 0
	xor	edx, edx
	jne	SHORT $LN62@bdf_free_f
; Line 2573
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN59@bdf_free_f
$LN58@bdf_free_f:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN59@bdf_free_f:
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+72]
	jae	SHORT $LN52@bdf_free_f
; Line 2575
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	cmp	DWORD PTR [edx+eax+4], 1
	jne	SHORT $LN56@bdf_free_f
$LN55@bdf_free_f:
; Line 2576
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+eax+12]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR [ecx+edx+12], 0
	xor	edx, edx
	jne	SHORT $LN55@bdf_free_f
$LN56@bdf_free_f:
; Line 2577
	jmp	SHORT $LN58@bdf_free_f
$LN52@bdf_free_f:
; Line 2579
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+80], 0
	xor	ecx, ecx
	jne	SHORT $LN52@bdf_free_f
; Line 2583
	mov	DWORD PTR _i$[ebp], 0
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+56]
	mov	DWORD PTR _glyphs$[ebp], eax
	jmp	SHORT $LN49@bdf_free_f
$LN48@bdf_free_f:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	edx, DWORD PTR _glyphs$[ebp]
	add	edx, 36					; 00000024H
	mov	DWORD PTR _glyphs$[ebp], edx
$LN49@bdf_free_f:
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+52]
	jae	SHORT $LN47@bdf_free_f
$LN46@bdf_free_f:
; Line 2585
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jne	SHORT $LN46@bdf_free_f
$LN43@bdf_free_f:
; Line 2586
	mov	ecx, DWORD PTR _glyphs$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [ecx+24], 0
	xor	edx, edx
	jne	SHORT $LN43@bdf_free_f
; Line 2587
	jmp	SHORT $LN48@bdf_free_f
$LN47@bdf_free_f:
; Line 2590
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _glyphs$[ebp], ecx
	jmp	SHORT $LN40@bdf_free_f
$LN39@bdf_free_f:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
	mov	eax, DWORD PTR _glyphs$[ebp]
	add	eax, 36					; 00000024H
	mov	DWORD PTR _glyphs$[ebp], eax
$LN40@bdf_free_f:
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx+64]
	jae	SHORT $LN31@bdf_free_f
$LN37@bdf_free_f:
; Line 2592
	mov	eax, DWORD PTR _glyphs$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [eax], 0
	xor	ecx, ecx
	jne	SHORT $LN37@bdf_free_f
$LN34@bdf_free_f:
; Line 2593
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [edx+24], 0
	xor	eax, eax
	jne	SHORT $LN34@bdf_free_f
; Line 2594
	jmp	SHORT $LN39@bdf_free_f
$LN31@bdf_free_f:
; Line 2596
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _font$[ebp]
	mov	DWORD PTR [ecx+56], 0
	xor	edx, edx
	jne	SHORT $LN31@bdf_free_f
$LN28@bdf_free_f:
; Line 2597
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+68], 0
	xor	ecx, ecx
	jne	SHORT $LN28@bdf_free_f
; Line 2601
	mov	DWORD PTR _i$[ebp], 0
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR _glyphs$[ebp], eax
	jmp	SHORT $LN25@bdf_free_f
$LN24@bdf_free_f:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	mov	edx, DWORD PTR _glyphs$[ebp]
	add	edx, 36					; 00000024H
	mov	DWORD PTR _glyphs$[ebp], edx
$LN25@bdf_free_f:
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+112]
	jae	SHORT $LN16@bdf_free_f
$LN22@bdf_free_f:
; Line 2603
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [edx], 0
	xor	eax, eax
	jne	SHORT $LN22@bdf_free_f
$LN19@bdf_free_f:
; Line 2604
	mov	ecx, DWORD PTR _glyphs$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _glyphs$[ebp]
	mov	DWORD PTR [ecx+24], 0
	xor	edx, edx
	jne	SHORT $LN19@bdf_free_f
; Line 2605
	jmp	SHORT $LN24@bdf_free_f
$LN16@bdf_free_f:
; Line 2607
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+104], 0
	xor	ecx, ecx
	jne	SHORT $LN16@bdf_free_f
; Line 2610
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	mov	eax, DWORD PTR _font$[ebp]
	add	eax, 278676				; 00044094H
	push	eax
	call	_hash_free
	add	esp, 8
; Line 2614
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx+278668]
	mov	DWORD PTR _prop$[ebp], edx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@bdf_free_f
$LN12@bdf_free_f:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _prop$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _prop$[ebp], ecx
$LN13@bdf_free_f:
	mov	edx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx+278672]
	jae	SHORT $LN3@bdf_free_f
$LN10@bdf_free_f:
; Line 2616
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	DWORD PTR [ecx], 0
	xor	edx, edx
	jne	SHORT $LN10@bdf_free_f
; Line 2617
	mov	eax, DWORD PTR _prop$[ebp]
	cmp	DWORD PTR [eax+4], 1
	jne	SHORT $LN7@bdf_free_f
$LN6@bdf_free_f:
; Line 2618
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _prop$[ebp]
	mov	DWORD PTR [ecx+12], 0
	xor	edx, edx
	jne	SHORT $LN6@bdf_free_f
$LN7@bdf_free_f:
; Line 2619
	jmp	SHORT $LN12@bdf_free_f
$LN3@bdf_free_f:
; Line 2621
	mov	eax, DWORD PTR _font$[ebp]
	mov	ecx, DWORD PTR [eax+278668]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _font$[ebp]
	mov	DWORD PTR [eax+278668], 0
	xor	ecx, ecx
	jne	SHORT $LN3@bdf_free_f
$LN71@bdf_free_f:
; Line 2624
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_bdf_free_font ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -36						; size = 4
_error$ = -28						; size = 4
_memory$ = -20						; size = 4
_p$ = -16						; size = 4
_lineno$ = -8						; size = 4
_stream$ = 8						; size = 4
_extmemory$ = 12					; size = 4
_opts$ = 16						; size = 4
_font$ = 20						; size = 4
_bdf_load_font PROC
; File d:\mozilla\modules\freetype2\src\bdf\bdflib.c
; Line 2394
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 2395
	mov	DWORD PTR _lineno$[ebp], 0
; Line 2396
	mov	DWORD PTR _p$[ebp], 0
; Line 2398
	mov	eax, DWORD PTR _extmemory$[ebp]
	mov	DWORD PTR _memory$[ebp], eax
; Line 2399
	mov	DWORD PTR _error$[ebp], 0
; Line 2402
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	139324					; 0002203cH
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _p$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN56@bdf_load_f
; Line 2403
	jmp	$Exit$65
$LN56@bdf_load_f:
; Line 2405
	mov	DWORD PTR _memory$[ebp], 0
; Line 2406
	cmp	DWORD PTR _opts$[ebp], 0
	je	SHORT $LN59@bdf_load_f
	mov	eax, DWORD PTR _opts$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN60@bdf_load_f
$LN59@bdf_load_f:
	mov	DWORD PTR tv71[ebp], OFFSET __bdf_opts
$LN60@bdf_load_f:
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR tv71[ebp]
	mov	DWORD PTR [ecx+36], edx
; Line 2407
	mov	eax, 32767				; 00007fffH
	mov	ecx, DWORD PTR _p$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 2408
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _extmemory$[ebp]
	mov	DWORD PTR [edx+139320], eax
; Line 2410
	mov	ecx, DWORD PTR _extmemory$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 139304				; 00022028H
	push	edx
	call	__bdf_list_init
	add	esp, 8
; Line 2413
	lea	eax, DWORD PTR _lineno$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	push	OFFSET __bdf_parse_start
	mov	edx, DWORD PTR _stream$[ebp]
	push	edx
	call	__bdf_readstream
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 2414
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN55@bdf_load_f
; Line 2415
	jmp	$Fail$66
$LN55@bdf_load_f:
; Line 2417
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN54@bdf_load_f
; Line 2422
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx+28], 8
	je	SHORT $LN53@bdf_load_f
; Line 2423
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	cx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+32], cx
$LN53@bdf_load_f:
; Line 2427
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [eax+52]
	add	eax, DWORD PTR [edx+64]
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+4], eax
	je	SHORT $LN52@bdf_load_f
$LN51@bdf_load_f:
; Line 2430
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN50@bdf_load_f
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR [edx+52]
	add	edx, DWORD PTR [ecx+64]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	push	OFFSET $SG8628
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN50@bdf_load_f:
	xor	edx, edx
	jne	SHORT $LN51@bdf_load_f
; Line 2431
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278660], dx
$LN52@bdf_load_f:
; Line 2437
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx], 0
	je	$LN54@bdf_load_f
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	cmp	DWORD PTR [eax+52], 0
	ja	SHORT $LN46@bdf_load_f
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx+64], 0
	jbe	$LN54@bdf_load_f
$LN46@bdf_load_f:
; Line 2439
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+12]
	sub	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movzx	edx, WORD PTR [eax+4]
	cmp	ecx, edx
	je	SHORT $LN45@bdf_load_f
$LN44@bdf_load_f:
; Line 2442
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN43@bdf_load_f
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+16]
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+12]
	sub	eax, edx
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [ecx+4]
	push	edx
	push	OFFSET $SG8636
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN43@bdf_load_f:
	xor	eax, eax
	jne	SHORT $LN44@bdf_load_f
; Line 2443
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+16]
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	sub	edx, ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	WORD PTR [ecx+4], dx
; Line 2444
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, 1
	mov	WORD PTR [eax+278660], cx
$LN45@bdf_load_f:
; Line 2447
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [eax+8]
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+12]
	cmp	ecx, eax
	je	SHORT $LN40@bdf_load_f
$LN39@bdf_load_f:
; Line 2450
	mov	ecx, 4
	imul	edx, ecx, 65
	cmp	DWORD PTR _ft_trace_levels[edx], 2
	jl	SHORT $LN38@bdf_load_f
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movsx	ecx, WORD PTR [eax+8]
	push	ecx
	push	OFFSET $SG8643
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN38@bdf_load_f:
	xor	edx, edx
	jne	SHORT $LN39@bdf_load_f
; Line 2451
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _p$[ebp]
	mov	ax, WORD PTR [edx+12]
	mov	WORD PTR [ecx+8], ax
; Line 2452
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, 1
	mov	WORD PTR [edx+278660], ax
$LN40@bdf_load_f:
; Line 2455
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+12]
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	cmp	eax, edx
	je	SHORT $LN35@bdf_load_f
$LN34@bdf_load_f:
; Line 2458
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN33@bdf_load_f
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+18]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	movsx	eax, WORD PTR [edx+12]
	push	eax
	push	OFFSET $SG8649
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN33@bdf_load_f:
	xor	ecx, ecx
	jne	SHORT $LN34@bdf_load_f
; Line 2459
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	dx, WORD PTR [ecx+18]
	mov	WORD PTR [eax+12], dx
; Line 2460
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278660], dx
$LN35@bdf_load_f:
; Line 2463
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	edx, WORD PTR [ecx+14]
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+20]
	cmp	edx, ecx
	je	SHORT $LN30@bdf_load_f
$LN29@bdf_load_f:
; Line 2466
	mov	edx, 4
	imul	eax, edx, 65
	cmp	DWORD PTR _ft_trace_levels[eax], 2
	jl	SHORT $LN28@bdf_load_f
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movsx	edx, WORD PTR [ecx+14]
	push	edx
	push	OFFSET $SG8655
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN28@bdf_load_f:
	xor	eax, eax
	jne	SHORT $LN29@bdf_load_f
; Line 2467
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR [eax+20]
	mov	WORD PTR [edx+14], cx
; Line 2468
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+20]
	neg	eax
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	WORD PTR [edx+10], ax
; Line 2469
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, 1
	mov	WORD PTR [ecx+278660], dx
$LN30@bdf_load_f:
; Line 2472
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+18]
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+20]
	add	ecx, eax
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	movzx	edx, WORD PTR [eax+6]
	cmp	ecx, edx
	je	SHORT $LN25@bdf_load_f
$LN24@bdf_load_f:
; Line 2475
	mov	eax, 4
	imul	ecx, eax, 65
	cmp	DWORD PTR _ft_trace_levels[ecx], 2
	jl	SHORT $LN23@bdf_load_f
	mov	edx, DWORD PTR _p$[ebp]
	movsx	eax, WORD PTR [edx+18]
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+20]
	add	eax, edx
	push	eax
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movzx	edx, WORD PTR [ecx+6]
	push	edx
	push	OFFSET $SG8662
	call	_FT_Message
	add	esp, 12					; 0000000cH
$LN23@bdf_load_f:
	xor	eax, eax
	jne	SHORT $LN24@bdf_load_f
; Line 2476
	mov	ecx, DWORD PTR _p$[ebp]
	movsx	edx, WORD PTR [ecx+18]
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, WORD PTR [eax+20]
	add	edx, ecx
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	WORD PTR [ecx+6], dx
$LN25@bdf_load_f:
; Line 2479
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	and	eax, 4096				; 00001000H
	je	SHORT $LN54@bdf_load_f
$LN19@bdf_load_f:
; Line 2480
	mov	ecx, 4
	imul	edx, ecx, 65
	cmp	DWORD PTR _ft_trace_levels[edx], 2
	jl	SHORT $LN18@bdf_load_f
	push	OFFSET $SG8669
	call	_FT_Message
	add	esp, 4
$LN18@bdf_load_f:
	xor	eax, eax
	jne	SHORT $LN19@bdf_load_f
$LN54@bdf_load_f:
; Line 2484
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx]
	and	edx, 1
	je	SHORT $LN15@bdf_load_f
; Line 2487
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 32					; 00000020H
	jne	SHORT $LN14@bdf_load_f
; Line 2490
	mov	edx, DWORD PTR _lineno$[ebp]
	push	edx
	push	OFFSET $SG8672
	call	_FT_Message
	add	esp, 8
; Line 2491
	push	OFFSET $SG8673
	push	2491					; 000009bbH
	push	185					; 000000b9H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 185				; 000000b9H
	mov	DWORD PTR _error$[ebp], eax
; Line 2492
	jmp	$Exit$65
; Line 2494
	jmp	SHORT $LN15@bdf_load_f
$LN14@bdf_load_f:
; Line 2497
	mov	eax, DWORD PTR _lineno$[ebp]
	push	eax
	push	OFFSET $SG8675
	call	_FT_Message
	add	esp, 8
; Line 2498
	push	OFFSET $SG8676
	push	2498					; 000009c2H
	push	186					; 000000baH
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 186				; 000000baH
	mov	DWORD PTR _error$[ebp], eax
; Line 2499
	jmp	$Exit$65
$LN15@bdf_load_f:
; Line 2503
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	SHORT $LN12@bdf_load_f
; Line 2506
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+278664]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 2508
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	cmp	DWORD PTR [eax+88], 0
	jbe	SHORT $LN11@bdf_load_f
; Line 2512
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+88]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	push	1
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_realloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+84], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN10@bdf_load_f
; Line 2513
	jmp	$Fail$66
$LN10@bdf_load_f:
; Line 2515
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	edx, DWORD PTR [eax+88]
	mov	eax, DWORD PTR [ecx+84]
	mov	BYTE PTR [eax+edx], 0
$LN11@bdf_load_f:
; Line 2516
	jmp	SHORT $LN9@bdf_load_f
$LN12@bdf_load_f:
; Line 2518
	cmp	DWORD PTR _error$[ebp], 0
	jne	SHORT $LN9@bdf_load_f
; Line 2519
	push	OFFSET $SG8684
	push	2519					; 000009d7H
	push	3
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 3
	mov	DWORD PTR _error$[ebp], eax
$LN9@bdf_load_f:
; Line 2521
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx], eax
$Exit$65:
; Line 2524
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN7@bdf_load_f
; Line 2526
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 139304				; 00022028H
	push	ecx
	call	__bdf_list_done
	add	esp, 4
; Line 2528
	mov	edx, DWORD PTR _extmemory$[ebp]
	mov	DWORD PTR _memory$[ebp], edx
$LN6@bdf_load_f:
; Line 2530
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _p$[ebp], 0
	xor	edx, edx
	jne	SHORT $LN6@bdf_load_f
$LN7@bdf_load_f:
; Line 2533
	mov	eax, DWORD PTR _error$[ebp]
	jmp	SHORT $LN57@bdf_load_f
$Fail$66:
; Line 2536
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_bdf_free_font
	add	esp, 4
; Line 2538
	mov	edx, DWORD PTR _extmemory$[ebp]
	mov	DWORD PTR _memory$[ebp], edx
$LN3@bdf_load_f:
; Line 2540
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_free
	add	esp, 8
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+32], 0
	xor	ecx, ecx
	jne	SHORT $LN3@bdf_load_f
; Line 2542
	jmp	SHORT $Exit$65
$LN57@bdf_load_f:
; Line 2543
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN64@bdf_load_f
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN64@bdf_load_f:
	DD	2
	DD	$LN63@bdf_load_f
$LN63@bdf_load_f:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN61@bdf_load_f
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN62@bdf_load_f
$LN62@bdf_load_f:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN61@bdf_load_f:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	0
_bdf_load_font ENDP
_TEXT	ENDS
END

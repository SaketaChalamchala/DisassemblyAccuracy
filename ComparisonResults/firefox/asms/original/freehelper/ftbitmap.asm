; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftbitmap.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

CONST	SEGMENT
_null_bitmap DD	00H
	DD	00H
	DD	00H
	DD	00H
	DW	00H
	DB	00H
	DB	00H
	DD	00H
CONST	ENDS
_DATA	SEGMENT
$SG7212	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7215	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7230	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7235	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7338	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7340	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7019	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7022	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7080	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7134	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7137	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7140	DB	'..\..\..\src\base\ftbitmap.c', 00H
	ORG $+3
$SG7147	DB	'..\..\..\src\base\ftbitmap.c', 00H
_DATA	ENDS
PUBLIC	_FT_Bitmap_New
PUBLIC	_FT_Bitmap_Copy
PUBLIC	_FT_Bitmap_Embolden
PUBLIC	_FT_Bitmap_Convert
PUBLIC	_FT_GlyphSlot_Own_Bitmap
PUBLIC	_FT_Bitmap_Done
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_FT_Throw:PROC
EXTRN	_ft_mem_qalloc:PROC
EXTRN	_ft_mem_qrealloc:PROC
EXTRN	_ft_mem_free:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_l$ = -8						; size = 4
_a$ = -4						; size = 4
_bgra$ = 8						; size = 4
_ft_gray_for_premultiplied_srgb_bgra PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 420
	mov	eax, 1
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _bgra$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	DWORD PTR _a$[ebp], eax
; Line 425
	cmp	DWORD PTR _a$[ebp], 0
	jne	SHORT $LN1@ft_gray_fo
; Line 426
	xor	al, al
	jmp	$LN2@ft_gray_fo
$LN1@ft_gray_fo:
; Line 444
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _bgra$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	imul	edx, ecx, 4732
	mov	eax, 1
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _bgra$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	imul	edx, ecx
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _bgra$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	imul	ecx, eax, 46871
	mov	eax, 1
	shl	eax, 0
	mov	esi, DWORD PTR _bgra$[ebp]
	movzx	eax, BYTE PTR [esi+eax]
	imul	ecx, eax
	add	edx, ecx
	mov	ecx, 1
	shl	ecx, 1
	mov	eax, DWORD PTR _bgra$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	imul	eax, ecx, 13933
	mov	ecx, 1
	shl	ecx, 1
	mov	esi, DWORD PTR _bgra$[ebp]
	movzx	ecx, BYTE PTR [esi+ecx]
	imul	eax, ecx
	add	edx, eax
	shr	edx, 16					; 00000010H
	mov	DWORD PTR _l$[ebp], edx
; Line 459
	mov	eax, DWORD PTR _l$[ebp]
	xor	edx, edx
	div	DWORD PTR _a$[ebp]
	mov	edx, DWORD PTR _a$[ebp]
	sub	edx, eax
	mov	al, dl
$LN2@ft_gray_fo:
; Line 460
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_gray_for_premultiplied_srgb_bgra ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv71 = -84						; size = 4
_len$1 = -80						; size = 4
_len$2 = -76						; size = 4
_write$3 = -72						; size = 4
_count$4 = -68						; size = 4
_mask$5 = -64						; size = 4
_shift$6 = -60						; size = 4
_end$7 = -56						; size = 4
_line$8 = -52						; size = 4
_bit_last$9 = -48					; size = 4
_bit_width$10 = -44					; size = 4
_buffer$ = -40						; size = 4
_height$ = -36						; size = 4
_width$ = -32						; size = 4
_i$ = -28						; size = 4
_bpp$ = -24						; size = 4
_new_pitch$ = -20					; size = 4
_pitch$ = -16						; size = 4
_error$ = -8						; size = 4
_memory$ = 8						; size = 4
_bitmap$ = 12						; size = 4
_xpixels$ = 16						; size = 4
_ypixels$ = 20						; size = 4
_ft_bitmap_assure_buffer PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 84					; 00000054H
	push	edi
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 21					; 00000015H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	mov	DWORD PTR _buffer$[ebp], 0
; Line 153
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _width$[ebp], ecx
; Line 154
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _height$[ebp], eax
; Line 155
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pitch$[ebp], edx
; Line 156
	cmp	DWORD PTR _pitch$[ebp], 0
	jge	SHORT $LN28@ft_bitmap_
; Line 157
	mov	eax, DWORD PTR _pitch$[ebp]
	neg	eax
	mov	DWORD PTR _pitch$[ebp], eax
$LN28@ft_bitmap_:
; Line 159
	mov	ecx, DWORD PTR _bitmap$[ebp]
	movzx	edx, BYTE PTR [ecx+18]
	mov	DWORD PTR tv71[ebp], edx
	mov	eax, DWORD PTR tv71[ebp]
	sub	eax, 1
	mov	DWORD PTR tv71[ebp], eax
	cmp	DWORD PTR tv71[ebp], 5
	ja	SHORT $LN21@ft_bitmap_
	mov	ecx, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN34@ft_bitmap_[ecx*4]
$LN25@ft_bitmap_:
; Line 162
	mov	DWORD PTR _bpp$[ebp], 1
; Line 163
	mov	edx, DWORD PTR _xpixels$[ebp]
	mov	eax, DWORD PTR _width$[ebp]
	lea	ecx, DWORD PTR [eax+edx+7]
	shr	ecx, 3
	mov	DWORD PTR _new_pitch$[ebp], ecx
; Line 164
	jmp	SHORT $LN26@ft_bitmap_
$LN24@ft_bitmap_:
; Line 166
	mov	DWORD PTR _bpp$[ebp], 2
; Line 167
	mov	edx, DWORD PTR _xpixels$[ebp]
	mov	eax, DWORD PTR _width$[ebp]
	lea	ecx, DWORD PTR [eax+edx+3]
	shr	ecx, 2
	mov	DWORD PTR _new_pitch$[ebp], ecx
; Line 168
	jmp	SHORT $LN26@ft_bitmap_
$LN23@ft_bitmap_:
; Line 170
	mov	DWORD PTR _bpp$[ebp], 4
; Line 171
	mov	edx, DWORD PTR _xpixels$[ebp]
	mov	eax, DWORD PTR _width$[ebp]
	lea	ecx, DWORD PTR [eax+edx+1]
	shr	ecx, 1
	mov	DWORD PTR _new_pitch$[ebp], ecx
; Line 172
	jmp	SHORT $LN26@ft_bitmap_
$LN22@ft_bitmap_:
; Line 176
	mov	DWORD PTR _bpp$[ebp], 8
; Line 177
	mov	edx, DWORD PTR _width$[ebp]
	add	edx, DWORD PTR _xpixels$[ebp]
	mov	DWORD PTR _new_pitch$[ebp], edx
; Line 178
	jmp	SHORT $LN26@ft_bitmap_
$LN21@ft_bitmap_:
; Line 180
	push	OFFSET $SG7080
	push	180					; 000000b4H
	push	18					; 00000012H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 18					; 00000012H
	jmp	$LN29@ft_bitmap_
$LN26@ft_bitmap_:
; Line 184
	cmp	DWORD PTR _ypixels$[ebp], 0
	jne	$LN20@ft_bitmap_
	mov	eax, DWORD PTR _new_pitch$[ebp]
	cmp	eax, DWORD PTR _pitch$[ebp]
	jg	$LN20@ft_bitmap_
; Line 187
	mov	ecx, DWORD PTR _pitch$[ebp]
	shl	ecx, 3
	mov	DWORD PTR _bit_width$10[ebp], ecx
; Line 188
	mov	edx, DWORD PTR _width$[ebp]
	add	edx, DWORD PTR _xpixels$[ebp]
	imul	edx, DWORD PTR _bpp$[ebp]
	mov	DWORD PTR _bit_last$9[ebp], edx
; Line 191
	mov	eax, DWORD PTR _bit_last$9[ebp]
	cmp	eax, DWORD PTR _bit_width$10[ebp]
	jae	$LN19@ft_bitmap_
; Line 193
	mov	ecx, DWORD PTR _bit_last$9[ebp]
	shr	ecx, 3
	mov	edx, DWORD PTR _bitmap$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR _line$8[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _end$7[ebp], ecx
; Line 195
	mov	edx, DWORD PTR _bit_last$9[ebp]
	and	edx, 7
	mov	DWORD PTR _shift$6[ebp], edx
; Line 196
	mov	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _shift$6[ebp]
	shr	eax, cl
	mov	DWORD PTR _mask$5[ebp], eax
; Line 197
	mov	ecx, DWORD PTR _height$[ebp]
	mov	DWORD PTR _count$4[ebp], ecx
; Line 200
	jmp	SHORT $LN18@ft_bitmap_
$LN17@ft_bitmap_:
	mov	edx, DWORD PTR _count$4[ebp]
	sub	edx, 1
	mov	DWORD PTR _count$4[ebp], edx
	mov	eax, DWORD PTR _line$8[ebp]
	add	eax, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _line$8[ebp], eax
	mov	ecx, DWORD PTR _end$7[ebp]
	add	ecx, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _end$7[ebp], ecx
$LN18@ft_bitmap_:
	cmp	DWORD PTR _count$4[ebp], 0
	jbe	SHORT $LN19@ft_bitmap_
; Line 202
	mov	edx, DWORD PTR _line$8[ebp]
	mov	DWORD PTR _write$3[ebp], edx
; Line 205
	cmp	DWORD PTR _shift$6[ebp], 0
	jbe	SHORT $LN15@ft_bitmap_
; Line 207
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _write$3[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	and	eax, DWORD PTR _mask$5[ebp]
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _write$3[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 208
	mov	edx, DWORD PTR _write$3[ebp]
	add	edx, 1
	mov	DWORD PTR _write$3[ebp], edx
$LN15@ft_bitmap_:
; Line 210
	mov	eax, DWORD PTR _write$3[ebp]
	cmp	eax, DWORD PTR _end$7[ebp]
	jae	SHORT $LN14@ft_bitmap_
; Line 211
	mov	ecx, DWORD PTR _end$7[ebp]
	sub	ecx, DWORD PTR _write$3[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _write$3[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN14@ft_bitmap_:
; Line 212
	jmp	SHORT $LN17@ft_bitmap_
$LN19@ft_bitmap_:
; Line 215
	xor	eax, eax
	jmp	$LN29@ft_bitmap_
$LN20@ft_bitmap_:
; Line 219
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _new_pitch$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _ypixels$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_qrealloc
	add	esp, 24					; 00000018H
	mov	DWORD PTR _buffer$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN13@ft_bitmap_
; Line 220
	mov	eax, DWORD PTR _error$[ebp]
	jmp	$LN29@ft_bitmap_
$LN13@ft_bitmap_:
; Line 224
	mov	edx, DWORD PTR _bitmap$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jle	SHORT $LN12@ft_bitmap_
; Line 226
	mov	eax, DWORD PTR _width$[ebp]
	imul	eax, DWORD PTR _bpp$[ebp]
	add	eax, 7
	shr	eax, 3
	mov	DWORD PTR _len$2[ebp], eax
; Line 229
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@ft_bitmap_
$LN10@ft_bitmap_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN11@ft_bitmap_:
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR [edx]
	jae	SHORT $LN9@ft_bitmap_
; Line 231
	mov	ecx, DWORD PTR _len$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _pitch$[ebp]
	imul	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _bitmap$[ebp]
	add	edx, DWORD PTR [eax+12]
	push	edx
	mov	ecx, DWORD PTR _ypixels$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	imul	ecx, DWORD PTR _new_pitch$[ebp]
	add	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@ft_bitmap_
$LN9@ft_bitmap_:
; Line 233
	jmp	SHORT $LN4@ft_bitmap_
$LN12@ft_bitmap_:
; Line 235
	mov	edx, DWORD PTR _width$[ebp]
	imul	edx, DWORD PTR _bpp$[ebp]
	add	edx, 7
	shr	edx, 3
	mov	DWORD PTR _len$1[ebp], edx
; Line 238
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@ft_bitmap_
$LN6@ft_bitmap_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@ft_bitmap_:
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN4@ft_bitmap_
; Line 240
	mov	eax, DWORD PTR _len$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _pitch$[ebp]
	imul	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _bitmap$[ebp]
	add	ecx, DWORD PTR [edx+12]
	push	ecx
	mov	eax, DWORD PTR _new_pitch$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@ft_bitmap_
$LN4@ft_bitmap_:
; Line 243
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [ecx+12], 0
	xor	edx, edx
	jne	SHORT $LN4@ft_bitmap_
; Line 244
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 246
	mov	edx, DWORD PTR _bitmap$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jge	SHORT $LN1@ft_bitmap_
; Line 247
	mov	eax, DWORD PTR _new_pitch$[ebp]
	neg	eax
	mov	DWORD PTR _new_pitch$[ebp], eax
$LN1@ft_bitmap_:
; Line 250
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR _new_pitch$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 252
	xor	eax, eax
$LN29@ft_bitmap_:
; Line 253
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@ft_bitmap_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN33@ft_bitmap_:
	DD	1
	DD	$LN32@ft_bitmap_
$LN32@ft_bitmap_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN31@ft_bitmap_
$LN31@ft_bitmap_:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
	npad	2
$LN34@ft_bitmap_:
	DD	$LN25@ft_bitmap_
	DD	$LN22@ft_bitmap_
	DD	$LN24@ft_bitmap_
	DD	$LN23@ft_bitmap_
	DD	$LN22@ft_bitmap_
	DD	$LN22@ft_bitmap_
_ft_bitmap_assure_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_library$ = 8						; size = 4
_bitmap$ = 12						; size = 4
_FT_Bitmap_Done PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 777
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 781
	cmp	DWORD PTR _library$[ebp], 0
	jne	SHORT $LN5@FT_Bitmap_
; Line 782
	push	OFFSET $SG7338
	push	782					; 0000030eH
	push	33					; 00000021H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 33					; 00000021H
	jmp	SHORT $LN6@FT_Bitmap_
$LN5@FT_Bitmap_:
; Line 784
	cmp	DWORD PTR _bitmap$[ebp], 0
	jne	SHORT $LN4@FT_Bitmap_
; Line 785
	push	OFFSET $SG7340
	push	785					; 00000311H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	SHORT $LN6@FT_Bitmap_
$LN4@FT_Bitmap_:
; Line 787
	mov	eax, DWORD PTR _library$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _memory$[ebp], ecx
$LN3@FT_Bitmap_:
; Line 789
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [edx+12], 0
	xor	eax, eax
	jne	SHORT $LN3@FT_Bitmap_
; Line 790
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR _null_bitmap
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _null_bitmap+4
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _null_bitmap+8
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _null_bitmap+12
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _null_bitmap+16
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR _null_bitmap+20
	mov	DWORD PTR [ecx+20], eax
; Line 792
	xor	eax, eax
$LN6@FT_Bitmap_:
; Line 793
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Bitmap_Done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_error$1 = -36						; size = 4
_bitmap$2 = -28						; size = 24
_slot$ = 8						; size = 4
_FT_GlyphSlot_Own_Bitmap PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 753
	cmp	DWORD PTR _slot$[ebp], 0
	je	$LN2@FT_GlyphSl
	mov	eax, DWORD PTR _slot$[ebp]
	cmp	DWORD PTR [eax+72], 1651078259		; 62697473H
	jne	$LN2@FT_GlyphSl
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 1
	jne	SHORT $LN2@FT_GlyphSl
; Line 759
	lea	ecx, DWORD PTR _bitmap$2[ebp]
	push	ecx
	call	_FT_Bitmap_New
	add	esp, 4
; Line 760
	lea	edx, DWORD PTR _bitmap$2[ebp]
	push	edx
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_FT_Bitmap_Copy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$1[ebp], eax
; Line 761
	cmp	DWORD PTR _error$1[ebp], 0
	je	SHORT $LN1@FT_GlyphSl
; Line 762
	mov	eax, DWORD PTR _error$1[ebp]
	jmp	SHORT $LN3@FT_GlyphSl
$LN1@FT_GlyphSl:
; Line 764
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 76					; 0000004cH
	mov	ecx, DWORD PTR _bitmap$2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _bitmap$2[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _bitmap$2[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _bitmap$2[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _bitmap$2[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _bitmap$2[ebp+20]
	mov	DWORD PTR [eax+20], edx
; Line 765
	mov	eax, DWORD PTR _slot$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	edx, DWORD PTR [ecx+4]
	or	edx, 1
	mov	eax, DWORD PTR _slot$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	mov	DWORD PTR [ecx+4], edx
$LN2@FT_GlyphSl:
; Line 768
	xor	eax, eax
$LN3@FT_GlyphSl:
; Line 769
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FT_GlyphSl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@FT_GlyphSl:
	DD	1
	DD	$LN6@FT_GlyphSl
$LN6@FT_GlyphSl:
	DD	-28					; ffffffe4H
	DD	24					; 00000018H
	DD	$LN5@FT_GlyphSl
$LN5@FT_GlyphSl:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
_FT_GlyphSlot_Own_Bitmap ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv186 = -144						; size = 4
tv158 = -140						; size = 4
tv80 = -136						; size = 4
_j$1 = -132						; size = 4
_tt$2 = -128						; size = 4
_ss$3 = -124						; size = 4
_i$4 = -120						; size = 4
_val$5 = -116						; size = 4
_j$6 = -112						; size = 4
_tt$7 = -108						; size = 4
_ss$8 = -104						; size = 4
_i$9 = -100						; size = 4
_val$10 = -96						; size = 4
_val$11 = -92						; size = 4
_j$12 = -88						; size = 4
_tt$13 = -84						; size = 4
_ss$14 = -80						; size = 4
_i$15 = -76						; size = 4
_i$16 = -72						; size = 4
_width$17 = -68						; size = 4
_val$18 = -64						; size = 4
_val$19 = -60						; size = 4
_j$20 = -56						; size = 4
_tt$21 = -52						; size = 4
_ss$22 = -48						; size = 4
_i$23 = -44						; size = 4
_old_size$24 = -40					; size = 4
_target_pitch$25 = -36					; size = 4
_old_target_pitch$26 = -32				; size = 4
_pad$27 = -28						; size = 4
_t$ = -24						; size = 4
_s$ = -20						; size = 4
_memory$ = -16						; size = 4
_error$ = -8						; size = 4
_library$ = 8						; size = 4
_source$ = 12						; size = 4
_target$ = 16						; size = 4
_alignment$ = 20					; size = 4
_FT_Bitmap_Convert PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	edi
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 471
	mov	DWORD PTR _error$[ebp], 0
; Line 478
	cmp	DWORD PTR _library$[ebp], 0
	jne	SHORT $LN58@FT_Bitmap_
; Line 479
	push	OFFSET $SG7212
	push	479					; 000001dfH
	push	33					; 00000021H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 33					; 00000021H
	jmp	$LN59@FT_Bitmap_
$LN58@FT_Bitmap_:
; Line 481
	cmp	DWORD PTR _source$[ebp], 0
	je	SHORT $LN56@FT_Bitmap_
	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN57@FT_Bitmap_
$LN56@FT_Bitmap_:
; Line 482
	push	OFFSET $SG7215
	push	482					; 000001e2H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN59@FT_Bitmap_
$LN57@FT_Bitmap_:
; Line 484
	mov	eax, DWORD PTR _library$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 486
	mov	edx, DWORD PTR _source$[ebp]
	mov	al, BYTE PTR [edx+18]
	mov	BYTE PTR tv80[ebp], al
	cmp	BYTE PTR tv80[ebp], 0
	jbe	$LN47@FT_Bitmap_
	cmp	BYTE PTR tv80[ebp], 7
	jbe	SHORT $LN53@FT_Bitmap_
	jmp	$LN47@FT_Bitmap_
$LN53@FT_Bitmap_:
; Line 500
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _old_target_pitch$26[ebp], edx
; Line 501
	cmp	DWORD PTR _old_target_pitch$26[ebp], 0
	jge	SHORT $LN52@FT_Bitmap_
; Line 502
	mov	eax, DWORD PTR _old_target_pitch$26[ebp]
	neg	eax
	mov	DWORD PTR _old_target_pitch$26[ebp], eax
$LN52@FT_Bitmap_:
; Line 504
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx]
	imul	edx, DWORD PTR _old_target_pitch$26[ebp]
	mov	DWORD PTR _old_size$24[ebp], edx
; Line 506
	mov	eax, DWORD PTR _target$[ebp]
	mov	BYTE PTR [eax+18], 2
; Line 507
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
; Line 508
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 510
	mov	DWORD PTR _pad$27[ebp], 0
; Line 511
	cmp	DWORD PTR _alignment$[ebp], 0
	jle	SHORT $LN51@FT_Bitmap_
; Line 513
	mov	ecx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	xor	edx, edx
	div	DWORD PTR _alignment$[ebp]
	mov	DWORD PTR _pad$27[ebp], edx
; Line 514
	cmp	DWORD PTR _pad$27[ebp], 0
	je	SHORT $LN51@FT_Bitmap_
; Line 515
	mov	edx, DWORD PTR _alignment$[ebp]
	sub	edx, DWORD PTR _pad$27[ebp]
	mov	DWORD PTR _pad$27[ebp], edx
$LN51@FT_Bitmap_:
; Line 518
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, DWORD PTR _pad$27[ebp]
	mov	DWORD PTR _target_pitch$25[ebp], ecx
; Line 521
	cmp	DWORD PTR _target_pitch$25[ebp], 0
	jle	SHORT $LN49@FT_Bitmap_
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR _target_pitch$25[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	cmp	DWORD PTR [edx], eax
	jbe	SHORT $LN49@FT_Bitmap_
; Line 522
	push	OFFSET $SG7230
	push	522					; 0000020aH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN59@FT_Bitmap_
$LN49@FT_Bitmap_:
; Line 526
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, DWORD PTR _target_pitch$25[ebp]
	cmp	ecx, DWORD PTR _old_size$24[ebp]
	jbe	SHORT $LN48@FT_Bitmap_
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	imul	eax, DWORD PTR _target_pitch$25[ebp]
	push	eax
	mov	ecx, DWORD PTR _old_size$24[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR _memory$[ebp]
	push	edx
	call	_ft_mem_qrealloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [ecx+12], eax
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN48@FT_Bitmap_
; Line 527
	mov	eax, DWORD PTR _error$[ebp]
	jmp	$LN59@FT_Bitmap_
$LN48@FT_Bitmap_:
; Line 529
	mov	edx, DWORD PTR _target$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jge	SHORT $LN61@FT_Bitmap_
	mov	eax, DWORD PTR _target_pitch$25[ebp]
	neg	eax
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $LN62@FT_Bitmap_
$LN61@FT_Bitmap_:
	mov	ecx, DWORD PTR _target_pitch$25[ebp]
	mov	DWORD PTR tv158[ebp], ecx
$LN62@FT_Bitmap_:
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR tv158[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 531
	jmp	SHORT $LN54@FT_Bitmap_
$LN47@FT_Bitmap_:
; Line 534
	push	OFFSET $SG7235
	push	534					; 00000216H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
$LN54@FT_Bitmap_:
; Line 537
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _s$[ebp], edx
; Line 538
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _t$[ebp], ecx
; Line 541
	mov	edx, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jge	SHORT $LN46@FT_Bitmap_
; Line 542
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _source$[ebp]
	imul	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _s$[ebp]
	sub	eax, ecx
	mov	DWORD PTR _s$[ebp], eax
$LN46@FT_Bitmap_:
; Line 543
	mov	ecx, DWORD PTR _target$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jge	SHORT $LN45@FT_Bitmap_
; Line 544
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	ecx, DWORD PTR _target$[ebp]
	imul	eax, DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _t$[ebp]
	sub	edx, eax
	mov	DWORD PTR _t$[ebp], edx
$LN45@FT_Bitmap_:
; Line 546
	mov	eax, DWORD PTR _source$[ebp]
	movzx	ecx, BYTE PTR [eax+18]
	mov	DWORD PTR tv186[ebp], ecx
	mov	edx, DWORD PTR tv186[ebp]
	sub	edx, 1
	mov	DWORD PTR tv186[ebp], edx
	cmp	DWORD PTR tv186[ebp], 6
	ja	$LN43@FT_Bitmap_
	mov	eax, DWORD PTR tv186[ebp]
	jmp	DWORD PTR $LN66@FT_Bitmap_[eax*4]
$LN42@FT_Bitmap_:
; Line 553
	mov	ecx, 2
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx+16], cx
; Line 555
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _i$23[ebp], ecx
	jmp	SHORT $LN41@FT_Bitmap_
$LN40@FT_Bitmap_:
	mov	edx, DWORD PTR _i$23[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$23[ebp], edx
$LN41@FT_Bitmap_:
	cmp	DWORD PTR _i$23[ebp], 0
	jbe	$LN39@FT_Bitmap_
; Line 557
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ss$22[ebp], eax
; Line 558
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR _tt$21[ebp], ecx
; Line 563
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+4]
	shr	eax, 3
	mov	DWORD PTR _j$20[ebp], eax
	jmp	SHORT $LN38@FT_Bitmap_
$LN37@FT_Bitmap_:
	mov	ecx, DWORD PTR _j$20[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$20[ebp], ecx
$LN38@FT_Bitmap_:
	cmp	DWORD PTR _j$20[ebp], 0
	jbe	$LN36@FT_Bitmap_
; Line 565
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ss$22[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	DWORD PTR _val$19[ebp], edx
; Line 568
	mov	eax, DWORD PTR _val$19[ebp]
	and	eax, 128				; 00000080H
	sar	eax, 7
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 569
	mov	edx, DWORD PTR _val$19[ebp]
	and	edx, 64					; 00000040H
	sar	edx, 6
	mov	eax, 1
	shl	eax, 0
	mov	ecx, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 570
	mov	edx, DWORD PTR _val$19[ebp]
	and	edx, 32					; 00000020H
	sar	edx, 5
	mov	eax, 1
	shl	eax, 1
	mov	ecx, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [ecx+eax], dl
; Line 571
	mov	edx, DWORD PTR _val$19[ebp]
	and	edx, 16					; 00000010H
	sar	edx, 4
	mov	eax, 1
	imul	ecx, eax, 3
	mov	eax, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [eax+ecx], dl
; Line 572
	mov	ecx, DWORD PTR _val$19[ebp]
	and	ecx, 8
	sar	ecx, 3
	mov	edx, 1
	shl	edx, 2
	mov	eax, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 573
	mov	ecx, DWORD PTR _val$19[ebp]
	and	ecx, 4
	sar	ecx, 2
	mov	edx, 1
	imul	eax, edx, 5
	mov	edx, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 574
	mov	eax, DWORD PTR _val$19[ebp]
	and	eax, 2
	sar	eax, 1
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	ecx, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 575
	mov	edx, DWORD PTR _val$19[ebp]
	and	edx, 1
	mov	eax, 1
	imul	ecx, eax, 7
	mov	eax, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [eax+ecx], dl
; Line 577
	mov	ecx, DWORD PTR _tt$21[ebp]
	add	ecx, 8
	mov	DWORD PTR _tt$21[ebp], ecx
; Line 578
	mov	edx, DWORD PTR _ss$22[ebp]
	add	edx, 1
	mov	DWORD PTR _ss$22[ebp], edx
; Line 579
	jmp	$LN37@FT_Bitmap_
$LN36@FT_Bitmap_:
; Line 582
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, 7
	mov	DWORD PTR _j$20[ebp], ecx
; Line 583
	jbe	SHORT $LN35@FT_Bitmap_
; Line 585
	mov	edx, DWORD PTR _ss$22[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _val$18[ebp], eax
; Line 588
	jmp	SHORT $LN34@FT_Bitmap_
$LN33@FT_Bitmap_:
	mov	ecx, DWORD PTR _j$20[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$20[ebp], ecx
$LN34@FT_Bitmap_:
	cmp	DWORD PTR _j$20[ebp], 0
	jbe	SHORT $LN35@FT_Bitmap_
; Line 590
	mov	edx, DWORD PTR _val$18[ebp]
	and	edx, 128				; 00000080H
	sar	edx, 7
	mov	eax, 1
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _tt$21[ebp]
	mov	BYTE PTR [eax+ecx], dl
; Line 591
	mov	ecx, DWORD PTR _val$18[ebp]
	shl	ecx, 1
	mov	DWORD PTR _val$18[ebp], ecx
; Line 592
	mov	edx, DWORD PTR _tt$21[ebp]
	add	edx, 1
	mov	DWORD PTR _tt$21[ebp], edx
; Line 593
	jmp	SHORT $LN33@FT_Bitmap_
$LN35@FT_Bitmap_:
; Line 596
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _s$[ebp], ecx
; Line 597
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _t$[ebp], eax
; Line 598
	jmp	$LN40@FT_Bitmap_
$LN39@FT_Bitmap_:
; Line 600
	jmp	$LN43@FT_Bitmap_
$LN31@FT_Bitmap_:
; Line 607
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _width$17[ebp], edx
; Line 611
	mov	eax, 256				; 00000100H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx+16], ax
; Line 613
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _i$16[ebp], eax
	jmp	SHORT $LN30@FT_Bitmap_
$LN29@FT_Bitmap_:
	mov	ecx, DWORD PTR _i$16[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$16[ebp], ecx
$LN30@FT_Bitmap_:
	cmp	DWORD PTR _i$16[ebp], 0
	jbe	SHORT $LN28@FT_Bitmap_
; Line 615
	mov	edx, DWORD PTR _width$17[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 617
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _s$[ebp], eax
; Line 618
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _t$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _t$[ebp], edx
; Line 619
	jmp	SHORT $LN29@FT_Bitmap_
$LN28@FT_Bitmap_:
; Line 621
	jmp	$LN43@FT_Bitmap_
$LN27@FT_Bitmap_:
; Line 629
	mov	eax, 4
	mov	ecx, DWORD PTR _target$[ebp]
	mov	WORD PTR [ecx+16], ax
; Line 631
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _i$15[ebp], eax
	jmp	SHORT $LN26@FT_Bitmap_
$LN25@FT_Bitmap_:
	mov	ecx, DWORD PTR _i$15[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$15[ebp], ecx
$LN26@FT_Bitmap_:
	cmp	DWORD PTR _i$15[ebp], 0
	jbe	$LN24@FT_Bitmap_
; Line 633
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ss$14[ebp], edx
; Line 634
	mov	eax, DWORD PTR _t$[ebp]
	mov	DWORD PTR _tt$13[ebp], eax
; Line 639
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	shr	edx, 2
	mov	DWORD PTR _j$12[ebp], edx
	jmp	SHORT $LN23@FT_Bitmap_
$LN22@FT_Bitmap_:
	mov	eax, DWORD PTR _j$12[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$12[ebp], eax
$LN23@FT_Bitmap_:
	cmp	DWORD PTR _j$12[ebp], 0
	jbe	$LN21@FT_Bitmap_
; Line 641
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _ss$14[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	DWORD PTR _val$11[ebp], ecx
; Line 644
	mov	edx, DWORD PTR _val$11[ebp]
	and	edx, 192				; 000000c0H
	sar	edx, 6
	mov	eax, 1
	imul	ecx, eax, 0
	mov	eax, DWORD PTR _tt$13[ebp]
	mov	BYTE PTR [eax+ecx], dl
; Line 645
	mov	ecx, DWORD PTR _val$11[ebp]
	and	ecx, 48					; 00000030H
	sar	ecx, 4
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _tt$13[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 646
	mov	ecx, DWORD PTR _val$11[ebp]
	and	ecx, 12					; 0000000cH
	sar	ecx, 2
	mov	edx, 1
	shl	edx, 1
	mov	eax, DWORD PTR _tt$13[ebp]
	mov	BYTE PTR [eax+edx], cl
; Line 647
	mov	ecx, DWORD PTR _val$11[ebp]
	and	ecx, 3
	mov	edx, 1
	imul	eax, edx, 3
	mov	edx, DWORD PTR _tt$13[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 649
	mov	eax, DWORD PTR _ss$14[ebp]
	add	eax, 1
	mov	DWORD PTR _ss$14[ebp], eax
; Line 650
	mov	ecx, DWORD PTR _tt$13[ebp]
	add	ecx, 4
	mov	DWORD PTR _tt$13[ebp], ecx
; Line 651
	jmp	$LN22@FT_Bitmap_
$LN21@FT_Bitmap_:
; Line 653
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 3
	mov	DWORD PTR _j$12[ebp], eax
; Line 654
	jbe	SHORT $LN20@FT_Bitmap_
; Line 656
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _ss$14[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	mov	DWORD PTR _val$10[ebp], ecx
; Line 659
	jmp	SHORT $LN19@FT_Bitmap_
$LN18@FT_Bitmap_:
	mov	edx, DWORD PTR _j$12[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$12[ebp], edx
$LN19@FT_Bitmap_:
	cmp	DWORD PTR _j$12[ebp], 0
	jbe	SHORT $LN20@FT_Bitmap_
; Line 661
	mov	eax, DWORD PTR _val$10[ebp]
	and	eax, 192				; 000000c0H
	sar	eax, 6
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _tt$13[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 662
	mov	edx, DWORD PTR _val$10[ebp]
	shl	edx, 2
	mov	DWORD PTR _val$10[ebp], edx
; Line 663
	mov	eax, DWORD PTR _tt$13[ebp]
	add	eax, 1
	mov	DWORD PTR _tt$13[ebp], eax
; Line 664
	jmp	SHORT $LN18@FT_Bitmap_
$LN20@FT_Bitmap_:
; Line 667
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[ebp], edx
; Line 668
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _t$[ebp], ecx
; Line 669
	jmp	$LN25@FT_Bitmap_
$LN24@FT_Bitmap_:
; Line 671
	jmp	$LN43@FT_Bitmap_
$LN16@FT_Bitmap_:
; Line 679
	mov	edx, 16					; 00000010H
	mov	eax, DWORD PTR _target$[ebp]
	mov	WORD PTR [eax+16], dx
; Line 681
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _i$9[ebp], edx
	jmp	SHORT $LN15@FT_Bitmap_
$LN14@FT_Bitmap_:
	mov	eax, DWORD PTR _i$9[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$9[ebp], eax
$LN15@FT_Bitmap_:
	cmp	DWORD PTR _i$9[ebp], 0
	jbe	$LN13@FT_Bitmap_
; Line 683
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ss$8[ebp], ecx
; Line 684
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR _tt$7[ebp], edx
; Line 689
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shr	ecx, 1
	mov	DWORD PTR _j$6[ebp], ecx
	jmp	SHORT $LN12@FT_Bitmap_
$LN11@FT_Bitmap_:
	mov	edx, DWORD PTR _j$6[ebp]
	sub	edx, 1
	mov	DWORD PTR _j$6[ebp], edx
$LN12@FT_Bitmap_:
	cmp	DWORD PTR _j$6[ebp], 0
	jbe	SHORT $LN10@FT_Bitmap_
; Line 691
	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ss$8[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	mov	DWORD PTR _val$5[ebp], eax
; Line 694
	mov	ecx, DWORD PTR _val$5[ebp]
	and	ecx, 240				; 000000f0H
	sar	ecx, 4
	mov	edx, 1
	imul	eax, edx, 0
	mov	edx, DWORD PTR _tt$7[ebp]
	mov	BYTE PTR [edx+eax], cl
; Line 695
	mov	eax, DWORD PTR _val$5[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _tt$7[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 697
	mov	eax, DWORD PTR _ss$8[ebp]
	add	eax, 1
	mov	DWORD PTR _ss$8[ebp], eax
; Line 698
	mov	ecx, DWORD PTR _tt$7[ebp]
	add	ecx, 2
	mov	DWORD PTR _tt$7[ebp], ecx
; Line 699
	jmp	SHORT $LN11@FT_Bitmap_
$LN10@FT_Bitmap_:
; Line 701
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 1
	je	SHORT $LN9@FT_Bitmap_
; Line 702
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _ss$8[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	and	ecx, 240				; 000000f0H
	sar	ecx, 4
	mov	edx, 1
	imul	eax, edx, 0
	mov	edx, DWORD PTR _tt$7[ebp]
	mov	BYTE PTR [edx+eax], cl
$LN9@FT_Bitmap_:
; Line 704
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _s$[ebp], ecx
; Line 705
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _t$[ebp], eax
; Line 706
	jmp	$LN14@FT_Bitmap_
$LN13@FT_Bitmap_:
; Line 708
	jmp	$LN43@FT_Bitmap_
$LN8@FT_Bitmap_:
; Line 716
	mov	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _target$[ebp]
	mov	WORD PTR [edx+16], cx
; Line 718
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _i$4[ebp], ecx
	jmp	SHORT $LN7@FT_Bitmap_
$LN6@FT_Bitmap_:
	mov	edx, DWORD PTR _i$4[ebp]
	sub	edx, 1
	mov	DWORD PTR _i$4[ebp], edx
$LN7@FT_Bitmap_:
	cmp	DWORD PTR _i$4[ebp], 0
	jbe	SHORT $LN43@FT_Bitmap_
; Line 720
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _ss$3[ebp], eax
; Line 721
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR _tt$2[ebp], ecx
; Line 725
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _j$1[ebp], eax
	jmp	SHORT $LN4@FT_Bitmap_
$LN3@FT_Bitmap_:
	mov	ecx, DWORD PTR _j$1[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$1[ebp], ecx
$LN4@FT_Bitmap_:
	cmp	DWORD PTR _j$1[ebp], 0
	jbe	SHORT $LN2@FT_Bitmap_
; Line 727
	mov	edx, DWORD PTR _ss$3[ebp]
	push	edx
	call	_ft_gray_for_premultiplied_srgb_bgra
	add	esp, 4
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _tt$2[ebp]
	mov	BYTE PTR [ecx+edx], al
; Line 729
	mov	edx, DWORD PTR _ss$3[ebp]
	add	edx, 4
	mov	DWORD PTR _ss$3[ebp], edx
; Line 730
	mov	eax, DWORD PTR _tt$2[ebp]
	add	eax, 1
	mov	DWORD PTR _tt$2[ebp], eax
; Line 731
	jmp	SHORT $LN3@FT_Bitmap_
$LN2@FT_Bitmap_:
; Line 733
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _s$[ebp], edx
; Line 734
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _t$[ebp], ecx
; Line 735
	jmp	$LN6@FT_Bitmap_
$LN43@FT_Bitmap_:
; Line 743
	mov	eax, DWORD PTR _error$[ebp]
$LN59@FT_Bitmap_:
; Line 744
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN65@FT_Bitmap_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN65@FT_Bitmap_:
	DD	1
	DD	$LN64@FT_Bitmap_
$LN64@FT_Bitmap_:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN63@FT_Bitmap_
$LN63@FT_Bitmap_:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
	npad	2
$LN66@FT_Bitmap_:
	DD	$LN42@FT_Bitmap_
	DD	$LN31@FT_Bitmap_
	DD	$LN27@FT_Bitmap_
	DD	$LN16@FT_Bitmap_
	DD	$LN31@FT_Bitmap_
	DD	$LN31@FT_Bitmap_
	DD	$LN8@FT_Bitmap_
_FT_Bitmap_Convert ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv140 = -76						; size = 4
_q$1 = -72						; size = 4
_tmp$2 = -65						; size = 1
_tmp$3 = -60						; size = 24
_ystr$ = -32						; size = 4
_xstr$ = -28						; size = 4
_y$ = -24						; size = 4
_pitch$ = -20						; size = 4
_x$ = -16						; size = 4
_i$ = -12						; size = 4
_p$ = -8						; size = 4
_error$ = -4						; size = 4
_library$ = 8						; size = 4
_bitmap$ = 12						; size = 4
_xStrength$ = 16					; size = 4
_yStrength$ = 20					; size = 4
_FT_Bitmap_Embolden PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	edi
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 271
	cmp	DWORD PTR _library$[ebp], 0
	jne	SHORT $LN44@FT_Bitmap_
; Line 272
	push	OFFSET $SG7134
	push	272					; 00000110H
	push	33					; 00000021H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 33					; 00000021H
	jmp	$LN45@FT_Bitmap_
$LN44@FT_Bitmap_:
; Line 274
	cmp	DWORD PTR _bitmap$[ebp], 0
	je	SHORT $LN42@FT_Bitmap_
	mov	eax, DWORD PTR _bitmap$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN43@FT_Bitmap_
$LN42@FT_Bitmap_:
; Line 275
	push	OFFSET $SG7137
	push	275					; 00000113H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN45@FT_Bitmap_
$LN43@FT_Bitmap_:
; Line 278
	mov	ecx, DWORD PTR _xStrength$[ebp]
	add	ecx, 32					; 00000020H
	and	ecx, -64				; ffffffc0H
	sar	ecx, 6
	cmp	ecx, 2147483647				; 7fffffffH
	jg	SHORT $LN40@FT_Bitmap_
	mov	edx, DWORD PTR _yStrength$[ebp]
	add	edx, 32					; 00000020H
	and	edx, -64				; ffffffc0H
	sar	edx, 6
	cmp	edx, 2147483647				; 7fffffffH
	jle	SHORT $LN41@FT_Bitmap_
$LN40@FT_Bitmap_:
; Line 279
	push	OFFSET $SG7140
	push	279					; 00000117H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN45@FT_Bitmap_
$LN41@FT_Bitmap_:
; Line 281
	mov	eax, DWORD PTR _xStrength$[ebp]
	add	eax, 32					; 00000020H
	and	eax, -64				; ffffffc0H
	sar	eax, 6
	mov	DWORD PTR _xstr$[ebp], eax
; Line 282
	mov	ecx, DWORD PTR _yStrength$[ebp]
	add	ecx, 32					; 00000020H
	and	ecx, -64				; ffffffc0H
	sar	ecx, 6
	mov	DWORD PTR _ystr$[ebp], ecx
; Line 284
	cmp	DWORD PTR _xstr$[ebp], 0
	jne	SHORT $LN39@FT_Bitmap_
	cmp	DWORD PTR _ystr$[ebp], 0
	jne	SHORT $LN39@FT_Bitmap_
; Line 285
	xor	eax, eax
	jmp	$LN45@FT_Bitmap_
	jmp	SHORT $LN38@FT_Bitmap_
$LN39@FT_Bitmap_:
; Line 286
	cmp	DWORD PTR _xstr$[ebp], 0
	jl	SHORT $LN36@FT_Bitmap_
	cmp	DWORD PTR _ystr$[ebp], 0
	jge	SHORT $LN38@FT_Bitmap_
$LN36@FT_Bitmap_:
; Line 287
	push	OFFSET $SG7147
	push	287					; 0000011fH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN45@FT_Bitmap_
$LN38@FT_Bitmap_:
; Line 289
	mov	edx, DWORD PTR _bitmap$[ebp]
	movzx	eax, BYTE PTR [edx+18]
	mov	DWORD PTR tv140[ebp], eax
	mov	ecx, DWORD PTR tv140[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv140[ebp], ecx
	cmp	DWORD PTR tv140[ebp], 6
	ja	$LN34@FT_Bitmap_
	mov	edx, DWORD PTR tv140[ebp]
	jmp	DWORD PTR $LN50@FT_Bitmap_[edx*4]
$LN33@FT_Bitmap_:
; Line 298
	lea	eax, DWORD PTR _tmp$3[ebp]
	push	eax
	call	_FT_Bitmap_New
	add	esp, 4
; Line 299
	push	1
	lea	ecx, DWORD PTR _tmp$3[ebp]
	push	ecx
	mov	edx, DWORD PTR _bitmap$[ebp]
	push	edx
	mov	eax, DWORD PTR _library$[ebp]
	push	eax
	call	_FT_Bitmap_Convert
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 300
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN32@FT_Bitmap_
; Line 301
	mov	eax, DWORD PTR _error$[ebp]
	jmp	$LN45@FT_Bitmap_
$LN32@FT_Bitmap_:
; Line 303
	mov	ecx, DWORD PTR _bitmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _library$[ebp]
	push	edx
	call	_FT_Bitmap_Done
	add	esp, 8
; Line 304
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR _tmp$3[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _tmp$3[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _tmp$3[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _tmp$3[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _tmp$3[ebp+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _tmp$3[ebp+20]
	mov	DWORD PTR [eax+20], edx
; Line 306
	jmp	SHORT $LN34@FT_Bitmap_
$LN31@FT_Bitmap_:
; Line 309
	cmp	DWORD PTR _xstr$[ebp], 8
	jle	SHORT $LN30@FT_Bitmap_
; Line 310
	mov	DWORD PTR _xstr$[ebp], 8
$LN30@FT_Bitmap_:
; Line 311
	jmp	SHORT $LN34@FT_Bitmap_
$LN29@FT_Bitmap_:
; Line 314
	imul	eax, DWORD PTR _xstr$[ebp], 3
	mov	DWORD PTR _xstr$[ebp], eax
; Line 315
	jmp	SHORT $LN34@FT_Bitmap_
$LN28@FT_Bitmap_:
; Line 318
	imul	ecx, DWORD PTR _ystr$[ebp], 3
	mov	DWORD PTR _ystr$[ebp], ecx
; Line 319
	jmp	SHORT $LN34@FT_Bitmap_
$LN27@FT_Bitmap_:
; Line 323
	xor	eax, eax
	jmp	$LN45@FT_Bitmap_
$LN34@FT_Bitmap_:
; Line 326
	mov	edx, DWORD PTR _ystr$[ebp]
	push	edx
	mov	eax, DWORD PTR _xstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _library$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_ft_bitmap_assure_buffer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 327
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN26@FT_Bitmap_
; Line 328
	mov	eax, DWORD PTR _error$[ebp]
	jmp	$LN45@FT_Bitmap_
$LN26@FT_Bitmap_:
; Line 331
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pitch$[ebp], edx
; Line 332
	cmp	DWORD PTR _pitch$[ebp], 0
	jle	SHORT $LN25@FT_Bitmap_
; Line 333
	mov	eax, DWORD PTR _pitch$[ebp]
	imul	eax, DWORD PTR _ystr$[ebp]
	mov	ecx, DWORD PTR _bitmap$[ebp]
	add	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR _p$[ebp], eax
; Line 334
	jmp	SHORT $LN24@FT_Bitmap_
$LN25@FT_Bitmap_:
; Line 336
	mov	edx, DWORD PTR _pitch$[ebp]
	neg	edx
	mov	DWORD PTR _pitch$[ebp], edx
; Line 337
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	imul	ecx, DWORD PTR _pitch$[ebp]
	mov	edx, DWORD PTR _bitmap$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR _p$[ebp], ecx
$LN24@FT_Bitmap_:
; Line 341
	mov	DWORD PTR _y$[ebp], 0
	jmp	SHORT $LN23@FT_Bitmap_
$LN22@FT_Bitmap_:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN23@FT_Bitmap_:
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	edx, DWORD PTR _y$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jae	$LN21@FT_Bitmap_
; Line 349
	mov	eax, DWORD PTR _pitch$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax
	jmp	SHORT $LN20@FT_Bitmap_
$LN19@FT_Bitmap_:
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _x$[ebp], ecx
$LN20@FT_Bitmap_:
	cmp	DWORD PTR _x$[ebp], 0
	jl	$LN18@FT_Bitmap_
; Line 354
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _tmp$2[ebp], al
; Line 355
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN17@FT_Bitmap_
$LN16@FT_Bitmap_:
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN17@FT_Bitmap_:
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _xstr$[ebp]
	jg	$LN15@FT_Bitmap_
; Line 357
	mov	eax, DWORD PTR _bitmap$[ebp]
	movzx	ecx, BYTE PTR [eax+18]
	cmp	ecx, 1
	jne	SHORT $LN14@FT_Bitmap_
; Line 359
	movzx	edx, BYTE PTR _tmp$2[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	sar	edx, cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	ecx, edx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	mov	BYTE PTR [edx], cl
; Line 362
	cmp	DWORD PTR _x$[ebp], 0
	jle	SHORT $LN13@FT_Bitmap_
; Line 363
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movzx	edx, BYTE PTR [eax-1]
	mov	ecx, 8
	sub	ecx, DWORD PTR _i$[ebp]
	shl	edx, cl
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	ecx, edx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	mov	BYTE PTR [edx], cl
$LN13@FT_Bitmap_:
; Line 370
	jmp	$LN12@FT_Bitmap_
$LN14@FT_Bitmap_:
; Line 372
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	js	SHORT $LN11@FT_Bitmap_
; Line 374
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _x$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	add	edx, eax
	mov	ecx, DWORD PTR _bitmap$[ebp]
	movzx	eax, WORD PTR [ecx+16]
	sub	eax, 1
	cmp	edx, eax
	jle	SHORT $LN10@FT_Bitmap_
; Line 376
	mov	ecx, DWORD PTR _bitmap$[ebp]
	movzx	edx, WORD PTR [ecx+16]
	sub	edx, 1
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	BYTE PTR [eax], dl
; Line 377
	jmp	SHORT $LN15@FT_Bitmap_
; Line 379
	jmp	SHORT $LN9@FT_Bitmap_
$LN10@FT_Bitmap_:
; Line 381
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _x$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	add	edx, eax
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _x$[ebp]
	mov	BYTE PTR [ecx], dl
; Line 382
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _bitmap$[ebp]
	movzx	edx, WORD PTR [ecx+16]
	sub	edx, 1
	cmp	eax, edx
	jne	SHORT $LN9@FT_Bitmap_
; Line 383
	jmp	SHORT $LN15@FT_Bitmap_
$LN9@FT_Bitmap_:
; Line 386
	jmp	SHORT $LN12@FT_Bitmap_
$LN11@FT_Bitmap_:
; Line 387
	jmp	SHORT $LN15@FT_Bitmap_
$LN12@FT_Bitmap_:
; Line 389
	jmp	$LN16@FT_Bitmap_
$LN15@FT_Bitmap_:
; Line 390
	jmp	$LN19@FT_Bitmap_
$LN18@FT_Bitmap_:
; Line 397
	mov	DWORD PTR _x$[ebp], 1
	jmp	SHORT $LN6@FT_Bitmap_
$LN5@FT_Bitmap_:
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN6@FT_Bitmap_:
	mov	ecx, DWORD PTR _x$[ebp]
	cmp	ecx, DWORD PTR _ystr$[ebp]
	jg	SHORT $LN4@FT_Bitmap_
; Line 402
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx+8]
	imul	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _q$1[ebp], ecx
; Line 403
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@FT_Bitmap_
$LN2@FT_Bitmap_:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@FT_Bitmap_:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _pitch$[ebp]
	jge	SHORT $LN1@FT_Bitmap_
; Line 404
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	eax, DWORD PTR _q$1[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax]
	or	ecx, edx
	mov	edx, DWORD PTR _q$1[ebp]
	add	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR [edx], cl
	jmp	SHORT $LN2@FT_Bitmap_
$LN1@FT_Bitmap_:
; Line 405
	jmp	SHORT $LN5@FT_Bitmap_
$LN4@FT_Bitmap_:
; Line 407
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _p$[ebp], ecx
; Line 408
	jmp	$LN22@FT_Bitmap_
$LN21@FT_Bitmap_:
; Line 410
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, DWORD PTR _xstr$[ebp]
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 411
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, DWORD PTR _ystr$[ebp]
	mov	ecx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 413
	xor	eax, eax
$LN45@FT_Bitmap_:
; Line 414
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN49@FT_Bitmap_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 76					; 0000004cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN49@FT_Bitmap_:
	DD	1
	DD	$LN48@FT_Bitmap_
$LN48@FT_Bitmap_:
	DD	-60					; ffffffc4H
	DD	24					; 00000018H
	DD	$LN47@FT_Bitmap_
$LN47@FT_Bitmap_:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN50@FT_Bitmap_:
	DD	$LN31@FT_Bitmap_
	DD	$LN34@FT_Bitmap_
	DD	$LN33@FT_Bitmap_
	DD	$LN33@FT_Bitmap_
	DD	$LN29@FT_Bitmap_
	DD	$LN28@FT_Bitmap_
	DD	$LN27@FT_Bitmap_
_FT_Bitmap_Embolden ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -64						; size = 4
tv80 = -60						; size = 4
_t$1 = -56						; size = 4
_s$2 = -52						; size = 4
_i$3 = -48						; size = 4
_p$4 = -44						; size = 4
_target_size$5 = -40					; size = 4
_target_pitch$6 = -36					; size = 4
_target_pitch_sign$ = -32				; size = 4
_source_pitch_sign$ = -28				; size = 4
_size$ = -24						; size = 4
_pitch$ = -20						; size = 4
_error$ = -12						; size = 4
_memory$ = -4						; size = 4
_library$ = 8						; size = 4
_source$ = 12						; size = 4
_target$ = 16						; size = 4
_FT_Bitmap_Copy PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	edi
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	DWORD PTR _error$[ebp], 0
; Line 57
	cmp	DWORD PTR _library$[ebp], 0
	jne	SHORT $LN17@FT_Bitmap_
; Line 58
	push	OFFSET $SG7019
	push	58					; 0000003aH
	push	33					; 00000021H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 33					; 00000021H
	jmp	$LN18@FT_Bitmap_
$LN17@FT_Bitmap_:
; Line 60
	cmp	DWORD PTR _source$[ebp], 0
	je	SHORT $LN15@FT_Bitmap_
	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN16@FT_Bitmap_
$LN15@FT_Bitmap_:
; Line 61
	push	OFFSET $SG7022
	push	61					; 0000003dH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN18@FT_Bitmap_
$LN16@FT_Bitmap_:
; Line 63
	mov	eax, DWORD PTR _source$[ebp]
	cmp	eax, DWORD PTR _target$[ebp]
	jne	SHORT $LN14@FT_Bitmap_
; Line 64
	xor	eax, eax
	jmp	$LN18@FT_Bitmap_
$LN14@FT_Bitmap_:
; Line 66
	mov	ecx, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	jge	SHORT $LN20@FT_Bitmap_
	mov	DWORD PTR tv80[ebp], -1
	jmp	SHORT $LN21@FT_Bitmap_
$LN20@FT_Bitmap_:
	mov	DWORD PTR tv80[ebp], 1
$LN21@FT_Bitmap_:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _source_pitch_sign$[ebp], edx
; Line 67
	mov	eax, DWORD PTR _target$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jge	SHORT $LN22@FT_Bitmap_
	mov	DWORD PTR tv83[ebp], -1
	jmp	SHORT $LN23@FT_Bitmap_
$LN22@FT_Bitmap_:
	mov	DWORD PTR tv83[ebp], 1
$LN23@FT_Bitmap_:
	mov	ecx, DWORD PTR tv83[ebp]
	mov	DWORD PTR _target_pitch_sign$[ebp], ecx
; Line 69
	mov	edx, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN13@FT_Bitmap_
; Line 71
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], edx
	mov	edx, DWORD PTR [eax+16]
	mov	DWORD PTR [ecx+16], edx
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx+20], eax
; Line 72
	mov	ecx, DWORD PTR _source_pitch_sign$[ebp]
	cmp	ecx, DWORD PTR _target_pitch_sign$[ebp]
	je	SHORT $LN12@FT_Bitmap_
; Line 73
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+8]
	neg	eax
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN12@FT_Bitmap_:
; Line 75
	xor	eax, eax
	jmp	$LN18@FT_Bitmap_
$LN13@FT_Bitmap_:
; Line 78
	mov	edx, DWORD PTR _library$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _memory$[ebp], eax
; Line 79
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pitch$[ebp], edx
; Line 81
	cmp	DWORD PTR _pitch$[ebp], 0
	jge	SHORT $LN11@FT_Bitmap_
; Line 82
	mov	eax, DWORD PTR _pitch$[ebp]
	neg	eax
	mov	DWORD PTR _pitch$[ebp], eax
$LN11@FT_Bitmap_:
; Line 83
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR _pitch$[ebp]
	imul	edx, DWORD PTR [ecx]
	mov	DWORD PTR _size$[ebp], edx
; Line 85
	mov	eax, DWORD PTR _target$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN10@FT_Bitmap_
; Line 87
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _target_pitch$6[ebp], edx
; Line 91
	cmp	DWORD PTR _target_pitch$6[ebp], 0
	jge	SHORT $LN9@FT_Bitmap_
; Line 92
	mov	eax, DWORD PTR _target_pitch$6[ebp]
	neg	eax
	mov	DWORD PTR _target_pitch$6[ebp], eax
$LN9@FT_Bitmap_:
; Line 93
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _target_pitch$6[ebp]
	imul	edx, DWORD PTR [ecx]
	mov	DWORD PTR _target_size$5[ebp], edx
; Line 95
	mov	eax, DWORD PTR _target_size$5[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN8@FT_Bitmap_
; Line 96
	lea	ecx, DWORD PTR _error$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _target_size$5[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_qrealloc
	add	esp, 24					; 00000018H
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN8@FT_Bitmap_:
; Line 98
	jmp	SHORT $LN7@FT_Bitmap_
$LN10@FT_Bitmap_:
; Line 99
	lea	edx, DWORD PTR _error$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$[ebp]
	push	ecx
	call	_ft_mem_qalloc
	add	esp, 12					; 0000000cH
	mov	edx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN7@FT_Bitmap_:
; Line 101
	cmp	DWORD PTR _error$[ebp], 0
	jne	$LN6@FT_Bitmap_
; Line 106
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _p$4[ebp], ecx
; Line 107
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR [edx+20]
	mov	DWORD PTR [eax+20], edx
; Line 108
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _p$4[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 110
	mov	edx, DWORD PTR _source_pitch_sign$[ebp]
	cmp	edx, DWORD PTR _target_pitch_sign$[ebp]
	jne	SHORT $LN5@FT_Bitmap_
; Line 111
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 112
	jmp	SHORT $LN6@FT_Bitmap_
$LN5@FT_Bitmap_:
; Line 116
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _s$2[ebp], eax
; Line 117
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR _t$1[ebp], edx
; Line 120
	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	imul	ecx, DWORD PTR _pitch$[ebp]
	add	ecx, DWORD PTR _t$1[ebp]
	mov	DWORD PTR _t$1[ebp], ecx
; Line 122
	mov	edx, DWORD PTR _target$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _i$3[ebp], eax
	jmp	SHORT $LN3@FT_Bitmap_
$LN2@FT_Bitmap_:
	mov	ecx, DWORD PTR _i$3[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$3[ebp], ecx
$LN3@FT_Bitmap_:
	cmp	DWORD PTR _i$3[ebp], 0
	jbe	SHORT $LN6@FT_Bitmap_
; Line 124
	mov	edx, DWORD PTR _pitch$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$1[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 126
	mov	edx, DWORD PTR _s$2[ebp]
	add	edx, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _s$2[ebp], edx
; Line 127
	mov	eax, DWORD PTR _t$1[ebp]
	sub	eax, DWORD PTR _pitch$[ebp]
	mov	DWORD PTR _t$1[ebp], eax
; Line 128
	jmp	SHORT $LN2@FT_Bitmap_
$LN6@FT_Bitmap_:
; Line 132
	mov	eax, DWORD PTR _error$[ebp]
$LN18@FT_Bitmap_:
; Line 133
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@FT_Bitmap_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN26@FT_Bitmap_:
	DD	1
	DD	$LN25@FT_Bitmap_
$LN25@FT_Bitmap_:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN24@FT_Bitmap_
$LN24@FT_Bitmap_:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_FT_Bitmap_Copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_abitmap$ = 8						; size = 4
_FT_Bitmap_New PROC
; File d:\mozilla\modules\freetype2\src\base\ftbitmap.c
; Line 35
	push	ebp
	mov	ebp, esp
; Line 36
	cmp	DWORD PTR _abitmap$[ebp], 0
	je	SHORT $LN2@FT_Bitmap_
; Line 37
	mov	eax, DWORD PTR _abitmap$[ebp]
	mov	ecx, DWORD PTR _null_bitmap
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _null_bitmap+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _null_bitmap+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _null_bitmap+12
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _null_bitmap+16
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _null_bitmap+20
	mov	DWORD PTR [eax+20], edx
$LN2@FT_Bitmap_:
; Line 38
	pop	ebp
	ret	0
_FT_Bitmap_New ENDP
_TEXT	ENDS
END

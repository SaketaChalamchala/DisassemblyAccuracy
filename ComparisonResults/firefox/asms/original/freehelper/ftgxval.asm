; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftgxval.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7058	DB	'..\..\..\src\base\ftgxval.c', 00H
$SG7061	DB	'..\..\..\src\base\ftgxval.c', 00H
$SG7069	DB	'truetypegx-validate', 00H
$SG7072	DB	'..\..\..\src\base\ftgxval.c', 00H
$SG7095	DB	'..\..\..\src\base\ftgxval.c', 00H
$SG7098	DB	'..\..\..\src\base\ftgxval.c', 00H
$SG7106	DB	'classickern-validate', 00H
	ORG $+3
$SG7109	DB	'..\..\..\src\base\ftgxval.c', 00H
_DATA	ENDS
PUBLIC	_FT_TrueTypeGX_Validate
PUBLIC	_FT_TrueTypeGX_Free
PUBLIC	_FT_ClassicKern_Validate
PUBLIC	_FT_ClassicKern_Free
EXTRN	_FT_Throw:PROC
EXTRN	_ft_mem_free:PROC
EXTRN	_ft_module_get_service:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_face$ = 8						; size = 4
_table$ = 12						; size = 4
_FT_ClassicKern_Free PROC
; File d:\mozilla\modules\freetype2\src\base\ftgxval.c
; Line 128
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 132
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN4@FT_Classic
; Line 133
	jmp	SHORT $LN5@FT_Classic
$LN4@FT_Classic:
; Line 135
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _memory$[ebp], ecx
$LN3@FT_Classic:
; Line 138
	mov	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _table$[ebp], 0
	xor	ecx, ecx
	jne	SHORT $LN3@FT_Classic
$LN5@FT_Classic:
; Line 139
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_ClassicKern_Free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_error$ = -8						; size = 4
_service$ = -4						; size = 4
_face$ = 8						; size = 4
_validation_flags$ = 12					; size = 4
_ckern_table$ = 16					; size = 4
_FT_ClassicKern_Validate PROC
; File d:\mozilla\modules\freetype2\src\base\ftgxval.c
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 99
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN7@FT_Classic
; Line 101
	push	OFFSET $SG7095
	push	101					; 00000065H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	mov	DWORD PTR _error$[ebp], eax
; Line 102
	jmp	$Exit$10
$LN7@FT_Classic:
; Line 105
	cmp	DWORD PTR _ckern_table$[ebp], 0
	jne	SHORT $LN5@FT_Classic
; Line 107
	push	OFFSET $SG7098
	push	107					; 0000006bH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 108
	jmp	SHORT $Exit$10
$LN5@FT_Classic:
; Line 111
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	push	OFFSET $SG7106
	mov	edx, DWORD PTR _module$2[ebp]
	push	edx
	call	_ft_module_get_service
	add	esp, 8
	mov	DWORD PTR __tmp_$1[ebp], eax
	mov	eax, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN5@FT_Classic
; Line 113
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_Classic
; Line 116
	mov	esi, esp
	mov	edx, DWORD PTR _ckern_table$[ebp]
	push	edx
	mov	eax, DWORD PTR _validation_flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _face$[ebp]
	push	ecx
	mov	edx, DWORD PTR _service$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 117
	jmp	SHORT $Exit$10
$LN2@FT_Classic:
; Line 118
	push	OFFSET $SG7109
	push	118					; 00000076H
	push	7
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 7
	mov	DWORD PTR _error$[ebp], eax
$Exit$10:
; Line 121
	mov	eax, DWORD PTR _error$[ebp]
; Line 122
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_ClassicKern_Validate ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_memory$ = -4						; size = 4
_face$ = 8						; size = 4
_table$ = 12						; size = 4
_FT_TrueTypeGX_Free PROC
; File d:\mozilla\modules\freetype2\src\base\ftgxval.c
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 81
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN4@FT_TrueTyp
; Line 82
	jmp	SHORT $LN5@FT_TrueTyp
$LN4@FT_TrueTyp:
; Line 84
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _memory$[ebp], ecx
$LN3@FT_TrueTyp:
; Line 86
	mov	edx, DWORD PTR _table$[ebp]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _table$[ebp], 0
	xor	ecx, ecx
	jne	SHORT $LN3@FT_TrueTyp
$LN5@FT_TrueTyp:
; Line 87
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_TrueTypeGX_Free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_error$ = -8						; size = 4
_service$ = -4						; size = 4
_face$ = 8						; size = 4
_validation_flags$ = 12					; size = 4
_tables$ = 16						; size = 4
_table_length$ = 20					; size = 4
_FT_TrueTypeGX_Validate PROC
; File d:\mozilla\modules\freetype2\src\base\ftgxval.c
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 47
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN7@FT_TrueTyp
; Line 49
	push	OFFSET $SG7058
	push	49					; 00000031H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	mov	DWORD PTR _error$[ebp], eax
; Line 50
	jmp	$Exit$10
$LN7@FT_TrueTyp:
; Line 53
	cmp	DWORD PTR _tables$[ebp], 0
	jne	SHORT $LN5@FT_TrueTyp
; Line 55
	push	OFFSET $SG7061
	push	55					; 00000037H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 56
	jmp	SHORT $Exit$10
$LN5@FT_TrueTyp:
; Line 59
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	push	OFFSET $SG7069
	mov	edx, DWORD PTR _module$2[ebp]
	push	edx
	call	_ft_module_get_service
	add	esp, 8
	mov	DWORD PTR __tmp_$1[ebp], eax
	mov	eax, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], eax
	xor	ecx, ecx
	jne	SHORT $LN5@FT_TrueTyp
; Line 61
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_TrueTyp
; Line 65
	mov	esi, esp
	mov	edx, DWORD PTR _table_length$[ebp]
	push	edx
	mov	eax, DWORD PTR _tables$[ebp]
	push	eax
	mov	ecx, DWORD PTR _validation_flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _face$[ebp]
	push	edx
	mov	eax, DWORD PTR _service$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 66
	jmp	SHORT $Exit$10
$LN2@FT_TrueTyp:
; Line 67
	push	OFFSET $SG7072
	push	67					; 00000043H
	push	7
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 7
	mov	DWORD PTR _error$[ebp], eax
$Exit$10:
; Line 70
	mov	eax, DWORD PTR _error$[ebp]
; Line 71
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_TrueTypeGX_Validate ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\fttype1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7516	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7518	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7528	DB	'postscript-info', 00H
$SG7531	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7547	DB	'postscript-info', 00H
$SG7557	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7559	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7569	DB	'postscript-info', 00H
$SG7572	DB	'..\..\..\src\base\fttype1.c', 00H
$SG7597	DB	'postscript-info', 00H
_DATA	ENDS
PUBLIC	_FT_Has_PS_Glyph_Names
PUBLIC	_FT_Get_PS_Font_Info
PUBLIC	_FT_Get_PS_Font_Private
PUBLIC	_FT_Get_PS_Font_Value
EXTRN	_FT_Throw:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_service$ = -8						; size = 4
_result$ = -4						; size = 4
_face$ = 8						; size = 4
_key$ = 12						; size = 4
_idx$ = 16						; size = 4
_value$ = 20						; size = 4
_value_len$ = 24					; size = 4
_FT_Get_PS_Font_Value PROC
; File d:\mozilla\modules\freetype2\src\base\fttype1.c
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 110
	mov	DWORD PTR _result$[ebp], 0
; Line 111
	mov	DWORD PTR _service$[ebp], 0
; Line 114
	cmp	DWORD PTR _face$[ebp], 0
	je	$LN6@FT_Get_PS_
$LN5@FT_Get_PS_:
; Line 116
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	mov	DWORD PTR __tmp_$1[ebp], 0
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@FT_Get_PS_
	mov	esi, esp
	push	OFFSET $SG7597
	mov	ecx, DWORD PTR _module$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __tmp_$1[ebp], eax
$LN2@FT_Get_PS_:
	mov	edx, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN5@FT_Get_PS_
; Line 118
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN6@FT_Get_PS_
	mov	ecx, DWORD PTR _service$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN6@FT_Get_PS_
; Line 120
	mov	esi, esp
	mov	edx, DWORD PTR _value_len$[ebp]
	push	edx
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	push	edx
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN6@FT_Get_PS_:
; Line 123
	mov	eax, DWORD PTR _result$[ebp]
; Line 124
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PS_Font_Value ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_service$ = -8						; size = 4
_error$ = -4						; size = 4
_face$ = 8						; size = 4
_afont_private$ = 12					; size = 4
_FT_Get_PS_Font_Private PROC
; File d:\mozilla\modules\freetype2\src\base\fttype1.c
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 84
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN8@FT_Get_PS_
; Line 85
	push	OFFSET $SG7557
	push	85					; 00000055H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	jmp	$LN9@FT_Get_PS_
$LN8@FT_Get_PS_:
; Line 87
	cmp	DWORD PTR _afont_private$[ebp], 0
	jne	SHORT $LN6@FT_Get_PS_
; Line 88
	push	OFFSET $SG7559
	push	88					; 00000058H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN9@FT_Get_PS_
$LN6@FT_Get_PS_:
; Line 90
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	mov	DWORD PTR __tmp_$1[ebp], 0
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN3@FT_Get_PS_
	mov	esi, esp
	push	OFFSET $SG7569
	mov	ecx, DWORD PTR _module$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __tmp_$1[ebp], eax
$LN3@FT_Get_PS_:
	mov	edx, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN6@FT_Get_PS_
; Line 92
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_Get_PS_
	mov	ecx, DWORD PTR _service$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN2@FT_Get_PS_
; Line 93
	mov	esi, esp
	mov	edx, DWORD PTR _afont_private$[ebp]
	push	edx
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 94
	jmp	SHORT $LN1@FT_Get_PS_
$LN2@FT_Get_PS_:
; Line 95
	push	OFFSET $SG7572
	push	95					; 0000005fH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
$LN1@FT_Get_PS_:
; Line 97
	mov	eax, DWORD PTR _error$[ebp]
$LN9@FT_Get_PS_:
; Line 98
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PS_Font_Private ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_service$ = -8						; size = 4
_error$ = -4						; size = 4
_face$ = 8						; size = 4
_afont_info$ = 12					; size = 4
_FT_Get_PS_Font_Info PROC
; File d:\mozilla\modules\freetype2\src\base\fttype1.c
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 36
	cmp	DWORD PTR _face$[ebp], 0
	jne	SHORT $LN8@FT_Get_PS_
; Line 37
	push	OFFSET $SG7516
	push	37					; 00000025H
	push	35					; 00000023H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 35					; 00000023H
	jmp	$LN9@FT_Get_PS_
$LN8@FT_Get_PS_:
; Line 39
	cmp	DWORD PTR _afont_info$[ebp], 0
	jne	SHORT $LN6@FT_Get_PS_
; Line 40
	push	OFFSET $SG7518
	push	40					; 00000028H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN9@FT_Get_PS_
$LN6@FT_Get_PS_:
; Line 42
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	mov	DWORD PTR __tmp_$1[ebp], 0
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN3@FT_Get_PS_
	mov	esi, esp
	push	OFFSET $SG7528
	mov	ecx, DWORD PTR _module$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __tmp_$1[ebp], eax
$LN3@FT_Get_PS_:
	mov	edx, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN6@FT_Get_PS_
; Line 44
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN2@FT_Get_PS_
	mov	ecx, DWORD PTR _service$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@FT_Get_PS_
; Line 45
	mov	esi, esp
	mov	edx, DWORD PTR _afont_info$[ebp]
	push	edx
	mov	eax, DWORD PTR _face$[ebp]
	push	eax
	mov	ecx, DWORD PTR _service$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 46
	jmp	SHORT $LN1@FT_Get_PS_
$LN2@FT_Get_PS_:
; Line 47
	push	OFFSET $SG7531
	push	47					; 0000002fH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
$LN1@FT_Get_PS_:
; Line 49
	mov	eax, DWORD PTR _error$[ebp]
$LN9@FT_Get_PS_:
; Line 50
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Get_PS_Font_Info ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
__tmp_$1 = -16						; size = 4
_module$2 = -12						; size = 4
_service$ = -8						; size = 4
_result$ = -4						; size = 4
_face$ = 8						; size = 4
_FT_Has_PS_Glyph_Names PROC
; File d:\mozilla\modules\freetype2\src\base\fttype1.c
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 58
	mov	DWORD PTR _result$[ebp], 0
; Line 62
	cmp	DWORD PTR _face$[ebp], 0
	je	SHORT $LN6@FT_Has_PS_
$LN5@FT_Has_PS_:
; Line 64
	mov	eax, DWORD PTR _face$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _module$2[ebp], ecx
	mov	DWORD PTR __tmp_$1[ebp], 0
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@FT_Has_PS_
	mov	esi, esp
	push	OFFSET $SG7547
	mov	ecx, DWORD PTR _module$2[ebp]
	push	ecx
	mov	edx, DWORD PTR _module$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __tmp_$1[ebp], eax
$LN2@FT_Has_PS_:
	mov	edx, DWORD PTR __tmp_$1[ebp]
	mov	DWORD PTR _service$[ebp], edx
	xor	eax, eax
	jne	SHORT $LN5@FT_Has_PS_
; Line 66
	cmp	DWORD PTR _service$[ebp], 0
	je	SHORT $LN6@FT_Has_PS_
	mov	ecx, DWORD PTR _service$[ebp]
	cmp	DWORD PTR [ecx+8], 0
	je	SHORT $LN6@FT_Has_PS_
; Line 67
	mov	esi, esp
	mov	edx, DWORD PTR _face$[ebp]
	push	edx
	mov	eax, DWORD PTR _service$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
$LN6@FT_Has_PS_:
; Line 70
	mov	eax, DWORD PTR _result$[ebp]
; Line 71
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Has_PS_Glyph_Names ENDP
_TEXT	ENDS
END

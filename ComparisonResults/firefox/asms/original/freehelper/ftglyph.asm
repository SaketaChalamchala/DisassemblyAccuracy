; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftglyph.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	_ft_outline_glyph_class
PUBLIC	_ft_bitmap_glyph_class
_DATA	SEGMENT
$SG7238	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7243	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7259	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7261	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7269	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7284	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7290	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7346	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7113	DB	'..\..\..\src\base\ftglyph.c', 00H
$SG7160	DB	'..\..\..\src\base\ftglyph.c', 00H
_DATA	ENDS
CONST	SEGMENT
_ft_outline_glyph_class DD 028H
	DD	06f75746cH
	DD	FLAT:_ft_outline_glyph_init
	DD	FLAT:_ft_outline_glyph_done
	DD	FLAT:_ft_outline_glyph_copy
	DD	FLAT:_ft_outline_glyph_transform
	DD	FLAT:_ft_outline_glyph_bbox
	DD	FLAT:_ft_outline_glyph_prepare
_ft_bitmap_glyph_class DD 034H
	DD	062697473H
	DD	FLAT:_ft_bitmap_glyph_init
	DD	FLAT:_ft_bitmap_glyph_done
	DD	FLAT:_ft_bitmap_glyph_copy
	DD	00H
	DD	FLAT:_ft_bitmap_glyph_bbox
	DD	00H
CONST	ENDS
PUBLIC	_FT_Get_Glyph
PUBLIC	_FT_Glyph_Copy
PUBLIC	_FT_Glyph_Transform
PUBLIC	_FT_Glyph_Get_CBox
PUBLIC	_FT_Glyph_To_Bitmap
PUBLIC	_FT_Done_Glyph
EXTRN	_memset:PROC
EXTRN	_FT_Vector_Transform:PROC
EXTRN	_FT_Throw:PROC
EXTRN	_FT_Outline_New:PROC
EXTRN	_FT_Outline_Done:PROC
EXTRN	_FT_Outline_Get_CBox:PROC
EXTRN	_FT_Outline_Translate:PROC
EXTRN	_FT_Outline_Copy:PROC
EXTRN	_FT_Outline_Transform:PROC
EXTRN	_FT_Bitmap_New:PROC
EXTRN	_FT_Bitmap_Copy:PROC
EXTRN	_FT_Bitmap_Done:PROC
EXTRN	_ft_mem_alloc:PROC
EXTRN	_ft_mem_free:PROC
EXTRN	_FT_Lookup_Renderer:PROC
EXTRN	_FT_Render_Glyph_Internal:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -20						; size = 4
_error$ = -12						; size = 4
_memory$ = -4						; size = 4
_library$ = 8						; size = 4
_clazz$ = 12						; size = 4
_aglyph$ = 16						; size = 4
_ft_new_glyph PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 285
	mov	eax, DWORD PTR _library$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _memory$[ebp], ecx
; Line 287
	mov	DWORD PTR _glyph$[ebp], 0
; Line 290
	mov	edx, DWORD PTR _aglyph$[ebp]
	mov	DWORD PTR [edx], 0
; Line 292
	lea	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _memory$[ebp]
	push	eax
	call	_ft_mem_alloc
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _glyph$[ebp], eax
	cmp	DWORD PTR _error$[ebp], 0
	jne	SHORT $LN1@ft_new_gly
; Line 294
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR _library$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 295
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR _clazz$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 296
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR _clazz$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+8], ecx
; Line 298
	mov	edx, DWORD PTR _aglyph$[ebp]
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [edx], eax
$LN1@ft_new_gly:
; Line 301
	mov	eax, DWORD PTR _error$[ebp]
; Line 302
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ft_new_gly
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@ft_new_gly:
	DD	1
	DD	$LN5@ft_new_gly
$LN5@ft_new_gly:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN4@ft_new_gly
$LN4@ft_new_gly:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_ft_new_glyph ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -4						; size = 4
_outline_glyph$ = 8					; size = 4
_slot$ = 12						; size = 4
_ft_outline_glyph_prepare PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 247
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 248
	mov	eax, DWORD PTR _outline_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 251
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [ecx+72], 1869968492		; 6f75746cH
; Line 252
	mov	edx, DWORD PTR _glyph$[ebp]
	add	edx, 20					; 00000014H
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR [edx]
	mov	DWORD PTR [eax], ecx
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax+4], ecx
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR [edx+12]
	mov	DWORD PTR [eax+12], ecx
	mov	edx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax+16], edx
; Line 253
	mov	eax, DWORD PTR _slot$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _slot$[ebp]
	mov	DWORD PTR [edx+124], ecx
; Line 255
	xor	eax, eax
; Line 256
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_prepare ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -4						; size = 4
_outline_glyph$ = 8					; size = 4
_bbox$ = 12						; size = 4
_ft_outline_glyph_bbox PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 237
	mov	eax, DWORD PTR _outline_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 240
	mov	ecx, DWORD PTR _bbox$[ebp]
	push	ecx
	mov	edx, DWORD PTR _glyph$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_FT_Outline_Get_CBox
	add	esp, 8
; Line 241
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_bbox ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -4						; size = 4
_outline_glyph$ = 8					; size = 4
_matrix$ = 12						; size = 4
_delta$ = 16						; size = 4
_ft_outline_glyph_transform PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 221
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 222
	mov	eax, DWORD PTR _outline_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 225
	cmp	DWORD PTR _matrix$[ebp], 0
	je	SHORT $LN2@ft_outline
; Line 226
	mov	ecx, DWORD PTR _matrix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _glyph$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_FT_Outline_Transform
	add	esp, 8
$LN2@ft_outline:
; Line 228
	cmp	DWORD PTR _delta$[ebp], 0
	je	SHORT $LN3@ft_outline
; Line 229
	mov	eax, DWORD PTR _delta$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _delta$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _glyph$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	_FT_Outline_Translate
	add	esp, 12					; 0000000cH
$LN3@ft_outline:
; Line 230
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_transform ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_library$ = -16						; size = 4
_error$ = -12						; size = 4
_target$ = -8						; size = 4
_source$ = -4						; size = 4
_outline_source$ = 8					; size = 4
_outline_target$ = 12					; size = 4
_ft_outline_glyph_copy PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 201
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 202
	mov	eax, DWORD PTR _outline_source$[ebp]
	mov	DWORD PTR _source$[ebp], eax
; Line 203
	mov	ecx, DWORD PTR _outline_target$[ebp]
	mov	DWORD PTR _target$[ebp], ecx
; Line 205
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _library$[ebp], eax
; Line 209
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	movsx	eax, WORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	movsx	edx, WORD PTR [ecx+22]
	push	edx
	mov	eax, DWORD PTR _library$[ebp]
	push	eax
	call	_FT_Outline_New
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 210
	cmp	DWORD PTR _error$[ebp], 0
	jne	SHORT $LN1@ft_outline
; Line 211
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 20					; 00000014H
	push	edx
	call	_FT_Outline_Copy
	add	esp, 8
$LN1@ft_outline:
; Line 213
	mov	eax, DWORD PTR _error$[ebp]
; Line 214
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -4						; size = 4
_outline_glyph$ = 8					; size = 4
_ft_outline_glyph_done PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 190
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 191
	mov	eax, DWORD PTR _outline_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 194
	mov	ecx, DWORD PTR _glyph$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_FT_Outline_Done
	add	esp, 8
; Line 195
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_target$ = -20						; size = 4
_source$ = -16						; size = 4
_library$ = -12						; size = 4
_error$ = -8						; size = 4
_glyph$ = -4						; size = 4
_outline_glyph$ = 8					; size = 4
_slot$ = 12						; size = 4
_ft_outline_glyph_init PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 161
	mov	eax, DWORD PTR _outline_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 162
	mov	DWORD PTR _error$[ebp], 0
; Line 163
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _library$[ebp], edx
; Line 164
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 108				; 0000006cH
	mov	DWORD PTR _source$[ebp], eax
; Line 165
	mov	ecx, DWORD PTR _glyph$[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _target$[ebp], ecx
; Line 169
	mov	edx, DWORD PTR _slot$[ebp]
	cmp	DWORD PTR [edx+72], 1869968492		; 6f75746cH
	je	SHORT $LN2@ft_outline
; Line 171
	push	OFFSET $SG7160
	push	171					; 000000abH
	push	18					; 00000012H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 18					; 00000012H
	mov	DWORD PTR _error$[ebp], eax
; Line 172
	jmp	SHORT $Exit$5
$LN2@ft_outline:
; Line 177
	mov	eax, DWORD PTR _glyph$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	push	ecx
	mov	edx, DWORD PTR _library$[ebp]
	push	edx
	call	_FT_Outline_New
	add	esp, 16					; 00000010H
	mov	DWORD PTR _error$[ebp], eax
; Line 178
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@ft_outline
; Line 179
	jmp	SHORT $Exit$5
$LN1@ft_outline:
; Line 181
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	call	_FT_Outline_Copy
	add	esp, 8
$Exit$5:
; Line 184
	mov	eax, DWORD PTR _error$[ebp]
; Line 185
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_outline_glyph_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_glyph$ = -4						; size = 4
_bitmap_glyph$ = 8					; size = 4
_cbox$ = 12						; size = 4
_ft_bitmap_glyph_bbox PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 125
	mov	eax, DWORD PTR _bitmap_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 128
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	shl	edx, 6
	mov	eax, DWORD PTR _cbox$[ebp]
	mov	DWORD PTR [eax], edx
; Line 129
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	shl	edx, 6
	mov	eax, DWORD PTR _cbox$[ebp]
	add	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _cbox$[ebp]
	mov	DWORD PTR [ecx+8], edx
; Line 130
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shl	eax, 6
	mov	ecx, DWORD PTR _cbox$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 131
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+28]
	shl	eax, 6
	mov	ecx, DWORD PTR _cbox$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	sub	edx, eax
	mov	eax, DWORD PTR _cbox$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 132
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_bitmap_glyph_bbox ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_library$ = -8						; size = 4
_glyph$ = -4						; size = 4
_bitmap_glyph$ = 8					; size = 4
_ft_bitmap_glyph_done PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 113
	mov	eax, DWORD PTR _bitmap_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 114
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _library$[ebp], edx
; Line 117
	mov	eax, DWORD PTR _glyph$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	mov	ecx, DWORD PTR _library$[ebp]
	push	ecx
	call	_FT_Bitmap_Done
	add	esp, 8
; Line 118
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_bitmap_glyph_done ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_target$ = -12						; size = 4
_source$ = -8						; size = 4
_library$ = -4						; size = 4
_bitmap_source$ = 8					; size = 4
_bitmap_target$ = 12					; size = 4
_ft_bitmap_glyph_copy PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 98
	mov	eax, DWORD PTR _bitmap_source$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _library$[ebp], ecx
; Line 99
	mov	edx, DWORD PTR _bitmap_source$[ebp]
	mov	DWORD PTR _source$[ebp], edx
; Line 100
	mov	eax, DWORD PTR _bitmap_target$[ebp]
	mov	DWORD PTR _target$[ebp], eax
; Line 103
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+20], eax
; Line 104
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR [ecx+24], eax
; Line 106
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _library$[ebp]
	push	eax
	call	_FT_Bitmap_Copy
	add	esp, 12					; 0000000cH
; Line 107
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_bitmap_glyph_copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_library$ = -12						; size = 4
_error$ = -8						; size = 4
_glyph$ = -4						; size = 4
_bitmap_glyph$ = 8					; size = 4
_slot$ = 12						; size = 4
_ft_bitmap_glyph_init PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 63
	mov	eax, DWORD PTR _bitmap_glyph$[ebp]
	mov	DWORD PTR _glyph$[ebp], eax
; Line 64
	mov	DWORD PTR _error$[ebp], 0
; Line 65
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _library$[ebp], edx
; Line 68
	mov	eax, DWORD PTR _slot$[ebp]
	cmp	DWORD PTR [eax+72], 1651078259		; 62697473H
	je	SHORT $LN3@ft_bitmap_
; Line 70
	push	OFFSET $SG7113
	push	70					; 00000046H
	push	18					; 00000012H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 18					; 00000012H
	mov	DWORD PTR _error$[ebp], eax
; Line 71
	jmp	$Exit$6
$LN3@ft_bitmap_:
; Line 74
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+100]
	mov	DWORD PTR [ecx+20], eax
; Line 75
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	DWORD PTR [ecx+24], eax
; Line 78
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	eax, DWORD PTR [edx+4]
	and	eax, 1
	je	SHORT $LN2@ft_bitmap_
; Line 80
	mov	ecx, DWORD PTR _slot$[ebp]
	add	ecx, 76					; 0000004cH
	mov	edx, DWORD PTR _glyph$[ebp]
	add	edx, 28					; 0000001cH
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx+4], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+8], eax
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx+12], eax
	mov	eax, DWORD PTR [ecx+16]
	mov	DWORD PTR [edx+16], eax
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [edx+20], ecx
; Line 81
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	DWORD PTR [eax+4], ecx
; Line 83
	jmp	SHORT $Exit$6
$LN2@ft_bitmap_:
; Line 85
	mov	ecx, DWORD PTR _glyph$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	call	_FT_Bitmap_New
	add	esp, 4
; Line 86
	mov	edx, DWORD PTR _glyph$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _slot$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	mov	ecx, DWORD PTR _library$[ebp]
	push	ecx
	call	_FT_Bitmap_Copy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
$Exit$6:
; Line 90
	mov	eax, DWORD PTR _error$[ebp]
; Line 91
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ft_bitmap_glyph_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_clazz$1 = -8						; size = 4
_memory$2 = -4						; size = 4
_glyph$ = 8						; size = 4
_FT_Done_Glyph PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 610
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 611
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN6@FT_Done_Gl
; Line 613
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _memory$2[ebp], edx
; Line 614
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _clazz$1[ebp], ecx
; Line 617
	mov	edx, DWORD PTR _clazz$1[ebp]
	cmp	DWORD PTR [edx+12], 0
	je	SHORT $LN3@FT_Done_Gl
; Line 618
	mov	esi, esp
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$1[ebp]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@FT_Done_Gl:
; Line 620
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _memory$2[ebp]
	push	ecx
	call	_ft_mem_free
	add	esp, 8
	mov	DWORD PTR _glyph$[ebp], 0
	xor	edx, edx
	jne	SHORT $LN3@FT_Done_Gl
$LN6@FT_Done_Gl:
; Line 622
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Done_Glyph ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_v$1 = -264						; size = 8
_library$ = -252					; size = 4
_clazz$ = -248						; size = 4
_bitmap$ = -244						; size = 4
_glyph$ = -240						; size = 4
_b$ = -232						; size = 4
_error$ = -224						; size = 4
_dummy_internal$ = -216					; size = 40
_dummy$ = -168						; size = 160
__$ArrayPad$ = -4					; size = 4
_the_glyph$ = 8						; size = 4
_render_mode$ = 12					; size = 4
_origin$ = 16						; size = 4
_destroy$ = 20						; size = 1
_FT_Glyph_To_Bitmap PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 507
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 510
	mov	DWORD PTR _error$[ebp], 0
; Line 512
	mov	DWORD PTR _bitmap$[ebp], 0
; Line 520
	cmp	DWORD PTR _the_glyph$[ebp], 0
	jne	SHORT $LN14@FT_Glyph_T
; Line 521
	jmp	$Bad$23
$LN14@FT_Glyph_T:
; Line 522
	mov	eax, DWORD PTR _the_glyph$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _glyph$[ebp], ecx
; Line 523
	cmp	DWORD PTR _glyph$[ebp], 0
	jne	SHORT $LN13@FT_Glyph_T
; Line 524
	jmp	$Bad$23
$LN13@FT_Glyph_T:
; Line 526
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _clazz$[ebp], eax
; Line 527
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _library$[ebp], edx
; Line 528
	cmp	DWORD PTR _library$[ebp], 0
	je	SHORT $LN11@FT_Glyph_T
	cmp	DWORD PTR _clazz$[ebp], 0
	jne	SHORT $LN12@FT_Glyph_T
$LN11@FT_Glyph_T:
; Line 529
	jmp	$Bad$23
$LN12@FT_Glyph_T:
; Line 532
	cmp	DWORD PTR _clazz$[ebp], OFFSET _ft_bitmap_glyph_class
	jne	SHORT $LN10@FT_Glyph_T
; Line 533
	jmp	$Exit$24
$LN10@FT_Glyph_T:
; Line 535
	mov	eax, DWORD PTR _clazz$[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN9@FT_Glyph_T
; Line 536
	jmp	$Bad$23
$LN9@FT_Glyph_T:
; Line 541
	push	160					; 000000a0H
	push	0
	lea	ecx, DWORD PTR _dummy$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 542
	push	40					; 00000028H
	push	0
	lea	edx, DWORD PTR _dummy_internal$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 543
	lea	eax, DWORD PTR _dummy_internal$[ebp]
	mov	DWORD PTR _dummy$[ebp+156], eax
; Line 544
	mov	ecx, DWORD PTR _library$[ebp]
	mov	DWORD PTR _dummy$[ebp], ecx
; Line 545
	mov	edx, DWORD PTR _clazz$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _dummy$[ebp+72], eax
; Line 548
	lea	ecx, DWORD PTR _b$[ebp]
	push	ecx
	push	OFFSET _ft_bitmap_glyph_class
	mov	edx, DWORD PTR _library$[ebp]
	push	edx
	call	_ft_new_glyph
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 549
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN8@FT_Glyph_T
; Line 550
	jmp	$Exit$24
$LN8@FT_Glyph_T:
; Line 551
	mov	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _bitmap$[ebp], eax
; Line 555
	cmp	DWORD PTR _origin$[ebp], 0
	je	SHORT $LN7@FT_Glyph_T
; Line 556
	mov	ecx, DWORD PTR _origin$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _glyph$[ebp]
	push	edx
	call	_FT_Glyph_Transform
	add	esp, 12					; 0000000cH
$LN7@FT_Glyph_T:
; Line 562
	mov	esi, esp
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _glyph$[ebp]
	push	ecx
	mov	edx, DWORD PTR _clazz$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 563
	cmp	DWORD PTR _error$[ebp], 0
	jne	SHORT $LN6@FT_Glyph_T
; Line 564
	mov	ecx, DWORD PTR _render_mode$[ebp]
	push	ecx
	lea	edx, DWORD PTR _dummy$[ebp]
	push	edx
	mov	eax, DWORD PTR _glyph$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_FT_Render_Glyph_Internal
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
$LN6@FT_Glyph_T:
; Line 567
	movzx	edx, BYTE PTR _destroy$[ebp]
	test	edx, edx
	jne	SHORT $LN5@FT_Glyph_T
	cmp	DWORD PTR _origin$[ebp], 0
	je	SHORT $LN5@FT_Glyph_T
; Line 572
	mov	eax, DWORD PTR _origin$[ebp]
	mov	ecx, DWORD PTR [eax]
	neg	ecx
	mov	DWORD PTR _v$1[ebp], ecx
; Line 573
	mov	edx, DWORD PTR _origin$[ebp]
	mov	eax, DWORD PTR [edx+4]
	neg	eax
	mov	DWORD PTR _v$1[ebp+4], eax
; Line 574
	lea	ecx, DWORD PTR _v$1[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _glyph$[ebp]
	push	edx
	call	_FT_Glyph_Transform
	add	esp, 12					; 0000000cH
$LN5@FT_Glyph_T:
; Line 578
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@FT_Glyph_T
; Line 579
	jmp	SHORT $Exit$24
$LN4@FT_Glyph_T:
; Line 582
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitmap$[ebp]
	push	ecx
	call	_ft_bitmap_glyph_init
	add	esp, 8
	mov	DWORD PTR _error$[ebp], eax
; Line 583
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN3@FT_Glyph_T
; Line 584
	jmp	SHORT $Exit$24
$LN3@FT_Glyph_T:
; Line 587
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx+16]
	mov	edx, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR [edx+16], ecx
; Line 589
	movzx	eax, BYTE PTR _destroy$[ebp]
	test	eax, eax
	je	SHORT $LN2@FT_Glyph_T
; Line 590
	mov	ecx, DWORD PTR _glyph$[ebp]
	push	ecx
	call	_FT_Done_Glyph
	add	esp, 4
$LN2@FT_Glyph_T:
; Line 592
	mov	edx, DWORD PTR _the_glyph$[ebp]
	mov	eax, DWORD PTR _bitmap$[ebp]
	mov	DWORD PTR [edx], eax
$Exit$24:
; Line 595
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN1@FT_Glyph_T
	cmp	DWORD PTR _bitmap$[ebp], 0
	je	SHORT $LN1@FT_Glyph_T
; Line 596
	mov	ecx, DWORD PTR _bitmap$[ebp]
	push	ecx
	call	_FT_Done_Glyph
	add	esp, 4
$LN1@FT_Glyph_T:
; Line 598
	mov	eax, DWORD PTR _error$[ebp]
	jmp	SHORT $LN15@FT_Glyph_T
$Bad$23:
; Line 601
	push	OFFSET $SG7346
	push	601					; 00000259H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 602
	jmp	SHORT $Exit$24
$LN15@FT_Glyph_T:
; Line 603
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@FT_Glyph_T
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@FT_Glyph_T:
	DD	4
	DD	$LN21@FT_Glyph_T
$LN21@FT_Glyph_T:
	DD	-168					; ffffff58H
	DD	160					; 000000a0H
	DD	$LN17@FT_Glyph_T
	DD	-216					; ffffff28H
	DD	40					; 00000028H
	DD	$LN18@FT_Glyph_T
	DD	-232					; ffffff18H
	DD	4
	DD	$LN19@FT_Glyph_T
	DD	-264					; fffffef8H
	DD	8
	DD	$LN20@FT_Glyph_T
$LN20@FT_Glyph_T:
	DB	118					; 00000076H
	DB	0
$LN19@FT_Glyph_T:
	DB	98					; 00000062H
	DB	0
$LN18@FT_Glyph_T:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	95					; 0000005fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN17@FT_Glyph_T:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
_FT_Glyph_To_Bitmap ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_clazz$ = -4						; size = 4
_glyph$ = 8						; size = 4
_bbox_mode$ = 12					; size = 4
_acbox$ = 16						; size = 4
_FT_Glyph_Get_CBox PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 459
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 463
	cmp	DWORD PTR _acbox$[ebp], 0
	jne	SHORT $LN8@FT_Glyph_G
; Line 464
	jmp	$LN9@FT_Glyph_G
$LN8@FT_Glyph_G:
; Line 466
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [eax], 0
; Line 468
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN6@FT_Glyph_G
	mov	ecx, DWORD PTR _glyph$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN7@FT_Glyph_G
$LN6@FT_Glyph_G:
; Line 469
	jmp	$LN9@FT_Glyph_G
$LN7@FT_Glyph_G:
; Line 471
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _clazz$[ebp], eax
; Line 472
	mov	ecx, DWORD PTR _clazz$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $LN5@FT_Glyph_G
; Line 473
	jmp	$LN9@FT_Glyph_G
$LN5@FT_Glyph_G:
; Line 476
	mov	esi, esp
	mov	edx, DWORD PTR _acbox$[ebp]
	push	edx
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 480
	cmp	DWORD PTR _bbox_mode$[ebp], 1
	je	SHORT $LN3@FT_Glyph_G
	cmp	DWORD PTR _bbox_mode$[ebp], 3
	jne	SHORT $LN4@FT_Glyph_G
$LN3@FT_Glyph_G:
; Line 482
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, -64				; ffffffc0H
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 483
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	and	ecx, -64				; ffffffc0H
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 484
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 63					; 0000003fH
	and	ecx, -64				; ffffffc0H
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 485
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 63					; 0000003fH
	and	ecx, -64				; ffffffc0H
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN4@FT_Glyph_G:
; Line 490
	cmp	DWORD PTR _bbox_mode$[ebp], 2
	je	SHORT $LN1@FT_Glyph_G
	cmp	DWORD PTR _bbox_mode$[ebp], 3
	jne	SHORT $LN9@FT_Glyph_G
$LN1@FT_Glyph_G:
; Line 492
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax]
	sar	ecx, 6
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 493
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sar	ecx, 6
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 494
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sar	ecx, 6
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 495
	mov	eax, DWORD PTR _acbox$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sar	ecx, 6
	mov	edx, DWORD PTR _acbox$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN9@FT_Glyph_G:
; Line 497
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Glyph_Get_CBox ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_clazz$1 = -8						; size = 4
_error$ = -4						; size = 4
_glyph$ = 8						; size = 4
_matrix$ = 12						; size = 4
_delta$ = 16						; size = 4
_FT_Glyph_Transform PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 427
	mov	DWORD PTR _error$[ebp], 0
; Line 430
	cmp	DWORD PTR _glyph$[ebp], 0
	je	SHORT $LN5@FT_Glyph_T
	mov	eax, DWORD PTR _glyph$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN6@FT_Glyph_T
$LN5@FT_Glyph_T:
; Line 431
	push	OFFSET $SG7284
	push	431					; 000001afH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 432
	jmp	SHORT $LN4@FT_Glyph_T
$LN6@FT_Glyph_T:
; Line 434
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _clazz$1[ebp], edx
; Line 437
	mov	eax, DWORD PTR _clazz$1[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN3@FT_Glyph_T
; Line 440
	mov	esi, esp
	mov	ecx, DWORD PTR _delta$[ebp]
	push	ecx
	mov	edx, DWORD PTR _matrix$[ebp]
	push	edx
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$1[ebp]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 443
	cmp	DWORD PTR _matrix$[ebp], 0
	je	SHORT $LN2@FT_Glyph_T
; Line 444
	mov	eax, DWORD PTR _matrix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _glyph$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_FT_Vector_Transform
	add	esp, 8
$LN2@FT_Glyph_T:
; Line 446
	jmp	SHORT $LN4@FT_Glyph_T
$LN3@FT_Glyph_T:
; Line 447
	push	OFFSET $SG7290
	push	447					; 000001bfH
	push	18					; 00000012H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 18					; 00000012H
	mov	DWORD PTR _error$[ebp], eax
$LN4@FT_Glyph_T:
; Line 449
	mov	eax, DWORD PTR _error$[ebp]
; Line 450
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FT_Glyph_Transform ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_clazz$ = -20						; size = 4
_error$ = -16						; size = 4
_copy$ = -8						; size = 4
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_FT_Glyph_Copy PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 317
	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN7@FT_Glyph_C
	cmp	DWORD PTR _source$[ebp], 0
	je	SHORT $LN7@FT_Glyph_C
	mov	eax, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN8@FT_Glyph_C
$LN7@FT_Glyph_C:
; Line 319
	push	OFFSET $SG7238
	push	319					; 0000013fH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 320
	jmp	$Exit$14
$LN8@FT_Glyph_C:
; Line 323
	mov	ecx, DWORD PTR _target$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 325
	cmp	DWORD PTR _source$[ebp], 0
	je	SHORT $LN5@FT_Glyph_C
	mov	edx, DWORD PTR _source$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN6@FT_Glyph_C
$LN5@FT_Glyph_C:
; Line 327
	push	OFFSET $SG7243
	push	327					; 00000147H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	mov	DWORD PTR _error$[ebp], eax
; Line 328
	jmp	$Exit$14
$LN6@FT_Glyph_C:
; Line 331
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _clazz$[ebp], ecx
; Line 332
	lea	edx, DWORD PTR _copy$[ebp]
	push	edx
	mov	eax, DWORD PTR _clazz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ft_new_glyph
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 333
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@FT_Glyph_C
; Line 334
	jmp	SHORT $Exit$14
$LN4@FT_Glyph_C:
; Line 336
	mov	eax, DWORD PTR _source$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [eax+16]
	mov	eax, DWORD PTR _copy$[ebp]
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+16], edx
; Line 337
	mov	ecx, DWORD PTR _copy$[ebp]
	mov	edx, DWORD PTR _source$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
; Line 339
	mov	ecx, DWORD PTR _clazz$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN3@FT_Glyph_C
; Line 340
	mov	esi, esp
	mov	edx, DWORD PTR _copy$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
$LN3@FT_Glyph_C:
; Line 342
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@FT_Glyph_C
; Line 343
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	call	_FT_Done_Glyph
	add	esp, 4
; Line 344
	jmp	SHORT $Exit$14
$LN2@FT_Glyph_C:
; Line 345
	mov	ecx, DWORD PTR _target$[ebp]
	mov	edx, DWORD PTR _copy$[ebp]
	mov	DWORD PTR [ecx], edx
$Exit$14:
; Line 348
	mov	eax, DWORD PTR _error$[ebp]
; Line 349
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@FT_Glyph_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@FT_Glyph_C:
	DD	1
	DD	$LN12@FT_Glyph_C
$LN12@FT_Glyph_C:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN11@FT_Glyph_C
$LN11@FT_Glyph_C:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	121					; 00000079H
	DB	0
_FT_Glyph_Copy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_render$1 = -28						; size = 4
_clazz$ = -24						; size = 4
_glyph$ = -16						; size = 4
_error$ = -8						; size = 4
_library$ = -4						; size = 4
_slot$ = 8						; size = 4
_aglyph$ = 12						; size = 4
_FT_Get_Glyph PROC
; File d:\mozilla\modules\freetype2\src\base\ftglyph.c
; Line 357
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 362
	mov	DWORD PTR _clazz$[ebp], 0
; Line 365
	cmp	DWORD PTR _slot$[ebp], 0
	jne	SHORT $LN11@FT_Get_Gly
; Line 366
	push	OFFSET $SG7259
	push	366					; 0000016eH
	push	37					; 00000025H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 37					; 00000025H
	jmp	$LN12@FT_Get_Gly
$LN11@FT_Get_Gly:
; Line 368
	mov	eax, DWORD PTR _slot$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _library$[ebp], ecx
; Line 370
	cmp	DWORD PTR _aglyph$[ebp], 0
	jne	SHORT $LN10@FT_Get_Gly
; Line 371
	push	OFFSET $SG7261
	push	371					; 00000173H
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN12@FT_Get_Gly
$LN10@FT_Get_Gly:
; Line 374
	mov	edx, DWORD PTR _slot$[ebp]
	cmp	DWORD PTR [edx+72], 1651078259		; 62697473H
	jne	SHORT $LN9@FT_Get_Gly
; Line 375
	mov	DWORD PTR _clazz$[ebp], OFFSET _ft_bitmap_glyph_class
	jmp	SHORT $LN8@FT_Get_Gly
$LN9@FT_Get_Gly:
; Line 378
	mov	eax, DWORD PTR _slot$[ebp]
	cmp	DWORD PTR [eax+72], 1869968492		; 6f75746cH
	jne	SHORT $LN7@FT_Get_Gly
; Line 379
	mov	DWORD PTR _clazz$[ebp], OFFSET _ft_outline_glyph_class
; Line 381
	jmp	SHORT $LN8@FT_Get_Gly
$LN7@FT_Get_Gly:
; Line 384
	push	0
	mov	ecx, DWORD PTR _slot$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	eax, DWORD PTR _library$[ebp]
	push	eax
	call	_FT_Lookup_Renderer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _render$1[ebp], eax
; Line 387
	cmp	DWORD PTR _render$1[ebp], 0
	je	SHORT $LN8@FT_Get_Gly
; Line 388
	mov	ecx, DWORD PTR _render$1[ebp]
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _clazz$[ebp], ecx
$LN8@FT_Get_Gly:
; Line 391
	cmp	DWORD PTR _clazz$[ebp], 0
	jne	SHORT $LN4@FT_Get_Gly
; Line 393
	push	OFFSET $SG7269
	push	393					; 00000189H
	push	18					; 00000012H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 18					; 00000012H
	mov	DWORD PTR _error$[ebp], eax
; Line 394
	jmp	SHORT $Exit$17
$LN4@FT_Get_Gly:
; Line 398
	lea	edx, DWORD PTR _glyph$[ebp]
	push	edx
	mov	eax, DWORD PTR _clazz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _library$[ebp]
	push	ecx
	call	_ft_new_glyph
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$[ebp], eax
; Line 399
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN3@FT_Get_Gly
; Line 400
	jmp	SHORT $Exit$17
$LN3@FT_Get_Gly:
; Line 403
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+64]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 404
	mov	edx, DWORD PTR _slot$[ebp]
	mov	eax, DWORD PTR [edx+68]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 407
	mov	esi, esp
	mov	edx, DWORD PTR _slot$[ebp]
	push	edx
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _clazz$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _error$[ebp], eax
; Line 410
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN2@FT_Get_Gly
; Line 411
	mov	eax, DWORD PTR _glyph$[ebp]
	push	eax
	call	_FT_Done_Glyph
	add	esp, 4
; Line 412
	jmp	SHORT $Exit$17
$LN2@FT_Get_Gly:
; Line 413
	mov	ecx, DWORD PTR _aglyph$[ebp]
	mov	edx, DWORD PTR _glyph$[ebp]
	mov	DWORD PTR [ecx], edx
$Exit$17:
; Line 416
	mov	eax, DWORD PTR _error$[ebp]
$LN12@FT_Get_Gly:
; Line 417
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@FT_Get_Gly
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@FT_Get_Gly:
	DD	1
	DD	$LN15@FT_Get_Gly
$LN15@FT_Get_Gly:
	DD	-16					; fffffff0H
	DD	4
	DD	$LN14@FT_Get_Gly
$LN14@FT_Get_Gly:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	0
_FT_Get_Glyph ENDP
_TEXT	ENDS
END

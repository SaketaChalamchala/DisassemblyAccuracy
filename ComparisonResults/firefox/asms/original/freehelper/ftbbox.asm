; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\modules\freetype2\src\base\ftbbox.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_DATA	SEGMENT
$SG7254	DB	'..\..\..\src\base\ftbbox.c', 00H
	ORG $+1
$SG7256	DB	'..\..\..\src\base\ftbbox.c', 00H
_DATA	ENDS
CONST	SEGMENT
_bbox_interface DD FLAT:_BBox_Move_To
	DD	FLAT:_BBox_Line_To
	DD	FLAT:_BBox_Conic_To
	DD	FLAT:_BBox_Cubic_To
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_FT_Outline_Get_BBox
EXTRN	_FT_MulDiv:PROC
EXTRN	_FT_Throw:PROC
EXTRN	_FT_Outline_Decompose:PROC
EXTRN	_FT_MSB:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_control1$ = 8						; size = 4
_control2$ = 12						; size = 4
_to$ = 16						; size = 4
_user$ = 20						; size = 4
_BBox_Cubic_To PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 394
	push	ebp
	mov	ebp, esp
; Line 400
	mov	eax, DWORD PTR _control1$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jl	SHORT $LN5@BBox_Cubic
	mov	eax, DWORD PTR _control1$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+16]
	jg	SHORT $LN5@BBox_Cubic
	mov	eax, DWORD PTR _control2$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jl	SHORT $LN5@BBox_Cubic
	mov	eax, DWORD PTR _control2$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+16]
	jle	SHORT $LN6@BBox_Cubic
$LN5@BBox_Cubic:
; Line 406
	mov	eax, DWORD PTR _user$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _user$[ebp]
	add	ecx, 8
	push	ecx
	mov	edx, DWORD PTR _to$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _control2$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _control1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_BBox_Cubic_Check
	add	esp, 24					; 00000018H
$LN6@BBox_Cubic:
; Line 409
	mov	ecx, DWORD PTR _control1$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+12]
	jl	SHORT $LN2@BBox_Cubic
	mov	ecx, DWORD PTR _control1$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+20]
	jg	SHORT $LN2@BBox_Cubic
	mov	ecx, DWORD PTR _control2$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+12]
	jl	SHORT $LN2@BBox_Cubic
	mov	ecx, DWORD PTR _control2$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx+4]
	cmp	eax, DWORD PTR [edx+20]
	jle	SHORT $LN3@BBox_Cubic
$LN2@BBox_Cubic:
; Line 415
	mov	ecx, DWORD PTR _user$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _user$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _control2$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _control1$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_BBox_Cubic_Check
	add	esp, 24					; 00000018H
$LN3@BBox_Cubic:
; Line 417
	mov	edx, DWORD PTR _to$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _user$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
; Line 419
	xor	eax, eax
; Line 420
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_BBox_Cubic_To ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_p3$ = 16						; size = 4
_p4$ = 20						; size = 4
_min$ = 24						; size = 4
_max$ = 28						; size = 4
_BBox_Cubic_Check PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 346
	push	ebp
	mov	ebp, esp
; Line 352
	mov	eax, DWORD PTR _max$[ebp]
	mov	ecx, DWORD PTR _p2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jg	SHORT $LN3@BBox_Cubic
	mov	edx, DWORD PTR _max$[ebp]
	mov	eax, DWORD PTR _p3$[ebp]
	cmp	eax, DWORD PTR [edx]
	jle	SHORT $LN4@BBox_Cubic
$LN3@BBox_Cubic:
; Line 353
	mov	ecx, DWORD PTR _max$[ebp]
	mov	edx, DWORD PTR _p4$[ebp]
	sub	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _max$[ebp]
	mov	ecx, DWORD PTR _p3$[ebp]
	sub	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _max$[ebp]
	mov	eax, DWORD PTR _p2$[ebp]
	sub	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _max$[ebp]
	mov	edx, DWORD PTR _p1$[ebp]
	sub	edx, DWORD PTR [ecx]
	push	edx
	call	_cubic_peak
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _max$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _max$[ebp]
	mov	DWORD PTR [edx], eax
$LN4@BBox_Cubic:
; Line 356
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR _p2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN1@BBox_Cubic
	mov	edx, DWORD PTR _min$[ebp]
	mov	eax, DWORD PTR _p3$[ebp]
	cmp	eax, DWORD PTR [edx]
	jge	SHORT $LN5@BBox_Cubic
$LN1@BBox_Cubic:
; Line 357
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _p4$[ebp]
	push	edx
	mov	eax, DWORD PTR _min$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _p3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _min$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, DWORD PTR _p1$[ebp]
	push	edx
	call	_cubic_peak
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, eax
	mov	eax, DWORD PTR _min$[ebp]
	mov	DWORD PTR [eax], edx
$LN5@BBox_Cubic:
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_BBox_Cubic_Check ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -24						; size = 4
tv74 = -20						; size = 4
tv70 = -16						; size = 4
tv67 = -12						; size = 4
_shift$ = -8						; size = 4
_peak$ = -4						; size = 4
_q1$ = 8						; size = 4
_q2$ = 12						; size = 4
_q3$ = 16						; size = 4
_q4$ = 20						; size = 4
_cubic_peak PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 255
	mov	DWORD PTR _peak$[ebp], 0
; Line 268
	cmp	DWORD PTR _q1$[ebp], 0
	jge	SHORT $LN15@cubic_peak
	mov	eax, DWORD PTR _q1$[ebp]
	neg	eax
	mov	DWORD PTR tv67[ebp], eax
	jmp	SHORT $LN16@cubic_peak
$LN15@cubic_peak:
	mov	ecx, DWORD PTR _q1$[ebp]
	mov	DWORD PTR tv67[ebp], ecx
$LN16@cubic_peak:
	cmp	DWORD PTR _q2$[ebp], 0
	jge	SHORT $LN17@cubic_peak
	mov	edx, DWORD PTR _q2$[ebp]
	neg	edx
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN18@cubic_peak
$LN17@cubic_peak:
	mov	eax, DWORD PTR _q2$[ebp]
	mov	DWORD PTR tv70[ebp], eax
$LN18@cubic_peak:
	cmp	DWORD PTR _q3$[ebp], 0
	jge	SHORT $LN19@cubic_peak
	mov	ecx, DWORD PTR _q3$[ebp]
	neg	ecx
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN20@cubic_peak
$LN19@cubic_peak:
	mov	edx, DWORD PTR _q3$[ebp]
	mov	DWORD PTR tv74[ebp], edx
$LN20@cubic_peak:
	cmp	DWORD PTR _q4$[ebp], 0
	jge	SHORT $LN21@cubic_peak
	mov	eax, DWORD PTR _q4$[ebp]
	neg	eax
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN22@cubic_peak
$LN21@cubic_peak:
	mov	ecx, DWORD PTR _q4$[ebp]
	mov	DWORD PTR tv78[ebp], ecx
$LN22@cubic_peak:
	mov	edx, DWORD PTR tv67[ebp]
	or	edx, DWORD PTR tv70[ebp]
	or	edx, DWORD PTR tv74[ebp]
	or	edx, DWORD PTR tv78[ebp]
	push	edx
	call	_FT_MSB
	add	esp, 4
	mov	ecx, 27					; 0000001bH
	sub	ecx, eax
	mov	DWORD PTR _shift$[ebp], ecx
; Line 270
	cmp	DWORD PTR _shift$[ebp], 0
	jle	SHORT $LN12@cubic_peak
; Line 273
	cmp	DWORD PTR _shift$[ebp], 2
	jle	SHORT $LN11@cubic_peak
; Line 274
	mov	DWORD PTR _shift$[ebp], 2
$LN11@cubic_peak:
; Line 276
	mov	edx, DWORD PTR _q1$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	edx, cl
	mov	DWORD PTR _q1$[ebp], edx
; Line 277
	mov	eax, DWORD PTR _q2$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	eax, cl
	mov	DWORD PTR _q2$[ebp], eax
; Line 278
	mov	edx, DWORD PTR _q3$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	edx, cl
	mov	DWORD PTR _q3$[ebp], edx
; Line 279
	mov	eax, DWORD PTR _q4$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	shl	eax, cl
	mov	DWORD PTR _q4$[ebp], eax
; Line 281
	jmp	SHORT $LN9@cubic_peak
$LN12@cubic_peak:
; Line 283
	mov	ecx, DWORD PTR _shift$[ebp]
	neg	ecx
	mov	edx, DWORD PTR _q1$[ebp]
	sar	edx, cl
	mov	DWORD PTR _q1$[ebp], edx
; Line 284
	mov	ecx, DWORD PTR _shift$[ebp]
	neg	ecx
	mov	eax, DWORD PTR _q2$[ebp]
	sar	eax, cl
	mov	DWORD PTR _q2$[ebp], eax
; Line 285
	mov	ecx, DWORD PTR _shift$[ebp]
	neg	ecx
	mov	edx, DWORD PTR _q3$[ebp]
	sar	edx, cl
	mov	DWORD PTR _q3$[ebp], edx
; Line 286
	mov	ecx, DWORD PTR _shift$[ebp]
	neg	ecx
	mov	eax, DWORD PTR _q4$[ebp]
	sar	eax, cl
	mov	DWORD PTR _q4$[ebp], eax
$LN9@cubic_peak:
; Line 291
	cmp	DWORD PTR _q2$[ebp], 0
	jg	SHORT $LN7@cubic_peak
	cmp	DWORD PTR _q3$[ebp], 0
	jle	$LN8@cubic_peak
$LN7@cubic_peak:
; Line 294
	mov	ecx, DWORD PTR _q1$[ebp]
	add	ecx, DWORD PTR _q2$[ebp]
	mov	edx, DWORD PTR _q3$[ebp]
	add	edx, DWORD PTR _q4$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN6@cubic_peak
; Line 296
	mov	eax, DWORD PTR _q4$[ebp]
	add	eax, DWORD PTR _q3$[ebp]
	mov	DWORD PTR _q4$[ebp], eax
; Line 297
	mov	ecx, DWORD PTR _q3$[ebp]
	add	ecx, DWORD PTR _q2$[ebp]
	mov	DWORD PTR _q3$[ebp], ecx
; Line 298
	mov	edx, DWORD PTR _q2$[ebp]
	add	edx, DWORD PTR _q1$[ebp]
	mov	DWORD PTR _q2$[ebp], edx
; Line 299
	mov	eax, DWORD PTR _q4$[ebp]
	add	eax, DWORD PTR _q3$[ebp]
	mov	DWORD PTR _q4$[ebp], eax
; Line 300
	mov	ecx, DWORD PTR _q3$[ebp]
	add	ecx, DWORD PTR _q2$[ebp]
	mov	DWORD PTR _q3$[ebp], ecx
; Line 301
	mov	eax, DWORD PTR _q4$[ebp]
	add	eax, DWORD PTR _q3$[ebp]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _q4$[ebp], eax
; Line 302
	mov	eax, DWORD PTR _q3$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _q3$[ebp], eax
; Line 303
	mov	eax, DWORD PTR _q2$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _q2$[ebp], eax
; Line 305
	jmp	SHORT $LN5@cubic_peak
$LN6@cubic_peak:
; Line 307
	mov	edx, DWORD PTR _q1$[ebp]
	add	edx, DWORD PTR _q2$[ebp]
	mov	DWORD PTR _q1$[ebp], edx
; Line 308
	mov	eax, DWORD PTR _q2$[ebp]
	add	eax, DWORD PTR _q3$[ebp]
	mov	DWORD PTR _q2$[ebp], eax
; Line 309
	mov	ecx, DWORD PTR _q3$[ebp]
	add	ecx, DWORD PTR _q4$[ebp]
	mov	DWORD PTR _q3$[ebp], ecx
; Line 310
	mov	edx, DWORD PTR _q1$[ebp]
	add	edx, DWORD PTR _q2$[ebp]
	mov	DWORD PTR _q1$[ebp], edx
; Line 311
	mov	eax, DWORD PTR _q2$[ebp]
	add	eax, DWORD PTR _q3$[ebp]
	mov	DWORD PTR _q2$[ebp], eax
; Line 312
	mov	eax, DWORD PTR _q1$[ebp]
	add	eax, DWORD PTR _q2$[ebp]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR _q1$[ebp], eax
; Line 313
	mov	eax, DWORD PTR _q2$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	mov	DWORD PTR _q2$[ebp], eax
; Line 314
	mov	eax, DWORD PTR _q3$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _q3$[ebp], eax
$LN5@cubic_peak:
; Line 318
	mov	ecx, DWORD PTR _q1$[ebp]
	cmp	ecx, DWORD PTR _q2$[ebp]
	jne	SHORT $LN4@cubic_peak
	mov	edx, DWORD PTR _q1$[ebp]
	cmp	edx, DWORD PTR _q3$[ebp]
	jl	SHORT $LN4@cubic_peak
; Line 320
	mov	eax, DWORD PTR _q1$[ebp]
	mov	DWORD PTR _peak$[ebp], eax
; Line 321
	jmp	SHORT $LN8@cubic_peak
$LN4@cubic_peak:
; Line 323
	mov	ecx, DWORD PTR _q3$[ebp]
	cmp	ecx, DWORD PTR _q4$[ebp]
	jne	SHORT $LN3@cubic_peak
	mov	edx, DWORD PTR _q2$[ebp]
	cmp	edx, DWORD PTR _q4$[ebp]
	jg	SHORT $LN3@cubic_peak
; Line 325
	mov	eax, DWORD PTR _q4$[ebp]
	mov	DWORD PTR _peak$[ebp], eax
; Line 326
	jmp	SHORT $LN8@cubic_peak
$LN3@cubic_peak:
; Line 328
	jmp	$LN9@cubic_peak
$LN8@cubic_peak:
; Line 330
	cmp	DWORD PTR _shift$[ebp], 0
	jle	SHORT $LN2@cubic_peak
; Line 331
	mov	edx, DWORD PTR _peak$[ebp]
	mov	ecx, DWORD PTR _shift$[ebp]
	sar	edx, cl
	mov	DWORD PTR _peak$[ebp], edx
; Line 332
	jmp	SHORT $LN1@cubic_peak
$LN2@cubic_peak:
; Line 333
	mov	ecx, DWORD PTR _shift$[ebp]
	neg	ecx
	mov	eax, DWORD PTR _peak$[ebp]
	shl	eax, cl
	mov	DWORD PTR _peak$[ebp], eax
$LN1@cubic_peak:
; Line 335
	mov	eax, DWORD PTR _peak$[ebp]
; Line 336
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cubic_peak ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_control$ = 8						; size = 4
_to$ = 12						; size = 4
_user$ = 16						; size = 4
_BBox_Conic_To PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 201
	push	ebp
	mov	ebp, esp
$LN11@BBox_Conic:
; Line 203
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN8@BBox_Conic
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
$LN8@BBox_Conic:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+16]
	jle	SHORT $LN7@BBox_Conic
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx
$LN7@BBox_Conic:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+12]
	jge	SHORT $LN6@BBox_Conic
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], edx
$LN6@BBox_Conic:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+20]
	jle	SHORT $LN10@BBox_Conic
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20], edx
$LN10@BBox_Conic:
	xor	eax, eax
	jne	SHORT $LN11@BBox_Conic
; Line 205
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx+8]
	jl	SHORT $LN3@BBox_Conic
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR _user$[ebp]
	mov	eax, DWORD PTR [ecx]
	cmp	eax, DWORD PTR [edx+16]
	jle	SHORT $LN4@BBox_Conic
$LN3@BBox_Conic:
; Line 210
	mov	ecx, DWORD PTR _user$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _user$[ebp]
	add	edx, 8
	push	edx
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _control$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_BBox_Conic_Check
	add	esp, 20					; 00000014H
$LN4@BBox_Conic:
; Line 212
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+12]
	jl	SHORT $LN1@BBox_Conic
	mov	eax, DWORD PTR _control$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+20]
	jle	SHORT $LN2@BBox_Conic
$LN1@BBox_Conic:
; Line 217
	mov	eax, DWORD PTR _user$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _user$[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	mov	edx, DWORD PTR _to$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _control$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_BBox_Conic_Check
	add	esp, 20					; 00000014H
$LN2@BBox_Conic:
; Line 219
	mov	edx, DWORD PTR _to$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _user$[ebp]
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR [edx+4], ecx
; Line 221
	xor	eax, eax
; Line 222
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_BBox_Conic_To ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_y1$ = 8						; size = 4
_y2$ = 12						; size = 4
_y3$ = 16						; size = 4
_min$ = 20						; size = 4
_max$ = 24						; size = 4
_BBox_Conic_Check PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 154
	push	ebp
	mov	ebp, esp
; Line 160
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y2$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 161
	mov	ecx, DWORD PTR _y3$[ebp]
	sub	ecx, DWORD PTR _y2$[ebp]
	mov	DWORD PTR _y3$[ebp], ecx
; Line 162
	mov	edx, DWORD PTR _y1$[ebp]
	add	edx, DWORD PTR _y3$[ebp]
	push	edx
	mov	eax, DWORD PTR _y3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	call	_FT_MulDiv
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _y2$[ebp]
	mov	DWORD PTR _y2$[ebp], eax
; Line 164
	mov	edx, DWORD PTR _min$[ebp]
	mov	eax, DWORD PTR _y2$[ebp]
	cmp	eax, DWORD PTR [edx]
	jge	SHORT $LN2@BBox_Conic
; Line 165
	mov	ecx, DWORD PTR _min$[ebp]
	mov	edx, DWORD PTR _y2$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@BBox_Conic:
; Line 166
	mov	eax, DWORD PTR _max$[ebp]
	mov	ecx, DWORD PTR _y2$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jle	SHORT $LN3@BBox_Conic
; Line 167
	mov	edx, DWORD PTR _max$[ebp]
	mov	eax, DWORD PTR _y2$[ebp]
	mov	DWORD PTR [edx], eax
$LN3@BBox_Conic:
; Line 168
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_BBox_Conic_Check ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_to$ = 8						; size = 4
_user$ = 12						; size = 4
_BBox_Line_To PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 119
	push	ebp
	mov	ebp, esp
; Line 120
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _user$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 122
	xor	eax, eax
; Line 123
	pop	ebp
	ret	0
_BBox_Line_To ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_to$ = 8						; size = 4
_user$ = 12						; size = 4
_BBox_Move_To PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 87
	push	ebp
	mov	ebp, esp
$LN7@BBox_Move_:
; Line 88
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+8]
	jge	SHORT $LN4@BBox_Move_
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
$LN4@BBox_Move_:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx+16]
	jle	SHORT $LN3@BBox_Move_
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx
$LN3@BBox_Move_:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+12]
	jge	SHORT $LN2@BBox_Move_
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+12], edx
$LN2@BBox_Move_:
	mov	eax, DWORD PTR _to$[ebp]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+20]
	jle	SHORT $LN6@BBox_Move_
	mov	eax, DWORD PTR _user$[ebp]
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+20], edx
$LN6@BBox_Move_:
	xor	eax, eax
	jne	SHORT $LN7@BBox_Move_
; Line 90
	mov	ecx, DWORD PTR _to$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _user$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
; Line 92
	xor	eax, eax
; Line 93
	pop	ebp
	ret	0
_BBox_Move_To ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_user$1 = -92						; size = 24
_error$2 = -64						; size = 4
_n$ = -60						; size = 2
_vec$ = -56						; size = 4
_bbox$ = -48						; size = 16
_cbox$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_outline$ = 8						; size = 4
_abbox$ = 12						; size = 4
_FT_Outline_Get_BBox PROC
; File d:\mozilla\modules\freetype2\src\base\ftbbox.c
; Line 437
	push	ebp
	mov	ebp, esp
	sub	esp, 96					; 00000060H
	push	edi
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 439
	mov	DWORD PTR _cbox$[ebp], 2147483647	; 7fffffffH
	mov	DWORD PTR _cbox$[ebp+4], 2147483647	; 7fffffffH
	mov	DWORD PTR _cbox$[ebp+8], -2147483647	; 80000001H
	mov	DWORD PTR _cbox$[ebp+12], -2147483647	; 80000001H
; Line 441
	mov	DWORD PTR _bbox$[ebp], 2147483647	; 7fffffffH
	mov	DWORD PTR _bbox$[ebp+4], 2147483647	; 7fffffffH
	mov	DWORD PTR _bbox$[ebp+8], -2147483647	; 80000001H
	mov	DWORD PTR _bbox$[ebp+12], -2147483647	; 80000001H
; Line 446
	cmp	DWORD PTR _abbox$[ebp], 0
	jne	SHORT $LN26@FT_Outline
; Line 447
	push	OFFSET $SG7254
	push	447					; 000001bfH
	push	6
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 6
	jmp	$LN27@FT_Outline
$LN26@FT_Outline:
; Line 449
	cmp	DWORD PTR _outline$[ebp], 0
	jne	SHORT $LN25@FT_Outline
; Line 450
	push	OFFSET $SG7256
	push	450					; 000001c2H
	push	20					; 00000014H
	call	_FT_Throw
	add	esp, 12					; 0000000cH
	or	eax, 20					; 00000014H
	jmp	$LN27@FT_Outline
$LN25@FT_Outline:
; Line 453
	mov	eax, DWORD PTR _outline$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	test	ecx, ecx
	je	SHORT $LN23@FT_Outline
	mov	edx, DWORD PTR _outline$[ebp]
	movsx	eax, WORD PTR [edx]
	test	eax, eax
	jg	SHORT $LN24@FT_Outline
$LN23@FT_Outline:
; Line 455
	mov	ecx, DWORD PTR _abbox$[ebp]
	mov	DWORD PTR [ecx+8], 0
	mov	edx, DWORD PTR _abbox$[ebp]
	mov	DWORD PTR [edx], 0
; Line 456
	mov	eax, DWORD PTR _abbox$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _abbox$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 457
	xor	eax, eax
	jmp	$LN27@FT_Outline
$LN24@FT_Outline:
; Line 464
	mov	edx, DWORD PTR _outline$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _vec$[ebp], eax
; Line 466
	xor	ecx, ecx
	mov	WORD PTR _n$[ebp], cx
	jmp	SHORT $LN22@FT_Outline
$LN21@FT_Outline:
	mov	dx, WORD PTR _n$[ebp]
	add	dx, 1
	mov	WORD PTR _n$[ebp], dx
$LN22@FT_Outline:
	movzx	eax, WORD PTR _n$[ebp]
	mov	ecx, DWORD PTR _outline$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	cmp	eax, edx
	jge	$LN20@FT_Outline
$LN19@FT_Outline:
; Line 468
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _cbox$[ebp]
	jge	SHORT $LN16@FT_Outline
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _cbox$[ebp], eax
$LN16@FT_Outline:
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _cbox$[ebp+8]
	jle	SHORT $LN15@FT_Outline
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _cbox$[ebp+8], ecx
$LN15@FT_Outline:
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _cbox$[ebp+4]
	jge	SHORT $LN14@FT_Outline
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _cbox$[ebp+4], edx
$LN14@FT_Outline:
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _cbox$[ebp+12]
	jle	SHORT $LN18@FT_Outline
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _cbox$[ebp+12], eax
$LN18@FT_Outline:
	xor	ecx, ecx
	jne	SHORT $LN19@FT_Outline
; Line 470
	movzx	edx, WORD PTR _n$[ebp]
	mov	eax, DWORD PTR _outline$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	movsx	edx, BYTE PTR [ecx+edx]
	and	edx, 3
	cmp	edx, 1
	jne	SHORT $LN12@FT_Outline
$LN11@FT_Outline:
; Line 471
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _bbox$[ebp]
	jge	SHORT $LN8@FT_Outline
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR _bbox$[ebp], eax
$LN8@FT_Outline:
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _bbox$[ebp+8]
	jle	SHORT $LN7@FT_Outline
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _bbox$[ebp+8], ecx
$LN7@FT_Outline:
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR _bbox$[ebp+4]
	jge	SHORT $LN6@FT_Outline
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _bbox$[ebp+4], edx
$LN6@FT_Outline:
	mov	eax, DWORD PTR _vec$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _bbox$[ebp+12]
	jle	SHORT $LN10@FT_Outline
	mov	edx, DWORD PTR _vec$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _bbox$[ebp+12], eax
$LN10@FT_Outline:
	xor	ecx, ecx
	jne	SHORT $LN11@FT_Outline
$LN12@FT_Outline:
; Line 473
	mov	edx, DWORD PTR _vec$[ebp]
	add	edx, 8
	mov	DWORD PTR _vec$[ebp], edx
; Line 474
	jmp	$LN21@FT_Outline
$LN20@FT_Outline:
; Line 478
	mov	eax, DWORD PTR _cbox$[ebp]
	cmp	eax, DWORD PTR _bbox$[ebp]
	jl	SHORT $LN3@FT_Outline
	mov	ecx, DWORD PTR _cbox$[ebp+8]
	cmp	ecx, DWORD PTR _bbox$[ebp+8]
	jg	SHORT $LN3@FT_Outline
	mov	edx, DWORD PTR _cbox$[ebp+4]
	cmp	edx, DWORD PTR _bbox$[ebp+4]
	jl	SHORT $LN3@FT_Outline
	mov	eax, DWORD PTR _cbox$[ebp+12]
	cmp	eax, DWORD PTR _bbox$[ebp+12]
	jle	SHORT $LN4@FT_Outline
$LN3@FT_Outline:
; Line 491
	mov	ecx, DWORD PTR _bbox$[ebp]
	mov	DWORD PTR _user$1[ebp+8], ecx
	mov	edx, DWORD PTR _bbox$[ebp+4]
	mov	DWORD PTR _user$1[ebp+12], edx
	mov	eax, DWORD PTR _bbox$[ebp+8]
	mov	DWORD PTR _user$1[ebp+16], eax
	mov	ecx, DWORD PTR _bbox$[ebp+12]
	mov	DWORD PTR _user$1[ebp+20], ecx
; Line 493
	lea	edx, DWORD PTR _user$1[ebp]
	push	edx
	push	OFFSET _bbox_interface
	mov	eax, DWORD PTR _outline$[ebp]
	push	eax
	call	_FT_Outline_Decompose
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _error$2[ebp], eax
; Line 494
	cmp	DWORD PTR _error$2[ebp], 0
	je	SHORT $LN2@FT_Outline
; Line 495
	mov	eax, DWORD PTR _error$2[ebp]
	jmp	SHORT $LN27@FT_Outline
$LN2@FT_Outline:
; Line 497
	mov	ecx, DWORD PTR _abbox$[ebp]
	mov	edx, DWORD PTR _user$1[ebp+8]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _user$1[ebp+12]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _user$1[ebp+16]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _user$1[ebp+20]
	mov	DWORD PTR [ecx+12], eax
; Line 499
	jmp	SHORT $LN1@FT_Outline
$LN4@FT_Outline:
; Line 500
	mov	ecx, DWORD PTR _abbox$[ebp]
	mov	edx, DWORD PTR _bbox$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _bbox$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _bbox$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _bbox$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
$LN1@FT_Outline:
; Line 502
	xor	eax, eax
$LN27@FT_Outline:
; Line 503
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@FT_Outline
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN33@FT_Outline:
	DD	3
	DD	$LN32@FT_Outline
$LN32@FT_Outline:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN29@FT_Outline
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN30@FT_Outline
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN31@FT_Outline
$LN31@FT_Outline:
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN30@FT_Outline:
	DB	98					; 00000062H
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	0
$LN29@FT_Outline:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	0
_FT_Outline_Get_BBox ENDP
_TEXT	ENDS
END

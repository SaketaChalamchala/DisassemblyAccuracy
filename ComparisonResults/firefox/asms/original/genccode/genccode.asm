; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\genccode\genccode.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08LKDFMABF@assembly?$AA@			; `string'
PUBLIC	??_C@_08BABJIOEM@filename?$AA@			; `string'
PUBLIC	??_C@_0L@EDIMHJLF@match?9arch?$AA@		; `string'
PUBLIC	??_C@_06IEOJBDIK@object?$AA@			; `string'
PUBLIC	??_C@_0L@BPGLNOGK@entrypoint?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
_DATA	SEGMENT
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04MEMAJGDJ@name?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06eH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@BPGLNOGK@entrypoint?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	065H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_06IEOJBDIK@object?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@EDIMHJLF@match?9arch?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06dH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08BABJIOEM@filename?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	066H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08LKDFMABF@assembly?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	061H
	DB	01H
	DB	00H
	ORG $+1
_DATA	ENDS
;	COMDAT ??_C@_08LKDFMABF@assembly?$AA@
CONST	SEGMENT
??_C@_08LKDFMABF@assembly?$AA@ DB 'assembly', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BABJIOEM@filename?$AA@
CONST	SEGMENT
??_C@_08BABJIOEM@filename?$AA@ DB 'filename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EDIMHJLF@match?9arch?$AA@
CONST	SEGMENT
??_C@_0L@EDIMHJLF@match?9arch?$AA@ DB 'match-arch', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object?$AA@
CONST	SEGMENT
??_C@_06IEOJBDIK@object?$AA@ DB 'object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BPGLNOGK@entrypoint?$AA@
CONST	SEGMENT
??_C@_0L@BPGLNOGK@entrypoint?$AA@ DB 'entrypoint', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
PUBLIC	??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@ ; `string'
PUBLIC	??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@ ; `string'
PUBLIC	??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@ ; `string'
PUBLIC	??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@ ; `string'
PUBLIC	??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	_main
EXTRN	_writeObjectCode:PROC
EXTRN	_writeAssemblyCode:PROC
EXTRN	_writeCCode:PROC
EXTRN	_getLongPathname:PROC
EXTRN	_checkAssemblyHeaderName:PROC
EXTRN	_printAssemblyHeadersToStdErr:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@
; File d:\mozilla\intl\icu\source\tools\genccode\genccode.c
CONST	SEGMENT
??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@ DB 'generating '
	DB	'C code for %s', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@ DB 'generat'
	DB	'ing object code for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@
CONST	SEGMENT
??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@ DB 'A'
	DB	'ssembly type "%s" is unknown.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@
CONST	SEGMENT
??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@ DB 'generati'
	DB	'ng assembly code for %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@
CONST	SEGMENT
??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@ DB 09H, '-'
	DB	'f or --filename    Specify an alternate base filename. (defau'
	DB	'lt: symbolname_typ)', 0aH, 09H, '-a or --assembly    Create a'
	DB	'ssembly file. (possible values are: ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@
CONST	SEGMENT
??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@ DB 09H
	DB	'-o or --object      write a .obj file instead of .c', 0aH, 09H
	DB	'-m or --match-arch file.o  match the architecture (CPU, 32/64'
	DB	' bits) of the specified .o', 0aH, 09H, '                    E'
	DB	'LF format defaults to i386. Windows defaults to the native pl'
	DB	'atform.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@
CONST	SEGMENT
??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@ DB 'u'
	DB	'sage: %s [-options] filename1 filename2 ...', 0aH, 09H, 'read'
	DB	' each binary input file and ', 0aH, 09H, 'create a .c file wi'
	DB	'th a byte array that contains the input file''s data', 0aH, 'o'
	DB	'ptions:', 0aH, 09H, '-h or -? or --help  this usage text', 0aH
	DB	09H, '-d or --destdir     destination directory, followed by t'
	DB	'he path', 0aH, 09H, '-n or --name        symbol prefix, follo'
	DB	'wed by the prefix', 0aH, 09H, '-e or --entrypoint  entry poin'
	DB	't name, followed by the name (_dat will be appended)', 0aH, 09H
	DB	'-r or --revision    Specify a version', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
CONST	SEGMENT
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ DB 'error in'
	DB	' command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
tv167 = -244						; size = 4
_filename$44313 = -44					; size = 4
_message$44312 = -32					; size = 4
_writeCode$ = -17					; size = 1
_verbose$ = -5						; size = 1
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	BYTE PTR _verbose$[ebp], 1
; Line 98
	mov	DWORD PTR _options+44, OFFSET ??_C@_01LFCBOECM@?4?$AA@
; Line 101
	push	OFFSET _options
	push	9
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 104
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN18@main
; Line 107
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@main:
; Line 109
	cmp	DWORD PTR _argc$[ebp], 0
	jl	SHORT $LN16@main
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN16@main
	movsx	eax, BYTE PTR _options+38
	test	eax, eax
	je	$LN17@main
$LN16@main:
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0BLN@IFKELJHJ@usage?3?5?$CFs?5?$FL?9options?$FN?5filename1?5f@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 125
	mov	esi, esp
	push	OFFSET ??_C@_0OK@CBNEBILO@?7?9o?5or?5?9?9object?5?5?5?5?5?5write?5a?5?4ob@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	mov	esi, esp
	push	OFFSET ??_C@_0JF@ELKGNILA@?7?9f?5or?5?9?9filename?5?5?5?5Specify?5an?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	call	_printAssemblyHeadersToStdErr
; Line 132
	jmp	$LN15@main
$LN17@main:
; Line 136
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	je	SHORT $LN14@main
; Line 137
	mov	DWORD PTR _message$44312[ebp], OFFSET ??_C@_0CB@BDINFBLB@generating?5assembly?5code?5for?5?$CFs?6@
; Line 138
	mov	BYTE PTR _writeCode$[ebp], 97		; 00000061H
; Line 141
	mov	eax, DWORD PTR _options+164
	push	eax
	call	_checkAssemblyHeaderName
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN13@main
; Line 143
	mov	esi, esp
	mov	eax, DWORD PTR _options+164
	push	eax
	push	OFFSET ??_C@_0CA@LDKEGMIE@Assembly?5type?5?$CC?$CFs?$CC?5is?5unknown?4?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	or	eax, -1
	jmp	$LN19@main
$LN13@main:
; Line 145
	jmp	SHORT $LN9@main
$LN14@main:
; Line 148
	movsx	eax, BYTE PTR _options+118
	test	eax, eax
	je	SHORT $LN11@main
; Line 149
	mov	DWORD PTR _message$44312[ebp], OFFSET ??_C@_0BP@NABGCAI@generating?5object?5code?5for?5?$CFs?6?$AA@
; Line 150
	mov	BYTE PTR _writeCode$[ebp], 111		; 0000006fH
; Line 154
	jmp	SHORT $LN9@main
$LN11@main:
; Line 156
	mov	DWORD PTR _message$44312[ebp], OFFSET ??_C@_0BK@HKNBMBBN@generating?5C?5code?5for?5?$CFs?6?$AA@
; Line 157
	mov	BYTE PTR _writeCode$[ebp], 99		; 00000063H
$LN9@main:
; Line 160
	mov	eax, DWORD PTR _argc$[ebp]
	sub	eax, 1
	mov	DWORD PTR _argc$[ebp], eax
	je	$LN15@main
; Line 161
	mov	eax, DWORD PTR _argc$[ebp]
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_getLongPathname
	add	esp, 4
	mov	DWORD PTR _filename$44313[ebp], eax
; Line 162
	movsx	eax, BYTE PTR _verbose$[ebp]
	test	eax, eax
	je	SHORT $LN7@main
; Line 163
	mov	esi, esp
	mov	eax, DWORD PTR _filename$44313[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$44312[ebp]
	push	ecx
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@main:
; Line 166
	mov	al, BYTE PTR _writeCode$[ebp]
	mov	BYTE PTR tv167[ebp], al
	cmp	BYTE PTR tv167[ebp], 97			; 00000061H
	je	SHORT $LN3@main
	cmp	BYTE PTR tv167[ebp], 99			; 00000063H
	je	SHORT $LN4@main
	cmp	BYTE PTR tv167[ebp], 111		; 0000006fH
	je	SHORT $LN2@main
	jmp	$LN5@main
$LN4@main:
; Line 171
	push	0
	movsx	eax, BYTE PTR _options+158
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _options+144
	push	eax
	movsx	ecx, BYTE PTR _options+78
	neg	ecx
	sbb	ecx, ecx
	and	ecx, DWORD PTR _options+64
	push	ecx
	mov	edx, DWORD PTR _options+44
	push	edx
	mov	eax, DWORD PTR _filename$44313[ebp]
	push	eax
	call	_writeCCode
	add	esp, 20					; 00000014H
; Line 172
	jmp	$LN5@main
$LN3@main:
; Line 177
	push	0
	movsx	eax, BYTE PTR _options+158
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _options+144
	push	eax
	movsx	ecx, BYTE PTR _options+98
	neg	ecx
	sbb	ecx, ecx
	and	ecx, DWORD PTR _options+84
	push	ecx
	mov	edx, DWORD PTR _options+44
	push	edx
	mov	eax, DWORD PTR _filename$44313[ebp]
	push	eax
	call	_writeAssemblyCode
	add	esp, 20					; 00000014H
; Line 178
	jmp	SHORT $LN5@main
$LN2@main:
; Line 185
	push	0
	movsx	eax, BYTE PTR _options+158
	neg	eax
	sbb	eax, eax
	and	eax, DWORD PTR _options+144
	push	eax
	movsx	ecx, BYTE PTR _options+138
	neg	ecx
	sbb	ecx, ecx
	and	ecx, DWORD PTR _options+124
	push	ecx
	movsx	edx, BYTE PTR _options+98
	neg	edx
	sbb	edx, edx
	and	edx, DWORD PTR _options+84
	push	edx
	mov	eax, DWORD PTR _options+44
	push	eax
	mov	ecx, DWORD PTR _filename$44313[ebp]
	push	ecx
	call	_writeObjectCode
	add	esp, 24					; 00000018H
$LN5@main:
; Line 193
	jmp	$LN9@main
$LN15@main:
; Line 196
	xor	eax, eax
$LN19@main:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END

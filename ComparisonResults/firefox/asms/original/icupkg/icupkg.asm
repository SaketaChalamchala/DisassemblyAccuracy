; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\icupkg\icupkg.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_0L@FGHKEDMG@toc_prefix?$AA@		; `string'
PUBLIC	??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@ ; `string'
PUBLIC	??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@		; `string'
PUBLIC	??_C@_07LKPNGKOE@outlist?$AA@			; `string'
PUBLIC	??_C@_04DONFEANM@list?$AA@			; `string'
PUBLIC	??_C@_07EMKILFJA@extract?$AA@			; `string'
PUBLIC	??_C@_06LEMKAMD@remove?$AA@			; `string'
PUBLIC	??_C@_03BDGOHNNK@add?$AA@			; `string'
PUBLIC	??_C@_09FACEGBDM@matchmode?$AA@			; `string'
PUBLIC	??_C@_08LJAPBEEB@writepkg?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_09CMGPLHNH@sourcedir?$AA@			; `string'
PUBLIC	??_C@_07GJGNEJFD@comment?$AA@			; `string'
PUBLIC	??_C@_09JHBDCMB@copyright?$AA@			; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	?_CRT_glob@@3HA					; _CRT_glob
_BSS	SEGMENT
?_CRT_glob@@3HA DD 01H DUP (?)				; _CRT_glob
_BSS	ENDS
_DATA	SEGMENT
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	074H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09JHBDCMB@copyright?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07GJGNEJFD@comment?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	043H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09CMGPLHNH@sourcedir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	073H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_08LJAPBEEB@writepkg?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	077H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09FACEGBDM@matchmode?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06dH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_03BDGOHNNK@add?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	061H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_06LEMKAMD@remove?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	072H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07EMKILFJA@extract?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	078H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04DONFEANM@list?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06cH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07LKPNGKOE@outlist?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06fH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@FGHKEDMG@toc_prefix?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	01H
	DB	01H
	DB	00H
	ORG $+1
_DATA	ENDS
;	COMDAT ??_C@_0L@FGHKEDMG@toc_prefix?$AA@
CONST	SEGMENT
??_C@_0L@FGHKEDMG@toc_prefix?$AA@ DB 'toc_prefix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@
CONST	SEGMENT
??_C@_0BK@JEAOJBCF@auto_toc_prefix_with_type?$AA@ DB 'auto_toc_prefix_wit'
	DB	'h_type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@
CONST	SEGMENT
??_C@_0BA@OHBLDHAG@auto_toc_prefix?$AA@ DB 'auto_toc_prefix', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKPNGKOE@outlist?$AA@
CONST	SEGMENT
??_C@_07LKPNGKOE@outlist?$AA@ DB 'outlist', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DONFEANM@list?$AA@
CONST	SEGMENT
??_C@_04DONFEANM@list?$AA@ DB 'list', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07EMKILFJA@extract?$AA@
CONST	SEGMENT
??_C@_07EMKILFJA@extract?$AA@ DB 'extract', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LEMKAMD@remove?$AA@
CONST	SEGMENT
??_C@_06LEMKAMD@remove?$AA@ DB 'remove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BDGOHNNK@add?$AA@
CONST	SEGMENT
??_C@_03BDGOHNNK@add?$AA@ DB 'add', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09FACEGBDM@matchmode?$AA@
CONST	SEGMENT
??_C@_09FACEGBDM@matchmode?$AA@ DB 'matchmode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LJAPBEEB@writepkg?$AA@
CONST	SEGMENT
??_C@_08LJAPBEEB@writepkg?$AA@ DB 'writepkg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMGPLHNH@sourcedir?$AA@
CONST	SEGMENT
??_C@_09CMGPLHNH@sourcedir?$AA@ DB 'sourcedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJGNEJFD@comment?$AA@
CONST	SEGMENT
??_C@_07GJGNEJFD@comment?$AA@ DB 'comment', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHBDCMB@copyright?$AA@
CONST	SEGMENT
??_C@_09JHBDCMB@copyright?$AA@ DB 'copyright', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	??_C@_05HDOCAHPA@?$DP?4dat?$AA@			; `string'
PUBLIC	??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_07ILDPOMPA@noslash?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_GPackage@icu_56@@QAEPAXI@Z			; icu_56::Package::`scalar deleting destructor'
PUBLIC	??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ ; `string'
PUBLIC	??_C@_03CLCAEGCJ@new?$AA@			; `string'
PUBLIC	??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@ ; `string'
PUBLIC	??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_main
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_writePackageDatFile:PROC
EXTRN	__imp_?setPrefix@Package@icu_56@@QAEXPBD@Z:PROC
EXTRN	_memcmp:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp_?checkDependencies@Package@icu_56@@QAECXZ:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	_T_FileStream_writeLine:PROC
EXTRN	__imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z:PROC
EXTRN	__imp_?getItemCount@Package@icu_56@@QBEHXZ:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp_?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z:PROC
EXTRN	__imp_?addItems@Package@icu_56@@QAEXABV12@@Z:PROC
EXTRN	__imp_?removeItems@Package@icu_56@@QAEXABV12@@Z:PROC
EXTRN	_readList:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp_?setMatchMode@Package@icu_56@@QAEXI@Z:PROC
EXTRN	__imp_?extractItem@Package@icu_56@@QAEXPBD0HD@Z:PROC
EXTRN	__imp_?getInType@Package@icu_56@@QAEDXZ:PROC
EXTRN	__imp_?addFile@Package@icu_56@@QAEXPBD0@Z:PROC
EXTRN	__imp_?readPackage@Package@icu_56@@QAEXPBD@Z:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp_?setAutoPrefixWithType@Package@icu_56@@QAEXXZ:PROC
EXTRN	__imp_?setAutoPrefix@Package@icu_56@@QAEXXZ:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp_??0Package@icu_56@@QAE@XZ:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_u_parseArgs:PROC
EXTRN	_findBasename:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_05HDOCAHPA@?$DP?4dat?$AA@
; File d:\mozilla\intl\icu\source\tools\icupkg\icupkg.cpp
CONST	SEGMENT
??_C@_05HDOCAHPA@?$DP?4dat?$AA@ DB '?.dat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@
CONST	SEGMENT
??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@ DB 'icupkg: un'
	DB	'able to auto-generate an output filename if there is no input'
	DB	' filename', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07ILDPOMPA@noslash?$AA@
CONST	SEGMENT
??_C@_07ILDPOMPA@noslash?$AA@ DB 'noslash', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
CONST	SEGMENT
??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ DB 'icupkg: -'
	DB	'-auto_toc_prefix[_with_type] but no input package', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03CLCAEGCJ@new?$AA@
CONST	SEGMENT
??_C@_03CLCAEGCJ@new?$AA@ DB 'new', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@
CONST	SEGMENT
??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@ DB 'icupkg: --au'
	DB	'to_toc_prefix_with_type and also --toc_prefix', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
CONST	SEGMENT
??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@ DB 'icupkg: not e'
	DB	'nough memory', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$3
__ehfuncinfo$_main DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
tv572 = -1704						; size = 4
tv567 = -1704						; size = 4
tv405 = -1704						; size = 4
tv383 = -1704						; size = 4
tv354 = -1704						; size = 4
tv340 = -1704						; size = 4
tv320 = -1704						; size = 4
tv284 = -1704						; size = 4
tv213 = -1704						; size = 4
tv89 = -1704						; size = 4
tv228 = -1701						; size = 1
tv77 = -1701						; size = 1
$T8342 = -1696						; size = 4
$T8343 = -1684						; size = 4
$T8348 = -1672						; size = 4
$T8349 = -1660						; size = 4
$T8352 = -1648						; size = 4
$T8353 = -1636						; size = 4
$T8356 = -1624						; size = 4
$T8357 = -1612						; size = 4
$T8360 = -1600						; size = 4
$T8361 = -1588						; size = 4
$T8364 = -1576						; size = 4
$T8365 = -1564						; size = 4
$T8368 = -1552						; size = 4
$T8369 = -1540						; size = 4
$T8372 = -1528						; size = 4
$T8373 = -1516						; size = 4
$T8376 = -1504						; size = 4
$T8377 = -1492						; size = 4
_s$8225 = -1288						; size = 4
_suffix$8223 = -1276					; size = 6
_outFilenameBuffer$8217 = -1260				; size = 1024
_out$8202 = -228					; size = 4
_i$8200 = -216						; size = 4
_type$8142 = -204					; size = 4
_autoPrefix$ = -192					; size = 4
_addListPkg$ = -180					; size = 4
_listPkg$ = -168					; size = 4
_pkg$ = -156						; size = 4
_result$ = -144						; size = 4
_isPackage$ = -129					; size = 1
_isModified$ = -117					; size = 1
_isHelp$ = -105						; size = 1
_outType$ = -93						; size = 1
_outComment$ = -84					; size = 4
_outFilename$ = -72					; size = 4
_inFilename$ = -60					; size = 4
_destPath$ = -48					; size = 4
_sourcePath$ = -36					; size = 4
_pname$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 254
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1692				; 0000069cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1704]
	mov	ecx, 423				; 000001a7H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 258
	mov	DWORD PTR _result$[ebp], 0
; Line 265
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _pname$[ebp], eax
; Line 267
	push	OFFSET _options
	push	17					; 00000011H
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 268
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN77@main
	movsx	ecx, BYTE PTR _options+38
	test	ecx, ecx
	jne	SHORT $LN77@main
	mov	BYTE PTR tv77[ebp], 0
	jmp	SHORT $LN78@main
$LN77@main:
	mov	BYTE PTR tv77[ebp], 1
$LN78@main:
	mov	dl, BYTE PTR tv77[ebp]
	mov	BYTE PTR _isHelp$[ebp], dl
; Line 269
	movsx	eax, BYTE PTR _isHelp$[ebp]
	test	eax, eax
	je	SHORT $LN74@main
; Line 270
	push	1
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 271
	xor	eax, eax
	jmp	$LN76@main
$LN74@main:
; Line 274
	push	201216					; 00031200H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8343[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8343[ebp], 0
	je	SHORT $LN79@main
	mov	esi, esp
	mov	ecx, DWORD PTR $T8343[ebp]
	call	DWORD PTR __imp_??0Package@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN80@main
$LN79@main:
	mov	DWORD PTR tv89[ebp], 0
$LN80@main:
	mov	eax, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T8342[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T8342[ebp]
	mov	DWORD PTR _pkg$[ebp], ecx
; Line 275
	cmp	DWORD PTR _pkg$[ebp], 0
	jne	SHORT $LN73@main
; Line 276
	mov	esi, esp
	push	OFFSET ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 277
	mov	eax, 7
	jmp	$LN76@main
$LN73@main:
; Line 279
	mov	BYTE PTR _isModified$[ebp], 0
; Line 281
	mov	DWORD PTR _autoPrefix$[ebp], 0
; Line 282
	movsx	eax, BYTE PTR _options+298
	test	eax, eax
	je	SHORT $LN72@main
; Line 283
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?setAutoPrefix@Package@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 284
	mov	eax, DWORD PTR _autoPrefix$[ebp]
	add	eax, 1
	mov	DWORD PTR _autoPrefix$[ebp], eax
$LN72@main:
; Line 286
	movsx	eax, BYTE PTR _options+318
	test	eax, eax
	je	SHORT $LN71@main
; Line 287
	movsx	eax, BYTE PTR _options+338
	test	eax, eax
	je	SHORT $LN70@main
; Line 288
	mov	esi, esp
	push	OFFSET ??_C@_0DL@CFBGGDHC@icupkg?3?5?9?9auto_toc_prefix_with_t@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 290
	mov	eax, 1
	jmp	$LN76@main
$LN70@main:
; Line 292
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?setAutoPrefixWithType@Package@icu_56@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 293
	mov	eax, DWORD PTR _autoPrefix$[ebp]
	add	eax, 1
	mov	DWORD PTR _autoPrefix$[ebp], eax
$LN71@main:
; Line 295
	cmp	DWORD PTR _argc$[ebp], 2
	jl	SHORT $LN68@main
	cmp	DWORD PTR _argc$[ebp], 3
	jg	SHORT $LN68@main
	cmp	DWORD PTR _autoPrefix$[ebp], 1
	jle	SHORT $LN69@main
$LN68@main:
; Line 296
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 297
	mov	eax, 1
	jmp	$LN76@main
$LN69@main:
; Line 300
	movsx	eax, BYTE PTR _options+118
	test	eax, eax
	je	SHORT $LN67@main
; Line 301
	mov	eax, DWORD PTR _options+104
	mov	DWORD PTR _sourcePath$[ebp], eax
; Line 302
	jmp	SHORT $LN66@main
$LN67@main:
; Line 304
	mov	DWORD PTR _sourcePath$[ebp], 0
$LN66@main:
; Line 306
	movsx	eax, BYTE PTR _options+138
	test	eax, eax
	je	SHORT $LN65@main
; Line 307
	mov	eax, DWORD PTR _options+124
	mov	DWORD PTR _destPath$[ebp], eax
; Line 308
	jmp	SHORT $LN64@main
$LN65@main:
; Line 310
	mov	DWORD PTR _destPath$[ebp], 0
$LN64@main:
; Line 313
	push	OFFSET ??_C@_03CLCAEGCJ@new?$AA@
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN63@main
; Line 314
	cmp	DWORD PTR _autoPrefix$[ebp], 0
	je	SHORT $LN62@main
; Line 315
	mov	esi, esp
	push	OFFSET ??_C@_0DM@NOFHDECP@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 316
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 317
	mov	eax, 1
	jmp	$LN76@main
$LN62@main:
; Line 319
	mov	DWORD PTR _inFilename$[ebp], 0
; Line 320
	mov	BYTE PTR _isPackage$[ebp], 1
; Line 321
	jmp	SHORT $LN61@main
$LN63@main:
; Line 322
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _inFilename$[ebp], ecx
; Line 323
	mov	eax, DWORD PTR _inFilename$[ebp]
	push	eax
	call	?isPackageName@@YACPBD@Z		; isPackageName
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN60@main
; Line 324
	mov	esi, esp
	mov	eax, DWORD PTR _inFilename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?readPackage@Package@icu_56@@QAEXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 325
	mov	BYTE PTR _isPackage$[ebp], 1
; Line 326
	jmp	SHORT $LN61@main
$LN60@main:
; Line 328
	mov	esi, esp
	mov	eax, DWORD PTR _inFilename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sourcePath$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?addFile@Package@icu_56@@QAEXPBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 329
	mov	BYTE PTR _isPackage$[ebp], 0
$LN61@main:
; Line 333
	cmp	DWORD PTR _argc$[ebp], 3
	jl	SHORT $LN58@main
; Line 334
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _outFilename$[ebp], ecx
; Line 335
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN57@main
; Line 336
	mov	BYTE PTR _isModified$[ebp], 1
$LN57@main:
; Line 337
	jmp	SHORT $LN56@main
$LN58@main:
; Line 338
	movsx	eax, BYTE PTR _isPackage$[ebp]
	test	eax, eax
	je	SHORT $LN55@main
; Line 339
	mov	DWORD PTR _outFilename$[ebp], 0
; Line 340
	jmp	SHORT $LN56@main
$LN55@main:
; Line 341
	mov	eax, DWORD PTR _inFilename$[ebp]
	mov	DWORD PTR _outFilename$[ebp], eax
; Line 342
	mov	eax, DWORD PTR _sourcePath$[ebp]
	cmp	eax, DWORD PTR _destPath$[ebp]
	setne	cl
	mov	BYTE PTR _isModified$[ebp], cl
$LN56@main:
; Line 346
	movsx	eax, BYTE PTR _options+58
	test	eax, eax
	je	$LN53@main
; Line 347
	mov	eax, DWORD PTR _options+44
	mov	DWORD PTR _type$8142[ebp], eax
; Line 348
	mov	eax, DWORD PTR _type$8142[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN51@main
	mov	eax, DWORD PTR _type$8142[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	test	ecx, ecx
	je	SHORT $LN52@main
$LN51@main:
; Line 350
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 351
	mov	eax, 1
	jmp	$LN76@main
$LN52@main:
; Line 353
	mov	eax, DWORD PTR _type$8142[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _outType$[ebp], cl
; Line 354
	mov	al, BYTE PTR _outType$[ebp]
	mov	BYTE PTR tv213[ebp], al
	cmp	BYTE PTR tv213[ebp], 98			; 00000062H
	je	SHORT $LN48@main
	cmp	BYTE PTR tv213[ebp], 101		; 00000065H
	je	SHORT $LN48@main
	cmp	BYTE PTR tv213[ebp], 108		; 0000006cH
	je	SHORT $LN48@main
	jmp	SHORT $LN47@main
$LN48@main:
; Line 358
	jmp	SHORT $LN49@main
$LN47@main:
; Line 360
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 361
	mov	eax, 1
	jmp	$LN76@main
$LN49@main:
; Line 370
	movsx	eax, BYTE PTR _isPackage$[ebp]
	test	eax, eax
	je	SHORT $LN81@main
	movsx	esi, BYTE PTR _outType$[ebp]
	mov	edi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getInType@Package@icu_56@@QAEDXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN81@main
	mov	BYTE PTR tv228[ebp], 0
	jmp	SHORT $LN82@main
$LN81@main:
	mov	BYTE PTR tv228[ebp], 1
$LN82@main:
	movsx	edx, BYTE PTR tv228[ebp]
	movsx	eax, BYTE PTR _isModified$[ebp]
	or	eax, edx
	mov	BYTE PTR _isModified$[ebp], al
	jmp	SHORT $LN46@main
$LN53@main:
; Line 371
	movsx	eax, BYTE PTR _isPackage$[ebp]
	test	eax, eax
	je	SHORT $LN45@main
; Line 372
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getInType@Package@icu_56@@QAEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _outType$[ebp], al
; Line 373
	jmp	SHORT $LN46@main
$LN45@main:
; Line 374
	mov	BYTE PTR _outType$[ebp], 0
$LN46@main:
; Line 377
	movsx	eax, BYTE PTR _options+158
	test	eax, eax
	je	SHORT $LN43@main
; Line 378
	mov	BYTE PTR _isModified$[ebp], 1
$LN43@main:
; Line 381
	movsx	eax, BYTE PTR _isPackage$[ebp]
	test	eax, eax
	jne	$LN42@main
; Line 393
	movsx	eax, BYTE PTR _options+98
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+78
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+218
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+198
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+238
	test	eax, eax
	jne	SHORT $LN40@main
	movsx	eax, BYTE PTR _options+258
	test	eax, eax
	je	SHORT $LN41@main
$LN40@main:
; Line 394
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 395
	mov	eax, 1
	jmp	$LN76@main
$LN41@main:
; Line 397
	movsx	eax, BYTE PTR _isModified$[ebp]
	test	eax, eax
	je	SHORT $LN39@main
; Line 398
	mov	esi, esp
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _outFilename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destPath$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?extractItem@Package@icu_56@@QAEXPBD0HD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@main:
; Line 401
	mov	eax, DWORD PTR _pkg$[ebp]
	mov	DWORD PTR $T8349[ebp], eax
	mov	ecx, DWORD PTR $T8349[ebp]
	mov	DWORD PTR $T8348[ebp], ecx
	cmp	DWORD PTR $T8348[ebp], 0
	je	SHORT $LN83@main
	push	1
	mov	ecx, DWORD PTR $T8348[ebp]
	call	??_GPackage@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv284[ebp], eax
	jmp	SHORT $LN84@main
$LN83@main:
	mov	DWORD PTR tv284[ebp], 0
$LN84@main:
; Line 402
	mov	eax, DWORD PTR _result$[ebp]
	jmp	$LN76@main
$LN42@main:
; Line 407
	movsx	eax, BYTE PTR _options+98
	test	eax, eax
	je	SHORT $LN38@main
; Line 408
	mov	eax, DWORD PTR _options+84
	mov	DWORD PTR _outComment$[ebp], eax
	jmp	SHORT $LN37@main
$LN38@main:
; Line 409
	movsx	eax, BYTE PTR _options+78
	test	eax, eax
	je	SHORT $LN36@main
; Line 410
	mov	DWORD PTR _outComment$[ebp], OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
; Line 411
	jmp	SHORT $LN37@main
$LN36@main:
; Line 412
	mov	DWORD PTR _outComment$[ebp], 0
$LN37@main:
; Line 415
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	je	SHORT $LN34@main
; Line 416
	push	OFFSET ??_C@_07ILDPOMPA@noslash?$AA@
	mov	eax, DWORD PTR _options+164
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN33@main
; Line 417
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?setMatchMode@Package@icu_56@@QAEXI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 418
	jmp	SHORT $LN34@main
$LN33@main:
; Line 419
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 420
	mov	eax, 1
	jmp	$LN76@main
$LN34@main:
; Line 425
	movsx	eax, BYTE PTR _options+218
	test	eax, eax
	je	$LN31@main
; Line 426
	push	201216					; 00031200H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8353[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T8353[ebp], 0
	je	SHORT $LN85@main
	mov	esi, esp
	mov	ecx, DWORD PTR $T8353[ebp]
	call	DWORD PTR __imp_??0Package@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv320[ebp], eax
	jmp	SHORT $LN86@main
$LN85@main:
	mov	DWORD PTR tv320[ebp], 0
$LN86@main:
	mov	eax, DWORD PTR tv320[ebp]
	mov	DWORD PTR $T8352[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T8352[ebp]
	mov	DWORD PTR _listPkg$[ebp], ecx
; Line 427
	cmp	DWORD PTR _listPkg$[ebp], 0
	jne	SHORT $LN30@main
; Line 428
	mov	esi, esp
	push	OFFSET ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 429
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@main:
; Line 431
	mov	eax, DWORD PTR _listPkg$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _options+204
	push	ecx
	push	0
	call	_readList
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN29@main
; Line 432
	mov	esi, esp
	mov	eax, DWORD PTR _listPkg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?removeItems@Package@icu_56@@QAEXABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 433
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	DWORD PTR $T8357[ebp], eax
	mov	ecx, DWORD PTR $T8357[ebp]
	mov	DWORD PTR $T8356[ebp], ecx
	cmp	DWORD PTR $T8356[ebp], 0
	je	SHORT $LN87@main
	push	1
	mov	ecx, DWORD PTR $T8356[ebp]
	call	??_GPackage@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv340[ebp], eax
	jmp	SHORT $LN88@main
$LN87@main:
	mov	DWORD PTR tv340[ebp], 0
$LN88@main:
; Line 434
	mov	BYTE PTR _isModified$[ebp], 1
; Line 435
	jmp	SHORT $LN31@main
$LN29@main:
; Line 436
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 437
	mov	eax, 1
	jmp	$LN76@main
$LN31@main:
; Line 446
	mov	DWORD PTR _addListPkg$[ebp], 0
; Line 447
	movsx	eax, BYTE PTR _options+198
	test	eax, eax
	je	$LN27@main
; Line 448
	push	201216					; 00031200H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8361[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T8361[ebp], 0
	je	SHORT $LN89@main
	mov	esi, esp
	mov	ecx, DWORD PTR $T8361[ebp]
	call	DWORD PTR __imp_??0Package@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv354[ebp], eax
	jmp	SHORT $LN90@main
$LN89@main:
	mov	DWORD PTR tv354[ebp], 0
$LN90@main:
	mov	eax, DWORD PTR tv354[ebp]
	mov	DWORD PTR $T8360[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T8360[ebp]
	mov	DWORD PTR _addListPkg$[ebp], ecx
; Line 449
	cmp	DWORD PTR _addListPkg$[ebp], 0
	jne	SHORT $LN26@main
; Line 450
	mov	esi, esp
	push	OFFSET ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 451
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@main:
; Line 453
	mov	eax, DWORD PTR _addListPkg$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _options+184
	push	ecx
	mov	edx, DWORD PTR _sourcePath$[ebp]
	push	edx
	call	_readList
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN25@main
; Line 454
	mov	esi, esp
	mov	eax, DWORD PTR _addListPkg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?addItems@Package@icu_56@@QAEXABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 456
	mov	BYTE PTR _isModified$[ebp], 1
; Line 457
	jmp	SHORT $LN27@main
$LN25@main:
; Line 458
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 459
	mov	eax, 1
	jmp	$LN76@main
$LN27@main:
; Line 464
	movsx	eax, BYTE PTR _options+238
	test	eax, eax
	je	$LN23@main
; Line 465
	push	201216					; 00031200H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T8365[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T8365[ebp], 0
	je	SHORT $LN91@main
	mov	esi, esp
	mov	ecx, DWORD PTR $T8365[ebp]
	call	DWORD PTR __imp_??0Package@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv383[ebp], eax
	jmp	SHORT $LN92@main
$LN91@main:
	mov	DWORD PTR tv383[ebp], 0
$LN92@main:
	mov	eax, DWORD PTR tv383[ebp]
	mov	DWORD PTR $T8364[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T8364[ebp]
	mov	DWORD PTR _listPkg$[ebp], ecx
; Line 466
	cmp	DWORD PTR _listPkg$[ebp], 0
	jne	SHORT $LN22@main
; Line 467
	mov	esi, esp
	push	OFFSET ??_C@_0BL@DMKLGNCO@icupkg?3?5not?5enough?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 468
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@main:
; Line 470
	mov	eax, DWORD PTR _listPkg$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _options+224
	push	ecx
	push	0
	call	_readList
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN21@main
; Line 471
	mov	esi, esp
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _listPkg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destPath$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 472
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	DWORD PTR $T8369[ebp], eax
	mov	ecx, DWORD PTR $T8369[ebp]
	mov	DWORD PTR $T8368[ebp], ecx
	cmp	DWORD PTR $T8368[ebp], 0
	je	SHORT $LN93@main
	push	1
	mov	ecx, DWORD PTR $T8368[ebp]
	call	??_GPackage@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv405[ebp], eax
	jmp	SHORT $LN94@main
$LN93@main:
	mov	DWORD PTR tv405[ebp], 0
$LN94@main:
; Line 473
	jmp	SHORT $LN23@main
$LN21@main:
; Line 474
	push	0
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	call	?printUsage@@YAXPBDC@Z			; printUsage
	add	esp, 8
; Line 475
	mov	eax, 1
	jmp	$LN76@main
$LN23@main:
; Line 480
	movsx	eax, BYTE PTR _options+258
	test	eax, eax
	je	$LN19@main
; Line 482
	movsx	eax, BYTE PTR _options+278
	test	eax, eax
	je	$LN18@main
; Line 484
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _options+264
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _out$8202[ebp], eax
; Line 485
	cmp	DWORD PTR _out$8202[ebp], 0
	je	$LN17@main
; Line 486
	mov	DWORD PTR _i$8200[ebp], 0
	jmp	SHORT $LN16@main
$LN15@main:
	mov	eax, DWORD PTR _i$8200[ebp]
	add	eax, 1
	mov	DWORD PTR _i$8200[ebp], eax
$LN16@main:
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getItemCount@Package@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$8200[ebp], eax
	jge	SHORT $LN14@main
; Line 487
	mov	esi, esp
	mov	eax, DWORD PTR _i$8200[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _out$8202[ebp]
	push	edx
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 488
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _out$8202[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 489
	jmp	SHORT $LN15@main
$LN14@main:
; Line 490
	mov	eax, DWORD PTR _out$8202[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 491
	jmp	SHORT $LN13@main
$LN17@main:
; Line 492
	mov	eax, 1
	jmp	$LN76@main
$LN13@main:
; Line 494
	jmp	$LN19@main
$LN18@main:
; Line 495
	mov	DWORD PTR _i$8200[ebp], 0
	jmp	SHORT $LN11@main
$LN10@main:
	mov	eax, DWORD PTR _i$8200[ebp]
	add	eax, 1
	mov	DWORD PTR _i$8200[ebp], eax
$LN11@main:
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getItemCount@Package@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$8200[ebp], eax
	jge	SHORT $LN19@main
; Line 496
	mov	esi, esp
	mov	eax, DWORD PTR _i$8200[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getItem@Package@icu_56@@QBEPBUItem@2@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 497
	jmp	SHORT $LN10@main
$LN19@main:
; Line 502
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?checkDependencies@Package@icu_56@@QAECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN8@main
; Line 504
	mov	eax, 2
	jmp	$LN76@main
$LN8@main:
; Line 508
	movsx	eax, BYTE PTR _isModified$[ebp]
	test	eax, eax
	je	$LN7@main
; Line 511
	cmp	DWORD PTR _outFilename$[ebp], 0
	je	SHORT $LN5@main
	mov	eax, DWORD PTR _outFilename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN6@main
$LN5@main:
; Line 512
	cmp	DWORD PTR _inFilename$[ebp], 0
	je	SHORT $LN3@main
	mov	eax, DWORD PTR _inFilename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@main
$LN3@main:
; Line 513
	mov	esi, esp
	push	OFFSET ??_C@_0FC@PIFECNKK@icupkg?3?5unable?5to?5auto?9generate?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 514
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@main:
; Line 523
	mov	eax, DWORD PTR ??_C@_05HDOCAHPA@?$DP?4dat?$AA@
	mov	DWORD PTR _suffix$8223[ebp], eax
	mov	cx, WORD PTR ??_C@_05HDOCAHPA@?$DP?4dat?$AA@+4
	mov	WORD PTR _suffix$8223[ebp+4], cx
; Line 526
	mov	esi, esp
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?getInType@Package@icu_56@@QAEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _suffix$8223[ebp], al
; Line 527
	mov	eax, DWORD PTR _inFilename$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outFilenameBuffer$8217[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 528
	push	0
	lea	eax, DWORD PTR _outFilenameBuffer$8217[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _s$8225[ebp], eax
; Line 529
	mov	eax, DWORD PTR _s$8225[ebp]
	lea	ecx, DWORD PTR _outFilenameBuffer$8217[ebp]
	sub	eax, ecx
	cmp	eax, 5
	jle	SHORT $LN2@main
	push	5
	lea	eax, DWORD PTR _suffix$8223[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$8225[ebp]
	sub	ecx, 5
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN2@main
; Line 530
	mov	eax, DWORD PTR _s$8225[ebp]
	mov	cl, BYTE PTR _outType$[ebp]
	mov	BYTE PTR [eax-5], cl
$LN2@main:
; Line 532
	lea	eax, DWORD PTR _outFilenameBuffer$8217[ebp]
	mov	DWORD PTR _outFilename$[ebp], eax
$LN6@main:
; Line 534
	movsx	eax, BYTE PTR _options+338
	test	eax, eax
	je	SHORT $LN1@main
; Line 535
	mov	esi, esp
	mov	eax, DWORD PTR _options+324
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	call	DWORD PTR __imp_?setPrefix@Package@icu_56@@QAEXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@main:
; Line 537
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pkg$[ebp]
	push	ecx
	push	0
	push	0
	mov	edx, DWORD PTR _outComment$[ebp]
	push	edx
	mov	eax, DWORD PTR _outFilename$[ebp]
	push	eax
	call	_writePackageDatFile
	add	esp, 24					; 00000018H
	mov	DWORD PTR _result$[ebp], eax
$LN7@main:
; Line 540
	mov	eax, DWORD PTR _addListPkg$[ebp]
	mov	DWORD PTR $T8373[ebp], eax
	mov	ecx, DWORD PTR $T8373[ebp]
	mov	DWORD PTR $T8372[ebp], ecx
	cmp	DWORD PTR $T8372[ebp], 0
	je	SHORT $LN95@main
	push	1
	mov	ecx, DWORD PTR $T8372[ebp]
	call	??_GPackage@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv567[ebp], eax
	jmp	SHORT $LN96@main
$LN95@main:
	mov	DWORD PTR tv567[ebp], 0
$LN96@main:
; Line 541
	mov	eax, DWORD PTR _pkg$[ebp]
	mov	DWORD PTR $T8377[ebp], eax
	mov	ecx, DWORD PTR $T8377[ebp]
	mov	DWORD PTR $T8376[ebp], ecx
	cmp	DWORD PTR $T8376[ebp], 0
	je	SHORT $LN97@main
	push	1
	mov	ecx, DWORD PTR $T8376[ebp]
	call	??_GPackage@icu_56@@QAEPAXI@Z
	mov	DWORD PTR tv572[ebp], eax
	jmp	SHORT $LN98@main
$LN97@main:
	mov	DWORD PTR tv572[ebp], 0
$LN98@main:
; Line 542
	mov	eax, DWORD PTR _result$[ebp]
$LN76@main:
; Line 543
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN107@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1704				; 000006a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN107@main:
	DD	2
	DD	$LN106@main
$LN106@main:
	DD	-1260					; fffffb14H
	DD	1024					; 00000400H
	DD	$LN103@main
	DD	-1276					; fffffb04H
	DD	6
	DD	$LN104@main
$LN104@main:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN103@main:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	mov	eax, DWORD PTR $T8343[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$1:
	mov	eax, DWORD PTR $T8353[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$2:
	mov	eax, DWORD PTR $T8361[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$_main$3:
	mov	eax, DWORD PTR $T8365[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1708]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
PUBLIC	??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@ ; `string'
PUBLIC	??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@ ; `string'
PUBLIC	??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@ ; `string'
PUBLIC	??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@ ; `string'
PUBLIC	??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@ ; `string'
PUBLIC	??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@ ; `string'
PUBLIC	??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@ ; `string'
PUBLIC	??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@ ; `string'
PUBLIC	??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@ ; `string'
PUBLIC	??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@ ; `string'
PUBLIC	??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@ ; `string'
PUBLIC	??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@ ; `string'
PUBLIC	??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@ ; `string'
PUBLIC	??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@ ; `string'
PUBLIC	??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@ ; `string'
PUBLIC	??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@ ; `string'
;	COMDAT ??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@
; File d:\mozilla\intl\icu\source\tools\icupkg\icupkg.cpp
CONST	SEGMENT
??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@ DB 0aH, 09H
	DB	'-s path or --sourcedir path  directory for the --add items', 0aH
	DB	09H, '-d path or --destdir path    directory for the --extract'
	DB	' items', 0aH, 0aH, 09H, '-l or --list                 list th'
	DB	'e package items', 0aH, 09H, '                             (af'
	DB	'ter modifying the package)', 0aH, 09H, '                     '
	DB	'        to stdout or to output list file', 0aH, 09H, '-o path'
	DB	' or --outlist path    path/filename for the --list output', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@
CONST	SEGMENT
??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@ DB 0aH, 09H, 'I'
	DB	'tems must be listed relative to the package, and the --source'
	DB	'dir or', 0aH, 09H, 'the --destdir path will be prepended.', 0aH
	DB	09H, 'The paths are only prepended to item filenames while add'
	DB	'ing or', 0aH, 09H, 'extracting items, not to ICU .dat package'
	DB	' or list filenames.', 0aH, 09H, 0aH, 09H, 'Paths may contain '
	DB	'''/'' instead of the platform''s', 0aH, 09H, 'file separator '
	DB	'character, and are converted as appropriate.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@
CONST	SEGMENT
??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@ DB 09H, 'Items '
	DB	'for removal or extraction may contain a single ''*'' wildcard'
	DB	0aH, 09H, 'character. The ''*'' matches zero or more character'
	DB	's.', 0aH, 09H, 'If --matchmode noslash (-m noslash) is set, t'
	DB	'hen the ''*''', 0aH, 09H, 'does not match ''/''.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@
CONST	SEGMENT
??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@ DB 0aH, 09H
	DB	'List file syntax: Items are listed on one or more lines and s'
	DB	'eparated', 0aH, 09H, 'by whitespace (space+tab).', 0aH, 09H, 'C'
	DB	'omments begin with # and are ignored. Empty lines are ignored'
	DB	'.', 0aH, 09H, 'Lines where the first non-whitespace character'
	DB	' is one of %s', 0aH, 09H, 'are also ignored, to reserve for f'
	DB	'uture syntax.', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@
CONST	SEGMENT
??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@ DB '"'
	DB	'%&''()*+,-./:;<=>?_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@
CONST	SEGMENT
??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@ DB 0aH
	DB	09H, '--auto_toc_prefix            automatic ToC entries prefi'
	DB	'x', 0aH, 09H, '                             Uses the prefix o'
	DB	'f the first entry of the', 0aH, 09H, '                       '
	DB	'      input package, rather than its basename.', 0aH, 09H, ' '
	DB	'                            Requires a non-empty input packag'
	DB	'e.', 0aH, 09H, '--auto_toc_prefix_with_type  auto_toc_prefix '
	DB	'+ adjust platform type', 0aH, 09H, '                         '
	DB	'    Same as auto_toc_prefix but also checks that', 0aH, 09H, ' '
	DB	'                            the prefix ends with the input pl'
	DB	'atform', 0aH, 09H, '                             type letter,'
	DB	' and modifies it to the output', 0aH, 09H, '                 '
	DB	'            platform type letter.', 0aH, 09H, '              '
	DB	'  At most one of the auto_toc_prefix options', 0aH, 09H, '   '
	DB	'             can be used at a time.', 0aH, 09H, '--toc_prefix'
	DB	' prefix          ToC prefix to be used in the output package', 0aH
	DB	09H, '                             Overrides the package basen'
	DB	'ame', 0aH, 09H, '                             and --auto_toc_'
	DB	'prefix.', 0aH, 09H, '                             Cannot be c'
	DB	'ombined with --auto_toc_prefix_with_type.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@
CONST	SEGMENT
??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@ DB 0aH, 09H
	DB	'In the .dat package, the Table of Contents (ToC) contains an '
	DB	'entry', 0aH, 09H, 'for each item of the form prefix/tree/item'
	DB	'name .', 0aH, 09H, 'The prefix normally matches the package b'
	DB	'asename, and icupkg checks that,', 0aH, 09H, 'but this is not'
	DB	' necessary when ICU need not find and load the package by fil'
	DB	'ename.', 0aH, 09H, 'ICU package names end with the platform t'
	DB	'ype letter, and thus differ', 0aH, 09H, 'between platform typ'
	DB	'es. This is not required for user data packages.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@
CONST	SEGMENT
??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@ DB 0aH, 09H
	DB	'-m mode or --matchmode mode  set the matching mode for item n'
	DB	'ames with', 0aH, 09H, '                             wildcards'
	DB	0aH, 09H, '        noslash: the ''*'' wildcard does not match '
	DB	'the ''/'' tree separator', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@
CONST	SEGMENT
??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@ DB 0aH, 09H
	DB	'-w or --writepkg  write the output package even if no items a'
	DB	're removed', 0aH, 09H, '                  or added (e.g., for'
	DB	' only swapping the data)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@
CONST	SEGMENT
??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@ DB 0aH
	DB	09H, '-a list or --add list      add items to the package', 0aH
	DB	09H, '-r list or --remove list   remove items from the package'
	DB	0aH, 09H, '-x list or --extract list  extract items from the p'
	DB	'ackage', 0aH, 09H, 'The list can be a single item''s filename'
	DB	',', 0aH, 09H, 'or a .txt filename with a list of item filenam'
	DB	'es,', 0aH, 09H, 'or an ICU .dat package filename.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@
CONST	SEGMENT
??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@ DB 0aH
	DB	09H, '-tl or --type l   output for little-endian/ASCII charset'
	DB	' family', 0aH, 09H, '-tb or --type b   output for big-endian/'
	DB	'ASCII charset family', 0aH, 09H, '-te or --type e   output fo'
	DB	'r big-endian/EBCDIC charset family', 0aH, 09H, '             '
	DB	'     The output type defaults to the input type.', 0aH, 0aH, 09H
	DB	'-c or --copyright include the ICU copyright notice', 0aH, 09H
	DB	'-C comment or --comment comment   include a comment string', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@
CONST	SEGMENT
??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@ DB 0aH, 'O'
	DB	'ptions:', 0aH, 09H, '(Only the last occurrence of an option i'
	DB	's used.)', 0aH, 0aH, 09H, '-h or -? or --help    print this m'
	DB	'essage and exit', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@
CONST	SEGMENT
??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@ DB 0aH, 'Th'
	DB	'is tool can also be used to just swap a single ICU data file,'
	DB	' replacing the', 0aH, 'former icuswap tool. For this mode, pr'
	DB	'ovide the infilename (and optional', 0aH, 'outfilename) for a'
	DB	' non-package ICU data file.', 0aH, 'Allowed options include -'
	DB	't, -w, -s and -d.', 0aH, 'The filenames can be absolute, or r'
	DB	'elative to the source/dest dir paths.', 0aH, 'Other options a'
	DB	're not allowed in this mode.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@
CONST	SEGMENT
??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@ DB 0aH
	DB	'If the input filename is "new" then an empty package is creat'
	DB	'ed.', 0aH, 'If the output filename is missing, then it is aut'
	DB	'omatically generated', 0aH, 'from the input filename: If the '
	DB	'input filename ends with an l, b, or e', 0aH, 'matching its p'
	DB	'latform properties, then the output filename will', 0aH, 'con'
	DB	'tain the letter from the -t (--type) option.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@
CONST	SEGMENT
??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@ DB 0aH, 'Rea'
	DB	'd the input ICU .dat package file, modify it according to the'
	DB	' options,', 0aH, 'swap it to the desired platform properties '
	DB	'(charset & endianness),', 0aH, 'and optionally write the resu'
	DB	'lting ICU .dat package to the output file.', 0aH, 'Items are '
	DB	'removed, then added, then extracted and listed.', 0aH, 'An IC'
	DB	'U .dat package is written if items are removed or added,', 0aH
	DB	'or if the input and output filenames differ,', 0aH, 'or if th'
	DB	'e --writepkg (-w) option is set.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@
CONST	SEGMENT
??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@ DB '%'
	DB	'csage: %s [-h|-?|--help ] [-tl|-tb|-te] [-c] [-C comment]', 0aH
	DB	09H, '[-a list] [-r list] [-x list] [-l [-o outputListFileName'
	DB	']]', 0aH, 09H, '[-s path] [-d path] [-w] [-m mode]', 0aH, 09H
	DB	'[--auto_toc_prefix] [--auto_toc_prefix_with_type] [--toc_pref'
	DB	'ix]', 0aH, 09H, 'infilename [outfilename]', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?printUsage@@YAXPBDC@Z
_TEXT	SEGMENT
tv70 = -208						; size = 4
_where$ = -8						; size = 4
_pname$ = 8						; size = 4
_isHelp$ = 12						; size = 1
?printUsage@@YAXPBDC@Z PROC				; printUsage, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	movsx	eax, BYTE PTR _isHelp$[ebp]
	test	eax, eax
	je	SHORT $LN4@printUsage
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 32					; 00000020H
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN5@printUsage
$LN4@printUsage:
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv70[ebp], eax
$LN5@printUsage:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _where$[ebp], ecx
; Line 62
	mov	esi, esp
	mov	eax, DWORD PTR _pname$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _isHelp$[ebp]
	neg	ecx
	sbb	cl, cl
	and	cl, -32					; ffffffe0H
	add	cl, 117					; 00000075H
	movsx	edx, cl
	push	edx
	push	OFFSET ??_C@_0PI@HNCAEKCJ@?$CFcsage?3?5?$CFs?5?$FL?9h?$HM?9?$DP?$HM?9?9help?5?$FN?5?$FL?9tl?$HM@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	movsx	eax, BYTE PTR _isHelp$[ebp]
	test	eax, eax
	je	$LN2@printUsage
; Line 72
	mov	esi, esp
	push	OFFSET ??_C@_0BKF@PKADPJDE@?6Read?5the?5input?5ICU?5?4dat?5package@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	esi, esp
	push	OFFSET ??_C@_0BEA@GOKOANCD@?6If?5the?5input?5filename?5is?5?$CCnew?$CC?5@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 87
	mov	esi, esp
	push	OFFSET ??_C@_0BGH@GLKMFLKA@?6This?5tool?5can?5also?5be?5used?5to?5j@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	mov	esi, esp
	push	OFFSET ??_C@_0HB@OOKGNEJH@?6Options?3?6?7?$CIOnly?5the?5last?5occurr@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	esi, esp
	push	OFFSET ??_C@_0BHA@FIKICFBA@?6?7?9tl?5or?5?9?9type?5l?5?5?5output?5for?5l@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 110
	mov	esi, esp
	push	OFFSET ??_C@_0BCM@MADONBGM@?6?7?9a?5list?5or?5?9?9add?5list?5?5?5?5?5?5add@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 114
	mov	esi, esp
	push	OFFSET ??_C@_0IK@NLIIOJNJ@?6?7?9w?5or?5?9?9writepkg?5?5write?5the?5ou@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	mov	esi, esp
	push	OFFSET ??_C@_0LL@JPOIILIF@?6?7?9m?5mode?5or?5?9?9matchmode?5mode?5?5s@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	mov	esi, esp
	push	OFFSET ??_C@_0BKD@LHEPPGAP@?6?7In?5the?5?4dat?5package?0?5the?5Table@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	mov	esi, esp
	push	OFFSET ??_C@_0DNE@FIIEFLPA@?6?7?9?9auto_toc_prefix?5?5?5?5?5?5?5?5?5?5?5?5a@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	esi, esp
	push	OFFSET ??_C@_0BE@HOANCLGJ@?$CC?$CF?$CG?8?$CI?$CJ?$CK?$CL?0?9?4?1?3?$DL?$DM?$DN?$DO?$DP_?$AA@
	push	OFFSET ??_C@_0BBE@HCHBIOMK@?6?7List?5file?5syntax?3?5Items?5are?5li@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	mov	esi, esp
	push	OFFSET ??_C@_0MI@CMOHMDPF@?7Items?5for?5removal?5or?5extraction@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	mov	esi, esp
	push	OFFSET ??_C@_0BFN@KINCJPFI@?6?7Items?5must?5be?5listed?5relative?5@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 180
	mov	esi, esp
	push	OFFSET ??_C@_0BHB@JLNNPDOL@?6?7?9s?5path?5or?5?9?9sourcedir?5path?5?5d@
	mov	eax, DWORD PTR _where$[ebp]
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@printUsage:
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?printUsage@@YAXPBDC@Z ENDP				; printUsage
_TEXT	ENDS
PUBLIC	??_C@_04PBCOOEDG@?4dat?$AA@			; `string'
EXTRN	_strlen:PROC
;	COMDAT ??_C@_04PBCOOEDG@?4dat?$AA@
CONST	SEGMENT
??_C@_04PBCOOEDG@?4dat?$AA@ DB '.dat', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?isPackageName@@YACPBD@Z
_TEXT	SEGMENT
tv73 = -205						; size = 1
_len$ = -8						; size = 4
_filename$ = 8						; size = 4
?isPackageName@@YACPBD@Z PROC				; isPackageName, COMDAT
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 244
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	sub	eax, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 245
	cmp	DWORD PTR _len$[ebp], 0
	jle	SHORT $LN3@isPackageN
	push	OFFSET ??_C@_04PBCOOEDG@?4dat?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@isPackageN
	mov	BYTE PTR tv73[ebp], 1
	jmp	SHORT $LN4@isPackageN
$LN3@isPackageN:
	mov	BYTE PTR tv73[ebp], 0
$LN4@isPackageN:
	mov	al, BYTE PTR tv73[ebp]
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?isPackageName@@YACPBD@Z ENDP				; isPackageName
_TEXT	ENDS
EXTRN	__imp_??1Package@icu_56@@QAE@XZ:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPackage@icu_56@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPackage@icu_56@@QAEPAXI@Z PROC			; icu_56::Package::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1Package@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPackage@icu_56@@QAEPAXI@Z ENDP			; icu_56::Package::`scalar deleting destructor'
_TEXT	ENDS
END

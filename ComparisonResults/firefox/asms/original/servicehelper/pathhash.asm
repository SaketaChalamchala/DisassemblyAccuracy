; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\toolkit\mozapps\update\common\pathhash.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?CalculateRegistryPathFromFilePath@@YAHQB_WPA_W@Z ; CalculateRegistryPathFromFilePath
PUBLIC	??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_memset:PROC
EXTRN	__imp__wcslen:PROC
EXTRN	__imp__wcsncpy:PROC
EXTRN	__imp___wcslwr:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__wsprintfW:PROC
EXTRN	__imp__CryptAcquireContextW@20:PROC
EXTRN	__imp__CryptReleaseContext@8:PROC
EXTRN	__imp__CryptGetHashParam@20:PROC
EXTRN	__imp__CryptCreateHash@20:PROC
EXTRN	__imp__CryptHashData@16:PROC
EXTRN	__imp__CryptDestroyHash@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@
CONST	SEGMENT
??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@ DB 'S'
	DB	00H, 'O', 00H, 'F', 00H, 'T', 00H, 'W', 00H, 'A', 00H, 'R', 00H
	DB	'E', 00H, '\', 00H, 'M', 00H, 'o', 00H, 'z', 00H, 'i', 00H, 'l'
	DB	00H, 'l', 00H, 'a', 00H, '\', 00H, 'M', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, 'S', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'i', 00H
	DB	'c', 00H, 'e', 00H, '\', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@ DB '%', 00H, '.', 00H, '2'
	DB	00H, 'x', 00H, 00H, 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalculateMD5@@YAHPBDKPAPAEAAK@Z
_TEXT	SEGMENT
$T1 = -236						; size = 4
_dwCount$ = -32						; size = 4
_hHash$ = -20						; size = 4
_hProv$ = -8						; size = 4
_data$ = 8						; size = 4
_dataSize$ = 12						; size = 4
_hash$ = 16						; size = 4
_hashSize$ = 20						; size = 4
?CalculateMD5@@YAHPBDKPAPAEAAK@Z PROC			; CalculateMD5, COMDAT
; File d:\mozilla\toolkit\mozapps\update\common\pathhash.cpp
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	DWORD PTR _hProv$[ebp], 0
; Line 43
	mov	DWORD PTR _hHash$[ebp], 0
; Line 46
	mov	esi, esp
	push	-268435456				; f0000000H
	push	1
	push	0
	push	0
	lea	eax, DWORD PTR _hProv$[ebp]
	push	eax
	call	DWORD PTR __imp__CryptAcquireContextW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@CalculateM
; Line 47
	mov	esi, esp
	call	DWORD PTR __imp__GetLastError@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -2146893802			; 80090016H
	je	SHORT $LN8@CalculateM
; Line 48
	xor	eax, eax
	jmp	$LN10@CalculateM
$LN8@CalculateM:
; Line 53
	mov	esi, esp
	push	-268435448				; f0000008H
	push	1
	push	0
	push	0
	lea	eax, DWORD PTR _hProv$[ebp]
	push	eax
	call	DWORD PTR __imp__CryptAcquireContextW@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@CalculateM
; Line 54
	xor	eax, eax
	jmp	$LN10@CalculateM
$LN9@CalculateM:
; Line 58
	mov	esi, esp
	lea	eax, DWORD PTR _hHash$[ebp]
	push	eax
	push	0
	push	0
	push	32771					; 00008003H
	mov	ecx, DWORD PTR _hProv$[ebp]
	push	ecx
	call	DWORD PTR __imp__CryptCreateHash@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@CalculateM
; Line 59
	xor	eax, eax
	jmp	$LN10@CalculateM
$LN6@CalculateM:
; Line 63
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _dataSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hHash$[ebp]
	push	edx
	call	DWORD PTR __imp__CryptHashData@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN5@CalculateM
; Line 64
	xor	eax, eax
	jmp	$LN10@CalculateM
$LN5@CalculateM:
; Line 67
	mov	DWORD PTR _dwCount$[ebp], 4
; Line 69
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _dwCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hashSize$[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _hHash$[ebp]
	push	edx
	call	DWORD PTR __imp__CryptGetHashParam@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@CalculateM
; Line 70
	xor	eax, eax
	jmp	$LN10@CalculateM
$LN4@CalculateM:
; Line 73
	mov	eax, DWORD PTR _hashSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [edx], eax
; Line 74
	mov	eax, DWORD PTR _hashSize$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hash$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 75
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hashSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	2
	mov	eax, DWORD PTR _hHash$[ebp]
	push	eax
	call	DWORD PTR __imp__CryptGetHashParam@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN3@CalculateM
; Line 76
	xor	eax, eax
	jmp	SHORT $LN10@CalculateM
$LN3@CalculateM:
; Line 79
	cmp	DWORD PTR _hHash$[ebp], 0
	je	SHORT $LN2@CalculateM
; Line 80
	mov	esi, esp
	mov	eax, DWORD PTR _hHash$[ebp]
	push	eax
	call	DWORD PTR __imp__CryptDestroyHash@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CalculateM:
; Line 83
	cmp	DWORD PTR _hProv$[ebp], 0
	je	SHORT $LN1@CalculateM
; Line 84
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hProv$[ebp]
	push	eax
	call	DWORD PTR __imp__CryptReleaseContext@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@CalculateM:
; Line 87
	mov	eax, 1
$LN10@CalculateM:
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CalculateM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@CalculateM:
	DD	3
	DD	$LN15@CalculateM
$LN15@CalculateM:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN12@CalculateM
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@CalculateM
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN14@CalculateM
$LN14@CalculateM:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN13@CalculateM:
	DB	104					; 00000068H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
$LN12@CalculateM:
	DB	104					; 00000068H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	0
?CalculateMD5@@YAHPBDKPAPAEAAK@Z ENDP			; CalculateMD5
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?BinaryDataToHexString@@YAXPBEAAKPA_W@Z
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_p$ = -8						; size = 4
_hash$ = 8						; size = 4
_hashSize$ = 12						; size = 4
_hexString$ = 16					; size = 4
?BinaryDataToHexString@@YAXPBEAAKPA_W@Z PROC		; BinaryDataToHexString, COMDAT
; File d:\mozilla\toolkit\mozapps\update\common\pathhash.cpp
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 22
	mov	eax, DWORD PTR _hexString$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 23
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN3@BinaryData
$LN2@BinaryData:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN3@BinaryData:
	mov	eax, DWORD PTR _hashSize$[ebp]
	mov	ecx, DWORD PTR _i$1[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN4@BinaryData
; Line 24
	mov	eax, DWORD PTR _hash$[ebp]
	add	eax, DWORD PTR _i$1[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_19LOMEABKM@?$AA?$CF?$AA?4?$AA2?$AAx?$AA?$AA@
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR __imp__wsprintfW
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 25
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 26
	jmp	SHORT $LN2@BinaryData
$LN4@BinaryData:
; Line 27
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BinaryDataToHexString@@YAXPBEAAKPA_W@Z ENDP		; BinaryDataToHexString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CalculateRegistryPathFromFilePath@@YAHQB_WPA_W@Z
_TEXT	SEGMENT
$T1 = -296						; size = 4
$T2 = -284						; size = 4
$T3 = -272						; size = 4
$T4 = -260						; size = 4
_baseRegPath$ = -56					; size = 4
_hashSize$ = -44					; size = 4
_hash$ = -32						; size = 4
_lowercasePath$ = -20					; size = 4
_filePathLen$ = -8					; size = 4
_filePath$ = 8						; size = 4
_registryPath$ = 12					; size = 4
?CalculateRegistryPathFromFilePath@@YAHQB_WPA_W@Z PROC	; CalculateRegistryPathFromFilePath, COMDAT
; File d:\mozilla\toolkit\mozapps\update\common\pathhash.cpp
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 102
	mov	esi, esp
	mov	eax, DWORD PTR _filePath$[ebp]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _filePathLen$[ebp], eax
; Line 103
	cmp	DWORD PTR _filePathLen$[ebp], 0
	jne	SHORT $LN4@CalculateR
; Line 104
	xor	eax, eax
	jmp	$LN5@CalculateR
$LN4@CalculateR:
; Line 109
	mov	eax, DWORD PTR _filePathLen$[ebp]
	mov	ecx, DWORD PTR _filePath$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN2@CalculateR
	mov	eax, DWORD PTR _filePathLen$[ebp]
	mov	ecx, DWORD PTR _filePath$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2-2]
	cmp	edx, 47					; 0000002fH
	jne	SHORT $LN3@CalculateR
$LN2@CalculateR:
; Line 110
	mov	eax, DWORD PTR _filePathLen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _filePathLen$[ebp], eax
$LN3@CalculateR:
; Line 117
	mov	eax, DWORD PTR _filePathLen$[ebp]
	add	eax, 2
	xor	ecx, ecx
	mov	edx, 2
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR _lowercasePath$[ebp], eax
; Line 118
	mov	eax, DWORD PTR _filePathLen$[ebp]
	lea	ecx, DWORD PTR [eax+eax+4]
	push	ecx
	push	0
	mov	edx, DWORD PTR _lowercasePath$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 119
	mov	eax, DWORD PTR _filePathLen$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _filePath$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lowercasePath$[ebp]
	push	edx
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _lowercasePath$[ebp]
	push	eax
	call	DWORD PTR __imp___wcslwr
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 123
	mov	DWORD PTR _hashSize$[ebp], 0
; Line 126
	lea	eax, DWORD PTR _hashSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filePathLen$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _lowercasePath$[ebp]
	push	eax
	call	?CalculateMD5@@YAHPBDKPAPAEAAK@Z	; CalculateMD5
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN1@CalculateR
; Line 127
	mov	eax, DWORD PTR _lowercasePath$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 128
	xor	eax, eax
	jmp	$LN5@CalculateR
$LN1@CalculateR:
; Line 130
	mov	eax, DWORD PTR _lowercasePath$[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 133
	mov	DWORD PTR _baseRegPath$[ebp], OFFSET ??_C@_1EK@FHBKBBLP@?$AAS?$AAO?$AAF?$AAT?$AAW?$AAA?$AAR?$AAE?$AA?2?$AAM?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAM?$AAa?$AAi?$AAn?$AAt?$AAe?$AAn?$AAa?$AAn?$AAc?$AAe?$AAS?$AAe?$AAr?$AAv@
; Line 134
	mov	esi, esp
	push	260					; 00000104H
	mov	eax, DWORD PTR _baseRegPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _registryPath$[ebp]
	push	ecx
	call	DWORD PTR __imp__wcsncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 136
	mov	esi, esp
	mov	eax, DWORD PTR _baseRegPath$[ebp]
	push	eax
	call	DWORD PTR __imp__wcslen
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _registryPath$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	lea	eax, DWORD PTR _hashSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hash$[ebp]
	push	ecx
	call	?BinaryDataToHexString@@YAXPBEAAKPA_W@Z	; BinaryDataToHexString
	add	esp, 12					; 0000000cH
; Line 137
	mov	eax, DWORD PTR _hash$[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 138
	mov	eax, 1
$LN5@CalculateR:
; Line 139
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CalculateR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@CalculateR:
	DD	2
	DD	$LN9@CalculateR
$LN9@CalculateR:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@CalculateR
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN8@CalculateR
$LN8@CalculateR:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN7@CalculateR:
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
?CalculateRegistryPathFromFilePath@@YAHQB_WPA_W@Z ENDP	; CalculateRegistryPathFromFilePath
_TEXT	ENDS
END

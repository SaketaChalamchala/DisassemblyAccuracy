; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\gentest\genres32.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_01CELHOKLL@?$HN?$AA@			; `string'
PUBLIC	??_C@_0M@ELGJOMJO@?$CFs?3int?$HL?$CFd?$HN?6?$AA@ ; `string'
PUBLIC	??_C@_0O@OEPLGCEG@?$CFs?$HL?$CC?2U?$CF08x?$CC?$HN?6?$AA@ ; `string'
PUBLIC	??_C@_0O@KJAKBKEE@testtable32?5?$HL?$AA@	; `string'
PUBLIC	??_C@_0CL@JEAIBBLK@?$CFs?3?5Couldn?8t?5create?5resource?5tes@ ; `string'
PUBLIC	??_C@_0BL@GHFHLNEL@Generating?5testtable32?4txt?$AA@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BA@JPJFPBFM@testtable32?4txt?$AA@	; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_genres32
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__puts:PROC
EXTRN	__imp__fopen:PROC
EXTRN	_strcat:PROC
EXTRN	_strlen:PROC
EXTRN	_strcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_01CELHOKLL@?$HN?$AA@
; File d:\mozilla\intl\icu\source\tools\gentest\genres32.c
CONST	SEGMENT
??_C@_01CELHOKLL@?$HN?$AA@ DB '}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ELGJOMJO@?$CFs?3int?$HL?$CFd?$HN?6?$AA@
CONST	SEGMENT
??_C@_0M@ELGJOMJO@?$CFs?3int?$HL?$CFd?$HN?6?$AA@ DB '%s:int{%d}', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OEPLGCEG@?$CFs?$HL?$CC?2U?$CF08x?$CC?$HN?6?$AA@
CONST	SEGMENT
??_C@_0O@OEPLGCEG@?$CFs?$HL?$CC?2U?$CF08x?$CC?$HN?6?$AA@ DB '%s{"\U%08x"}'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KJAKBKEE@testtable32?5?$HL?$AA@
CONST	SEGMENT
??_C@_0O@KJAKBKEE@testtable32?5?$HL?$AA@ DB 'testtable32 {', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@JEAIBBLK@?$CFs?3?5Couldn?8t?5create?5resource?5tes@
CONST	SEGMENT
??_C@_0CL@JEAIBBLK@?$CFs?3?5Couldn?8t?5create?5resource?5tes@ DB '%s: Cou'
	DB	'ldn''t create resource test file %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GHFHLNEL@Generating?5testtable32?4txt?$AA@
CONST	SEGMENT
??_C@_0BL@GHFHLNEL@Generating?5testtable32?4txt?$AA@ DB 'Generating testt'
	DB	'able32.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JPJFPBFM@testtable32?4txt?$AA@
CONST	SEGMENT
??_C@_0BA@JPJFPBFM@testtable32?4txt?$AA@ DB 'testtable32.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@
CONST	SEGMENT
??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@ DB 'ooooooooooooooooo', 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _genres32
_TEXT	SEGMENT
_out$ = -584						; size = 4
_file$ = -572						; size = 512
_i$ = -52						; size = 4
_limit$ = -40						; size = 4
_key$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_prog$ = 8						; size = 4
_path$ = 12						; size = 4
_genres32 PROC						; COMDAT
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 780				; 0000030cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-780]
	mov	ecx, 195				; 000000c3H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 50
	mov	eax, DWORD PTR ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@
	mov	DWORD PTR _key$[ebp], eax
	mov	ecx, DWORD PTR ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@+4
	mov	DWORD PTR _key$[ebp+4], ecx
	mov	edx, DWORD PTR ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@+8
	mov	DWORD PTR _key$[ebp+8], edx
	mov	eax, DWORD PTR ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@+12
	mov	DWORD PTR _key$[ebp+12], eax
	mov	cx, WORD PTR ??_C@_0BC@GCCPAB@ooooooooooooooooo?$AA@+16
	mov	WORD PTR _key$[ebp+16], cx
	xor	eax, eax
	mov	WORD PTR _key$[ebp+18], ax
; Line 56
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 57
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	movsx	ecx, BYTE PTR _file$[ebp+eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN10@genres32
; Line 58
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN10@genres32:
; Line 60
	push	OFFSET ??_C@_0BA@JPJFPBFM@testtable32?4txt?$AA@
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 61
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _out$[ebp], eax
; Line 63
	mov	esi, esp
	push	OFFSET ??_C@_0BL@GHFHLNEL@Generating?5testtable32?4txt?$AA@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN9@genres32
; Line 66
	mov	esi, esp
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prog$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CL@JEAIBBLK@?$CFs?3?5Couldn?8t?5create?5resource?5tes@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 67
	mov	eax, 1
	jmp	$LN11@genres32
$LN9@genres32:
; Line 71
	lea	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
	jmp	SHORT $LN8@genres32
$LN7@genres32:
	mov	eax, DWORD PTR _limit$[ebp]
	add	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
$LN8@genres32:
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@genres32
; Line 72
	jmp	SHORT $LN7@genres32
$LN6@genres32:
; Line 77
	mov	esi, esp
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	push	OFFSET ??_C@_0O@KJAKBKEE@testtable32?5?$HL?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 80
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@genres32
$LN4@genres32:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@genres32:
	cmp	DWORD PTR _i$[ebp], 66000		; 000101d0H
	jge	SHORT $LN3@genres32
; Line 81
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	test	edx, edx
	jne	SHORT $LN2@genres32
; Line 86
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	OFFSET ??_C@_0O@OEPLGCEG@?$CFs?$HL?$CC?2U?$CF08x?$CC?$HN?6?$AA@
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 87
	jmp	SHORT $LN1@genres32
$LN2@genres32:
; Line 89
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	push	OFFSET ??_C@_0M@ELGJOMJO@?$CFs?3int?$HL?$CFd?$HN?6?$AA@
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@genres32:
; Line 92
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _key$[ebp]
	push	ecx
	call	_incKey
	add	esp, 8
; Line 93
	jmp	$LN4@genres32
$LN3@genres32:
; Line 98
	mov	esi, esp
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	push	OFFSET ??_C@_01CELHOKLL@?$HN?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 100
	mov	esi, esp
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 101
	xor	eax, eax
$LN11@genres32:
; Line 102
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@genres32
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 780				; 0000030cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@genres32:
	DD	2
	DD	$LN15@genres32
$LN15@genres32:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN13@genres32
	DD	-572					; fffffdc4H
	DD	512					; 00000200H
	DD	$LN14@genres32
$LN14@genres32:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN13@genres32:
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
_genres32 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _incKey
_TEXT	SEGMENT
_c$ = -5						; size = 1
_key$ = 8						; size = 4
_limit$ = 12						; size = 4
_incKey	PROC						; COMDAT
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN4@incKey:
; Line 30
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _key$[ebp]
	jbe	SHORT $LN5@incKey
; Line 31
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
	mov	ecx, DWORD PTR _limit$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _c$[ebp], dl
; Line 32
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 111				; 0000006fH
	jne	SHORT $LN2@incKey
; Line 33
	mov	eax, DWORD PTR _limit$[ebp]
	mov	BYTE PTR [eax], 49			; 00000031H
; Line 34
	jmp	SHORT $LN5@incKey
; Line 35
	jmp	SHORT $LN1@incKey
$LN2@incKey:
; Line 36
	mov	eax, DWORD PTR _limit$[ebp]
	mov	BYTE PTR [eax], 111			; 0000006fH
$LN1@incKey:
; Line 38
	jmp	SHORT $LN4@incKey
$LN5@incKey:
; Line 39
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_incKey	ENDP
_TEXT	ENDS
END

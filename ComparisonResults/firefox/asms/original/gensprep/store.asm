; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\gensprep\store.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_indexes DD	010H DUP (?)
_mappingData DD	01H DUP (?)
_mappingDataCapacity DD 01H DUP (?)
_currentIndex DW 01H DUP (?)
	ALIGN	4

_maxLength DD	01H DUP (?)
_hashTable DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	053H
	DB	050H
	DB	052H
	DB	050H
	DB	03H
	DB	02H
	DB	05H
	DB	02H
	DB	03H
	DB	02H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_setUnicodeVersion
EXTRN	_memcpy:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_u_versionFromString_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\gensprep\store.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _setUnicodeVersion
_TEXT	SEGMENT
_version$ = -8						; size = 4
_v$ = 8							; size = 4
_setUnicodeVersion PROC					; COMDAT
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	lea	ecx, DWORD PTR _version$[ebp]
	push	ecx
	call	_u_versionFromString_56
	add	esp, 8
; Line 177
	push	1
	lea	eax, DWORD PTR _version$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	4
	lea	ecx, DWORD PTR _version$[ebp]
	push	ecx
	push	OFFSET _dataInfo+16
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 178
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@setUnicode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@setUnicode:
	DD	1
	DD	$LN4@setUnicode
$LN4@setUnicode:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@setUnicode
$LN3@setUnicode:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_setUnicodeVersion ENDP
_TEXT	ENDS
PUBLIC	_setUnicodeVersionNC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setUnicodeVersionNC
_TEXT	SEGMENT
_univer$ = -8						; size = 4
_version$ = 8						; size = 4
_setUnicodeVersionNC PROC				; COMDAT
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 182
	mov	eax, DWORD PTR _version$[ebp]
	movzx	ecx, BYTE PTR [eax]
	shl	ecx, 24					; 00000018H
	mov	DWORD PTR _univer$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _version$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	shl	ecx, 16					; 00000010H
	add	ecx, DWORD PTR _univer$[ebp]
	mov	DWORD PTR _univer$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _version$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	shl	ecx, 8
	add	ecx, DWORD PTR _univer$[ebp]
	mov	DWORD PTR _univer$[ebp], ecx
; Line 185
	mov	eax, DWORD PTR _version$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	add	ecx, DWORD PTR _univer$[ebp]
	mov	DWORD PTR _univer$[ebp], ecx
; Line 186
	mov	eax, DWORD PTR _univer$[ebp]
	mov	DWORD PTR _indexes+8, eax
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_setUnicodeVersionNC ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@ ; `string'
PUBLIC	_init
EXTRN	__imp__exit:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_utrie_open_56:PROC
EXTRN	_uprv_calloc_56:PROC
_BSS	SEGMENT
_sprepTrie DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@
CONST	SEGMENT
??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@ DB 'error: fail'
	DB	'ed to initialize tries', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _init
_TEXT	SEGMENT
_init	PROC						; COMDAT
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 200
	push	278684					; 0004409cH
	push	1
	call	_uprv_calloc_56
	add	esp, 8
	mov	DWORD PTR _sprepTrie, eax
; Line 203
	push	0
	push	0
	push	0
	push	11500					; 00002cecH
	push	0
	mov	eax, DWORD PTR _sprepTrie
	push	eax
	call	_utrie_open_56
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN3@init
; Line 204
	mov	esi, esp
	push	OFFSET ??_C@_0CD@LDDOHHKB@error?3?5failed?5to?5initialize?5trie@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 205
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@init:
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_init	ENDP
_TEXT	ENDS
PUBLIC	_setOptions
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _setOptions
_TEXT	SEGMENT
_options$ = 8						; size = 4
_setOptions PROC					; COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 351
	mov	eax, DWORD PTR _options$[ebp]
	mov	DWORD PTR _indexes+28, eax
; Line 352
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_setOptions ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@ ; `string'
PUBLIC	??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@ ; `string'
PUBLIC	??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@ ; `string'
PUBLIC	??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ ; `string'
PUBLIC	??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@ ; `string'
PUBLIC	_storeMapping
EXTRN	_u_errorName_56:PROC
EXTRN	_uhash_iput_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_utrie_set32_56:PROC
EXTRN	_utrie_get32_56:PROC
EXTRN	_uhash_setValueDeleter_56:PROC
EXTRN	_uhash_open_56:PROC
;	COMDAT ??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@
CONST	SEGMENT
??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@ DB 'Failed to '
	DB	'put entries into the hastable. Error: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@
CONST	SEGMENT
??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@ DB 'The secon'
	DB	'd bit in the trie word is not zero while storing a delta.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@
CONST	SEGMENT
??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@ DB 'trieWord can'
	DB	'not contain value greater than threshold 0x%04X.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
CONST	SEGMENT
??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@ DB 'Could not '
	DB	'set the value for code point.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@
CONST	SEGMENT
??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@ DB 'Type for'
	DB	' codepoint \U%08X already set!.', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _storeMapping
_TEXT	SEGMENT
_delta$8986 = -92					; size = 2
_savedTrieWord$ = -80					; size = 4
_value$ = -68						; size = 4
_trieWord$ = -56					; size = 2
_j$ = -44						; size = 2
_i$ = -32						; size = 2
_adjustedLen$ = -20					; size = 2
_map$ = -8						; size = 4
_codepoint$ = 8						; size = 4
_mapping$ = 12						; size = 4
_length$ = 16						; size = 4
_type$ = 20						; size = 4
_status$ = 24						; size = 4
_storeMapping PROC					; COMDAT
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	DWORD PTR _map$[ebp], 0
; Line 359
	xor	eax, eax
	mov	WORD PTR _adjustedLen$[ebp], ax
; Line 360
	xor	eax, eax
	mov	WORD PTR _trieWord$[ebp], ax
; Line 361
	mov	DWORD PTR _value$[ebp], 0
; Line 362
	mov	DWORD PTR _savedTrieWord$[ebp], 0
; Line 365
	cmp	DWORD PTR _hashTable, 0
	jne	SHORT $LN24@storeMappi
; Line 366
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	OFFSET _compareEntries
	push	OFFSET _hashEntry
	call	_uhash_open_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hashTable, eax
; Line 367
	push	OFFSET _valueDeleter
	mov	eax, DWORD PTR _hashTable
	push	eax
	call	_uhash_setValueDeleter_56
	add	esp, 8
$LN24@storeMappi:
; Line 371
	push	0
	mov	eax, DWORD PTR _codepoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sprepTrie
	push	ecx
	call	_utrie_get32_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _savedTrieWord$[ebp], eax
; Line 372
	cmp	DWORD PTR _savedTrieWord$[ebp], 0
	je	SHORT $LN23@storeMappi
; Line 373
	mov	eax, DWORD PTR _savedTrieWord$[ebp]
	sub	eax, 65520				; 0000fff0H
	cmp	eax, 2
	jne	SHORT $LN22@storeMappi
; Line 375
	movzx	eax, WORD PTR _trieWord$[ebp]
	add	eax, 1
	mov	WORD PTR _trieWord$[ebp], ax
; Line 376
	jmp	SHORT $LN23@storeMappi
$LN22@storeMappi:
; Line 381
	mov	esi, esp
	mov	eax, DWORD PTR _codepoint$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 382
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN23@storeMappi:
; Line 387
	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	jmp	SHORT $LN20@storeMappi
$LN19@storeMappi:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN20@storeMappi:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN18@storeMappi
; Line 388
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, 65535				; 0000ffffH
	cmp	edx, DWORD PTR [ecx+eax*4]
	sbb	eax, eax
	neg	eax
	add	eax, 1
	movsx	ecx, WORD PTR _adjustedLen$[ebp]
	add	ecx, eax
	mov	WORD PTR _adjustedLen$[ebp], cx
; Line 389
	jmp	SHORT $LN19@storeMappi
$LN18@storeMappi:
; Line 391
	movsx	eax, WORD PTR _adjustedLen$[ebp]
	test	eax, eax
	jne	$LN17@storeMappi
; Line 392
	mov	eax, 65276				; 0000fefcH
	mov	WORD PTR _trieWord$[ebp], ax
; Line 394
	movzx	eax, WORD PTR _trieWord$[ebp]
	cmp	eax, 65520				; 0000fff0H
	jge	SHORT $LN16@storeMappi
; Line 396
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codepoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sprepTrie
	push	edx
	call	_utrie_set32_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN15@storeMappi
; Line 397
	mov	esi, esp
	push	OFFSET ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 398
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@storeMappi:
; Line 401
	jmp	$LN26@storeMappi
; Line 402
	jmp	SHORT $LN17@storeMappi
$LN16@storeMappi:
; Line 403
	mov	esi, esp
	push	65520					; 0000fff0H
	push	OFFSET ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 404
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@storeMappi:
; Line 408
	movsx	eax, WORD PTR _adjustedLen$[ebp]
	cmp	eax, 1
	jne	$LN13@storeMappi
; Line 410
	mov	eax, DWORD PTR _mapping$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _codepoint$[ebp]
	sub	edx, ecx
	mov	WORD PTR _delta$8986[ebp], dx
; Line 411
	movsx	eax, WORD PTR _delta$8986[ebp]
	cmp	eax, -8192				; ffffe000H
	jl	$LN13@storeMappi
	movsx	eax, WORD PTR _delta$8986[ebp]
	cmp	eax, 8191				; 00001fffH
	jg	$LN13@storeMappi
; Line 413
	movsx	eax, WORD PTR _delta$8986[ebp]
	shl	eax, 2
	mov	WORD PTR _trieWord$[ebp], ax
; Line 417
	movzx	eax, WORD PTR _trieWord$[ebp]
	and	eax, 2
	je	SHORT $LN11@storeMappi
; Line 418
	mov	esi, esp
	push	OFFSET ??_C@_0EE@MJJFGPJO@The?5second?5bit?5in?5the?5trie?5word?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 419
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@storeMappi:
; Line 422
	movzx	eax, WORD PTR _trieWord$[ebp]
	cmp	eax, 65520				; 0000fff0H
	jge	SHORT $LN13@storeMappi
; Line 424
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codepoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sprepTrie
	push	edx
	call	_utrie_set32_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN9@storeMappi
; Line 425
	mov	esi, esp
	push	OFFSET ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 426
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@storeMappi:
; Line 429
	jmp	$LN26@storeMappi
$LN13@storeMappi:
; Line 438
	push	2
	movsx	eax, WORD PTR _adjustedLen$[ebp]
	add	eax, 1
	push	eax
	call	_uprv_calloc_56
	add	esp, 8
	mov	DWORD PTR _map$[ebp], eax
; Line 440
	xor	eax, eax
	mov	WORD PTR _i$[ebp], ax
	xor	ecx, ecx
	mov	WORD PTR _j$[ebp], cx
	jmp	SHORT $LN8@storeMappi
$LN7@storeMappi:
	mov	ax, WORD PTR _i$[ebp]
	add	ax, 1
	mov	WORD PTR _i$[ebp], ax
$LN8@storeMappi:
	movsx	eax, WORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN6@storeMappi
; Line 441
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _mapping$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 65535		; 0000ffffH
	ja	SHORT $LN5@storeMappi
	movsx	eax, WORD PTR _i$[ebp]
	movsx	ecx, WORD PTR _j$[ebp]
	mov	edx, DWORD PTR _map$[ebp]
	mov	esi, DWORD PTR _mapping$[ebp]
	mov	ax, WORD PTR [esi+eax*4]
	mov	WORD PTR [edx+ecx*2], ax
	mov	cx, WORD PTR _j$[ebp]
	add	cx, 1
	mov	WORD PTR _j$[ebp], cx
	jmp	SHORT $LN4@storeMappi
$LN5@storeMappi:
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	shr	edx, 10					; 0000000aH
	add	edx, 55232				; 0000d7c0H
	movsx	eax, WORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	dx, WORD PTR _j$[ebp]
	add	dx, 1
	mov	WORD PTR _j$[ebp], dx
	movsx	eax, WORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _mapping$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	and	edx, 1023				; 000003ffH
	or	edx, 56320				; 0000dc00H
	movsx	eax, WORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	dx, WORD PTR _j$[ebp]
	add	dx, 1
	mov	WORD PTR _j$[ebp], dx
$LN4@storeMappi:
; Line 442
	jmp	$LN7@storeMappi
$LN6@storeMappi:
; Line 444
	push	12					; 0000000cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _value$[ebp], eax
; Line 445
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _map$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 446
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 447
	mov	eax, DWORD PTR _value$[ebp]
	mov	cx, WORD PTR _adjustedLen$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 448
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	cmp	ecx, 3
	jle	SHORT $LN3@storeMappi
; Line 449
	mov	eax, DWORD PTR _mappingDataCapacity
	add	eax, 1
	mov	DWORD PTR _mappingDataCapacity, eax
$LN3@storeMappi:
; Line 451
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	cmp	DWORD PTR _maxLength, ecx
	jge	SHORT $LN2@storeMappi
; Line 452
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _maxLength, ecx
$LN2@storeMappi:
; Line 454
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _codepoint$[ebp]
	push	edx
	mov	eax, DWORD PTR _hashTable
	push	eax
	call	_uhash_iput_56
	add	esp, 16					; 00000010H
; Line 455
	movsx	eax, WORD PTR _adjustedLen$[ebp]
	add	eax, DWORD PTR _mappingDataCapacity
	mov	DWORD PTR _mappingDataCapacity, eax
; Line 457
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN26@storeMappi
; Line 458
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DE@HFOBNBND@Failed?5to?5put?5entries?5into?5the?5h@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 459
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@storeMappi:
; Line 461
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_storeMapping ENDP
_TEXT	ENDS
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _valueDeleter
_TEXT	SEGMENT
_value$ = -8						; size = 4
_obj$ = 8						; size = 4
_valueDeleter PROC					; COMDAT
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	mov	eax, DWORD PTR _obj$[ebp]
	mov	DWORD PTR _value$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 222
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_valueDeleter ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _hashEntry
_TEXT	SEGMENT
_parm$ = 8						; size = 4
_hashEntry PROC						; COMDAT
; Line 226
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 227
	mov	eax, DWORD PTR _parm$[ebp]
; Line 228
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_hashEntry ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _compareEntries
_TEXT	SEGMENT
_p1$ = 8						; size = 4
_p2$ = 12						; size = 4
_compareEntries PROC					; COMDAT
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _p1$[ebp]
	cmp	eax, DWORD PTR _p2$[ebp]
	setne	al
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_compareEntries ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@ ; `string'
PUBLIC	??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@ ; `string'
PUBLIC	??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@ ; `string'
PUBLIC	??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@ ; `string'
PUBLIC	_storeRange
EXTRN	_utrie_setRange32_56:PROC
;	COMDAT ??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@
CONST	SEGMENT
??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@ DB 'Value for ce'
	DB	'rtain codepoint already set.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@
CONST	SEGMENT
??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@ DB 'Could not '
	DB	'set the value for code point \U%08X.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@
CONST	SEGMENT
??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@ DB 'Value fo'
	DB	'r codepoint \U%08X already set!.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@
CONST	SEGMENT
??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@ DB 'trieWord can'
	DB	'not contain value greater than 0xFFFF.', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _storeRange
_TEXT	SEGMENT
_savedTrieWord$9025 = -20				; size = 4
_trieWord$ = -8						; size = 2
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_type$ = 16						; size = 4
_status$ = 20						; size = 4
_storeRange PROC					; COMDAT
; Line 465
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 466
	xor	eax, eax
	mov	WORD PTR _trieWord$[ebp], ax
; Line 468
	mov	eax, DWORD PTR _type$[ebp]
	add	eax, 65520				; 0000fff0H
	cmp	eax, 65535				; 0000ffffH
	jle	SHORT $LN12@storeRange
; Line 469
	mov	esi, esp
	push	OFFSET ??_C@_0DE@DKOMPLMK@trieWord?5cannot?5contain?5value?5gr@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 470
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@storeRange:
; Line 472
	mov	eax, DWORD PTR _type$[ebp]
	add	eax, 65520				; 0000fff0H
	mov	WORD PTR _trieWord$[ebp], ax
; Line 473
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jne	$LN11@storeRange
; Line 474
	push	0
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sprepTrie
	push	ecx
	call	_utrie_get32_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _savedTrieWord$9025[ebp], eax
; Line 475
	cmp	DWORD PTR _savedTrieWord$9025[ebp], 0
	jbe	$LN10@storeRange
; Line 476
	cmp	DWORD PTR _savedTrieWord$9025[ebp], 65520 ; 0000fff0H
	jae	$LN9@storeRange
	cmp	DWORD PTR _type$[ebp], 2
	jne	$LN9@storeRange
; Line 485
	mov	eax, DWORD PTR _savedTrieWord$9025[ebp]
	add	eax, 1
	mov	DWORD PTR _savedTrieWord$9025[ebp], eax
; Line 488
	mov	ax, WORD PTR _savedTrieWord$9025[ebp]
	mov	WORD PTR _trieWord$[ebp], ax
; Line 491
	movzx	eax, WORD PTR _trieWord$[ebp]
	cmp	eax, 65520				; 0000fff0H
	jge	SHORT $LN8@storeRange
; Line 493
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sprepTrie
	push	edx
	call	_utrie_set32_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN7@storeRange
; Line 494
	mov	esi, esp
	push	OFFSET ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 495
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@storeRange:
; Line 498
	jmp	$LN14@storeRange
; Line 499
	jmp	SHORT $LN6@storeRange
$LN8@storeRange:
; Line 500
	mov	esi, esp
	push	65520					; 0000fff0H
	push	OFFSET ??_C@_0DO@PGDIEDKM@trieWord?5cannot?5contain?5value?5gr@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 501
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@storeRange:
; Line 502
	jmp	SHORT $LN10@storeRange
$LN9@storeRange:
; Line 504
	movzx	eax, WORD PTR _trieWord$[ebp]
	cmp	DWORD PTR _savedTrieWord$9025[ebp], eax
	je	SHORT $LN10@storeRange
; Line 505
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	OFFSET ??_C@_0CK@BHONEHGJ@Value?5for?5codepoint?5?2U?$CF08X?5alrea@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 506
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@storeRange:
; Line 510
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sprepTrie
	push	edx
	call	_utrie_set32_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN3@storeRange
; Line 511
	mov	esi, esp
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@KNLOLIJO@Could?5not?5set?5the?5value?5for?5code@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 512
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@storeRange:
; Line 514
	jmp	SHORT $LN14@storeRange
$LN11@storeRange:
; Line 515
	push	0
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _end$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _sprepTrie
	push	eax
	call	_utrie_setRange32_56
	add	esp, 20					; 00000014H
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@storeRange
; Line 516
	mov	esi, esp
	push	OFFSET ??_C@_0CK@FFJAJPDB@Value?5for?5certain?5codepoint?5alre@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 517
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@storeRange:
; Line 521
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_storeRange ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@ ; `string'
PUBLIC	??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@ ; `string'
PUBLIC	??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@ ; `string'
PUBLIC	??_C@_03NMPPDODH@spp?$AA@			; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@ ; `string'
PUBLIC	??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@ ; `string'
PUBLIC	??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@ ; `string'
PUBLIC	??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@ ; `string'
PUBLIC	??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@ ; `string'
PUBLIC	_generateData
EXTRN	_uhash_close_56:PROC
EXTRN	_udata_finish:PROC
EXTRN	_udata_writeBlock:PROC
EXTRN	_udata_create:PROC
EXTRN	_haveCopyright:BYTE
EXTRN	_strcat:PROC
EXTRN	__imp__printf:PROC
EXTRN	_beVerbose:BYTE
EXTRN	_utrie_serialize_56:PROC
EXTRN	_strlen:PROC
_BSS	SEGMENT
?sprepTrieBlock@?1??generateData@@9@9 DB 0186a0H DUP (?) ; `generateData'::`2'::sprepTrieBlock
_BSS	ENDS
;	COMDAT ??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@
CONST	SEGMENT
??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@ DB 'genspre'
	DB	'p error: data length %ld != calculated size %ld', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@
CONST	SEGMENT
??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@ DB 'genspre'
	DB	'p: error %d writing the output file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@
CONST	SEGMENT
??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@ DB 'gensprep: '
	DB	'unable to create the output file, error %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMPPDODH@spp?$AA@
CONST	SEGMENT
??_C@_03NMPPDODH@spp?$AA@ DB 'spp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@
CONST	SEGMENT
??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@ DB 'Maximum len'
	DB	'gth of the mapping string is : %i ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@
CONST	SEGMENT
??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@ DB 'Number of co'
	DB	'de units in mappingData (currentIndex) are: %i ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@
CONST	SEGMENT
??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@ DB 'size of'
	DB	' mapping data array %5u bytes', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@
CONST	SEGMENT
??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@ DB 'size of i'
	DB	'cudt56l_%s.spp contents: %ld bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB 's'
	DB	'ize of sprep trie              %5u bytes', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@
CONST	SEGMENT
??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@ DB 'error: utr'
	DB	'ie_serialize(sprep trie) failed, %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _generateData
_TEXT	SEGMENT
_sprepTrieSize$ = -68					; size = 4
_fileName$ = -56					; size = 4
_dataLength$ = -44					; size = 4
_size$ = -32						; size = 4
_errorCode$ = -20					; size = 4
_pData$ = -8						; size = 4
_dataDir$ = 8						; size = 4
_bundleName$ = 12					; size = 4
_generateData PROC					; COMDAT
; Line 548
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 552
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 554
	mov	eax, DWORD PTR _bundleName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 100				; 00000064H
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _fileName$[ebp], eax
; Line 565
	call	_storeMappingData
; Line 567
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	push	OFFSET _getFoldedValue
	push	100000					; 000186a0H
	push	OFFSET ?sprepTrieBlock@?1??generateData@@9@9
	mov	ecx, DWORD PTR _sprepTrie
	push	ecx
	call	_utrie_serialize_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _sprepTrieSize$[ebp], eax
; Line 568
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN6@generateDa
; Line 569
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CP@KLJAJOJM@error?3?5utrie_serialize?$CIsprep?5tri@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 570
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@generateDa:
; Line 573
	mov	eax, DWORD PTR _mappingDataCapacity
	mov	ecx, DWORD PTR _sprepTrieSize$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2+64]
	mov	DWORD PTR _size$[ebp], edx
; Line 574
	movsx	eax, BYTE PTR _beVerbose
	test	eax, eax
	je	$LN5@generateDa
; Line 575
	mov	esi, esp
	mov	eax, DWORD PTR _sprepTrieSize$[ebp]
	push	eax
	push	OFFSET ??_C@_0CL@INDLCEOH@size?5of?5sprep?5trie?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 576
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bundleName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CN@MLJLFMOK@size?5of?5icudt56l_?$CFs?4spp?5contents@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 577
	mov	eax, DWORD PTR _mappingDataCapacity
	shl	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CG@LFECKODH@size?5of?5mapping?5data?5array?5?$CF5u?5b@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 578
	movsx	eax, WORD PTR _currentIndex
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DN@LMAGICM@Number?5of?5code?5units?5in?5mappingD@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 579
	mov	esi, esp
	mov	eax, DWORD PTR _maxLength
	push	eax
	push	OFFSET ??_C@_0CP@IEOANGJF@Maximum?5length?5of?5the?5mapping?5st@
	call	DWORD PTR __imp__printf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@generateDa:
; Line 584
	mov	eax, DWORD PTR _fileName$[ebp]
	mov	BYTE PTR [eax], 0
; Line 585
	mov	eax, DWORD PTR _bundleName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 588
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movsx	ecx, BYTE PTR _haveCopyright
	neg	ecx
	sbb	ecx, ecx
	and	ecx, OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	push	ecx
	push	OFFSET _dataInfo
	mov	edx, DWORD PTR _fileName$[ebp]
	push	edx
	push	OFFSET ??_C@_03NMPPDODH@spp?$AA@
	mov	eax, DWORD PTR _dataDir$[ebp]
	push	eax
	call	_udata_create
	add	esp, 24					; 00000018H
	mov	DWORD PTR _pData$[ebp], eax
; Line 589
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN4@generateDa
; Line 590
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0DG@DKEHGGJM@gensprep?3?5unable?5to?5create?5the?5o@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 591
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@generateDa:
; Line 596
	mov	eax, DWORD PTR _sprepTrieSize$[ebp]
	mov	DWORD PTR _indexes, eax
; Line 597
	mov	eax, DWORD PTR _mappingDataCapacity
	shl	eax, 1
	mov	DWORD PTR _indexes+4, eax
; Line 599
	push	64					; 00000040H
	push	OFFSET _indexes
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 600
	mov	eax, DWORD PTR _sprepTrieSize$[ebp]
	push	eax
	push	OFFSET ?sprepTrieBlock@?1??generateData@@9@9
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 601
	mov	eax, DWORD PTR _indexes+4
	push	eax
	mov	ecx, DWORD PTR _mappingData
	push	ecx
	mov	edx, DWORD PTR _pData$[ebp]
	push	edx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 607
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	call	_udata_finish
	add	esp, 8
	mov	DWORD PTR _dataLength$[ebp], eax
; Line 608
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN3@generateDa
; Line 609
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0CM@JCBHAMFP@gensprep?3?5error?5?$CFd?5writing?5the?5o@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 610
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@generateDa:
; Line 613
	mov	eax, DWORD PTR _dataLength$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN2@generateDa
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataLength$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DI@KPMHJOEI@gensprep?5error?3?5data?5length?5?$CFld?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 616
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@generateDa:
; Line 621
	cmp	DWORD PTR _hashTable, 0
	je	SHORT $LN1@generateDa
; Line 622
	mov	eax, DWORD PTR _hashTable
	push	eax
	call	_uhash_close_56
	add	esp, 4
$LN1@generateDa:
; Line 626
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN8@generateDa:
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@generateDa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@generateDa:
	DD	1
	DD	$LN10@generateDa
$LN10@generateDa:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@generateDa
$LN9@generateDa:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_generateData ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@ ; `string'
PUBLIC	??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@ ; `string'
PUBLIC	?__LINE__Var@?1??storeMappingData@@9@9@39dcc198	; `storeMappingData'::`2'::__LINE__Var
PUBLIC	??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@ ; `string'
PUBLIC	??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@ ; `string'
EXTRN	__imp__memmove:PROC
EXTRN	_uhash_nextElement_56:PROC
EXTRN	_uhash_count_56:PROC
;	COMDAT ??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@
CONST	SEGMENT
??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@ DB 'ge'
	DB	'nsprep, fatal error at %s, %d.  Aborting.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@
CONST	SEGMENT
??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@ DB 'd:\mozilla'
	DB	'\intl\icu\source\tools\gensprep\store.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??storeMappingData@@9@9@39dcc198
_DATA	SEGMENT
?__LINE__Var@?1??storeMappingData@@9@9@39dcc198 DD 0edH	; `storeMappingData'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@
CONST	SEGMENT
??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@ DB 'Too many e'
	DB	'ntries in the mapping table %i. Maximum allowed is %i', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@
CONST	SEGMENT
??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@ DB 'trieWord can'
	DB	'not contain value greater than 0x%04X.', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _storeMappingData
_TEXT	SEGMENT
_savedTrieWord$8923 = -128				; size = 4
_limitIndex$ = -116					; size = 4
_trieWord$ = -104					; size = 2
_oldMappingLength$ = -92				; size = 4
_mappingLength$ = -80					; size = 4
_writtenElementCount$ = -68				; size = 4
_elementCount$ = -56					; size = 4
_codepoint$ = -44					; size = 4
_value$ = -32						; size = 4
_element$ = -20						; size = 4
_pos$ = -8						; size = 4
_storeMappingData PROC					; COMDAT
; Line 237
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 239
	mov	DWORD PTR _pos$[ebp], -1
; Line 240
	mov	DWORD PTR _element$[ebp], 0
; Line 241
	mov	DWORD PTR _value$[ebp], 0
; Line 242
	mov	DWORD PTR _codepoint$[ebp], 0
; Line 243
	mov	DWORD PTR _elementCount$[ebp], 0
; Line 244
	mov	DWORD PTR _writtenElementCount$[ebp], 0
; Line 245
	mov	DWORD PTR _mappingLength$[ebp], 1
; Line 246
	mov	DWORD PTR _oldMappingLength$[ebp], 0
; Line 247
	xor	eax, eax
	mov	WORD PTR _trieWord$[ebp], ax
; Line 248
	mov	DWORD PTR _limitIndex$[ebp], 0
; Line 250
	cmp	DWORD PTR _hashTable, 0
	jne	SHORT $LN19@storeMappi@2
; Line 251
	jmp	$LN21@storeMappi@2
$LN19@storeMappi@2:
; Line 253
	mov	eax, DWORD PTR _hashTable
	push	eax
	call	_uhash_count_56
	add	esp, 4
	mov	DWORD PTR _elementCount$[ebp], eax
; Line 256
	push	2
	mov	eax, DWORD PTR _mappingDataCapacity
	push	eax
	call	_uprv_calloc_56
	add	esp, 8
	mov	DWORD PTR _mappingData, eax
$LN18@storeMappi@2:
; Line 258
	mov	eax, DWORD PTR _writtenElementCount$[ebp]
	cmp	eax, DWORD PTR _elementCount$[ebp]
	jge	$LN17@storeMappi@2
$LN16@storeMappi@2:
; Line 260
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hashTable
	push	ecx
	call	_uhash_nextElement_56
	add	esp, 8
	mov	DWORD PTR _element$[ebp], eax
	cmp	DWORD PTR _element$[ebp], 0
	je	$LN15@storeMappi@2
; Line 262
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _codepoint$[ebp], ecx
; Line 263
	mov	eax, DWORD PTR _element$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _value$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _oldMappingLength$[ebp]
	cmp	eax, DWORD PTR _mappingLength$[ebp]
	je	SHORT $LN14@storeMappi@2
; Line 268
	cmp	DWORD PTR _oldMappingLength$[ebp], 3
	jg	SHORT $LN13@storeMappi@2
; Line 269
	movsx	eax, WORD PTR _currentIndex
	mov	ecx, DWORD PTR _mappingLength$[ebp]
	mov	DWORD PTR _indexes[ecx*4+8], eax
$LN13@storeMappi@2:
; Line 272
	cmp	DWORD PTR _oldMappingLength$[ebp], 3
	jg	SHORT $LN12@storeMappi@2
	cmp	DWORD PTR _mappingLength$[ebp], 4
	jne	SHORT $LN12@storeMappi@2
; Line 274
	movsx	eax, WORD PTR _currentIndex
	mov	DWORD PTR _limitIndex$[ebp], eax
$LN12@storeMappi@2:
; Line 277
	mov	eax, DWORD PTR _mappingLength$[ebp]
	mov	DWORD PTR _oldMappingLength$[ebp], eax
$LN14@storeMappi@2:
; Line 280
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	cmp	ecx, DWORD PTR _mappingLength$[ebp]
	jne	$LN11@storeMappi@2
; Line 281
	mov	DWORD PTR _savedTrieWord$8923[ebp], 0
; Line 282
	movsx	eax, WORD PTR _currentIndex
	shl	eax, 2
	mov	WORD PTR _trieWord$[ebp], ax
; Line 284
	movzx	eax, WORD PTR _trieWord$[ebp]
	add	eax, 2
	mov	WORD PTR _trieWord$[ebp], ax
; Line 286
	movzx	eax, WORD PTR _trieWord$[ebp]
	cmp	eax, 65520				; 0000fff0H
	jle	SHORT $LN10@storeMappi@2
; Line 287
	mov	esi, esp
	push	65520					; 0000fff0H
	push	OFFSET ??_C@_0DE@GOBNNAGN@trieWord?5cannot?5contain?5value?5gr@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 288
	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@storeMappi@2:
; Line 291
	push	0
	mov	eax, DWORD PTR _codepoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sprepTrie
	push	ecx
	call	_utrie_get32_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _savedTrieWord$8923[ebp], eax
; Line 292
	cmp	DWORD PTR _savedTrieWord$8923[ebp], 0
	je	SHORT $LN9@storeMappi@2
; Line 293
	mov	eax, DWORD PTR _savedTrieWord$8923[ebp]
	sub	eax, 65520				; 0000fff0H
	cmp	eax, 2
	jne	SHORT $LN8@storeMappi@2
; Line 295
	movzx	eax, WORD PTR _trieWord$[ebp]
	add	eax, 1
	mov	WORD PTR _trieWord$[ebp], ax
; Line 296
	jmp	SHORT $LN9@storeMappi@2
$LN8@storeMappi@2:
; Line 301
	mov	esi, esp
	mov	eax, DWORD PTR _codepoint$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@IHNBFCKN@Type?5for?5codepoint?5?2U?$CF08X?5alread@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 302
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@storeMappi@2:
; Line 307
	movzx	eax, WORD PTR _trieWord$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codepoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sprepTrie
	push	edx
	call	_utrie_set32_56
	add	esp, 12					; 0000000cH
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN6@storeMappi@2
; Line 308
	mov	esi, esp
	push	OFFSET ??_C@_0CJ@FKJENIIC@Could?5not?5set?5the?5value?5for?5code@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 309
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@storeMappi@2:
; Line 313
	mov	eax, DWORD PTR _writtenElementCount$[ebp]
	add	eax, 1
	mov	DWORD PTR _writtenElementCount$[ebp], eax
; Line 316
	movsx	eax, WORD PTR _currentIndex
	mov	ecx, DWORD PTR _value$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	lea	eax, DWORD PTR [eax+edx+1]
	cmp	eax, 16319				; 00003fbfH
	jle	SHORT $LN5@storeMappi@2
; Line 318
	mov	esi, esp
	push	16319					; 00003fbfH
	movsx	eax, WORD PTR _currentIndex
	mov	ecx, DWORD PTR _value$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	add	eax, edx
	push	eax
	push	OFFSET ??_C@_0EB@GDLIIAFA@Too?5many?5entries?5in?5the?5mapping?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 319
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@storeMappi@2:
; Line 324
	cmp	DWORD PTR _mappingLength$[ebp], 3
	jle	SHORT $LN4@storeMappi@2
; Line 326
	movsx	eax, WORD PTR _currentIndex
	mov	ecx, DWORD PTR _mappingData
	mov	dx, WORD PTR _mappingLength$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	ax, WORD PTR _currentIndex
	add	ax, 1
	mov	WORD PTR _currentIndex, ax
$LN4@storeMappi@2:
; Line 329
	push	1
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _value$[ebp]
	movsx	eax, WORD PTR [edx+4]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	movsx	eax, WORD PTR _currentIndex
	mov	ecx, DWORD PTR _mappingData
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 330
	mov	eax, DWORD PTR _value$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	movsx	edx, WORD PTR _currentIndex
	add	edx, ecx
	mov	WORD PTR _currentIndex, dx
; Line 331
	movsx	eax, WORD PTR _currentIndex
	cmp	eax, DWORD PTR _mappingDataCapacity
	jle	SHORT $LN11@storeMappi@2
; Line 333
	mov	eax, DWORD PTR ?__LINE__Var@?1??storeMappingData@@9@9@39dcc198
	add	eax, 96					; 00000060H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DC@POONMHLH@d?3?2mozilla?2intl?2icu?2source?2tools@
	push	OFFSET ??_C@_0CN@DLNFECPO@gensprep?0?5fatal?5error?5at?5?$CFs?0?5?$CFd?4@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 334
	mov	esi, esp
	push	5
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@storeMappi@2:
; Line 337
	jmp	$LN16@storeMappi@2
$LN15@storeMappi@2:
; Line 338
	mov	eax, DWORD PTR _mappingLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _mappingLength$[ebp], eax
; Line 339
	mov	DWORD PTR _pos$[ebp], -1
; Line 340
	jmp	$LN18@storeMappi@2
$LN17@storeMappi@2:
; Line 342
	cmp	DWORD PTR _mappingLength$[ebp], 3
	jg	SHORT $LN2@storeMappi@2
; Line 343
	movsx	eax, WORD PTR _currentIndex
	add	eax, 1
	mov	ecx, DWORD PTR _mappingLength$[ebp]
	mov	DWORD PTR _indexes[ecx*4+8], eax
; Line 344
	jmp	SHORT $LN21@storeMappi@2
$LN2@storeMappi@2:
; Line 345
	mov	eax, DWORD PTR _limitIndex$[ebp]
	mov	DWORD PTR _indexes+24, eax
$LN21@storeMappi@2:
; Line 348
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@storeMappi@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN24@storeMappi@2:
	DD	1
	DD	$LN23@storeMappi@2
$LN23@storeMappi@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN22@storeMappi@2
$LN22@storeMappi@2:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_storeMappingData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _getFoldedValue
_TEXT	SEGMENT
_inBlockZero$ = -29					; size = 1
_limit$ = -20						; size = 4
_value$ = -8						; size = 4
_trie$ = 8						; size = 4
_start$ = 12						; size = 4
_offset$ = 16						; size = 4
_getFoldedValue PROC					; COMDAT
; Line 525
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 527
	mov	DWORD PTR _limit$[ebp], 0
; Line 530
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _limit$[ebp], eax
$LN6@getFoldedV:
; Line 531
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	SHORT $LN5@getFoldedV
; Line 532
	lea	eax, DWORD PTR _inBlockZero$[ebp]
	push	eax
	mov	ecx, DWORD PTR _start$[ebp]
	push	ecx
	mov	edx, DWORD PTR _trie$[ebp]
	push	edx
	call	_utrie_get32_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _value$[ebp], eax
; Line 533
	movsx	eax, BYTE PTR _inBlockZero$[ebp]
	test	eax, eax
	je	SHORT $LN4@getFoldedV
; Line 534
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _start$[ebp], eax
	jmp	SHORT $LN3@getFoldedV
$LN4@getFoldedV:
; Line 535
	cmp	DWORD PTR _value$[ebp], 0
	je	SHORT $LN2@getFoldedV
; Line 536
	mov	eax, DWORD PTR _offset$[ebp]
	jmp	SHORT $LN7@getFoldedV
; Line 537
	jmp	SHORT $LN3@getFoldedV
$LN2@getFoldedV:
; Line 538
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
$LN3@getFoldedV:
; Line 540
	jmp	SHORT $LN6@getFoldedV
$LN5@getFoldedV:
; Line 541
	xor	eax, eax
$LN7@getFoldedV:
; Line 543
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@getFoldedV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@getFoldedV:
	DD	1
	DD	$LN10@getFoldedV
$LN10@getFoldedV:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN9@getFoldedV
$LN9@getFoldedV:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	66					; 00000042H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	90					; 0000005aH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	0
_getFoldedValue ENDP
_TEXT	ENDS
PUBLIC	_cleanUpData
EXTRN	_utrie_close_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cleanUpData
_TEXT	SEGMENT
_cleanUpData PROC					; COMDAT
; Line 632
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 633
	mov	eax, DWORD PTR _mappingData
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 634
	mov	eax, DWORD PTR _sprepTrie
	push	eax
	call	_utrie_close_56
	add	esp, 4
; Line 635
	mov	eax, DWORD PTR _sprepTrie
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 636
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cleanUpData ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\gensprep\gensprep.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07GAJMMAJO@unicode?$AA@			; `string'
PUBLIC	??_C@_0L@LLFALIFM@check?9bidi?$AA@		; `string'
PUBLIC	??_C@_0BA@KEOMKGFI@norm?9correction?$AA@	; `string'
PUBLIC	??_C@_0O@CBFPFGOI@normalization?$AA@		; `string'
PUBLIC	??_C@_0M@BJHCIPFI@bundle?9name?$AA@		; `string'
PUBLIC	??_C@_0L@JMMPKMPC@icudatadir?$AA@		; `string'
PUBLIC	??_C@_09CMGPLHNH@sourcedir?$AA@			; `string'
PUBLIC	??_C@_07HIFNFPHK@destdir?$AA@			; `string'
PUBLIC	??_C@_09JHBDCMB@copyright?$AA@			; `string'
PUBLIC	??_C@_07KBAMPNJK@verbose?$AA@			; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	??_C@_0L@DKDHAHEG@TYPE_LIMIT?$AA@		; `string'
PUBLIC	??_C@_06FKDAMKFP@DELETE?$AA@			; `string'
PUBLIC	??_C@_0L@MKLPCMOG@PROHIBITED?$AA@		; `string'
PUBLIC	??_C@_03HMCGBKKA@MAP?$AA@			; `string'
PUBLIC	??_C@_0L@EGJECNPE@UNASSIGNED?$AA@		; `string'
PUBLIC	_beVerbose
PUBLIC	_haveCopyright
_BSS	SEGMENT
_beVerbose DB	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_07GAJMMAJO@unicode?$AA@
CONST	SEGMENT
??_C@_07GAJMMAJO@unicode?$AA@ DB 'unicode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLFALIFM@check?9bidi?$AA@
CONST	SEGMENT
??_C@_0L@LLFALIFM@check?9bidi?$AA@ DB 'check-bidi', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KEOMKGFI@norm?9correction?$AA@
CONST	SEGMENT
??_C@_0BA@KEOMKGFI@norm?9correction?$AA@ DB 'norm-correction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CBFPFGOI@normalization?$AA@
CONST	SEGMENT
??_C@_0O@CBFPFGOI@normalization?$AA@ DB 'normalization', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJHCIPFI@bundle?9name?$AA@
CONST	SEGMENT
??_C@_0M@BJHCIPFI@bundle?9name?$AA@ DB 'bundle-name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JMMPKMPC@icudatadir?$AA@
CONST	SEGMENT
??_C@_0L@JMMPKMPC@icudatadir?$AA@ DB 'icudatadir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CMGPLHNH@sourcedir?$AA@
CONST	SEGMENT
??_C@_09CMGPLHNH@sourcedir?$AA@ DB 'sourcedir', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HIFNFPHK@destdir?$AA@
CONST	SEGMENT
??_C@_07HIFNFPHK@destdir?$AA@ DB 'destdir', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JHBDCMB@copyright?$AA@
CONST	SEGMENT
??_C@_09JHBDCMB@copyright?$AA@ DB 'copyright', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KBAMPNJK@verbose?$AA@
CONST	SEGMENT
??_C@_07KBAMPNJK@verbose?$AA@ DB 'verbose', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
_usprepTypeNames DD FLAT:??_C@_0L@EGJECNPE@UNASSIGNED?$AA@
	DD	FLAT:??_C@_03HMCGBKKA@MAP?$AA@
	DD	FLAT:??_C@_0L@MKLPCMOG@PROHIBITED?$AA@
	DD	FLAT:??_C@_06FKDAMKFP@DELETE?$AA@
	DD	FLAT:??_C@_0L@DKDHAHEG@TYPE_LIMIT?$AA@
_haveCopyright DB 01H
	ORG $+3
_options DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	068H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_04PCJFHION@help?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	03fH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07KBAMPNJK@verbose?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	076H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09JHBDCMB@copyright?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	063H
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07HIFNFPHK@destdir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	064H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_09CMGPLHNH@sourcedir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	073H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@JMMPKMPC@icudatadir?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	069H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0M@BJHCIPFI@bundle?9name?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	062H
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0O@CBFPFGOI@normalization?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06eH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0BA@KEOMKGFI@norm?9correction?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06dH
	DB	01H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_0L@LLFALIFM@check?9bidi?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	06bH
	DB	00H
	DB	00H
	ORG $+1
	DD	FLAT:??_C@_07GAJMMAJO@unicode?$AA@
	DD	00H
	DD	00H
	DD	00H
	DB	075H
	DB	01H
	DB	00H
	ORG $+1
_DATA	ENDS
;	COMDAT ??_C@_0L@DKDHAHEG@TYPE_LIMIT?$AA@
CONST	SEGMENT
??_C@_0L@DKDHAHEG@TYPE_LIMIT?$AA@ DB 'TYPE_LIMIT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FKDAMKFP@DELETE?$AA@
CONST	SEGMENT
??_C@_06FKDAMKFP@DELETE?$AA@ DB 'DELETE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MKLPCMOG@PROHIBITED?$AA@
CONST	SEGMENT
??_C@_0L@MKLPCMOG@PROHIBITED?$AA@ DB 'PROHIBITED', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03HMCGBKKA@MAP?$AA@
CONST	SEGMENT
??_C@_03HMCGBKKA@MAP?$AA@ DB 'MAP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EGJECNPE@UNASSIGNED?$AA@
CONST	SEGMENT
??_C@_0L@EGJECNPE@UNASSIGNED?$AA@ DB 'UNASSIGNED', 00H	; `string'
CONST	ENDS
PUBLIC	??_C@_0CF@GHJMDFJG@Could?5not?5open?5file?5?$CFs?5for?5readi@ ; `string'
PUBLIC	??_C@_0BN@FJCMKHF@NormalizationCorrections?4txt?$AA@ ; `string'
PUBLIC	??_C@_0DA@CDGGEKBJ@Could?5not?5open?5file?5?$CFs?5for?5readi@ ; `string'
PUBLIC	??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ ; `string'
PUBLIC	??_C@_05JKEMNJNG@sprep?$AA@			; `string'
PUBLIC	??_C@_01GBGANLPD@0?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_main
EXTRN	_u_cleanup_56:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_cleanUpData:PROC
EXTRN	_generateData:PROC
EXTRN	_setOptions:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_init:PROC
EXTRN	_strcpy:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_strlen:PROC
EXTRN	_setUnicodeVersion:PROC
EXTRN	_u_setDataDirectory_56:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_parseArgs:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0CF@GHJMDFJG@Could?5not?5open?5file?5?$CFs?5for?5readi@
; File d:\mozilla\intl\icu\source\tools\gensprep\gensprep.c
CONST	SEGMENT
??_C@_0CF@GHJMDFJG@Could?5not?5open?5file?5?$CFs?5for?5readi@ DB 'Could n'
	DB	'ot open file %s for reading ', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FJCMKHF@NormalizationCorrections?4txt?$AA@
CONST	SEGMENT
??_C@_0BN@FJCMKHF@NormalizationCorrections?4txt?$AA@ DB 'NormalizationCor'
	DB	'rections.txt', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@CDGGEKBJ@Could?5not?5open?5file?5?$CFs?5for?5readi@
CONST	SEGMENT
??_C@_0DA@CDGGEKBJ@Could?5not?5open?5file?5?$CFs?5for?5readi@ DB 'Could n'
	DB	'ot open file %s for reading. Error: %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
CONST	SEGMENT
??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@ DB 'error in'
	DB	' command line argument "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JKEMNJNG@sprep?$AA@
CONST	SEGMENT
??_C@_05JKEMNJNG@sprep?$AA@ DB 'sprep', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0?$AA@
CONST	SEGMENT
??_C@_01GBGANLPD@0?$AA@ DB '0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_errorCode$ = -104					; size = 4
_sprepOptions$ = -92					; size = 4
_basename$ = -80					; size = 4
_inputFileName$ = -68					; size = 4
_bundleName$ = -56					; size = 4
_icuUniDataDir$ = -44					; size = 4
_destDir$ = -32						; size = 4
_srcDir$ = -20						; size = 4
_filename$ = -8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 138
	mov	DWORD PTR _filename$[ebp], 0
; Line 140
	mov	DWORD PTR _srcDir$[ebp], 0
	mov	DWORD PTR _destDir$[ebp], 0
	mov	DWORD PTR _icuUniDataDir$[ebp], 0
; Line 141
	mov	DWORD PTR _bundleName$[ebp], 0
	mov	DWORD PTR _inputFileName$[ebp], 0
; Line 142
	mov	DWORD PTR _basename$[ebp], 0
; Line 143
	mov	DWORD PTR _sprepOptions$[ebp], 0
; Line 145
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 150
	call	_u_getDataDirectory_56
	mov	DWORD PTR _options+84, eax
; Line 151
	mov	DWORD PTR _options+104, OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 152
	mov	DWORD PTR _options+224, OFFSET ??_C@_01GBGANLPD@0?$AA@
; Line 153
	mov	DWORD PTR _options+144, OFFSET ??_C@_05JKEMNJNG@sprep?$AA@
; Line 154
	mov	DWORD PTR _options+164, OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 156
	push	OFFSET _options
	push	12					; 0000000cH
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_u_parseArgs
	add	esp, 16					; 00000010H
	mov	DWORD PTR _argc$[ebp], eax
; Line 159
	cmp	DWORD PTR _argc$[ebp], 0
	jge	SHORT $LN18@main
; Line 162
	mov	eax, DWORD PTR _argc$[ebp]
	neg	eax
	mov	esi, esp
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_0CF@BGPNLJEE@error?5in?5command?5line?5argument?5?$CC@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@main:
; Line 164
	cmp	DWORD PTR _argc$[ebp], 0
	jl	SHORT $LN16@main
	movsx	eax, BYTE PTR _options+18
	test	eax, eax
	jne	SHORT $LN16@main
	movsx	eax, BYTE PTR _options+38
	test	eax, eax
	je	SHORT $LN17@main
$LN16@main:
; Line 165
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_printHelp
	add	esp, 8
	jmp	$LN19@main
$LN17@main:
; Line 170
	mov	al, BYTE PTR _options+58
	mov	BYTE PTR _beVerbose, al
; Line 171
	mov	al, BYTE PTR _options+78
	mov	BYTE PTR _haveCopyright, al
; Line 172
	mov	eax, DWORD PTR _options+104
	mov	DWORD PTR _srcDir$[ebp], eax
; Line 173
	mov	eax, DWORD PTR _options+84
	mov	DWORD PTR _destDir$[ebp], eax
; Line 174
	mov	eax, DWORD PTR _options+144
	mov	DWORD PTR _bundleName$[ebp], eax
; Line 175
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	je	SHORT $LN15@main
; Line 176
	mov	eax, DWORD PTR _options+164
	mov	DWORD PTR _icuUniDataDir$[ebp], eax
; Line 177
	jmp	SHORT $LN14@main
$LN15@main:
; Line 178
	mov	eax, DWORD PTR _options+184
	mov	DWORD PTR _icuUniDataDir$[ebp], eax
$LN14@main:
; Line 181
	cmp	DWORD PTR _argc$[ebp], 2
	jge	SHORT $LN13@main
; Line 183
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_printHelp
	add	esp, 8
	jmp	$LN19@main
; Line 184
	jmp	SHORT $LN12@main
$LN13@main:
; Line 185
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _inputFileName$[ebp], ecx
$LN12@main:
; Line 187
	movsx	eax, BYTE PTR _options+238
	test	eax, eax
	jne	SHORT $LN11@main
; Line 188
	mov	eax, DWORD PTR _argv$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argc$[ebp]
	push	ecx
	call	_printHelp
	add	esp, 8
	jmp	$LN19@main
$LN11@main:
; Line 190
	movsx	eax, BYTE PTR _options+138
	test	eax, eax
	je	SHORT $LN10@main
; Line 191
	mov	eax, DWORD PTR _options+124
	push	eax
	call	_u_setDataDirectory_56
	add	esp, 4
$LN10@main:
; Line 203
	mov	eax, DWORD PTR _options+224
	push	eax
	call	_setUnicodeVersion
	add	esp, 4
; Line 204
	mov	eax, DWORD PTR _srcDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 300				; 0000012cH
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _filename$[ebp], eax
; Line 207
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _srcDir$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@main
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _srcDir$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@main
; Line 208
	mov	eax, DWORD PTR _filename$[ebp]
	mov	BYTE PTR [eax], 46			; 0000002eH
; Line 209
	mov	eax, DWORD PTR _filename$[ebp]
	mov	BYTE PTR [eax+1], 92			; 0000005cH
; Line 210
	mov	eax, DWORD PTR _srcDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	add	ecx, 2
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 211
	jmp	SHORT $LN8@main
$LN9@main:
; Line 212
	mov	eax, DWORD PTR _srcDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN8@main:
; Line 215
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _basename$[ebp], eax
; Line 216
	mov	eax, DWORD PTR _basename$[ebp]
	cmp	eax, DWORD PTR _filename$[ebp]
	jbe	SHORT $LN7@main
	mov	eax, DWORD PTR _basename$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN7@main
; Line 217
	mov	eax, DWORD PTR _basename$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _basename$[ebp]
	add	ecx, 1
	mov	DWORD PTR _basename$[ebp], ecx
$LN7@main:
; Line 221
	call	_init
; Line 224
	mov	eax, DWORD PTR _inputFileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _basename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 225
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_parseMappings
	add	esp, 12					; 0000000cH
; Line 226
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN6@main
; Line 227
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DA@CDGGEKBJ@Could?5not?5open?5file?5?$CFs?5for?5readi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 228
	mov	eax, DWORD PTR _errorCode$[ebp]
	jmp	$LN19@main
$LN6@main:
; Line 231
	movsx	eax, BYTE PTR _options+178
	test	eax, eax
	je	$LN5@main
; Line 233
	mov	eax, DWORD PTR _icuUniDataDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 234
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _basename$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _basename$[ebp]
	cmp	eax, DWORD PTR _filename$[ebp]
	jbe	SHORT $LN4@main
	mov	eax, DWORD PTR _basename$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN4@main
; Line 236
	mov	eax, DWORD PTR _basename$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _basename$[ebp]
	add	ecx, 1
	mov	DWORD PTR _basename$[ebp], ecx
$LN4@main:
; Line 239
	mov	eax, DWORD PTR _basename$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _basename$[ebp]
	add	ecx, 1
	mov	DWORD PTR _basename$[ebp], ecx
; Line 240
	push	OFFSET ??_C@_0BN@FJCMKHF@NormalizationCorrections?4txt?$AA@
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 242
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_parseNormalizationCorrections
	add	esp, 8
; Line 243
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN3@main
; Line 244
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CF@GHJMDFJG@Could?5not?5open?5file?5?$CFs?5for?5readi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	mov	eax, DWORD PTR _errorCode$[ebp]
	jmp	SHORT $LN19@main
$LN3@main:
; Line 247
	mov	eax, DWORD PTR _sprepOptions$[ebp]
	or	eax, 1
	mov	DWORD PTR _sprepOptions$[ebp], eax
$LN5@main:
; Line 250
	movsx	eax, BYTE PTR _options+218
	test	eax, eax
	je	SHORT $LN2@main
; Line 251
	mov	eax, DWORD PTR _sprepOptions$[ebp]
	or	eax, 2
	mov	DWORD PTR _sprepOptions$[ebp], eax
$LN2@main:
; Line 254
	mov	eax, DWORD PTR _sprepOptions$[ebp]
	push	eax
	call	_setOptions
	add	esp, 4
; Line 257
	cmp	DWORD PTR _errorCode$[ebp], 0
	jg	SHORT $LN1@main
; Line 259
	mov	eax, DWORD PTR _bundleName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _destDir$[ebp]
	push	ecx
	call	_generateData
	add	esp, 8
; Line 261
	call	_cleanUpData
$LN1@main:
; Line 264
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 266
	call	_u_cleanup_56
; Line 270
	mov	eax, DWORD PTR _errorCode$[ebp]
$LN19@main:
; Line 271
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@main
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN23@main:
	DD	1
	DD	$LN22@main
$LN22@main:
	DD	-104					; ffffff98H
	DD	4
	DD	$LN21@main
$LN21@main:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_main	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0LF@CNCLFNBM@?7?9k?5or?5?9?9check?9bidi?5?5?5?5?5?5?5turn?5o@ ; `string'
PUBLIC	??_C@_0BBL@NHGGMAGK@?7?9m?5or?5?9?9norm?9correction?5?5use?5No@ ; `string'
PUBLIC	??_C@_0OD@EIKMCMPL@?7?9n?5or?5?9?9normalize?5?5?5?5?5?5?5?5turn?5o@ ; `string'
PUBLIC	??_C@_0BHD@PMHHOGAL@?7?9d?5or?5?9?9destdir?5?5?5?5?5?5?5?5?5?5destin@ ; `string'
PUBLIC	??_C@_0JI@BPOBICIF@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@ ; `string'
PUBLIC	??_C@_0JI@DMEKMENM@Usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLfile_name?$FN@ ; `string'
;	COMDAT ??_C@_0LF@CNCLFNBM@?7?9k?5or?5?9?9check?9bidi?5?5?5?5?5?5?5turn?5o@
CONST	SEGMENT
??_C@_0LF@CNCLFNBM@?7?9k?5or?5?9?9check?9bidi?5?5?5?5?5?5?5turn?5o@ DB 09H
	DB	'-k or --check-bidi       turn on the option for checking for '
	DB	'BiDi in the profile', 0aH, 09H, '-u or --unicode          ver'
	DB	'sion of Unicode to be used with this profile followed by the '
	DB	'version', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBL@NHGGMAGK@?7?9m?5or?5?9?9norm?9correction?5?5use?5No@
CONST	SEGMENT
??_C@_0BBL@NHGGMAGK@?7?9m?5or?5?9?9norm?9correction?5?5use?5No@ DB 09H, '-'
	DB	'm or --norm-correction  use NormalizationCorrections.txt from'
	DB	' the given path', 0aH, 09H, '                         when th'
	DB	'e input file contains a normalization directive.', 0aH, 09H, ' '
	DB	'                        unlike -n/--normalize, this option do'
	DB	'es not force the', 0aH, 09H, '                         normal'
	DB	'ization.', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0OD@EIKMCMPL@?7?9n?5or?5?9?9normalize?5?5?5?5?5?5?5?5turn?5o@
CONST	SEGMENT
??_C@_0OD@EIKMCMPL@?7?9n?5or?5?9?9normalize?5?5?5?5?5?5?5?5turn?5o@ DB 09H
	DB	'-n or --normalize        turn on the option for normalization'
	DB	' and include mappings', 0aH, 09H, '                         f'
	DB	'rom NormalizationCorrections.txt from the given path,', 0aH, 09H
	DB	'                         e.g: /test/icu/source/data/unidata', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BHD@PMHHOGAL@?7?9d?5or?5?9?9destdir?5?5?5?5?5?5?5?5?5?5destin@
CONST	SEGMENT
??_C@_0BHD@PMHHOGAL@?7?9d?5or?5?9?9destdir?5?5?5?5?5?5?5?5?5?5destin@ DB 09H
	DB	'-d or --destdir          destination directory, followed by t'
	DB	'he path', 0aH, 09H, '-s or --sourcedir        source director'
	DB	'y of ICU data, followed by the path', 0aH, 09H, '-b or --bund'
	DB	'le-name      generate the ouput data file with the name speci'
	DB	'fied', 0aH, 09H, '-i or --icudatadir       directory for loca'
	DB	'ting any needed intermediate data files,', 0aH, 09H, '       '
	DB	'                  followed by path, defaults to %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JI@BPOBICIF@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@
CONST	SEGMENT
??_C@_0JI@BPOBICIF@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@ DB 'O'
	DB	'ptions:', 0aH, 09H, '-h or -? or --help       print this usag'
	DB	'e text', 0aH, 09H, '-v or --verbose          verbose output', 0aH
	DB	09H, '-c or --copyright        include a copyright notice', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0JI@DMEKMENM@Usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLfile_name?$FN@
CONST	SEGMENT
??_C@_0JI@DMEKMENM@Usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLfile_name?$FN@ DB 'U'
	DB	'sage: %s [-options] [file_name]', 0aH, 0aH, 'Read the files s'
	DB	'pecified and', 0aH, 'create a binary file [package-name]_[bun'
	DB	'dle-name].spp with the StringPrep profile data', 0aH, 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _printHelp
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_printHelp PROC						; COMDAT
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 105
	mov	esi, esp
	mov	eax, DWORD PTR _argv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0JI@DMEKMENM@Usage?3?5?$CFs?5?$FL?9options?$FN?5?$FLfile_name?$FN@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 110
	mov	esi, esp
	push	OFFSET ??_C@_0JI@BPOBICIF@Options?3?6?7?9h?5or?5?9?$DP?5or?5?9?9help?5?5?5?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 117
	call	_u_getDataDirectory_56
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0BHD@PMHHOGAL@?7?9d?5or?5?9?9destdir?5?5?5?5?5?5?5?5?5?5destin@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	mov	esi, esp
	push	OFFSET ??_C@_0OD@EIKMCMPL@?7?9n?5or?5?9?9normalize?5?5?5?5?5?5?5?5turn?5o@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	mov	esi, esp
	push	OFFSET ??_C@_0BBL@NHGGMAGK@?7?9m?5or?5?9?9norm?9correction?5?5use?5No@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 130
	mov	esi, esp
	push	OFFSET ??_C@_0LF@CNCLFNBM@?7?9k?5or?5?9?9check?9bidi?5?5?5?5?5?5?5turn?5o@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	xor	eax, eax
	cmp	DWORD PTR _argc$[ebp], 0
	setl	al
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printHelp ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DI@DEGGMNCB@gensprep?5error?3?5u_parseDelimited@ ; `string'
EXTRN	__imp__exit:PROC
EXTRN	_u_parseDelimitedFile:PROC
;	COMDAT ??_C@_0DI@DEGGMNCB@gensprep?5error?3?5u_parseDelimited@
CONST	SEGMENT
??_C@_0DI@DEGGMNCB@gensprep?5error?3?5u_parseDelimited@ DB 'gensprep erro'
	DB	'r: u_parseDelimitedFile("%s") failed - %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _parseNormalizationCorrections
_TEXT	SEGMENT
_fields$ = -36						; size = 32
_filename$ = 8						; size = 4
_pErrorCode$ = 12					; size = 4
_parseNormalizationCorrections PROC			; COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 324
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN2@parseNorma
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@parseNorma
$LN2@parseNorma:
; Line 325
	jmp	$LN5@parseNorma
$LN3@parseNorma:
; Line 328
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	0
	push	OFFSET _normalizationCorrectionsLineFn
	push	4
	lea	ecx, DWORD PTR _fields$[ebp]
	push	ecx
	push	59					; 0000003bH
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	call	_u_parseDelimitedFile
	add	esp, 28					; 0000001cH
; Line 332
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@parseNorma
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN5@parseNorma
; Line 333
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@DEGGMNCB@gensprep?5error?3?5u_parseDelimited@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 334
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@parseNorma:
; Line 336
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@parseNorma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@parseNorma:
	DD	1
	DD	$LN7@parseNorma
$LN7@parseNorma:
	DD	-36					; ffffffdcH
	DD	32					; 00000020H
	DD	$LN6@parseNorma
$LN6@parseNorma:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
_parseNormalizationCorrections ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EF@PJBMCDKG@gensprep?5error?5parsing?5Normaliza@ ; `string'
PUBLIC	??_C@_05FJFNHAJ@3?42?40?$AA@			; `string'
PUBLIC	??_C@_0EE@LNADDJOJ@gensprep?3?5error?5parsing?5Normaliz@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_setUnicodeVersionNC:PROC
EXTRN	_storeMapping:PROC
EXTRN	_u_versionFromString_56:PROC
EXTRN	_u_parseCodePoints:PROC
EXTRN	__imp__strtoul:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0EF@PJBMCDKG@gensprep?5error?5parsing?5Normaliza@
CONST	SEGMENT
??_C@_0EF@PJBMCDKG@gensprep?5error?5parsing?5Normaliza@ DB 'gensprep erro'
	DB	'r parsing NormalizationCorrections.txt of U+%04lx - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FJFNHAJ@3?42?40?$AA@
CONST	SEGMENT
??_C@_05FJFNHAJ@3?42?40?$AA@ DB '3.2.0', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@LNADDJOJ@gensprep?3?5error?5parsing?5Normaliz@
CONST	SEGMENT
??_C@_0EE@LNADDJOJ@gensprep?3?5error?5parsing?5Normaliz@ DB 'gensprep: er'
	DB	'ror parsing NormalizationCorrections.txt mapping at %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _normalizationCorrectionsLineFn
_TEXT	SEGMENT
_thisVersion$ = -240					; size = 4
_version$ = -228					; size = 4
_length$ = -216						; size = 4
_code$ = -204						; size = 4
_s$ = -192						; size = 4
_end$ = -180						; size = 4
_mapping$ = -168					; size = 160
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_fields$ = 12						; size = 4
_fieldCount$ = 16					; size = 4
_pErrorCode$ = 20					; size = 4
_normalizationCorrectionsLineFn PROC			; COMDAT
; Line 278
	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 287
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fields$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _code$[ebp], eax
; Line 288
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN4@normalizat
; Line 289
	mov	esi, esp
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0EE@LNADDJOJ@gensprep?3?5error?5parsing?5Normaliz@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 290
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@normalizat:
; Line 293
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _s$[ebp], ecx
; Line 296
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	40					; 00000028H
	lea	ecx, DWORD PTR _mapping$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_u_parseCodePoints
	add	esp, 16					; 00000010H
	mov	DWORD PTR _length$[ebp], eax
; Line 300
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	lea	edx, DWORD PTR _version$[ebp]
	push	edx
	call	_u_versionFromString_56
	add	esp, 8
; Line 301
	push	OFFSET ??_C@_05FJFNHAJ@3?42?40?$AA@
	lea	eax, DWORD PTR _thisVersion$[ebp]
	push	eax
	call	_u_versionFromString_56
	add	esp, 8
; Line 305
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@normalizat
; Line 307
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _code$[ebp]
	push	edx
	push	OFFSET ??_C@_0EF@PJBMCDKG@gensprep?5error?5parsing?5Normaliza@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@normalizat:
; Line 314
	movzx	eax, BYTE PTR _version$[ebp]
	movzx	ecx, BYTE PTR _thisVersion$[ebp]
	cmp	eax, ecx
	jg	SHORT $LN1@normalizat
	movzx	eax, BYTE PTR _version$[ebp]
	movzx	ecx, BYTE PTR _thisVersion$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN2@normalizat
	movzx	eax, BYTE PTR _version$[ebp+1]
	movzx	ecx, BYTE PTR _thisVersion$[ebp+1]
	cmp	eax, ecx
	jle	SHORT $LN2@normalizat
$LN1@normalizat:
; Line 315
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _mapping$[ebp]
	push	edx
	mov	eax, DWORD PTR _code$[ebp]
	push	eax
	call	_storeMapping
	add	esp, 20					; 00000014H
$LN2@normalizat:
; Line 317
	lea	eax, DWORD PTR _version$[ebp]
	push	eax
	call	_setUnicodeVersionNC
	add	esp, 4
$LN6@normalizat:
; Line 318
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@normalizat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@normalizat:
	DD	4
	DD	$LN11@normalizat
$LN11@normalizat:
	DD	-168					; ffffff58H
	DD	160					; 000000a0H
	DD	$LN7@normalizat
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN8@normalizat
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN9@normalizat
	DD	-240					; ffffff10H
	DD	4
	DD	$LN10@normalizat
$LN10@normalizat:
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN9@normalizat:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN8@normalizat:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN7@normalizat:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_normalizationCorrectionsLineFn ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _parseMappings
_TEXT	SEGMENT
_fields$ = -28						; size = 24
_filename$ = 8						; size = 4
_reportError$ = 12					; size = 1
_pErrorCode$ = 16					; size = 4
_parseMappings PROC					; COMDAT
; Line 426
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 429
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN3@parseMappi
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN4@parseMappi
$LN3@parseMappi:
; Line 430
	jmp	$LN6@parseMappi
$LN4@parseMappi:
; Line 433
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET _strprepProfileLineFn
	push	3
	lea	edx, DWORD PTR _fields$[ebp]
	push	edx
	push	59					; 0000003bH
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_u_parseDelimitedFile
	add	esp, 28					; 0000001cH
; Line 437
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN6@parseMappi
	movsx	eax, BYTE PTR _reportError$[ebp]
	test	eax, eax
	jne	SHORT $LN1@parseMappi
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 4
	je	SHORT $LN6@parseMappi
$LN1@parseMappi:
; Line 438
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	OFFSET ??_C@_0DI@DEGGMNCB@gensprep?5error?3?5u_parseDelimited@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 439
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@parseMappi:
; Line 441
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@parseMappi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@parseMappi:
	DD	1
	DD	$LN8@parseMappi
$LN8@parseMappi:
	DD	-28					; ffffffe4H
	DD	24					; 00000018H
	DD	$LN7@parseMappi
$LN7@parseMappi:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
_parseMappings ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DF@HOEOGPDN@gensprep?5error?5parsing?5?5?$CFs?5line?5@ ; `string'
PUBLIC	??_C@_0CJ@EJMINABD@gensprep?3?5syntax?5error?5in?5field?5@ ; `string'
PUBLIC	??_C@_0CN@OOIHADBD@Could?5not?5parse?5code?5point?5range@ ; `string'
PUBLIC	??_C@_0CH@PDKPCGHF@gensprep?5error?5parsing?5a?5directi@ ; `string'
PUBLIC	??_C@_09MMDNNKKJ@normalize?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	_storeRange:PROC
EXTRN	_u_parseCodePointRange:PROC
EXTRN	__imp__strstr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	_u_skipWhitespace:PROC
;	COMDAT ??_C@_0DF@HOEOGPDN@gensprep?5error?5parsing?5?5?$CFs?5line?5@
CONST	SEGMENT
??_C@_0DF@HOEOGPDN@gensprep?5error?5parsing?5?5?$CFs?5line?5@ DB 'genspre'
	DB	'p error parsing  %s line %s at %s. Error: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@EJMINABD@gensprep?3?5syntax?5error?5in?5field?5@
CONST	SEGMENT
??_C@_0CJ@EJMINABD@gensprep?3?5syntax?5error?5in?5field?5@ DB 'gensprep: '
	DB	'syntax error in field 0 at %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OOIHADBD@Could?5not?5parse?5code?5point?5range@
CONST	SEGMENT
??_C@_0CN@OOIHADBD@Could?5not?5parse?5code?5point?5range@ DB 'Could not p'
	DB	'arse code point range. Error: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PDKPCGHF@gensprep?5error?5parsing?5a?5directi@
CONST	SEGMENT
??_C@_0CH@PDKPCGHF@gensprep?5error?5parsing?5a?5directi@ DB 'gensprep err'
	DB	'or parsing a directive %s.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MMDNNKKJ@normalize?$AA@
CONST	SEGMENT
??_C@_09MMDNNKKJ@normalize?$AA@ DB 'normalize', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _strprepProfileLineFn
_TEXT	SEGMENT
_s$ = -276						; size = 4
_filename$ = -264					; size = 4
_rangeEnd$ = -252					; size = 4
_rangeStart$ = -240					; size = 4
_typeName$ = -228					; size = 4
_length$ = -216						; size = 4
_code$ = -204						; size = 4
_map$ = -192						; size = 4
_end$ = -180						; size = 4
_mapping$ = -168					; size = 160
__$ArrayPad$ = -4					; size = 4
_context$ = 8						; size = 4
_fields$ = 12						; size = 4
_fieldCount$ = 16					; size = 4
_pErrorCode$ = 20					; size = 4
_strprepProfileLineFn PROC				; COMDAT
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 348
	mov	DWORD PTR _rangeStart$[ebp], 0
	mov	DWORD PTR _rangeEnd$[ebp], 0
; Line 349
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _filename$[ebp], eax
; Line 352
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 353
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 64					; 00000040H
	jne	$LN16@strprepPro
; Line 355
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 356
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR _length$[ebp], ecx
; Line 358
	cmp	DWORD PTR _length$[ebp], 9
	jl	SHORT $LN15@strprepPro
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_09MMDNNKKJ@normalize?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	9
	push	OFFSET ??_C@_09MMDNNKKJ@normalize?$AA@
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN15@strprepPro
; Line 359
	mov	BYTE PTR _options+178, 1
; Line 360
	jmp	$LN18@strprepPro
; Line 362
	jmp	$LN16@strprepPro
$LN15@strprepPro:
; Line 363
	cmp	DWORD PTR _length$[ebp], 10		; 0000000aH
	jl	SHORT $LN13@strprepPro
	push	1
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	push	1
	push	OFFSET ??_C@_0L@LLFALIFM@check?9bidi?$AA@
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	push	10					; 0000000aH
	push	OFFSET ??_C@_0L@LLFALIFM@check?9bidi?$AA@
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN13@strprepPro
; Line 364
	mov	BYTE PTR _options+218, 1
; Line 365
	jmp	$LN18@strprepPro
; Line 367
	jmp	SHORT $LN16@strprepPro
$LN13@strprepPro:
; Line 368
	mov	esi, esp
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CH@PDKPCGHF@gensprep?5error?5parsing?5a?5directi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@strprepPro:
; Line 372
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _typeName$[ebp], ecx
; Line 373
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _map$[ebp], ecx
; Line 375
	mov	esi, esp
	mov	eax, DWORD PTR _usprepTypeNames
	push	eax
	mov	ecx, DWORD PTR _typeName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN11@strprepPro
; Line 377
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rangeEnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rangeStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_parseCodePointRange
	add	esp, 16					; 00000010H
; Line 378
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN10@strprepPro
; Line 379
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CN@OOIHADBD@Could?5not?5parse?5code?5point?5range@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 380
	jmp	$LN18@strprepPro
$LN10@strprepPro:
; Line 384
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rangeStart$[ebp]
	push	edx
	call	_storeRange
	add	esp, 16					; 00000010H
	jmp	$LN9@strprepPro
$LN11@strprepPro:
; Line 386
	mov	esi, esp
	mov	eax, DWORD PTR _usprepTypeNames+8
	push	eax
	mov	ecx, DWORD PTR _typeName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN8@strprepPro
; Line 388
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rangeEnd$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rangeStart$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_parseCodePointRange
	add	esp, 16					; 00000010H
; Line 389
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@strprepPro
; Line 390
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CN@OOIHADBD@Could?5not?5parse?5code?5point?5range@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 391
	jmp	$LN18@strprepPro
$LN7@strprepPro:
; Line 395
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _rangeEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rangeStart$[ebp]
	push	edx
	call	_storeRange
	add	esp, 16					; 00000010H
	jmp	$LN9@strprepPro
$LN8@strprepPro:
; Line 397
	mov	esi, esp
	mov	eax, DWORD PTR _usprepTypeNames+4
	push	eax
	mov	ecx, DWORD PTR _typeName$[ebp]
	push	ecx
	call	DWORD PTR __imp__strstr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN5@strprepPro
; Line 400
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _code$[ebp], eax
; Line 401
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN3@strprepPro
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN4@strprepPro
$LN3@strprepPro:
; Line 402
	mov	esi, esp
	mov	eax, DWORD PTR _fields$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CJ@EJMINABD@gensprep?3?5syntax?5error?5in?5field?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 403
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 404
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@strprepPro:
; Line 408
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	40					; 00000028H
	lea	ecx, DWORD PTR _mapping$[ebp]
	push	ecx
	mov	edx, DWORD PTR _map$[ebp]
	push	edx
	call	_u_parseCodePoints
	add	esp, 16					; 00000010H
	mov	DWORD PTR _length$[ebp], eax
; Line 411
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _mapping$[ebp]
	push	edx
	mov	eax, DWORD PTR _code$[ebp]
	push	eax
	call	_storeMapping
	add	esp, 20					; 00000014H
; Line 413
	jmp	SHORT $LN9@strprepPro
$LN5@strprepPro:
; Line 414
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 3
$LN9@strprepPro:
; Line 417
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN18@strprepPro
; Line 419
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _fields$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _fields$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DF@HOEOGPDN@gensprep?5error?5parsing?5?5?$CFs?5line?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 420
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@strprepPro:
; Line 423
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@strprepPro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@strprepPro:
	DD	4
	DD	$LN23@strprepPro
$LN23@strprepPro:
	DD	-168					; ffffff58H
	DD	160					; 000000a0H
	DD	$LN19@strprepPro
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN20@strprepPro
	DD	-240					; ffffff10H
	DD	4
	DD	$LN21@strprepPro
	DD	-252					; ffffff04H
	DD	4
	DD	$LN22@strprepPro
$LN22@strprepPro:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN21@strprepPro:
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN20@strprepPro:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN19@strprepPro:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_strprepProfileLineFn ENDP
_TEXT	ENDS
END

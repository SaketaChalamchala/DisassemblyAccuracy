; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\gfx\2d\ScaledFontDWrite.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG153117 DB	'Failed to create Direct2D stroke style.', 00H
$SG4890	DB	'Assertion failure: %s, at %s:%d', 0aH, 00H
	ORG $+3
$SG4896	DB	'Hit MOZ_CRASH(%s) at %s:%d', 0aH, 00H
CONST	ENDS
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??$_Debug_range@PAG@std@@YAXPAG0PB_WI@Z		; std::_Debug_range<unsigned short *>
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z		; std::_Debug_pointer<unsigned short>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
PUBLIC	?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ ; mozilla::gfx::PathBuilderD2D::GetSink
PUBLIC	?get@?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ; RefPtr<ID2D1GeometrySink>::get
PUBLIC	??B?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ; RefPtr<ID2D1GeometrySink>::operator ID2D1GeometrySink *
PUBLIC	?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z ; mozilla::gfx::ScaledFontDWrite::GetPathForGlyphs
PUBLIC	?CopyGlyphsToBuilder@ScaledFontDWrite@gfx@mozilla@@UAEXABUGlyphBuffer@23@PAVPathBuilder@23@W4BackendType@23@PBVMatrix@23@@Z ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToBuilder
PUBLIC	?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToSink
PUBLIC	?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z ; mozilla::gfx::ScaledFontDWrite::GetFontFileData
PUBLIC	?GetDefaultAAMode@ScaledFontDWrite@gfx@mozilla@@UAE?AW4AntialiasMode@23@XZ ; mozilla::gfx::ScaledFontDWrite::GetDefaultAAMode
PUBLIC	?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::get
PUBLIC	??B?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator IDWriteFontFace *
PUBLIC	??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator->
PUBLIC	??0?$allocator@M@std@@QAE@XZ			; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QAEXPAMI@Z	; std::allocator<float>::deallocate
PUBLIC	?allocate@?$allocator@M@std@@QAEPAMI@Z		; std::allocator<float>::allocate
PUBLIC	?max_size@?$allocator@M@std@@QBEIXZ		; std::allocator<float>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z ; std::allocator_traits<std::allocator<float> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<float> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::capacity
PUBLIC	?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::_Unused_capacity
PUBLIC	?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::begin
PUBLIC	?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ; std::vector<float,std::allocator<float> >::resize
PUBLIC	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
PUBLIC	?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::max_size
PUBLIC	?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ ; std::vector<float,std::allocator<float> >::front
PUBLIC	?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ; std::vector<float,std::allocator<float> >::_Pop_back_n
PUBLIC	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
PUBLIC	?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z ; std::vector<float,std::allocator<float> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ; std::vector<float,std::allocator<float> >::_Reallocate
PUBLIC	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ; std::vector<float,std::allocator<float> >::_Reserve
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ ; std::vector<float,std::allocator<float> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
PUBLIC	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
PUBLIC	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
PUBLIC	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
PUBLIC	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
PUBLIC	?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::take
PUBLIC	??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
PUBLIC	??0?$allocator@G@std@@QAE@XZ			; std::allocator<unsigned short>::allocator<unsigned short>
PUBLIC	?deallocate@?$allocator@G@std@@QAEXPAGI@Z	; std::allocator<unsigned short>::deallocate
PUBLIC	?allocate@?$allocator@G@std@@QAEPAGI@Z		; std::allocator<unsigned short>::allocate
PUBLIC	?max_size@?$allocator@G@std@@QBEIXZ		; std::allocator<unsigned short>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@G@std@@@std@@SAIABV?$allocator@G@2@@Z ; std::allocator_traits<std::allocator<unsigned short> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned short> >::_Wrap_alloc<std::allocator<unsigned short> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned short> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned short> >::_Vector_val<std::_Simple_types<unsigned short> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned short> >::~_Vector_val<std::_Simple_types<unsigned short> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::~_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
PUBLIC	??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >
PUBLIC	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
PUBLIC	?capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::capacity
PUBLIC	?_Unused_capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unused_capacity
PUBLIC	?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@2@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
PUBLIC	?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::resize
PUBLIC	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
PUBLIC	?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
PUBLIC	??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
PUBLIC	?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::front
PUBLIC	?_Pop_back_n@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Pop_back_n
PUBLIC	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
PUBLIC	?_Grow_to@?$vector@GV?$allocator@G@std@@@std@@IBEII@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reallocate
PUBLIC	?_Reserve@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reserve
PUBLIC	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
PUBLIC	?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Orphan_range
PUBLIC	??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ ; std::allocator<DWRITE_GLYPH_OFFSET>::allocator<DWRITE_GLYPH_OFFSET>
PUBLIC	?deallocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::deallocate
PUBLIC	?allocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::allocate
PUBLIC	?construct@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::construct
PUBLIC	?max_size@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QBEIXZ ; std::allocator<DWRITE_GLYPH_OFFSET>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAIABV?$allocator@UDWRITE_GLYPH_OFFSET@@@2@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate
PUBLIC	?construct@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::~_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::~_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
PUBLIC	??0?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
PUBLIC	??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::~vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
PUBLIC	?capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Unused_capacity
PUBLIC	?begin@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@2@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::begin
PUBLIC	?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::resize
PUBLIC	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
PUBLIC	?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
PUBLIC	??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::operator[]
PUBLIC	?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::front
PUBLIC	?_Pop_back_n@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Pop_back_n
PUBLIC	?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEII@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Grow_to
PUBLIC	?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reserve
PUBLIC	?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Tidy
PUBLIC	?_Xlen@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Orphan_range
PUBLIC	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFile@@@@AAEXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::assign_assuming_AddRef
PUBLIC	??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ		; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>
PUBLIC	??0?$RefPtr@UIDWriteFontFile@@@@QAE@XZ		; RefPtr<IDWriteFontFile>::RefPtr<IDWriteFontFile>
PUBLIC	?get@?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::get
PUBLIC	??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::operator->
PUBLIC	?StartAssignment@?$RefPtr@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::StartAssignment
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFile@@@@CAXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::AddRefTraitsReleaseHelper
PUBLIC	??$getter_AddRefs@UIDWriteFontFile@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ; getter_AddRefs<IDWriteFontFile>
PUBLIC	??0?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAE@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFile>::RefPtrGetterAddRefs<IDWriteFontFile>
PUBLIC	??B?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ; RefPtrGetterAddRefs<IDWriteFontFile>::operator IDWriteFontFile * *
PUBLIC	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileLoader@@@@AAEXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::assign_assuming_AddRef
PUBLIC	??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ	; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>
PUBLIC	??0?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ	; RefPtr<IDWriteFontFileLoader>::RefPtr<IDWriteFontFileLoader>
PUBLIC	?get@?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::get
PUBLIC	??C?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::operator->
PUBLIC	?StartAssignment@?$RefPtr@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::StartAssignment
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileLoader@@@@CAXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::AddRefTraitsReleaseHelper
PUBLIC	??$getter_AddRefs@UIDWriteFontFileLoader@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ; getter_AddRefs<IDWriteFontFileLoader>
PUBLIC	??0?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAE@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::RefPtrGetterAddRefs<IDWriteFontFileLoader>
PUBLIC	??B?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::operator IDWriteFontFileLoader * *
PUBLIC	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileStream@@@@AAEXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::assign_assuming_AddRef
PUBLIC	??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ	; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>
PUBLIC	??0?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ	; RefPtr<IDWriteFontFileStream>::RefPtr<IDWriteFontFileStream>
PUBLIC	?get@?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::get
PUBLIC	??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::operator->
PUBLIC	?StartAssignment@?$RefPtr@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::StartAssignment
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileStream@@@@CAXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::AddRefTraitsReleaseHelper
PUBLIC	??$getter_AddRefs@UIDWriteFontFileStream@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ; getter_AddRefs<IDWriteFontFileStream>
PUBLIC	??0?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAE@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFileStream>::RefPtrGetterAddRefs<IDWriteFontFileStream>
PUBLIC	??B?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ; RefPtrGetterAddRefs<IDWriteFontFileStream>::operator IDWriteFontFileStream * *
PUBLIC	??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_default_fill_n<float *,unsigned int,std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
PUBLIC	??$_Uninitialized_default_fill_n@PAGIU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninitialized_default_fill_n<unsigned short *,unsigned int,std::_Wrap_alloc<std::allocator<unsigned short> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEABGXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEAAGXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
PUBLIC	??$_Uninitialized_default_fill_n@PAUDWRITE_GLYPH_OFFSET@@IU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEABUDWRITE_GLYPH_OFFSET@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEAAUDWRITE_GLYPH_OFFSET@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
PUBLIC	?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::AddRefTraits<IDWriteFontFile>::Release
PUBLIC	?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::AddRefTraits<IDWriteFontFileLoader>::Release
PUBLIC	?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::AddRefTraits<IDWriteFontFileStream>::Release
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z ; std::vector<float,std::allocator<float> >::_Umove<float *>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
PUBLIC	??$_Umove@PAG@?$vector@GV?$allocator@G@std@@@std@@IAEPAGPAG00@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Umove<unsigned short *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??$_Umove@PAUDWRITE_GLYPH_OFFSET@@@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEPAUDWRITE_GLYPH_OFFSET@@PAU2@00@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Umove<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$_Allocate@M@std@@YAPAMIPAM@Z			; std::_Allocate<float>
PUBLIC	??$_Allocate@G@std@@YAPAGIPAG@Z			; std::_Allocate<unsigned short>
PUBLIC	??$_Allocate@UDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@IPAU1@@Z ; std::_Allocate<DWRITE_GLYPH_OFFSET>
PUBLIC	??$_Iter_cat@PAG@std@@YA?AUrandom_access_iterator_tag@0@ABQAG@Z ; std::_Iter_cat<unsigned short *>
PUBLIC	??$_Debug_range2@PAG@std@@YAXPAG0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<unsigned short *>
PUBLIC	??$_Val_type@PAM@std@@YAPAMPAM@Z		; std::_Val_type<float *>
PUBLIC	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
PUBLIC	??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<float,unsigned int,float>
PUBLIC	??$_Val_type@PAG@std@@YAPAGPAG@Z		; std::_Val_type<unsigned short *>
PUBLIC	??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z ; std::_Ptr_cat<unsigned short,unsigned short>
PUBLIC	??$_Uninit_def_fill_n@GIG@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<unsigned short,unsigned int,unsigned short>
PUBLIC	??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Val_type<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
PUBLIC	??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
PUBLIC	??$_Uninitialized_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninitialized_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??$_Uninitialized_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninitialized_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z		; std::_Fill_n<float *,unsigned int,float>
PUBLIC	??$_Fill_n@PAGIG@std@@YAPAGPAGIABG@Z		; std::_Fill_n<unsigned short *,unsigned int,unsigned short>
PUBLIC	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$_Unchecked@PAM@std@@YAPAMPAM@Z		; std::_Unchecked<float *>
PUBLIC	??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninit_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z	; std::_Rechecked<float *,float *>
PUBLIC	??$_Unchecked@PAG@std@@YAPAGPAG@Z		; std::_Unchecked<unsigned short *>
PUBLIC	??$_Uninit_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninit_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
PUBLIC	??$_Rechecked@PAGPAG@std@@YAAAPAGAAPAGPAG@Z	; std::_Rechecked<unsigned short *,unsigned short *>
PUBLIC	??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
PUBLIC	??$_Rechecked@PAUDWRITE_GLYPH_OFFSET@@PAU1@@std@@YAAAPAUDWRITE_GLYPH_OFFSET@@AAPAU1@PAU1@@Z ; std::_Rechecked<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *>
PUBLIC	??$construct@UDWRITE_GLYPH_OFFSET@@$$$V@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET>
PUBLIC	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
PUBLIC	??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<float,float,float>
PUBLIC	??$_Uninit_move@GGG@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned short,unsigned short,unsigned short>
PUBLIC	??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
PUBLIC	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::destroy<DWRITE_GLYPH_OFFSET>
PUBLIC	??$_Debug_range@PAM@std@@YAXPAM0PB_WI@Z		; std::_Debug_range<float *>
PUBLIC	??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z		; std::_Debug_pointer<float>
PUBLIC	??$_Debug_range@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WI@Z ; std::_Debug_range<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>
PUBLIC	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
PUBLIC	??$_Iter_cat@PAM@std@@YA?AUrandom_access_iterator_tag@0@ABQAM@Z ; std::_Iter_cat<float *>
PUBLIC	??$_Debug_range2@PAM@std@@YAXPAM0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<float *>
PUBLIC	??$_Iter_cat@PAUDWRITE_GLYPH_OFFSET@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Iter_cat<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$_Debug_range2@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DWRITE_GLYPH_OFFSET *>
PUBLIC	??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z ; std::forward<DWRITE_GLYPH_OFFSET>
PUBLIC	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
PUBLIC	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JO@FGONLMHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAs?$AAh?$AAo?$AAr?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1MO@LBFDOFFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAW?$AAR?$AAI?$AAT?$AAE?$AA_?$AAG?$AAL?$AAY?$AAP?$AAH?$AA_@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1MI@FEBILKEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1NK@FKBBKPEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1PC@GDILINHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__imp__SystemParametersInfoA@16:PROC
EXTRN	?GetPathForGlyphs@ScaledFontBase@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z:PROC ; mozilla::gfx::ScaledFontBase::GetPathForGlyphs
EXTRN	?CopyGlyphsToBuilder@ScaledFontBase@gfx@mozilla@@UAEXABUGlyphBuffer@23@PAVPathBuilder@23@W4BackendType@23@PBVMatrix@23@@Z:PROC ; mozilla::gfx::ScaledFontBase::CopyGlyphsToBuilder
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PC@GDILINHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PC@GDILINHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'W', 00H, 'R', 00H, 'I', 00H, 'T', 00H, 'E', 00H, '_', 00H, 'G'
	DB	00H, 'L', 00H, 'Y', 00H, 'P', 00H, 'H', 00H, '_', 00H, 'O', 00H
	DB	'F', 00H, 'F', 00H, 'S', 00H, 'E', 00H, 'T', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@FKBBKPEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1NK@FKBBKPEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'r', 00H, 't', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MI@FEBILKEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1MI@FEBILKEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'*', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@LBFDOFFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAW?$AAR?$AAI?$AAT?$AAE?$AA_?$AAG?$AAL?$AAY?$AAP?$AAH?$AA_@
CONST	SEGMENT
??_C@_1MO@LBFDOFFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAW?$AAR?$AAI?$AAT?$AAE?$AA_?$AAG?$AAL?$AAY?$AAP?$AAH?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'D', 00H
	DB	'W', 00H, 'R', 00H, 'I', 00H, 'T', 00H, 'E', 00H, '_', 00H, 'G'
	DB	00H, 'L', 00H, 'Y', 00H, 'P', 00H, 'H', 00H, '_', 00H, 'O', 00H
	DB	'F', 00H, 'F', 00H, 'S', 00H, 'E', 00H, 'T', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 'D', 00H, 'W', 00H, 'R', 00H, 'I', 00H, 'T', 00H
	DB	'E', 00H, '_', 00H, 'G', 00H, 'L', 00H, 'Y', 00H, 'P', 00H, 'H'
	DB	00H, '_', 00H, 'O', 00H, 'F', 00H, 'F', 00H, 'S', 00H, 'E', 00H
	DB	'T', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@FGONLMHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAs?$AAh?$AAo?$AAr?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JO@FGONLMHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAs?$AAh?$AAo?$AAr?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n'
	DB	00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 's', 00H, 'h', 00H, 'o', 00H, 'r', 00H, 't', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g'
	DB	00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 's', 00H, 'h', 00H
	DB	'o', 00H, 'r', 00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z$0
__ehfuncinfo$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ$0
__ehfuncinfo$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$0
__unwindtable$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ$0
__ehfuncinfo$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$0
__unwindtable$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ$0
__ehfuncinfo$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$0
__unwindtable$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$2
__ehfuncinfo$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$2
__unwindtable$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$2
__unwindtable$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$2
__ehfuncinfo$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z ; std::forward<DWRITE_GLYPH_OFFSET>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@$$QAU3@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@$$QAU3@@Z PROC ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z ; std::forward<DWRITE_GLYPH_OFFSET>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@$$QAU3@@Z ENDP ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z PROC ; std::forward<DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z ENDP ; std::forward<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAUDWRITE_GLYPH_OFFSET@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUDWRITE_GLYPH_OFFSET@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::_Iter_cat<DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAUDWRITE_GLYPH_OFFSET@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::_Iter_cat<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAM@std@@YAXPAM0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAM@std@@YAXPAM0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z	; std::_Debug_pointer<float>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z	; std::_Debug_pointer<float>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAM@std@@YAXPAM0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAM@std@@YA?AUrandom_access_iterator_tag@0@ABQAM@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAM@std@@YA?AUrandom_access_iterator_tag@0@ABQAM@Z PROC ; std::_Iter_cat<float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAM@std@@YA?AUrandom_access_iterator_tag@0@ABQAM@Z ENDP ; std::_Iter_cat<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UDWRITE_GLYPH_OFFSET@@@std@@YA$$QAUDWRITE_GLYPH_OFFSET@@AAU1@@Z ; std::forward<DWRITE_GLYPH_OFFSET>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@$$QAU3@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z PROC ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z ENDP ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WI@Z PROC ; std::_Debug_range<DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUDWRITE_GLYPH_OFFSET@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Iter_cat<DWRITE_GLYPH_OFFSET *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<DWRITE_GLYPH_OFFSET *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WI@Z ENDP ; std::_Debug_range<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z PROC		; std::_Debug_pointer<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z ENDP		; std::_Debug_pointer<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAM@std@@YAXPAM0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAM@std@@YAXPAM0PB_WI@Z PROC		; std::_Debug_range<float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAM@std@@YA?AUrandom_access_iterator_tag@0@ABQAM@Z ; std::_Iter_cat<float *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAM@std@@YAXPAM0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<float *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAM@std@@YAXPAM0PB_WI@Z ENDP		; std::_Debug_range<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::destroy<DWRITE_GLYPH_OFFSET>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::destroy<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0PB_WI@Z ; std::_Debug_range<DWRITE_GLYPH_OFFSET *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UDWRITE_GLYPH_OFFSET@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@PB_WI@Z ; std::_Debug_pointer<DWRITE_GLYPH_OFFSET>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 8
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UDWRITE_GLYPH_OFFSET@@U1@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@$$QAU2@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 8
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@GGG@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@GGG@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<unsigned short,unsigned short,unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAG@std@@YAXPAG0PB_WI@Z	; std::_Debug_range<unsigned short *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z	; std::_Debug_pointer<unsigned short>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 1
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*2]
; Line 475
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@GGG@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<unsigned short,unsigned short,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Count$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<float,float,float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 469
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 470
	push	470					; 000001d6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAM@std@@YAXPAM0PB_WI@Z	; std::_Debug_range<float *>
	add	esp, 16					; 00000010H
; Line 471
	push	471					; 000001d7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@M@std@@YAXPAMPB_WI@Z	; std::_Debug_pointer<float>
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR __Last$[ebp]
	sub	eax, DWORD PTR __First$[ebp]
	sar	eax, 2
	mov	DWORD PTR __Count$[ebp], eax
; Line 474
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	eax, DWORD PTR [eax+ecx*4]
; Line 475
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<float,float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::destroy<DWRITE_GLYPH_OFFSET>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UDWRITE_GLYPH_OFFSET@@$$$V@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$construct@UDWRITE_GLYPH_OFFSET@@$$$V@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::construct
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UDWRITE_GLYPH_OFFSET@@$$$V@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAUDWRITE_GLYPH_OFFSET@@PAU1@@std@@YAAAPAUDWRITE_GLYPH_OFFSET@@AAPAU1@PAU1@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUDWRITE_GLYPH_OFFSET@@PAU1@@std@@YAAAPAUDWRITE_GLYPH_OFFSET@@AAPAU1@PAU1@@Z PROC ; std::_Rechecked<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUDWRITE_GLYPH_OFFSET@@PAU1@@std@@YAAAPAUDWRITE_GLYPH_OFFSET@@AAPAU1@PAU1@@Z ENDP ; std::_Rechecked<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z PROC ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Val_type<DWRITE_GLYPH_OFFSET *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ENDP ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z PROC ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ENDP ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAGPAG@std@@YAAAPAGAAPAGPAG@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAGPAG@std@@YAAAPAGAAPAGPAG@Z PROC	; std::_Rechecked<unsigned short *,unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAGPAG@std@@YAAAPAGAAPAGPAG@Z ENDP	; std::_Rechecked<unsigned short *,unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z PROC ; std::_Uninit_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z ; std::_Ptr_cat<unsigned short,unsigned short>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAG@std@@YAPAGPAG@Z	; std::_Val_type<unsigned short *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@GGG@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<unsigned short,unsigned short,unsigned short>
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ENDP ; std::_Uninit_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAG@std@@YAPAGPAG@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAG@std@@YAPAGPAG@Z PROC			; std::_Unchecked<unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAG@std@@YAPAGPAG@Z ENDP			; std::_Unchecked<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z PROC	; std::_Rechecked<float *,float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z ENDP	; std::_Rechecked<float *,float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninit_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAM@std@@YAPAMPAM@Z	; std::_Val_type<float *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@MMM@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<float,float,float>
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninit_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAM@std@@YAPAMPAM@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAM@std@@YAPAMPAM@Z PROC			; std::_Unchecked<float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAM@std@@YAPAMPAM@Z ENDP			; std::_Unchecked<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fill_n@PAGIG@std@@YAPAGPAGIABG@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAGIG@std@@YAPAGPAGIABG@Z PROC		; std::_Fill_n<unsigned short *,unsigned int,unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2631
	push	ebp
	mov	ebp, esp
; Line 2632
	jmp	SHORT $LN3@Fill_n
$LN2@Fill_n:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 2
	mov	DWORD PTR __Dest$[ebp], ecx
$LN3@Fill_n:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Fill_n
; Line 2633
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR [edx], cx
	jmp	SHORT $LN2@Fill_n
$LN1@Fill_n:
; Line 2634
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2635
	pop	ebp
	ret	0
??$_Fill_n@PAGIG@std@@YAPAGPAGIABG@Z ENDP		; std::_Fill_n<unsigned short *,unsigned int,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z PROC		; std::_Fill_n<float *,unsigned int,float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2631
	push	ebp
	mov	ebp, esp
; Line 2632
	jmp	SHORT $LN3@Fill_n
$LN2@Fill_n:
	mov	eax, DWORD PTR __Count$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Count$[ebp], eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
$LN3@Fill_n:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@Fill_n
; Line 2633
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Fill_n
$LN1@Fill_n:
; Line 2634
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2635
	pop	ebp
	ret	0
??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z ENDP		; std::_Fill_n<float *,unsigned int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z PROC ; std::_Uninitialized_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Unchecked<DWRITE_GLYPH_OFFSET *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninit_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUDWRITE_GLYPH_OFFSET@@PAU1@@std@@YAAAPAUDWRITE_GLYPH_OFFSET@@AAPAU1@PAU1@@Z ; std::_Rechecked<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 8
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z PROC ; std::_Uninitialized_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAG@std@@YAPAGPAG@Z	; std::_Unchecked<unsigned short *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAG@std@@YAPAGPAG@Z	; std::_Unchecked<unsigned short *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAG@std@@YAPAGPAG@Z	; std::_Unchecked<unsigned short *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninit_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAGPAG@std@@YAAAPAGAAPAGPAG@Z ; std::_Rechecked<unsigned short *,unsigned short *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ENDP ; std::_Uninitialized_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAM@std@@YAPAMPAM@Z	; std::_Unchecked<float *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAM@std@@YAPAMPAM@Z	; std::_Unchecked<float *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAM@std@@YAPAMPAM@Z	; std::_Unchecked<float *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninit_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAMPAM@std@@YAAAPAMAAPAMPAM@Z ; std::_Rechecked<float *,float *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 645
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 651
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 653
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 654
	jmp	SHORT $LN6@Uninit_def
$LN5@Uninit_def:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 8
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_def:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_def
; Line 656
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct
	jmp	SHORT $LN5@Uninit_def
$LN4@Uninit_def:
	jmp	SHORT $LN10@Uninit_def
__catch$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 659
	jmp	SHORT $LN3@Uninit_def
$LN2@Uninit_def:
	mov	ecx, DWORD PTR __Next$[ebp]
	add	ecx, 8
	mov	DWORD PTR __Next$[ebp], ecx
$LN3@Uninit_def:
	mov	edx, DWORD PTR __Next$[ebp]
	cmp	edx, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_def
; Line 660
	mov	eax, DWORD PTR __Next$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UDWRITE_GLYPH_OFFSET@@@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::destroy<DWRITE_GLYPH_OFFSET>
	jmp	SHORT $LN2@Uninit_def
$LN1@Uninit_def:
; Line 661
	push	0
	push	0
	call	__CxxThrowException@8
; Line 662
	mov	eax, $LN13@Uninit_def
	ret	0
$LN10@Uninit_def:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Uninit_def
$LN13@Uninit_def:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_def:
; Line 663
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z PROC ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z ENDP ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z PROC ; std::_Val_type<DWRITE_GLYPH_OFFSET *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ENDP ; std::_Val_type<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_def_fill_n@GIG@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = -2						; size = 2
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_def_fill_n@GIG@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<unsigned short,unsigned int,unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 681
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 682
	xor	eax, eax
	mov	WORD PTR $T1[ebp], ax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Fill_n@PAGIG@std@@YAPAGPAGIABG@Z	; std::_Fill_n<unsigned short *,unsigned int,unsigned short>
	add	esp, 12					; 0000000cH
; Line 683
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_def_fill_n@GIG@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<unsigned short,unsigned int,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z PROC ; std::_Ptr_cat<unsigned short,unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z ENDP ; std::_Ptr_cat<unsigned short,unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAG@std@@YAPAGPAG@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAG@std@@YAPAGPAG@Z PROC			; std::_Val_type<unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAG@std@@YAPAGPAG@Z ENDP			; std::_Val_type<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_def_fill_n<float,unsigned int,float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 681
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 682
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR $T1[ebp], xmm0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Fill_n@PAMIM@std@@YAPAMPAMIABM@Z	; std::_Fill_n<float *,unsigned int,float>
	add	esp, 12					; 0000000cH
; Line 683
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_def_fill_n<float,unsigned int,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z PROC ; std::_Ptr_cat<float,float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ENDP ; std::_Ptr_cat<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAM@std@@YAPAMPAM@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAM@std@@YAPAMPAM@Z PROC			; std::_Val_type<float *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAM@std@@YAPAMPAM@Z ENDP			; std::_Val_type<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAG@std@@YAXPAG0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAG@std@@YAXPAG0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z	; std::_Debug_pointer<unsigned short>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z	; std::_Debug_pointer<unsigned short>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAG@std@@YAXPAG0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAG@std@@YA?AUrandom_access_iterator_tag@0@ABQAG@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAG@std@@YA?AUrandom_access_iterator_tag@0@ABQAG@Z PROC ; std::_Iter_cat<unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAG@std@@YA?AUrandom_access_iterator_tag@0@ABQAG@Z ENDP ; std::_Iter_cat<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@UDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@IPAU1@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@IPAU1@@Z PROC ; std::_Allocate<DWRITE_GLYPH_OFFSET>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@IPAU1@@Z ENDP ; std::_Allocate<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@G@std@@YAPAGIPAG@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@G@std@@YAPAGIPAG@Z PROC			; std::_Allocate<unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 2147483647	; 7fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@G@std@@YAPAGIPAG@Z ENDP			; std::_Allocate<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@M@std@@YAPAMIPAM@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@M@std@@YAPAMIPAM@Z PROC			; std::_Allocate<float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@M@std@@YAPAMIPAM@Z ENDP			; std::_Allocate<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAUDWRITE_GLYPH_OFFSET@@@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEPAUDWRITE_GLYPH_OFFSET@@PAU2@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUDWRITE_GLYPH_OFFSET@@@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEPAUDWRITE_GLYPH_OFFSET@@PAU2@00@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Umove<DWRITE_GLYPH_OFFSET *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUDWRITE_GLYPH_OFFSET@@PAU1@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninitialized_move<DWRITE_GLYPH_OFFSET *,DWRITE_GLYPH_OFFSET *,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAUDWRITE_GLYPH_OFFSET@@@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEPAUDWRITE_GLYPH_OFFSET@@PAU2@00@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Umove<DWRITE_GLYPH_OFFSET *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAG@?$vector@GV?$allocator@G@std@@@std@@IAEPAGPAG00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAG@?$vector@GV?$allocator@G@std@@@std@@IAEPAGPAG00@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Umove<unsigned short *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAGPAGU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAPAGPAG00AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninitialized_move<unsigned short *,unsigned short *,std::_Wrap_alloc<std::allocator<unsigned short> > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAG@?$vector@GV?$allocator@G@std@@@std@@IAEPAGPAG00@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Umove<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z ; std::_Ptr_cat<unsigned short,unsigned short>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z PROC ; std::vector<float,std::allocator<float> >::_Umove<float *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAMPAMU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAPAMPAM00AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move<float *,float *,std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z ENDP ; std::vector<float,std::allocator<float> >::_Umove<float *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z PROC ; RefPtr<IDWriteFontFileStream>::AddRefTraits<IDWriteFontFileStream>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileStream@@@@CAXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z ENDP ; RefPtr<IDWriteFontFileStream>::AddRefTraits<IDWriteFontFileStream>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z PROC ; RefPtr<IDWriteFontFileLoader>::AddRefTraits<IDWriteFontFileLoader>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileLoader@@@@CAXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z ENDP ; RefPtr<IDWriteFontFileLoader>::AddRefTraits<IDWriteFontFileLoader>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z PROC ; RefPtr<IDWriteFontFile>::AddRefTraits<IDWriteFontFile>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFile@@@@CAXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z ENDP ; RefPtr<IDWriteFontFile>::AddRefTraits<IDWriteFontFile>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEAAUDWRITE_GLYPH_OFFSET@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEAAUDWRITE_GLYPH_OFFSET@@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEABUDWRITE_GLYPH_OFFSET@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
; Line 325
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEAAUDWRITE_GLYPH_OFFSET@@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEABUDWRITE_GLYPH_OFFSET@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEABUDWRITE_GLYPH_OFFSET@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PC@GDILINHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEABUDWRITE_GLYPH_OFFSET@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UDWRITE_GLYPH_OFFSET@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,DWRITE_GLYPH_OFFSET,int,DWRITE_GLYPH_OFFSET const *,DWRITE_GLYPH_OFFSET const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_default_fill_n@PAUDWRITE_GLYPH_OFFSET@@IU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAUDWRITE_GLYPH_OFFSET@@IU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 690
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 692
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UDWRITE_GLYPH_OFFSET@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDWRITE_GLYPH_OFFSET@@0@Z ; std::_Ptr_cat<DWRITE_GLYPH_OFFSET,DWRITE_GLYPH_OFFSET>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@PAU1@@Z ; std::_Val_type<DWRITE_GLYPH_OFFSET *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_def_fill_n@PAUDWRITE_GLYPH_OFFSET@@IV?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@U1@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::allocator<DWRITE_GLYPH_OFFSET>,DWRITE_GLYPH_OFFSET>
	add	esp, 20					; 00000014H
; Line 693
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAUDWRITE_GLYPH_OFFSET@@IU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEAAGXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEABGXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
; Line 325
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEAAGXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEABGXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEABGXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NK@FKBBKPEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEABGXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@GHPBGABGU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,unsigned short,int,unsigned short const *,unsigned short const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_default_fill_n@PAGIU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAGIU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<unsigned short *,unsigned int,std::_Wrap_alloc<std::allocator<unsigned short> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 690
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 692
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@GG@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAG0@Z ; std::_Ptr_cat<unsigned short,unsigned short>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAG@std@@YAPAGPAG@Z	; std::_Val_type<unsigned short *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_def_fill_n@GIG@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<unsigned short,unsigned int,unsigned short>
	add	esp, 20					; 00000014H
; Line 693
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAGIU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<unsigned short *,unsigned int,std::_Wrap_alloc<std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_default_fill_n<float *,unsigned int,std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 690
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 692
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAM@std@@YAPAMPAM@Z	; std::_Val_type<float *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_def_fill_n@MIM@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z ; std::_Uninit_def_fill_n<float,unsigned int,float>
	add	esp, 20					; 00000014H
; Line 693
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_default_fill_n<float *,unsigned int,std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ PROC ; RefPtrGetterAddRefs<IDWriteFontFileStream>::operator IDWriteFontFileStream * *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?StartAssignment@?$RefPtr@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::StartAssignment
; Line 460
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ENDP ; RefPtrGetterAddRefs<IDWriteFontFileStream>::operator IDWriteFontFileStream * *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAE@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??0?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAE@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z PROC ; RefPtrGetterAddRefs<IDWriteFontFileStream>::RefPtrGetterAddRefs<IDWriteFontFileStream>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAE@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ENDP ; RefPtrGetterAddRefs<IDWriteFontFileStream>::RefPtrGetterAddRefs<IDWriteFontFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$getter_AddRefs@UIDWriteFontFileStream@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_aSmartPtr$ = 12					; size = 4
??$getter_AddRefs@UIDWriteFontFileStream@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z PROC ; getter_AddRefs<IDWriteFontFileStream>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 479
	push	ebp
	mov	ebp, esp
; Line 480
	mov	eax, DWORD PTR _aSmartPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAE@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFileStream>::RefPtrGetterAddRefs<IDWriteFontFileStream>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 481
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$getter_AddRefs@UIDWriteFontFileStream@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ENDP ; getter_AddRefs<IDWriteFontFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileStream@@@@CAXPAUIDWriteFontFileStream@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileStream@@@@CAXPAUIDWriteFontFileStream@@@Z PROC ; RefPtr<IDWriteFontFileStream>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
	push	esi
; Line 362
	mov	eax, DWORD PTR _aPtr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _aPtr$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 363
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileStream@@@@CAXPAUIDWriteFontFileStream@@@Z ENDP ; RefPtr<IDWriteFontFileStream>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StartAssignment@?$RefPtr@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartAssignment@?$RefPtr@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ PROC ; RefPtr<IDWriteFontFileStream>::StartAssignment, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileStream@@@@AAEXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::assign_assuming_AddRef
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
; Line 337
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartAssignment@?$RefPtr@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ENDP ; RefPtr<IDWriteFontFileStream>::StartAssignment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ PROC ; RefPtr<IDWriteFontFileStream>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ENDP ; RefPtr<IDWriteFontFileStream>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ PROC ; RefPtr<IDWriteFontFileStream>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ENDP ; RefPtr<IDWriteFontFileStream>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ PROC	; RefPtr<IDWriteFontFileStream>::RefPtr<IDWriteFontFileStream>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ENDP	; RefPtr<IDWriteFontFileStream>::RefPtr<IDWriteFontFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ PROC	; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::AddRefTraits<IDWriteFontFileStream>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ENDP	; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileStream@@@@AAEXPAUIDWriteFontFileStream@@@Z
_TEXT	SEGMENT
_oldPtr$ = -8						; size = 4
_this$ = -4						; size = 4
_aNewPtr$ = 8						; size = 4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileStream@@@@AAEXPAUIDWriteFontFileStream@@@Z PROC ; RefPtr<IDWriteFontFileStream>::assign_assuming_AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _oldPtr$[ebp], ecx
; Line 41
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _aNewPtr$[ebp]
	mov	DWORD PTR [edx], eax
; Line 42
	cmp	DWORD PTR _oldPtr$[ebp], 0
	je	SHORT $LN2@assign_ass
; Line 43
	mov	ecx, DWORD PTR _oldPtr$[ebp]
	push	ecx
	call	?Release@?$AddRefTraits@UIDWriteFontFileStream@@@?$RefPtr@UIDWriteFontFileStream@@@@SAXPAUIDWriteFontFileStream@@@Z ; RefPtr<IDWriteFontFileStream>::AddRefTraits<IDWriteFontFileStream>::Release
	add	esp, 4
$LN2@assign_ass:
; Line 45
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileStream@@@@AAEXPAUIDWriteFontFileStream@@@Z ENDP ; RefPtr<IDWriteFontFileStream>::assign_assuming_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ PROC ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::operator IDWriteFontFileLoader * *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?StartAssignment@?$RefPtr@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::StartAssignment
; Line 460
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ENDP ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::operator IDWriteFontFileLoader * *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAE@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??0?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAE@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z PROC ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::RefPtrGetterAddRefs<IDWriteFontFileLoader>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAE@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ENDP ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::RefPtrGetterAddRefs<IDWriteFontFileLoader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$getter_AddRefs@UIDWriteFontFileLoader@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_aSmartPtr$ = 12					; size = 4
??$getter_AddRefs@UIDWriteFontFileLoader@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z PROC ; getter_AddRefs<IDWriteFontFileLoader>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 479
	push	ebp
	mov	ebp, esp
; Line 480
	mov	eax, DWORD PTR _aSmartPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAE@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::RefPtrGetterAddRefs<IDWriteFontFileLoader>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 481
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$getter_AddRefs@UIDWriteFontFileLoader@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ENDP ; getter_AddRefs<IDWriteFontFileLoader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileLoader@@@@CAXPAUIDWriteFontFileLoader@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileLoader@@@@CAXPAUIDWriteFontFileLoader@@@Z PROC ; RefPtr<IDWriteFontFileLoader>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
	push	esi
; Line 362
	mov	eax, DWORD PTR _aPtr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _aPtr$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 363
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFileLoader@@@@CAXPAUIDWriteFontFileLoader@@@Z ENDP ; RefPtr<IDWriteFontFileLoader>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StartAssignment@?$RefPtr@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartAssignment@?$RefPtr@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ PROC ; RefPtr<IDWriteFontFileLoader>::StartAssignment, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileLoader@@@@AAEXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::assign_assuming_AddRef
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
; Line 337
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartAssignment@?$RefPtr@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ENDP ; RefPtr<IDWriteFontFileLoader>::StartAssignment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ PROC ; RefPtr<IDWriteFontFileLoader>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ENDP ; RefPtr<IDWriteFontFileLoader>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ PROC ; RefPtr<IDWriteFontFileLoader>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ENDP ; RefPtr<IDWriteFontFileLoader>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ PROC	; RefPtr<IDWriteFontFileLoader>::RefPtr<IDWriteFontFileLoader>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ENDP	; RefPtr<IDWriteFontFileLoader>::RefPtr<IDWriteFontFileLoader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ PROC	; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::AddRefTraits<IDWriteFontFileLoader>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ENDP	; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileLoader@@@@AAEXPAUIDWriteFontFileLoader@@@Z
_TEXT	SEGMENT
_oldPtr$ = -8						; size = 4
_this$ = -4						; size = 4
_aNewPtr$ = 8						; size = 4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileLoader@@@@AAEXPAUIDWriteFontFileLoader@@@Z PROC ; RefPtr<IDWriteFontFileLoader>::assign_assuming_AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _oldPtr$[ebp], ecx
; Line 41
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _aNewPtr$[ebp]
	mov	DWORD PTR [edx], eax
; Line 42
	cmp	DWORD PTR _oldPtr$[ebp], 0
	je	SHORT $LN2@assign_ass
; Line 43
	mov	ecx, DWORD PTR _oldPtr$[ebp]
	push	ecx
	call	?Release@?$AddRefTraits@UIDWriteFontFileLoader@@@?$RefPtr@UIDWriteFontFileLoader@@@@SAXPAUIDWriteFontFileLoader@@@Z ; RefPtr<IDWriteFontFileLoader>::AddRefTraits<IDWriteFontFileLoader>::Release
	add	esp, 4
$LN2@assign_ass:
; Line 45
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFileLoader@@@@AAEXPAUIDWriteFontFileLoader@@@Z ENDP ; RefPtr<IDWriteFontFileLoader>::assign_assuming_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ PROC ; RefPtrGetterAddRefs<IDWriteFontFile>::operator IDWriteFontFile * *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 458
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?StartAssignment@?$RefPtr@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::StartAssignment
; Line 460
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ENDP ; RefPtrGetterAddRefs<IDWriteFontFile>::operator IDWriteFontFile * *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAE@AAV?$RefPtr@UIDWriteFontFile@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??0?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAE@AAV?$RefPtr@UIDWriteFontFile@@@@@Z PROC ; RefPtrGetterAddRefs<IDWriteFontFile>::RefPtrGetterAddRefs<IDWriteFontFile>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 448
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAE@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ENDP ; RefPtrGetterAddRefs<IDWriteFontFile>::RefPtrGetterAddRefs<IDWriteFontFile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$getter_AddRefs@UIDWriteFontFile@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@AAV?$RefPtr@UIDWriteFontFile@@@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_aSmartPtr$ = 12					; size = 4
??$getter_AddRefs@UIDWriteFontFile@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@AAV?$RefPtr@UIDWriteFontFile@@@@@Z PROC ; getter_AddRefs<IDWriteFontFile>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 479
	push	ebp
	mov	ebp, esp
; Line 480
	mov	eax, DWORD PTR _aSmartPtr$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAE@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ; RefPtrGetterAddRefs<IDWriteFontFile>::RefPtrGetterAddRefs<IDWriteFontFile>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 481
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$getter_AddRefs@UIDWriteFontFile@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ENDP ; getter_AddRefs<IDWriteFontFile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFile@@@@CAXPAUIDWriteFontFile@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFile@@@@CAXPAUIDWriteFontFile@@@Z PROC ; RefPtr<IDWriteFontFile>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
	push	esi
; Line 362
	mov	eax, DWORD PTR _aPtr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _aPtr$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 363
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@UIDWriteFontFile@@@@CAXPAUIDWriteFontFile@@@Z ENDP ; RefPtr<IDWriteFontFile>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StartAssignment@?$RefPtr@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?StartAssignment@?$RefPtr@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ PROC ; RefPtr<IDWriteFontFile>::StartAssignment, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 335
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFile@@@@AAEXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::assign_assuming_AddRef
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
; Line 337
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartAssignment@?$RefPtr@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ENDP ; RefPtr<IDWriteFontFile>::StartAssignment
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ PROC ; RefPtr<IDWriteFontFile>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ENDP ; RefPtr<IDWriteFontFile>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ PROC ; RefPtr<IDWriteFontFile>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ENDP ; RefPtr<IDWriteFontFile>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@UIDWriteFontFile@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefPtr@UIDWriteFontFile@@@@QAE@XZ PROC		; RefPtr<IDWriteFontFile>::RefPtr<IDWriteFontFile>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefPtr@UIDWriteFontFile@@@@QAE@XZ ENDP		; RefPtr<IDWriteFontFile>::RefPtr<IDWriteFontFile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ PROC		; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::AddRefTraits<IDWriteFontFile>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ ENDP		; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFile@@@@AAEXPAUIDWriteFontFile@@@Z
_TEXT	SEGMENT
_oldPtr$ = -8						; size = 4
_this$ = -4						; size = 4
_aNewPtr$ = 8						; size = 4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFile@@@@AAEXPAUIDWriteFontFile@@@Z PROC ; RefPtr<IDWriteFontFile>::assign_assuming_AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _oldPtr$[ebp], ecx
; Line 41
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _aNewPtr$[ebp]
	mov	DWORD PTR [edx], eax
; Line 42
	cmp	DWORD PTR _oldPtr$[ebp], 0
	je	SHORT $LN2@assign_ass
; Line 43
	mov	ecx, DWORD PTR _oldPtr$[ebp]
	push	ecx
	call	?Release@?$AddRefTraits@UIDWriteFontFile@@@?$RefPtr@UIDWriteFontFile@@@@SAXPAUIDWriteFontFile@@@Z ; RefPtr<IDWriteFontFile>::AddRefTraits<IDWriteFontFile>::Release
	add	esp, 4
$LN2@assign_ass:
; Line 45
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign_assuming_AddRef@?$RefPtr@UIDWriteFontFile@@@@AAEXPAUIDWriteFontFile@@@Z ENDP ; RefPtr<IDWriteFontFile>::assign_assuming_AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 3
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEII@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUDWRITE_GLYPH_OFFSET@@@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEPAUDWRITE_GLYPH_OFFSET@@PAU2@00@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Umove<DWRITE_GLYPH_OFFSET *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEII@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEII@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@0AAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Pop_back_n@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Pop_back_n@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Pop_back_n, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, eax
	mov	DWORD PTR __Ptr$[ebp], edx
; Line 1499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IBEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Orphan_range
; Line 1502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXPAUDWRITE_GLYPH_OFFSET@@0@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Destroy
; Line 1503
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1504
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Pop_back_n@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Pop_back_n
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ
_TEXT	SEGMENT
tv72 = -40						; size = 4
tv73 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::front, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1224
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@2@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::begin
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBEAAUDWRITE_GLYPH_OFFSET@@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]
; Line 1225
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::front
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MO@LBFDOFFK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAW?$AAR?$AAI?$AAT?$AAE?$AA_?$AAG?$AAL?$AAY?$AAP?$AAH?$AA_@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*8]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Alval$2 = -25						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::resize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1100
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	cmp	DWORD PTR __Newsize$[ebp], eax
	jae	SHORT $LN4@resize
; Line 1102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	sub	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pop_back_n@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Pop_back_n
	jmp	$LN6@resize
$LN4@resize:
; Line 1103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	$LN6@resize
; Line 1105
	lea	eax, DWORD PTR __Alval$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
; Line 1106
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Reserve
; Line 1107
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1109
	lea	edx, DWORD PTR __Alval$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAUDWRITE_GLYPH_OFFSET@@IU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@YAXPAUDWRITE_GLYPH_OFFSET@@IAAU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@0@@Z ; std::_Uninitialized_default_fill_n<DWRITE_GLYPH_OFFSET *,unsigned int,std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@resize
__catch$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$0:
; Line 1111
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Tidy
; Line 1112
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1113
	mov	eax, $LN10@resize
	ret	0
$LN7@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$1
$LN10@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z$1:
; Line 1114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx*8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@resize:
; Line 1116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@resize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@resize:
	DD	1
	DD	$LN13@resize
$LN13@resize:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN11@resize
$LN11@resize:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::resize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@2@XZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@PAUDWRITE_GLYPH_OFFSET@@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@2@XZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 3
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 3
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::~vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@IAEXXZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::~_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::~vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ PROC ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ ; std::allocator<DWRITE_GLYPH_OFFSET>::allocator<DWRITE_GLYPH_OFFSET>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ENDP ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::~_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::~_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@@std@@QAE@ABV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >::_Vector_alloc<0,std::_Vec_base_types<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::~_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::~_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >::_Vector_val<std::_Simple_types<DWRITE_GLYPH_OFFSET> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAIABV?$allocator@UDWRITE_GLYPH_OFFSET@@@2@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?construct@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 862
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 863
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$construct@UDWRITE_GLYPH_OFFSET@@$$$V@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAXAAV?$allocator@UDWRITE_GLYPH_OFFSET@@@1@PAUDWRITE_GLYPH_OFFSET@@@Z ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::construct<DWRITE_GLYPH_OFFSET>
	add	esp, 8
; Line 864
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?construct@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ; std::allocator<DWRITE_GLYPH_OFFSET>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ ; std::allocator<DWRITE_GLYPH_OFFSET>::allocator<DWRITE_GLYPH_OFFSET>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >::_Wrap_alloc<std::allocator<DWRITE_GLYPH_OFFSET> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAIABV?$allocator@UDWRITE_GLYPH_OFFSET@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAIABV?$allocator@UDWRITE_GLYPH_OFFSET@@@2@@Z PROC ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QBEIXZ ; std::allocator<DWRITE_GLYPH_OFFSET>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@SAIABV?$allocator@UDWRITE_GLYPH_OFFSET@@@2@@Z ENDP ; std::allocator_traits<std::allocator<DWRITE_GLYPH_OFFSET> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QBEIXZ PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 536870911				; 1fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QBEIXZ ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z
_TEXT	SEGMENT
tv68 = -16						; size = 4
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?construct@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 587
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 588
	mov	DWORD PTR $T2[ebp], 8
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	push	ecx
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	edx, DWORD PTR $T2[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR $T1[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv68[ebp], 0
$LN1@construct:
; Line 589
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?construct@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@@Z ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UDWRITE_GLYPH_OFFSET@@@std@@YAPAUDWRITE_GLYPH_OFFSET@@IPAU1@@Z ; std::_Allocate<DWRITE_GLYPH_OFFSET>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEPAUDWRITE_GLYPH_OFFSET@@I@Z ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z PROC ; std::allocator<DWRITE_GLYPH_OFFSET>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAEXPAUDWRITE_GLYPH_OFFSET@@I@Z ENDP ; std::allocator<DWRITE_GLYPH_OFFSET>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ PROC	; std::allocator<DWRITE_GLYPH_OFFSET>::allocator<DWRITE_GLYPH_OFFSET>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@QAE@XZ ENDP	; std::allocator<DWRITE_GLYPH_OFFSET>::allocator<DWRITE_GLYPH_OFFSET>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@GV?$allocator@G@std@@@std@@IBEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@GV?$allocator@G@std@@@std@@IBEII@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAG@?$vector@GV?$allocator@G@std@@@std@@IAEPAGPAG00@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Umove<unsigned short *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@GV?$allocator@G@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@GV?$allocator@G@std@@@std@@IBEII@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@GV?$allocator@G@std@@@std@@IBEII@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAG0AAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<unsigned short> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Pop_back_n@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Pop_back_n@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Pop_back_n, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, eax
	mov	DWORD PTR __Ptr$[ebp], edx
; Line 1499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@GV?$allocator@G@std@@@std@@IBEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Orphan_range
; Line 1502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Line 1503
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1504
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Pop_back_n@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Pop_back_n
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ
_TEXT	SEGMENT
tv72 = -40						; size = 4
tv73 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::front, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1224
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@2@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QBEAAGXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]
; Line 1225
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@XZ
__ehhandler$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::front
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1JO@FGONLMHN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAu?$AAn?$AAs?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAs?$AAh?$AAo?$AAr?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<unsigned short> >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 1
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Alval$2 = -25						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::resize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1100
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	cmp	DWORD PTR __Newsize$[ebp], eax
	jae	SHORT $LN4@resize
; Line 1102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	sub	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pop_back_n@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Pop_back_n
	jmp	$LN6@resize
$LN4@resize:
; Line 1103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	$LN6@resize
; Line 1105
	lea	eax, DWORD PTR __Alval$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
; Line 1106
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@GV?$allocator@G@std@@@std@@IAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Reserve
; Line 1107
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1109
	lea	edx, DWORD PTR __Alval$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAGIU?$_Wrap_alloc@V?$allocator@G@std@@@std@@@std@@YAXPAGIAAU?$_Wrap_alloc@V?$allocator@G@std@@@0@@Z ; std::_Uninitialized_default_fill_n<unsigned short *,unsigned int,std::_Wrap_alloc<std::allocator<unsigned short> > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@resize
__catch$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$0:
; Line 1111
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
; Line 1112
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1113
	mov	eax, $LN10@resize
	ret	0
$LN7@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$1
$LN10@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z$1:
; Line 1114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx*2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@resize:
; Line 1116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@resize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@resize:
	DD	1
	DD	$LN13@resize
$LN13@resize:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN11@resize
$LN11@resize:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::resize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@2@XZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@std@@QAE@PAGPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<unsigned short> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@G@std@@@std@@@2@XZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 1
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC ; std::vector<unsigned short,std::allocator<unsigned short> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 1
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::~_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@G@std@@QAE@XZ		; std::allocator<unsigned short>::allocator<unsigned short>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<unsigned short> >::_Wrap_alloc<std::allocator<unsigned short> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@G@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::~_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::~_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<unsigned short> >::_Vector_val<std::_Simple_types<unsigned short> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@GV?$allocator@G@std@@@std@@@std@@QAE@ABV?$allocator@G@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >::_Vector_alloc<0,std::_Vec_base_types<unsigned short,std::allocator<unsigned short> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned short> >::~_Vector_val<std::_Simple_types<unsigned short> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned short> >::~_Vector_val<std::_Simple_types<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<unsigned short> >::_Vector_val<std::_Simple_types<unsigned short> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@G@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<unsigned short> >::_Vector_val<std::_Simple_types<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<unsigned short> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@G@std@@@std@@SAIABV?$allocator@G@2@@Z ; std::allocator_traits<std::allocator<unsigned short> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<unsigned short> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@G@std@@QAEXPAGI@Z ; std::allocator<unsigned short>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEXPAGI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned short> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEPAGI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEPAGI@Z PROC ; std::_Wrap_alloc<std::allocator<unsigned short> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@G@std@@QAEPAGI@Z	; std::allocator<unsigned short>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAEPAGI@Z ENDP ; std::_Wrap_alloc<std::allocator<unsigned short> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<unsigned short> >::_Wrap_alloc<std::allocator<unsigned short> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@G@std@@QAE@XZ		; std::allocator<unsigned short>::allocator<unsigned short>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<unsigned short> >::_Wrap_alloc<std::allocator<unsigned short> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@G@std@@@std@@SAIABV?$allocator@G@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@G@std@@@std@@SAIABV?$allocator@G@2@@Z PROC ; std::allocator_traits<std::allocator<unsigned short> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@G@std@@QBEIXZ	; std::allocator<unsigned short>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@G@std@@@std@@SAIABV?$allocator@G@2@@Z ENDP ; std::allocator_traits<std::allocator<unsigned short> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@G@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@G@std@@QBEIXZ PROC		; std::allocator<unsigned short>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 2147483647				; 7fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@G@std@@QBEIXZ ENDP		; std::allocator<unsigned short>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@G@std@@QAEPAGI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@G@std@@QAEPAGI@Z PROC		; std::allocator<unsigned short>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@G@std@@YAPAGIPAG@Z		; std::_Allocate<unsigned short>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@G@std@@QAEPAGI@Z ENDP		; std::allocator<unsigned short>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@G@std@@QAEXPAGI@Z PROC		; std::allocator<unsigned short>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@G@std@@QAEXPAGI@Z ENDP		; std::allocator<unsigned short>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@G@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@G@std@@QAE@XZ PROC			; std::allocator<unsigned short>::allocator<unsigned short>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@G@std@@QAE@XZ ENDP			; std::allocator<unsigned short>::allocator<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	call	?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilder>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilder>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilder>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilder>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilder>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ PROC	; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ENDP	; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_i$1 = -60						; size = 4
_ranges$2 = -56						; size = 4
_numRanges$3 = -52					; size = 2
_exists$ = -44						; size = 4
_tableSize$ = -32					; size = 4
_tableData$ = -20					; size = 4
_tableContext$ = -8					; size = 4
_aDWFace$ = 8						; size = 4
_ppem$ = 12						; size = 4
?DoGrayscale@gfx@mozilla@@YA_NPAUIDWriteFontFace@@M@Z PROC ; mozilla::gfx::DoGrayscale
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 68
	mov	esi, esp
	lea	eax, DWORD PTR _exists$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tableContext$[ebp]
	push	ecx
	lea	edx, DWORD PTR _tableSize$[ebp]
	push	edx
	lea	eax, DWORD PTR _tableData$[ebp]
	push	eax
	push	1886609767				; 70736167H
	mov	ecx, DWORD PTR _aDWFace$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _aDWFace$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+48]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 70
	cmp	DWORD PTR _exists$[ebp], 0
	je	$LN8@DoGrayscal
; Line 71
	cmp	DWORD PTR _tableSize$[ebp], 4
	jae	SHORT $LN7@DoGrayscal
; Line 72
	mov	esi, esp
	mov	edx, DWORD PTR _tableContext$[ebp]
	push	edx
	mov	eax, DWORD PTR _aDWFace$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _aDWFace$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	al, 1
	jmp	$LN9@DoGrayscal
$LN7@DoGrayscal:
; Line 79
	mov	ecx, DWORD PTR _tableData$[ebp]
	add	ecx, 2
	push	ecx
	call	?readShort@gfx@mozilla@@YAGPBD@Z	; mozilla::gfx::readShort
	add	esp, 4
	mov	WORD PTR _numRanges$3[ebp], ax
; Line 80
	movzx	edx, WORD PTR _numRanges$3[ebp]
	lea	eax, DWORD PTR [edx*4+4]
	cmp	DWORD PTR _tableSize$[ebp], eax
	jae	SHORT $LN6@DoGrayscal
; Line 81
	mov	esi, esp
	mov	ecx, DWORD PTR _tableContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aDWFace$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _aDWFace$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	mov	al, 1
	jmp	$LN9@DoGrayscal
$LN6@DoGrayscal:
; Line 84
	mov	eax, DWORD PTR _tableData$[ebp]
	add	eax, 4
	mov	DWORD PTR _ranges$2[ebp], eax
; Line 85
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN5@DoGrayscal
$LN4@DoGrayscal:
	mov	ecx, DWORD PTR _i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$1[ebp], ecx
$LN5@DoGrayscal:
	movzx	edx, WORD PTR _numRanges$3[ebp]
	cmp	DWORD PTR _i$1[ebp], edx
	jge	SHORT $LN3@DoGrayscal
; Line 86
	mov	eax, DWORD PTR _i$1[ebp]
	mov	ecx, DWORD PTR _ranges$2[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	?readShort@gfx@mozilla@@YAGPBD@Z	; mozilla::gfx::readShort
	add	esp, 4
	movzx	eax, ax
	cvtsi2ss xmm0, eax
	comiss	xmm0, DWORD PTR _ppem$[ebp]
	jbe	SHORT $LN2@DoGrayscal
; Line 87
	mov	ecx, DWORD PTR _i$1[ebp]
	mov	edx, DWORD PTR _ranges$2[ebp]
	lea	eax, DWORD PTR [edx+ecx*4+2]
	push	eax
	call	?readShort@gfx@mozilla@@YAGPBD@Z	; mozilla::gfx::readShort
	add	esp, 4
	movzx	ecx, ax
	and	ecx, 2
	jne	SHORT $LN1@DoGrayscal
; Line 88
	mov	esi, esp
	mov	edx, DWORD PTR _tableContext$[ebp]
	push	edx
	mov	eax, DWORD PTR _aDWFace$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _aDWFace$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 89
	xor	al, al
	jmp	SHORT $LN9@DoGrayscal
$LN1@DoGrayscal:
; Line 91
	jmp	SHORT $LN3@DoGrayscal
$LN2@DoGrayscal:
; Line 93
	jmp	SHORT $LN4@DoGrayscal
$LN3@DoGrayscal:
; Line 94
	mov	esi, esp
	mov	ecx, DWORD PTR _tableContext$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aDWFace$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _aDWFace$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@DoGrayscal:
; Line 96
	mov	al, 1
$LN9@DoGrayscal:
; Line 97
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@DoGrayscal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@DoGrayscal:
	DD	4
	DD	$LN15@DoGrayscal
$LN15@DoGrayscal:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN11@DoGrayscal
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@DoGrayscal
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN13@DoGrayscal
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN14@DoGrayscal
$LN14@DoGrayscal:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN13@DoGrayscal:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN12@DoGrayscal:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN11@DoGrayscal:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
?DoGrayscale@gfx@mozilla@@YA_NPAUIDWriteFontFace@@M@Z ENDP ; mozilla::gfx::DoGrayscale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_aBuf$ = 8						; size = 4
?readShort@gfx@mozilla@@YAGPBD@Z PROC			; mozilla::gfx::readShort
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 57
	push	ebp
	mov	ebp, esp
; Line 58
	mov	eax, DWORD PTR _aBuf$[ebp]
	movsx	eax, BYTE PTR [eax]
	shl	eax, 8
	mov	ecx, DWORD PTR _aBuf$[ebp]
	movsx	edx, BYTE PTR [ecx+1]
	or	eax, edx
; Line 59
	pop	ebp
	ret	0
?readShort@gfx@mozilla@@YAGPBD@Z ENDP			; mozilla::gfx::readShort
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_smoothing_type$ = -20					; size = 4
_font_smoothing$ = -8					; size = 4
?GetSystemTextQuality@gfx@mozilla@@YAEXZ PROC		; mozilla::gfx::GetSystemTextQuality
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 32
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _font_smoothing$[ebp]
	push	eax
	push	0
	push	74					; 0000004aH
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@GetSystemT
; Line 33
	xor	al, al
	jmp	SHORT $LN5@GetSystemT
$LN4@GetSystemT:
; Line 36
	cmp	DWORD PTR _font_smoothing$[ebp], 0
	je	SHORT $LN3@GetSystemT
; Line 38
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _smoothing_type$[ebp]
	push	ecx
	push	0
	push	8202					; 0000200aH
	call	DWORD PTR __imp__SystemParametersInfoA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@GetSystemT
; Line 39
	xor	al, al
	jmp	SHORT $LN5@GetSystemT
$LN2@GetSystemT:
; Line 42
	cmp	DWORD PTR _smoothing_type$[ebp], 2
	jne	SHORT $LN1@GetSystemT
; Line 43
	mov	al, 5
	jmp	SHORT $LN5@GetSystemT
$LN1@GetSystemT:
; Line 46
	mov	al, 4
	jmp	SHORT $LN5@GetSystemT
$LN3@GetSystemT:
; Line 49
	xor	al, al
$LN5@GetSystemT:
; Line 50
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetSystemT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@GetSystemT:
	DD	2
	DD	$LN9@GetSystemT
$LN9@GetSystemT:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@GetSystemT
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@GetSystemT
$LN8@GetSystemT:
	DB	115					; 00000073H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	95					; 0000005fH
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN7@GetSystemT:
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	115					; 00000073H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
?GetSystemTextQuality@gfx@mozilla@@YAEXZ ENDP		; mozilla::gfx::GetSystemTextQuality
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 323
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
; Line 325
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1MI@FEBILKEM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEABMXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@MHPBMABMU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,int,float const *,float const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ PROC	; std::vector<float,std::allocator<float> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ ENDP	; std::vector<float,std::allocator<float> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z PROC ; std::vector<float,std::allocator<float> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IBEXXZ ; std::vector<float,std::allocator<float> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z ; std::vector<float,std::allocator<float> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ; std::vector<float,std::allocator<float> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ENDP ; std::vector<float,std::allocator<float> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z PROC ; std::vector<float,std::allocator<float> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAM@?$vector@MV?$allocator@M@std@@@std@@IAEPAMPAM00@Z ; std::vector<float,std::allocator<float> >::_Umove<float *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+12]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	mov	ecx, DWORD PTR __Size$[ebp]
	mov	edx, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1608
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+4], eax
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ENDP ; std::vector<float,std::allocator<float> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z PROC ; std::vector<float,std::allocator<float> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IBEII@Z ENDP ; std::vector<float,std::allocator<float> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z PROC ; std::vector<float,std::allocator<float> >::_Pop_back_n, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1495
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1496
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	sub	edx, eax
	mov	DWORD PTR __Ptr$[ebp], edx
; Line 1499
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IBEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
; Line 1502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
; Line 1503
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1504
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ENDP ; std::vector<float,std::allocator<float> >::_Pop_back_n
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ
_TEXT	SEGMENT
tv72 = -40						; size = 4
tv73 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ PROC ; std::vector<float,std::allocator<float> >::front, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1223
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1224
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::begin
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QBEAAMXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]
; Line 1225
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@XZ
__ehhandler$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ ENDP ; std::vector<float,std::allocator<float> >::front
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ PROC ; std::vector<float,std::allocator<float> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<float> >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ENDP ; std::vector<float,std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ PROC	; std::vector<float,std::allocator<float> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ENDP	; std::vector<float,std::allocator<float> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Alval$2 = -25						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z PROC ; std::vector<float,std::allocator<float> >::resize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1100
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1101
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	cmp	DWORD PTR __Newsize$[ebp], eax
	jae	SHORT $LN4@resize
; Line 1102
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	sub	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Pop_back_n@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ; std::vector<float,std::allocator<float> >::_Pop_back_n
	jmp	$LN6@resize
$LN4@resize:
; Line 1103
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	$LN6@resize
; Line 1105
	lea	eax, DWORD PTR __Alval$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
; Line 1106
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IAEXI@Z ; std::vector<float,std::allocator<float> >::_Reserve
; Line 1107
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1109
	lea	edx, DWORD PTR __Alval$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	??$_Uninitialized_default_fill_n@PAMIU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAMIAAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_default_fill_n<float *,unsigned int,std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@resize
__catch$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$0:
; Line 1111
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ; std::vector<float,std::allocator<float> >::_Tidy
; Line 1112
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1113
	mov	eax, $LN10@resize
	ret	0
$LN7@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$1
$LN10@resize:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z$1:
; Line 1114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ; std::vector<float,std::allocator<float> >::size
	mov	ecx, DWORD PTR __Newsize$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [eax+ecx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN6@resize:
; Line 1116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@resize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN14@resize:
	DD	1
	DD	$LN13@resize
$LN13@resize:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN11@resize
$LN11@resize:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ENDP ; std::vector<float,std::allocator<float> >::resize
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ PROC ; std::vector<float,std::allocator<float> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QAE@PAMPBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<float> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@MV?$allocator@M@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ENDP ; std::vector<float,std::allocator<float> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ PROC ; std::vector<float,std::allocator<float> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ENDP ; std::vector<float,std::allocator<float> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ PROC ; std::vector<float,std::allocator<float> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@MV?$allocator@M@std@@@std@@QBEIXZ ENDP ; std::vector<float,std::allocator<float> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ; std::vector<float,std::allocator<float> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ PROC	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@M@std@@QAE@XZ		; std::allocator<float>::allocator<float>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<float> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z ; std::allocator_traits<std::allocator<float> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@M@std@@QAEXPAMI@Z ; std::allocator<float>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@M@std@@QAEPAMI@Z	; std::allocator<float>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEPAMI@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@M@std@@QAE@XZ		; std::allocator<float>::allocator<float>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z PROC ; std::allocator_traits<std::allocator<float> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@M@std@@QBEIXZ	; std::allocator<float>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SAIABV?$allocator@M@2@@Z ENDP ; std::allocator_traits<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@M@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@M@std@@QBEIXZ PROC		; std::allocator<float>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@M@std@@QBEIXZ ENDP		; std::allocator<float>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@M@std@@QAEPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@M@std@@QAEPAMI@Z PROC		; std::allocator<float>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@M@std@@YAPAMIPAM@Z		; std::_Allocate<float>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@M@std@@QAEPAMI@Z ENDP		; std::allocator<float>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@M@std@@QAEXPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@M@std@@QAEXPAMI@Z PROC		; std::allocator<float>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@M@std@@QAEXPAMI@Z ENDP		; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@M@std@@QAE@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@M@std@@QAE@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ PROC ; RefPtr<IDWriteFontFace>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ENDP ; RefPtr<IDWriteFontFace>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ PROC ; RefPtr<IDWriteFontFace>::operator IDWriteFontFace *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ENDP ; RefPtr<IDWriteFontFace>::operator IDWriteFontFace *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ PROC ; RefPtr<IDWriteFontFace>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ENDP ; RefPtr<IDWriteFontFace>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv66 = -12						; size = 4
_defaultMode$ = -5					; size = 1
_this$ = -4						; size = 4
?GetDefaultAAMode@ScaledFontDWrite@gfx@mozilla@@UAE?AW4AntialiasMode@23@XZ PROC ; mozilla::gfx::ScaledFontDWrite::GetDefaultAAMode
; _this$ = ecx
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 216
	mov	BYTE PTR _defaultMode$[ebp], 2
; Line 218
	call	?GetSystemTextQuality@gfx@mozilla@@YAEXZ ; mozilla::gfx::GetSystemTextQuality
	mov	BYTE PTR tv66[ebp], al
	cmp	BYTE PTR tv66[ebp], 0
	je	SHORT $LN3@GetDefault
	cmp	BYTE PTR tv66[ebp], 4
	je	SHORT $LN4@GetDefault
	cmp	BYTE PTR tv66[ebp], 5
	je	SHORT $LN5@GetDefault
	jmp	SHORT $LN6@GetDefault
$LN5@GetDefault:
; Line 220
	mov	BYTE PTR _defaultMode$[ebp], 2
; Line 221
	jmp	SHORT $LN6@GetDefault
$LN4@GetDefault:
; Line 223
	mov	BYTE PTR _defaultMode$[ebp], 1
; Line 224
	jmp	SHORT $LN6@GetDefault
$LN3@GetDefault:
; Line 226
	mov	BYTE PTR _defaultMode$[ebp], 0
$LN6@GetDefault:
; Line 230
	cmp	BYTE PTR _defaultMode$[ebp], 1
	jne	SHORT $LN1@GetDefault
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??B?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator IDWriteFontFace *
	push	eax
	call	?DoGrayscale@gfx@mozilla@@YA_NPAUIDWriteFontFace@@M@Z ; mozilla::gfx::DoGrayscale
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@GetDefault
; Line 232
	mov	BYTE PTR _defaultMode$[ebp], 0
$LN1@GetDefault:
; Line 235
	mov	al, BYTE PTR _defaultMode$[ebp]
; Line 236
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDefaultAAMode@ScaledFontDWrite@gfx@mozilla@@UAE?AW4AntialiasMode@23@XZ ENDP ; mozilla::gfx::ScaledFontDWrite::GetDefaultAAMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv206 = -184						; size = 4
tv196 = -180						; size = 4
tv177 = -176						; size = 4
tv167 = -172						; size = 4
tv153 = -168						; size = 4
tv138 = -164						; size = 4
tv95 = -160						; size = 4
tv82 = -156						; size = 4
tv68 = -152						; size = 4
$T2 = -146						; size = 1
$T3 = -145						; size = 1
$T4 = -144						; size = 4
$T5 = -140						; size = 4
$T6 = -136						; size = 4
_context$ = -128					; size = 4
_fragmentStart$ = -116					; size = 4
_fileSize$ = -108					; size = 4
_fileSize64$ = -100					; size = 8
_stream$ = -84						; size = 4
_loader$ = -72						; size = 4
_refKeySize$ = -60					; size = 4
_referenceKey$ = -48					; size = 4
_file$ = -36						; size = 4
_fileCount$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aDataCallback$ = 8					; size = 4
_aBaton$ = 12						; size = 4
?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z PROC ; mozilla::gfx::ScaledFontDWrite::GetFontFileData
; _this$ = ecx
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 168
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 172				; 000000acH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-184]
	mov	ecx, 43					; 0000002bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	mov	DWORD PTR _fileCount$[ebp], 0
; Line 170
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _fileCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	cmp	DWORD PTR _fileCount$[ebp], 1
	jbe	SHORT $LN8@GetFontFil
$LN7@GetFontFil:
; Line 173
	xor	edx, edx
	jne	SHORT $LN7@GetFontFil
; Line 174
	xor	al, al
	jmp	$LN9@GetFontFil
$LN8@GetFontFil:
; Line 177
	lea	ecx, DWORD PTR _file$[ebp]
	call	??0?$RefPtr@UIDWriteFontFile@@@@QAE@XZ	; RefPtr<IDWriteFontFile>::RefPtr<IDWriteFontFile>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 178
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator->
	mov	DWORD PTR tv82[ebp], eax
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	call	??$getter_AddRefs@UIDWriteFontFile@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@AAV?$RefPtr@UIDWriteFontFile@@@@@Z ; getter_AddRefs<IDWriteFontFile>
	add	esp, 8
	mov	ecx, eax
	call	??B?$RefPtrGetterAddRefs@UIDWriteFontFile@@@@QAEPAPAUIDWriteFontFile@@XZ ; RefPtrGetterAddRefs<IDWriteFontFile>::operator IDWriteFontFile * *
	mov	esi, esp
	push	eax
	lea	edx, DWORD PTR _fileCount$[ebp]
	push	edx
	mov	eax, DWORD PTR tv82[ebp]
	push	eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	lea	ecx, DWORD PTR _file$[ebp]
	call	??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::operator->
	mov	DWORD PTR tv95[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _refKeySize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _referenceKey$[ebp]
	push	edx
	mov	eax, DWORD PTR tv95[ebp]
	push	eax
	mov	ecx, DWORD PTR tv95[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 188
	lea	ecx, DWORD PTR _loader$[ebp]
	call	??0?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ; RefPtr<IDWriteFontFileLoader>::RefPtr<IDWriteFontFileLoader>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 189
	lea	ecx, DWORD PTR _file$[ebp]
	call	??C?$RefPtr@UIDWriteFontFile@@@@QBEPAUIDWriteFontFile@@XZ ; RefPtr<IDWriteFontFile>::operator->
	mov	DWORD PTR tv138[ebp], eax
	lea	ecx, DWORD PTR _loader$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??$getter_AddRefs@UIDWriteFontFileLoader@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@AAV?$RefPtr@UIDWriteFontFileLoader@@@@@Z ; getter_AddRefs<IDWriteFontFileLoader>
	add	esp, 8
	mov	ecx, eax
	call	??B?$RefPtrGetterAddRefs@UIDWriteFontFileLoader@@@@QAEPAPAUIDWriteFontFileLoader@@XZ ; RefPtrGetterAddRefs<IDWriteFontFileLoader>::operator IDWriteFontFileLoader * *
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR tv138[ebp]
	push	eax
	mov	ecx, DWORD PTR tv138[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 191
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??0?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ; RefPtr<IDWriteFontFileStream>::RefPtr<IDWriteFontFileStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 192
	lea	ecx, DWORD PTR _loader$[ebp]
	call	??C?$RefPtr@UIDWriteFontFileLoader@@@@QBEPAUIDWriteFontFileLoader@@XZ ; RefPtr<IDWriteFontFileLoader>::operator->
	mov	DWORD PTR tv153[ebp], eax
	lea	ecx, DWORD PTR _stream$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	??$getter_AddRefs@UIDWriteFontFileStream@@@@YA?AV?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@AAV?$RefPtr@UIDWriteFontFileStream@@@@@Z ; getter_AddRefs<IDWriteFontFileStream>
	add	esp, 8
	mov	ecx, eax
	call	??B?$RefPtrGetterAddRefs@UIDWriteFontFileStream@@@@QAEPAPAUIDWriteFontFileStream@@XZ ; RefPtrGetterAddRefs<IDWriteFontFileStream>::operator IDWriteFontFileStream * *
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _refKeySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _referenceKey$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	mov	eax, DWORD PTR tv153[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 195
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::operator->
	mov	DWORD PTR tv167[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _fileSize64$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv167[ebp]
	push	ecx
	mov	edx, DWORD PTR tv167[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 196
	cmp	DWORD PTR _fileSize64$[ebp+4], 0
	ja	SHORT $LN14@GetFontFil
	cmp	DWORD PTR _fileSize64$[ebp], -1
	jbe	SHORT $LN4@GetFontFil
$LN14@GetFontFil:
; Line 197
	xor	edx, edx
	jne	SHORT $LN14@GetFontFil
; Line 198
	mov	BYTE PTR $T3[ebp], 0
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _loader$[ebp]
	call	??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ	; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>
	mov	al, BYTE PTR $T3[ebp]
	jmp	$LN9@GetFontFil
$LN4@GetFontFil:
; Line 201
	mov	eax, DWORD PTR _fileSize64$[ebp]
	mov	DWORD PTR _fileSize$[ebp], eax
; Line 204
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::operator->
	mov	DWORD PTR tv177[ebp], eax
	mov	esi, esp
	lea	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileSize$[ebp]
	xor	eax, eax
	push	eax
	push	edx
	push	0
	push	0
	lea	ecx, DWORD PTR _fragmentStart$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv177[ebp]
	push	edx
	mov	eax, DWORD PTR tv177[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 206
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator->
	mov	DWORD PTR tv196[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aBaton$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [ecx+16]
	movss	DWORD PTR [esp], xmm0
	mov	edi, esp
	mov	edx, DWORD PTR tv196[ebp]
	push	edx
	mov	eax, DWORD PTR tv196[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	eax, DWORD PTR _fileSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fragmentStart$[ebp]
	push	ecx
	call	DWORD PTR _aDataCallback$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??C?$RefPtr@UIDWriteFontFileStream@@@@QBEPAUIDWriteFontFileStream@@XZ ; RefPtr<IDWriteFontFileStream>::operator->
	mov	DWORD PTR tv206[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	mov	eax, DWORD PTR tv206[ebp]
	push	eax
	mov	ecx, DWORD PTR tv206[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 210
	mov	BYTE PTR $T2[ebp], 1
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _stream$[ebp]
	call	??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _loader$[ebp]
	call	??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _file$[ebp]
	call	??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ	; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>
	mov	al, BYTE PTR $T2[ebp]
$LN9@GetFontFil:
; Line 211
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@GetFontFil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 184				; 000000b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN26@GetFontFil:
	DD	9
	DD	$LN25@GetFontFil
$LN25@GetFontFil:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN15@GetFontFil
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN16@GetFontFil
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN17@GetFontFil
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN18@GetFontFil
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN19@GetFontFil
	DD	-84					; ffffffacH
	DD	4
	DD	$LN20@GetFontFil
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN21@GetFontFil
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN22@GetFontFil
	DD	-128					; ffffff80H
	DD	4
	DD	$LN23@GetFontFil
$LN23@GetFontFil:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN22@GetFontFil:
	DB	102					; 00000066H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN21@GetFontFil:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	54					; 00000036H
	DB	52					; 00000034H
	DB	0
$LN20@GetFontFil:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN19@GetFontFil:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN18@GetFontFil:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN17@GetFontFil:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	75					; 0000004bH
	DB	101					; 00000065H
	DB	121					; 00000079H
	DB	0
$LN16@GetFontFil:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN15@GetFontFil:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$0:
	lea	ecx, DWORD PTR _file$[ebp]
	jmp	??1?$RefPtr@UIDWriteFontFile@@@@QAE@XZ	; RefPtr<IDWriteFontFile>::~RefPtr<IDWriteFontFile>
__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$1:
	lea	ecx, DWORD PTR _loader$[ebp]
	jmp	??1?$RefPtr@UIDWriteFontFileLoader@@@@QAE@XZ ; RefPtr<IDWriteFontFileLoader>::~RefPtr<IDWriteFontFileLoader>
__unwindfunclet$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z$2:
	lea	ecx, DWORD PTR _stream$[ebp]
	jmp	??1?$RefPtr@UIDWriteFontFileStream@@@@QAE@XZ ; RefPtr<IDWriteFontFileStream>::~RefPtr<IDWriteFontFileStream>
__ehhandler$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-184]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetFontFileData@ScaledFontDWrite@gfx@mozilla@@UAE_NP6AXPBEIIMPAX@Z1@Z ENDP ; mozilla::gfx::ScaledFontDWrite::GetFontFileData
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv162 = -100						; size = 4
tv234 = -96						; size = 4
_i$2 = -92						; size = 4
_offsets$ = -84						; size = 16
_advances$ = -60					; size = 16
_indices$ = -36						; size = 16
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aBuffer$ = 8						; size = 4
_aSink$ = 12						; size = 4
?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z PROC ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToSink
; _this$ = ecx
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 146
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 88					; 00000058H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-100]
	mov	ecx, 22					; 00000016H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 147
	lea	ecx, DWORD PTR _indices$[ebp]
	call	??0?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::vector<unsigned short,std::allocator<unsigned short> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 148
	lea	ecx, DWORD PTR _advances$[ebp]
	call	??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 149
	lea	ecx, DWORD PTR _offsets$[ebp]
	call	??0?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 150
	mov	eax, DWORD PTR _aBuffer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	lea	ecx, DWORD PTR _indices$[ebp]
	call	?resize@?$vector@GV?$allocator@G@std@@@std@@QAEXI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::resize
; Line 151
	mov	edx, DWORD PTR _aBuffer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR _advances$[ebp]
	call	?resize@?$vector@MV?$allocator@M@std@@@std@@QAEXI@Z ; std::vector<float,std::allocator<float> >::resize
; Line 152
	mov	ecx, DWORD PTR _aBuffer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR _offsets$[ebp]
	call	?resize@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEXI@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::resize
; Line 154
	mov	eax, DWORD PTR _aBuffer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	shl	ecx, 2
	push	ecx
	push	0
	lea	ecx, DWORD PTR _advances$[ebp]
	call	?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ ; std::vector<float,std::allocator<float> >::front
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 155
	mov	DWORD PTR _i$2[ebp], 0
	jmp	SHORT $LN3@CopyGlyphs
$LN2@CopyGlyphs:
	mov	edx, DWORD PTR _i$2[ebp]
	add	edx, 1
	mov	DWORD PTR _i$2[ebp], edx
$LN3@CopyGlyphs:
	mov	eax, DWORD PTR _aBuffer$[ebp]
	mov	ecx, DWORD PTR _i$2[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jae	SHORT $LN1@CopyGlyphs
; Line 156
	imul	esi, DWORD PTR _i$2[ebp], 12
	mov	edx, DWORD PTR _aBuffer$[ebp]
	mov	edi, DWORD PTR [edx]
	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _indices$[ebp]
	call	??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
	mov	cx, WORD PTR [edi+esi]
	mov	WORD PTR [eax], cx
; Line 157
	imul	esi, DWORD PTR _i$2[ebp], 12
	mov	edx, DWORD PTR _aBuffer$[ebp]
	mov	edi, DWORD PTR [edx]
	mov	eax, DWORD PTR _i$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _offsets$[ebp]
	call	??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::operator[]
	mov	ecx, DWORD PTR [edi+esi+4]
	mov	DWORD PTR [eax], ecx
; Line 158
	imul	edx, DWORD PTR _i$2[ebp], 12
	mov	eax, DWORD PTR _aBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	movss	xmm0, DWORD PTR [ecx+edx+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	edx, DWORD PTR _i$2[ebp]
	push	edx
	lea	ecx, DWORD PTR _offsets$[ebp]
	movss	DWORD PTR tv234[ebp], xmm0
	call	??A?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@I@Z ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::operator[]
	movss	xmm0, DWORD PTR tv234[ebp]
	movss	DWORD PTR [eax+4], xmm0
; Line 159
	jmp	SHORT $LN2@CopyGlyphs
$LN1@CopyGlyphs:
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??C?$RefPtr@UIDWriteFontFace@@@@QBEPAUIDWriteFontFace@@XZ ; RefPtr<IDWriteFontFace>::operator->
	mov	DWORD PTR tv162[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aSink$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _aBuffer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	lea	ecx, DWORD PTR _offsets$[ebp]
	call	?front@?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAEAAUDWRITE_GLYPH_OFFSET@@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::front
	push	eax
	lea	ecx, DWORD PTR _advances$[ebp]
	call	?front@?$vector@MV?$allocator@M@std@@@std@@QAEAAMXZ ; std::vector<float,std::allocator<float> >::front
	push	eax
	lea	ecx, DWORD PTR _indices$[ebp]
	call	?front@?$vector@GV?$allocator@G@std@@@std@@QAEAAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::front
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	movss	xmm0, DWORD PTR [eax+16]
	movss	DWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR tv162[ebp]
	push	ecx
	mov	edx, DWORD PTR tv162[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+56]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 164
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _offsets$[ebp]
	call	??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::~vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _advances$[ebp]
	call	??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _indices$[ebp]
	call	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@CopyGlyphs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 100				; 00000064H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN14@CopyGlyphs:
	DD	3
	DD	$LN13@CopyGlyphs
$LN13@CopyGlyphs:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN9@CopyGlyphs
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN10@CopyGlyphs
	DD	-84					; ffffffacH
	DD	16					; 00000010H
	DD	$LN11@CopyGlyphs
$LN11@CopyGlyphs:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	0
$LN10@CopyGlyphs:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN9@CopyGlyphs:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$0:
	lea	ecx, DWORD PTR _indices$[ebp]
	jmp	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$1:
	lea	ecx, DWORD PTR _advances$[ebp]
	jmp	??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
__unwindfunclet$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z$2:
	lea	ecx, DWORD PTR _offsets$[ebp]
	jmp	??1?$vector@UDWRITE_GLYPH_OFFSET@@V?$allocator@UDWRITE_GLYPH_OFFSET@@@std@@@std@@QAE@XZ ; std::vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >::~vector<DWRITE_GLYPH_OFFSET,std::allocator<DWRITE_GLYPH_OFFSET> >
__ehhandler$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z ENDP ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToSink
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
_pathBuilderD2D$ = -8					; size = 4
_this$ = -4						; size = 4
_aBuffer$ = 8						; size = 4
_aBuilder$ = 12						; size = 4
_aBackendType$ = 16					; size = 1
_aTransformHint$ = 20					; size = 4
?CopyGlyphsToBuilder@ScaledFontDWrite@gfx@mozilla@@UAEXABUGlyphBuffer@23@PAVPathBuilder@23@W4BackendType@23@PBVMatrix@23@@Z PROC ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToBuilder
; _this$ = ecx
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 133
	cmp	BYTE PTR _aBackendType$[ebp], 1
	je	SHORT $LN1@CopyGlyphs
	cmp	BYTE PTR _aBackendType$[ebp], 7
	je	SHORT $LN1@CopyGlyphs
; Line 134
	mov	eax, DWORD PTR _aTransformHint$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _aBackendType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aBuilder$[ebp]
	push	edx
	mov	eax, DWORD PTR _aBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyGlyphsToBuilder@ScaledFontBase@gfx@mozilla@@UAEXABUGlyphBuffer@23@PAVPathBuilder@23@W4BackendType@23@PBVMatrix@23@@Z ; mozilla::gfx::ScaledFontBase::CopyGlyphsToBuilder
; Line 135
	jmp	SHORT $LN2@CopyGlyphs
$LN1@CopyGlyphs:
; Line 139
	mov	ecx, DWORD PTR _aBuilder$[ebp]
	mov	DWORD PTR _pathBuilderD2D$[ebp], ecx
; Line 141
	mov	ecx, DWORD PTR _pathBuilderD2D$[ebp]
	call	?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ ; mozilla::gfx::PathBuilderD2D::GetSink
	push	eax
	mov	edx, DWORD PTR _aBuffer$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToSink
$LN2@CopyGlyphs:
; Line 142
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CopyGlyphsToBuilder@ScaledFontDWrite@gfx@mozilla@@UAEXABUGlyphBuffer@23@PAVPathBuilder@23@W4BackendType@23@PBVMatrix@23@@Z ENDP ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv142 = -52						; size = 4
tv153 = -48						; size = 4
tv159 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
_pathBuilderD2D$ = -32					; size = 4
_pathBuilder$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_aBuffer$ = 12						; size = 4
_aTarget$ = 16						; size = 4
?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z PROC ; mozilla::gfx::ScaledFontDWrite::GetPathForGlyphs
; _this$ = ecx
; File d:\mozilla\gfx\2d\scaledfontdwrite.cpp
; Line 101
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-52]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 102
	mov	eax, DWORD PTR _aTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _aTarget$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	al, 1
	je	SHORT $LN1@GetPathFor
	mov	ecx, DWORD PTR _aTarget$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _aTarget$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	al, 7
	je	SHORT $LN1@GetPathFor
; Line 103
	mov	ecx, DWORD PTR _aTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPathForGlyphs@ScaledFontBase@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z ; mozilla::gfx::ScaledFontBase::GetPathForGlyphs
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN2@GetPathFor
$LN1@GetPathFor:
; Line 106
	mov	esi, esp
	push	0
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	eax, DWORD PTR _aTarget$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _aTarget$[ebp]
	mov	eax, DWORD PTR [edx+144]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv159[ebp], eax
	mov	ecx, DWORD PTR tv159[ebp]
	mov	DWORD PTR tv153[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv153[ebp]
	push	edx
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
; Line 109
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
	mov	DWORD PTR _pathBuilderD2D$[ebp], eax
; Line 111
	mov	ecx, DWORD PTR _pathBuilderD2D$[ebp]
	call	?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ ; mozilla::gfx::PathBuilderD2D::GetSink
	push	eax
	mov	eax, DWORD PTR _aBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyGlyphsToSink@ScaledFontDWrite@gfx@mozilla@@QAEXABUGlyphBuffer@23@PAUID2D1GeometrySink@@@Z ; mozilla::gfx::ScaledFontDWrite::CopyGlyphsToSink
; Line 113
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv142[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv142[ebp]
	mov	edx, DWORD PTR [eax+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN2@GetPathFor:
; Line 114
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetPathFor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 52					; 00000034H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN11@GetPathFor:
	DD	1
	DD	$LN10@GetPathFor
$LN10@GetPathFor:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@GetPathFor
$LN8@GetPathFor:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@GetPathFor
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
$LN5@GetPathFor:
	ret	0
__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
__unwindfunclet$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z$2:
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	jmp	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
__ehhandler$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetPathForGlyphs@ScaledFontDWrite@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@ABUGlyphBuffer@23@PBVDrawTarget@23@@Z ENDP ; mozilla::gfx::ScaledFontDWrite::GetPathForGlyphs
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ PROC ; RefPtr<ID2D1GeometrySink>::operator ID2D1GeometrySink *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ; RefPtr<ID2D1GeometrySink>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ENDP ; RefPtr<ID2D1GeometrySink>::operator ID2D1GeometrySink *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ PROC ; RefPtr<ID2D1GeometrySink>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ENDP ; RefPtr<ID2D1GeometrySink>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ PROC ; mozilla::gfx::PathBuilderD2D::GetSink, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathd2d.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??B?$RefPtr@UID2D1GeometrySink@@@@QBEPAUID2D1GeometrySink@@XZ ; RefPtr<ID2D1GeometrySink>::operator ID2D1GeometrySink *
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetSink@PathBuilderD2D@gfx@mozilla@@QAEPAUID2D1GeometrySink@@XZ ENDP ; mozilla::gfx::PathBuilderD2D::GetSink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
tv81 = -28						; size = 4
tv73 = -24						; size = 4
tv67 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_cnt$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Release:
; Line 117
	xor	eax, eax
	jne	SHORT $LN3@Release
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	DWORD PTR tv67[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _cnt$[ebp], edx
; Line 128
	cmp	DWORD PTR _cnt$[ebp], 0
	jne	SHORT $LN5@Release
; Line 136
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@Release
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN8@Release
$LN7@Release:
	mov	DWORD PTR tv73[ebp], 0
$LN8@Release:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Release
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN9@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
; Line 138
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 608
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 564
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z PROC		; std::_Debug_pointer<unsigned short>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@G@std@@YAXPAGPB_WI@Z ENDP		; std::_Debug_pointer<unsigned short>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAG@std@@YAXPAG0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAG@std@@YAXPAG0PB_WI@Z PROC		; std::_Debug_range<unsigned short *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAG@std@@YA?AUrandom_access_iterator_tag@0@ABQAG@Z ; std::_Iter_cat<unsigned short *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAG@std@@YAXPAG0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<unsigned short *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAG@std@@YAXPAG0PB_WI@Z ENDP		; std::_Debug_range<unsigned short *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2296
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2291
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2232
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	mov	esi, esp
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Parent_proxy$3 = -32					; size = 4
__Lock$4 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Adopt:
; Line 174
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iterator_b:
	DD	1
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
	push	esi
; Line 557
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END

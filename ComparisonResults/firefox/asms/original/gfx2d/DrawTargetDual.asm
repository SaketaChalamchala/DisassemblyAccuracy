; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\gfx\2d\DrawTargetDual.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG70167 DB	'Failure to allocate a similar DrawTargetDual. Size: ', 00H
	ORG $+3
$SG36821 DB	'Assertion failure: %s, at %s:%d', 0aH, 00H
	ORG $+3
$SG36827 DB	'Hit MOZ_CRASH(%s) at %s:%d', 0aH, 00H
CONST	ENDS
PUBLIC	_hypot
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?eq@?$char_traits@D@std@@SA_NABD0@Z		; std::char_traits<char>::eq
PUBLIC	?to_char_type@?$char_traits@D@std@@SADABH@Z	; std::char_traits<char>::to_char_type
PUBLIC	?to_int_type@?$char_traits@D@std@@SAHABD@Z	; std::char_traits<char>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?not_eof@?$char_traits@D@std@@SAHABH@Z		; std::char_traits<char>::not_eof
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z ; std::_Atomic_fetch_add_4
PUBLIC	?_Atomic_fetch_sub_4@std@@YAKPCKKW4memory_order@1@@Z ; std::_Atomic_fetch_sub_4
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	_MOZ_NoReturn
PUBLIC	??0Matrix@gfx@mozilla@@QAE@XZ			; mozilla::gfx::Matrix::Matrix
PUBLIC	??0UserData@gfx@mozilla@@QAE@XZ			; mozilla::gfx::UserData::UserData
PUBLIC	?Destroy@UserData@gfx@mozilla@@QAEXXZ		; mozilla::gfx::UserData::Destroy
PUBLIC	??1UserData@gfx@mozilla@@QAE@XZ			; mozilla::gfx::UserData::~UserData
PUBLIC	?_Store_relaxed_4@std@@YAXPCKK@Z		; std::_Store_relaxed_4
PUBLIC	?_Store_release_4@std@@YAXPCKK@Z		; std::_Store_release_4
PUBLIC	?_Store_seq_cst_4@std@@YAXPCKK@Z		; std::_Store_seq_cst_4
PUBLIC	?_Atomic_store_4@std@@YAXPCKKW4memory_order@1@@Z ; std::_Atomic_store_4
PUBLIC	?_Fetch_add_seq_cst_4@std@@YAKPCKK@Z		; std::_Fetch_add_seq_cst_4
PUBLIC	?_Fetch_add_relaxed_4@std@@YAKPCKK@Z		; std::_Fetch_add_relaxed_4
PUBLIC	?_Fetch_add_acquire_4@std@@YAKPCKK@Z		; std::_Fetch_add_acquire_4
PUBLIC	?_Fetch_add_release_4@std@@YAKPCKK@Z		; std::_Fetch_add_release_4
PUBLIC	??4atomic_uint@std@@QAEII@Z			; std::atomic_uint::operator=
PUBLIC	?fetch_add@atomic_uint@std@@QAEIIW4memory_order@2@@Z ; std::atomic_uint::fetch_add
PUBLIC	?fetch_sub@atomic_uint@std@@QAEIIW4memory_order@2@@Z ; std::atomic_uint::fetch_sub
PUBLIC	??0?$atomic@I@std@@QAE@I@Z			; std::atomic<unsigned int>::atomic<unsigned int>
PUBLIC	?atomic_store_explicit@std@@YAXPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_store_explicit
PUBLIC	?atomic_store@std@@YAXPAUatomic_uint@1@I@Z	; std::atomic_store
PUBLIC	?atomic_fetch_add_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_fetch_add_explicit
PUBLIC	?atomic_fetch_sub_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_fetch_sub_explicit
PUBLIC	?add@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::add
PUBLIC	?sub@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::sub
PUBLIC	?inc@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::inc
PUBLIC	?dec@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::dec
PUBLIC	??0?$AtomicBase@I$01@detail@mozilla@@QAE@I@Z	; mozilla::detail::AtomicBase<unsigned int,2>::AtomicBase<unsigned int,2>
PUBLIC	??0?$AtomicBaseIncDec@I$01@detail@mozilla@@QAE@I@Z ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::AtomicBaseIncDec<unsigned int,2>
PUBLIC	??E?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator++
PUBLIC	??F?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator--
PUBLIC	??0?$Atomic@I$01X@mozilla@@QAE@I@Z		; mozilla::Atomic<unsigned int,2,void>::Atomic<unsigned int,2,void>
PUBLIC	??1Pattern@gfx@mozilla@@UAE@XZ			; mozilla::gfx::Pattern::~Pattern
PUBLIC	??0Pattern@gfx@mozilla@@IAE@XZ			; mozilla::gfx::Pattern::Pattern
PUBLIC	??_GPattern@gfx@mozilla@@UAEPAXI@Z		; mozilla::gfx::Pattern::`scalar deleting destructor'
PUBLIC	??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z ; mozilla::gfx::SurfacePattern::SurfacePattern
PUBLIC	?GetType@SurfacePattern@gfx@mozilla@@UBE?AW4PatternType@23@XZ ; mozilla::gfx::SurfacePattern::GetType
PUBLIC	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
PUBLIC	??0?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@PAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface>
PUBLIC	?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::get
PUBLIC	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
PUBLIC	??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator->
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsReleaseHelper
PUBLIC	??0?$BaseRect@HU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@U?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntMarginTyped@UUnknownUnits@gfx@mozilla@@@23@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >
PUBLIC	??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>
PUBLIC	??1SurfacePattern@gfx@mozilla@@UAE@XZ		; mozilla::gfx::SurfacePattern::~SurfacePattern
PUBLIC	??_GSurfacePattern@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::SurfacePattern::`scalar deleting destructor'
PUBLIC	??0?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::RefCounted<mozilla::gfx::SourceSurface,0>
PUBLIC	??1?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::~RefCounted<mozilla::gfx::SourceSurface,0>
PUBLIC	?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::AddRef
PUBLIC	?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::Release
PUBLIC	??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>
PUBLIC	??0?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::AtomicRefCounted<mozilla::gfx::SourceSurface>
PUBLIC	??1SourceSurface@gfx@mozilla@@UAE@XZ		; mozilla::gfx::SourceSurface::~SourceSurface
PUBLIC	?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ	; mozilla::gfx::SourceSurface::IsValid
PUBLIC	?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ; mozilla::gfx::SourceSurface::GetNativeSurface
PUBLIC	?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ ; mozilla::gfx::SourceSurface::GuaranteePersistance
PUBLIC	??0SourceSurface@gfx@mozilla@@QAE@XZ		; mozilla::gfx::SourceSurface::SourceSurface
PUBLIC	??_GSourceSurface@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::SourceSurface::`scalar deleting destructor'
PUBLIC	??0?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::RefCounted<mozilla::gfx::DrawTarget,1>
PUBLIC	??1?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::~RefCounted<mozilla::gfx::DrawTarget,1>
PUBLIC	?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::AddRef
PUBLIC	?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::Release
PUBLIC	??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>
PUBLIC	??0?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::RefCounted<mozilla::gfx::DrawTarget>
PUBLIC	??0DrawTarget@gfx@mozilla@@QAE@XZ		; mozilla::gfx::DrawTarget::DrawTarget
PUBLIC	??1DrawTarget@gfx@mozilla@@UAE@XZ		; mozilla::gfx::DrawTarget::~DrawTarget
PUBLIC	?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ	; mozilla::gfx::DrawTarget::IsValid
PUBLIC	?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ	; mozilla::gfx::DrawTarget::IsRecording
PUBLIC	?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ; mozilla::gfx::DrawTarget::LockBits
PUBLIC	?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z	; mozilla::gfx::DrawTarget::ReleaseBits
PUBLIC	?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ; mozilla::gfx::DrawTarget::CopyRect
PUBLIC	?PushLayer@DrawTarget@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z ; mozilla::gfx::DrawTarget::PushLayer
PUBLIC	?PopLayer@DrawTarget@gfx@mozilla@@UAEXXZ	; mozilla::gfx::DrawTarget::PopLayer
PUBLIC	?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z ; mozilla::gfx::DrawTarget::CreateShadowDrawTarget
PUBLIC	?SetTransform@DrawTarget@gfx@mozilla@@UAEXABVMatrix@23@@Z ; mozilla::gfx::DrawTarget::SetTransform
PUBLIC	?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ ; mozilla::gfx::DrawTarget::GetFormat
PUBLIC	?GetNativeSurface@DrawTarget@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ; mozilla::gfx::DrawTarget::GetNativeSurface
PUBLIC	?IsDualDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ ; mozilla::gfx::DrawTarget::IsDualDrawTarget
PUBLIC	?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ ; mozilla::gfx::DrawTarget::IsTiledDrawTarget
PUBLIC	?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ ; mozilla::gfx::DrawTarget::SupportsRegionClipping
PUBLIC	?IsCurrentGroupOpaque@DrawTarget@gfx@mozilla@@UAE_NXZ ; mozilla::gfx::DrawTarget::IsCurrentGroupOpaque
PUBLIC	?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z ; mozilla::gfx::DrawTarget::SetPermitSubpixelAA
PUBLIC	??_GDrawTarget@gfx@mozilla@@UAEPAXI@Z		; mozilla::gfx::DrawTarget::`scalar deleting destructor'
PUBLIC	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
PUBLIC	?take@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAEPAVSourceSurface@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::take
PUBLIC	??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>
PUBLIC	??0?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@P80@AEXNM@Z@Z ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget>
PUBLIC	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
PUBLIC	?take@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAEPAVDrawTarget@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::take
PUBLIC	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
PUBLIC	??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget>
PUBLIC	?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::get
PUBLIC	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
PUBLIC	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsReleaseHelper
PUBLIC	??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ; mozilla::gfx::SourceSurfaceDual::SourceSurfaceDual
PUBLIC	?GetType@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceType@23@XZ ; mozilla::gfx::SourceSurfaceDual::GetType
PUBLIC	?GetSize@SourceSurfaceDual@gfx@mozilla@@UBE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ ; mozilla::gfx::SourceSurfaceDual::GetSize
PUBLIC	?GetFormat@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceFormat@23@XZ ; mozilla::gfx::SourceSurfaceDual::GetFormat
PUBLIC	?GetDataSurface@SourceSurfaceDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VDataSourceSurface@gfx@mozilla@@@@XZ ; mozilla::gfx::SourceSurfaceDual::GetDataSurface
PUBLIC	??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ	; mozilla::gfx::SourceSurfaceDual::~SourceSurfaceDual
PUBLIC	??_GSourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::SourceSurfaceDual::`scalar deleting destructor'
PUBLIC	??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ; mozilla::gfx::DrawTargetDual::DrawTargetDual
PUBLIC	?GetType@DrawTargetDual@gfx@mozilla@@UBE?AW4DrawTargetType@23@XZ ; mozilla::gfx::DrawTargetDual::GetType
PUBLIC	?GetBackendType@DrawTargetDual@gfx@mozilla@@UBE?AW4BackendType@23@XZ ; mozilla::gfx::DrawTargetDual::GetBackendType
PUBLIC	?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ ; mozilla::gfx::DrawTargetDual::Snapshot
PUBLIC	?GetSize@DrawTargetDual@gfx@mozilla@@UAE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ ; mozilla::gfx::DrawTargetDual::GetSize
PUBLIC	?Flush@DrawTargetDual@gfx@mozilla@@UAEXXZ	; mozilla::gfx::DrawTargetDual::Flush
PUBLIC	?PushClip@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@@Z ; mozilla::gfx::DrawTargetDual::PushClip
PUBLIC	?PushClipRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ; mozilla::gfx::DrawTargetDual::PushClipRect
PUBLIC	?PopClip@DrawTargetDual@gfx@mozilla@@UAEXXZ	; mozilla::gfx::DrawTargetDual::PopClip
PUBLIC	?PopLayer@DrawTargetDual@gfx@mozilla@@UAEXXZ	; mozilla::gfx::DrawTargetDual::PopLayer
PUBLIC	?ClearRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ; mozilla::gfx::DrawTargetDual::ClearRect
PUBLIC	?SetTransform@DrawTargetDual@gfx@mozilla@@UAEXABVMatrix@23@@Z ; mozilla::gfx::DrawTargetDual::SetTransform
PUBLIC	?DrawSurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@1ABUDrawSurfaceOptions@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::DrawSurface
PUBLIC	?DrawFilter@DrawTargetDual@gfx@mozilla@@UAEXPAVFilterNode@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::DrawFilter
PUBLIC	?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::MaskSurface
PUBLIC	?DrawSurfaceWithShadow@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUColor@23@1MW4CompositionOp@23@@Z ; mozilla::gfx::DrawTargetDual::DrawSurfaceWithShadow
PUBLIC	?CopySurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ; mozilla::gfx::DrawTargetDual::CopySurface
PUBLIC	?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::FillRect
PUBLIC	?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::StrokeRect
PUBLIC	?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::StrokeLine
PUBLIC	?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::Stroke
PUBLIC	?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::Fill
PUBLIC	?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z ; mozilla::gfx::DrawTargetDual::FillGlyphs
PUBLIC	?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z ; mozilla::gfx::DrawTargetDual::Mask
PUBLIC	?PushLayer@DrawTargetDual@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z ; mozilla::gfx::DrawTargetDual::PushLayer
PUBLIC	?CreateSourceSurfaceFromData@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAEABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@HW4SurfaceFormat@23@@Z ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromData
PUBLIC	?OptimizeSourceSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAVSourceSurface@23@@Z ; mozilla::gfx::DrawTargetDual::OptimizeSourceSurface
PUBLIC	?CreateSourceSurfaceFromNativeSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@ABUNativeSurface@23@@Z ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromNativeSurface
PUBLIC	?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z ; mozilla::gfx::DrawTargetDual::CreateSimilarDrawTarget
PUBLIC	?CreatePathBuilder@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z ; mozilla::gfx::DrawTargetDual::CreatePathBuilder
PUBLIC	?CreateGradientStops@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VGradientStops@gfx@mozilla@@@@PAUGradientStop@23@IW4ExtendMode@23@@Z ; mozilla::gfx::DrawTargetDual::CreateGradientStops
PUBLIC	?CreateFilter@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VFilterNode@gfx@mozilla@@@@W4FilterType@23@@Z ; mozilla::gfx::DrawTargetDual::CreateFilter
PUBLIC	?GetNativeSurface@DrawTargetDual@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ; mozilla::gfx::DrawTargetDual::GetNativeSurface
PUBLIC	?IsDualDrawTarget@DrawTargetDual@gfx@mozilla@@UBE_NXZ ; mozilla::gfx::DrawTargetDual::IsDualDrawTarget
PUBLIC	?IsCurrentGroupOpaque@DrawTargetDual@gfx@mozilla@@UAE_NXZ ; mozilla::gfx::DrawTargetDual::IsCurrentGroupOpaque
PUBLIC	??1DrawTargetDual@gfx@mozilla@@UAE@XZ		; mozilla::gfx::DrawTargetDual::~DrawTargetDual
PUBLIC	??_GDrawTargetDual@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::DrawTargetDual::`scalar deleting destructor'
PUBLIC	??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ; mozilla::MakeAndAddRef<mozilla::gfx::SourceSurfaceDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
PUBLIC	??0?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::already_AddRefed<mozilla::gfx::SourceSurfaceDual>
PUBLIC	??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>
PUBLIC	?take@?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAEPAVSourceSurfaceDual@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::take
PUBLIC	??$?0VSourceSurfaceDual@gfx@mozilla@@@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::SourceSurface>::already_AddRefed<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurfaceDual>
PUBLIC	?ShouldOutputMessage@BasicLogger@gfx@mozilla@@SA_NH@Z ; mozilla::gfx::BasicLogger::ShouldOutputMessage
PUBLIC	?CrashAction@BasicLogger@gfx@mozilla@@SAXW4LogReason@23@@Z ; mozilla::gfx::BasicLogger::CrashAction
PUBLIC	?OutputMessage@BasicLogger@gfx@mozilla@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H_N@Z ; mozilla::gfx::BasicLogger::OutputMessage
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
PUBLIC	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
PUBLIC	??1DualPattern@gfx@mozilla@@QAE@XZ		; mozilla::gfx::DualPattern::~DualPattern
PUBLIC	?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ ; mozilla::gfx::ClassStorage<mozilla::gfx::SurfacePattern>::addr
PUBLIC	??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTarget>
PUBLIC	?DefaultOptions@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@SAH_N@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::DefaultOptions
PUBLIC	??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Log<2,mozilla::gfx::BasicLogger>
PUBLIC	??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::~Log<2,mozilla::gfx::BasicLogger>
PUBLIC	?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Flush
PUBLIC	??6?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@QBD@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<
PUBLIC	?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
PUBLIC	?NoNewline@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::NoNewline
PUBLIC	?AutoPrefix@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::AutoPrefix
PUBLIC	?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::ValidReason
PUBLIC	?Init@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXH_NW4LogReason@23@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Init
PUBLIC	?WriteLog@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::WriteLog
PUBLIC	??$?6HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@ABU?$BaseSize@HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@12@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<<int,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits> >
PUBLIC	??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ; mozilla::MakeAndAddRef<mozilla::gfx::DrawTargetDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
PUBLIC	??0?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::DrawTargetDual>::already_AddRefed<mozilla::gfx::DrawTargetDual>
PUBLIC	??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>
PUBLIC	?take@?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAEPAVDrawTargetDual@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::take
PUBLIC	??$?0VDrawTargetDual@gfx@mozilla@@@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTargetDual>
PUBLIC	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0?$fpos@H@std@@QAE@_J@Z			; std::fpos<int>::fpos<int>
PUBLIC	??B?$fpos@H@std@@QBE_JXZ			; std::fpos<int>::operator __int64
PUBLIC	?AddRef@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::AddRef
PUBLIC	?Release@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::Release
PUBLIC	?AddRef@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::AddRef
PUBLIC	?Release@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::Release
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	?convert@?$ToStorageTypeArgument@I@detail@mozilla@@SAII@Z ; mozilla::detail::ToStorageTypeArgument<unsigned int>::convert
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
PUBLIC	??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurfaceDual>::~RefPtr<mozilla::gfx::SourceSurfaceDual>
PUBLIC	??0?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::RefPtr<mozilla::gfx::SourceSurfaceDual>
PUBLIC	?swap@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAEXAAPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::swap
PUBLIC	?forget@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::SourceSurfaceDual>::forget
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsReleaseHelper
PUBLIC	??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTargetDual>::~RefPtr<mozilla::gfx::DrawTargetDual>
PUBLIC	??0?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::RefPtr<mozilla::gfx::DrawTargetDual>
PUBLIC	?swap@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAEXAAPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::swap
PUBLIC	?forget@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::DrawTargetDual>::forget
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsReleaseHelper
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	?AddRef@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::AddRef
PUBLIC	?Release@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::Release
PUBLIC	?AddRef@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::AddRef
PUBLIC	?Release@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::Release
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CK@BEGEBJJG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CK@BEBCCGEN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAs?$AAt?$AAo?$AAr?$AAe?$AA_?$AA4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DC@FMPHIJPC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAf?$AAe?$AAt?$AAc?$AAh?$AA_?$AAa?$AAd?$AAd?$AA_?$AA4?$AA?$AA@ ; `string'
PUBLIC	??_7Pattern@gfx@mozilla@@6B@			; mozilla::gfx::Pattern::`vftable'
PUBLIC	??_7SurfacePattern@gfx@mozilla@@6B@		; mozilla::gfx::SurfacePattern::`vftable'
PUBLIC	??_7SourceSurface@gfx@mozilla@@6B@		; mozilla::gfx::SourceSurface::`vftable'
PUBLIC	??_7DrawTarget@gfx@mozilla@@6B@			; mozilla::gfx::DrawTarget::`vftable'
PUBLIC	??_7SourceSurfaceDual@gfx@mozilla@@6B@		; mozilla::gfx::SourceSurfaceDual::`vftable'
PUBLIC	??_7DrawTargetDual@gfx@mozilla@@6B@		; mozilla::gfx::DrawTargetDual::`vftable'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@		; `string'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_04HGKILAJC@?$FLGFX?$AA@			; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_03FLKELDHI@?$FN?3?5?$AA@			; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_01PKGAHCOL@?$CJ?$AA@			; `string'
PUBLIC	??_C@_01IHBHIGKO@?0?$AA@			; `string'
PUBLIC	??_C@_05EHMGNGKA@Size?$CI?$AA@			; `string'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SourceSurface@gfx@mozilla@@6B@		; mozilla::gfx::SourceSurface::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSourceSurface@gfx@mozilla@@@8		; mozilla::gfx::SourceSurface `RTTI Type Descriptor'
PUBLIC	??_R3SourceSurface@gfx@mozilla@@8		; mozilla::gfx::SourceSurface::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SourceSurface@gfx@mozilla@@8		; mozilla::gfx::SourceSurface::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SourceSurface@gfx@mozilla@@8	; mozilla::gfx::SourceSurface::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface> `RTTI Type Descriptor'
PUBLIC	??_R3?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4DrawTarget@gfx@mozilla@@6B@		; mozilla::gfx::DrawTarget::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawTarget@gfx@mozilla@@@8		; mozilla::gfx::DrawTarget `RTTI Type Descriptor'
PUBLIC	??_R3DrawTarget@gfx@mozilla@@8			; mozilla::gfx::DrawTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawTarget@gfx@mozilla@@8			; mozilla::gfx::DrawTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawTarget@gfx@mozilla@@8		; mozilla::gfx::DrawTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4Pattern@gfx@mozilla@@6B@			; mozilla::gfx::Pattern::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPattern@gfx@mozilla@@@8			; mozilla::gfx::Pattern `RTTI Type Descriptor'
PUBLIC	??_R3Pattern@gfx@mozilla@@8			; mozilla::gfx::Pattern::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Pattern@gfx@mozilla@@8			; mozilla::gfx::Pattern::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Pattern@gfx@mozilla@@8		; mozilla::gfx::Pattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SurfacePattern@gfx@mozilla@@6B@		; mozilla::gfx::SurfacePattern::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSurfacePattern@gfx@mozilla@@@8		; mozilla::gfx::SurfacePattern `RTTI Type Descriptor'
PUBLIC	??_R3SurfacePattern@gfx@mozilla@@8		; mozilla::gfx::SurfacePattern::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SurfacePattern@gfx@mozilla@@8		; mozilla::gfx::SurfacePattern::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SurfacePattern@gfx@mozilla@@8	; mozilla::gfx::SurfacePattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4SourceSurfaceDual@gfx@mozilla@@6B@		; mozilla::gfx::SourceSurfaceDual::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVSourceSurfaceDual@gfx@mozilla@@@8	; mozilla::gfx::SourceSurfaceDual `RTTI Type Descriptor'
PUBLIC	??_R3SourceSurfaceDual@gfx@mozilla@@8		; mozilla::gfx::SourceSurfaceDual::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2SourceSurfaceDual@gfx@mozilla@@8		; mozilla::gfx::SourceSurfaceDual::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@SourceSurfaceDual@gfx@mozilla@@8	; mozilla::gfx::SourceSurfaceDual::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4DrawTargetDual@gfx@mozilla@@6B@		; mozilla::gfx::DrawTargetDual::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDrawTargetDual@gfx@mozilla@@@8		; mozilla::gfx::DrawTargetDual `RTTI Type Descriptor'
PUBLIC	??_R3DrawTargetDual@gfx@mozilla@@8		; mozilla::gfx::DrawTargetDual::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2DrawTargetDual@gfx@mozilla@@8		; mozilla::gfx::DrawTargetDual::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@DrawTargetDual@gfx@mozilla@@8	; mozilla::gfx::DrawTargetDual::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp__printf:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp__TerminateProcess@8:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	??_EPattern@gfx@mozilla@@UAEPAXI@Z:PROC		; mozilla::gfx::Pattern::`vector deleting destructor'
EXTRN	??_ESurfacePattern@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::SurfacePattern::`vector deleting destructor'
EXTRN	??_ESourceSurface@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::SourceSurface::`vector deleting destructor'
EXTRN	?DrawCapturedDT@DrawTarget@gfx@mozilla@@UAEXPAVDrawTargetCapture@23@ABVMatrix@23@@Z:PROC ; mozilla::gfx::DrawTarget::DrawCapturedDT
EXTRN	?CreateCaptureDT@DrawTarget@gfx@mozilla@@UAE?AU?$already_AddRefed@VDrawTargetCapture@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@@Z:PROC ; mozilla::gfx::DrawTarget::CreateCaptureDT
EXTRN	??_EDrawTarget@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::DrawTarget::`vector deleting destructor'
EXTRN	??_ESourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z:PROC ; mozilla::gfx::SourceSurfaceDual::`vector deleting destructor'
EXTRN	??_EDrawTargetDual@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::DrawTargetDual::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?sGfxLogLevel@LoggingPrefs@gfx@mozilla@@2HA:DWORD ; mozilla::gfx::LoggingPrefs::sGfxLogLevel
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawTargetDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawTargetDual@gfx@mozilla@@8 DD FLAT:??_R0?AVDrawTargetDual@gfx@mozilla@@@8 ; mozilla::gfx::DrawTargetDual::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawTargetDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawTargetDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2DrawTargetDual@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@DrawTargetDual@gfx@mozilla@@8 ; mozilla::gfx::DrawTargetDual::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@DrawTarget@gfx@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3DrawTargetDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3DrawTargetDual@gfx@mozilla@@8 DD 00H		; mozilla::gfx::DrawTargetDual::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2DrawTargetDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawTargetDual@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVDrawTargetDual@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::DrawTargetDual `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawTargetDual@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4DrawTargetDual@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4DrawTargetDual@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::DrawTargetDual::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawTargetDual@gfx@mozilla@@@8
	DD	FLAT:??_R3DrawTargetDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SourceSurfaceDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SourceSurfaceDual@gfx@mozilla@@8 DD FLAT:??_R0?AVSourceSurfaceDual@gfx@mozilla@@@8 ; mozilla::gfx::SourceSurfaceDual::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SourceSurfaceDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2SourceSurfaceDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2SourceSurfaceDual@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@SourceSurfaceDual@gfx@mozilla@@8 ; mozilla::gfx::SourceSurfaceDual::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@SourceSurface@gfx@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3SourceSurfaceDual@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3SourceSurfaceDual@gfx@mozilla@@8 DD 00H		; mozilla::gfx::SourceSurfaceDual::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2SourceSurfaceDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSourceSurfaceDual@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVSourceSurfaceDual@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::SourceSurfaceDual `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSourceSurfaceDual@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4SourceSurfaceDual@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4SourceSurfaceDual@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::SourceSurfaceDual::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSourceSurfaceDual@gfx@mozilla@@@8
	DD	FLAT:??_R3SourceSurfaceDual@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SurfacePattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SurfacePattern@gfx@mozilla@@8 DD FLAT:??_R0?AVSurfacePattern@gfx@mozilla@@@8 ; mozilla::gfx::SurfacePattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SurfacePattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2SurfacePattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2SurfacePattern@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@SurfacePattern@gfx@mozilla@@8 ; mozilla::gfx::SurfacePattern::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Pattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3SurfacePattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3SurfacePattern@gfx@mozilla@@8 DD 00H		; mozilla::gfx::SurfacePattern::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2SurfacePattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSurfacePattern@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVSurfacePattern@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::SurfacePattern `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSurfacePattern@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4SurfacePattern@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4SurfacePattern@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::SurfacePattern::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSurfacePattern@gfx@mozilla@@@8
	DD	FLAT:??_R3SurfacePattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Pattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Pattern@gfx@mozilla@@8 DD FLAT:??_R0?AVPattern@gfx@mozilla@@@8 ; mozilla::gfx::Pattern::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Pattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2Pattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2Pattern@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@Pattern@gfx@mozilla@@8 ; mozilla::gfx::Pattern::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Pattern@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3Pattern@gfx@mozilla@@8 DD 00H			; mozilla::gfx::Pattern::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Pattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPattern@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPattern@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::Pattern `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPattern@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4Pattern@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4Pattern@gfx@mozilla@@6B@ DD 00H			; mozilla::gfx::Pattern::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPattern@gfx@mozilla@@@8
	DD	FLAT:??_R3Pattern@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 DD 00H ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@moz'
	DB	'illa@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 DD 00H ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::RefCounted<mozilla::gfx::DrawTarget> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@DrawTarget@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@DrawTarget@gfx@mozilla@@8 DD FLAT:??_R0?AVDrawTarget@gfx@mozilla@@@8 ; mozilla::gfx::DrawTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3DrawTarget@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2DrawTarget@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2DrawTarget@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@DrawTarget@gfx@mozilla@@8 ; mozilla::gfx::DrawTarget::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3DrawTarget@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3DrawTarget@gfx@mozilla@@8 DD 00H			; mozilla::gfx::DrawTarget::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2DrawTarget@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDrawTarget@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVDrawTarget@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::DrawTarget `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDrawTarget@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4DrawTarget@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4DrawTarget@gfx@mozilla@@6B@ DD 00H			; mozilla::gfx::DrawTarget::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDrawTarget@gfx@mozilla@@@8
	DD	FLAT:??_R3DrawTarget@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 DD 00H ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail'
	DB	'@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 DD FLAT:??_R0?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	SEGMENT
??_R2?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	SEGMENT
??_R3?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 DD 00H ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@exte'
	DB	'rnal@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8 DD FLAT:??_R0?AV?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@@8 ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@SourceSurface@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@SourceSurface@gfx@mozilla@@8 DD FLAT:??_R0?AVSourceSurface@gfx@mozilla@@@8 ; mozilla::gfx::SourceSurface::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3SourceSurface@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2SourceSurface@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2SourceSurface@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@SourceSurface@gfx@mozilla@@8 ; mozilla::gfx::SourceSurface::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3SourceSurface@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3SourceSurface@gfx@mozilla@@8 DD 00H		; mozilla::gfx::SourceSurface::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2SourceSurface@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVSourceSurface@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVSourceSurface@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::SourceSurface `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVSourceSurface@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4SourceSurface@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4SourceSurface@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::SourceSurface::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVSourceSurface@gfx@mozilla@@@8
	DD	FLAT:??_R3SourceSurface@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	FLAT:??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
	DD	FLAT:??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	FLAT:??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	068H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_05EHMGNGKA@Size?$CI?$AA@
CONST	SEGMENT
??_C@_05EHMGNGKA@Size?$CI?$AA@ DB 'Size(', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0?$AA@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0?$AA@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01PKGAHCOL@?$CJ?$AA@
CONST	SEGMENT
??_C@_01PKGAHCOL@?$CJ?$AA@ DB ')', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FLKELDHI@?$FN?3?5?$AA@
CONST	SEGMENT
??_C@_03FLKELDHI@?$FN?3?5?$AA@ DB ']: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HGKILAJC@?$FLGFX?$AA@
CONST	SEGMENT
??_C@_04HGKILAJC@?$FLGFX?$AA@ DB '[GFX', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	058H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	068H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_7DrawTargetDual@gfx@mozilla@@6B@
CONST	SEGMENT
??_7DrawTargetDual@gfx@mozilla@@6B@ DD FLAT:??_R4DrawTargetDual@gfx@mozilla@@6B@ ; mozilla::gfx::DrawTargetDual::`vftable'
	DD	FLAT:??_EDrawTargetDual@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?GetType@DrawTargetDual@gfx@mozilla@@UBE?AW4DrawTargetType@23@XZ
	DD	FLAT:?GetBackendType@DrawTargetDual@gfx@mozilla@@UBE?AW4BackendType@23@XZ
	DD	FLAT:?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ
	DD	FLAT:?GetSize@DrawTargetDual@gfx@mozilla@@UAE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ
	DD	FLAT:?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z
	DD	FLAT:?Flush@DrawTargetDual@gfx@mozilla@@UAEXXZ
	DD	FLAT:?DrawCapturedDT@DrawTarget@gfx@mozilla@@UAEXPAVDrawTargetCapture@23@ABVMatrix@23@@Z
	DD	FLAT:?DrawSurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@1ABUDrawSurfaceOptions@23@ABUDrawOptions@23@@Z
	DD	FLAT:?DrawFilter@DrawTargetDual@gfx@mozilla@@UAEXPAVFilterNode@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
	DD	FLAT:?DrawSurfaceWithShadow@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUColor@23@1MW4CompositionOp@23@@Z
	DD	FLAT:?ClearRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
	DD	FLAT:?CopySurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z
	DD	FLAT:?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	FLAT:?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	FLAT:?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	FLAT:?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z
	DD	FLAT:?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z
	DD	FLAT:?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z
	DD	FLAT:?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
	DD	FLAT:?PushClip@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@@Z
	DD	FLAT:?PushClipRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
	DD	FLAT:?PopClip@DrawTargetDual@gfx@mozilla@@UAEXXZ
	DD	FLAT:?PushLayer@DrawTargetDual@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z
	DD	FLAT:?PopLayer@DrawTargetDual@gfx@mozilla@@UAEXXZ
	DD	FLAT:?CreateSourceSurfaceFromData@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAEABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@HW4SurfaceFormat@23@@Z
	DD	FLAT:?OptimizeSourceSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAVSourceSurface@23@@Z
	DD	FLAT:?CreateSourceSurfaceFromNativeSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@ABUNativeSurface@23@@Z
	DD	FLAT:?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z
	DD	FLAT:?CreateCaptureDT@DrawTarget@gfx@mozilla@@UAE?AU?$already_AddRefed@VDrawTargetCapture@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z
	DD	FLAT:?CreatePathBuilder@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
	DD	FLAT:?CreateGradientStops@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VGradientStops@gfx@mozilla@@@@PAUGradientStop@23@IW4ExtendMode@23@@Z
	DD	FLAT:?CreateFilter@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VFilterNode@gfx@mozilla@@@@W4FilterType@23@@Z
	DD	FLAT:?SetTransform@DrawTargetDual@gfx@mozilla@@UAEXABVMatrix@23@@Z
	DD	FLAT:?GetNativeSurface@DrawTargetDual@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
	DD	FLAT:?IsDualDrawTarget@DrawTargetDual@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?IsCurrentGroupOpaque@DrawTargetDual@gfx@mozilla@@UAE_NXZ
	DD	FLAT:?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z
CONST	ENDS
;	COMDAT ??_7SourceSurfaceDual@gfx@mozilla@@6B@
CONST	SEGMENT
??_7SourceSurfaceDual@gfx@mozilla@@6B@ DD FLAT:??_R4SourceSurfaceDual@gfx@mozilla@@6B@ ; mozilla::gfx::SourceSurfaceDual::`vftable'
	DD	FLAT:??_ESourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?GetType@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceType@23@XZ
	DD	FLAT:?GetSize@SourceSurfaceDual@gfx@mozilla@@UBE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ
	DD	FLAT:?GetFormat@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceFormat@23@XZ
	DD	FLAT:?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?GetDataSurface@SourceSurfaceDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VDataSourceSurface@gfx@mozilla@@@@XZ
	DD	FLAT:?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
	DD	FLAT:?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7DrawTarget@gfx@mozilla@@6B@
CONST	SEGMENT
??_7DrawTarget@gfx@mozilla@@6B@ DD FLAT:??_R4DrawTarget@gfx@mozilla@@6B@ ; mozilla::gfx::DrawTarget::`vftable'
	DD	FLAT:??_EDrawTarget@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z
	DD	FLAT:__purecall
	DD	FLAT:?DrawCapturedDT@DrawTarget@gfx@mozilla@@UAEXPAVDrawTargetCapture@23@ABVMatrix@23@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?PushLayer@DrawTarget@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z
	DD	FLAT:?PopLayer@DrawTarget@gfx@mozilla@@UAEXXZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?CreateCaptureDT@DrawTarget@gfx@mozilla@@UAE?AU?$already_AddRefed@VDrawTargetCapture@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	FLAT:?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?SetTransform@DrawTarget@gfx@mozilla@@UAEXABVMatrix@23@@Z
	DD	FLAT:?GetNativeSurface@DrawTarget@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
	DD	FLAT:?IsDualDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ
	DD	FLAT:?IsCurrentGroupOpaque@DrawTarget@gfx@mozilla@@UAE_NXZ
	DD	FLAT:?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z
CONST	ENDS
;	COMDAT ??_7SourceSurface@gfx@mozilla@@6B@
CONST	SEGMENT
??_7SourceSurface@gfx@mozilla@@6B@ DD FLAT:??_R4SourceSurface@gfx@mozilla@@6B@ ; mozilla::gfx::SourceSurface::`vftable'
	DD	FLAT:??_ESourceSurface@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ
	DD	FLAT:__purecall
	DD	FLAT:?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
	DD	FLAT:?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ
CONST	ENDS
;	COMDAT ??_7SurfacePattern@gfx@mozilla@@6B@
CONST	SEGMENT
??_7SurfacePattern@gfx@mozilla@@6B@ DD FLAT:??_R4SurfacePattern@gfx@mozilla@@6B@ ; mozilla::gfx::SurfacePattern::`vftable'
	DD	FLAT:??_ESurfacePattern@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?GetType@SurfacePattern@gfx@mozilla@@UBE?AW4PatternType@23@XZ
CONST	ENDS
;	COMDAT ??_7Pattern@gfx@mozilla@@6B@
CONST	SEGMENT
??_7Pattern@gfx@mozilla@@6B@ DD FLAT:??_R4Pattern@gfx@mozilla@@6B@ ; mozilla::gfx::Pattern::`vftable'
	DD	FLAT:??_EPattern@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_1DC@FMPHIJPC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAf?$AAe?$AAt?$AAc?$AAh?$AA_?$AAa?$AAd?$AAd?$AA_?$AA4?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@FMPHIJPC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAf?$AAe?$AAt?$AAc?$AAh?$AA_?$AAa?$AAd?$AAd?$AA_?$AA4?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'i', 00H, 'c', 00H, '_', 00H, 'f'
	DB	00H, 'e', 00H, 't', 00H, 'c', 00H, 'h', 00H, '_', 00H, 'a', 00H
	DB	'd', 00H, 'd', 00H, '_', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@BEBCCGEN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAs?$AAt?$AAo?$AAr?$AAe?$AA_?$AA4?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@BEBCCGEN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAs?$AAt?$AAo?$AAr?$AAe?$AA_?$AA4?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	't', 00H, 'o', 00H, 'm', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'e', 00H, '_', 00H, '4', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@BEGEBJJG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@BEGEBJJG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y'
	DB	00H, '_', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'm', 00H, 'i', 00H, 'c', 00H, '.', 00H, 'h', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$1
__ehfuncinfo$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ$1
__ehfuncinfo$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ$0
__ehfuncinfo$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z$0
__ehfuncinfo$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z$1
__ehfuncinfo$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1
__ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$1
__ehfuncinfo$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DrawTargetDual@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DrawTargetDual@gfx@mozilla@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1DrawTargetDual@gfx@mozilla@@UAE@XZ$1
__ehfuncinfo$??1DrawTargetDual@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1DrawTargetDual@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z$0
__unwindtable$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z$0
__unwindtable$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0
__unwindtable$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0
__unwindtable$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0
__unwindtable$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z$0
__unwindtable$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z$0
__unwindtable$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z$1
__ehfuncinfo$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$1
	DD	03H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$2
	DD	04H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$3
	DD	06H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ$0
__ehfuncinfo$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$2
__ehfuncinfo$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ$1
__ehfuncinfo$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$4
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z$1
__ehfuncinfo$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1DrawTarget@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1DrawTarget@gfx@mozilla@@UAE@XZ$0
__ehfuncinfo$??1DrawTarget@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1DrawTarget@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0DrawTarget@gfx@mozilla@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0DrawTarget@gfx@mozilla@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0DrawTarget@gfx@mozilla@@QAE@XZ$1
__ehfuncinfo$??0DrawTarget@gfx@mozilla@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0DrawTarget@gfx@mozilla@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SourceSurface@gfx@mozilla@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SourceSurface@gfx@mozilla@@QAE@XZ$0
__ehfuncinfo$??0SourceSurface@gfx@mozilla@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SourceSurface@gfx@mozilla@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SourceSurface@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SourceSurface@gfx@mozilla@@UAE@XZ$0
__ehfuncinfo$??1SourceSurface@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SourceSurface@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1SurfacePattern@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1SurfacePattern@gfx@mozilla@@UAE@XZ$0
__ehfuncinfo$??1SurfacePattern@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1SurfacePattern@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z$0
__ehfuncinfo$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xlocnum
; Line 155
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@CAXPAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?forget@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_temp$ = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?forget@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@XZ PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::forget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 214
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 215
	mov	DWORD PTR _temp$[ebp], 0
; Line 216
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swap@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAEXAAPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::swap
; Line 217
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::DrawTargetDual>::already_AddRefed<mozilla::gfx::DrawTargetDual>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@forget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@forget:
	DD	1
	DD	$LN6@forget
$LN6@forget:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@forget
$LN5@forget:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?forget@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@XZ ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::forget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?swap@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAEXAAPAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_aRhs$ = 8						; size = 4
?swap@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAEXAAPAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::swap, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _aRhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 206
	mov	edx, DWORD PTR _aRhs$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAEXAAPAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTargetDual>::RefPtr<mozilla::gfx::DrawTargetDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTargetDual>::RefPtr<mozilla::gfx::DrawTargetDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::DrawTargetDual>::~RefPtr<mozilla::gfx::DrawTargetDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VDrawTargetDual@gfx@mozilla@@@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@SAXPAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::AddRefTraits<mozilla::gfx::DrawTargetDual>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::DrawTargetDual>::~RefPtr<mozilla::gfx::DrawTargetDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@CAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?forget@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_temp$ = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?forget@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@XZ PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::forget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 214
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 215
	mov	DWORD PTR _temp$[ebp], 0
; Line 216
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swap@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAEXAAPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::swap
; Line 217
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::already_AddRefed<mozilla::gfx::SourceSurfaceDual>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@forget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@forget:
	DD	1
	DD	$LN6@forget
$LN6@forget:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@forget
$LN5@forget:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?forget@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@XZ ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::forget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?swap@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAEXAAPAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_aRhs$ = 8						; size = 4
?swap@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAEXAAPAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::swap, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _aRhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 206
	mov	edx, DWORD PTR _aRhs$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAEXAAPAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::RefPtr<mozilla::gfx::SourceSurfaceDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::RefPtr<mozilla::gfx::SourceSurfaceDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ PROC ; RefPtr<mozilla::gfx::SourceSurfaceDual>::~RefPtr<mozilla::gfx::SourceSurfaceDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VSourceSurfaceDual@gfx@mozilla@@@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@SAXPAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::AddRefTraits<mozilla::gfx::SourceSurfaceDual>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ENDP ; RefPtr<mozilla::gfx::SourceSurfaceDual>::~RefPtr<mozilla::gfx::SourceSurfaceDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z
_TEXT	SEGMENT
_aX$ = 8						; size = 4
??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z PROC ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\move.h
; Line 213
	push	ebp
	mov	ebp, esp
; Line 214
	mov	eax, DWORD PTR _aX$[ebp]
; Line 215
	pop	ebp
	ret	0
??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ENDP ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?convert@?$ToStorageTypeArgument@I@detail@mozilla@@SAII@Z
_TEXT	SEGMENT
_aT$ = 8						; size = 4
?convert@?$ToStorageTypeArgument@I@detail@mozilla@@SAII@Z PROC ; mozilla::detail::ToStorageTypeArgument<unsigned int>::convert, COMDAT
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 326
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _aT$[ebp]
	pop	ebp
	ret	0
?convert@?$ToStorageTypeArgument@I@detail@mozilla@@SAII@Z ENDP ; mozilla::detail::ToStorageTypeArgument<unsigned int>::convert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 141
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 130
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 132
	mov	esi, esp
	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 133
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@sentry:
; Line 138
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 123
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 124
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@sentry
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN1@sentry
; Line 125
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 126
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 127
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv92 = -16						; size = 4
tv86 = -12						; size = 4
tv72 = -8						; size = 4
_this$ = -4						; size = 4
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 108
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv86[ebp], edx
	mov	eax, DWORD PTR tv86[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR tv86[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 109
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv93 = -16						; size = 4
tv87 = -12						; size = 4
tv73 = -8						; size = 4
_this$ = -4						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 101
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@Sentry_bas
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv87[ebp], ecx
	mov	edx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv87[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Sentry_bas:
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv290 = -136						; size = 4
tv289 = -132						; size = 4
tv288 = -125						; size = 1
tv287 = -124						; size = 8
tv286 = -116						; size = 4
tv285 = -112						; size = 4
tv284 = -108						; size = 4
tv283 = -101						; size = 1
tv137 = -100						; size = 4
tv135 = -96						; size = 8
tv342 = -88						; size = 8
tv328 = -80						; size = 8
$T2 = -72						; size = 4
$T3 = -68						; size = 4
$T4 = -64						; size = 4
$T5 = -60						; size = 4
$T6 = -56						; size = 4
__Ok$ = -48						; size = 8
__Pad$ = -36						; size = 8
__Count$ = -28						; size = 8
__State$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\ostream
; Line 787
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 120				; 00000078H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 30					; 0000001eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 790
	mov	DWORD PTR __State$[ebp], 0
; Line 791
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 793
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv328[ebp], eax
	mov	DWORD PTR tv328[ebp+4], edx
	cmp	DWORD PTR tv328[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv328[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR tv342[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv342[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorpd	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 794
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 796
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN14@operator
; Line 797
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 798
	jmp	$LN13@operator
$LN14@operator:
; Line 800
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 801
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 802
	jmp	SHORT $LN10@operator
$LN9@operator:
	mov	ecx, DWORD PTR __Pad$[ebp]
	sub	ecx, 1
	mov	edx, DWORD PTR __Pad$[ebp+4]
	sbb	edx, 0
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	DWORD PTR __Pad$[ebp+4], edx
$LN10@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 804
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv283[ebp], al
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv284[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv283[ebp]
	push	eax
	mov	ecx, DWORD PTR tv284[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR $T6[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@operator
; Line 806
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 807
	jmp	SHORT $LN11@operator
$LN7@operator:
; Line 810
	jmp	$LN9@operator
$LN11@operator:
; Line 811
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN6@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv286[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Count$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv286[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv287[ebp], eax
	mov	DWORD PTR tv287[ebp+4], edx
	mov	eax, DWORD PTR tv287[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	ecx, DWORD PTR tv287[ebp+4]
	cmp	ecx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN6@operator
$LN27@operator:
; Line 812
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
$LN6@operator:
; Line 814
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN5@operator
; Line 815
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN5@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN5@operator
$LN28@operator:
; Line 817
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv288[ebp], al
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv289[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR tv288[ebp]
	push	eax
	mov	ecx, DWORD PTR tv289[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv290[ebp], eax
	mov	ecx, DWORD PTR tv290[ebp]
	mov	DWORD PTR $T4[ebp], ecx
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@operator
; Line 819
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 4
	mov	DWORD PTR __State$[ebp], edx
; Line 820
	jmp	SHORT $LN5@operator
$LN1@operator:
; Line 821
	jmp	$LN3@operator
$LN5@operator:
; Line 822
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 823
	mov	esi, esp
	push	1
	push	4
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN13@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN13@operator:
; Line 826
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 827
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 828
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-140]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$fpos@H@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$fpos@H@std@@QBE_JXZ PROC				; std::fpos<int>::operator __int64, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [eax+4]
	adc	esi, DWORD PTR [ecx+12]
	mov	eax, edx
	mov	edx, esi
; Line 69
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@H@std@@QBE_JXZ ENDP				; std::fpos<int>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$fpos@H@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@H@std@@QAE@_J@Z PROC				; std::fpos<int>::fpos<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 43
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], 0
; Line 44
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@H@std@@QAE@_J@Z ENDP				; std::fpos<int>::fpos<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VDrawTargetDual@gfx@mozilla@@@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aOther$ = 8						; size = 4
??$?0VDrawTargetDual@gfx@mozilla@@@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@@Z PROC ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTargetDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aOther$[ebp]
	call	?take@?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAEPAVDrawTargetDual@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VDrawTargetDual@gfx@mozilla@@@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@@Z ENDP ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTargetDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAEPAVDrawTargetDual@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAEPAVDrawTargetDual@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::DrawTargetDual>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAEPAVDrawTargetDual@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::DrawTargetDual>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z PROC ; already_AddRefed<mozilla::gfx::DrawTargetDual>::already_AddRefed<mozilla::gfx::DrawTargetDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ENDP ; already_AddRefed<mozilla::gfx::DrawTargetDual>::already_AddRefed<mozilla::gfx::DrawTargetDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
_TEXT	SEGMENT
tv83 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<aArgs_0>$ = 12					; size = 4
_<aArgs_1>$ = 16					; size = 4
??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z PROC ; mozilla::MakeAndAddRef<mozilla::gfx::DrawTargetDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 614
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
; Line 615
	push	68					; 00000044H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@MakeAndAdd
	mov	eax, DWORD PTR _<aArgs_1>$[ebp]
	push	eax
	call	??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 4
	mov	ecx, eax
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	push	eax
	mov	ecx, DWORD PTR _<aArgs_0>$[ebp]
	push	ecx
	call	??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 4
	mov	ecx, eax
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ; mozilla::gfx::DrawTargetDual::DrawTargetDual
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@MakeAndAdd
$LN3@MakeAndAdd:
	mov	DWORD PTR tv83[ebp], 0
$LN4@MakeAndAdd:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	call	??0?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@PAVDrawTargetDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTargetDual>::RefPtr<mozilla::gfx::DrawTargetDual>
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 616
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _p$[ebp]
	call	?forget@?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::DrawTargetDual>::forget
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTargetDual>::~RefPtr<mozilla::gfx::DrawTargetDual>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 617
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@MakeAndAdd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@MakeAndAdd:
	DD	1
	DD	$LN11@MakeAndAdd
$LN11@MakeAndAdd:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@MakeAndAdd
$LN9@MakeAndAdd:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$1:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1?$RefPtr@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTargetDual>::~RefPtr<mozilla::gfx::DrawTargetDual>
__unwindfunclet$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN8@MakeAndAdd
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>
$LN8@MakeAndAdd:
	ret	0
__ehhandler$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ENDP ; mozilla::MakeAndAddRef<mozilla::gfx::DrawTargetDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?6HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@ABU?$BaseSize@HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@12@@Z
_TEXT	SEGMENT
tv79 = -8						; size = 4
_this$ = -4						; size = 4
_aSize$ = 8						; size = 4
??$?6HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@ABU?$BaseSize@HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@12@@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<<int,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits> >, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 364
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	push	edi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 365
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator
; Line 366
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN4@operator
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv79[ebp], ecx
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR tv79[ebp], 0
$LN5@operator:
	push	OFFSET ??_C@_01PKGAHCOL@?$CJ?$AA@
	mov	esi, esp
	mov	edx, DWORD PTR _aSize$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_01IHBHIGKO@?0?$AA@
	mov	edi, esp
	mov	ecx, DWORD PTR _aSize$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	push	OFFSET ??_C@_05EHMGNGKA@Size?$CI?$AA@
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN1@operator:
; Line 368
	mov	eax, DWORD PTR _this$[ebp]
; Line 369
	pop	edi
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?6HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@ABU?$BaseSize@HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@12@@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<<int,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?WriteLog@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aString$ = 8						; size = 4
?WriteLog@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::WriteLog, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 505
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 506
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@WriteLog
; Line 507
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NoNewline@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::NoNewline
	movzx	ecx, al
	push	ecx
	push	2
	mov	edx, DWORD PTR _aString$[ebp]
	push	edx
	call	?OutputMessage@BasicLogger@gfx@mozilla@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H_N@Z ; mozilla::gfx::BasicLogger::OutputMessage
	add	esp, 12					; 0000000cH
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	and	ecx, 4
	je	SHORT $LN5@WriteLog
$LN3@WriteLog:
; Line 509
	xor	edx, edx
	jne	SHORT $LN3@WriteLog
$LN5@WriteLog:
; Line 511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	and	ecx, 8
	je	SHORT $LN7@WriteLog
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::ValidReason
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN7@WriteLog
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	push	ecx
	call	?CrashAction@BasicLogger@gfx@mozilla@@SAXW4LogReason@23@@Z ; mozilla::gfx::BasicLogger::CrashAction
	add	esp, 4
$LN7@WriteLog:
; Line 515
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?WriteLog@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::WriteLog
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Init@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXH_NW4LogReason@23@@Z
_TEXT	SEGMENT
tv169 = -20						; size = 4
tv154 = -16						; size = 4
tv132 = -12						; size = 4
tv84 = -8						; size = 4
_this$ = -4						; size = 4
_aOptions$ = 8						; size = 4
_aLogIt$ = 12						; size = 1
_aReason$ = 16						; size = 4
?Init@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXH_NW4LogReason@23@@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Init, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 486
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 487
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aOptions$[ebp]
	mov	DWORD PTR [eax+176], ecx
; Line 488
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _aReason$[ebp]
	mov	DWORD PTR [edx+180], eax
; Line 489
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aLogIt$[ebp]
	mov	BYTE PTR [ecx+184], dl
; Line 490
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+184]
	test	ecx, ecx
	je	$LN6@Init
; Line 491
	mov	ecx, DWORD PTR _this$[ebp]
	call	?AutoPrefix@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::AutoPrefix
	movzx	edx, al
	test	edx, edx
	je	$LN4@Init
; Line 492
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	and	ecx, 4
	je	SHORT $LN3@Init
; Line 493
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN8@Init
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN9@Init
$LN8@Init:
	mov	DWORD PTR tv84[ebp], 0
$LN9@Init:
	mov	esi, esp
	push	2
	push	OFFSET ??_C@_04HGKILAJC@?$FLGFX?$AA@
	mov	eax, DWORD PTR tv84[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	jmp	SHORT $LN4@Init
$LN3@Init:
; Line 495
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN10@Init
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv132[ebp], ecx
	jmp	SHORT $LN11@Init
$LN10@Init:
	mov	DWORD PTR tv132[ebp], 0
$LN11@Init:
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	esi, esp
	push	2
	push	OFFSET ??_C@_04HGKILAJC@?$FLGFX?$AA@
	mov	edx, DWORD PTR tv132[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN4@Init:
; Line 498
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	and	ecx, 8
	je	SHORT $LN1@Init
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::ValidReason
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@Init
; Line 499
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN12@Init
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN13@Init
$LN12@Init:
	mov	DWORD PTR tv154[ebp], 0
$LN13@Init:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	eax, DWORD PTR tv154[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Init:
; Line 501
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN14@Init
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv169[ebp], ecx
	jmp	SHORT $LN15@Init
$LN14@Init:
	mov	DWORD PTR tv169[ebp], 0
$LN15@Init:
	push	OFFSET ??_C@_03FLKELDHI@?$FN?3?5?$AA@
	mov	edx, DWORD PTR tv169[ebp]
	push	edx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN6@Init:
; Line 503
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Init@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXH_NW4LogReason@23@@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::ValidReason, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 478
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+180], -1
	jle	SHORT $LN3@ValidReaso
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+180], 101		; 00000065H
	jge	SHORT $LN3@ValidReaso
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@ValidReaso
$LN3@ValidReaso:
	mov	DWORD PTR tv68[ebp], 0
$LN4@ValidReaso:
	mov	al, BYTE PTR tv68[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?ValidReason@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::ValidReason
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AutoPrefix@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ
_TEXT	SEGMENT
tv67 = -5						; size = 1
_this$ = -4						; size = 4
?AutoPrefix@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::AutoPrefix, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 477
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	and	ecx, 2
	je	SHORT $LN3@AutoPrefix
	mov	BYTE PTR tv67[ebp], 1
	jmp	SHORT $LN4@AutoPrefix
$LN3@AutoPrefix:
	mov	BYTE PTR tv67[ebp], 0
$LN4@AutoPrefix:
	mov	al, BYTE PTR tv67[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?AutoPrefix@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::AutoPrefix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?NoNewline@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?NoNewline@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::NoNewline, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 476
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+176]
	and	eax, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?NoNewline@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::NoNewline
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 475
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+184]
	mov	esp, ebp
	pop	ebp
	ret	0
?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??6?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@QBD@Z
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
_aStr$ = 8						; size = 4
??6?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@QBD@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 297
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@operator
; Line 298
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN4@operator
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR tv75[ebp], ecx
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR tv75[ebp], 0
$LN5@operator:
	mov	edx, DWORD PTR _aStr$[ebp]
	push	edx
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
$LN1@operator:
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
; Line 301
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??6?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@QBD@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ
_TEXT	SEGMENT
$T2 = -84						; size = 28
_str$ = -52						; size = 28
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Flush, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 275
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LogIt@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QBE_NXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::LogIt
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Flush
	jmp	SHORT $LN3@Flush
$LN2@Flush:
; Line 277
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 278
	lea	ecx, DWORD PTR _str$[ebp]
	call	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN1@Flush
; Line 279
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteLog@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::WriteLog
$LN1@Flush:
; Line 281
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 282
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@Flush:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Flush
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Flush:
	DD	1
	DD	$LN9@Flush
$LN9@Flush:
	DD	-52					; ffffffccH
	DD	28					; 0000001cH
	DD	$LN7@Flush
$LN7@Flush:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Flush
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::~Log<2,mozilla::gfx::BasicLogger>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 270
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 271
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Flush@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEXXZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Flush
; Line 272
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::~Log<2,mozilla::gfx::BasicLogger>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aOptions$ = 8						; size = 4
_aReason$ = 12						; size = 4
??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Log<2,mozilla::gfx::BasicLogger>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\logging.h
; Line 266
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+176], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+184], 0
; Line 267
	mov	edx, DWORD PTR _aReason$[ebp]
	push	edx
	push	2
	call	?ShouldOutputMessage@BasicLogger@gfx@mozilla@@SA_NH@Z ; mozilla::gfx::BasicLogger::ShouldOutputMessage
	add	esp, 4
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Init@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@AAEXH_NW4LogReason@23@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Init
; Line 268
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
__ehhandler$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Log<2,mozilla::gfx::BasicLogger>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DefaultOptions@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@SAH_N@Z
_TEXT	SEGMENT
tv66 = -4						; size = 4
_aWithAssert$ = 8					; size = 1
?DefaultOptions@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@SAH_N@Z PROC ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::DefaultOptions, COMDAT
; File d:\mozilla\gfx\2d\logging.h
; Line 253
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 254
	movzx	eax, BYTE PTR _aWithAssert$[ebp]
	test	eax, eax
	je	SHORT $LN3@DefaultOpt
	mov	DWORD PTR tv66[ebp], 4
	jmp	SHORT $LN4@DefaultOpt
$LN3@DefaultOpt:
	mov	DWORD PTR tv66[ebp], 0
$LN4@DefaultOpt:
	mov	eax, DWORD PTR tv66[ebp]
	or	eax, 2
; Line 256
	mov	esp, ebp
	pop	ebp
	ret	0
?DefaultOptions@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@SAH_N@Z ENDP ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::DefaultOptions
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	call	?take@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAEPAVDrawTarget@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ PROC ; mozilla::gfx::ClassStorage<mozilla::gfx::SurfacePattern>::addr, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\tools.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ ENDP ; mozilla::gfx::ClassStorage<mozilla::gfx::SurfacePattern>::addr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DualPattern@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1DualPattern@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::DualPattern::~DualPattern, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 71
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	test	ecx, ecx
	je	SHORT $LN2@DualPatter
; Line 73
	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+104]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+104]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 74
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+108]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@DualPatter:
; Line 76
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DualPattern@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::DualPattern::~DualPattern
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z
_TEXT	SEGMENT
tv185 = -92						; size = 4
tv155 = -88						; size = 4
tv80 = -84						; size = 4
$T2 = -80						; size = 16
$T3 = -64						; size = 4
$T4 = -60						; size = 4
$T5 = -56						; size = 4
$T6 = -52						; size = 16
$T7 = -36						; size = 4
$T8 = -32						; size = 4
$T9 = -28						; size = 4
_ssDual$ = -24						; size = 4
_surfPat$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aPattern$ = 8						; size = 4
??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z PROC	; mozilla::gfx::DualPattern::DualPattern, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 80					; 00000050H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-92]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+112], 0
; Line 48
	mov	ecx, DWORD PTR _aPattern$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _aPattern$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	al, 1
	je	SHORT $LN2@DualPatter
; Line 49
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _aPattern$[ebp]
	mov	DWORD PTR [ecx+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aPattern$[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 50
	jmp	$LN3@DualPatter
$LN2@DualPatter:
; Line 54
	mov	edx, DWORD PTR _aPattern$[ebp]
	mov	DWORD PTR _surfPat$[ebp], edx
; Line 56
	mov	ecx, DWORD PTR _surfPat$[ebp]
	add	ecx, 4
	call	??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator->
	mov	DWORD PTR tv80[ebp], eax
	mov	eax, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	al, 8
	je	SHORT $LN1@DualPatter
; Line 57
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _aPattern$[ebp]
	mov	DWORD PTR [ecx+108], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aPattern$[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 58
	jmp	$LN3@DualPatter
$LN1@DualPatter:
; Line 62
	mov	ecx, DWORD PTR _surfPat$[ebp]
	add	ecx, 4
	call	?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::get
	mov	DWORD PTR _ssDual$[ebp], eax
; Line 64
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ ; mozilla::gfx::ClassStorage<mozilla::gfx::SurfacePattern>::addr
	mov	DWORD PTR $T7[ebp], eax
	mov	edx, DWORD PTR $T7[ebp]
	push	edx
	push	52					; 00000034H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T8[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T8[ebp], 0
	je	SHORT $LN5@DualPatter
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>
	push	eax
	mov	eax, DWORD PTR _surfPat$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	push	ecx
	mov	edx, DWORD PTR _surfPat$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _surfPat$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _ssDual$[ebp]
	add	ecx, 16					; 00000010H
	call	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
	push	eax
	mov	ecx, DWORD PTR $T8[ebp]
	call	??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z ; mozilla::gfx::SurfacePattern::SurfacePattern
	mov	DWORD PTR tv155[ebp], eax
	jmp	SHORT $LN6@DualPatter
$LN5@DualPatter:
	mov	DWORD PTR tv155[ebp], 0
$LN6@DualPatter:
	mov	edx, DWORD PTR tv155[ebp]
	mov	DWORD PTR $T9[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 66
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?addr@?$ClassStorage@VSurfacePattern@gfx@mozilla@@@gfx@mozilla@@QAEPAVSurfacePattern@23@XZ ; mozilla::gfx::ClassStorage<mozilla::gfx::SurfacePattern>::addr
	mov	DWORD PTR $T3[ebp], eax
	mov	edx, DWORD PTR $T3[ebp]
	push	edx
	push	52					; 00000034H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN7@DualPatter
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>
	push	eax
	mov	eax, DWORD PTR _surfPat$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	push	ecx
	mov	edx, DWORD PTR _surfPat$[ebp]
	add	edx, 12					; 0000000cH
	push	edx
	mov	eax, DWORD PTR _surfPat$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _ssDual$[ebp]
	add	ecx, 20					; 00000014H
	call	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z ; mozilla::gfx::SurfacePattern::SurfacePattern
	mov	DWORD PTR tv185[ebp], eax
	jmp	SHORT $LN8@DualPatter
$LN7@DualPatter:
	mov	DWORD PTR tv185[ebp], 0
$LN8@DualPatter:
	mov	edx, DWORD PTR tv185[ebp]
	mov	DWORD PTR $T5[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 67
	mov	edx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [edx+112], 1
$LN3@DualPatter:
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 92					; 0000005cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z$0:
	mov	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z$1:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-92]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ENDP	; mozilla::gfx::DualPattern::DualPattern
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z
_TEXT	SEGMENT
_ssDual$ = -8						; size = 4
_this$ = -4						; size = 4
_aSurface$ = 8						; size = 4
??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z PROC ; mozilla::gfx::DualSurface::DualSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 18
	cmp	DWORD PTR _aSurface$[ebp], 0
	jne	SHORT $LN2@DualSurfac
; Line 19
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 20
	jmp	SHORT $LN3@DualSurfac
$LN2@DualSurfac:
; Line 23
	mov	edx, DWORD PTR _aSurface$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR _aSurface$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	al, 8
	je	SHORT $LN1@DualSurfac
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aSurface$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _aSurface$[ebp]
	mov	DWORD PTR [edx], eax
; Line 25
	jmp	SHORT $LN3@DualSurfac
$LN1@DualSurfac:
; Line 29
	mov	ecx, DWORD PTR _aSurface$[ebp]
	mov	DWORD PTR _ssDual$[ebp], ecx
; Line 30
	mov	ecx, DWORD PTR _ssDual$[ebp]
	add	ecx, 16					; 00000010H
	call	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 31
	mov	ecx, DWORD PTR _ssDual$[ebp]
	add	ecx, 20					; 00000014H
	call	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@DualSurfac:
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ENDP ; mozilla::gfx::DualSurface::DualSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	call	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	call	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 104				; 00000068H
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 104				; 00000068H
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
_this$ = -4						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 355
	mov	DWORD PTR __State$[ebp], 0
; Line 356
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN4@Getstate
; Line 357
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 4
	mov	DWORD PTR __State$[ebp], ecx
$LN4@Getstate:
; Line 358
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	jne	SHORT $LN3@Getstate
; Line 359
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 360
	mov	ecx, DWORD PTR __Mode$[ebp]
	and	ecx, 8
	je	SHORT $LN2@Getstate
; Line 361
	mov	edx, DWORD PTR __State$[ebp]
	or	edx, 8
	mov	DWORD PTR __State$[ebp], edx
$LN2@Getstate:
; Line 362
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN1@Getstate
; Line 363
	mov	ecx, DWORD PTR __State$[ebp]
	or	ecx, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], ecx
$LN1@Getstate:
; Line 364
	mov	eax, DWORD PTR __State$[ebp]
; Line 365
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv88 = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	SHORT $LN1@Tidy
; Line 341
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Tidy
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv88[ebp]
	sub	edx, eax
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@Tidy:
; Line 342
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 343
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 344
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 345
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, -2					; fffffffeH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], edx
; Line 346
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z
_TEXT	SEGMENT
tv137 = -12						; size = 4
__Pnew$1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__State$ = 16						; size = 4
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 310
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 312
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __State$[ebp]
	mov	DWORD PTR [ecx+60], edx
; Line 315
	cmp	DWORD PTR __Count$[ebp], 0
	je	$LN5@Init
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 6
	cmp	ecx, 6
	je	$LN5@Init
; Line 317
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Pnew$1[ebp], eax
; Line 318
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 319
	mov	eax, DWORD PTR __Pnew$1[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 321
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 4
	jne	SHORT $LN3@Init
; Line 323
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Init:
; Line 324
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 2
	jne	SHORT $LN2@Init
; Line 328
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 24					; 00000018H
	je	SHORT $LN7@Init
	mov	edx, DWORD PTR __Pnew$1[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	eax, DWORD PTR __Pnew$1[ebp]
	mov	DWORD PTR tv137[ebp], eax
$LN8@Init:
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR tv137[ebp]
	push	edx
	mov	eax, DWORD PTR __Pnew$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 329
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@Init
; Line 330
	mov	esi, esp
	mov	ecx, DWORD PTR __Pnew$1[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Pnew$1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Init:
; Line 332
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
$LN5@Init:
; Line 334
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z
_TEXT	SEGMENT
tv342 = -32						; size = 8
tv282 = -24						; size = 8
tv259 = -16						; size = 4
__Off$ = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Ptr$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 277
	lea	ecx, DWORD PTR __Ptr$[ebp]
	call	??B?$fpos@H@std@@QBE_JXZ		; std::fpos<int>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 278
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN12@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN12@seekpos
; Line 279
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN12@seekpos:
; Line 281
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	DWORD PTR tv259[ebp], eax
	mov	ecx, DWORD PTR tv259[ebp]
	mov	edx, DWORD PTR __Off$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN11@seekpos
	mov	eax, DWORD PTR tv259[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN11@seekpos
	jmp	$LN10@seekpos
$LN11@seekpos:
; Line 283
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 1
	je	$LN9@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN9@seekpos
; Line 285
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN8@seekpos
	jg	SHORT $LN15@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN8@seekpos
$LN15@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv282[ebp], eax
	mov	DWORD PTR tv282[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv282[ebp+4]
	jg	$LN8@seekpos
	jl	SHORT $LN16@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv282[ebp]
	ja	$LN8@seekpos
$LN16@seekpos:
; Line 287
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 288
	mov	edx, DWORD PTR __Mode$[ebp]
	and	edx, 2
	je	SHORT $LN7@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN7@seekpos
; Line 290
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@seekpos:
; Line 292
	jmp	SHORT $LN6@seekpos
$LN8@seekpos:
; Line 293
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN6@seekpos:
	jmp	$LN10@seekpos
$LN9@seekpos:
; Line 295
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	$LN4@seekpos
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@seekpos
; Line 297
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN3@seekpos
	jg	SHORT $LN17@seekpos
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN3@seekpos
$LN17@seekpos:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv342[ebp], eax
	mov	DWORD PTR tv342[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv342[ebp+4]
	jg	SHORT $LN3@seekpos
	jl	SHORT $LN18@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv342[ebp]
	ja	SHORT $LN3@seekpos
$LN18@seekpos:
; Line 299
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 300
	jmp	SHORT $LN2@seekpos
$LN3@seekpos:
; Line 301
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN2@seekpos:
; Line 303
	jmp	SHORT $LN10@seekpos
$LN4@seekpos:
; Line 304
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN10@seekpos:
; Line 305
	mov	edx, DWORD PTR __Off$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 306
	pop	edi
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z
_TEXT	SEGMENT
tv453 = -20						; size = 8
tv360 = -12						; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Which$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN21@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN21@seekoff
; Line 229
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN21@seekoff:
; Line 231
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 1
	je	$LN20@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN20@seekoff
; Line 233
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN19@seekoff
; Line 234
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 235
	jmp	SHORT $LN18@seekoff
$LN19@seekoff:
; Line 236
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	jne	SHORT $LN17@seekoff
; Line 237
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:
; Line 238
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN18@seekoff
; Line 239
	mov	ecx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __Off$[ebp], edx
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR __Off$[ebp+4], eax
$LN18@seekoff:
; Line 241
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN14@seekoff
	jg	SHORT $LN24@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	$LN14@seekoff
$LN24@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv360[ebp], eax
	mov	DWORD PTR tv360[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv360[ebp+4]
	jg	$LN14@seekoff
	jl	SHORT $LN25@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv360[ebp]
	ja	$LN14@seekoff
$LN25@seekoff:
; Line 243
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 244
	mov	edx, DWORD PTR __Which$[ebp]
	and	edx, 2
	je	SHORT $LN13@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@seekoff
; Line 246
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@seekoff:
; Line 248
	jmp	SHORT $LN12@seekoff
$LN14@seekoff:
; Line 249
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN12@seekoff:
	jmp	$LN11@seekoff
$LN20@seekoff:
; Line 251
	mov	eax, DWORD PTR __Which$[ebp]
	and	eax, 2
	je	$LN10@seekoff
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN10@seekoff
; Line 253
	cmp	DWORD PTR __Way$[ebp], 2
	jne	SHORT $LN9@seekoff
; Line 254
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN9@seekoff:
; Line 255
	cmp	DWORD PTR __Way$[ebp], 1
	jne	SHORT $LN7@seekoff
; Line 256
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:
; Line 257
	cmp	DWORD PTR __Way$[ebp], 0
	je	SHORT $LN8@seekoff
; Line 258
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN8@seekoff:
; Line 260
	cmp	DWORD PTR __Off$[ebp+4], 0
	jl	$LN4@seekoff
	jg	SHORT $LN26@seekoff
	cmp	DWORD PTR __Off$[ebp], 0
	jb	SHORT $LN4@seekoff
$LN26@seekoff:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	sub	edx, eax
	mov	eax, edx
	cdq
	mov	DWORD PTR tv453[ebp], eax
	mov	DWORD PTR tv453[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv453[ebp+4]
	jg	SHORT $LN4@seekoff
	jl	SHORT $LN27@seekoff
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv453[ebp]
	ja	SHORT $LN4@seekoff
$LN27@seekoff:
; Line 262
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	eax, esi
	cdq
	add	eax, DWORD PTR __Off$[ebp]
	adc	edx, DWORD PTR __Off$[ebp+4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	jmp	SHORT $LN3@seekoff
$LN4@seekoff:
; Line 264
	mov	edx, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Off$[ebp], eax
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Off$[ebp+4], ecx
$LN3@seekoff:
	jmp	SHORT $LN11@seekoff
$LN10@seekoff:
; Line 267
	mov	edx, DWORD PTR __Off$[ebp]
	or	edx, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN11@seekoff
; Line 270
	mov	eax, DWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Off$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __Off$[ebp+4], edx
$LN11@seekoff:
; Line 271
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@H@std@@QAE@_J@Z		; std::fpos<int>::fpos<int>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 272
	pop	edi
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 207
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN8@underflow
; Line 209
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
	jmp	$LN9@underflow
$LN8@underflow:
; Line 210
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN6@underflow
; Line 211
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
	jmp	$LN9@underflow
; Line 212
	jmp	$LN9@underflow
$LN6@underflow:
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	jne	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	ja	SHORT $LN4@underflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	ja	SHORT $LN4@underflow
$LN3@underflow:
; Line 214
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN9@underflow
; Line 215
	jmp	$LN9@underflow
$LN4@underflow:
; Line 217
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+56], eax
	jae	SHORT $LN1@underflow
; Line 218
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+56], eax
$LN1@underflow:
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$char_traits@D@std@@SAHABD@Z ; std::char_traits<char>::to_int_type
	add	esp, 4
$LN9@underflow:
; Line 222
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -9						; size = 1
$T3 = -8						; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 195
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN3@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T2[ebp], al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, 1
	imul	edx, ecx, -1
	add	eax, edx
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq@?$char_traits@D@std@@SA_NABD0@Z	; std::char_traits<char>::eq
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@pbackfail
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 2
	je	SHORT $LN4@pbackfail
$LN3@pbackfail:
; Line 196
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	SHORT $LN5@pbackfail
; Line 197
	jmp	SHORT $LN5@pbackfail
$LN4@pbackfail:
; Line 199
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 200
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@pbackfail
; Line 201
	lea	ecx, DWORD PTR __Meta$[ebp]
	push	ecx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
$LN1@pbackfail:
; Line 202
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
$LN5@pbackfail:
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv199 = -36						; size = 4
tv195 = -32						; size = 4
$T1 = -28						; size = 4
__Oldptr$2 = -24					; size = 4
__Newptr$3 = -20					; size = 4
__Inc$4 = -16						; size = 4
__Newsize$5 = -12					; size = 4
__Oldsize$6 = -8					; size = 4
_this$ = -4						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN17@overflow
; Line 122
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN18@overflow
	jmp	SHORT $LN16@overflow
$LN17@overflow:
; Line 123
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ; std::char_traits<char>::eq_int_type
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN16@overflow
; Line 124
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?not_eof@?$char_traits@D@std@@SAHABH@Z	; std::char_traits<char>::not_eof
	add	esp, 4
	jmp	$LN18@overflow
$LN16@overflow:
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 8
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN14@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [edx+56]
	jae	SHORT $LN14@overflow
; Line 128
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@overflow:
; Line 131
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN13@overflow
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	cmp	esi, eax
	jae	SHORT $LN13@overflow
; Line 133
	lea	edx, DWORD PTR __Meta$[ebp]
	push	edx
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 134
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN18@overflow
; Line 136
	jmp	$LN18@overflow
$LN13@overflow:
; Line 139
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN20@overflow
	mov	DWORD PTR tv195[ebp], 0
	jmp	SHORT $LN21@overflow
$LN20@overflow:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	mov	DWORD PTR tv195[ebp], esi
$LN21@overflow:
	mov	eax, DWORD PTR tv195[ebp]
	mov	DWORD PTR __Oldsize$6[ebp], eax
; Line 140
	mov	ecx, DWORD PTR __Oldsize$6[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 142
	mov	edx, DWORD PTR __Newsize$5[ebp]
	shr	edx, 1
	cmp	edx, 32					; 00000020H
	jae	SHORT $LN22@overflow
	mov	DWORD PTR tv199[ebp], 32		; 00000020H
	jmp	SHORT $LN23@overflow
$LN22@overflow:
	mov	eax, DWORD PTR __Newsize$5[ebp]
	shr	eax, 1
	mov	DWORD PTR tv199[ebp], eax
$LN23@overflow:
	mov	ecx, DWORD PTR tv199[ebp]
	mov	DWORD PTR __Inc$4[ebp], ecx
$LN11@overflow:
; Line 144
	cmp	DWORD PTR __Inc$4[ebp], 0
	jbe	SHORT $LN10@overflow
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, DWORD PTR __Inc$4[ebp]
	cmp	edx, DWORD PTR __Newsize$5[ebp]
	jae	SHORT $LN10@overflow
; Line 145
	mov	eax, DWORD PTR __Inc$4[ebp]
	shr	eax, 1
	mov	DWORD PTR __Inc$4[ebp], eax
	jmp	SHORT $LN11@overflow
$LN10@overflow:
; Line 146
	cmp	DWORD PTR __Inc$4[ebp], 0
	jne	SHORT $LN9@overflow
; Line 147
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	jmp	$LN18@overflow
$LN9@overflow:
; Line 149
	mov	ecx, DWORD PTR __Newsize$5[ebp]
	add	ecx, DWORD PTR __Inc$4[ebp]
	mov	DWORD PTR __Newsize$5[ebp], ecx
; Line 151
	mov	edx, DWORD PTR __Newsize$5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __Newptr$3[ebp], eax
; Line 152
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Oldptr$2[ebp], eax
; Line 154
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jbe	SHORT $LN8@overflow
; Line 155
	mov	eax, DWORD PTR __Oldsize$6[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN8@overflow:
; Line 157
	cmp	DWORD PTR __Oldsize$6[ebp], 0
	jne	SHORT $LN7@overflow
; Line 159
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 160
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, DWORD PTR __Newsize$5[ebp]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 161
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	and	edx, 4
	je	SHORT $LN6@overflow
; Line 162
	mov	esi, esp
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 163
	jmp	SHORT $LN5@overflow
$LN6@overflow:
; Line 164
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, 1
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@overflow:
; Line 166
	jmp	$LN4@overflow
$LN7@overflow:
; Line 168
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+56]
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 171
	mov	edx, DWORD PTR __Newptr$3[ebp]
	add	edx, DWORD PTR __Newsize$5[ebp]
	mov	esi, esp
	push	edx
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN3@overflow
; Line 173
	mov	esi, esp
	mov	edx, DWORD PTR __Newptr$3[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 174
	jmp	SHORT $LN4@overflow
$LN3@overflow:
; Line 177
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$2[ebp]
	add	eax, DWORD PTR __Newptr$3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@overflow:
; Line 180
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 1
	je	SHORT $LN1@overflow
; Line 181
	mov	ecx, DWORD PTR __Oldsize$6[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN1@overflow:
; Line 182
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 184
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$char_traits@D@std@@SADABH@Z ; std::char_traits<char>::to_char_type
	add	esp, 4
	mov	bl, al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR [eax], bl
; Line 185
	mov	eax, DWORD PTR __Meta$[ebp]
$LN18@overflow:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newstr$ = 8						; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 113
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	mov	ecx, DWORD PTR __Newstr$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	push	eax
	mov	ecx, DWORD PTR __Newstr$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 116
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv91 = -124						; size = 4
$T1 = -120						; size = 4
__Nul$2 = -112						; size = 28
__Str$3 = -76						; size = 28
__Str$4 = -40						; size = 28
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 124				; 0000007cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	jne	$LN4@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN4@str
; Line 97
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+56], eax
	jae	SHORT $LN7@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@str
$LN7@str:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@str:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR tv91[ebp]
	sub	edx, eax
	push	edx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 98
	lea	eax, DWORD PTR __Str$4[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Str$4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@str
	jmp	$LN5@str
$LN4@str:
; Line 100
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+60]
	and	eax, 4
	jne	SHORT $LN2@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@str
; Line 102
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	sub	esi, eax
	push	esi
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 103
	lea	ecx, DWORD PTR __Str$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	lea	ecx, DWORD PTR __Str$3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@str
; Line 105
	jmp	SHORT $LN5@str
$LN2@str:
; Line 107
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 108
	lea	eax, DWORD PTR __Nul$2[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	lea	ecx, DWORD PTR __Nul$2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN5@str:
; Line 110
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN18@str:
	DD	3
	DD	$LN17@str
$LN17@str:
	DD	-40					; ffffffd8H
	DD	28					; 0000001cH
	DD	$LN14@str
	DD	-76					; ffffffb4H
	DD	28					; 0000001cH
	DD	$LN15@str
	DD	-112					; ffffff90H
	DD	28					; 0000001cH
	DD	$LN16@str
$LN16@str:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	0
$LN15@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN14@str:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 76
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 77
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 28
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 31
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Init
; Line 32
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newstr$ = 8						; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	eax, DWORD PTR __Newstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Line 651
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 644
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 645
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 646
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 635
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-104]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-104], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-104]
	mov	eax, DWORD PTR [edx+4]
	sub	eax, 104				; 00000068H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-104]
	mov	ecx, DWORD PTR [edx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+ecx-108], eax
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
_$initVBases$ = 12					; size = 4
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\sstream
; Line 591
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN1@basic_stri
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], OFFSET ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
$LN1@basic_stri:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax], OFFSET ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 104				; 00000068H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-4], ecx
	mov	ecx, DWORD PTR __Mode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Line 592
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_stri
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 104				; 00000068H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_stri:
	ret	0
__unwindfunclet$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OutputMessage@BasicLogger@gfx@mozilla@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H_N@Z
_TEXT	SEGMENT
tv70 = -4						; size = 4
_aString$ = 8						; size = 4
_aLevel$ = 12						; size = 4
_aNoNewline$ = 16					; size = 1
?OutputMessage@BasicLogger@gfx@mozilla@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H_N@Z PROC ; mozilla::gfx::BasicLogger::OutputMessage, COMDAT
; File d:\mozilla\gfx\2d\logging.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 177
	mov	eax, DWORD PTR ?sGfxLogLevel@LoggingPrefs@gfx@mozilla@@2HA ; mozilla::gfx::LoggingPrefs::sGfxLogLevel
	cmp	eax, DWORD PTR _aLevel$[ebp]
	jl	SHORT $LN4@OutputMess
; Line 187
	cmp	DWORD PTR ?sGfxLogLevel@LoggingPrefs@gfx@mozilla@@2HA, 4 ; mozilla::gfx::LoggingPrefs::sGfxLogLevel
	jge	SHORT $LN1@OutputMess
	cmp	DWORD PTR _aLevel$[ebp], 3
	jge	SHORT $LN4@OutputMess
$LN1@OutputMess:
; Line 188
	movzx	ecx, BYTE PTR _aNoNewline$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@OutputMess
	mov	DWORD PTR tv70[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN7@OutputMess
$LN6@OutputMess:
	mov	DWORD PTR tv70[ebp], OFFSET ??_C@_01EEMJAFIK@?6?$AA@
$LN7@OutputMess:
	mov	esi, esp
	mov	edx, DWORD PTR tv70[ebp]
	push	edx
	mov	ecx, DWORD PTR _aString$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	push	OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@OutputMess:
; Line 192
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?OutputMessage@BasicLogger@gfx@mozilla@@SAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H_N@Z ENDP ; mozilla::gfx::BasicLogger::OutputMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CrashAction@BasicLogger@gfx@mozilla@@SAXW4LogReason@23@@Z
_TEXT	SEGMENT
_aReason$ = 8						; size = 4
?CrashAction@BasicLogger@gfx@mozilla@@SAXW4LogReason@23@@Z PROC ; mozilla::gfx::BasicLogger::CrashAction, COMDAT
; File d:\mozilla\gfx\2d\logging.h
; Line 163
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?CrashAction@BasicLogger@gfx@mozilla@@SAXW4LogReason@23@@Z ENDP ; mozilla::gfx::BasicLogger::CrashAction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ShouldOutputMessage@BasicLogger@gfx@mozilla@@SA_NH@Z
_TEXT	SEGMENT
_aLevel$ = 8						; size = 4
?ShouldOutputMessage@BasicLogger@gfx@mozilla@@SA_NH@Z PROC ; mozilla::gfx::BasicLogger::ShouldOutputMessage, COMDAT
; File d:\mozilla\gfx\2d\logging.h
; Line 143
	push	ebp
	mov	ebp, esp
; Line 144
	mov	eax, DWORD PTR ?sGfxLogLevel@LoggingPrefs@gfx@mozilla@@2HA ; mozilla::gfx::LoggingPrefs::sGfxLogLevel
	cmp	eax, DWORD PTR _aLevel$[ebp]
	jl	SHORT $LN3@ShouldOutp
; Line 154
	cmp	DWORD PTR ?sGfxLogLevel@LoggingPrefs@gfx@mozilla@@2HA, 4 ; mozilla::gfx::LoggingPrefs::sGfxLogLevel
	jge	SHORT $LN1@ShouldOutp
	cmp	DWORD PTR _aLevel$[ebp], 3
	jge	SHORT $LN3@ShouldOutp
$LN1@ShouldOutp:
; Line 155
	mov	al, 1
	jmp	SHORT $LN4@ShouldOutp
$LN3@ShouldOutp:
; Line 159
	xor	al, al
$LN4@ShouldOutp:
; Line 160
	pop	ebp
	ret	0
?ShouldOutputMessage@BasicLogger@gfx@mozilla@@SA_NH@Z ENDP ; mozilla::gfx::BasicLogger::ShouldOutputMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VSourceSurfaceDual@gfx@mozilla@@@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aOther$ = 8						; size = 4
??$?0VSourceSurfaceDual@gfx@mozilla@@@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@@Z PROC ; already_AddRefed<mozilla::gfx::SourceSurface>::already_AddRefed<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurfaceDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aOther$[ebp]
	call	?take@?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAEPAVSourceSurfaceDual@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VSourceSurfaceDual@gfx@mozilla@@@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@@Z ENDP ; already_AddRefed<mozilla::gfx::SourceSurface>::already_AddRefed<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurfaceDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAEPAVSourceSurfaceDual@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAEPAVSourceSurfaceDual@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAEPAVSourceSurfaceDual@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z PROC ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::already_AddRefed<mozilla::gfx::SourceSurfaceDual>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ENDP ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::already_AddRefed<mozilla::gfx::SourceSurfaceDual>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
_TEXT	SEGMENT
tv83 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 4
$T4 = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<aArgs_0>$ = 12					; size = 4
_<aArgs_1>$ = 16					; size = 4
??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z PROC ; mozilla::MakeAndAddRef<mozilla::gfx::SourceSurfaceDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 614
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
; Line 615
	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN3@MakeAndAdd
	mov	eax, DWORD PTR _<aArgs_1>$[ebp]
	push	eax
	call	??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 4
	mov	ecx, eax
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	push	eax
	mov	ecx, DWORD PTR _<aArgs_0>$[ebp]
	push	ecx
	call	??$Forward@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 4
	mov	ecx, eax
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	push	eax
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ; mozilla::gfx::SourceSurfaceDual::SourceSurfaceDual
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN4@MakeAndAdd
$LN3@MakeAndAdd:
	mov	DWORD PTR tv83[ebp], 0
$LN4@MakeAndAdd:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR $T4[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	call	??0?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@PAVSourceSurfaceDual@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurfaceDual>::RefPtr<mozilla::gfx::SourceSurfaceDual>
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 616
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _p$[ebp]
	call	?forget@?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::SourceSurfaceDual>::forget
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurfaceDual>::~RefPtr<mozilla::gfx::SourceSurfaceDual>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 617
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@MakeAndAdd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@MakeAndAdd:
	DD	1
	DD	$LN11@MakeAndAdd
$LN11@MakeAndAdd:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN9@MakeAndAdd
$LN9@MakeAndAdd:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$0:
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$1:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1?$RefPtr@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurfaceDual>::~RefPtr<mozilla::gfx::SourceSurfaceDual>
__unwindfunclet$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z$2:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN8@MakeAndAdd
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>
$LN8@MakeAndAdd:
	ret	0
__ehhandler$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ENDP ; mozilla::MakeAndAddRef<mozilla::gfx::SourceSurfaceDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GDrawTargetDual@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawTargetDual@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::DrawTargetDual::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawTargetDual@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawTargetDual@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::DrawTargetDual::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DrawTargetDual@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DrawTargetDual@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::DrawTargetDual::~DrawTargetDual, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DrawTargetDual@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawTarget@gfx@mozilla@@UAE@XZ	; mozilla::gfx::DrawTarget::~DrawTarget
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DrawTargetDual@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawTarget@gfx@mozilla@@UAE@XZ	; mozilla::gfx::DrawTarget::~DrawTarget
__unwindfunclet$??1DrawTargetDual@gfx@mozilla@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
__ehhandler$??1DrawTargetDual@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DrawTargetDual@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DrawTargetDual@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::DrawTargetDual::~DrawTargetDual
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsCurrentGroupOpaque@DrawTargetDual@gfx@mozilla@@UAE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?IsCurrentGroupOpaque@DrawTargetDual@gfx@mozilla@@UAE_NXZ PROC ; mozilla::gfx::DrawTargetDual::IsCurrentGroupOpaque, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCurrentGroupOpaque@DrawTargetDual@gfx@mozilla@@UAE_NXZ ENDP ; mozilla::gfx::DrawTargetDual::IsCurrentGroupOpaque
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDualDrawTarget@DrawTargetDual@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDualDrawTarget@DrawTargetDual@gfx@mozilla@@UBE_NXZ PROC ; mozilla::gfx::DrawTargetDual::IsDualDrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 162
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 163
	mov	al, 1
; Line 164
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDualDrawTarget@DrawTargetDual@gfx@mozilla@@UBE_NXZ ENDP ; mozilla::gfx::DrawTargetDual::IsDualDrawTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNativeSurface@DrawTargetDual@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aType$ = 8						; size = 1
?GetNativeSurface@DrawTargetDual@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z PROC ; mozilla::gfx::DrawTargetDual::GetNativeSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 158
	xor	eax, eax
; Line 159
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNativeSurface@DrawTargetDual@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::GetNativeSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateFilter@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VFilterNode@gfx@mozilla@@@@W4FilterType@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aType$ = 12						; size = 1
?CreateFilter@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VFilterNode@gfx@mozilla@@@@W4FilterType@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreateFilter, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aType$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+152]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 154
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CreateFilter@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VFilterNode@gfx@mozilla@@@@W4FilterType@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreateFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateGradientStops@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VGradientStops@gfx@mozilla@@@@PAUGradientStop@23@IW4ExtendMode@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aStops$ = 12						; size = 4
_aNumStops$ = 16					; size = 4
_aExtendMode$ = 20					; size = 1
?CreateGradientStops@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VGradientStops@gfx@mozilla@@@@PAUGradientStop@23@IW4ExtendMode@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreateGradientStops, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 148
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aExtendMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aNumStops$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStops$[ebp]
	push	edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+148]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 149
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CreateGradientStops@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VGradientStops@gfx@mozilla@@@@PAUGradientStop@23@IW4ExtendMode@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreateGradientStops
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreatePathBuilder@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aFillRule$ = 12					; size = 1
?CreatePathBuilder@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreatePathBuilder, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFillRule$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+144]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 141
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CreatePathBuilder@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreatePathBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv182 = -288						; size = 4
tv189 = -284						; size = 4
tv174 = -280						; size = 4
tv82 = -276						; size = 4
tv171 = -272						; size = 4
tv65 = -268						; size = 4
tv87 = -264						; size = 4
tv168 = -260						; size = 4
tv186 = -256						; size = 4
tv70 = -252						; size = 4
$T2 = -248						; size = 4
$T3 = -244						; size = 4
$T4 = -240						; size = 192
$T5 = -48						; size = 4
$T6 = -44						; size = 4
_dtB$ = -36						; size = 4
_dtA$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_aSize$ = 12						; size = 4
_aFormat$ = 16						; size = 1
?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreateSimilarDrawTarget
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 276				; 00000114H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 202
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	eax, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+132]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv186[ebp], eax
	mov	ecx, DWORD PTR tv186[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv168[ebp]
	push	edx
	lea	ecx, DWORD PTR _dtA$[ebp]
	call	??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
; Line 203
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv87[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	eax, DWORD PTR tv87[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv87[ebp]
	mov	eax, DWORD PTR [edx+132]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv171[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv171[ebp]
	push	edx
	lea	ecx, DWORD PTR _dtB$[ebp]
	call	??$?0VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
; Line 205
	lea	ecx, DWORD PTR _dtA$[ebp]
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	test	eax, eax
	je	SHORT $LN1@CreateSimi
	lea	ecx, DWORD PTR _dtB$[ebp]
	call	??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
	test	eax, eax
	jne	$LN2@CreateSimi
$LN1@CreateSimi:
; Line 206
	mov	eax, DWORD PTR _aSize$[ebp]
	push	eax
	push	OFFSET $SG70167
	push	-1
	push	0
	call	?DefaultOptions@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@SAH_N@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::DefaultOptions
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@HW4LogReason@12@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::Log<2,mozilla::gfx::BasicLogger>
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv174[ebp]
	call	??6?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@QBD@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<
	mov	ecx, eax
	call	??$?6HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAEAAV012@ABU?$BaseSize@HU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@@12@@Z ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::operator<<<int,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits> >
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::~Log<2,mozilla::gfx::BasicLogger>
; Line 207
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@P80@AEXNM@Z@Z ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _dtB$[ebp]
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dtA$[ebp]
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@CreateSimi
$LN2@CreateSimi:
; Line 210
	lea	eax, DWORD PTR _dtB$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dtA$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$MakeAndAddRef@VDrawTargetDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ; mozilla::MakeAndAddRef<mozilla::gfx::DrawTargetDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv189[ebp], eax
	mov	eax, DWORD PTR tv189[ebp]
	mov	DWORD PTR tv182[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR tv182[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0VDrawTargetDual@gfx@mozilla@@@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget><mozilla::gfx::DrawTargetDual>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _dtB$[ebp]
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _dtA$[ebp]
	call	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@CreateSimi:
; Line 211
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@CreateSimi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN17@CreateSimi:
	DD	2
	DD	$LN16@CreateSimi
$LN16@CreateSimi:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN13@CreateSimi
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN14@CreateSimi
$LN14@CreateSimi:
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	0
$LN13@CreateSimi:
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	65					; 00000041H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$0:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$1:
	lea	ecx, DWORD PTR _dtA$[ebp]
	jmp	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$2:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$3:
	lea	ecx, DWORD PTR _dtB$[ebp]
	jmp	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$4:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$Log@$01UBasicLogger@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::Log<2,mozilla::gfx::BasicLogger>::~Log<2,mozilla::gfx::BasicLogger>
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$5:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN11@CreateSimi
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
$LN11@CreateSimi:
	ret	0
__unwindfunclet$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z$6:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VDrawTargetDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::DrawTargetDual>::~already_AddRefed<mozilla::gfx::DrawTargetDual>
__ehhandler$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-288]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateSimilarDrawTarget@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreateSimilarDrawTarget
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateSourceSurfaceFromNativeSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@ABUNativeSurface@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aSurface$ = 12						; size = 4
?CreateSourceSurfaceFromNativeSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@ABUNativeSurface@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromNativeSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+128]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 133
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CreateSourceSurfaceFromNativeSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@ABUNativeSurface@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromNativeSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OptimizeSourceSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAVSourceSurface@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aSurface$ = 12						; size = 4
?OptimizeSourceSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAVSourceSurface@23@@Z PROC ; mozilla::gfx::DrawTargetDual::OptimizeSourceSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 126
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+124]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 127
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?OptimizeSourceSurface@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAVSourceSurface@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::OptimizeSourceSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateSourceSurfaceFromData@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAEABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@HW4SurfaceFormat@23@@Z
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aData$ = 12						; size = 4
_aSize$ = 16						; size = 4
_aStride$ = 20						; size = 4
_aFormat$ = 24						; size = 1
?CreateSourceSurfaceFromData@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAEABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@HW4SurfaceFormat@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromData, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aStride$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _aData$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+120]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 122
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?CreateSourceSurfaceFromData@DrawTargetDual@gfx@mozilla@@UBE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@PAEABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@HW4SurfaceFormat@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CreateSourceSurfaceFromData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -28						; size = 4
tv70 = -24						; size = 4
_mask$ = -16						; size = 8
_this$ = -4						; size = 4
_aOpaque$ = 8						; size = 1
_aOpacity$ = 12						; size = 4
_aMask$ = 16						; size = 4
_aMaskTransform$ = 20					; size = 4
_aBounds$ = 24						; size = 4
_aCopyBackground$ = 28					; size = 1
?PushLayer@DrawTargetDual@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z PROC ; mozilla::gfx::DrawTargetDual::PushLayer
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _aMask$[ebp]
	push	eax
	lea	ecx, DWORD PTR _mask$[ebp]
	call	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
; Line 195
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	movzx	ecx, BYTE PTR _aCopyBackground$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aBounds$[ebp]
	push	edx
	mov	eax, DWORD PTR _aMaskTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mask$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _aOpacity$[ebp]
	movss	DWORD PTR [esp], xmm0
	movzx	edx, BYTE PTR _aOpaque$[ebp]
	push	edx
	mov	eax, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	movzx	ecx, BYTE PTR _aCopyBackground$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aBounds$[ebp]
	push	edx
	mov	eax, DWORD PTR _aMaskTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mask$[ebp+4]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _aOpacity$[ebp]
	movss	DWORD PTR [esp], xmm0
	movzx	edx, BYTE PTR _aOpaque$[ebp]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 197
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PushLayer
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN5@PushLayer:
	DD	1
	DD	$LN4@PushLayer
$LN4@PushLayer:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@PushLayer
$LN3@PushLayer:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	0
?PushLayer@DrawTargetDual@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z ENDP ; mozilla::gfx::DrawTargetDual::PushLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv86 = -276						; size = 4
tv76 = -272						; size = 4
_mask$ = -264						; size = 116
_source$ = -140						; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aSource$ = 8						; size = 4
_aMask$ = 12						; size = 4
_aOptions$ = 16						; size = 4
?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::Mask
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 182
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _aSource$[ebp]
	push	eax
	lea	ecx, DWORD PTR _source$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 184
	mov	ecx, DWORD PTR _aMask$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mask$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 185
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _aOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _mask$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp+104]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv86[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aOptions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mask$[ebp+108]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp+108]
	push	edx
	mov	eax, DWORD PTR tv86[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv86[ebp]
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 187
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _mask$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _source$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Mask
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN9@Mask:
	DD	2
	DD	$LN8@Mask
$LN8@Mask:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN5@Mask
	DD	-264					; fffffef8H
	DD	116					; 00000074H
	DD	$LN6@Mask
$LN6@Mask:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	0
$LN5@Mask:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _source$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__unwindfunclet$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z$1:
	lea	ecx, DWORD PTR _mask$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Mask@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@0ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::Mask
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aScaledFont$ = 8					; size = 4
_aBuffer$ = 12						; size = 4
_aPattern$ = 16						; size = 4
_aOptions$ = 20						; size = 4
_aRenderingOptions$ = 24				; size = 4
?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::FillGlyphs
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 174
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 175
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aRenderingOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR _aBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aScaledFont$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 177
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv84[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aRenderingOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+108]
	push	eax
	mov	ecx, DWORD PTR _aBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aScaledFont$[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 178
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FillGlyphs
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN7@FillGlyphs:
	DD	1
	DD	$LN6@FillGlyphs
$LN6@FillGlyphs:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@FillGlyphs
$LN4@FillGlyphs:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FillGlyphs@DrawTargetDual@gfx@mozilla@@UAEXPAVScaledFont@23@ABUGlyphBuffer@23@ABVPattern@23@ABUDrawOptions@23@PBVGlyphRenderingOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::FillGlyphs
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aPath$ = 8						; size = 4
_aPattern$ = 12						; size = 4
_aOptions$ = 16						; size = 4
?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::Fill
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 164
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 166
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+104]
	push	edx
	mov	eax, DWORD PTR _aPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv82[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+108]
	push	edx
	mov	eax, DWORD PTR _aPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Fill
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@Fill:
	DD	1
	DD	$LN6@Fill
$LN6@Fill:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@Fill
$LN4@Fill:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Fill@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::Fill
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aPath$ = 8						; size = 4
_aPattern$ = 12						; size = 4
_aStrokeOptions$ = 16					; size = 4
_aOptions$ = 20						; size = 4
?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::Stroke
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 156
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 158
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStrokeOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR _aPath$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax+80]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aOptions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aStrokeOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+108]
	push	edx
	mov	eax, DWORD PTR _aPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 160
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Stroke
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@Stroke:
	DD	1
	DD	$LN6@Stroke
$LN6@Stroke:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@Stroke
$LN4@Stroke:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Stroke@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::Stroke
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv84 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aStart$ = 8						; size = 4
_aEnd$ = 12						; size = 4
_aPattern$ = 16						; size = 4
_aStrokeOptions$ = 20					; size = 4
_aOptions$ = 24						; size = 4
?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::StrokeLine
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 147
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 148
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 149
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStrokeOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR _aEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStart$[ebp]
	push	edx
	mov	eax, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 150
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv84[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStrokeOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+108]
	push	eax
	mov	ecx, DWORD PTR _aEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStart$[ebp]
	push	edx
	mov	eax, DWORD PTR tv84[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv84[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 151
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@StrokeLine
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	3
$LN7@StrokeLine:
	DD	1
	DD	$LN6@StrokeLine
$LN6@StrokeLine:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@StrokeLine
$LN4@StrokeLine:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?StrokeLine@DrawTargetDual@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::StrokeLine
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aRect$ = 8						; size = 4
_aPattern$ = 12						; size = 4
_aStrokeOptions$ = 16					; size = 4
_aOptions$ = 20						; size = 4
?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::StrokeRect
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 138
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStrokeOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _pattern$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR _aRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 141
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aOptions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aStrokeOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+108]
	push	edx
	mov	eax, DWORD PTR _aRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 142
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@StrokeRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN7@StrokeRect:
	DD	1
	DD	$LN6@StrokeRect
$LN6@StrokeRect:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@StrokeRect
$LN4@StrokeRect:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?StrokeRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUStrokeOptions@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::StrokeRect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -152						; size = 4
tv72 = -148						; size = 4
_pattern$ = -140					; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aRect$ = 8						; size = 4
_aPattern$ = 12						; size = 4
_aOptions$ = 16						; size = 4
?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::FillRect
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 129
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 140				; 0000008cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-152]
	mov	ecx, 35					; 00000023H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 130
	mov	eax, DWORD PTR _aPattern$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 131
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+104]
	push	edx
	mov	eax, DWORD PTR _aRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 132
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv82[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pattern$[ebp+108]
	push	edx
	mov	eax, DWORD PTR _aRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 133
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pattern$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FillRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 152				; 00000098H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN7@FillRect:
	DD	1
	DD	$LN6@FillRect
$LN6@FillRect:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@FillRect
$LN4@FillRect:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _pattern$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-152]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?FillRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVPattern@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::FillRect
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv80 = -28						; size = 4
tv70 = -24						; size = 4
_surface$ = -16						; size = 8
_this$ = -4						; size = 4
_aSurface$ = 8						; size = 4
_aSourceRect$ = 12					; size = 4
_aDestination$ = 16					; size = 4
?CopySurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z PROC ; mozilla::gfx::DrawTargetDual::CopySurface
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _aSurface$[ebp]
	push	eax
	lea	ecx, DWORD PTR _surface$[ebp]
	call	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
; Line 123
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aDestination$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSourceRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _surface$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 124
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv80[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aDestination$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSourceRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _surface$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv80[ebp]
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CopySurfac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	2
$LN5@CopySurfac:
	DD	1
	DD	$LN4@CopySurfac
$LN4@CopySurfac:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@CopySurfac
$LN3@CopySurfac:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?CopySurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::CopySurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv83 = -28						; size = 4
tv70 = -24						; size = 4
_surface$ = -16						; size = 8
_this$ = -4						; size = 4
_aSurface$ = 8						; size = 4
_aDest$ = 12						; size = 4
_aColor$ = 16						; size = 4
_aOffset$ = 20						; size = 4
_aSigma$ = 24						; size = 4
_aOp$ = 28						; size = 1
?DrawSurfaceWithShadow@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUColor@23@1MW4CompositionOp@23@@Z PROC ; mozilla::gfx::DrawTargetDual::DrawSurfaceWithShadow
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _aSurface$[ebp]
	push	eax
	lea	ecx, DWORD PTR _surface$[ebp]
	call	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
; Line 102
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	movzx	ecx, BYTE PTR _aOp$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _aSigma$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _aOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _aColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 103
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv83[ebp], eax
	mov	esi, esp
	movzx	ecx, BYTE PTR _aOp$[ebp]
	push	ecx
	push	ecx
	movss	xmm0, DWORD PTR _aSigma$[ebp]
	movss	DWORD PTR [esp], xmm0
	mov	edx, DWORD PTR _aOffset$[ebp]
	push	edx
	mov	eax, DWORD PTR _aColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp+4]
	push	edx
	mov	eax, DWORD PTR tv83[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv83[ebp]
	mov	eax, DWORD PTR [edx+52]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawSurfac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN5@DrawSurfac:
	DD	1
	DD	$LN4@DrawSurfac
$LN4@DrawSurfac:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@DrawSurfac
$LN3@DrawSurfac:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?DrawSurfaceWithShadow@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUColor@23@1MW4CompositionOp@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::DrawSurfaceWithShadow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv85 = -168						; size = 4
tv74 = -164						; size = 4
_mask$ = -156						; size = 8
_source$ = -140						; size = 116
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_aSource$ = 8						; size = 4
_aMask$ = 12						; size = 4
_aOffset$ = 16						; size = 8
_aOptions$ = 24						; size = 4
?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::MaskSurface
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 111
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 156				; 0000009cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-168]
	mov	ecx, 39					; 00000027H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _aSource$[ebp]
	push	eax
	lea	ecx, DWORD PTR _source$[ebp]
	call	??0DualPattern@gfx@mozilla@@QAE@ABVPattern@12@@Z ; mozilla::gfx::DualPattern::DualPattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 113
	mov	ecx, DWORD PTR _aMask$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _mask$[ebp]
	call	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
; Line 114
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _aOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _aOffset$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _aOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _mask$[ebp]
	push	edx
	mov	eax, DWORD PTR _source$[ebp+104]
	push	eax
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv85[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aOffset$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _aOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mask$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp+108]
	push	edx
	mov	eax, DWORD PTR tv85[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv85[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 116
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _source$[ebp]
	call	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@MaskSurfac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 168				; 000000a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN8@MaskSurfac:
	DD	2
	DD	$LN7@MaskSurfac
$LN7@MaskSurfac:
	DD	-140					; ffffff74H
	DD	116					; 00000074H
	DD	$LN4@MaskSurfac
	DD	-156					; ffffff64H
	DD	8
	DD	$LN5@MaskSurfac
$LN5@MaskSurfac:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	0
$LN4@MaskSurfac:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z$0:
	lea	ecx, DWORD PTR _source$[ebp]
	jmp	??1DualPattern@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DualPattern::~DualPattern
__ehhandler$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?MaskSurface@DrawTargetDual@gfx@mozilla@@UAEXABVPattern@23@PAVSourceSurface@23@U?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::MaskSurface
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?DrawFilter@DrawTargetDual@gfx@mozilla@@UAEXPAVFilterNode@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z
_TEXT	SEGMENT
tv79 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aNode$ = 8						; size = 4
_aSourceRect$ = 12					; size = 4
_aDestPoint$ = 16					; size = 4
_aOptions$ = 20						; size = 4
?DrawFilter@DrawTargetDual@gfx@mozilla@@UAEXPAVFilterNode@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::DrawFilter, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aOptions$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aDestPoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSourceRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _aNode$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv79[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aDestPoint$[ebp]
	push	edx
	mov	eax, DWORD PTR _aSourceRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aNode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv79[ebp]
	mov	edx, DWORD PTR [eax+48]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 76
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawFilter@DrawTargetDual@gfx@mozilla@@UAEXPAVFilterNode@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::DrawFilter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv82 = -28						; size = 4
tv70 = -24						; size = 4
_surface$ = -16						; size = 8
_this$ = -4						; size = 4
_aSurface$ = 8						; size = 4
_aDest$ = 12						; size = 4
_aSource$ = 16						; size = 4
_aSurfOptions$ = 20					; size = 4
_aOptions$ = 24						; size = 4
?DrawSurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@1ABUDrawSurfaceOptions@23@ABUDrawOptions@23@@Z PROC ; mozilla::gfx::DrawTargetDual::DrawSurface
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.cpp
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	eax, DWORD PTR _aSurface$[ebp]
	push	eax
	lea	ecx, DWORD PTR _surface$[ebp]
	call	??0DualSurface@gfx@mozilla@@QAE@PAVSourceSurface@12@@Z ; mozilla::gfx::DualSurface::DualSurface
; Line 92
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSurfOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _aSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp]
	push	edx
	mov	eax, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 93
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv82[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aSurfOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR _aSource$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR _surface$[ebp+4]
	push	edx
	mov	eax, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 94
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawSurfac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
	npad	2
$LN5@DrawSurfac:
	DD	1
	DD	$LN4@DrawSurfac
$LN4@DrawSurfac:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@DrawSurfac
$LN3@DrawSurfac:
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
?DrawSurface@DrawTargetDual@gfx@mozilla@@UAEXPAVSourceSurface@23@ABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@1ABUDrawSurfaceOptions@23@ABUDrawOptions@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::DrawSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTransform@DrawTargetDual@gfx@mozilla@@UAEXABVMatrix@23@@Z
_TEXT	SEGMENT
tv82 = -12						; size = 4
tv74 = -8						; size = 4
_this$ = -4						; size = 4
_aTransform$ = 8					; size = 4
?SetTransform@DrawTargetDual@gfx@mozilla@@UAEXABVMatrix@23@@Z PROC ; mozilla::gfx::DrawTargetDual::SetTransform, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _aTransform$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
; Line 62
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv74[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR _aTransform$[ebp]
	push	edx
	mov	eax, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx+156]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv82[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aTransform$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv82[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv82[ebp]
	mov	edx, DWORD PTR [eax+156]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTransform@DrawTargetDual@gfx@mozilla@@UAEXABVMatrix@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::SetTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ClearRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aRect$ = 8						; size = 4
?ClearRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z PROC ; mozilla::gfx::DrawTargetDual::ClearRect, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ClearRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::ClearRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PopLayer@DrawTargetDual@gfx@mozilla@@UAEXXZ
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?PopLayer@DrawTargetDual@gfx@mozilla@@UAEXXZ PROC	; mozilla::gfx::DrawTargetDual::PopLayer, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+116]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PopLayer@DrawTargetDual@gfx@mozilla@@UAEXXZ ENDP	; mozilla::gfx::DrawTargetDual::PopLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PopClip@DrawTargetDual@gfx@mozilla@@UAEXXZ
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?PopClip@DrawTargetDual@gfx@mozilla@@UAEXXZ PROC	; mozilla::gfx::DrawTargetDual::PopClip, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PopClip@DrawTargetDual@gfx@mozilla@@UAEXXZ ENDP	; mozilla::gfx::DrawTargetDual::PopClip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PushClipRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aRect$ = 8						; size = 4
?PushClipRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z PROC ; mozilla::gfx::DrawTargetDual::PushClipRect, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+104]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PushClipRect@DrawTargetDual@gfx@mozilla@@UAEXABU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::PushClipRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PushClip@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@@Z
_TEXT	SEGMENT
tv76 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aPath$ = 8						; size = 4
?PushClip@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@@Z PROC ; mozilla::gfx::DrawTargetDual::PushClip, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aPath$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PushClip@DrawTargetDual@gfx@mozilla@@UAEXPBVPath@23@@Z ENDP ; mozilla::gfx::DrawTargetDual::PushClip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Flush@DrawTargetDual@gfx@mozilla@@UAEXXZ
_TEXT	SEGMENT
tv75 = -12						; size = 4
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?Flush@DrawTargetDual@gfx@mozilla@@UAEXXZ PROC		; mozilla::gfx::DrawTargetDual::Flush, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR tv75[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv75[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Flush@DrawTargetDual@gfx@mozilla@@UAEXXZ ENDP		; mozilla::gfx::DrawTargetDual::Flush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSize@DrawTargetDual@gfx@mozilla@@UAE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetSize@DrawTargetDual@gfx@mozilla@@UAE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ PROC ; mozilla::gfx::DrawTargetDual::GetSize, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSize@DrawTargetDual@gfx@mozilla@@UAE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ ENDP ; mozilla::gfx::DrawTargetDual::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
tv77 = -32						; size = 4
tv82 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ PROC ; mozilla::gfx::DrawTargetDual::Snapshot, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 48
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	call	??$MakeAndAddRef@VSourceSurfaceDual@gfx@mozilla@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@AAV4@@mozilla@@YA?AU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@AAV?$RefPtr@VDrawTarget@gfx@mozilla@@@@0@Z ; mozilla::MakeAndAddRef<mozilla::gfx::SourceSurfaceDual,RefPtr<mozilla::gfx::DrawTarget> &,RefPtr<mozilla::gfx::DrawTarget> &>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv82[ebp], eax
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0VSourceSurfaceDual@gfx@mozilla@@@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::SourceSurface>::already_AddRefed<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurfaceDual>
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 50
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VSourceSurfaceDual@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurfaceDual>::~already_AddRefed<mozilla::gfx::SourceSurfaceDual>
__unwindfunclet$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ$1:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@Snapshot
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
$LN5@Snapshot:
	ret	0
__ehhandler$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Snapshot@DrawTargetDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@XZ ENDP ; mozilla::gfx::DrawTargetDual::Snapshot
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBackendType@DrawTargetDual@gfx@mozilla@@UBE?AW4BackendType@23@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetBackendType@DrawTargetDual@gfx@mozilla@@UBE?AW4BackendType@23@XZ PROC ; mozilla::gfx::DrawTargetDual::GetBackendType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBackendType@DrawTargetDual@gfx@mozilla@@UBE?AW4BackendType@23@XZ ENDP ; mozilla::gfx::DrawTargetDual::GetBackendType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetType@DrawTargetDual@gfx@mozilla@@UBE?AW4DrawTargetType@23@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetType@DrawTargetDual@gfx@mozilla@@UBE?AW4DrawTargetType@23@XZ PROC ; mozilla::gfx::DrawTargetDual::GetType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@DrawTargetDual@gfx@mozilla@@UBE?AW4DrawTargetType@23@XZ ENDP ; mozilla::gfx::DrawTargetDual::GetType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aA$ = 8						; size = 4
_aB$ = 12						; size = 4
??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z PROC ; mozilla::gfx::DrawTargetDual::DrawTargetDual, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\drawtargetdual.h
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0DrawTarget@gfx@mozilla@@QAE@XZ	; mozilla::gfx::DrawTarget::DrawTarget
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawTargetDual@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _aA$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _aB$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 43
	mov	ecx, DWORD PTR _aA$[ebp]
	call	?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ ; mozilla::gfx::DrawTarget::GetFormat
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+57], al
; Line 44
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1DrawTarget@gfx@mozilla@@UAE@XZ	; mozilla::gfx::DrawTarget::~DrawTarget
__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	jmp	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
__unwindfunclet$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	jmp	??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
__ehhandler$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DrawTargetDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ENDP ; mozilla::gfx::DrawTargetDual::DrawTargetDual
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GSourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z PROC	; mozilla::gfx::SourceSurfaceDual::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSourceSurfaceDual@gfx@mozilla@@UAEPAXI@Z ENDP	; mozilla::gfx::SourceSurfaceDual::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::SourceSurfaceDual::~SourceSurfaceDual, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SourceSurface@gfx@mozilla@@UAE@XZ	; mozilla::gfx::SourceSurface::~SourceSurface
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SourceSurface@gfx@mozilla@@UAE@XZ	; mozilla::gfx::SourceSurface::~SourceSurface
__unwindfunclet$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
__ehhandler$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SourceSurfaceDual@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::SourceSurfaceDual::~SourceSurfaceDual
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDataSurface@SourceSurfaceDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VDataSourceSurface@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
tv68 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetDataSurface@SourceSurfaceDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VDataSourceSurface@gfx@mozilla@@@@XZ PROC ; mozilla::gfx::SourceSurfaceDual::GetDataSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\sourcesurfacedual.h
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 34
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 35
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetDataSurface@SourceSurfaceDual@gfx@mozilla@@UAE?AU?$already_AddRefed@VDataSourceSurface@gfx@mozilla@@@@XZ ENDP ; mozilla::gfx::SourceSurfaceDual::GetDataSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFormat@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceFormat@23@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?GetFormat@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceFormat@23@XZ PROC ; mozilla::gfx::SourceSurfaceDual::GetFormat, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\sourcesurfacedual.h
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFormat@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceFormat@23@XZ ENDP ; mozilla::gfx::SourceSurfaceDual::GetFormat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetSize@SourceSurfaceDual@gfx@mozilla@@UBE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetSize@SourceSurfaceDual@gfx@mozilla@@UBE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ PROC ; mozilla::gfx::SourceSurfaceDual::GetSize, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\sourcesurfacedual.h
; Line 27
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSize@SourceSurfaceDual@gfx@mozilla@@UBE?AU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@XZ ENDP ; mozilla::gfx::SourceSurfaceDual::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetType@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceType@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceType@23@XZ PROC ; mozilla::gfx::SourceSurfaceDual::GetType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\sourcesurfacedual.h
; Line 26
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 8
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@SourceSurfaceDual@gfx@mozilla@@UBE?AW4SurfaceType@23@XZ ENDP ; mozilla::gfx::SourceSurfaceDual::GetType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
_TEXT	SEGMENT
tv144 = -40						; size = 4
tv149 = -36						; size = 4
tv140 = -32						; size = 4
tv69 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aDTA$ = 8						; size = 4
_aDTB$ = 12						; size = 4
??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z PROC ; mozilla::gfx::SourceSurfaceDual::SourceSurfaceDual, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\sourcesurfacedual.h
; Line 24
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0SourceSurface@gfx@mozilla@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SourceSurfaceDual@gfx@mozilla@@6B@
	mov	esi, esp
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	edx, DWORD PTR _aDTA$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _aDTA$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv140[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
	mov	esi, esp
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	eax, DWORD PTR _aDTB$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _aDTB$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv149[ebp], eax
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv144[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1SourceSurface@gfx@mozilla@@UAE@XZ	; mozilla::gfx::SourceSurface::~SourceSurface
__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$3:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
__unwindfunclet$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
__ehhandler$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SourceSurfaceDual@gfx@mozilla@@QAE@PAVDrawTarget@12@0@Z ENDP ; mozilla::gfx::SourceSurfaceDual::SourceSurfaceDual
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VDrawTarget@gfx@mozilla@@@@CAXPAVDrawTarget@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::DrawTarget>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::DrawTarget>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::DrawTarget>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::DrawTarget>::operator mozilla::gfx::DrawTarget *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::DrawTarget>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VDrawTarget@gfx@mozilla@@@@QBEPAVDrawTarget@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::DrawTarget>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@PAVDrawTarget@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::DrawTarget>::RefPtr<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VDrawTarget@gfx@mozilla@@@?$RefPtr@VDrawTarget@gfx@mozilla@@@@SAXPAVDrawTarget@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::DrawTarget>::AddRefTraits<mozilla::gfx::DrawTarget>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VDrawTarget@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::DrawTarget>::~RefPtr<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAEPAVDrawTarget@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAEPAVDrawTarget@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::DrawTarget>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAEPAVDrawTarget@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::DrawTarget>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::DrawTarget>::~already_AddRefed<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@P80@AEXNM@Z@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@P80@AEXNM@Z@Z PROC ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@QAE@P80@AEXNM@Z@Z ENDP ; already_AddRefed<mozilla::gfx::DrawTarget>::already_AddRefed<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	call	?take@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAEPAVSourceSurface@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAEPAVSourceSurface@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAEPAVSourceSurface@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::SourceSurface>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAEPAVSourceSurface@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::SourceSurface>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GDrawTarget@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GDrawTarget@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::DrawTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1DrawTarget@gfx@mozilla@@UAE@XZ	; mozilla::gfx::DrawTarget::~DrawTarget
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GDrawTarget@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::DrawTarget::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aPermitSubpixelAA$ = 8					; size = 1
?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z PROC ; mozilla::gfx::DrawTarget::SetPermitSubpixelAA, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1150
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1151
	mov	al, BYTE PTR _aPermitSubpixelAA$[ebp]
	and	al, 1
	shl	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+56]
	and	dl, 253					; 000000fdH
	or	dl, al
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], dl
; Line 1152
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPermitSubpixelAA@DrawTarget@gfx@mozilla@@UAEX_N@Z ENDP ; mozilla::gfx::DrawTarget::SetPermitSubpixelAA
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsCurrentGroupOpaque@DrawTarget@gfx@mozilla@@UAE_NXZ
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
?IsCurrentGroupOpaque@DrawTarget@gfx@mozilla@@UAE_NXZ PROC ; mozilla::gfx::DrawTarget::IsCurrentGroupOpaque, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1146
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1147
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ ; mozilla::gfx::DrawTarget::GetFormat
	cmp	al, 1
	jne	SHORT $LN3@IsCurrentG
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@IsCurrentG
$LN3@IsCurrentG:
	mov	DWORD PTR tv67[ebp], 0
$LN4@IsCurrentG:
	mov	al, BYTE PTR tv67[ebp]
; Line 1148
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsCurrentGroupOpaque@DrawTarget@gfx@mozilla@@UAE_NXZ ENDP ; mozilla::gfx::DrawTarget::IsCurrentGroupOpaque
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ PROC ; mozilla::gfx::DrawTarget::SupportsRegionClipping, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1121
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?SupportsRegionClipping@DrawTarget@gfx@mozilla@@UBE_NXZ ENDP ; mozilla::gfx::DrawTarget::SupportsRegionClipping
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ PROC	; mozilla::gfx::DrawTarget::IsTiledDrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1120
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsTiledDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ ENDP	; mozilla::gfx::DrawTarget::IsTiledDrawTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsDualDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsDualDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ PROC	; mozilla::gfx::DrawTarget::IsDualDrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsDualDrawTarget@DrawTarget@gfx@mozilla@@UBE_NXZ ENDP	; mozilla::gfx::DrawTarget::IsDualDrawTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNativeSurface@DrawTarget@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aType$ = 8						; size = 1
?GetNativeSurface@DrawTarget@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z PROC ; mozilla::gfx::DrawTarget::GetNativeSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1117
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNativeSurface@DrawTarget@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ENDP ; mozilla::gfx::DrawTarget::GetNativeSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ PROC ; mozilla::gfx::DrawTarget::GetFormat, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1112
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+57]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFormat@DrawTarget@gfx@mozilla@@QBE?AW4SurfaceFormat@23@XZ ENDP ; mozilla::gfx::DrawTarget::GetFormat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?SetTransform@DrawTarget@gfx@mozilla@@UAEXABVMatrix@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aTransform$ = 8					; size = 4
?SetTransform@DrawTarget@gfx@mozilla@@UAEXABVMatrix@23@@Z PROC ; mozilla::gfx::DrawTarget::SetTransform, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1107
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _aTransform$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+56]
	or	al, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+56], al
	mov	esp, ebp
	pop	ebp
	ret	4
?SetTransform@DrawTarget@gfx@mozilla@@UAEXABVMatrix@23@@Z ENDP ; mozilla::gfx::DrawTarget::SetTransform
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aSize$ = 12						; size = 4
_aFormat$ = 16						; size = 1
_aSigma$ = 20						; size = 4
?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z PROC ; mozilla::gfx::DrawTarget::CreateShadowDrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 1052
	mov	esi, esp
	movzx	eax, BYTE PTR _aFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+132]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1053
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?CreateShadowDrawTarget@DrawTarget@gfx@mozilla@@UBE?AU?$already_AddRefed@VDrawTarget@gfx@mozilla@@@@ABU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@W4SurfaceFormat@23@M@Z ENDP ; mozilla::gfx::DrawTarget::CreateShadowDrawTarget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PopLayer@DrawTarget@gfx@mozilla@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?PopLayer@DrawTarget@gfx@mozilla@@UAEXXZ PROC		; mozilla::gfx::DrawTarget::PopLayer, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 998
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN5@PopLayer:
	xor	eax, eax
	jne	SHORT $LN5@PopLayer
$LN3@PopLayer:
	int	3
	mov	DWORD PTR ds:0, 998			; 000003e6H
	mov	esi, esp
	push	3
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentProcess@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__TerminateProcess@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	call	_MOZ_NoReturn
	xor	ecx, ecx
	jne	SHORT $LN3@PopLayer
	xor	edx, edx
	jne	SHORT $LN5@PopLayer
$LN11@PopLayer:
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PopLayer@DrawTarget@gfx@mozilla@@UAEXXZ ENDP		; mozilla::gfx::DrawTarget::PopLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PushLayer@DrawTarget@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aOpaque$ = 8						; size = 1
_aOpacity$ = 12						; size = 4
_aMask$ = 16						; size = 4
_aMaskTransform$ = 20					; size = 4
_aBounds$ = 24						; size = 4
_aCopyBackground$ = 28					; size = 1
?PushLayer@DrawTarget@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z PROC ; mozilla::gfx::DrawTarget::PushLayer, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 991
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN5@PushLayer:
	xor	eax, eax
	jne	SHORT $LN5@PushLayer
$LN3@PushLayer:
	int	3
	mov	DWORD PTR ds:0, 991			; 000003dfH
	mov	esi, esp
	push	3
	mov	edi, esp
	call	DWORD PTR __imp__GetCurrentProcess@0
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__TerminateProcess@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	call	_MOZ_NoReturn
	xor	ecx, ecx
	jne	SHORT $LN3@PushLayer
	xor	edx, edx
	jne	SHORT $LN5@PushLayer
$LN11@PushLayer:
	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?PushLayer@DrawTarget@gfx@mozilla@@UAEX_NMPAVSourceSurface@23@ABVMatrix@23@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@0@Z ENDP ; mozilla::gfx::DrawTarget::PushLayer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
_TEXT	SEGMENT
tv84 = -40						; size = 4
tv86 = -36						; size = 4
$T2 = -32						; size = 4
_source$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aSourceRect$ = 8					; size = 4
_aDestination$ = 12					; size = 4
?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z PROC ; mozilla::gfx::DrawTarget::CopyRect, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 848
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 849
	mov	esi, esp
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	mov	DWORD PTR tv84[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv84[ebp]
	push	edx
	lea	ecx, DWORD PTR _source$[ebp]
	call	??$?0VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface><mozilla::gfx::SourceSurface>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
; Line 850
	mov	esi, esp
	mov	eax, DWORD PTR _aDestination$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aSourceRect$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _source$[ebp]
	call	??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 851
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _source$[ebp]
	call	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CopyRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN8@CopyRect:
	DD	1
	DD	$LN7@CopyRect
$LN7@CopyRect:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@CopyRect
$LN5@CopyRect:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$already_AddRefed@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::SourceSurface>::~already_AddRefed<mozilla::gfx::SourceSurface>
__unwindfunclet$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z$1:
	lea	ecx, DWORD PTR _source$[ebp]
	jmp	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
__ehhandler$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CopyRect@DrawTarget@gfx@mozilla@@UAEXABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@23@ABU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ENDP ; mozilla::gfx::DrawTarget::CopyRect
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aData$ = 8						; size = 4
?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z PROC	; mozilla::gfx::DrawTarget::ReleaseBits, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 751
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?ReleaseBits@DrawTarget@gfx@mozilla@@UAEXPAE@Z ENDP	; mozilla::gfx::DrawTarget::ReleaseBits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aData$ = 8						; size = 4
_aSize$ = 12						; size = 4
_aStride$ = 16						; size = 4
_aFormat$ = 20						; size = 4
_aOrigin$ = 24						; size = 4
?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z PROC ; mozilla::gfx::DrawTarget::LockBits, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 750
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?LockBits@DrawTarget@gfx@mozilla@@UAE_NPAPAEPAU?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@PAHPAW4SurfaceFormat@23@PAU?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@@Z ENDP ; mozilla::gfx::DrawTarget::LockBits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ PROC	; mozilla::gfx::DrawTarget::IsRecording, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 733
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	0
?IsRecording@DrawTarget@gfx@mozilla@@UBE_NXZ ENDP	; mozilla::gfx::DrawTarget::IsRecording
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ PROC		; mozilla::gfx::DrawTarget::IsValid, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 728
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsValid@DrawTarget@gfx@mozilla@@UBE_NXZ ENDP		; mozilla::gfx::DrawTarget::IsValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1DrawTarget@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1DrawTarget@gfx@mozilla@@UAE@XZ PROC			; mozilla::gfx::DrawTarget::~DrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 726
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1DrawTarget@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawTarget@gfx@mozilla@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UserData@gfx@mozilla@@QAE@XZ		; mozilla::gfx::UserData::~UserData
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1DrawTarget@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>
__ehhandler$??1DrawTarget@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1DrawTarget@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1DrawTarget@gfx@mozilla@@UAE@XZ ENDP			; mozilla::gfx::DrawTarget::~DrawTarget
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0DrawTarget@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0DrawTarget@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::DrawTarget::DrawTarget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 725
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0DrawTarget@gfx@mozilla@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7DrawTarget@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UserData@gfx@mozilla@@QAE@XZ		; mozilla::gfx::UserData::UserData
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0Matrix@gfx@mozilla@@QAE@XZ		; mozilla::gfx::Matrix::Matrix
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+56]
	and	dl, 254					; 000000feH
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], dl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+56]
	and	dl, 253					; 000000fdH
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+56], dl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0DrawTarget@gfx@mozilla@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>
__unwindfunclet$??0DrawTarget@gfx@mozilla@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1UserData@gfx@mozilla@@QAE@XZ		; mozilla::gfx::UserData::~UserData
__ehhandler$??0DrawTarget@gfx@mozilla@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0DrawTarget@gfx@mozilla@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0DrawTarget@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::DrawTarget::DrawTarget
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ PROC ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::RefCounted<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::RefCounted<mozilla::gfx::DrawTarget,1>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ENDP ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::RefCounted<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ PROC ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 180
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::~RefCounted<mozilla::gfx::DrawTarget,1>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefCounted@VDrawTarget@gfx@mozilla@@@mozilla@@QAE@XZ ENDP ; mozilla::RefCounted<mozilla::gfx::DrawTarget>::~RefCounted<mozilla::gfx::DrawTarget>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
tv81 = -28						; size = 4
tv73 = -24						; size = 4
tv67 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_cnt$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::Release, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Release:
; Line 117
	xor	eax, eax
	jne	SHORT $LN3@Release
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	DWORD PTR tv67[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _cnt$[ebp], edx
; Line 128
	cmp	DWORD PTR _cnt$[ebp], 0
	jne	SHORT $LN5@Release
; Line 136
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@Release
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN8@Release
$LN7@Release:
	mov	DWORD PTR tv73[ebp], 0
$LN8@Release:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Release
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN9@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
; Line 138
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@AddRef:
; Line 102
	xor	eax, eax
	jne	SHORT $LN2@AddRef
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::~RefCounted<mozilla::gfx::DrawTarget,1>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@RefCounted:
	xor	eax, eax
	jne	SHORT $LN2@RefCounted
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::~RefCounted<mozilla::gfx::DrawTarget,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::RefCounted<mozilla::gfx::DrawTarget,1>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefCounted@VDrawTarget@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::DrawTarget,1>::RefCounted<mozilla::gfx::DrawTarget,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GSourceSurface@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSourceSurface@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::SourceSurface::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SourceSurface@gfx@mozilla@@UAE@XZ	; mozilla::gfx::SourceSurface::~SourceSurface
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSourceSurface@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::SourceSurface::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0SourceSurface@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0SourceSurface@gfx@mozilla@@QAE@XZ PROC		; mozilla::gfx::SourceSurface::SourceSurface, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SourceSurface@gfx@mozilla@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SourceSurface@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UserData@gfx@mozilla@@QAE@XZ		; mozilla::gfx::UserData::UserData
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SourceSurface@gfx@mozilla@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>
__ehhandler$??0SourceSurface@gfx@mozilla@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SourceSurface@gfx@mozilla@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SourceSurface@gfx@mozilla@@QAE@XZ ENDP		; mozilla::gfx::SourceSurface::SourceSurface
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ PROC ; mozilla::gfx::SourceSurface::GuaranteePersistance, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 374
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?GuaranteePersistance@SourceSurface@gfx@mozilla@@MAEXXZ ENDP ; mozilla::gfx::SourceSurface::GuaranteePersistance
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aType$ = 8						; size = 1
?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z PROC ; mozilla::gfx::SourceSurface::GetNativeSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 355
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 356
	xor	eax, eax
; Line 357
	mov	esp, ebp
	pop	ebp
	ret	4
?GetNativeSurface@SourceSurface@gfx@mozilla@@UAEPAXW4NativeSurfaceType@23@@Z ENDP ; mozilla::gfx::SourceSurface::GetNativeSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ PROC	; mozilla::gfx::SourceSurface::IsValid, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 344
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 1
	mov	esp, ebp
	pop	ebp
	ret	0
?IsValid@SourceSurface@gfx@mozilla@@UBE_NXZ ENDP	; mozilla::gfx::SourceSurface::IsValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1SourceSurface@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SourceSurface@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::SourceSurface::~SourceSurface, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 333
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SourceSurface@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SourceSurface@gfx@mozilla@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UserData@gfx@mozilla@@QAE@XZ		; mozilla::gfx::UserData::~UserData
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SourceSurface@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>
__ehhandler$??1SourceSurface@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SourceSurface@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SourceSurface@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::SourceSurface::~SourceSurface
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ PROC ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::AtomicRefCounted<mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::RefCounted<mozilla::gfx::SourceSurface,0>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ENDP ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::AtomicRefCounted<mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ PROC ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 201
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::~RefCounted<mozilla::gfx::SourceSurface,0>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$AtomicRefCounted@VSourceSurface@gfx@mozilla@@@external@mozilla@@QAE@XZ ENDP ; mozilla::external::AtomicRefCounted<mozilla::gfx::SourceSurface>::~AtomicRefCounted<mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
tv85 = -24						; size = 4
tv77 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_cnt$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::Release, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Release:
; Line 117
	xor	eax, eax
	jne	SHORT $LN3@Release
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator--
	mov	DWORD PTR _cnt$[ebp], eax
; Line 128
	cmp	DWORD PTR _cnt$[ebp], 0
	jne	SHORT $LN5@Release
; Line 136
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@Release
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 4
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN8@Release
$LN7@Release:
	mov	DWORD PTR tv77[ebp], 0
$LN8@Release:
	mov	edx, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Release
	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN5@Release
$LN9@Release:
	mov	DWORD PTR tv85[ebp], 0
$LN5@Release:
; Line 138
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@AddRef:
; Line 102
	xor	eax, eax
	jne	SHORT $LN2@AddRef
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator++
; Line 112
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::~RefCounted<mozilla::gfx::SourceSurface,0>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@RefCounted:
	xor	eax, eax
	jne	SHORT $LN2@RefCounted
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::~RefCounted<mozilla::gfx::SourceSurface,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::RefCounted<mozilla::gfx::SourceSurface,0>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Atomic@I$01X@mozilla@@QAE@I@Z	; mozilla::Atomic<unsigned int,2,void>::Atomic<unsigned int,2,void>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::RefCounted<mozilla::gfx::SourceSurface,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GSurfacePattern@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GSurfacePattern@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::SurfacePattern::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1SurfacePattern@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GSurfacePattern@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::SurfacePattern::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1SurfacePattern@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1SurfacePattern@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::SurfacePattern::~SurfacePattern, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1SurfacePattern@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Pattern@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Pattern::~Pattern
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1SurfacePattern@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Pattern@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Pattern::~Pattern
__ehhandler$??1SurfacePattern@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1SurfacePattern@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1SurfacePattern@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::SurfacePattern::~SurfacePattern
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ PROC ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\rect.h
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$BaseRect@HU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@U?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntMarginTyped@UUnknownUnits@gfx@mozilla@@@23@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@QAE@XZ ENDP ; mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>::IntRectTyped<mozilla::gfx::UnknownUnits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$BaseRect@HU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@U?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntMarginTyped@UUnknownUnits@gfx@mozilla@@@23@@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$BaseRect@HU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@U?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntMarginTyped@UUnknownUnits@gfx@mozilla@@@23@@gfx@mozilla@@QAE@XZ PROC ; mozilla::gfx::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\baserect.h
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$BaseRect@HU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@gfx@mozilla@@U?$IntPointTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntSizeTyped@UUnknownUnits@gfx@mozilla@@@23@U?$IntMarginTyped@UUnknownUnits@gfx@mozilla@@@23@@gfx@mozilla@@QAE@XZ ENDP ; mozilla::gfx::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >::BaseRect<int,mozilla::gfx::IntRectTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntPointTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntSizeTyped<mozilla::gfx::UnknownUnits>,mozilla::gfx::IntMarginTyped<mozilla::gfx::UnknownUnits> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VSourceSurface@gfx@mozilla@@$0A@@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::SourceSurface,0>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VSourceSurface@gfx@mozilla@@@@CAXPAVSourceSurface@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::SourceSurface>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::SourceSurface>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::SourceSurface>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::SourceSurface>::operator mozilla::gfx::SourceSurface *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::SourceSurface>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VSourceSurface@gfx@mozilla@@@@QBEPAVSourceSurface@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::SourceSurface>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@PAVSourceSurface@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@PAVSourceSurface@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@PAVSourceSurface@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VSourceSurface@gfx@mozilla@@@?$RefPtr@VSourceSurface@gfx@mozilla@@@@SAXPAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::AddRefTraits<mozilla::gfx::SourceSurface>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::SourceSurface>::~RefPtr<mozilla::gfx::SourceSurface>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetType@SurfacePattern@gfx@mozilla@@UBE?AW4PatternType@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@SurfacePattern@gfx@mozilla@@UBE?AW4PatternType@23@XZ PROC ; mozilla::gfx::SurfacePattern::GetType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 302
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	al, 1
; Line 304
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@SurfacePattern@gfx@mozilla@@UBE?AW4PatternType@23@XZ ENDP ; mozilla::gfx::SurfacePattern::GetType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aSourceSurface$ = 8					; size = 4
_aExtendMode$ = 12					; size = 1
_aMatrix$ = 16						; size = 4
_aFilter$ = 20						; size = 1
_aSamplingRect$ = 24					; size = 4
??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z PROC ; mozilla::gfx::SurfacePattern::SurfacePattern, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 299
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Pattern@gfx@mozilla@@IAE@XZ		; mozilla::gfx::Pattern::Pattern
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7SurfacePattern@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _aSourceSurface$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$RefPtr@VSourceSurface@gfx@mozilla@@@@QAE@PAVSourceSurface@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::SourceSurface>::RefPtr<mozilla::gfx::SourceSurface>
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _aExtendMode$[ebp]
	mov	BYTE PTR [edx+8], al
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR _aFilter$[ebp]
	mov	BYTE PTR [ecx+9], dl
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _aMatrix$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	ecx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 36					; 00000024H
	mov	eax, DWORD PTR _aSamplingRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Pattern@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Pattern::~Pattern
__ehhandler$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0SurfacePattern@gfx@mozilla@@QAE@PAVSourceSurface@12@W4ExtendMode@12@ABVMatrix@12@W4Filter@12@ABU?$IntRectTyped@UUnknownUnits@gfx@mozilla@@@12@@Z ENDP ; mozilla::gfx::SurfacePattern::SurfacePattern
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GPattern@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPattern@gfx@mozilla@@UAEPAXI@Z PROC			; mozilla::gfx::Pattern::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Pattern@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Pattern::~Pattern
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPattern@gfx@mozilla@@UAEPAXI@Z ENDP			; mozilla::gfx::Pattern::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0Pattern@gfx@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Pattern@gfx@mozilla@@IAE@XZ PROC			; mozilla::gfx::Pattern::Pattern, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 188
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Pattern@gfx@mozilla@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Pattern@gfx@mozilla@@IAE@XZ ENDP			; mozilla::gfx::Pattern::Pattern
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1Pattern@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Pattern@gfx@mozilla@@UAE@XZ PROC			; mozilla::gfx::Pattern::~Pattern, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 183
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Pattern@gfx@mozilla@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1Pattern@gfx@mozilla@@UAE@XZ ENDP			; mozilla::gfx::Pattern::~Pattern
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$Atomic@I$01X@mozilla@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aInit$ = 8						; size = 4
??0?$Atomic@I$01X@mozilla@@QAE@I@Z PROC			; mozilla::Atomic<unsigned int,2,void>::Atomic<unsigned int,2,void>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 658
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _aInit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$AtomicBaseIncDec@I$01@detail@mozilla@@QAE@I@Z ; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::AtomicBaseIncDec<unsigned int,2>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$Atomic@I$01X@mozilla@@QAE@I@Z ENDP			; mozilla::Atomic<unsigned int,2,void>::Atomic<unsigned int,2,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??F?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ PROC	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator--, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 610
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?dec@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::dec
	add	esp, 4
	sub	eax, 1
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ENDP	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ PROC	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator++, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 609
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?inc@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::inc
	add	esp, 4
	add	eax, 1
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$AtomicBaseIncDec@I$01@detail@mozilla@@QAEIXZ ENDP	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$AtomicBaseIncDec@I$01@detail@mozilla@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aInit$ = 8						; size = 4
??0?$AtomicBaseIncDec@I$01@detail@mozilla@@QAE@I@Z PROC	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::AtomicBaseIncDec<unsigned int,2>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _aInit$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$AtomicBase@I$01@detail@mozilla@@QAE@I@Z ; mozilla::detail::AtomicBase<unsigned int,2>::AtomicBase<unsigned int,2>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$AtomicBaseIncDec@I$01@detail@mozilla@@QAE@I@Z ENDP	; mozilla::detail::AtomicBaseIncDec<unsigned int,2>::AtomicBaseIncDec<unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$AtomicBase@I$01@detail@mozilla@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aInit$ = 8						; size = 4
??0?$AtomicBase@I$01@detail@mozilla@@QAE@I@Z PROC	; mozilla::detail::AtomicBase<unsigned int,2>::AtomicBase<unsigned int,2>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _aInit$[ebp]
	push	eax
	call	?convert@?$ToStorageTypeArgument@I@detail@mozilla@@SAII@Z ; mozilla::detail::ToStorageTypeArgument<unsigned int>::convert
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$atomic@I@std@@QAE@I@Z		; std::atomic<unsigned int>::atomic<unsigned int>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$AtomicBase@I$01@detail@mozilla@@QAE@I@Z ENDP	; mozilla::detail::AtomicBase<unsigned int,2>::AtomicBase<unsigned int,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?dec@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?dec@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z PROC ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::dec, COMDAT
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 290
	push	ebp
	mov	ebp, esp
; Line 291
	push	1
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?sub@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::sub
	add	esp, 8
; Line 292
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?dec@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ENDP ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::dec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?inc@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?inc@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z PROC ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::inc, COMDAT
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 285
	push	ebp
	mov	ebp, esp
; Line 286
	push	1
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?add@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::add
	add	esp, 8
; Line 287
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?inc@?$IntrinsicIncDec@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@@Z ENDP ; mozilla::detail::IntrinsicIncDec<unsigned int,2>::inc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?sub@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
_aVal$ = 12						; size = 4
?sub@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z PROC ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::sub, COMDAT
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 258
	push	ebp
	mov	ebp, esp
; Line 259
	push	5
	mov	eax, DWORD PTR _aVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aPtr$[ebp]
	call	?fetch_sub@atomic_uint@std@@QAEIIW4memory_order@2@@Z ; std::atomic_uint::fetch_sub
; Line 260
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?sub@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ENDP ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::sub
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?add@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
_aVal$ = 12						; size = 4
?add@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z PROC ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::add, COMDAT
; File d:\mozilla\gfx\2d\mozilla\atomics.h
; Line 253
	push	ebp
	mov	ebp, esp
; Line 254
	push	5
	mov	eax, DWORD PTR _aVal$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aPtr$[ebp]
	call	?fetch_add@atomic_uint@std@@QAEIIW4memory_order@2@@Z ; std::atomic_uint::fetch_add
; Line 255
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?add@?$IntrinsicAddSub@I$01@detail@mozilla@@SAIAAU?$atomic@I@std@@I@Z ENDP ; mozilla::detail::IntrinsicAddSub<unsigned int,2>::add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?atomic_fetch_sub_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z
_TEXT	SEGMENT
__Atom$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?atomic_fetch_sub_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z PROC ; std::atomic_fetch_sub_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 1114
	push	ebp
	mov	ebp, esp
; Line 1115
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Atom$[ebp]
	push	edx
	call	?_Atomic_fetch_sub_4@std@@YAKPCKKW4memory_order@1@@Z ; std::_Atomic_fetch_sub_4
	add	esp, 12					; 0000000cH
; Line 1116
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?atomic_fetch_sub_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ENDP ; std::atomic_fetch_sub_explicit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?atomic_fetch_add_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z
_TEXT	SEGMENT
__Atom$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?atomic_fetch_add_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z PROC ; std::atomic_fetch_add_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 1088
	push	ebp
	mov	ebp, esp
; Line 1089
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Atom$[ebp]
	push	edx
	call	?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z ; std::_Atomic_fetch_add_4
	add	esp, 12					; 0000000cH
; Line 1090
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?atomic_fetch_add_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ENDP ; std::atomic_fetch_add_explicit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?atomic_store@std@@YAXPAUatomic_uint@1@I@Z
_TEXT	SEGMENT
__Atom$ = 8						; size = 4
__Value$ = 12						; size = 4
?atomic_store@std@@YAXPAUatomic_uint@1@I@Z PROC		; std::atomic_store, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 557
	push	ebp
	mov	ebp, esp
; Line 558
	push	5
	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Atom$[ebp]
	push	ecx
	call	?atomic_store_explicit@std@@YAXPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_store_explicit
	add	esp, 12					; 0000000cH
; Line 559
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?atomic_store@std@@YAXPAUatomic_uint@1@I@Z ENDP		; std::atomic_store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?atomic_store_explicit@std@@YAXPAUatomic_uint@1@IW4memory_order@1@@Z
_TEXT	SEGMENT
__Atom$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?atomic_store_explicit@std@@YAXPAUatomic_uint@1@IW4memory_order@1@@Z PROC ; std::atomic_store_explicit, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 544
	push	ebp
	mov	ebp, esp
; Line 546
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Atom$[ebp]
	push	edx
	call	?_Atomic_store_4@std@@YAXPCKKW4memory_order@1@@Z ; std::_Atomic_store_4
	add	esp, 12					; 0000000cH
; Line 547
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?atomic_store_explicit@std@@YAXPAUatomic_uint@1@IW4memory_order@1@@Z ENDP ; std::atomic_store_explicit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$atomic@I@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0?$atomic@I@std@@QAE@I@Z PROC				; std::atomic<unsigned int>::atomic<unsigned int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 191
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 193
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4atomic_uint@std@@QAEII@Z		; std::atomic_uint::operator=
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$atomic@I@std@@QAE@I@Z ENDP				; std::atomic<unsigned int>::atomic<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?fetch_sub@atomic_uint@std@@QAEIIW4memory_order@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Value$ = 8						; size = 4
__Order$ = 12						; size = 4
?fetch_sub@atomic_uint@std@@QAEIIW4memory_order@2@@Z PROC ; std::atomic_uint::fetch_sub, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 1319
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1320
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?atomic_fetch_sub_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_fetch_sub_explicit
	add	esp, 12					; 0000000cH
; Line 1321
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?fetch_sub@atomic_uint@std@@QAEIIW4memory_order@2@@Z ENDP ; std::atomic_uint::fetch_sub
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?fetch_add@atomic_uint@std@@QAEIIW4memory_order@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Value$ = 8						; size = 4
__Order$ = 12						; size = 4
?fetch_add@atomic_uint@std@@QAEIIW4memory_order@2@@Z PROC ; std::atomic_uint::fetch_add, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 1307
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1308
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	?atomic_fetch_add_explicit@std@@YAIPAUatomic_uint@1@IW4memory_order@1@@Z ; std::atomic_fetch_add_explicit
	add	esp, 12					; 0000000cH
; Line 1309
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?fetch_add@atomic_uint@std@@QAEIIW4memory_order@2@@Z ENDP ; std::atomic_uint::fetch_add
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4atomic_uint@std@@QAEII@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Value$ = 8						; size = 4
??4atomic_uint@std@@QAEII@Z PROC			; std::atomic_uint::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xxatomic
; Line 755
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 756
	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?atomic_store@std@@YAXPAUatomic_uint@1@I@Z ; std::atomic_store
	add	esp, 8
; Line 757
	mov	eax, DWORD PTR __Value$[ebp]
; Line 758
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4atomic_uint@std@@QAEII@Z ENDP			; std::atomic_uint::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Fetch_add_release_4@std@@YAKPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Fetch_add_release_4@std@@YAKPCKK@Z PROC		; std::_Fetch_add_release_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1662
	push	ebp
	mov	ebp, esp
; Line 1665
	mov	eax, DWORD PTR __Value$[ebp]
	mov	ecx, DWORD PTR __Tgt$[ebp]
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 1666
	pop	ebp
	ret	0
?_Fetch_add_release_4@std@@YAKPCKK@Z ENDP		; std::_Fetch_add_release_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Fetch_add_acquire_4@std@@YAKPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Fetch_add_acquire_4@std@@YAKPCKK@Z PROC		; std::_Fetch_add_acquire_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1655
	push	ebp
	mov	ebp, esp
; Line 1658
	mov	eax, DWORD PTR __Value$[ebp]
	mov	ecx, DWORD PTR __Tgt$[ebp]
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 1659
	pop	ebp
	ret	0
?_Fetch_add_acquire_4@std@@YAKPCKK@Z ENDP		; std::_Fetch_add_acquire_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Fetch_add_relaxed_4@std@@YAKPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Fetch_add_relaxed_4@std@@YAKPCKK@Z PROC		; std::_Fetch_add_relaxed_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1648
	push	ebp
	mov	ebp, esp
; Line 1651
	mov	eax, DWORD PTR __Value$[ebp]
	mov	ecx, DWORD PTR __Tgt$[ebp]
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 1652
	pop	ebp
	ret	0
?_Fetch_add_relaxed_4@std@@YAKPCKK@Z ENDP		; std::_Fetch_add_relaxed_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Fetch_add_seq_cst_4@std@@YAKPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Fetch_add_seq_cst_4@std@@YAKPCKK@Z PROC		; std::_Fetch_add_seq_cst_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1641
	push	ebp
	mov	ebp, esp
; Line 1644
	mov	eax, DWORD PTR __Value$[ebp]
	mov	ecx, DWORD PTR __Tgt$[ebp]
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 1645
	pop	ebp
	ret	0
?_Fetch_add_seq_cst_4@std@@YAKPCKK@Z ENDP		; std::_Fetch_add_seq_cst_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Atomic_store_4@std@@YAXPCKKW4memory_order@1@@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?_Atomic_store_4@std@@YAXPCKKW4memory_order@1@@Z PROC	; std::_Atomic_store_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1383
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1384
	mov	eax, DWORD PTR __Order$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN4@Atomic_sto
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN3@Atomic_sto
	cmp	DWORD PTR tv64[ebp], 5
	je	SHORT $LN2@Atomic_sto
	jmp	SHORT $LN1@Atomic_sto
$LN4@Atomic_sto:
; Line 1387
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tgt$[ebp]
	push	edx
	call	?_Store_relaxed_4@std@@YAXPCKK@Z	; std::_Store_relaxed_4
	add	esp, 8
; Line 1388
	jmp	$LN7@Atomic_sto
$LN3@Atomic_sto:
; Line 1391
	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Tgt$[ebp]
	push	ecx
	call	?_Store_release_4@std@@YAXPCKK@Z	; std::_Store_release_4
	add	esp, 8
; Line 1392
	jmp	$LN7@Atomic_sto
$LN2@Atomic_sto:
; Line 1395
	mov	edx, DWORD PTR __Value$[ebp]
	push	edx
	mov	eax, DWORD PTR __Tgt$[ebp]
	push	eax
	call	?_Store_seq_cst_4@std@@YAXPCKK@Z	; std::_Store_seq_cst_4
	add	esp, 8
; Line 1396
	jmp	$LN7@Atomic_sto
$LN1@Atomic_sto:
; Line 1399
	mov	esi, esp
	push	1399					; 00000577H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CK@BEGEBJJG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	ecx, ecx
	je	SHORT $LN9@Atomic_sto
	xor	edx, edx
	jne	SHORT $LN10@Atomic_sto
$LN9@Atomic_sto:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1399					; 00000577H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN10@Atomic_sto
	int	3
$LN10@Atomic_sto:
	mov	esi, esp
	push	0
	push	1399					; 00000577H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CK@BEBCCGEN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAs?$AAt?$AAo?$AAr?$AAe?$AA_?$AA4?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@Atomic_sto:
; Line 1402
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Atomic_store_4@std@@YAXPCKKW4memory_order@1@@Z ENDP	; std::_Atomic_store_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Store_seq_cst_4@std@@YAXPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Store_seq_cst_4@std@@YAXPCKK@Z PROC			; std::_Store_seq_cst_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1368
	push	ebp
	mov	ebp, esp
; Line 1377
	mov	eax, DWORD PTR __Value$[ebp]
	mov	ecx, DWORD PTR __Tgt$[ebp]
	xchg	DWORD PTR [ecx], eax
; Line 1379
	pop	ebp
	ret	0
?_Store_seq_cst_4@std@@YAXPCKK@Z ENDP			; std::_Store_seq_cst_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Store_release_4@std@@YAXPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Store_release_4@std@@YAXPCKK@Z PROC			; std::_Store_release_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1356
	push	ebp
	mov	ebp, esp
; Line 1363
	mov	eax, DWORD PTR __Tgt$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1365
	pop	ebp
	ret	0
?_Store_release_4@std@@YAXPCKK@Z ENDP			; std::_Store_release_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Store_relaxed_4@std@@YAXPCKK@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
?_Store_relaxed_4@std@@YAXPCKK@Z PROC			; std::_Store_relaxed_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1346
	push	ebp
	mov	ebp, esp
; Line 1351
	mov	eax, DWORD PTR __Tgt$[ebp]
	mov	ecx, DWORD PTR __Value$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1353
	pop	ebp
	ret	0
?_Store_relaxed_4@std@@YAXPCKK@Z ENDP			; std::_Store_relaxed_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1UserData@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1UserData@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::UserData::~UserData, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\userdata.h
; Line 109
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 110
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Destroy@UserData@gfx@mozilla@@QAEXXZ	; mozilla::gfx::UserData::Destroy
; Line 111
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1UserData@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::UserData::~UserData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Destroy@UserData@gfx@mozilla@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -8						; size = 4
_this$ = -4						; size = 4
?Destroy@UserData@gfx@mozilla@@QAEXXZ PROC		; mozilla::gfx::UserData::Destroy, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\userdata.h
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 98
	mov	DWORD PTR _i$1[ebp], 0
	jmp	SHORT $LN4@Destroy
$LN3@Destroy:
	mov	eax, DWORD PTR _i$1[ebp]
	add	eax, 1
	mov	DWORD PTR _i$1[ebp], eax
$LN4@Destroy:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _i$1[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN2@Destroy
; Line 99
	imul	eax, DWORD PTR _i$1[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	cmp	DWORD PTR [edx+eax+8], 0
	je	SHORT $LN1@Destroy
; Line 100
	imul	eax, DWORD PTR _i$1[ebp], 12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	imul	ecx, DWORD PTR _i$1[ebp], 12
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [eax+ecx+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Destroy:
; Line 102
	jmp	SHORT $LN3@Destroy
$LN2@Destroy:
; Line 103
	mov	esi, esp
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__free
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 105
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 106
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Destroy@UserData@gfx@mozilla@@QAEXXZ ENDP		; mozilla::gfx::UserData::Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0UserData@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0UserData@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::UserData::UserData, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\userdata.h
; Line 25
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0UserData@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::UserData::UserData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0Matrix@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0Matrix@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::Matrix::Matrix, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\matrix.h
; Line 34
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+4], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [eax+12], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+16], xmm0
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [edx+20], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0Matrix@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::Matrix::Matrix
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _MOZ_NoReturn
_TEXT	SEGMENT
_MOZ_NoReturn PROC					; COMDAT
; File d:\mozilla\gfx\2d\mozilla\assertions.h
; Line 212
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
_MOZ_NoReturn ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 608
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 564
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2296
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2291
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2232
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ
_TEXT	SEGMENT
tv70 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1792
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1793
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv70[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv70[ebp]
; Line 1794
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1738
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1739
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 1740
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 990
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 991
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 992
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 935
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 936
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jae	SHORT $LN2@Assign_rv
; Line 938
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 939
	jmp	SHORT $LN1@Assign_rv
$LN2@Assign_rv:
; Line 941
	mov	edx, DWORD PTR __Right$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 942
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN1@Assign_rv:
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 945
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
; Line 946
	push	0
	push	0
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 947
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 887
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Line 888
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 889
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	call	??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::forward<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Assign_rv
; Line 890
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 766
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 767
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 768
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 769
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 738
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 739
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 740
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Atomic_fetch_sub_4@std@@YAKPCKKW4memory_order@1@@Z
_TEXT	SEGMENT
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?_Atomic_fetch_sub_4@std@@YAKPCKKW4memory_order@1@@Z PROC ; std::_Atomic_fetch_sub_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1695
	push	ebp
	mov	ebp, esp
; Line 1696
	mov	eax, DWORD PTR __Order$[ebp]
	push	eax
	xor	ecx, ecx
	sub	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tgt$[ebp]
	push	edx
	call	?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z ; std::_Atomic_fetch_add_4
	add	esp, 12					; 0000000cH
; Line 1697
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Atomic_fetch_sub_4@std@@YAKPCKKW4memory_order@1@@Z ENDP ; std::_Atomic_fetch_sub_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z
_TEXT	SEGMENT
tv64 = -4						; size = 4
__Tgt$ = 8						; size = 4
__Value$ = 12						; size = 4
__Order$ = 16						; size = 4
?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z PROC ; std::_Atomic_fetch_add_4, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xatomic.h
; Line 1670
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 1671
	mov	eax, DWORD PTR __Order$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 5
	ja	SHORT $LN1@Atomic_fet
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@Atomic_fet[ecx*4]
$LN5@Atomic_fet:
; Line 1674
	mov	edx, DWORD PTR __Value$[ebp]
	push	edx
	mov	eax, DWORD PTR __Tgt$[ebp]
	push	eax
	call	?_Fetch_add_relaxed_4@std@@YAKPCKK@Z	; std::_Fetch_add_relaxed_4
	add	esp, 8
	jmp	$LN8@Atomic_fet
$LN4@Atomic_fet:
; Line 1678
	mov	ecx, DWORD PTR __Value$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Tgt$[ebp]
	push	edx
	call	?_Fetch_add_acquire_4@std@@YAKPCKK@Z	; std::_Fetch_add_acquire_4
	add	esp, 8
	jmp	$LN8@Atomic_fet
$LN3@Atomic_fet:
; Line 1681
	mov	eax, DWORD PTR __Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Tgt$[ebp]
	push	ecx
	call	?_Fetch_add_release_4@std@@YAKPCKK@Z	; std::_Fetch_add_release_4
	add	esp, 8
	jmp	$LN8@Atomic_fet
$LN2@Atomic_fet:
; Line 1685
	mov	edx, DWORD PTR __Value$[ebp]
	push	edx
	mov	eax, DWORD PTR __Tgt$[ebp]
	push	eax
	call	?_Fetch_add_seq_cst_4@std@@YAKPCKK@Z	; std::_Fetch_add_seq_cst_4
	add	esp, 8
	jmp	$LN8@Atomic_fet
$LN1@Atomic_fet:
; Line 1688
	mov	esi, esp
	push	1688					; 00000698H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CK@BEGEBJJG@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy?$AA_?$AAo?$AAr?$AAd?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	ecx, ecx
	je	SHORT $LN10@Atomic_fet
	xor	edx, edx
	jne	SHORT $LN11@Atomic_fet
$LN10@Atomic_fet:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1688					; 00000698H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN11@Atomic_fet
	int	3
$LN11@Atomic_fet:
	mov	esi, esp
	push	0
	push	1688					; 00000698H
	push	OFFSET ??_C@_1JC@LCKPGPAG@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@FMPHIJPC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAt?$AAo?$AAm?$AAi?$AAc?$AA_?$AAf?$AAe?$AAt?$AAc?$AAh?$AA_?$AAa?$AAd?$AAd?$AA_?$AA4?$AA?$AA@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1689
	xor	eax, eax
$LN8@Atomic_fet:
; Line 1691
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@Atomic_fet:
	DD	$LN5@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN4@Atomic_fet
	DD	$LN3@Atomic_fet
	DD	$LN2@Atomic_fet
	DD	$LN2@Atomic_fet
?_Atomic_fetch_add_4@std@@YAKPCKKW4memory_order@1@@Z ENDP ; std::_Atomic_fetch_add_4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eof@?$char_traits@D@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$char_traits@D@std@@SAHXZ PROC			; std::char_traits<char>::eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 604
	push	ebp
	mov	ebp, esp
; Line 605
	or	eax, -1
; Line 606
	pop	ebp
	ret	0
?eof@?$char_traits@D@std@@SAHXZ ENDP			; std::char_traits<char>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?not_eof@?$char_traits@D@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
tv69 = -4						; size = 4
__Meta$ = 8						; size = 4
?not_eof@?$char_traits@D@std@@SAHABH@Z PROC		; std::char_traits<char>::not_eof, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 599
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 600
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$char_traits@D@std@@SAHXZ		; std::char_traits<char>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[ebp], 0
$LN4@not_eof:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 601
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?not_eof@?$char_traits@D@std@@SAHABH@Z ENDP		; std::char_traits<char>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z PROC	; std::char_traits<char>::eq_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 593
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 594
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]
; Line 595
	mov	esp, ebp
	pop	ebp
	ret	0
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z ENDP	; std::char_traits<char>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_int_type@?$char_traits@D@std@@SAHABD@Z
_TEXT	SEGMENT
__Ch$ = 8						; size = 4
?to_int_type@?$char_traits@D@std@@SAHABD@Z PROC		; std::char_traits<char>::to_int_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 587
	push	ebp
	mov	ebp, esp
; Line 588
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 589
	pop	ebp
	ret	0
?to_int_type@?$char_traits@D@std@@SAHABD@Z ENDP		; std::char_traits<char>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?to_char_type@?$char_traits@D@std@@SADABH@Z
_TEXT	SEGMENT
__Meta$ = 8						; size = 4
?to_char_type@?$char_traits@D@std@@SADABH@Z PROC	; std::char_traits<char>::to_char_type, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 581
	push	ebp
	mov	ebp, esp
; Line 582
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 583
	pop	ebp
	ret	0
?to_char_type@?$char_traits@D@std@@SADABH@Z ENDP	; std::char_traits<char>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?eq@?$char_traits@D@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$char_traits@D@std@@SA_NABD0@Z PROC		; std::char_traits<char>::eq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 569
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 570
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq:
	mov	al, BYTE PTR tv67[ebp]
; Line 571
	mov	esp, ebp
	pop	ebp
	ret	0
?eq@?$char_traits@D@std@@SA_NABD0@Z ENDP		; std::char_traits<char>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
	push	esi
; Line 557
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

	TITLE	D:\mozilla\gfx\2d\PathRecording.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_sPointCount DD	01H
	DD	01H
	DD	03H
	DD	02H
	DD	00H
	DD	00H
$SG4890	DB	'Assertion failure: %s, at %s:%d', 0aH, 00H
	ORG $+3
$SG4896	DB	'Hit MOZ_CRASH(%s) at %s:%d', 0aH, 00H
CONST	ENDS
PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
PUBLIC	_hypot
PUBLIC	?_Hash_seq@std@@YAIPBEI@Z			; std::_Hash_seq
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	??3@YAXPAX0@Z					; operator delete
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QAEXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ	; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	?generic_category@std@@YAABVerror_category@1@XZ	; std::generic_category
PUBLIC	?system_category@std@@YAABVerror_category@1@XZ	; std::system_category
PUBLIC	??0error_category@std@@QAE@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UAE@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QBE_NABV01@@Z		; std::error_category::operator==
PUBLIC	??_Gerror_category@std@@UAEPAXI@Z		; std::error_category::`scalar deleting destructor'
PUBLIC	?value@error_code@std@@QBEHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
PUBLIC	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QBEHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8error_condition@std@@QBE_NABV01@@Z		; std::error_condition::operator==
PUBLIC	??0_Generic_error_category@std@@QAE@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UBEPBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UAE@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UAEPAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??0_Iostream_error_category@std@@QAE@XZ		; std::_Iostream_error_category::_Iostream_error_category
PUBLIC	?name@_Iostream_error_category@std@@UBEPBDXZ	; std::_Iostream_error_category::name
PUBLIC	?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Iostream_error_category::message
PUBLIC	??1_Iostream_error_category@std@@UAE@XZ		; std::_Iostream_error_category::~_Iostream_error_category
PUBLIC	??_G_Iostream_error_category@std@@UAEPAXI@Z	; std::_Iostream_error_category::`scalar deleting destructor'
PUBLIC	??0_System_error_category@std@@QAE@XZ		; std::_System_error_category::_System_error_category
PUBLIC	?name@_System_error_category@std@@UBEPBDXZ	; std::_System_error_category::name
PUBLIC	?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_System_error_category::message
PUBLIC	?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ; std::_System_error_category::default_error_condition
PUBLIC	??1_System_error_category@std@@UAE@XZ		; std::_System_error_category::~_System_error_category
PUBLIC	??_G_System_error_category@std@@UAEPAXI@Z	; std::_System_error_category::`scalar deleting destructor'
PUBLIC	??0?$BasePoint@MU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@U?$CoordTyped@UUnknownUnits@gfx@mozilla@@M@23@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >
PUBLIC	??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
PUBLIC	??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z ; mozilla::gfx::Matrix::operator*
PUBLIC	??0?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::RefCounted<mozilla::gfx::PathSink,1>
PUBLIC	??1?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::~RefCounted<mozilla::gfx::PathSink,1>
PUBLIC	?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::AddRef
PUBLIC	?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
PUBLIC	??1?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::PathSink>::~RefCounted<mozilla::gfx::PathSink>
PUBLIC	??0?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::PathSink>::RefCounted<mozilla::gfx::PathSink>
PUBLIC	??1PathSink@gfx@mozilla@@UAE@XZ			; mozilla::gfx::PathSink::~PathSink
PUBLIC	??0PathSink@gfx@mozilla@@QAE@XZ			; mozilla::gfx::PathSink::PathSink
PUBLIC	??_GPathSink@gfx@mozilla@@UAEPAXI@Z		; mozilla::gfx::PathSink::`scalar deleting destructor'
PUBLIC	?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::AddRef
PUBLIC	?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::Release
PUBLIC	??0PathBuilder@gfx@mozilla@@QAE@XZ		; mozilla::gfx::PathBuilder::PathBuilder
PUBLIC	??1PathBuilder@gfx@mozilla@@UAE@XZ		; mozilla::gfx::PathBuilder::~PathBuilder
PUBLIC	??_GPathBuilder@gfx@mozilla@@UAEPAXI@Z		; mozilla::gfx::PathBuilder::`scalar deleting destructor'
PUBLIC	??0PathOp@gfx@mozilla@@QAE@XZ			; mozilla::gfx::PathOp::PathOp
PUBLIC	??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z ; mozilla::gfx::PathBuilderRecording::PathBuilderRecording
PUBLIC	?MoveTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ; mozilla::gfx::PathBuilderRecording::MoveTo
PUBLIC	?LineTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ; mozilla::gfx::PathBuilderRecording::LineTo
PUBLIC	?BezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@00@Z ; mozilla::gfx::PathBuilderRecording::BezierTo
PUBLIC	?QuadraticBezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0@Z ; mozilla::gfx::PathBuilderRecording::QuadraticBezierTo
PUBLIC	?Close@PathBuilderRecording@gfx@mozilla@@UAEXXZ	; mozilla::gfx::PathBuilderRecording::Close
PUBLIC	?Arc@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MMM_N@Z ; mozilla::gfx::PathBuilderRecording::Arc
PUBLIC	?CurrentPoint@PathBuilderRecording@gfx@mozilla@@UBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@XZ ; mozilla::gfx::PathBuilderRecording::CurrentPoint
PUBLIC	?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ ; mozilla::gfx::PathBuilderRecording::Finish
PUBLIC	?GetBackendType@PathBuilderRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ ; mozilla::gfx::PathBuilderRecording::GetBackendType
PUBLIC	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
PUBLIC	??0?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@PAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder>
PUBLIC	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
PUBLIC	??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator mozilla::gfx::PathBuilder *
PUBLIC	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
PUBLIC	?select_on_container_copy_construction@?$allocator@UPathOp@gfx@mozilla@@@std@@QBE?AV12@XZ ; std::allocator<mozilla::gfx::PathOp>::select_on_container_copy_construction
PUBLIC	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
PUBLIC	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
PUBLIC	?deallocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::PathOp>::deallocate
PUBLIC	?allocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::PathOp>::allocate
PUBLIC	?construct@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU345@@Z ; std::allocator<mozilla::gfx::PathOp>::construct
PUBLIC	?max_size@?$allocator@UPathOp@gfx@mozilla@@@std@@QBEIXZ ; std::allocator<mozilla::gfx::PathOp>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAIABV?$allocator@UPathOp@gfx@mozilla@@@2@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SA?AV?$allocator@UPathOp@gfx@mozilla@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::max_size
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::~_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Change_alloc
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
PUBLIC	??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::operator=
PUBLIC	?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::capacity
PUBLIC	?_Unused_capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Unused_capacity
PUBLIC	?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::begin
PUBLIC	?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::end
PUBLIC	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
PUBLIC	?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size
PUBLIC	?empty@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE_NXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::empty
PUBLIC	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
PUBLIC	?clear@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::clear
PUBLIC	?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Buy
PUBLIC	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
PUBLIC	?_Grow_to@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEII@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Grow_to
PUBLIC	?_Inside@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBE_NPBUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Inside
PUBLIC	?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reallocate
PUBLIC	?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reserve
PUBLIC	?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
PUBLIC	?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Orphan_range
PUBLIC	??1PathBuilderRecording@gfx@mozilla@@UAE@XZ	; mozilla::gfx::PathBuilderRecording::~PathBuilderRecording
PUBLIC	??_GPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::PathBuilderRecording::`scalar deleting destructor'
PUBLIC	??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z ; mozilla::gfx::PathRecording::PathRecording
PUBLIC	??1PathRecording@gfx@mozilla@@UAE@XZ		; mozilla::gfx::PathRecording::~PathRecording
PUBLIC	?GetBackendType@PathRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ ; mozilla::gfx::PathRecording::GetBackendType
PUBLIC	?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z ; mozilla::gfx::PathRecording::CopyToBuilder
PUBLIC	?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z ; mozilla::gfx::PathRecording::TransformedCopyToBuilder
PUBLIC	?ContainsPoint@PathRecording@gfx@mozilla@@UBE_NABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ; mozilla::gfx::PathRecording::ContainsPoint
PUBLIC	?StrokeContainsPoint@PathRecording@gfx@mozilla@@UBE_NABUStrokeOptions@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ; mozilla::gfx::PathRecording::StrokeContainsPoint
PUBLIC	?GetBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ; mozilla::gfx::PathRecording::GetBounds
PUBLIC	?GetStrokedBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUStrokeOptions@23@ABVMatrix@23@@Z ; mozilla::gfx::PathRecording::GetStrokedBounds
PUBLIC	?StreamToSink@PathRecording@gfx@mozilla@@UBEXPAVPathSink@23@@Z ; mozilla::gfx::PathRecording::StreamToSink
PUBLIC	?GetFillRule@PathRecording@gfx@mozilla@@UBE?AW4FillRule@23@XZ ; mozilla::gfx::PathRecording::GetFillRule
PUBLIC	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ		; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
PUBLIC	??0?$RefPtr@VPath@gfx@mozilla@@@@QAE@PAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path>
PUBLIC	?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::get
PUBLIC	??B?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator mozilla::gfx::Path *
PUBLIC	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraitsReleaseHelper
PUBLIC	??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::allocator<mozilla::gfx::DrawEventRecorderPrivate *>
PUBLIC	?deallocate@?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::deallocate
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::~_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Getal
PUBLIC	??0?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
PUBLIC	??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::~vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
PUBLIC	?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::size
PUBLIC	??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::operator[]
PUBLIC	?_Destroy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Tidy
PUBLIC	??_GPathRecording@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::PathRecording::`scalar deleting destructor'
PUBLIC	??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z		; mozilla::gfx::ReferencePtr::ReferencePtr
PUBLIC	??BReferencePtr@gfx@mozilla@@QBEPAXXZ		; mozilla::gfx::ReferencePtr::operator void *
PUBLIC	??1RecordedEvent@gfx@mozilla@@UAE@XZ		; mozilla::gfx::RecordedEvent::~RecordedEvent
PUBLIC	?PlayEvent@RecordedEvent@gfx@mozilla@@UBEXPAVTranslator@23@@Z ; mozilla::gfx::RecordedEvent::PlayEvent
PUBLIC	?RecordToStream@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ; mozilla::gfx::RecordedEvent::RecordToStream
PUBLIC	?OutputSimpleEventInfo@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; mozilla::gfx::RecordedEvent::OutputSimpleEventInfo
PUBLIC	?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ ; mozilla::gfx::RecordedEvent::GetDestinedDT
PUBLIC	??0RecordedEvent@gfx@mozilla@@IAE@H@Z		; mozilla::gfx::RecordedEvent::RecordedEvent
PUBLIC	??0?$allocator@M@std@@QAE@XZ			; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QAEXPAMI@Z	; std::allocator<float>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
PUBLIC	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	??_GRecordedEvent@gfx@mozilla@@UAEPAXI@Z	; mozilla::gfx::RecordedEvent::`scalar deleting destructor'
PUBLIC	??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z ; mozilla::gfx::RecordedPathDestruction::RecordedPathDestruction
PUBLIC	?GetName@RecordedPathDestruction@gfx@mozilla@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; mozilla::gfx::RecordedPathDestruction::GetName
PUBLIC	?GetObjectRef@RecordedPathDestruction@gfx@mozilla@@UBE?AUReferencePtr@23@XZ ; mozilla::gfx::RecordedPathDestruction::GetObjectRef
PUBLIC	??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ	; mozilla::gfx::RecordedPathDestruction::~RecordedPathDestruction
PUBLIC	??_GRecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z ; mozilla::gfx::RecordedPathDestruction::`scalar deleting destructor'
PUBLIC	?RemoveStoredObject@DrawEventRecorderPrivate@gfx@mozilla@@QAEXUReferencePtr@23@@Z ; mozilla::gfx::DrawEventRecorderPrivate::RemoveStoredObject
PUBLIC	??R?$equal_to@PBX@std@@QBE_NABQBX0@Z		; std::equal_to<void const *>::operator()
PUBLIC	??R?$_Bitwise_hash@PBX@std@@QBEIABQBX@Z		; std::_Bitwise_hash<void const *>::operator()
PUBLIC	?_Gethash@?$_Hash_oper1@$0A@U?$hash@PBX@std@@@std@@QBE?AU?$hash@PBX@2@XZ ; std::_Hash_oper1<0,std::hash<void const *> >::_Gethash
PUBLIC	?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE?AU?$equal_to@PBX@2@XZ ; std::_Hash_oper2<0,std::hash<void const *>,std::equal_to<void const *> >::_Getkeyeq
PUBLIC	??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBEIABQBX@Z ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
PUBLIC	??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
PUBLIC	?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn
PUBLIC	??0?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<void const *,void *> >::allocator<std::_List_node<void const *,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ; std::allocator<std::_List_node<void const *,void *> >::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::deallocate
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Myval
PUBLIC	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
PUBLIC	?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_buy<void const *,std::allocator<void const *> >::_Freenode
PUBLIC	?begin@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::begin
PUBLIC	?end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::end
PUBLIC	?_Unchecked_end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Make_iter
PUBLIC	?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Make_iter
PUBLIC	?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Unlinknode
PUBLIC	?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::erase
PUBLIC	?clear@?$list@PBXV?$allocator@PBX@std@@@std@@QAEXXZ ; std::list<void const *,std::allocator<void const *> >::clear
PUBLIC	?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Orphan_ptr
PUBLIC	?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::begin
PUBLIC	?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end
PUBLIC	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
PUBLIC	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
PUBLIC	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
PUBLIC	?clear@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::clear
PUBLIC	?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::equal_range
PUBLIC	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
PUBLIC	?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
PUBLIC	?_Begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Begin
PUBLIC	?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_End
PUBLIC	?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Erase_bucket
PUBLIC	?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Hashval
PUBLIC	?_Init@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Init
PUBLIC	??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::deallocate
PUBLIC	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocate
PUBLIC	?construct@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct
PUBLIC	?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
PUBLIC	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
PUBLIC	?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Unused_capacity
PUBLIC	?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::begin
PUBLIC	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
PUBLIC	?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
PUBLIC	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator[]
PUBLIC	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::assign
PUBLIC	?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::insert
PUBLIC	?clear@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::clear
PUBLIC	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Grow_to
PUBLIC	?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Insert_n
PUBLIC	?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Ufill
PUBLIC	?_Xlen@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Orphan_range
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_List_node@PBXPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_Mynode
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_Unchecked
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBEABQBXXZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator!=
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
PUBLIC	?take@?$already_AddRefed@VPath@gfx@mozilla@@@@QAEPAVPath@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::Path>::take
PUBLIC	??$?0VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPath@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path><mozilla::gfx::Path>
PUBLIC	??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z ; mozilla::MakeAndAddRef<mozilla::gfx::PathRecording,RefPtr<mozilla::gfx::Path> &,std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &,enum mozilla::gfx::FillRule &>
PUBLIC	??0?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::PathRecording>::already_AddRefed<mozilla::gfx::PathRecording>
PUBLIC	??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>
PUBLIC	?take@?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAEPAVPathRecording@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::take
PUBLIC	??$?0VPathRecording@gfx@mozilla@@@?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::Path>::already_AddRefed<mozilla::gfx::Path><mozilla::gfx::PathRecording>
PUBLIC	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
PUBLIC	?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::take
PUBLIC	??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
PUBLIC	??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
PUBLIC	??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::RefPtr<mozilla::gfx::PathBuilderRecording>
PUBLIC	?swap@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAEXAAPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::swap
PUBLIC	?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::forget
PUBLIC	?get@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::get
PUBLIC	??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::operator->
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsReleaseHelper
PUBLIC	??0?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::already_AddRefed<mozilla::gfx::PathBuilderRecording>
PUBLIC	??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
PUBLIC	?take@?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAEPAVPathBuilderRecording@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::take
PUBLIC	??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::PathBuilder>::already_AddRefed<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilderRecording>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Unchecked
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEABUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator*
PUBLIC	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator==
PUBLIC	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator!=
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Compat
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
PUBLIC	?AddRef@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::AddRef
PUBLIC	?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > > >
PUBLIC	??$?9V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ; std::operator!=<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
PUBLIC	??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<mozilla::gfx::PathOp *>
PUBLIC	??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z ; std::addressof<mozilla::gfx::PathOp const >
PUBLIC	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
PUBLIC	??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
PUBLIC	?AddRef@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::AddRef
PUBLIC	?Release@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::Release
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::~pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
PUBLIC	??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
PUBLIC	?AddRef@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::AddRef
PUBLIC	?Release@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::Release
PUBLIC	?pointer_to@?$pointer_traits@PBUPathOp@gfx@mozilla@@@std@@SAPBUPathOp@gfx@mozilla@@ABU345@@Z ; std::pointer_traits<mozilla::gfx::PathOp const *>::pointer_to
PUBLIC	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
PUBLIC	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator--
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator!=
PUBLIC	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,void>
PUBLIC	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$_Umove@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Umove<mozilla::gfx::PathOp *>
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$_Allocate@UPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@IPAU123@@Z ; std::_Allocate<mozilla::gfx::PathOp>
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >
PUBLIC	??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<void const *,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
PUBLIC	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
PUBLIC	??$addressof@PBX@std@@YAPAPBXAAPBX@Z		; std::addressof<void const *>
PUBLIC	??$destroy@PBX@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPBX@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
PUBLIC	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??$addressof@$$CBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const >
PUBLIC	??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
PUBLIC	??$_Allocate@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
PUBLIC	??$Forward@AAV?$RefPtr@VPath@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VPath@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::Path> &>
PUBLIC	??$Forward@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@mozilla@@YAAAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAV12@@Z ; mozilla::Forward<std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &>
PUBLIC	??$Forward@AAW4FillRule@gfx@mozilla@@@mozilla@@YAAAW4FillRule@gfx@0@AAW4120@@Z ; mozilla::Forward<enum mozilla::gfx::FillRule &>
PUBLIC	??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathRecording>::~RefPtr<mozilla::gfx::PathRecording>
PUBLIC	??0?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::RefPtr<mozilla::gfx::PathRecording>
PUBLIC	?swap@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAEXAAPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::swap
PUBLIC	?forget@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::PathRecording>::forget
PUBLIC	?AddRefTraitsAddRefHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsAddRefHelper
PUBLIC	?AddRefTraitsReleaseHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsReleaseHelper
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$?8V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ; std::operator==<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??$?8UPathOp@gfx@mozilla@@U012@@std@@YA_NABV?$allocator@UPathOp@gfx@mozilla@@@0@0@Z ; std::operator==<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PBUPathOp@gfx@mozilla@@PAU234@@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
PUBLIC	??$_Uninitialized_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp &>
PUBLIC	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@AAU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
PUBLIC	??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z ; std::forward<mozilla::gfx::PathOp const &>
PUBLIC	??$construct@UPathOp@gfx@mozilla@@ABU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@ABU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
PUBLIC	??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
PUBLIC	??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
PUBLIC	??$forward@AAPAD@std@@YAAAPADAAPAD@Z		; std::forward<char * &>
PUBLIC	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
PUBLIC	??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Ptr_cat@PAVDrawEventRecorderPrivate@gfx@mozilla@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::DrawEventRecorderPrivate *,mozilla::gfx::DrawEventRecorderPrivate *>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
PUBLIC	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPAU?$_List_node@PBXPAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
PUBLIC	??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
PUBLIC	??$destroy@PBX@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPBX@Z ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
PUBLIC	??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
PUBLIC	??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	?AddRef@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::AddRef
PUBLIC	?Release@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::Release
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
PUBLIC	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
PUBLIC	??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
PUBLIC	??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
PUBLIC	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
PUBLIC	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z	; std::allocator<char>::destroy<char *>
PUBLIC	??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
PUBLIC	??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
PUBLIC	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ; std::allocator<std::_List_node<void const *,void *> >::destroy<std::_List_node<void const *,void *> *>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$destroy@PBX@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPBX@Z ; std::allocator<std::_List_node<void const *,void *> >::destroy<void const *>
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
PUBLIC	??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Iter_cat@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@@Z ; std::_Iter_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$_Debug_range2@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
PUBLIC	??$destroy@UPathOp@gfx@mozilla@@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
PUBLIC	??$_Val_type@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Val_type<mozilla::gfx::PathOp *>
PUBLIC	??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp>,mozilla::gfx::PathOp>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Debug_range@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WI@Z ; std::_Debug_range<mozilla::gfx::PathOp const *>
PUBLIC	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
PUBLIC	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
PUBLIC	??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z ; std::_Debug_range<mozilla::gfx::PathOp *>
PUBLIC	??$destroy@UPathOp@gfx@mozilla@@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::allocator<mozilla::gfx::PathOp>::destroy<mozilla::gfx::PathOp>
PUBLIC	??$construct@UPathOp@gfx@mozilla@@U123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$_Iter_cat@PBUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBUPathOp@gfx@mozilla@@@Z ; std::_Iter_cat<mozilla::gfx::PathOp const *>
PUBLIC	??$_Debug_range2@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<mozilla::gfx::PathOp const *>
PUBLIC	??$_Iter_cat@PAUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUPathOp@gfx@mozilla@@@Z ; std::_Iter_cat<mozilla::gfx::PathOp *>
PUBLIC	??$_Debug_range2@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<mozilla::gfx::PathOp *>
PUBLIC	??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp>
PUBLIC	??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@$$QAU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
PUBLIC	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
PUBLIC	??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_7error_category@std@@6B@			; std::error_category::`vftable'
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic?$AA@			; `string'
PUBLIC	??_C@_0O@BFJCFAAK@unknown?5error?$AA@		; `string'
PUBLIC	??_7_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`vftable'
PUBLIC	??_C@_08LLGCOLLL@iostream?$AA@			; `string'
PUBLIC	??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@	; `string'
PUBLIC	??_7_System_error_category@std@@6B@		; std::_System_error_category::`vftable'
PUBLIC	??_C@_06FHFOAHML@system?$AA@			; `string'
PUBLIC	?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
PUBLIC	?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
PUBLIC	?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
PUBLIC	??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ ; `string'
PUBLIC	??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ ; `string'
PUBLIC	??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@		; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_7PathSink@gfx@mozilla@@6B@			; mozilla::gfx::PathSink::`vftable'
PUBLIC	??_7PathBuilder@gfx@mozilla@@6B@		; mozilla::gfx::PathBuilder::`vftable'
PUBLIC	??_7PathBuilderRecording@gfx@mozilla@@6B@	; mozilla::gfx::PathBuilderRecording::`vftable'
PUBLIC	??_7PathRecording@gfx@mozilla@@6B@		; mozilla::gfx::PathRecording::`vftable'
PUBLIC	?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
PUBLIC	?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
PUBLIC	??_7RecordedEvent@gfx@mozilla@@6B@		; mozilla::gfx::RecordedEvent::`vftable'
PUBLIC	??_7RecordedPathDestruction@gfx@mozilla@@6B@	; mozilla::gfx::RecordedPathDestruction::`vftable'
PUBLIC	??_C@_0BB@OFOPLBGI@Path?5Destruction?$AA@	; `string'
PUBLIC	??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BBO@CBMDIAJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?3?$AA?3?$AAg?$AAf?$AAx?$AA?3?$AA?3@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IK@IMDFCBHM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1NK@BJPMEIHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ ; `string'
PUBLIC	??_C@_1PE@HJGPOFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ ; `string'
PUBLIC	??_C@_1PG@INBDMFAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1OO@FHLBLNLK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1NI@GGDPCAJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1NK@LJABKBLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ ; `string'
PUBLIC	??_C@_1CME@JIAKHOAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAu?$AAn?$AAc@ ; `string'
PUBLIC	??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ ; `string'
PUBLIC	??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ ; `string'
PUBLIC	??_C@_1BNG@JIGEKGDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_R4error_category@std@@6B@			; std::error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Iostream_error_category@std@@6B@		; std::_Iostream_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Iostream_error_category@std@@@8	; std::_Iostream_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Iostream_error_category@std@@8		; std::_Iostream_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Iostream_error_category@std@@8	; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error_category@std@@6B@		; std::_System_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_System_error_category@std@@@8		; std::_System_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_System_error_category@std@@8		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error_category@std@@8		; std::_System_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error_category@std@@8	; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4PathSink@gfx@mozilla@@6B@			; mozilla::gfx::PathSink::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPathSink@gfx@mozilla@@@8		; mozilla::gfx::PathSink `RTTI Type Descriptor'
PUBLIC	??_R3PathSink@gfx@mozilla@@8			; mozilla::gfx::PathSink::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PathSink@gfx@mozilla@@8			; mozilla::gfx::PathSink::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PathSink@gfx@mozilla@@8		; mozilla::gfx::PathSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4PathBuilder@gfx@mozilla@@6B@		; mozilla::gfx::PathBuilder::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPathBuilder@gfx@mozilla@@@8		; mozilla::gfx::PathBuilder `RTTI Type Descriptor'
PUBLIC	??_R3PathBuilder@gfx@mozilla@@8			; mozilla::gfx::PathBuilder::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PathBuilder@gfx@mozilla@@8			; mozilla::gfx::PathBuilder::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PathBuilder@gfx@mozilla@@8	; mozilla::gfx::PathBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4PathRecording@gfx@mozilla@@6B@		; mozilla::gfx::PathRecording::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPathRecording@gfx@mozilla@@@8		; mozilla::gfx::PathRecording `RTTI Type Descriptor'
PUBLIC	??_R3PathRecording@gfx@mozilla@@8		; mozilla::gfx::PathRecording::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PathRecording@gfx@mozilla@@8		; mozilla::gfx::PathRecording::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PathRecording@gfx@mozilla@@8	; mozilla::gfx::PathRecording::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Path@gfx@mozilla@@8		; mozilla::gfx::Path::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVPath@gfx@mozilla@@@8			; mozilla::gfx::Path `RTTI Type Descriptor'
PUBLIC	??_R3Path@gfx@mozilla@@8			; mozilla::gfx::Path::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Path@gfx@mozilla@@8			; mozilla::gfx::Path::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::Path> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1> `RTTI Type Descriptor'
PUBLIC	??_R3?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R4PathBuilderRecording@gfx@mozilla@@6B@	; mozilla::gfx::PathBuilderRecording::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPathBuilderRecording@gfx@mozilla@@@8	; mozilla::gfx::PathBuilderRecording `RTTI Type Descriptor'
PUBLIC	??_R3PathBuilderRecording@gfx@mozilla@@8	; mozilla::gfx::PathBuilderRecording::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PathBuilderRecording@gfx@mozilla@@8	; mozilla::gfx::PathBuilderRecording::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PathBuilderRecording@gfx@mozilla@@8 ; mozilla::gfx::PathBuilderRecording::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RecordedEvent@gfx@mozilla@@6B@		; mozilla::gfx::RecordedEvent::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRecordedEvent@gfx@mozilla@@@8		; mozilla::gfx::RecordedEvent `RTTI Type Descriptor'
PUBLIC	??_R3RecordedEvent@gfx@mozilla@@8		; mozilla::gfx::RecordedEvent::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RecordedEvent@gfx@mozilla@@8		; mozilla::gfx::RecordedEvent::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RecordedEvent@gfx@mozilla@@8	; mozilla::gfx::RecordedEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RecordedPathDestruction@gfx@mozilla@@6B@	; mozilla::gfx::RecordedPathDestruction::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRecordedPathDestruction@gfx@mozilla@@@8	; mozilla::gfx::RecordedPathDestruction `RTTI Type Descriptor'
PUBLIC	??_R3RecordedPathDestruction@gfx@mozilla@@8	; mozilla::gfx::RecordedPathDestruction::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RecordedPathDestruction@gfx@mozilla@@8	; mozilla::gfx::RecordedPathDestruction::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RecordedPathDestruction@gfx@mozilla@@8 ; mozilla::gfx::RecordedPathDestruction::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp___hypot:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPB_W0I@Z:PROC
EXTRN	__imp_??0_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_??1_Container_base12@std@@QAE@XZ:PROC
EXTRN	__imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ:PROC
EXTRN	__imp_?_Orphan_all@_Container_base12@std@@QAEXXZ:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPBD@Z:PROC
EXTRN	__imp_??0id@locale@std@@QAE@I@Z:PROC
EXTRN	??_Eerror_category@std@@UAEPAXI@Z:PROC		; std::error_category::`vector deleting destructor'
EXTRN	__imp_?_Syserror_map@std@@YAPBDH@Z:PROC
EXTRN	__imp_?_Winerror_map@std@@YAPBDH@Z:PROC
EXTRN	??_E_Generic_error_category@std@@UAEPAXI@Z:PROC	; std::_Generic_error_category::`vector deleting destructor'
EXTRN	??_E_Iostream_error_category@std@@UAEPAXI@Z:PROC ; std::_Iostream_error_category::`vector deleting destructor'
EXTRN	??_E_System_error_category@std@@UAEPAXI@Z:PROC	; std::_System_error_category::`vector deleting destructor'
EXTRN	??_EPathSink@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::PathSink::`vector deleting destructor'
EXTRN	??1Path@gfx@mozilla@@UAE@XZ:PROC		; mozilla::gfx::Path::~Path
EXTRN	?ComputeLength@Path@gfx@mozilla@@UAEMXZ:PROC	; mozilla::gfx::Path::ComputeLength
EXTRN	?ComputePointAtLength@Path@gfx@mozilla@@UAE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MPAU423@@Z:PROC ; mozilla::gfx::Path::ComputePointAtLength
EXTRN	??0Path@gfx@mozilla@@IAE@XZ:PROC		; mozilla::gfx::Path::Path
EXTRN	??_EPathBuilder@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::PathBuilder::`vector deleting destructor'
EXTRN	??_EPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z:PROC ; mozilla::gfx::PathBuilderRecording::`vector deleting destructor'
EXTRN	??_EPathRecording@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::PathRecording::`vector deleting destructor'
EXTRN	??_ERecordedEvent@gfx@mozilla@@UAEPAXI@Z:PROC	; mozilla::gfx::RecordedEvent::`vector deleting destructor'
EXTRN	?PlayEvent@RecordedPathDestruction@gfx@mozilla@@UBEXPAVTranslator@23@@Z:PROC ; mozilla::gfx::RecordedPathDestruction::PlayEvent
EXTRN	?RecordToStream@RecordedPathDestruction@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z:PROC ; mozilla::gfx::RecordedPathDestruction::RecordToStream
EXTRN	?OutputSimpleEventInfo@RecordedPathDestruction@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:PROC ; mozilla::gfx::RecordedPathDestruction::OutputSimpleEventInfo
EXTRN	??_ERecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z:PROC ; mozilla::gfx::RecordedPathDestruction::`vector deleting destructor'
EXTRN	?RecordEvent@DrawEventRecorderPrivate@gfx@mozilla@@QAEXABVRecordedEvent@23@@Z:PROC ; mozilla::gfx::DrawEventRecorderPrivate::RecordEvent
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_piecewise_construct DB 01H DUP (?)
_allocator_arg DB 01H DUP (?)
_BSS	ENDS
;	COMDAT ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A
_BSS	SEGMENT
?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Generic_object
_BSS	ENDS
;	COMDAT ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A
_BSS	SEGMENT
?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_Iostream_object
_BSS	ENDS
;	COMDAT ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A
_BSS	SEGMENT
?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A DD 01H DUP (?) ; std::_Error_objects<int>::_System_object
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
_BSS	ENDS
CRT$XCU	SEGMENT
_piecewise_construct$initializer$ DD FLAT:??__Epiecewise_construct@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@RecordedPathDestruction@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RecordedPathDestruction@gfx@mozilla@@8 DD FLAT:??_R0?AVRecordedPathDestruction@gfx@mozilla@@@8 ; mozilla::gfx::RecordedPathDestruction::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RecordedPathDestruction@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2RecordedPathDestruction@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2RecordedPathDestruction@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@RecordedPathDestruction@gfx@mozilla@@8 ; mozilla::gfx::RecordedPathDestruction::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@RecordedEvent@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3RecordedPathDestruction@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3RecordedPathDestruction@gfx@mozilla@@8 DD 00H	; mozilla::gfx::RecordedPathDestruction::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2RecordedPathDestruction@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRecordedPathDestruction@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVRecordedPathDestruction@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::RecordedPathDestruction `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRecordedPathDestruction@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4RecordedPathDestruction@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4RecordedPathDestruction@gfx@mozilla@@6B@ DD 00H	; mozilla::gfx::RecordedPathDestruction::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRecordedPathDestruction@gfx@mozilla@@@8
	DD	FLAT:??_R3RecordedPathDestruction@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RecordedEvent@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RecordedEvent@gfx@mozilla@@8 DD FLAT:??_R0?AVRecordedEvent@gfx@mozilla@@@8 ; mozilla::gfx::RecordedEvent::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3RecordedEvent@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2RecordedEvent@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2RecordedEvent@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@RecordedEvent@gfx@mozilla@@8 ; mozilla::gfx::RecordedEvent::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3RecordedEvent@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3RecordedEvent@gfx@mozilla@@8 DD 00H		; mozilla::gfx::RecordedEvent::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2RecordedEvent@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRecordedEvent@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVRecordedEvent@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::RecordedEvent `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVRecordedEvent@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4RecordedEvent@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4RecordedEvent@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::RecordedEvent::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVRecordedEvent@gfx@mozilla@@@8
	DD	FLAT:??_R3RecordedEvent@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PathBuilderRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PathBuilderRecording@gfx@mozilla@@8 DD FLAT:??_R0?AVPathBuilderRecording@gfx@mozilla@@@8 ; mozilla::gfx::PathBuilderRecording::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PathBuilderRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2PathBuilderRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2PathBuilderRecording@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@PathBuilderRecording@gfx@mozilla@@8 ; mozilla::gfx::PathBuilderRecording::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PathBuilder@gfx@mozilla@@8
	DD	FLAT:??_R1A@?0A@EA@PathSink@gfx@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3PathBuilderRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3PathBuilderRecording@gfx@mozilla@@8 DD 00H		; mozilla::gfx::PathBuilderRecording::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2PathBuilderRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPathBuilderRecording@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPathBuilderRecording@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::PathBuilderRecording `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPathBuilderRecording@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4PathBuilderRecording@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4PathBuilderRecording@gfx@mozilla@@6B@ DD 00H	; mozilla::gfx::PathBuilderRecording::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPathBuilderRecording@gfx@mozilla@@@8
	DD	FLAT:??_R3PathBuilderRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 DD 00H ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@'
	DB	00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 DD 00H	; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::RefCounted<mozilla::gfx::Path> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPath@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::Path>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2Path@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2Path@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@Path@gfx@mozilla@@8 ; mozilla::gfx::Path::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3Path@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3Path@gfx@mozilla@@8 DD 00H				; mozilla::gfx::Path::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Path@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPath@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPath@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@	; mozilla::gfx::Path `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPath@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Path@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Path@gfx@mozilla@@8 DD FLAT:??_R0?AVPath@gfx@mozilla@@@8 ; mozilla::gfx::Path::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Path@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PathRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PathRecording@gfx@mozilla@@8 DD FLAT:??_R0?AVPathRecording@gfx@mozilla@@@8 ; mozilla::gfx::PathRecording::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PathRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2PathRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2PathRecording@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@PathRecording@gfx@mozilla@@8 ; mozilla::gfx::PathRecording::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Path@gfx@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3PathRecording@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3PathRecording@gfx@mozilla@@8 DD 00H		; mozilla::gfx::PathRecording::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PathRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPathRecording@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPathRecording@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::PathRecording `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPathRecording@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4PathRecording@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4PathRecording@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::PathRecording::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPathRecording@gfx@mozilla@@@8
	DD	FLAT:??_R3PathRecording@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PathBuilder@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PathBuilder@gfx@mozilla@@8 DD FLAT:??_R0?AVPathBuilder@gfx@mozilla@@@8 ; mozilla::gfx::PathBuilder::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PathBuilder@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2PathBuilder@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2PathBuilder@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@PathBuilder@gfx@mozilla@@8 ; mozilla::gfx::PathBuilder::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@PathSink@gfx@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3PathBuilder@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3PathBuilder@gfx@mozilla@@8 DD 00H			; mozilla::gfx::PathBuilder::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2PathBuilder@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPathBuilder@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPathBuilder@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::PathBuilder `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPathBuilder@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4PathBuilder@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4PathBuilder@gfx@mozilla@@6B@ DD 00H		; mozilla::gfx::PathBuilder::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPathBuilder@gfx@mozilla@@@8
	DD	FLAT:??_R3PathBuilder@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 DD 00H ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozil'
	DB	'la@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@@8 ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R2?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R3?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 DD 00H ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@@8
data$r	SEGMENT
??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::RefCounted<mozilla::gfx::PathSink> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	SEGMENT
??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8 DD FLAT:??_R0?AV?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@@8 ; mozilla::RefCounted<mozilla::gfx::PathSink>::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	01H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@PathSink@gfx@mozilla@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PathSink@gfx@mozilla@@8 DD FLAT:??_R0?AVPathSink@gfx@mozilla@@@8 ; mozilla::gfx::PathSink::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PathSink@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R2PathSink@gfx@mozilla@@8
rdata$r	SEGMENT
??_R2PathSink@gfx@mozilla@@8 DD FLAT:??_R1A@?0A@EA@PathSink@gfx@mozilla@@8 ; mozilla::gfx::PathSink::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@8
	DD	FLAT:??_R13?0A@EA@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R3PathSink@gfx@mozilla@@8
rdata$r	SEGMENT
??_R3PathSink@gfx@mozilla@@8 DD 00H			; mozilla::gfx::PathSink::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2PathSink@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPathSink@gfx@mozilla@@@8
data$r	SEGMENT
??_R0?AVPathSink@gfx@mozilla@@@8 DD FLAT:??_7type_info@@6B@ ; mozilla::gfx::PathSink `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPathSink@gfx@mozilla@@', 00H
data$r	ENDS
;	COMDAT ??_R4PathSink@gfx@mozilla@@6B@
rdata$r	SEGMENT
??_R4PathSink@gfx@mozilla@@6B@ DD 00H			; mozilla::gfx::PathSink::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPathSink@gfx@mozilla@@@8
	DD	FLAT:??_R3PathSink@gfx@mozilla@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error_category@std@@8 DD FLAT:??_R0?AV_System_error_category@std@@@8 ; std::_System_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error_category@std@@8
rdata$r	SEGMENT
??_R2_System_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_System_error_category@std@@8 ; std::_System_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_System_error_category@std@@8
rdata$r	SEGMENT
??_R3_System_error_category@std@@8 DD 00H		; std::_System_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_System_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_System_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_System_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_System_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_System_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_System_error_category@std@@6B@ DD 00H		; std::_System_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_System_error_category@std@@@8
	DD	FLAT:??_R3_System_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Iostream_error_category@std@@8 DD FLAT:??_R0?AV_Iostream_error_category@std@@@8 ; std::_Iostream_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R2_Iostream_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Iostream_error_category@std@@8 ; std::_Iostream_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Iostream_error_category@std@@8
rdata$r	SEGMENT
??_R3_Iostream_error_category@std@@8 DD 00H		; std::_Iostream_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Iostream_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Iostream_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Iostream_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Iostream_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Iostream_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Iostream_error_category@std@@6B@ DD 00H		; std::_Iostream_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Iostream_error_category@std@@@8
	DD	FLAT:??_R3_Iostream_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD FLAT:??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD FLAT:??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 00H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV_Generic_error_category@std@@@8
	DD	FLAT:??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD FLAT:??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD FLAT:??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4error_category@std@@6B@
rdata$r	SEGMENT
??_R4error_category@std@@6B@ DD 00H			; std::error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVerror_category@std@@@8
	DD	FLAT:??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BNG@JIGEKGDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1BNG@JIGEKGDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, '_', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's'
	DB	00H, '<', 00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '0', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '=', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
CONST	SEGMENT
??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	'f', 00H, 's', 00H, 'e', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u'
	DB	00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H
	DB	'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
CONST	SEGMENT
??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 's', 00H, 'e', 00H, 'r', 00H, 't', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CME@JIAKHOAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAu?$AAn?$AAc@
CONST	SEGMENT
??_C@_1CME@JIAKHOAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAu?$AAn?$AAc@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, '_', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 'h', 00H
	DB	'e', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, '_', 00H, 's', 00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's'
	DB	00H, '<', 00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, ' ', 00H, '*'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_'
	DB	00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '0', 00H, '>', 00H
	DB	',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'W', 00H, 'r', 00H, 'a', 00H, 'p', 00H, '_', 00H, 'a'
	DB	00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, '<', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'u', 00H, 'n', 00H
	DB	'c', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, 'e', 00H, 'd'
	DB	00H, '_', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, '_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 's', 00H, 'i', 00H, 'm', 00H
	DB	'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 's', 00H, '<', 00H, 'v', 00H, 'o', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'I', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H
	DB	'0', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '['
	DB	00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
CONST	SEGMENT
??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, 's', 00H, 'i', 00H, 'd', 00H, 'e'
	DB	00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@LJABKBLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1NK@LJABKBLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'v'
	DB	00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NI@GGDPCAJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1NI@GGDPCAJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'v'
	DB	00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '*', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
CONST	SEGMENT
??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n'
	DB	00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OO@FHLBLNLK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1OO@FHLBLNLK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'z', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a', 00H, ':'
	DB	00H, ':', 00H, 'g', 00H, 'f', 00H, 'x', 00H, ':', 00H, ':', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'O', 00H, 'p', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PG@INBDMFAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PG@INBDMFAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'z', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a', 00H, ':'
	DB	00H, ':', 00H, 'g', 00H, 'f', 00H, 'x', 00H, ':', 00H, ':', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'O', 00H, 'p', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
CONST	SEGMENT
??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PE@HJGPOFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
CONST	SEGMENT
??_C@_1PE@HJGPOFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'm', 00H
	DB	'o', 00H, 'z', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a', 00H, ':'
	DB	00H, ':', 00H, 'g', 00H, 'f', 00H, 'x', 00H, ':', 00H, ':', 00H
	DB	'P', 00H, 'a', 00H, 't', 00H, 'h', 00H, 'O', 00H, 'p', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
CONST	SEGMENT
??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'a', 00H, 'b', 00H, 'l', 00H
	DB	'e', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NK@BJPMEIHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1NK@BJPMEIHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'v'
	DB	00H, 'o', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 's', 00H, 't', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@ DB 'l'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, 's'
	DB	00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IK@IMDFCBHM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IK@IMDFCBHM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'h', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BBO@CBMDIAJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?3?$AA?3?$AAg?$AAf?$AAx?$AA?3?$AA?3@
CONST	SEGMENT
??_C@_1BBO@CBMDIAJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?3?$AA?3?$AAg?$AAf?$AAx?$AA?3?$AA?3@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'm', 00H, 'o', 00H
	DB	'z', 00H, 'i', 00H, 'l', 00H, 'l', 00H, 'a', 00H, ':', 00H, ':'
	DB	00H, 'g', 00H, 'f', 00H, 'x', 00H, ':', 00H, ':', 00H, 'D', 00H
	DB	'r', 00H, 'a', 00H, 'w', 00H, 'E', 00H, 'v', 00H, 'e', 00H, 'n'
	DB	00H, 't', 00H, 'R', 00H, 'e', 00H, 'c', 00H, 'o', 00H, 'r', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'P', 00H, 'r', 00H, 'i', 00H, 'v'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, '*', 00H, ',', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H, 'l', 00H, 'l'
	DB	00H, 'a', 00H, ':', 00H, ':', 00H, 'g', 00H, 'f', 00H, 'x', 00H
	DB	':', 00H, ':', 00H, 'D', 00H, 'r', 00H, 'a', 00H, 'w', 00H, 'E'
	DB	00H, 'v', 00H, 'e', 00H, 'n', 00H, 't', 00H, 'R', 00H, 'e', 00H
	DB	'c', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'P'
	DB	00H, 'r', 00H, 'i', 00H, 'v', 00H, 'a', 00H, 't', 00H, 'e', 00H
	DB	' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':'
	DB	00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OFOPLBGI@Path?5Destruction?$AA@
CONST	SEGMENT
??_C@_0BB@OFOPLBGI@Path?5Destruction?$AA@ DB 'Path Destruction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7RecordedPathDestruction@gfx@mozilla@@6B@
CONST	SEGMENT
??_7RecordedPathDestruction@gfx@mozilla@@6B@ DD FLAT:??_R4RecordedPathDestruction@gfx@mozilla@@6B@ ; mozilla::gfx::RecordedPathDestruction::`vftable'
	DD	FLAT:??_ERecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?PlayEvent@RecordedPathDestruction@gfx@mozilla@@UBEXPAVTranslator@23@@Z
	DD	FLAT:?RecordToStream@RecordedPathDestruction@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?OutputSimpleEventInfo@RecordedPathDestruction@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:?GetName@RecordedPathDestruction@gfx@mozilla@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	DD	FLAT:?GetObjectRef@RecordedPathDestruction@gfx@mozilla@@UBE?AUReferencePtr@23@XZ
	DD	FLAT:?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ
CONST	ENDS
;	COMDAT ??_7RecordedEvent@gfx@mozilla@@6B@
CONST	SEGMENT
??_7RecordedEvent@gfx@mozilla@@6B@ DD FLAT:??_R4RecordedEvent@gfx@mozilla@@6B@ ; mozilla::gfx::RecordedEvent::`vftable'
	DD	FLAT:??_ERecordedEvent@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?PlayEvent@RecordedEvent@gfx@mozilla@@UBEXPAVTranslator@23@@Z
	DD	FLAT:?RecordToStream@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
	DD	FLAT:?OutputSimpleEventInfo@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ
CONST	ENDS
;	COMDAT ??_7PathRecording@gfx@mozilla@@6B@
CONST	SEGMENT
??_7PathRecording@gfx@mozilla@@6B@ DD FLAT:??_R4PathRecording@gfx@mozilla@@6B@ ; mozilla::gfx::PathRecording::`vftable'
	DD	FLAT:??_EPathRecording@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?GetBackendType@PathRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ
	DD	FLAT:?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
	DD	FLAT:?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z
	DD	FLAT:?ContainsPoint@PathRecording@gfx@mozilla@@UBE_NABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
	DD	FLAT:?StrokeContainsPoint@PathRecording@gfx@mozilla@@UBE_NABUStrokeOptions@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
	DD	FLAT:?GetBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
	DD	FLAT:?GetStrokedBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUStrokeOptions@23@ABVMatrix@23@@Z
	DD	FLAT:?StreamToSink@PathRecording@gfx@mozilla@@UBEXPAVPathSink@23@@Z
	DD	FLAT:?GetFillRule@PathRecording@gfx@mozilla@@UBE?AW4FillRule@23@XZ
	DD	FLAT:?ComputeLength@Path@gfx@mozilla@@UAEMXZ
	DD	FLAT:?ComputePointAtLength@Path@gfx@mozilla@@UAE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MPAU423@@Z
CONST	ENDS
;	COMDAT ??_7PathBuilderRecording@gfx@mozilla@@6B@
CONST	SEGMENT
??_7PathBuilderRecording@gfx@mozilla@@6B@ DD FLAT:??_R4PathBuilderRecording@gfx@mozilla@@6B@ ; mozilla::gfx::PathBuilderRecording::`vftable'
	DD	FLAT:??_EPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:?MoveTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
	DD	FLAT:?LineTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z
	DD	FLAT:?BezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@00@Z
	DD	FLAT:?QuadraticBezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0@Z
	DD	FLAT:?Close@PathBuilderRecording@gfx@mozilla@@UAEXXZ
	DD	FLAT:?Arc@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MMM_N@Z
	DD	FLAT:?CurrentPoint@PathBuilderRecording@gfx@mozilla@@UBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@XZ
	DD	FLAT:?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ
	DD	FLAT:?GetBackendType@PathBuilderRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ
CONST	ENDS
;	COMDAT ??_7PathBuilder@gfx@mozilla@@6B@
CONST	SEGMENT
??_7PathBuilder@gfx@mozilla@@6B@ DD FLAT:??_R4PathBuilder@gfx@mozilla@@6B@ ; mozilla::gfx::PathBuilder::`vftable'
	DD	FLAT:??_EPathBuilder@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_7PathSink@gfx@mozilla@@6B@
CONST	SEGMENT
??_7PathSink@gfx@mozilla@@6B@ DD FLAT:??_R4PathSink@gfx@mozilla@@6B@ ; mozilla::gfx::PathSink::`vftable'
	DD	FLAT:??_EPathSink@gfx@mozilla@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@ DB '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
CONST	SEGMENT
??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'I', 00H, 'n', 00H, 'v'
	DB	00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H, ' ', 00H, 'A', 00H
	DB	'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
CONST	SEGMENT
??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@ DB 'Standa'
	DB	'rd C++ Libraries Invalid Argument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHFOAHML@system?$AA@
CONST	SEGMENT
??_C@_06FHFOAHML@system?$AA@ DB 'system', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_System_error_category@std@@6B@
CONST	SEGMENT
??_7_System_error_category@std@@6B@ DD FLAT:??_R4_System_error_category@std@@6B@ ; std::_System_error_category::`vftable'
	DD	FLAT:??_E_System_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_System_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
CONST	SEGMENT
??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@ DB 'iostream stream error'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLGCOLLL@iostream?$AA@
CONST	SEGMENT
??_C@_08LLGCOLLL@iostream?$AA@ DB 'iostream', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7_Iostream_error_category@std@@6B@
CONST	SEGMENT
??_7_Iostream_error_category@std@@6B@ DD FLAT:??_R4_Iostream_error_category@std@@6B@ ; std::_Iostream_error_category::`vftable'
	DD	FLAT:??_E_Iostream_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Iostream_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
CONST	SEGMENT
??_C@_0O@BFJCFAAK@unknown?5error?$AA@ DB 'unknown error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic?$AA@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic?$AA@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DD FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DD	FLAT:??_E_Generic_error_category@std@@UAEPAXI@Z
	DD	FLAT:?name@_Generic_error_category@std@@UBEPBDXZ
	DD	FLAT:?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_7error_category@std@@6B@
CONST	SEGMENT
??_7error_category@std@@6B@ DD FLAT:??_R4error_category@std@@6B@ ; std::error_category::`vftable'
	DD	FLAT:??_Eerror_category@std@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
	DD	FLAT:?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '2', 00H, '.', 00H, '0', 00H, '\', 00H, 'V'
	DB	00H, 'C', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z$0
__ehfuncinfo$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z$0
__ehfuncinfo$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0
__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z$0
__ehfuncinfo$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z$0
__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0
__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$2
__ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$1
__ehfuncinfo$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z$1
__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0
__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0
__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z$0
__ehfuncinfo$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$2
__ehfuncinfo$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$2
__ehfuncinfo$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$2
__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z$0
__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$2
__ehfuncinfo$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z$0
__ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z$0
__ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$8 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$2
__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$7 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0
__ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$7
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:__catchsym$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$8
__unwindtable$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$4
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0
__ehfuncinfo$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0
__ehfuncinfo$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z$0
__ehfuncinfo$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$3
	DD	02H
	DD	FLAT:__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$4
__ehfuncinfo$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$3
__ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$4
__ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$2
__ehfuncinfo$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0
__ehfuncinfo$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z$0
__ehfuncinfo$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z$0
__ehfuncinfo$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z$0
__ehfuncinfo$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z$0
__ehfuncinfo$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$3
__ehfuncinfo$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ$0
__ehfuncinfo$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z$0
__ehfuncinfo$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$0
__unwindtable$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$2
__ehfuncinfo$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z$0
__unwindtable$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z$2
__ehfuncinfo$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$5
__unwindtable$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z$0
__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__ehfuncinfo$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z DD 019930522H
	DD	07H
	DD	FLAT:__unwindtable$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$??1PathRecording@gfx@mozilla@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1PathRecording@gfx@mozilla@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__ehfuncinfo$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1PathRecording@gfx@mozilla@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$4
__unwindtable$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$3
	DD	00H
	DD	FLAT:__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$0
	DD	01H
	DD	FLAT:__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$1
	DD	00H
	DD	FLAT:__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$1
	DD	03H
	DD	FLAT:__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$2
__unwindtable$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$1
	DD	03H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$4
__unwindtable$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$8
	DD	00H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$1
	DD	03H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$3
	DD	05H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$6
	DD	05H
	DD	FLAT:__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z$1
__ehfuncinfo$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$5
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0
__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
_allocator_arg$initializer$ DD FLAT:??__Eallocator_arg@std@@YAXXZ
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Generic_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Generic_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_Iostream_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_Iostream_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?_System_object$initializer$@?$_Error_objects@H@std@@2P6AXXZA DD FLAT:??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; std::_Error_objects<int>::_System_object$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
?id$initializer$@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2P6AXXZA DD FLAT:??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 337
	push	ebp
	mov	ebp, esp
; Line 338
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Line 339
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z PROC ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp>
	add	esp, 4
	mov	ecx, 7
	mov	esi, eax
	mov	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 465
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@V32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 16					; 00000010H
; Line 470
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@$$QAU345@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@$$QAU345@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@$$QAU345@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z PROC ; std::forward<mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z ENDP ; std::forward<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUPathOp@gfx@mozilla@@@Z PROC ; std::_Iter_cat<mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUPathOp@gfx@mozilla@@@Z ENDP ; std::_Iter_cat<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<mozilla::gfx::PathOp const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<mozilla::gfx::PathOp const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PBUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PBUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBUPathOp@gfx@mozilla@@@Z PROC ; std::_Iter_cat<mozilla::gfx::PathOp const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PBUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBUPathOp@gfx@mozilla@@@Z ENDP ; std::_Iter_cat<mozilla::gfx::PathOp const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
_<_Args_0>$ = 20					; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z PROC ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 337
	push	ebp
	mov	ebp, esp
; Line 338
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
; Line 339
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ENDP ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA$$QAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAXAAV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@U123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UPathOp@gfx@mozilla@@U123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@UPathOp@gfx@mozilla@@@std@@YA$$QAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UPathOp@gfx@mozilla@@U123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@$$QAU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UPathOp@gfx@mozilla@@U123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UPathOp@gfx@mozilla@@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UPathOp@gfx@mozilla@@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z PROC ; std::allocator<mozilla::gfx::PathOp>::destroy<mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UPathOp@gfx@mozilla@@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::destroy<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z PROC ; std::_Debug_range<mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUPathOp@gfx@mozilla@@@Z ; std::_Iter_cat<mozilla::gfx::PathOp *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<mozilla::gfx::PathOp *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z ENDP ; std::_Debug_range<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z PROC ; std::_Debug_pointer<mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@PB_WI@Z ENDP ; std::_Debug_pointer<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z PROC ; std::_Debug_pointer<mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ENDP ; std::_Debug_pointer<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WI@Z PROC ; std::_Debug_range<mozilla::gfx::PathOp const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PBUPathOp@gfx@mozilla@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBUPathOp@gfx@mozilla@@@Z ; std::_Iter_cat<mozilla::gfx::PathOp const *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<mozilla::gfx::PathOp const *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WI@Z ENDP ; std::_Debug_range<mozilla::gfx::PathOp const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 465
	push	ebp
	mov	ebp, esp
; Line 469
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@_Alloc_construct@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::_Alloc_construct::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 16					; 00000010H
; Line 470
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z PROC ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ENDP ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z PROC ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 552
	push	ebp
	mov	ebp, esp
	push	esi
; Line 553
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 554
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 555
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z ENDP ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 4
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@$$QAV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 4
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 474
	push	ebp
	mov	ebp, esp
; Line 476
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@_Alloc_destroy@std@@SAXHAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Alloc_destroy::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 477
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp>,mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 437
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 438
	push	438					; 000001b6H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z ; std::_Debug_range<mozilla::gfx::PathOp *>
	add	esp, 16					; 00000010H
; Line 439
	push	439					; 000001b7H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 440
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 442
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 443
	jmp	SHORT $LN6@Uninit_mov
$LN5@Uninit_mov:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_mov:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_mov
; Line 444
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UPathOp@gfx@mozilla@@U123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@$$QAU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	jmp	SHORT $LN5@Uninit_mov
$LN4@Uninit_mov:
	jmp	SHORT $LN10@Uninit_mov
__catch$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 446
	jmp	SHORT $LN3@Uninit_mov
$LN2@Uninit_mov:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_mov:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_mov
; Line 447
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
	jmp	SHORT $LN2@Uninit_mov
$LN1@Uninit_mov:
; Line 448
	push	0
	push	0
	call	__CxxThrowException@8
; Line 449
	mov	eax, $LN13@Uninit_mov
	ret	0
$LN10@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_mov:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 450
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_mov:
; Line 451
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp>,mozilla::gfx::PathOp>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z PROC ; std::_Val_type<mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ENDP ; std::_Val_type<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UPathOp@gfx@mozilla@@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@UPathOp@gfx@mozilla@@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UPathOp@gfx@mozilla@@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::allocator<mozilla::gfx::PathOp>::destroy<mozilla::gfx::PathOp>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@UPathOp@gfx@mozilla@@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	push	372					; 00000174H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAUPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@0PB_WI@Z ; std::_Debug_range<mozilla::gfx::PathOp *>
	add	esp, 16					; 00000010H
; Line 373
	push	373					; 00000175H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 374
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 376
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 377
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop
; Line 378
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 380
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 381
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 382
	push	0
	push	0
	call	__CxxThrowException@8
; Line 383
	mov	eax, $LN13@Uninit_cop
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 384
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:
; Line 385
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 371
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 372
	push	372					; 00000174H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PBUPathOp@gfx@mozilla@@@std@@YAXPBUPathOp@gfx@mozilla@@0PB_WI@Z ; std::_Debug_range<mozilla::gfx::PathOp const *>
	add	esp, 16					; 00000010H
; Line 373
	push	373					; 00000175H
	push	OFFSET ??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Debug_pointer@UPathOp@gfx@mozilla@@@std@@YAXPAUPathOp@gfx@mozilla@@PB_WI@Z ; std::_Debug_pointer<mozilla::gfx::PathOp>
	add	esp, 12					; 0000000cH
; Line 374
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 376
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 377
	jmp	SHORT $LN6@Uninit_cop
$LN5@Uninit_cop:
	mov	ecx, DWORD PTR __Dest$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_cop:
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Uninit_cop
; Line 378
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
	jmp	SHORT $LN5@Uninit_cop
$LN4@Uninit_cop:
	jmp	SHORT $LN10@Uninit_cop
__catch$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 380
	jmp	SHORT $LN3@Uninit_cop
$LN2@Uninit_cop:
	mov	eax, DWORD PTR __Next$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Next$[ebp], eax
$LN3@Uninit_cop:
	mov	ecx, DWORD PTR __Next$[ebp]
	cmp	ecx, DWORD PTR __Dest$[ebp]
	je	SHORT $LN1@Uninit_cop
; Line 381
	mov	edx, DWORD PTR __Next$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
	jmp	SHORT $LN2@Uninit_cop
$LN1@Uninit_cop:
; Line 382
	push	0
	push	0
	call	__CxxThrowException@8
; Line 383
	mov	eax, $LN13@Uninit_cop
	ret	0
$LN10@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1
$LN13@Uninit_cop:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z$1:
; Line 384
	mov	eax, DWORD PTR __Dest$[ebp]
$LN9@Uninit_cop:
; Line 385
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::forward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV31@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Debug_range2@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 570
	push	ebp
	mov	ebp, esp
	push	esi
; Line 571
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN3@Debug_rang
; Line 573
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 574
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Debug_pointer@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PB_WI@Z ; std::_Debug_pointer<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 575
	mov	ecx, DWORD PTR __Last$[ebp]
	cmp	ecx, DWORD PTR __First$[ebp]
	jae	SHORT $LN3@Debug_rang
; Line 576
	mov	esi, esp
	mov	edx, DWORD PTR __Line$[ebp]
	push	edx
	mov	eax, DWORD PTR __File$[ebp]
	push	eax
	push	OFFSET ??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Debug_rang:
; Line 578
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_range2@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@@Z PROC ; std::_Iter_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@@Z ENDP ; std::_Iter_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z PROC ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ENDP ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PBX@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PBX@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPBX@Z PROC ; std::allocator<std::_List_node<void const *,void *> >::destroy<void const *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PBX@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPBX@Z ENDP ; std::allocator<std::_List_node<void const *,void *> >::destroy<void const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAXAAU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z PROC ; std::allocator<std::_List_node<void const *,void *> >::destroy<std::_List_node<void const *,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ENDP ; std::allocator<std::_List_node<void const *,void *> >::destroy<std::_List_node<void const *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 482
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 484
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Val_type<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@U123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp>,mozilla::gfx::PathOp>
	add	esp, 24					; 00000018H
; Line 485
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@UPathOp@gfx@mozilla@@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z PROC	; std::allocator<char>::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ENDP	; std::allocator<char>::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
tv73 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z PROC ; std::allocator<char>::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv73[ebp], ecx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv73[ebp], 0
$LN4@construct:
	mov	edx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T3[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ENDP ; std::allocator<char>::construct<char *,char * &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z PROC ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp &>
	add	esp, 4
	mov	ecx, 7
	mov	esi, eax
	mov	edi, DWORD PTR $T2[ebp]
	rep movsd
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 414
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 416
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
	add	esp, 20					; 00000014H
; Line 417
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z PROC ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 288
	push	ebp
	mov	ebp, esp
; Line 289
	mov	eax, DWORD PTR __Dest$[ebp]
	mov	ecx, DWORD PTR __Src$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 290
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 291
	pop	ebp
	ret	0
??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z ENDP ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 414
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 416
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PBUPathOp@gfx@mozilla@@PAU234@@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::allocator<mozilla::gfx::PathOp> >
	add	esp, 20					; 00000014H
; Line 417
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z PROC ; std::_Unchecked<mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ENDP ; std::_Unchecked<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Iter$ = 8						; size = 12
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 264
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 265
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Unchecked
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Iter$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 266
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Iter$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<wchar_t,std::back_insert_iterator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id
	call	DWORD PTR __imp_??0id@locale@std@@QAE@I@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::back_insert_iterator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 4
___formal$ = 28						; size = 1
??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Uninit_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 585
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 591
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR __Next$[ebp], eax
; Line 593
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 594
	jmp	SHORT $LN6@Uninit_fil
$LN5@Uninit_fil:
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, 1
	mov	DWORD PTR __Count$[ebp], ecx
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, 4
	mov	DWORD PTR __First$[ebp], edx
$LN6@Uninit_fil:
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN4@Uninit_fil
; Line 595
	mov	eax, DWORD PTR __Pval$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@ABV12@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@ABV21@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::construct<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &>
	jmp	SHORT $LN5@Uninit_fil
$LN4@Uninit_fil:
	jmp	SHORT $LN10@Uninit_fil
__catch$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0:
; Line 597
	jmp	SHORT $LN3@Uninit_fil
$LN2@Uninit_fil:
	mov	edx, DWORD PTR __Next$[ebp]
	add	edx, 4
	mov	DWORD PTR __Next$[ebp], edx
$LN3@Uninit_fil:
	mov	eax, DWORD PTR __Next$[ebp]
	cmp	eax, DWORD PTR __First$[ebp]
	je	SHORT $LN1@Uninit_fil
; Line 598
	mov	ecx, DWORD PTR __Next$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	jmp	SHORT $LN2@Uninit_fil
$LN1@Uninit_fil:
; Line 599
	push	0
	push	0
	call	__CxxThrowException@8
; Line 600
	mov	eax, $LN13@Uninit_fil
	ret	0
$LN10@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN9@Uninit_fil
$LN13@Uninit_fil:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN9@Uninit_fil:
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Val_type<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 645
	push	ebp
	mov	ebp, esp
; Line 646
	xor	eax, eax
; Line 647
	pop	ebp
	ret	0
??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Val_type<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2344
	push	ebp
	mov	ebp, esp
$LN2@Copy_backw:
; Line 2345
	mov	eax, DWORD PTR __First$[ebp]
	cmp	eax, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_backw
; Line 2346
	mov	ecx, DWORD PTR __Last$[ebp]
	sub	ecx, 4
	mov	DWORD PTR __Last$[ebp], ecx
	mov	edx, DWORD PTR __Dest$[ebp]
	sub	edx, 4
	mov	DWORD PTR __Dest$[ebp], edx
	mov	eax, DWORD PTR __Last$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Dest$[ebp]
	mov	DWORD PTR [edx], ecx
	jmp	SHORT $LN2@Copy_backw
$LN1@Copy_backw:
; Line 2347
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2348
	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$_Fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z PROC ; std::_Fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2598
	push	ebp
	mov	ebp, esp
; Line 2599
	jmp	SHORT $LN3@Fill
$LN2@Fill:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Fill:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Fill
; Line 2600
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __First$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Fill
$LN4@Fill:
; Line 2601
	pop	ebp
	ret	0
??$_Fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ENDP ; std::_Fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z PROC ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 280
	push	ebp
	mov	ebp, esp
; Line 281
	mov	eax, DWORD PTR __Src$[ebp]
; Line 282
	pop	ebp
	ret	0
??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ENDP ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__File$ = 16						; size = 4
__Line$ = 20						; size = 4
??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Iter_cat@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@@Z ; std::_Iter_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Line$[ebp]
	push	ecx
	mov	edx, DWORD PTR __File$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range2@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WIUrandom_access_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 20					; 00000014H
; Line 585
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninit_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAAAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAPAV10@PAV10@@Z ; std::_Rechecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PBX@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPBX@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PBX@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPBX@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PBX@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPBX@Z ; std::allocator<std::_List_node<void const *,void *> >::destroy<void const *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PBX@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPBX@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 4
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::destroy<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z PROC ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ENDP ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPAU?$_List_node@PBXPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPAU?$_List_node@PBXPAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ; std::allocator<std::_List_node<void const *,void *> >::destroy<std::_List_node<void const *,void *> *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPAU?$_List_node@PBXPAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z PROC ; std::_Ptr_cat<float,float>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ENDP ; std::_Ptr_cat<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 89
	push	ebp
	mov	ebp, esp
; Line 90
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@PAVDrawEventRecorderPrivate@gfx@mozilla@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAVDrawEventRecorderPrivate@gfx@mozilla@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z PROC ; std::_Ptr_cat<mozilla::gfx::DrawEventRecorderPrivate *,mozilla::gfx::DrawEventRecorderPrivate *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@PAVDrawEventRecorderPrivate@gfx@mozilla@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ENDP ; std::_Ptr_cat<mozilla::gfx::DrawEventRecorderPrivate *,mozilla::gfx::DrawEventRecorderPrivate *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninitialized_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 492
	push	ebp
	mov	ebp, esp
; Line 495
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	call	??$_Uninit_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 496
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z PROC ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z ENDP ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z
_TEXT	SEGMENT
__Ans$ = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
___formal$ = 32						; size = 4
___formal$ = 36						; size = 4
___formal$ = 40						; size = 1
??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z PROC ; std::_Debug_range2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 561
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 562
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
	mov	BYTE PTR __Ans$[ebp], al
; Line 563
	mov	cl, BYTE PTR __Ans$[ebp]
	mov	BYTE PTR __Ans$[ebp], cl
; Line 564
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z ENDP ; std::_Debug_range2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 80
	push	ebp
	mov	ebp, esp
; Line 81
	jmp	SHORT $LN3@Destroy_ra
$LN2@Destroy_ra:
	mov	eax, DWORD PTR __First$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], eax
$LN3@Destroy_ra:
	mov	ecx, DWORD PTR __First$[ebp]
	cmp	ecx, DWORD PTR __Last$[ebp]
	je	SHORT $LN4@Destroy_ra
; Line 82
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@UPathOp@gfx@mozilla@@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::destroy<mozilla::gfx::PathOp>
	jmp	SHORT $LN2@Destroy_ra
$LN4@Destroy_ra:
; Line 83
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 728
	push	ebp
	mov	ebp, esp
; Line 730
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z ; std::allocator<char>::destroy<char *>
; Line 731
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z PROC ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z ; std::allocator<char>::construct<char *,char * &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ENDP ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAPAD@std@@YAAAPADAAPAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAD@std@@YAAAPADAAPAD@Z PROC		; std::forward<char * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAPAD@std@@YAAAPADAAPAD@Z ENDP		; std::forward<char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
___formal$ = 36						; size = 1
??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC ; std::_Distance2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 732
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 733
	jmp	SHORT $LN3@Distance2
$LN2@Distance2:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
$LN3@Distance2:
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator!=
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Distance2
; Line 734
	mov	edx, DWORD PTR __Off$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [ecx], eax
	jmp	SHORT $LN2@Distance2
$LN1@Distance2:
; Line 735
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z PROC ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 407
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	cl, BYTE PTR __Cat$[ebp]
	mov	BYTE PTR [eax], cl
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 408
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iter_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Iter_cat:
	DD	1
	DD	$LN4@Iter_cat
$LN4@Iter_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Iter_cat
$LN3@Iter_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@ABU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@ABU345@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UPathOp@gfx@mozilla@@ABU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@ABU345@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z ; std::forward<mozilla::gfx::PathOp const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?construct@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU345@@Z ; std::allocator<mozilla::gfx::PathOp>::construct
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UPathOp@gfx@mozilla@@ABU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@ABU345@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z PROC ; std::forward<mozilla::gfx::PathOp const &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z ENDP ; std::forward<mozilla::gfx::PathOp const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@AAU345@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@AAU345@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 720
	push	ebp
	mov	ebp, esp
; Line 723
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ; std::allocator<mozilla::gfx::PathOp>::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
; Line 724
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@AAU345@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z PROC ; std::forward<mozilla::gfx::PathOp &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\type_traits
; Line 1504
	push	ebp
	mov	ebp, esp
; Line 1505
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1506
	pop	ebp
	ret	0
??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z ENDP ; std::forward<mozilla::gfx::PathOp &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 424
	push	ebp
	mov	ebp, esp
; Line 427
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	call	??$_Uninit_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 428
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Uninitialized_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2043
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 2044
	jmp	SHORT $LN3@Copy_impl
$LN2@Copy_impl:
	mov	eax, DWORD PTR __Dest$[ebp]
	add	eax, 28					; 0000001cH
	mov	DWORD PTR __Dest$[ebp], eax
	mov	ecx, DWORD PTR __First$[ebp]
	add	ecx, 28					; 0000001cH
	mov	DWORD PTR __First$[ebp], ecx
$LN3@Copy_impl:
	mov	edx, DWORD PTR __First$[ebp]
	cmp	edx, DWORD PTR __Last$[ebp]
	je	SHORT $LN1@Copy_impl
; Line 2045
	mov	ecx, 7
	mov	esi, DWORD PTR __First$[ebp]
	mov	edi, DWORD PTR __Dest$[ebp]
	rep movsd
	jmp	SHORT $LN2@Copy_impl
$LN1@Copy_impl:
; Line 2046
	mov	eax, DWORD PTR __Dest$[ebp]
; Line 2047
	pop	edi
	pop	esi
	pop	ebp
	ret	0
??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z PROC ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 444
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 446
	mov	al, BYTE PTR __Cat$[ebp]
; Line 447
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ENDP ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PBUPathOp@gfx@mozilla@@PAU234@@Z
_TEXT	SEGMENT
__Cat$ = -5						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PBUPathOp@gfx@mozilla@@PAU234@@Z PROC ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 455
	mov	al, BYTE PTR __Cat$[ebp]
; Line 456
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ptr_cat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Ptr_cat:
	DD	1
	DD	$LN4@Ptr_cat
$LN4@Ptr_cat:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Ptr_cat
$LN3@Ptr_cat:
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PBUPathOp@gfx@mozilla@@PAU234@@Z ENDP ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?8UPathOp@gfx@mozilla@@U012@@std@@YA_NABV?$allocator@UPathOp@gfx@mozilla@@@0@0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$?8UPathOp@gfx@mozilla@@U012@@std@@YA_NABV?$allocator@UPathOp@gfx@mozilla@@@0@0@Z PROC ; std::operator==<mozilla::gfx::PathOp,mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 660
	push	ebp
	mov	ebp, esp
; Line 661
	mov	al, 1
; Line 662
	pop	ebp
	ret	0
??$?8UPathOp@gfx@mozilla@@U012@@std@@YA_NABV?$allocator@UPathOp@gfx@mozilla@@@0@0@Z ENDP ; std::operator==<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?8V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z PROC ; std::operator==<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 892
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 893
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
	push	eax
	call	??$?8UPathOp@gfx@mozilla@@U012@@std@@YA_NABV?$allocator@UPathOp@gfx@mozilla@@@0@0@Z ; std::operator==<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
; Line 894
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?8V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ENDP ; std::operator==<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
tv67 = -44						; size = 4
tv148 = -40						; size = 4
tv147 = -36						; size = 4
tv144 = -32						; size = 4
tv143 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Dest$ = 32						; size = 4
__Al$ = 36						; size = 4
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 424
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 427
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Dest$[ebp]
	push	ecx
	call	??$_Unchecked@PAUPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@@Z ; std::_Unchecked<mozilla::gfx::PathOp *>
	add	esp, 4
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv144[ebp], eax
	mov	eax, DWORD PTR tv144[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv147[ebp], eax
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPBUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv148[ebp], eax
	mov	eax, DWORD PTR tv148[ebp]
	push	eax
	call	??$_Uninit_copy@PBUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PBU123@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninit_copy<mozilla::gfx::PathOp const *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	push	ecx
	lea	edx, DWORD PTR __Dest$[ebp]
	push	edx
	call	??$_Rechecked@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAAAPAUPathOp@gfx@mozilla@@AAPAU123@PAU123@@Z ; std::_Rechecked<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 428
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VPathRecording@gfx@mozilla@@@@CAXPAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?forget@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_temp$ = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?forget@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@XZ PROC ; RefPtr<mozilla::gfx::PathRecording>::forget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 214
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 215
	mov	DWORD PTR _temp$[ebp], 0
; Line 216
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swap@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAEXAAPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::swap
; Line 217
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::PathRecording>::already_AddRefed<mozilla::gfx::PathRecording>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@forget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@forget:
	DD	1
	DD	$LN6@forget
$LN6@forget:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@forget
$LN5@forget:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?forget@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@XZ ENDP ; RefPtr<mozilla::gfx::PathRecording>::forget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?swap@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAEXAAPAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_aRhs$ = 8						; size = 4
?swap@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAEXAAPAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::swap, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _aRhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 206
	mov	edx, DWORD PTR _aRhs$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAEXAAPAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathRecording>::RefPtr<mozilla::gfx::PathRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathRecording>::RefPtr<mozilla::gfx::PathRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::PathRecording>::~RefPtr<mozilla::gfx::PathRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VPathRecording@gfx@mozilla@@@?$RefPtr@VPathRecording@gfx@mozilla@@@@SAXPAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::AddRefTraits<mozilla::gfx::PathRecording>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::PathRecording>::~RefPtr<mozilla::gfx::PathRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$Forward@AAW4FillRule@gfx@mozilla@@@mozilla@@YAAAW4FillRule@gfx@0@AAW4120@@Z
_TEXT	SEGMENT
_aX$ = 8						; size = 4
??$Forward@AAW4FillRule@gfx@mozilla@@@mozilla@@YAAAW4FillRule@gfx@0@AAW4120@@Z PROC ; mozilla::Forward<enum mozilla::gfx::FillRule &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\move.h
; Line 213
	push	ebp
	mov	ebp, esp
; Line 214
	mov	eax, DWORD PTR _aX$[ebp]
; Line 215
	pop	ebp
	ret	0
??$Forward@AAW4FillRule@gfx@mozilla@@@mozilla@@YAAAW4FillRule@gfx@0@AAW4120@@Z ENDP ; mozilla::Forward<enum mozilla::gfx::FillRule &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$Forward@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@mozilla@@YAAAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAV12@@Z
_TEXT	SEGMENT
_aX$ = 8						; size = 4
??$Forward@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@mozilla@@YAAAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAV12@@Z PROC ; mozilla::Forward<std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\move.h
; Line 213
	push	ebp
	mov	ebp, esp
; Line 214
	mov	eax, DWORD PTR _aX$[ebp]
; Line 215
	pop	ebp
	ret	0
??$Forward@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@mozilla@@YAAAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAV12@@Z ENDP ; mozilla::Forward<std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$Forward@AAV?$RefPtr@VPath@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VPath@gfx@mozilla@@@@AAV1@@Z
_TEXT	SEGMENT
_aX$ = 8						; size = 4
??$Forward@AAV?$RefPtr@VPath@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VPath@gfx@mozilla@@@@AAV1@@Z PROC ; mozilla::Forward<RefPtr<mozilla::gfx::Path> &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\move.h
; Line 213
	push	ebp
	mov	ebp, esp
; Line 214
	mov	eax, DWORD PTR _aX$[ebp]
; Line 215
	pop	ebp
	ret	0
??$Forward@AAV?$RefPtr@VPath@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VPath@gfx@mozilla@@@@AAV1@@Z ENDP ; mozilla::Forward<RefPtr<mozilla::gfx::Path> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??1_System_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_System_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
	call	??0_System_error_category@std@@QAE@XZ	; std::_System_error_category::_System_error_category
	push	OFFSET ??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_System_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_System_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??1_Iostream_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A ; std::_Error_objects<int>::_Iostream_object
	call	??0_Iostream_error_category@std@@QAE@XZ	; std::_Iostream_error_category::_Iostream_error_category
	push	OFFSET ??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Iostream_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Iostream_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$yd	SEGMENT
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object'', COMDAT
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??1_Generic_error_category@std@@UAE@XZ
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ
text$di	SEGMENT
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	push	OFFSET ??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ; `dynamic atexit destructor for 'std::_Error_objects<int>::_Generic_object''
	call	_atexit
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::_Error_objects<int>::_Generic_object''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Al$ = 12						; size = 4
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z PROC ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 380
	push	ebp
	mov	ebp, esp
; Line 381
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
; Line 382
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ENDP ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPAV10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPAV10@@Z PROC ; std::_Allocate<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 1073741823	; 3fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPAV10@@Z ENDP ; std::_Allocate<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory
; Line 633
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 635
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Val_type@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Val_type<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninit_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 24					; 00000018H
; Line 636
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00@Z PROC ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2365
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2367
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 16					; 00000010H
; Line 2368
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00@Z ENDP ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z PROC ; std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2621
	push	ebp
	mov	ebp, esp
; Line 2622
	push	2622					; 00000a3eH
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Debug_range@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0PB_WI@Z ; std::_Debug_range<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 16					; 00000010H
; Line 2623
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Unchecked@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@@Z ; std::_Unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 4
	push	eax
	call	??$_Fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::_Fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 2624
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ENDP ; std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z PROC ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ENDP ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@$$CBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z PROC ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ENDP ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 365
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 367
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 368
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 359
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 360
	mov	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
; Line 362
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 306
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Pvector$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Parg$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
; Line 307
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 153
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 157
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	esi, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	ecx, DWORD PTR __Off$[ebp]
	lea	edx, DWORD PTR [edx+ecx*4]
	cmp	DWORD PTR [eax+8], edx
	jae	$LN2@operator
$LN1@operator:
; Line 159
	mov	esi, esp
	push	159					; 0000009fH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 160
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	160					; 000000a0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BNG@JIGEKGDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR __Off$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
; Line 172
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEAAV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@HPBV32@ABV32@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PBX@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PBX@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPBX@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PBX@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPBX@Z ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PBX@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPBX@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@PBX@std@@YAPAPBXAAPBX@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PBX@std@@YAPAPBXAAPBX@Z PROC		; std::addressof<void const *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@PBX@std@@YAPAPBXAAPBX@Z ENDP		; std::addressof<void const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z PROC ; std::_Allocate<std::_Container_proxy>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ENDP ; std::_Allocate<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Ptr_cat<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PBXPAX@std@@@1@PAPAU?$_List_node@PBXPAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<void const *,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<void const *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 124
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@UPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@IPAU123@@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@IPAU123@@Z PROC ; std::_Allocate<mozilla::gfx::PathOp>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], 153391689	; 09249249H
	ja	SHORT $LN1@Allocate
	imul	eax, DWORD PTR __Count$[ebp], 28
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@UPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@IPAU123@@Z ENDP ; std::_Allocate<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@MM@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAM0@Z ; std::_Ptr_cat<float,float>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@PAVDrawEventRecorderPrivate@gfx@mozilla@@PAV123@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::DrawEventRecorderPrivate *,mozilla::gfx::DrawEventRecorderPrivate *>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Umove@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Umove@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Umove<mozilla::gfx::PathOp *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1644
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1646
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
; Line 1648
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_move@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_move<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
; Line 1649
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Umove
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Umove:
	DD	1
	DD	$LN4@Umove
$LN4@Umove:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Umove
$LN3@Umove:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Umove@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Umove<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 605
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
_TEXT	SEGMENT
tv74 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 598
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 600
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], edx
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	DWORD PTR tv74[ebp], 0
$LN4@construct:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 601
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0:
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAX0@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z ; std::_Allocate<std::_Container_proxy>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ PROC	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ENDP	; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,void>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 144
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR __Val2$[ebp]
	push	ecx
	call	??$forward@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@AAV10@@Z ; std::forward<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
; Line 145
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,void>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 92
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]
; Line 87
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 72
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
; Line 75
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 59
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
; Line 62
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 49
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Myval
	add	esp, 4
; Line 51
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 44
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 45
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z
_TEXT	SEGMENT
tv143 = -36						; size = 4
tv140 = -32						; size = 4
tv146 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -14						; size = 1
$T5 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__File$ = 32						; size = 4
__Line$ = 36						; size = 4
??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z PROC ; std::_Debug_range<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 583
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 584
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 8
	movzx	edx, BYTE PTR $T4[ebp]
	push	edx
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv146[ebp], eax
	mov	eax, DWORD PTR tv146[ebp]
	mov	DWORD PTR tv140[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WIUinput_iterator_tag@0@@Z ; std::_Debug_range2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 36					; 00000024H
; Line 585
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z ENDP ; std::_Debug_range<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z PROC ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 96
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
; Line 97
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 22
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 23
	mov	DWORD PTR __Ptr$[ebp], 0
; Line 25
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN4@Allocate
; Line 27
	jmp	SHORT $LN3@Allocate
$LN4@Allocate:
; Line 28
	cmp	DWORD PTR __Count$[ebp], -1
	ja	SHORT $LN1@Allocate
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR __Ptr$[ebp], eax
	cmp	DWORD PTR __Ptr$[ebp], 0
	jne	SHORT $LN3@Allocate
$LN1@Allocate:
; Line 29
	mov	esi, esp
	call	DWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Allocate:
; Line 31
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN6@Allocate:
; Line 32
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 877
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 879
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z ; std::allocator_traits<std::allocator<char> >::destroy<char *>
	add	esp, 8
; Line 880
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAPAD@std@@YAAAPADAAPAD@Z	; std::forward<char * &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z ; std::allocator_traits<std::allocator<char> >::construct<char *,char * &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?pointer_to@?$pointer_traits@PBUPathOp@gfx@mozilla@@@std@@SAPBUPathOp@gfx@mozilla@@ABU345@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PBUPathOp@gfx@mozilla@@@std@@SAPBUPathOp@gfx@mozilla@@ABU345@@Z PROC ; std::pointer_traits<mozilla::gfx::PathOp const *>::pointer_to, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 233
	push	ebp
	mov	ebp, esp
; Line 234
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z ; std::addressof<mozilla::gfx::PathOp const >
	add	esp, 4
; Line 235
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PBUPathOp@gfx@mozilla@@@std@@SAPBUPathOp@gfx@mozilla@@ABU345@@Z ENDP ; std::pointer_traits<mozilla::gfx::PathOp const *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z
_TEXT	SEGMENT
tv138 = -36						; size = 4
tv135 = -32						; size = 4
tv141 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Off$ = 32						; size = 4
??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z PROC ; std::_Distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 765
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 766
	lea	eax, DWORD PTR __First$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	??$_Iter_cat@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@@Z ; std::_Iter_cat<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 8
	mov	dl, BYTE PTR [eax]
	movzx	eax, dl
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv138[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Distance2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
	add	esp, 32					; 00000020H
; Line 767
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ PROC ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::~pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ ENDP ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::~pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 345
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
; Line 346
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@ABUPathOp@gfx@mozilla@@@std@@YAABUPathOp@gfx@mozilla@@ABU123@@Z ; std::forward<mozilla::gfx::PathOp const &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UPathOp@gfx@mozilla@@ABU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@ABU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 868
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 872
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	call	??$forward@AAUPathOp@gfx@mozilla@@@std@@YAAAUPathOp@gfx@mozilla@@AAU123@@Z ; std::forward<mozilla::gfx::PathOp &>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAXAAV?$allocator@UPathOp@gfx@mozilla@@@1@PAUPathOp@gfx@mozilla@@AAU345@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
	add	esp, 12					; 0000000cH
; Line 873
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z PROC ; std::addressof<mozilla::gfx::PathOp const >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 92
	push	ebp
	mov	ebp, esp
; Line 95
	mov	eax, DWORD PTR __Val$[ebp]
; Line 96
	pop	ebp
	ret	0
??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z ENDP ; std::addressof<mozilla::gfx::PathOp const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<mozilla::gfx::PathOp *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1636
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1638
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
; Line 1640
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Uninitialized_copy@PAUPathOp@gfx@mozilla@@PAU123@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_copy<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 16					; 00000010H
; Line 1641
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ucopy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@Ucopy:
	DD	1
	DD	$LN4@Ucopy
$LN4@Ucopy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Ucopy
$LN3@Ucopy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z PROC ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 2064
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 2066
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	call	??$_Ptr_cat@UPathOp@gfx@mozilla@@U123@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUPathOp@gfx@mozilla@@0@Z ; std::_Ptr_cat<mozilla::gfx::PathOp,mozilla::gfx::PathOp>
	add	esp, 8
	mov	BYTE PTR $T1[ebp], al
	movzx	edx, BYTE PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 16					; 00000010H
; Line 2067
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z ENDP ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?9V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z PROC ; std::operator!=<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 900
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 901
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ; std::operator==<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 902
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ENDP ; std::operator!=<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z
_TEXT	SEGMENT
tv71 = -56						; size = 4
tv142 = -52						; size = 4
tv139 = -48						; size = 4
tv145 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
__Alval$ = -21						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 12
__Last$ = 20						; size = 12
__Ptr$ = 32						; size = 4
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1636
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 1638
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
; Line 1640
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv145[ebp], eax
	mov	ecx, DWORD PTR tv145[ebp]
	mov	DWORD PTR tv139[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T2[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@PAUPathOp@gfx@mozilla@@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@std@@YAPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@0@0PAU123@AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >,mozilla::gfx::PathOp *,std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv71[ebp], eax
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T4[ebp]
; Line 1641
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Ucopy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
	npad	1
$LN10@Ucopy:
	DD	1
	DD	$LN9@Ucopy
$LN9@Ucopy:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN7@Ucopy
$LN7@Ucopy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z$2:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 371
	push	ebp
	mov	ebp, esp
; Line 372
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
	add	esp, 4
; Line 373
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRef@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::AddRef, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 368
	push	ebp
	mov	ebp, esp
; Line 369
	mov	eax, DWORD PTR _aPtr$[ebp]
	push	eax
	call	?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsAddRefHelper
	add	esp, 4
; Line 370
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRef@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEXABV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEXABV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Compat, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 236
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 238
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@Compat
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN3@Compat
$LN1@Compat:
; Line 240
	mov	esi, esp
	push	240					; 000000f0H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@HINDPMBP@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@Compat
	xor	ecx, ecx
	jne	SHORT $LN6@Compat
$LN5@Compat:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@Compat
	int	3
$LN6@Compat:
	mov	esi, esp
	push	0
	push	241					; 000000f1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1OO@FHLBLNLK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Compat:
; Line 243
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEXABV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 211
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 204
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEXABV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Compat
; Line 205
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 206
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 117
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
; Line 120
	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 121
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 101
	mov	esi, esp
	push	101					; 00000065H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@EJDKCLKB@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	102					; 00000066H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PG@INBDMFAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 28					; 0000001cH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
; Line 114
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 90
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 91
	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEABUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PBUPathOp@gfx@mozilla@@@std@@SAPBUPathOp@gfx@mozilla@@ABU345@@Z ; std::pointer_traits<mozilla::gfx::PathOp const *>::pointer_to
	add	esp, 4
; Line 92
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEABUPathOp@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEABUPathOp@gfx@mozilla@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 65
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jb	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	ja	SHORT $LN2@operator
$LN1@operator:
; Line 72
	mov	esi, esp
	push	72					; 00000048H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EG@FOHJJHAC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	73					; 00000049H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1PE@HJGPOFJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 87
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEABUPathOp@gfx@mozilla@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 60
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 62
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parg$ = 8						; size = 4
__Pvector$ = 12						; size = 4
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 47
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parg$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 48
	mov	edx, DWORD PTR __Pvector$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@UPathOp@gfx@mozilla@@HPBU345@ABU345@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,mozilla::gfx::PathOp,int,mozilla::gfx::PathOp const *,mozilla::gfx::PathOp const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aOther$ = 8						; size = 4
??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z PROC ; already_AddRefed<mozilla::gfx::PathBuilder>::already_AddRefed<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilderRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aOther$[ebp]
	call	?take@?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAEPAVPathBuilderRecording@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z ENDP ; already_AddRefed<mozilla::gfx::PathBuilder>::already_AddRefed<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilderRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAEPAVPathBuilderRecording@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAEPAVPathBuilderRecording@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAEPAVPathBuilderRecording@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::already_AddRefed<mozilla::gfx::PathBuilderRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::already_AddRefed<mozilla::gfx::PathBuilderRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@CAXPAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ
_TEXT	SEGMENT
$T1 = -20						; size = 4
_temp$ = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::forget, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 214
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 215
	mov	DWORD PTR _temp$[ebp], 0
; Line 216
	lea	eax, DWORD PTR _temp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?swap@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAEXAAPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::swap
; Line 217
	mov	ecx, DWORD PTR _temp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::already_AddRefed<mozilla::gfx::PathBuilderRecording>
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 218
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@forget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN7@forget:
	DD	1
	DD	$LN6@forget
$LN6@forget:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@forget
$LN5@forget:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::forget
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?swap@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAEXAAPAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_this$ = -4						; size = 4
_aRhs$ = 8						; size = 4
?swap@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAEXAAPAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::swap, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 205
	mov	eax, DWORD PTR _aRhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 206
	mov	edx, DWORD PTR _aRhs$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
; Line 207
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [edx], eax
; Line 208
	mov	esp, ebp
	pop	ebp
	ret	4
?swap@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAEXAAPAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::RefPtr<mozilla::gfx::PathBuilderRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::RefPtr<mozilla::gfx::PathBuilderRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ PROC ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VPathBuilderRecording@gfx@mozilla@@@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@SAXPAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::AddRefTraits<mozilla::gfx::PathBuilderRecording>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	call	?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilder>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilder>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VPathRecording@gfx@mozilla@@@?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aOther$ = 8						; size = 4
??$?0VPathRecording@gfx@mozilla@@@?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@@Z PROC ; already_AddRefed<mozilla::gfx::Path>::already_AddRefed<mozilla::gfx::Path><mozilla::gfx::PathRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 99
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aOther$[ebp]
	call	?take@?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAEPAVPathRecording@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VPathRecording@gfx@mozilla@@@?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@@Z ENDP ; already_AddRefed<mozilla::gfx::Path>::already_AddRefed<mozilla::gfx::Path><mozilla::gfx::PathRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAEPAVPathRecording@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAEPAVPathRecording@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::PathRecording>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAEPAVPathRecording@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::PathRecording>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ PROC ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ ENDP ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z PROC ; already_AddRefed<mozilla::gfx::PathRecording>::already_AddRefed<mozilla::gfx::PathRecording>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ENDP ; already_AddRefed<mozilla::gfx::PathRecording>::already_AddRefed<mozilla::gfx::PathRecording>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z
_TEXT	SEGMENT
tv129 = -56						; size = 4
tv72 = -52						; size = 4
tv138 = -48						; size = 4
tv147 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
$T5 = -28						; size = 4
_p$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<aArgs_0>$ = 12					; size = 4
_<aArgs_1>$ = 16					; size = 4
_<aArgs_2>$ = 20					; size = 4
??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z PROC ; mozilla::MakeAndAddRef<mozilla::gfx::PathRecording,RefPtr<mozilla::gfx::Path> &,std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &,enum mozilla::gfx::FillRule &>, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 614
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR $T2[ebp], 0
; Line 615
	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@MakeAndAdd
	mov	eax, DWORD PTR _<aArgs_2>$[ebp]
	push	eax
	call	??$Forward@AAW4FillRule@gfx@mozilla@@@mozilla@@YAAAW4FillRule@gfx@0@AAW4120@@Z ; mozilla::Forward<enum mozilla::gfx::FillRule &>
	add	esp, 4
	mov	cl, BYTE PTR [eax]
	movzx	edx, cl
	push	edx
	mov	eax, DWORD PTR _<aArgs_1>$[ebp]
	push	eax
	call	??$Forward@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@mozilla@@YAAAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAV12@@Z ; mozilla::Forward<std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &>
	add	esp, -12				; fffffff4H
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	eax
	call	??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
	mov	DWORD PTR tv147[ebp], eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR tv138[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	edx, DWORD PTR _<aArgs_0>$[ebp]
	push	edx
	call	??$Forward@AAV?$RefPtr@VPath@gfx@mozilla@@@@@mozilla@@YAAAV?$RefPtr@VPath@gfx@mozilla@@@@AAV1@@Z ; mozilla::Forward<RefPtr<mozilla::gfx::Path> &>
	add	esp, 4
	mov	ecx, eax
	call	??B?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator mozilla::gfx::Path *
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z ; mozilla::gfx::PathRecording::PathRecording
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv129[ebp], eax
	jmp	SHORT $LN4@MakeAndAdd
$LN3@MakeAndAdd:
	mov	DWORD PTR tv129[ebp], 0
$LN4@MakeAndAdd:
	mov	ecx, DWORD PTR tv129[ebp]
	mov	DWORD PTR $T5[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR $T5[ebp]
	push	edx
	lea	ecx, DWORD PTR _p$[ebp]
	call	??0?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@PAVPathRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathRecording>::RefPtr<mozilla::gfx::PathRecording>
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 616
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	call	?forget@?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::PathRecording>::forget
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _p$[ebp]
	call	??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathRecording>::~RefPtr<mozilla::gfx::PathRecording>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 617
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@MakeAndAdd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@MakeAndAdd:
	DD	1
	DD	$LN12@MakeAndAdd
$LN12@MakeAndAdd:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN10@MakeAndAdd
$LN10@MakeAndAdd:
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$0:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$1:
	mov	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$2:
	lea	ecx, DWORD PTR _p$[ebp]
	jmp	??1?$RefPtr@VPathRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathRecording>::~RefPtr<mozilla::gfx::PathRecording>
__unwindfunclet$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN9@MakeAndAdd
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>
$LN9@MakeAndAdd:
	ret	0
__ehhandler$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z ENDP ; mozilla::MakeAndAddRef<mozilla::gfx::PathRecording,RefPtr<mozilla::gfx::Path> &,std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &,enum mozilla::gfx::FillRule &>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$?0VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPath@gfx@mozilla@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aSmartPtr$ = 8						; size = 4
??$?0VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPath@gfx@mozilla@@@@@Z PROC ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path><mozilla::gfx::Path>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 104
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _aSmartPtr$[ebp]
	call	?take@?$already_AddRefed@VPath@gfx@mozilla@@@@QAEPAVPath@gfx@mozilla@@XZ ; already_AddRefed<mozilla::gfx::Path>::take
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPath@gfx@mozilla@@@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path><mozilla::gfx::Path>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?take@?$already_AddRefed@VPath@gfx@mozilla@@@@QAEPAVPath@gfx@mozilla@@XZ
_TEXT	SEGMENT
_rawPtr$ = -8						; size = 4
_this$ = -4						; size = 4
?take@?$already_AddRefed@VPath@gfx@mozilla@@@@QAEPAVPath@gfx@mozilla@@XZ PROC ; already_AddRefed<mozilla::gfx::Path>::take, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _rawPtr$[ebp], ecx
; Line 117
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], 0
; Line 118
	mov	eax, DWORD PTR _rawPtr$[ebp]
; Line 119
	mov	esp, ebp
	pop	ebp
	ret	0
?take@?$already_AddRefed@VPath@gfx@mozilla@@@@QAEPAVPath@gfx@mozilla@@XZ ENDP ; already_AddRefed<mozilla::gfx::Path>::take
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ PROC	; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\alreadyaddrefed.h
; Line 101
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@already_Ad:
	xor	eax, eax
	jne	SHORT $LN2@already_Ad
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ENDP	; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator!=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 302
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 303
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]
; Line 304
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv146 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	je	$LN2@operator
$LN1@operator:
; Line 289
	mov	esi, esp
	push	289					; 00000121H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DI@MDELDGPI@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 290
	mov	eax, OFFSET ??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	290					; 00000122H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NK@BJPMEIHF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN7@operator
	mov	DWORD PTR tv146[ebp], 1
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	DWORD PTR tv146[ebp], 0
$LN8@operator:
	mov	al, BYTE PTR tv146[ebp]
; Line 299
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 245
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 246
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 247
	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
; Line 248
	lea	ecx, DWORD PTR __Tmp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 249
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 224
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 228
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LN2@operator
$LN1@operator:
; Line 230
	mov	esi, esp
	push	230					; 000000e6H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EA@DOGAGKDH@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 231
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	231					; 000000e7H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NK@LJABKBLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx+8], eax
; Line 241
	mov	eax, DWORD PTR _this$[ebp]
; Line 242
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBEABQBXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBEABQBXXZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator*, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 208
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	test	eax, eax
	je	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN1@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	cmp	edx, DWORD PTR [eax+4]
	jne	$LN2@operator
$LN1@operator:
; Line 210
	mov	esi, esp
	push	210					; 000000d2H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EC@HILJLMMC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl?$AAe@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 211
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN5@operator
	xor	ecx, ecx
	jne	SHORT $LN6@operator
$LN5@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN6@operator
	int	3
$LN6@operator:
	mov	esi, esp
	push	0
	push	211					; 000000d3H
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1NI@GGDPCAJH@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@operator:
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Myval
	add	esp, 4
; Line 221
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBEABQBXXZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_Unchecked, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 199
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 200
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 201
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@ABU01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_List_node@PBXPAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_List_node@PBXPAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_Mynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 97
	mov	esp, ebp
	pop	ebp
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_List_node@PBXPAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 44
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 45
	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 46
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ
__ehhandler$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@ABU01@@Z PROC ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@ABU01@@Z ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::~_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Iterator012@Ubidirectional_iterator_tag@std@@PBXHPBQBXABQBXU_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>::_Iterator012<std::bidirectional_iterator_tag,void const *,int,void const * const *,void const * const &,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Pval$ = 16						; size = 4
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Ufill, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1746
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1747
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
; Line 1748
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Pval$[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Uninitialized_fill_n@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@IV12@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPBV10@AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Uninitialized_fill_n<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,unsigned int,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
	add	esp, 16					; 00000010H
; Line 1749
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Ptr$[ebp]
	lea	eax, DWORD PTR [eax+edx*4]
; Line 1750
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Ufill
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN5@Ufill:
	DD	1
	DD	$LN4@Ufill
$LN4@Ufill:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Ufill
$LN3@Ufill:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv430 = -96						; size = 4
tv422 = -92						; size = 4
$T2 = -88						; size = 4
$T3 = -84						; size = 12
$T4 = -71						; size = 1
$T5 = -70						; size = 1
$T6 = -69						; size = 1
__Oldend$7 = -68					; size = 4
__Tmp$8 = -60						; size = 4
__Tmp$9 = -48						; size = 4
__Ncopied$10 = -40					; size = 4
__Whereoff$11 = -36					; size = 4
__Newvec$12 = -32					; size = 4
__Capacity$13 = -28					; size = 4
__Off$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Count$ = 24						; size = 4
__Val$ = 28						; size = 4
?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Insert_n, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1653
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 80					; 00000050H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-96]
	mov	ecx, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1657
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN13@Insert_n
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jb	SHORT $LN13@Insert_n
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Where$[ebp+8]
	jae	SHORT $LN14@Insert_n
$LN13@Insert_n:
; Line 1658
	mov	esi, esp
	push	1658					; 0000067aH
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EK@EEHFMKDC@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAn?$AAs?$AAe?$AAr?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@Insert_n:
; Line 1661
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 2
	mov	DWORD PTR __Off$[ebp], edx
; Line 1662
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN12@Insert_n
	jmp	$LN11@Insert_n
$LN12@Insert_n:
; Line 1664
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	$LN10@Insert_n
; Line 1666
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
	sub	eax, esi
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN9@Insert_n
; Line 1667
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Xlen
$LN9@Insert_n:
; Line 1669
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEII@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Grow_to
	mov	DWORD PTR __Capacity$13[ebp], eax
; Line 1670
	mov	eax, DWORD PTR __Capacity$13[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::allocate
	mov	DWORD PTR __Newvec$12[ebp], eax
; Line 1671
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+8]
	sub	eax, DWORD PTR [edx+4]
	sar	eax, 2
	mov	DWORD PTR __Whereoff$11[ebp], eax
; Line 1672
	mov	DWORD PTR __Ncopied$10[ebp], 0
; Line 1674
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 1676
	mov	ecx, DWORD PTR __Val$[ebp]
	push	ecx
	call	??$addressof@$$CBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPBV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@ABV10@@Z ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> const >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Whereoff$11[ebp]
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Ufill
; Line 1677
	mov	eax, DWORD PTR __Ncopied$10[ebp]
	add	eax, 1
	mov	DWORD PTR __Ncopied$10[ebp], eax
; Line 1679
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
; Line 1680
	mov	edx, DWORD PTR __Ncopied$10[ebp]
	add	edx, 1
	mov	DWORD PTR __Ncopied$10[ebp], edx
; Line 1682
	mov	eax, DWORD PTR __Whereoff$11[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	jmp	SHORT $LN17@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0:
; Line 1684
	cmp	DWORD PTR __Ncopied$10[ebp], 1
	jle	SHORT $LN7@Insert_n
; Line 1685
	mov	eax, DWORD PTR __Whereoff$11[ebp]
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR __Newvec$12[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
$LN7@Insert_n:
; Line 1686
	cmp	DWORD PTR __Ncopied$10[ebp], 0
	jle	SHORT $LN6@Insert_n
; Line 1687
	mov	ecx, DWORD PTR __Whereoff$11[ebp]
	mov	edx, DWORD PTR __Newvec$12[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	push	edx
	mov	eax, DWORD PTR __Whereoff$11[ebp]
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
$LN6@Insert_n:
; Line 1688
	mov	eax, DWORD PTR __Capacity$13[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	push	ecx
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::deallocate
; Line 1689
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1690
	mov	eax, $LN26@Insert_n
	ret	0
$LN17@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$1
$LN26@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$1:
; Line 1692
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
	add	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
; Line 1693
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN5@Insert_n
; Line 1695
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
; Line 1697
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::deallocate
$LN5@Insert_n:
; Line 1700
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1701
	mov	edx, DWORD PTR __Capacity$13[ebp]
	mov	eax, DWORD PTR __Newvec$12[ebp]
	lea	ecx, DWORD PTR [eax+edx*4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1702
	mov	eax, DWORD PTR __Count$[ebp]
	mov	ecx, DWORD PTR __Newvec$12[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1703
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newvec$12[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 1705
	jmp	$LN11@Insert_n
$LN10@Insert_n:
; Line 1706
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, DWORD PTR __Where$[ebp+8]
	sar	ecx, 2
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	$LN3@Insert_n
; Line 1708
	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Tmp$9[ebp], eax
; Line 1711
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
; Line 1713
	mov	BYTE PTR __$EHRec$[ebp+12], 3
; Line 1716
	lea	ecx, DWORD PTR __Tmp$9[ebp]
	push	ecx
	call	??$addressof@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@AAV10@@Z ; std::addressof<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	sub	eax, DWORD PTR __Where$[ebp+8]
	sar	eax, 2
	mov	ecx, DWORD PTR __Count$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Ufill@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@PAV32@IPBV32@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Ufill
	jmp	SHORT $LN19@Insert_n
__catch$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$2:
; Line 1719
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR __Count$[ebp]
	lea	ecx, DWORD PTR [edx+eax*4]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	mov	eax, DWORD PTR __Where$[ebp+8]
	lea	ecx, DWORD PTR [eax+edx*4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
; Line 1720
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1721
	mov	eax, $LN28@Insert_n
	ret	0
$LN19@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT __tryend$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$3
$LN28@Insert_n:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
__tryend$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$3:
; Line 1723
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR __Count$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 1724
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Where$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Orphan_range
; Line 1726
	lea	ecx, DWORD PTR __Tmp$9[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	shl	edx, 2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, edx
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	call	??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
; Line 1728
	jmp	SHORT $LN11@Insert_n
$LN3@Insert_n:
; Line 1730
	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Tmp$8[ebp], ecx
; Line 1732
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR __Oldend$7[ebp], eax
; Line 1734
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Oldend$7[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	shl	ecx, 2
	mov	edx, DWORD PTR __Oldend$7[ebp]
	sub	edx, ecx
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PAV21@00@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Umove<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1736
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Orphan_range
; Line 1738
	mov	edx, DWORD PTR __Oldend$7[ebp]
	push	edx
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 2
	mov	ecx, DWORD PTR __Oldend$7[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR __Where$[ebp+8]
	push	edx
	call	??$_Copy_backward@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@PAV12@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@PAV10@00@Z ; std::_Copy_backward<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *>
	add	esp, 12					; 0000000cH
; Line 1740
	lea	eax, DWORD PTR __Tmp$8[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR __Where$[ebp+8]
	lea	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	call	??$fill@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0ABV10@@Z ; std::fill<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> *,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 12					; 0000000cH
$LN11@Insert_n:
; Line 1742
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::begin
	mov	DWORD PTR tv422[ebp], eax
	mov	eax, DWORD PTR tv422[ebp]
	mov	DWORD PTR tv430[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR tv430[ebp]
	call	??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBE?AV01@H@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator+
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN16@Insert_n:
; Line 1743
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@Insert_n
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 96					; 00000060H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
	npad	2
$LN33@Insert_n:
	DD	2
	DD	$LN32@Insert_n
$LN32@Insert_n:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN29@Insert_n
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN30@Insert_n
$LN30@Insert_n:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN29@Insert_n:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$4:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$5:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-100]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Insert_n
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEII@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IBEII@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@@std@@YAXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@0AAU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@0@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv66 = -32						; size = 4
tv89 = -28						; size = 4
$T2 = -24						; size = 4
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
__Count$ = 24						; size = 4
__Val$ = 28						; size = 4
?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::insert, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1333
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1334
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv89[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Insert_n@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@IAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Insert_n
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1335
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::insert
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv66 = -60						; size = 4
tv131 = -56						; size = 4
tv95 = -52						; size = 4
tv133 = -48						; size = 4
$T2 = -44						; size = 12
$T3 = -32						; size = 12
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Count$ = 8						; size = 4
__Val$ = 12						; size = 4
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1321
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1322
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::clear
; Line 1323
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::begin
	mov	DWORD PTR tv133[ebp], eax
	mov	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv95[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	mov	edx, DWORD PTR tv95[ebp]
	push	edx
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv131[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@IABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::insert
	mov	DWORD PTR tv66[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
; Line 1324
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::assign
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1CME@JIAKHOAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAu?$AAn?$AAc@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1024
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1025
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@PAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@PBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1026
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	sar	eax, 2
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ PROC ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QBEIXZ ENDP ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::_Wrap_alloc<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z PROC ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 480
	push	ebp
	mov	ebp, esp
; Line 481
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	push	0
	call	??$_Fn@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@_Alloc_max_size@std@@SAIHABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@1@@Z ; std::_Alloc_max_size::_Fn<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >
	add	esp, 8
; Line 482
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@@std@@SAIABU?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@Z ENDP ; std::allocator_traits<std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@XZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@std@@SAIABV?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 1073741823				; 3fffffffH
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@ABV32@@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@YAPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@0@IPAV10@@Z ; std::_Allocate<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAEXPAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Init@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Buckets$ = 8						; size = 4
?_Init@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXI@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Init, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 1005
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1006
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Buckets$[ebp]
	shl	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?assign@?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEXIABV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::assign
; Line 1007
	mov	edx, DWORD PTR __Buckets$[ebp]
	sub	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], edx
; Line 1008
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Buckets$[ebp]
	mov	DWORD PTR [ecx+32], edx
; Line 1009
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Init@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXI@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Hashval, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 997
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 998
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBEIABQBX@Z ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
	mov	ecx, DWORD PTR _this$[ebp]
	and	eax, DWORD PTR [ecx+28]
	mov	DWORD PTR __Num$[ebp], eax
; Line 999
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	cmp	eax, DWORD PTR __Num$[ebp]
	ja	SHORT $LN1@Hashval
; Line 1000
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	shr	edx, 1
	add	edx, 1
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, edx
	mov	DWORD PTR __Num$[ebp], eax
$LN1@Hashval:
; Line 1001
	mov	eax, DWORD PTR __Num$[ebp]
; Line 1002
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Hashval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z
_TEXT	SEGMENT
$T2 = -36						; size = 4
$T3 = -32						; size = 4
__Plist$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Plist_arg$ = 8					; size = 12
__Bucket$ = 20						; size = 4
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Erase_bucket, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 951
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 952
	lea	eax, DWORD PTR __Plist$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Plist_arg$[ebp]
	call	?_Unchecked@?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_Unchecked
; Line 953
	lea	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@Erase_buck
; Line 954
	lea	ecx, DWORD PTR __Plist$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Erase_buck
; Line 956
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	DWORD PTR [eax], esi
; Line 957
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
	mov	esi, DWORD PTR [eax]
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
	mov	DWORD PTR [eax], esi
; Line 959
	jmp	SHORT $LN3@Erase_buck
$LN4@Erase_buck:
; Line 960
	lea	ecx, DWORD PTR __Plist$[ebp]
	call	??F?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator--
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR __Bucket$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
	mov	DWORD PTR [eax], esi
$LN3@Erase_buck:
	jmp	SHORT $LN2@Erase_buck
$LN5@Erase_buck:
; Line 961
	lea	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@Erase_buck
; Line 962
	lea	ecx, DWORD PTR __Plist$[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
	mov	esi, DWORD PTR [eax]
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	DWORD PTR [eax], esi
$LN2@Erase_buck:
; Line 963
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Plist_arg$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Erase_buck
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN12@Erase_buck:
	DD	1
	DD	$LN11@Erase_buck
$LN11@Erase_buck:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN9@Erase_buck
$LN9@Erase_buck:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z$0:
	lea	ecx, DWORD PTR __Plist_arg$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Erase_bucket
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
$T1 = -20						; size = 4
__Ans$2 = -12						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_End, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 930
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 931
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
	push	eax
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	ecx, eax
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@End
; Line 932
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@End
; Line 933
	jmp	SHORT $LN3@End
$LN2@End:
; Line 935
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Ans$2[ebp], edx
; Line 936
	lea	ecx, DWORD PTR __Ans$2[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@End:
; Line 938
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@End
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN7@End:
	DD	1
	DD	$LN6@End
$LN6@End:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN5@End
$LN5@End:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_End
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Bucket$ = 12						; size = 4
?_Begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 920
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 921
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 922
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 910
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 911
	mov	eax, DWORD PTR __Bucket$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator[]
; Line 912
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Vec_hi@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_hi
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Bucket$ = 8						; size = 4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 900
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 901
	mov	eax, DWORD PTR __Bucket$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??A?$vector@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@U?$_Wrap_alloc@V?$allocator@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@@std@@@2@@std@@QAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@1@I@Z ; std::vector<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>,std::_Wrap_alloc<std::allocator<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0> > > >::operator[]
; Line 902
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Vec_lo@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEAAV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Vec_lo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z
_TEXT	SEGMENT
tv206 = -136						; size = 4
tv209 = -132						; size = 4
tv204 = -128						; size = 4
tv208 = -124						; size = 4
tv198 = -120						; size = 4
tv164 = -116						; size = 4
tv196 = -112						; size = 4
tv181 = -108						; size = 4
$T2 = -104						; size = 4
$T3 = -100						; size = 12
$T4 = -88						; size = 12
$T5 = -76						; size = 12
$T6 = -64						; size = 12
$T7 = -52						; size = 4
$T8 = -48						; size = 4
__First$9 = -40						; size = 4
__Where$10 = -28					; size = 4
__Bucket$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::equal_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 784
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 124				; 0000007cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-136]
	mov	ecx, 31					; 0000001fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 785
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Hashval
	mov	DWORD PTR __Bucket$[ebp], eax
; Line 786
	mov	ecx, DWORD PTR __Bucket$[ebp]
	push	ecx
	lea	edx, DWORD PTR __Where$10[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Begin
	jmp	SHORT $LN9@equal_rang
$LN8@equal_rang:
; Line 787
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
$LN9@equal_rang:
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T8[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_End
	push	eax
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator!=
	movzx	edx, al
	test	edx, edx
	je	$LN7@equal_rang
; Line 788
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator*
	push	eax
	call	?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN6@equal_rang
; Line 790
	mov	edx, DWORD PTR __Where$10[ebp]
	mov	DWORD PTR __First$9[ebp], edx
	jmp	SHORT $LN5@equal_rang
$LN4@equal_rang:
; Line 791
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator++
$LN5@equal_rang:
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_End@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_End
	push	eax
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@equal_rang
; Line 792
	lea	ecx, DWORD PTR __Where$10[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBEABQBXXZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator*
	push	eax
	call	?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@equal_rang
; Line 793
	jmp	SHORT $LN3@equal_rang
$LN2@equal_rang:
; Line 794
	jmp	SHORT $LN4@equal_rang
$LN3@equal_rang:
	lea	edx, DWORD PTR __Where$10[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$9[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base0>::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@equal_rang
; Line 795
	jmp	SHORT $LN7@equal_rang
$LN1@equal_rang:
; Line 796
	mov	ecx, DWORD PTR __Where$10[ebp]
	push	ecx
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
	mov	DWORD PTR tv181[ebp], eax
	mov	eax, DWORD PTR tv181[ebp]
	mov	DWORD PTR tv196[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv196[ebp]
	push	ecx
	mov	edx, DWORD PTR __First$9[ebp]
	push	edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	mov	DWORD PTR tv198[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv198[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,void>
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN10@equal_rang
$LN6@equal_rang:
; Line 798
	jmp	$LN8@equal_rang
$LN7@equal_rang:
; Line 799
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end
	mov	DWORD PTR tv208[ebp], eax
	mov	edx, DWORD PTR tv208[ebp]
	mov	DWORD PTR tv204[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR tv204[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end
	mov	DWORD PTR tv209[ebp], eax
	mov	edx, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv206[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv206[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V01@X@?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@$$QAV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@1@0@Z ; std::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >::pair<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > ><std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,void>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN10@equal_rang:
; Line 800
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@equal_rang
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 136				; 00000088H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN22@equal_rang:
	DD	2
	DD	$LN21@equal_rang
$LN21@equal_rang:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN18@equal_rang
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN19@equal_rang
$LN19@equal_rang:
	DB	95					; 0000005fH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN18@equal_rang:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$0:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$1:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$3:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z$4:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-132]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::equal_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEXXZ PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 716
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 717
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$list@PBXV?$allocator@PBX@std@@@std@@QAEXXZ ; std::list<void const *,std::allocator<void const *> >::clear
; Line 718
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Init@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXI@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Init
; Line 719
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z
_TEXT	SEGMENT
tv169 = -120						; size = 4
tv172 = -116						; size = 4
tv168 = -112						; size = 4
tv176 = -108						; size = 4
tv166 = -104						; size = 4
tv163 = -100						; size = 4
tv65 = -96						; size = 4
$T2 = -92						; size = 4
$T3 = -88						; size = 12
$T4 = -76						; size = 4
$T5 = -72						; size = 4
$T6 = -68						; size = 4
$T7 = -64						; size = 4
__Num$ = -56						; size = 4
__Where$ = -44						; size = 24
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Keyval$ = 8						; size = 4
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 707
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 708
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?equal_range@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@2@ABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::equal_range
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 709
	mov	DWORD PTR __Num$[ebp], 0
; Line 710
	lea	edx, DWORD PTR __Num$[ebp]
	push	edx
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T7[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv163[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T6[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv166[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	call	??$_Distance@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@I@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0AAI@Z ; std::_Distance<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >,unsigned int>
	add	esp, 28					; 0000001cH
; Line 711
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp+12]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR tv176[ebp]
	mov	DWORD PTR tv168[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Where$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv172[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
	mov	DWORD PTR tv169[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
; Line 712
	mov	ecx, DWORD PTR __Num$[ebp]
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 713
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@erase
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@erase:
	DD	2
	DD	$LN12@erase
$LN12@erase:
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN9@erase
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN10@erase
$LN10@erase:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	0
$LN9@erase:
	DB	95					; 0000005fH
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$pair@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@V12@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$1:
	mov	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z$3:
	mov	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z
_TEXT	SEGMENT
tv233 = -124						; size = 4
tv232 = -120						; size = 4
tv229 = -116						; size = 4
tv228 = -112						; size = 4
tv147 = -108						; size = 4
tv216 = -104						; size = 4
tv242 = -100						; size = 4
tv211 = -96						; size = 4
tv238 = -92						; size = 4
tv206 = -88						; size = 4
tv203 = -84						; size = 4
tv153 = -80						; size = 4
$T2 = -76						; size = 4
$T3 = -72						; size = 4
$T4 = -68						; size = 12
$T5 = -56						; size = 4
$T6 = -52						; size = 12
$T7 = -40						; size = 12
$T8 = -25						; size = 1
$T9 = -24						; size = 4
$T10 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__First$ = 12						; size = 12
__Last$ = 24						; size = 12
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 691
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 692
	push	692					; 000002b4H
	push	OFFSET ??_C@_1IK@IMDFCBHM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T10[ebp], esp
	lea	eax, DWORD PTR __Last$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv153[ebp], eax
	mov	ecx, DWORD PTR tv153[ebp]
	mov	DWORD PTR tv203[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T9[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv206[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	??$_Debug_range@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@@std@@YAXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@0@0PB_WI@Z ; std::_Debug_range<std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > > >
	add	esp, 32					; 00000020H
; Line 693
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::begin
	mov	DWORD PTR tv238[ebp], eax
	mov	ecx, DWORD PTR tv238[ebp]
	mov	DWORD PTR tv211[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR tv211[ebp]
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@erase
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end
	mov	DWORD PTR tv242[ebp], eax
	mov	eax, DWORD PTR tv242[ebp]
	mov	DWORD PTR tv216[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 2
	mov	DWORD PTR $T2[ebp], ecx
	mov	edx, DWORD PTR tv216[ebp]
	push	edx
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@erase
	mov	DWORD PTR tv147[ebp], 1
	jmp	SHORT $LN8@erase
$LN7@erase:
	mov	DWORD PTR tv147[ebp], 0
$LN8@erase:
	mov	cl, BYTE PTR tv147[ebp]
	mov	BYTE PTR $T8[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T2[ebp]
	and	edx, 2
	je	SHORT $LN17@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
$LN17@erase:
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	SHORT $LN18@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
$LN18@erase:
	movzx	ecx, BYTE PTR $T8[ebp]
	test	ecx, ecx
	je	SHORT $LN2@erase
; Line 695
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEXXZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::clear
; Line 696
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::begin
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN5@erase
; Line 698
	jmp	$LN3@erase
$LN2@erase:
; Line 700
	lea	ecx, DWORD PTR __Last$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator!=
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN1@erase
; Line 701
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T5[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
	mov	DWORD PTR tv228[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
	mov	DWORD PTR tv229[ebp], eax
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN2@erase
$LN1@erase:
; Line 702
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	edx, DWORD PTR __First$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv232[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
	mov	DWORD PTR tv233[ebp], eax
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 4
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN5@erase
$LN3@erase:
; Line 704
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __First$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Last$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
$LN5@erase:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$0:
	lea	ecx, DWORD PTR __Last$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$1:
	lea	ecx, DWORD PTR __First$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$2:
	mov	ecx, DWORD PTR $T10[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$4:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN14@erase
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
$LN14@erase:
	ret	0
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z$5:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 2
	je	$LN16@erase
	and	DWORD PTR $T2[ebp], -3			; fffffffdH
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
$LN16@erase:
	ret	0
__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@0@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
tv173 = -72						; size = 4
tv171 = -68						; size = 4
tv170 = -64						; size = 4
tv168 = -60						; size = 4
tv166 = -56						; size = 4
tv165 = -52						; size = 4
$T2 = -48						; size = 4
$T3 = -44						; size = 12
$T4 = -32						; size = 4
$T5 = -28						; size = 4
$T6 = -24						; size = 4
__Bucket$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Plist$ = 12						; size = 12
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 683
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 684
	lea	ecx, DWORD PTR __Plist$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QBEABQBXXZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator*
	push	eax
	call	?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Hashval@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IBEIABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Hashval
	mov	DWORD PTR __Bucket$[ebp], eax
; Line 686
	mov	eax, DWORD PTR __Bucket$[ebp]
	push	eax
	sub	esp, 12					; 0000000cH
	mov	esi, esp
	mov	DWORD PTR $T6[ebp], esp
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR __Plist$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv165[ebp], eax
	push	esi
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv168[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Erase_bucket@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@IAEXV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@I@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Erase_bucket
; Line 687
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	edx, DWORD PTR __Plist$[ebp]
	push	edx
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv170[ebp], eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::erase
	mov	DWORD PTR tv171[ebp], eax
	mov	ecx, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv173[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv173[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Plist$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 688
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$0:
	lea	ecx, DWORD PTR __Plist$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$4:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
_TEXT	SEGMENT
tv130 = -48						; size = 4
tv128 = -44						; size = 4
tv95 = -40						; size = 4
$T2 = -36						; size = 4
$T3 = -32						; size = 12
$T4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 464
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 465
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T4[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv95[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Make_iter
	mov	DWORD PTR tv128[ebp], eax
	mov	edx, DWORD PTR tv128[ebp]
	mov	DWORD PTR tv130[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv130[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 466
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V32@@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
tv80 = -40						; size = 4
tv65 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 459
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 460
	mov	eax, DWORD PTR __Where$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Make_iter
	mov	DWORD PTR tv65[ebp], eax
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv80[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR tv80[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 461
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z$0:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Make_iter
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 449
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 450
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::_Unchecked_end
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 451
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 430
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::end
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 431
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ PROC ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 420
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ; std::list<void const *,std::allocator<void const *> >::begin
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR $T1[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 421
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ENDP ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Cont$ = 8						; size = 4
__Ptr$ = 12						; size = 4
?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z PROC ; std::list<void const *,std::allocator<void const *> >::_Orphan_ptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1913
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1914
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1915
	mov	esi, esp
	mov	ecx, DWORD PTR __Cont$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1916
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ptr
$LN5@Orphan_ptr:
; Line 1917
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ptr
; Line 1919
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN2@Orphan_ptr
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN3@Orphan_ptr
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR __Ptr$[ebp]
	je	SHORT $LN3@Orphan_ptr
$LN2@Orphan_ptr:
; Line 1920
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1921
	jmp	SHORT $LN1@Orphan_ptr
$LN3@Orphan_ptr:
; Line 1923
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1924
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
$LN1@Orphan_ptr:
; Line 1925
	jmp	SHORT $LN5@Orphan_ptr
$LN6@Orphan_ptr:
; Line 1926
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ptr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Orphan_ptr:
	DD	1
	DD	$LN12@Orphan_ptr
$LN12@Orphan_ptr:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ptr
$LN10@Orphan_ptr:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z ENDP ; std::list<void const *,std::allocator<void const *> >::_Orphan_ptr
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$list@PBXV?$allocator@PBX@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PBXV?$allocator@PBX@std@@@std@@QAEXXZ PROC ; std::list<void const *,std::allocator<void const *> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1491
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1493
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Orphan_ptr
; Line 1496
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1497
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 1498
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
; Line 1499
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
; Line 1501
	jmp	SHORT $LN3@clear
$LN2@clear:
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], eax
$LN3@clear:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Pnode$[ebp]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN4@clear
; Line 1503
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Pnext$1[ebp], ecx
; Line 1504
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_buy<void const *,std::allocator<void const *> >::_Freenode
; Line 1505
	jmp	SHORT $LN2@clear
$LN4@clear:
; Line 1506
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PBXV?$allocator@PBX@std@@@std@@QAEXXZ ENDP ; std::list<void const *,std::allocator<void const *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
_TEXT	SEGMENT
tv144 = -48						; size = 4
tv143 = -44						; size = 4
tv141 = -40						; size = 4
tv140 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -24						; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z PROC ; std::list<void const *,std::allocator<void const *> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1457
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-48], eax
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1458
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T4[ebp], esp
	push	0
	push	eax
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<void const *> > >::operator++
	mov	DWORD PTR tv140[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Unlinknode
	mov	DWORD PTR tv141[ebp], eax
	mov	ecx, DWORD PTR tv141[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
; Line 1459
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_buy<void const *,std::allocator<void const *> >::_Freenode
; Line 1460
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR __Where$[ebp]
	push	eax
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR tv143[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Make_iter
	mov	DWORD PTR tv144[ebp], eax
	mov	edx, DWORD PTR $T2[ebp]
	or	edx, 1
	mov	DWORD PTR $T2[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1461
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?erase@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ENDP ; std::list<void const *,std::allocator<void const *> >::erase
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T2 = -24						; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Where$ = 8						; size = 12
?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z PROC ; std::list<void const *,std::allocator<void const *> >::_Unlinknode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1436
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-24], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1438
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	eax, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@Unlinknode
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Where$[ebp+8]
	cmp	ecx, DWORD PTR [eax+4]
	jne	SHORT $LN2@Unlinknode
$LN1@Unlinknode:
; Line 1439
	mov	esi, esp
	push	1439					; 0000059fH
	push	OFFSET ??_C@_1II@KCNBAEMF@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1EE@BBMFLDOC@?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn?$AAg@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Unlinknode:
; Line 1440
	lea	ecx, DWORD PTR __Where$[ebp]
	call	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base12@2@@std@@QBEPAU?$_List_node@PBXPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<void const *> >,std::_Iterator_base12>::_Mynode
	mov	DWORD PTR __Pnode$[ebp], eax
; Line 1441
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_ptr@?$list@PBXV?$allocator@PBX@std@@@std@@QBEXAAV12@PAU?$_List_node@PBXPAX@2@@Z ; std::list<void const *,std::allocator<void const *> >::_Orphan_ptr
; Line 1448
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [esi]
	mov	DWORD PTR [eax], ecx
; Line 1450
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	mov	esi, eax
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	mov	edx, DWORD PTR [esi]
	mov	DWORD PTR [eax], edx
; Line 1452
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1453
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 1454
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z$0:
	lea	ecx, DWORD PTR __Where$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
__ehhandler$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Unlinknode@?$list@PBXV?$allocator@PBX@std@@@std@@QAEPAU?$_List_node@PBXPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ENDP ; std::list<void const *,std::allocator<void const *> >::_Unlinknode
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z PROC ; std::list<void const *,std::allocator<void const *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1162
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1164
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@U_Iterator_base0@2@@2@@Z ENDP ; std::list<void const *,std::allocator<void const *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 12
?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z PROC ; std::list<void const *,std::allocator<void const *> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1157
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1158
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Where$[ebp+8]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
	lea	ecx, DWORD PTR __Where$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1159
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?_Make_iter@?$list@PBXV?$allocator@PBX@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@@Z ENDP ; std::list<void const *,std::allocator<void const *> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unchecked_end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ PROC ; std::list<void const *,std::allocator<void const *> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<void const *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1149
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ENDP ; std::list<void const *,std::allocator<void const *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ PROC ; std::list<void const *,std::allocator<void const *> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1125
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1126
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1127
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ENDP ; std::list<void const *,std::allocator<void const *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ PROC ; std::list<void const *,std::allocator<void const *> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 1115
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1116
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	mov	eax, DWORD PTR [eax]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@std@@QAE@PAU?$_List_node@PBXPAX@1@PBV?$_List_val@U?$_List_simple_types@PBX@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >::_List_iterator<std::_List_val<std::_List_simple_types<void const *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1117
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$list@PBXV?$allocator@PBX@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PBX@std@@@std@@@2@XZ ENDP ; std::list<void const *,std::allocator<void const *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 1
$T2 = -7						; size = 1
$T3 = -6						; size = 1
$T4 = -5						; size = 1
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z PROC ; std::_List_buy<void const *,std::allocator<void const *> >::_Freenode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 846
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 848
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	call	?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<void const *,void *> *>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
; Line 850
	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	call	?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
	add	esp, 4
	push	eax
	call	??$addressof@PAU?$_List_node@PBXPAX@std@@@std@@YAPAPAU?$_List_node@PBXPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<void const *,void *> *>
	add	esp, 4
	push	eax
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAU?$_List_node@PBXPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@PBXPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<std::_List_node<void const *,void *> *>
; Line 852
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	call	?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z ; std::_List_val<std::_List_simple_types<void const *> >::_Myval
	add	esp, 4
	push	eax
	call	??$addressof@PBX@std@@YAPAPBXAAPBX@Z	; std::addressof<void const *>
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PBX@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAPBX@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::destroy<void const *>
; Line 853
	push	1
	mov	eax, DWORD PTR __Pnode$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::deallocate
; Line 854
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Freenode@?$_List_buy@PBXV?$allocator@PBX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@@Z ENDP ; std::_List_buy<void const *,std::allocator<void const *> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 803
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 804
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 805
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_List_alloc@$0A@U?$_List_base_types@PBXV?$allocator@PBX@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<0,std::_List_base_types<void const *,std::allocator<void const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<void const *> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 542
	push	ebp
	mov	ebp, esp
; Line 543
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 8
; Line 544
	pop	ebp
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPBXPAU?$_List_node@PBXPAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<void const *> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 537
	push	ebp
	mov	ebp, esp
; Line 538
	mov	eax, DWORD PTR __Pnode$[ebp]
	add	eax, 4
; Line 539
	pop	ebp
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<void const *> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\list
; Line 532
	push	ebp
	mov	ebp, esp
; Line 533
	mov	eax, DWORD PTR __Pnode$[ebp]
; Line 534
	pop	ebp
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@PBX@std@@@std@@SAAAPAU?$_List_node@PBXPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<void const *> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ; std::allocator<std::_List_node<void const *,void *> >::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<void const *,void *> >::allocator<std::_List_node<void const *,void *> >
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@PBXPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<void const *,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z PROC ; std::allocator<std::_List_node<void const *,void *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAEXPAU?$_List_node@PBXPAX@2@I@Z ENDP ; std::allocator<std::_List_node<void const *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<void const *,void *> >::allocator<std::_List_node<void const *,void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@PBXPAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<void const *,void *> >::allocator<std::_List_node<void const *,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z PROC ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\unordered_set
; Line 40
	push	ebp
	mov	ebp, esp
; Line 41
	mov	eax, DWORD PTR __Val$[ebp]
; Line 42
	pop	ebp
	ret	0
?_Kfn@?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@SAABQBXABQBX@Z ENDP ; std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0>::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z
_TEXT	SEGMENT
tv77 = -12						; size = 4
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Keyval1$ = 8						; size = 4
__Keyval2$ = 12						; size = 4
??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z PROC ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 246
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR __Keyval2$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Keyval1$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE?AU?$equal_to@PBX@2@XZ ; std::_Hash_oper2<0,std::hash<void const *>,std::equal_to<void const *> >::_Getkeyeq
	mov	ecx, eax
	call	??R?$equal_to@PBX@std@@QBE_NABQBX0@Z	; std::equal_to<void const *>::operator()
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv77[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv77[ebp]
; Line 248
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE_NABQBX0@Z ENDP ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBEIABQBX@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBEIABQBX@Z PROC ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Gethash@?$_Hash_oper1@$0A@U?$hash@PBX@std@@@std@@QBE?AU?$hash@PBX@2@XZ ; std::_Hash_oper1<0,std::hash<void const *> >::_Gethash
	mov	ecx, eax
	call	??R?$_Bitwise_hash@PBX@std@@QBEIABQBX@Z	; std::_Bitwise_hash<void const *>::operator()
; Line 243
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBEIABQBX@Z ENDP ; std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE?AU?$equal_to@PBX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE?AU?$equal_to@PBX@2@XZ PROC ; std::_Hash_oper2<0,std::hash<void const *>,std::equal_to<void const *> >::_Getkeyeq, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 209
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 210
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getkeyeq@?$_Hash_oper2@$0A@U?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@QBE?AU?$equal_to@PBX@2@XZ ENDP ; std::_Hash_oper2<0,std::hash<void const *>,std::equal_to<void const *> >::_Getkeyeq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Gethash@?$_Hash_oper1@$0A@U?$hash@PBX@std@@@std@@QBE?AU?$hash@PBX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Gethash@?$_Hash_oper1@$0A@U?$hash@PBX@std@@@std@@QBE?AU?$hash@PBX@2@XZ PROC ; std::_Hash_oper1<0,std::hash<void const *> >::_Gethash, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xhash
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 165
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 166
	mov	esp, ebp
	pop	ebp
	ret	4
?_Gethash@?$_Hash_oper1@$0A@U?$hash@PBX@std@@@std@@QBE?AU?$hash@PBX@2@XZ ENDP ; std::_Hash_oper1<0,std::hash<void const *> >::_Gethash
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$_Bitwise_hash@PBX@std@@QBEIABQBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Keyval$ = 8						; size = 4
??R?$_Bitwise_hash@PBX@std@@QBEIABQBX@Z PROC		; std::_Bitwise_hash<void const *>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 316
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 317
	push	4
	mov	eax, DWORD PTR __Keyval$[ebp]
	push	eax
	call	?_Hash_seq@std@@YAIPBEI@Z		; std::_Hash_seq
	add	esp, 8
; Line 318
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??R?$_Bitwise_hash@PBX@std@@QBEIABQBX@Z ENDP		; std::_Bitwise_hash<void const *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??R?$equal_to@PBX@std@@QBE_NABQBX0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$equal_to@PBX@std@@QBE_NABQBX0@Z PROC		; std::equal_to<void const *>::operator(), COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 183
	mov	esp, ebp
	pop	ebp
	ret	8
??R?$equal_to@PBX@std@@QBE_NABQBX0@Z ENDP		; std::equal_to<void const *>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RemoveStoredObject@DrawEventRecorderPrivate@gfx@mozilla@@QAEXUReferencePtr@23@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
_aObject$ = 8						; size = 8
?RemoveStoredObject@DrawEventRecorderPrivate@gfx@mozilla@@QAEXUReferencePtr@23@@Z PROC ; mozilla::gfx::DrawEventRecorderPrivate::RemoveStoredObject, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\draweventrecorder.h
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 42
	lea	ecx, DWORD PTR _aObject$[ebp]
	call	??BReferencePtr@gfx@mozilla@@QBEPAXXZ	; mozilla::gfx::ReferencePtr::operator void *
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?erase@?$_Hash@V?$_Uset_traits@PBXV?$_Uhash_compare@PBXU?$hash@PBX@std@@U?$equal_to@PBX@2@@std@@V?$allocator@PBX@2@$0A@@std@@@std@@QAEIABQBX@Z ; std::_Hash<std::_Uset_traits<void const *,std::_Uhash_compare<void const *,std::hash<void const *>,std::equal_to<void const *> >,std::allocator<void const *>,0> >::erase
; Line 43
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RemoveStoredObject@DrawEventRecorderPrivate@gfx@mozilla@@QAEXUReferencePtr@23@@Z ENDP ; mozilla::gfx::DrawEventRecorderPrivate::RemoveStoredObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z PROC	; mozilla::gfx::RecordedPathDestruction::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRecordedPathDestruction@gfx@mozilla@@UAEPAXI@Z ENDP	; mozilla::gfx::RecordedPathDestruction::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ PROC	; mozilla::gfx::RecordedPathDestruction::~RecordedPathDestruction, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RecordedEvent@gfx@mozilla@@UAE@XZ	; mozilla::gfx::RecordedEvent::~RecordedEvent
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ ENDP	; mozilla::gfx::RecordedPathDestruction::~RecordedPathDestruction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetObjectRef@RecordedPathDestruction@gfx@mozilla@@UBE?AUReferencePtr@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetObjectRef@RecordedPathDestruction@gfx@mozilla@@UBE?AUReferencePtr@23@XZ PROC ; mozilla::gfx::RecordedPathDestruction::GetObjectRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 819
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [eax+28]
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?GetObjectRef@RecordedPathDestruction@gfx@mozilla@@UBE?AUReferencePtr@23@XZ ENDP ; mozilla::gfx::RecordedPathDestruction::GetObjectRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetName@RecordedPathDestruction@gfx@mozilla@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetName@RecordedPathDestruction@gfx@mozilla@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; mozilla::gfx::RecordedPathDestruction::GetName, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 818
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	push	OFFSET ??_C@_0BB@OFOPLBGI@Path?5Destruction?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetName@RecordedPathDestruction@gfx@mozilla@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; mozilla::gfx::RecordedPathDestruction::GetName
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aPath$ = 8						; size = 4
??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z PROC ; mozilla::gfx::RecordedPathDestruction::RecordedPathDestruction, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 810
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	18					; 00000012H
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RecordedEvent@gfx@mozilla@@IAE@H@Z	; mozilla::gfx::RecordedEvent::RecordedEvent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RecordedPathDestruction@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _aPath$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z	; mozilla::gfx::ReferencePtr::ReferencePtr
; Line 811
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1RecordedEvent@gfx@mozilla@@UAE@XZ	; mozilla::gfx::RecordedEvent::~RecordedEvent
__ehhandler$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z ENDP ; mozilla::gfx::RecordedPathDestruction::RecordedPathDestruction
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRecordedEvent@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GRecordedEvent@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::RecordedEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1RecordedEvent@gfx@mozilla@@UAE@XZ	; mozilla::gfx::RecordedEvent::~RecordedEvent
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GRecordedEvent@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::RecordedEvent::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAXPAM0AAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<float> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IAEXPAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IAEXXZ ; std::vector<float,std::allocator<float> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ PROC	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@M@std@@QAE@XZ		; std::allocator<float>::allocator<float>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QAE@ABV?$allocator@M@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<0,std::_Vec_base_types<float,std::allocator<float> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@M@std@@QAEXPAMI@Z ; std::allocator<float>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAEXPAMI@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@M@std@@QAE@XZ		; std::allocator<float>::allocator<float>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@M@std@@QAEXPAMI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@M@std@@QAEXPAMI@Z PROC		; std::allocator<float>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@M@std@@QAEXPAMI@Z ENDP		; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@M@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@M@std@@QAE@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@M@std@@QAE@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0RecordedEvent@gfx@mozilla@@IAE@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aType$ = 8						; size = 4
??0RecordedEvent@gfx@mozilla@@IAE@H@Z PROC		; mozilla::gfx::RecordedEvent::RecordedEvent, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 231
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RecordedEvent@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _aType$[ebp]
	mov	DWORD PTR [ecx+4], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0RecordedEvent@gfx@mozilla@@IAE@H@Z ENDP		; mozilla::gfx::RecordedEvent::RecordedEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ PROC ; mozilla::gfx::RecordedEvent::GetDestinedDT, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 220
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z	; mozilla::gfx::ReferencePtr::ReferencePtr
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetDestinedDT@RecordedEvent@gfx@mozilla@@UAE?AUReferencePtr@23@XZ ENDP ; mozilla::gfx::RecordedEvent::GetDestinedDT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?OutputSimpleEventInfo@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aStringStream$ = 8					; size = 4
?OutputSimpleEventInfo@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; mozilla::gfx::RecordedEvent::OutputSimpleEventInfo, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 208
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?OutputSimpleEventInfo@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; mozilla::gfx::RecordedEvent::OutputSimpleEventInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?RecordToStream@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aStream$ = 8						; size = 4
?RecordToStream@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z PROC ; mozilla::gfx::RecordedEvent::RecordToStream, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 206
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?RecordToStream@RecordedEvent@gfx@mozilla@@UBEXAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z ENDP ; mozilla::gfx::RecordedEvent::RecordToStream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?PlayEvent@RecordedEvent@gfx@mozilla@@UBEXPAVTranslator@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aTranslator$ = 8					; size = 4
?PlayEvent@RecordedEvent@gfx@mozilla@@UBEXPAVTranslator@23@@Z PROC ; mozilla::gfx::RecordedEvent::PlayEvent, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 204
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?PlayEvent@RecordedEvent@gfx@mozilla@@UBEXPAVTranslator@23@@Z ENDP ; mozilla::gfx::RecordedEvent::PlayEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1RecordedEvent@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1RecordedEvent@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::RecordedEvent::~RecordedEvent, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 200
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7RecordedEvent@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QAE@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RecordedEvent@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::RecordedEvent::~RecordedEvent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??BReferencePtr@gfx@mozilla@@QBEPAXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??BReferencePtr@gfx@mozilla@@QBEPAXXZ PROC		; mozilla::gfx::ReferencePtr::operator void *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 60
	mov	esp, ebp
	pop	ebp
	ret	0
??BReferencePtr@gfx@mozilla@@QBEPAXXZ ENDP		; mozilla::gfx::ReferencePtr::operator void *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aLongPtr$ = 8						; size = 4
??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z PROC		; mozilla::gfx::ReferencePtr::ReferencePtr, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\recordedevent.h
; Line 40
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _aLongPtr$[ebp]
	cdq
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z ENDP		; mozilla::gfx::ReferencePtr::ReferencePtr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GPathRecording@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPathRecording@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::PathRecording::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathRecording@gfx@mozilla@@UAE@XZ	; mozilla::gfx::PathRecording::~PathRecording
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPathRecording@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::PathRecording::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXXZ PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXXZ ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@YAXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@0@Z ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1197
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1199
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::size
	cmp	eax, DWORD PTR __Pos$[ebp]
	ja	$LN1@operator
; Line 1201
	mov	esi, esp
	push	1201					; 000004b1H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1202
	mov	eax, OFFSET ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	eax, eax
	je	SHORT $LN4@operator
	xor	ecx, ecx
	jne	SHORT $LN5@operator
$LN4@operator:
	mov	esi, esp
	push	OFFSET ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	push	OFFSET ??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	2
	call	DWORD PTR __imp___CrtDbgReportW
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
$LN5@operator:
	mov	esi, esp
	push	0
	push	1202					; 000004b2H
	push	OFFSET ??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1BBO@CBMDIAJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?3?$AA?3?$AAg?$AAf?$AAx?$AA?3?$AA?3@
	push	OFFSET ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@operator:
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Pos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*4]
; Line 1210
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	sar	eax, 2
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::~vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::~vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::allocator<mozilla::gfx::DrawEventRecorderPrivate *>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::~_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::~_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >::_Vector_val<std::_Simple_types<mozilla::gfx::DrawEventRecorderPrivate *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::allocator<mozilla::gfx::DrawEventRecorderPrivate *>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::_Wrap_alloc<std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z PROC ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAEXPAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ENDP ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ PROC ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::allocator<mozilla::gfx::DrawEventRecorderPrivate *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@QAE@XZ ENDP ; std::allocator<mozilla::gfx::DrawEventRecorderPrivate *>::allocator<mozilla::gfx::DrawEventRecorderPrivate *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::Path>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::Path>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VPath@gfx@mozilla@@@@CAXPAVPath@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::Path>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::Path>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::Path>::operator mozilla::gfx::Path *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::Path>::operator mozilla::gfx::Path *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::Path>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::Path>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VPath@gfx@mozilla@@@@QAE@PAVPath@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VPath@gfx@mozilla@@@@QAE@PAVPath@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VPath@gfx@mozilla@@@@QAE@PAVPath@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ PROC		; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@SAXPAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::AddRefTraits<mozilla::gfx::Path>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ ENDP		; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetFillRule@PathRecording@gfx@mozilla@@UBE?AW4FillRule@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetFillRule@PathRecording@gfx@mozilla@@UBE?AW4FillRule@23@XZ PROC ; mozilla::gfx::PathRecording::GetFillRule, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 116
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFillRule@PathRecording@gfx@mozilla@@UBE?AW4FillRule@23@XZ ENDP ; mozilla::gfx::PathRecording::GetFillRule
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StreamToSink@PathRecording@gfx@mozilla@@UBEXPAVPathSink@23@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aSink$ = 8						; size = 4
?StreamToSink@PathRecording@gfx@mozilla@@UBEXPAVPathSink@23@@Z PROC ; mozilla::gfx::PathRecording::StreamToSink, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aSink$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?StreamToSink@PathRecording@gfx@mozilla@@UBEXPAVPathSink@23@@Z ENDP ; mozilla::gfx::PathRecording::StreamToSink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetStrokedBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUStrokeOptions@23@ABVMatrix@23@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aStrokeOptions$ = 12					; size = 4
_aTransform$ = 16					; size = 4
?GetStrokedBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUStrokeOptions@23@ABVMatrix@23@@Z PROC ; mozilla::gfx::PathRecording::GetStrokedBounds, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aStrokeOptions$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetStrokedBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABUStrokeOptions@23@ABVMatrix@23@@Z ENDP ; mozilla::gfx::PathRecording::GetStrokedBounds
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aTransform$ = 12					; size = 4
?GetBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z PROC ; mozilla::gfx::PathRecording::GetBounds, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetBounds@PathRecording@gfx@mozilla@@UBE?AU?$RectTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ENDP ; mozilla::gfx::PathRecording::GetBounds
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?StrokeContainsPoint@PathRecording@gfx@mozilla@@UBE_NABUStrokeOptions@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aStrokeOptions$ = 8					; size = 4
_aPoint$ = 12						; size = 4
_aTransform$ = 16					; size = 4
?StrokeContainsPoint@PathRecording@gfx@mozilla@@UBE_NABUStrokeOptions@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z PROC ; mozilla::gfx::PathRecording::StrokeContainsPoint, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aPoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aStrokeOptions$[ebp]
	push	edx
	mov	eax, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?StrokeContainsPoint@PathRecording@gfx@mozilla@@UBE_NABUStrokeOptions@23@ABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ENDP ; mozilla::gfx::PathRecording::StrokeContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?ContainsPoint@PathRecording@gfx@mozilla@@UBE_NABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
_aPoint$ = 8						; size = 4
_aTransform$ = 12					; size = 4
?ContainsPoint@PathRecording@gfx@mozilla@@UBE_NABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z PROC ; mozilla::gfx::PathRecording::ContainsPoint, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _aTransform$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aPoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv68[ebp]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ContainsPoint@PathRecording@gfx@mozilla@@UBE_NABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@ABVMatrix@23@@Z ENDP ; mozilla::gfx::PathRecording::ContainsPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv210 = -200						; size = 4
tv82 = -196						; size = 4
tv208 = -192						; size = 4
tv130 = -188						; size = 4
tv94 = -184						; size = 4
tv201 = -180						; size = 4
tv134 = -176						; size = 4
tv70 = -172						; size = 4
$T2 = -168						; size = 4
$T3 = -164						; size = 4
$T4 = -160						; size = 8
$T5 = -152						; size = 8
$T6 = -144						; size = 8
$T7 = -136						; size = 12
$T8 = -121						; size = 1
$T9 = -120						; size = 12
$T10 = -108						; size = 4
$T11 = -104						; size = 4
$T12 = -100						; size = 4
_newPathOp$13 = -92					; size = 28
_iter$14 = -56						; size = 12
_recording$ = -36					; size = 4
_pathBuilder$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_aTransform$ = 12					; size = 4
_aFillRule$ = 16					; size = 1
?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z PROC ; mozilla::gfx::PathRecording::TransformedCopyToBuilder
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 98
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 188				; 000000bcH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 47					; 0000002fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 99
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFillRule$[ebp]
	push	eax
	mov	ecx, DWORD PTR _aTransform$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	mov	eax, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv201[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv201[ebp]
	push	edx
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T12[ebp]
	call	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
; Line 100
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T10[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T10[ebp], 0
	je	SHORT $LN9@Transforme
	movzx	eax, BYTE PTR _aFillRule$[ebp]
	push	eax
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator mozilla::gfx::PathBuilder *
	push	eax
	mov	ecx, DWORD PTR $T10[ebp]
	call	??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z ; mozilla::gfx::PathBuilderRecording::PathBuilderRecording
	mov	DWORD PTR tv94[ebp], eax
	jmp	SHORT $LN10@Transforme
$LN9@Transforme:
	mov	DWORD PTR tv94[ebp], 0
$LN10@Transforme:
	mov	ecx, DWORD PTR tv94[ebp]
	mov	DWORD PTR $T11[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	edx, DWORD PTR $T11[ebp]
	push	edx
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::RefPtr<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 102
	lea	eax, DWORD PTR _iter$14[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::begin
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	jmp	SHORT $LN6@Transforme
$LN5@Transforme:
	push	0
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE?AV01@H@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator++
	lea	ecx, DWORD PTR $T9[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
$LN6@Transforme:
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::end
	mov	DWORD PTR tv130[ebp], eax
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR tv208[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR tv208[ebp]
	push	ecx
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??9?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator!=
	mov	BYTE PTR $T8[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T8[ebp]
	test	edx, edx
	je	$LN4@Transforme
; Line 103
	lea	ecx, DWORD PTR _newPathOp$13[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 104
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR _newPathOp$13[ebp], eax
; Line 105
	mov	ecx, DWORD PTR _newPathOp$13[ebp]
	cmp	DWORD PTR _sPointCount[ecx*4], 1
	jl	SHORT $LN3@Transforme
; Line 106
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
	add	eax, 4
	push	eax
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	mov	ecx, DWORD PTR _aTransform$[ebp]
	call	??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z ; mozilla::gfx::Matrix::operator*
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newPathOp$13[ebp+4], ecx
	mov	DWORD PTR _newPathOp$13[ebp+8], edx
$LN3@Transforme:
; Line 108
	mov	eax, DWORD PTR _newPathOp$13[ebp]
	cmp	DWORD PTR _sPointCount[eax*4], 2
	jl	SHORT $LN2@Transforme
; Line 109
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR _aTransform$[ebp]
	call	??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z ; mozilla::gfx::Matrix::operator*
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _newPathOp$13[ebp+12], edx
	mov	DWORD PTR _newPathOp$13[ebp+16], eax
$LN2@Transforme:
; Line 111
	mov	ecx, DWORD PTR _newPathOp$13[ebp]
	cmp	DWORD PTR _sPointCount[ecx*4], 3
	jl	SHORT $LN1@Transforme
; Line 112
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??C?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBEPBUPathOp@gfx@mozilla@@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::operator->
	add	eax, 20					; 00000014H
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _aTransform$[ebp]
	call	??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z ; mozilla::gfx::Matrix::operator*
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _newPathOp$13[ebp+20], ecx
	mov	DWORD PTR _newPathOp$13[ebp+24], edx
$LN1@Transforme:
; Line 114
	lea	eax, DWORD PTR _newPathOp$13[ebp]
	push	eax
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::operator->
	add	eax, 16					; 00000010H
	mov	ecx, eax
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
	jmp	$LN5@Transforme
$LN4@Transforme:
; Line 115
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _iter$14[ebp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
; Line 116
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _recording$[ebp]
	call	?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::forget
	mov	DWORD PTR tv82[ebp], eax
	mov	edx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv210[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	eax, DWORD PTR tv210[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::PathBuilder>::already_AddRefed<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilderRecording>
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 117
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@Transforme
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN27@Transforme:
	DD	4
	DD	$LN26@Transforme
$LN26@Transforme:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN21@Transforme
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN22@Transforme
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN23@Transforme
	DD	-92					; ffffffa4H
	DD	28					; 0000001cH
	DD	$LN24@Transforme
$LN24@Transforme:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	112					; 00000070H
	DB	0
$LN23@Transforme:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN22@Transforme:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN21@Transforme:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$0:
	lea	ecx, DWORD PTR $T12[ebp]
	jmp	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$1:
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	jmp	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$2:
	mov	eax, DWORD PTR $T10[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$3:
	lea	ecx, DWORD PTR _recording$[ebp]
	jmp	??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$4:
	lea	ecx, DWORD PTR _iter$14[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$6:
	lea	ecx, DWORD PTR $T7[ebp]
	jmp	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$7:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
__unwindfunclet$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z$8:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN20@Transforme
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
$LN20@Transforme:
	ret	0
__ehhandler$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-200]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?TransformedCopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@ABVMatrix@23@W4FillRule@23@@Z ENDP ; mozilla::gfx::PathRecording::TransformedCopyToBuilder
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv148 = -84						; size = 4
tv81 = -80						; size = 4
tv93 = -76						; size = 4
tv143 = -72						; size = 4
tv155 = -68						; size = 4
tv70 = -64						; size = 4
$T2 = -60						; size = 4
$T3 = -56						; size = 4
$T4 = -52						; size = 4
$T5 = -48						; size = 4
$T6 = -44						; size = 4
_recording$ = -36					; size = 4
_pathBuilder$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_aFillRule$ = 12					; size = 1
?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z PROC ; mozilla::gfx::PathRecording::CopyToBuilder
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 89
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 72					; 00000048H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-84]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??C?$RefPtr@VPath@gfx@mozilla@@@@QBEPAVPath@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::Path>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	movzx	eax, BYTE PTR _aFillRule$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	edx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv155[ebp], eax
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR tv143[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv143[ebp]
	push	ecx
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??$?0VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilder>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T6[ebp]
	call	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
; Line 91
	push	32					; 00000020H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T4[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T4[ebp], 0
	je	SHORT $LN3@CopyToBuil
	movzx	edx, BYTE PTR _aFillRule$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator mozilla::gfx::PathBuilder *
	push	eax
	mov	ecx, DWORD PTR $T4[ebp]
	call	??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z ; mozilla::gfx::PathBuilderRecording::PathBuilderRecording
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN4@CopyToBuil
$LN3@CopyToBuil:
	mov	DWORD PTR tv93[ebp], 0
$LN4@CopyToBuil:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR $T5[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR $T5[ebp]
	push	ecx
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??0?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@PAVPathBuilderRecording@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilderRecording>::RefPtr<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 92
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??C?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QBEPAVPathBuilderRecording@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::operator->
	add	eax, 16					; 00000010H
	mov	ecx, eax
	call	??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::operator=
; Line 93
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _recording$[ebp]
	call	?forget@?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE?AU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::forget
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv148[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	edx, DWORD PTR tv148[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0VPathBuilderRecording@gfx@mozilla@@@?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::PathBuilder>::already_AddRefed<mozilla::gfx::PathBuilder><mozilla::gfx::PathBuilderRecording>
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _recording$[ebp]
	call	??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	call	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 94
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CopyToBuil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 84					; 00000054H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN16@CopyToBuil:
	DD	2
	DD	$LN15@CopyToBuil
$LN15@CopyToBuil:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN12@CopyToBuil
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN13@CopyToBuil
$LN13@CopyToBuil:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN12@CopyToBuil:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$0:
	lea	ecx, DWORD PTR $T6[ebp]
	jmp	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$1:
	lea	ecx, DWORD PTR _pathBuilder$[ebp]
	jmp	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$2:
	mov	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$3:
	lea	ecx, DWORD PTR _recording$[ebp]
	jmp	??1?$RefPtr@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilderRecording>::~RefPtr<mozilla::gfx::PathBuilderRecording>
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$4:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VPathBuilderRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilderRecording>::~already_AddRefed<mozilla::gfx::PathBuilderRecording>
__unwindfunclet$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z$5:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN11@CopyToBuil
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathBuilder>::~already_AddRefed<mozilla::gfx::PathBuilder>
$LN11@CopyToBuil:
	ret	0
__ehhandler$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-84]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CopyToBuilder@PathRecording@gfx@mozilla@@UBE?AU?$already_AddRefed@VPathBuilder@gfx@mozilla@@@@W4FillRule@23@@Z ENDP ; mozilla::gfx::PathRecording::CopyToBuilder
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBackendType@PathRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBackendType@PathRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ PROC ; mozilla::gfx::PathRecording::GetBackendType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 96
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 6
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBackendType@PathRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ ENDP ; mozilla::gfx::PathRecording::GetBackendType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv156 = -64						; size = 4
tv166 = -60						; size = 4
$T2 = -56						; size = 32
$T3 = -24						; size = 4
_i$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1PathRecording@gfx@mozilla@@UAE@XZ PROC		; mozilla::gfx::PathRecording::~PathRecording
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PathRecording@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathRecording@gfx@mozilla@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 81
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN3@PathRecord
$LN2@PathRecord:
	mov	ecx, DWORD PTR _i$4[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$4[ebp], ecx
$LN3@PathRecord:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	?size@?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::size
	cmp	DWORD PTR _i$4[ebp], eax
	jae	SHORT $LN4@PathRecord
; Line 82
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??0ReferencePtr@gfx@mozilla@@QAE@PBX@Z	; mozilla::gfx::ReferencePtr::ReferencePtr
	mov	eax, DWORD PTR _i$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?RemoveStoredObject@DrawEventRecorderPrivate@gfx@mozilla@@QAEXUReferencePtr@23@@Z ; mozilla::gfx::DrawEventRecorderPrivate::RemoveStoredObject
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0RecordedPathDestruction@gfx@mozilla@@QAE@PAVPathRecording@12@@Z ; mozilla::gfx::RecordedPathDestruction::RecordedPathDestruction
	mov	DWORD PTR tv166[ebp], eax
	mov	edx, DWORD PTR tv166[ebp]
	mov	DWORD PTR tv156[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	eax, DWORD PTR tv156[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??A?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAEAAPAVDrawEventRecorderPrivate@gfx@mozilla@@I@Z ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::operator[]
	mov	ecx, DWORD PTR [eax]
	call	?RecordEvent@DrawEventRecorderPrivate@gfx@mozilla@@QAEXABVRecordedEvent@23@@Z ; mozilla::gfx::DrawEventRecorderPrivate::RecordEvent
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ
; Line 84
	jmp	$LN2@PathRecord
$LN4@PathRecord:
; Line 85
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::~vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Path@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Path::~Path
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Path@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Path::~Path
__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	jmp	??1?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::~vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
__unwindfunclet$??1PathRecording@gfx@mozilla@@UAE@XZ$4:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1RecordedPathDestruction@gfx@mozilla@@UAE@XZ
__ehhandler$??1PathRecording@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PathRecording@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PathRecording@gfx@mozilla@@UAE@XZ ENDP		; mozilla::gfx::PathRecording::~PathRecording
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aPath$ = 8						; size = 4
_aOps$ = 12						; size = 16
_aFillRule$ = 28					; size = 1
??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z PROC ; mozilla::gfx::PathRecording::PathRecording, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 91
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Path@gfx@mozilla@@IAE@XZ		; mozilla::gfx::Path::Path
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathRecording@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _aPath$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$RefPtr@VPath@gfx@mozilla@@@@QAE@PAVPath@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	edx, DWORD PTR _aOps$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _aFillRule$[ebp]
	mov	BYTE PTR [eax+32], cl
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0?$vector@PAVDrawEventRecorderPrivate@gfx@mozilla@@V?$allocator@PAVDrawEventRecorderPrivate@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >::vector<mozilla::gfx::DrawEventRecorderPrivate *,std::allocator<mozilla::gfx::DrawEventRecorderPrivate *> >
; Line 92
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _aOps$[ebp]
	call	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$0:
	lea	ecx, DWORD PTR _aOps$[ebp]
	jmp	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1Path@gfx@mozilla@@UAE@XZ		; mozilla::gfx::Path::~Path
__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
__unwindfunclet$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
__ehhandler$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PathRecording@gfx@mozilla@@QAE@PAVPath@12@V?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@W4FillRule@12@@Z ENDP ; mozilla::gfx::PathRecording::PathRecording
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z PROC	; mozilla::gfx::PathBuilderRecording::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathBuilderRecording@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPathBuilderRecording@gfx@mozilla@@UAEPAXI@Z ENDP	; mozilla::gfx::PathBuilderRecording::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1PathBuilderRecording@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1PathBuilderRecording@gfx@mozilla@@UAE@XZ PROC	; mozilla::gfx::PathBuilderRecording::~PathBuilderRecording, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathBuilder@gfx@mozilla@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PathBuilder@gfx@mozilla@@UAE@XZ
__ehhandler$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PathBuilderRecording@gfx@mozilla@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PathBuilderRecording@gfx@mozilla@@UAE@XZ ENDP	; mozilla::gfx::PathBuilderRecording::~PathBuilderRecording
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z
_TEXT	SEGMENT
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Orphan_range, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1764
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1765
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 1766
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1767
	cmp	DWORD PTR __Pnext$[ebp], 0
	je	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:
; Line 1768
	mov	eax, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_ran
; Line 1769
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __First$[ebp]
	jb	SHORT $LN2@Orphan_ran
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR __Last$[ebp]
	cmp	eax, DWORD PTR [edx+8]
	jae	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 1770
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	DWORD PTR __Pnext$[ebp], eax
; Line 1771
	jmp	SHORT $LN1@Orphan_ran
$LN3@Orphan_ran:
; Line 1773
	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [edx]
	call	?_Clrcont@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Clrcont
; Line 1774
	mov	eax, DWORD PTR __Pnext$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
$LN1@Orphan_ran:
; Line 1775
	jmp	SHORT $LN5@Orphan_ran
$LN6@Orphan_ran:
; Line 1776
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Orphan_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN13@Orphan_ran:
	DD	1
	DD	$LN12@Orphan_ran
$LN12@Orphan_ran:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN10@Orphan_ran
$LN10@Orphan_ran:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Orphan_range
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	esi, esp
	push	OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 1755
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1622
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1623
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@Tidy
; Line 1625
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
; Line 1628
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, DWORD PTR [eax+4]
	mov	eax, ecx
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
; Line 1629
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
; Line 1630
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1631
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN2@Tidy:
; Line 1633
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reserve, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1613
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unused_capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Unused_capacity
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@Reserve
; Line 1615
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	sub	esi, eax
	cmp	esi, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Reserve
; Line 1616
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Xlen
$LN1@Reserve:
; Line 1617
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow_to@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEII@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Grow_to
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reallocate
$LN4@Reserve:
; Line 1619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
_TEXT	SEGMENT
$T2 = -31						; size = 1
$T3 = -30						; size = 1
$T4 = -29						; size = 1
__Size$ = -28						; size = 4
__Ptr$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Count$ = 8						; size = 4
?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1587
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 16					; 00000010H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 1588
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::allocate
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 1590
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 1591
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Umove@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Umove<mozilla::gfx::PathOp *>
	jmp	SHORT $LN5@Reallocate
__catch$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$0:
; Line 1593
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
; Line 1594
	push	0
	push	0
	call	__CxxThrowException@8
; Line 1595
	mov	eax, $LN8@Reallocate
	ret	0
$LN5@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$1
$LN8@Reallocate:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z$1:
; Line 1597
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	mov	DWORD PTR __Size$[ebp], eax
; Line 1598
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@Reallocate
; Line 1600
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
; Line 1602
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
$LN1@Reallocate:
; Line 1605
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1606
	imul	edx, DWORD PTR __Count$[ebp], 28
	add	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 1607
	imul	ecx, DWORD PTR __Size$[ebp], 28
	add	ecx, DWORD PTR __Ptr$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 1608
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@Reallocate:
; Line 1609
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Reallocate@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reallocate
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBE_NPBUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
tv76 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBE_NPBUPathOp@gfx@mozilla@@@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1582
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1583
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN3@Inside
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv76[ebp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv76[ebp], 0
$LN4@Inside:
	mov	al, BYTE PTR tv76[ebp]
; Line 1584
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBE_NPBUPathOp@gfx@mozilla@@@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow_to@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEII@Z
_TEXT	SEGMENT
tv73 = -12						; size = 4
__Capacity$ = -8					; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Grow_to@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEII@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Grow_to, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1571
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1572
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::capacity
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1575
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size
	mov	ecx, DWORD PTR __Capacity$[ebp]
	shr	ecx, 1
	sub	eax, ecx
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN4@Grow_to
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	mov	edx, DWORD PTR __Capacity$[ebp]
	shr	edx, 1
	add	edx, DWORD PTR __Capacity$[ebp]
	mov	DWORD PTR tv73[ebp], edx
$LN5@Grow_to:
	mov	eax, DWORD PTR tv73[ebp]
	mov	DWORD PTR __Capacity$[ebp], eax
; Line 1576
	mov	ecx, DWORD PTR __Capacity$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Grow_to
; Line 1577
	mov	edx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Capacity$[ebp], edx
$LN1@Grow_to:
; Line 1578
	mov	eax, DWORD PTR __Capacity$[ebp]
; Line 1579
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Grow_to@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEII@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z
_TEXT	SEGMENT
__Alval$ = -9						; size = 1
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1565
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1566
	lea	eax, DWORD PTR __Alval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
; Line 1567
	lea	ecx, DWORD PTR __Alval$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Last$[ebp]
	push	edx
	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@YAXPAUPathOp@gfx@mozilla@@0AAU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@@Z ; std::_Destroy_range<std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 12					; 0000000cH
; Line 1568
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Destroy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@Destroy:
	DD	1
	DD	$LN4@Destroy
$LN4@Destroy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Destroy
$LN3@Destroy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Buy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1546
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1548
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 1549
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 1551
	cmp	DWORD PTR __Capacity$[ebp], 0
	jne	SHORT $LN4@Buy
; Line 1552
	xor	al, al
	jmp	SHORT $LN6@Buy
	jmp	SHORT $LN3@Buy
$LN4@Buy:
; Line 1553
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size
	cmp	eax, DWORD PTR __Capacity$[ebp]
	jae	SHORT $LN2@Buy
; Line 1554
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Xlen
; Line 1555
	jmp	SHORT $LN3@Buy
$LN2@Buy:
; Line 1557
	mov	eax, DWORD PTR __Capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 1558
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+8], edx
; Line 1559
	imul	eax, DWORD PTR __Capacity$[ebp], 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], eax
$LN3@Buy:
; Line 1561
	mov	al, 1
$LN6@Buy:
; Line 1562
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?clear@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?clear@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1507
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1508
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1509
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
; Line 1510
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+8], eax
; Line 1511
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Idx$3 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1243
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1244
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z ; std::addressof<mozilla::gfx::PathOp const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBE_NPBUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	$LN4@push_back
; Line 1246
	mov	edx, DWORD PTR __Val$[ebp]
	push	edx
	call	??$addressof@$$CBUPathOp@gfx@mozilla@@@std@@YAPBUPathOp@gfx@mozilla@@ABU123@@Z ; std::addressof<mozilla::gfx::PathOp const >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	mov	DWORD PTR __Idx$3[ebp], eax
; Line 1247
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN3@push_back
; Line 1248
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reserve
$LN3@push_back:
; Line 1249
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Orphan_range
; Line 1251
	imul	eax, DWORD PTR __Idx$3[ebp], 28
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+4]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	??$construct@UPathOp@gfx@mozilla@@AAU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@AAU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp &>
; Line 1252
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1254
	jmp	SHORT $LN5@push_back
$LN4@push_back:
; Line 1256
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+12]
	jne	SHORT $LN1@push_back
; Line 1257
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Reserve@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Reserve
$LN1@push_back:
; Line 1258
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_range@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IBEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Orphan_range
; Line 1260
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	??$construct@UPathOp@gfx@mozilla@@ABU123@@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU234@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::construct<mozilla::gfx::PathOp,mozilla::gfx::PathOp const &>
; Line 1261
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	add	edx, 28					; 0000001cH
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], edx
$LN5@push_back:
; Line 1263
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?empty@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv75 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE_NXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1157
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1158
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv75[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv75[ebp]
; Line 1159
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE_NXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1153
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::max_size
; Line 1154
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1147
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1148
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 1149
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1039
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1040
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1041
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::begin, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1029
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1030
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@PAUPathOp@gfx@mozilla@@PBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1031
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Unused_capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Unused_capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Unused_capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1014
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1015
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+8]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 1016
	mov	esp, ebp
	pop	ebp
	ret	0
?_Unused_capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::capacity, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 1009
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1010
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
; Line 1011
	mov	esp, ebp
	pop	ebp
	ret	0
?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
tv316 = -36						; size = 4
$T2 = -32						; size = 1
$T3 = -31						; size = 1
$T4 = -30						; size = 1
$T5 = -29						; size = 1
__Ptr$6 = -28						; size = 4
__Ptr$7 = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 949
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 20					; 00000014H
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 950
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	je	$LN11@operator
; Line 953
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	push	eax
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	push	eax
	call	??$?9V?$allocator@UPathOp@gfx@mozilla@@@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@0@0@Z ; std::operator!=<std::allocator<mozilla::gfx::PathOp>,std::allocator<mozilla::gfx::PathOp> >
	add	esp, 8
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN10@operator
	xor	ecx, ecx
	je	SHORT $LN10@operator
; Line 955
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
; Line 956
	lea	edx, DWORD PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Change_alloc
$LN10@operator:
; Line 959
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 961
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?empty@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE_NXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::empty
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN9@operator
; Line 962
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::clear
	jmp	$LN11@operator
$LN9@operator:
; Line 963
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	cmp	eax, esi
	ja	SHORT $LN7@operator
; Line 966
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __Ptr$7[ebp], eax
; Line 967
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Ptr$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
; Line 968
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	imul	ecx, eax, 28
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	$LN11@operator
$LN7@operator:
; Line 970
	mov	ecx, DWORD PTR _this$[ebp]
	call	?capacity@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::capacity
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	cmp	eax, esi
	ja	SHORT $LN5@operator
; Line 972
	mov	ecx, DWORD PTR _this$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	imul	ecx, eax, 28
	mov	edx, DWORD PTR __Right$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$6[ebp], ecx
; Line 974
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Ptr$6[ebp]
	push	edx
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Copy_impl@PAUPathOp@gfx@mozilla@@PAU123@@std@@YAPAUPathOp@gfx@mozilla@@PAU123@00@Z ; std::_Copy_impl<mozilla::gfx::PathOp *,mozilla::gfx::PathOp *>
	add	esp, 12					; 0000000cH
; Line 975
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR __Ptr$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<mozilla::gfx::PathOp *>
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 977
	jmp	$LN11@operator
$LN5@operator:
; Line 979
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN3@operator
; Line 981
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Destroy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXPAUPathOp@gfx@mozilla@@0@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Destroy
; Line 983
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	sub	eax, DWORD PTR [edx+4]
	cdq
	mov	ecx, 28					; 0000001cH
	idiv	ecx
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
$LN3@operator:
; Line 985
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN11@operator
; Line 986
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 988
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@PAUPathOp@gfx@mozilla@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@PAU234@00@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<mozilla::gfx::PathOp *>
	mov	DWORD PTR tv316[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv316[ebp]
	mov	DWORD PTR [eax+8], ecx
	jmp	SHORT $LN14@operator
__catch$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z$0:
; Line 990
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
; Line 991
	push	0
	push	0
	call	__CxxThrowException@8
; Line 992
	mov	eax, $LN17@operator
	ret	0
$LN14@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN11@operator
$LN17@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
$LN11@operator:
; Line 995
	mov	eax, DWORD PTR _this$[ebp]
$LN13@operator:
; Line 996
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEAAV01@ABV01@@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 944
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 945
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
; Line 946
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::~vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv135 = -44						; size = 4
tv178 = -40						; size = 4
tv175 = -36						; size = 4
$T2 = -32						; size = 4
$T3 = -28						; size = 4
$T4 = -22						; size = 1
$T5 = -21						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 721
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 28					; 0000001cH
	push	ebx
	push	esi
	push	edi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
	mov	ecx, eax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AU12@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 722
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::size
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Buy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAE_NI@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Buy
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@vector
; Line 723
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 725
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	DWORD PTR $T3[ebp], esp
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?end@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::end
	mov	DWORD PTR tv175[ebp], eax
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?begin@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@2@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::begin
	mov	DWORD PTR tv178[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@std@@@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEPAUPathOp@gfx@mozilla@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@@1@0PAU234@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> > > >
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv135[ebp]
	mov	DWORD PTR [ecx+8], edx
	jmp	SHORT $LN5@vector
__catch$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$0:
; Line 727
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@IAEXXZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::_Tidy
; Line 728
	push	0
	push	0
	call	__CxxThrowException@8
; Line 729
	mov	eax, $LN11@vector
	ret	0
$LN5@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN3@vector
$LN11@vector:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN3@vector:
; Line 730
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
__ehhandler$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
; Line 681
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 641
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 642
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 643
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 630
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 632
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 633
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 634
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
; Line 635
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 637
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 623
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> >
; Line 624
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 625
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
; Line 626
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 627
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Change_alloc, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 612
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	4
?_Change_alloc@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@2@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Change_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 607
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 608
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Free_proxy
; Line 609
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::~_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z PROC ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 601
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 603
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Alloc_proxy
; Line 604
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ENDP ; std::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >::_Vector_alloc<0,std::_Vec_base_types<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::~_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::~_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\vector
; Line 480
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 483
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0
; Line 484
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 0
; Line 485
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >::_Vector_val<std::_Simple_types<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAIABV?$allocator@UPathOp@gfx@mozilla@@@2@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::PathOp>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ; std::allocator<mozilla::gfx::PathOp>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 806
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AU12@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AU12@XZ PROC ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SA?AV?$allocator@UPathOp@gfx@mozilla@@@2@ABV32@@Z ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@ABV?$allocator@UPathOp@gfx@mozilla@@@1@@Z ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 780
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QBE?AU12@XZ ENDP ; std::_Wrap_alloc<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SA?AV?$allocator@UPathOp@gfx@mozilla@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SA?AV?$allocator@UPathOp@gfx@mozilla@@@2@ABV32@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 740
	push	ebp
	mov	ebp, esp
; Line 741
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?select_on_container_copy_construction@?$allocator@UPathOp@gfx@mozilla@@@std@@QBE?AV12@XZ ; std::allocator<mozilla::gfx::PathOp>::select_on_container_copy_construction
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 742
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SA?AV?$allocator@UPathOp@gfx@mozilla@@@2@ABV32@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAIABV?$allocator@UPathOp@gfx@mozilla@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAIABV?$allocator@UPathOp@gfx@mozilla@@@2@@Z PROC ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@UPathOp@gfx@mozilla@@@std@@QBEIXZ ; std::allocator<mozilla::gfx::PathOp>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@SAIABV?$allocator@UPathOp@gfx@mozilla@@@2@@Z ENDP ; std::allocator_traits<std::allocator<mozilla::gfx::PathOp> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@UPathOp@gfx@mozilla@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@UPathOp@gfx@mozilla@@@std@@QBEIXZ PROC ; std::allocator<mozilla::gfx::PathOp>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	mov	eax, 153391689				; 09249249H
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@UPathOp@gfx@mozilla@@@std@@QBEIXZ ENDP ; std::allocator<mozilla::gfx::PathOp>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?construct@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU345@@Z
_TEXT	SEGMENT
tv69 = -12						; size = 4
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU345@@Z PROC ; std::allocator<mozilla::gfx::PathOp>::construct, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 593
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	28					; 0000001cH
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@construct
	mov	ecx, 7
	mov	esi, DWORD PTR __Val$[ebp]
	mov	edi, DWORD PTR $T1[ebp]
	rep movsd
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN1@construct
$LN3@construct:
	mov	DWORD PTR tv69[ebp], 0
$LN1@construct:
; Line 594
	pop	edi
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?construct@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@ABU345@@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z PROC ; std::allocator<mozilla::gfx::PathOp>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@UPathOp@gfx@mozilla@@@std@@YAPAUPathOp@gfx@mozilla@@IPAU123@@Z ; std::_Allocate<mozilla::gfx::PathOp>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEPAUPathOp@gfx@mozilla@@I@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z PROC ; std::allocator<mozilla::gfx::PathOp>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@UPathOp@gfx@mozilla@@@std@@QAEXPAUPathOp@gfx@mozilla@@I@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z PROC ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 556
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ PROC	; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@XZ ENDP	; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?select_on_container_copy_construction@?$allocator@UPathOp@gfx@mozilla@@@std@@QBE?AV12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?select_on_container_copy_construction@?$allocator@UPathOp@gfx@mozilla@@@std@@QBE?AV12@XZ PROC ; std::allocator<mozilla::gfx::PathOp>::select_on_container_copy_construction, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 532
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$allocator@UPathOp@gfx@mozilla@@@std@@QAE@ABV01@@Z ; std::allocator<mozilla::gfx::PathOp>::allocator<mozilla::gfx::PathOp>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 534
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?select_on_container_copy_construction@?$allocator@UPathOp@gfx@mozilla@@@std@@QBE?AV12@XZ ENDP ; std::allocator<mozilla::gfx::PathOp>::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 361
	push	ebp
	mov	ebp, esp
; Line 362
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
; Line 363
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsReleaseHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsReleaseHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_aPtr$ = 8						; size = 4
?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsAddRefHelper, COMDAT
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 356
	push	ebp
	mov	ebp, esp
; Line 357
	mov	ecx, DWORD PTR _aPtr$[ebp]
	add	ecx, 4
	call	?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::AddRef
; Line 358
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?AddRefTraitsAddRefHelper@?$RefPtr@VPathBuilder@gfx@mozilla@@@@CAXPAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraitsAddRefHelper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilder>::operator->, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 274
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@operator:
; Line 276
	xor	eax, eax
	jne	SHORT $LN2@operator
; Line 277
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
; Line 278
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilder>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilder>::operator mozilla::gfx::PathBuilder *, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 255
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 256
	mov	ecx, DWORD PTR _this$[ebp]
	call	?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::get
; Line 257
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilder>::operator mozilla::gfx::PathBuilder *
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ PROC ; RefPtr<mozilla::gfx::PathBuilder>::get, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 239
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 241
	mov	esp, ebp
	pop	ebp
	ret	0
?get@?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ENDP ; RefPtr<mozilla::gfx::PathBuilder>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@PAVPathBuilder@gfx@mozilla@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_aRawPtr$ = 8						; size = 4
??0?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@PAVPathBuilder@gfx@mozilla@@@Z PROC ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 87
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _aRawPtr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 88
	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN2@RefPtr
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?AddRef@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::AddRef
	add	esp, 4
$LN2@RefPtr:
; Line 91
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@PAVPathBuilder@gfx@mozilla@@@Z ENDP ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ PROC	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refptr.h
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@RefPtr
; Line 56
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	?Release@?$AddRefTraits@VPathBuilder@gfx@mozilla@@@?$RefPtr@VPathBuilder@gfx@mozilla@@@@SAXPAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::AddRefTraits<mozilla::gfx::PathBuilder>::Release
	add	esp, 4
$LN2@RefPtr:
; Line 58
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ENDP	; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?GetBackendType@PathBuilderRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetBackendType@PathBuilderRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ PROC ; mozilla::gfx::PathBuilderRecording::GetBackendType, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 75
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	al, 6
	mov	esp, ebp
	pop	ebp
	ret	0
?GetBackendType@PathBuilderRecording@gfx@mozilla@@UBE?AW4BackendType@23@XZ ENDP ; mozilla::gfx::PathBuilderRecording::GetBackendType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv128 = -60						; size = 4
tv65 = -56						; size = 4
tv93 = -52						; size = 4
tv134 = -48						; size = 4
tv70 = -44						; size = 4
$T2 = -40						; size = 4
$T3 = -36						; size = 4
$T4 = -32						; size = 4
_path$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ PROC ; mozilla::gfx::PathBuilderRecording::Finish
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 74
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
; Line 75
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv70[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR tv70[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv70[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR tv134[ebp]
	mov	DWORD PTR tv93[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv93[ebp]
	push	edx
	lea	ecx, DWORD PTR _path$[ebp]
	call	??$?0VPath@gfx@mozilla@@@?$RefPtr@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPath@gfx@mozilla@@@@@Z ; RefPtr<mozilla::gfx::Path>::RefPtr<mozilla::gfx::Path><mozilla::gfx::Path>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??$MakeAndAddRef@VPathRecording@gfx@mozilla@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@23@@mozilla@@YA?AU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@AAV?$RefPtr@VPath@gfx@mozilla@@@@AAV?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@AAW4FillRule@gfx@0@@Z ; mozilla::MakeAndAddRef<mozilla::gfx::PathRecording,RefPtr<mozilla::gfx::Path> &,std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> > &,enum mozilla::gfx::FillRule &>
	add	esp, 16					; 00000010H
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv128[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv128[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??$?0VPathRecording@gfx@mozilla@@@?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@$$QAU?$already_AddRefed@VPathRecording@gfx@mozilla@@@@@Z ; already_AddRefed<mozilla::gfx::Path>::already_AddRefed<mozilla::gfx::Path><mozilla::gfx::PathRecording>
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 77
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@Finish
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 60					; 0000003cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN11@Finish:
	DD	1
	DD	$LN10@Finish
$LN10@Finish:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Finish
$LN8@Finish:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$0:
	lea	ecx, DWORD PTR $T4[ebp]
	jmp	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$1:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1?$RefPtr@VPath@gfx@mozilla@@@@QAE@XZ	; RefPtr<mozilla::gfx::Path>::~RefPtr<mozilla::gfx::Path>
__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$2:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$already_AddRefed@VPathRecording@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::PathRecording>::~already_AddRefed<mozilla::gfx::PathRecording>
__unwindfunclet$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ$3:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN7@Finish
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	??1?$already_AddRefed@VPath@gfx@mozilla@@@@QAE@XZ ; already_AddRefed<mozilla::gfx::Path>::~already_AddRefed<mozilla::gfx::Path>
$LN7@Finish:
	ret	0
__ehhandler$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Finish@PathBuilderRecording@gfx@mozilla@@UAE?AU?$already_AddRefed@VPath@gfx@mozilla@@@@XZ ENDP ; mozilla::gfx::PathBuilderRecording::Finish
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?CurrentPoint@PathBuilderRecording@gfx@mozilla@@UBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@XZ PROC ; mozilla::gfx::PathBuilderRecording::CurrentPoint
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 69
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv72[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 70
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CurrentPoint@PathBuilderRecording@gfx@mozilla@@UBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@XZ ENDP ; mozilla::gfx::PathBuilderRecording::CurrentPoint
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Arc@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MMM_N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
?Arc@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MMM_N@Z PROC ; mozilla::gfx::PathBuilderRecording::Arc, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 66
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Arc@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@MMM_N@Z ENDP ; mozilla::gfx::PathBuilderRecording::Arc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv76 = -44						; size = 4
_op$ = -36						; size = 28
_this$ = -4						; size = 4
?Close@PathBuilderRecording@gfx@mozilla@@UAEXXZ PROC	; mozilla::gfx::PathBuilderRecording::Close
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 60
	lea	ecx, DWORD PTR _op$[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 61
	mov	DWORD PTR _op$[ebp], 4
; Line 62
	lea	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
; Line 63
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv76[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Close
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Close:
	DD	1
	DD	$LN4@Close
$LN4@Close:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN3@Close
$LN3@Close:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?Close@PathBuilderRecording@gfx@mozilla@@UAEXXZ ENDP	; mozilla::gfx::PathBuilderRecording::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv78 = -44						; size = 4
_op$ = -36						; size = 28
_this$ = -4						; size = 4
_aCP1$ = 8						; size = 4
_aCP2$ = 12						; size = 4
?QuadraticBezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0@Z PROC ; mozilla::gfx::PathBuilderRecording::QuadraticBezierTo
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 49
	lea	ecx, DWORD PTR _op$[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 50
	mov	DWORD PTR _op$[ebp], 3
; Line 51
	mov	eax, DWORD PTR _aCP1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+4], ecx
	mov	DWORD PTR _op$[ebp+8], edx
; Line 52
	mov	eax, DWORD PTR _aCP2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+12], ecx
	mov	DWORD PTR _op$[ebp+16], edx
; Line 53
	lea	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
; Line 54
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv78[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aCP2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aCP1$[ebp]
	push	edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv78[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@QuadraticB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN5@QuadraticB:
	DD	1
	DD	$LN4@QuadraticB
$LN4@QuadraticB:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN3@QuadraticB
$LN3@QuadraticB:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?QuadraticBezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@0@Z ENDP ; mozilla::gfx::PathBuilderRecording::QuadraticBezierTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv79 = -44						; size = 4
_op$ = -36						; size = 28
_this$ = -4						; size = 4
_aCP1$ = 8						; size = 4
_aCP2$ = 12						; size = 4
_aCP3$ = 16						; size = 4
?BezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@00@Z PROC ; mozilla::gfx::PathBuilderRecording::BezierTo
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	lea	ecx, DWORD PTR _op$[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 38
	mov	DWORD PTR _op$[ebp], 2
; Line 39
	mov	eax, DWORD PTR _aCP1$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+4], ecx
	mov	DWORD PTR _op$[ebp+8], edx
; Line 40
	mov	eax, DWORD PTR _aCP2$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+12], ecx
	mov	DWORD PTR _op$[ebp+16], edx
; Line 41
	mov	eax, DWORD PTR _aCP3$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+20], ecx
	mov	DWORD PTR _op$[ebp+24], edx
; Line 42
	lea	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
; Line 43
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv79[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aCP3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _aCP2$[ebp]
	push	edx
	mov	eax, DWORD PTR _aCP1$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv79[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv79[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@BezierTo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@BezierTo:
	DD	1
	DD	$LN4@BezierTo
$LN4@BezierTo:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN3@BezierTo
$LN3@BezierTo:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?BezierTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@00@Z ENDP ; mozilla::gfx::PathBuilderRecording::BezierTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -44						; size = 4
_op$ = -36						; size = 28
_this$ = -4						; size = 4
_aPoint$ = 8						; size = 4
?LineTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z PROC ; mozilla::gfx::PathBuilderRecording::LineTo
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 27
	lea	ecx, DWORD PTR _op$[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 28
	mov	DWORD PTR _op$[ebp], 1
; Line 29
	mov	eax, DWORD PTR _aPoint$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+4], ecx
	mov	DWORD PTR _op$[ebp+8], edx
; Line 30
	lea	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
; Line 31
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aPoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 32
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@LineTo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@LineTo:
	DD	1
	DD	$LN4@LineTo
$LN4@LineTo:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN3@LineTo
$LN3@LineTo:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?LineTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ENDP ; mozilla::gfx::PathBuilderRecording::LineTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
_TEXT	SEGMENT
tv77 = -44						; size = 4
_op$ = -36						; size = 28
_this$ = -4						; size = 4
_aPoint$ = 8						; size = 4
?MoveTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z PROC ; mozilla::gfx::PathBuilderRecording::MoveTo
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.cpp
; Line 16
	push	ebp
	mov	ebp, esp
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-44]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 17
	lea	ecx, DWORD PTR _op$[ebp]
	call	??0PathOp@gfx@mozilla@@QAE@XZ
; Line 18
	mov	DWORD PTR _op$[ebp], 0
; Line 19
	mov	eax, DWORD PTR _aPoint$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _op$[ebp+4], ecx
	mov	DWORD PTR _op$[ebp+8], edx
; Line 20
	lea	eax, DWORD PTR _op$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_back@?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAEXABUPathOp@gfx@mozilla@@@Z ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::push_back
; Line 21
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$RefPtr@VPathBuilder@gfx@mozilla@@@@QBEPAVPathBuilder@gfx@mozilla@@XZ ; RefPtr<mozilla::gfx::PathBuilder>::operator->
	mov	DWORD PTR tv77[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _aPoint$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv77[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv77[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 22
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@MoveTo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@MoveTo:
	DD	1
	DD	$LN4@MoveTo
$LN4@MoveTo:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN3@MoveTo
$LN3@MoveTo:
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	0
?MoveTo@PathBuilderRecording@gfx@mozilla@@UAEXABU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@23@@Z ENDP ; mozilla::gfx::PathBuilderRecording::MoveTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_aBuilder$ = 8						; size = 4
_aFillRule$ = 12					; size = 1
??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z PROC ; mozilla::gfx::PathBuilderRecording::PathBuilderRecording, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\pathrecording.h
; Line 43
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PathBuilder@gfx@mozilla@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathBuilderRecording@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _aBuilder$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@PAVPathBuilder@gfx@mozilla@@@Z ; RefPtr<mozilla::gfx::PathBuilder>::RefPtr<mozilla::gfx::PathBuilder>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR _aFillRule$[ebp]
	mov	BYTE PTR [edx+12], al
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$vector@UPathOp@gfx@mozilla@@V?$allocator@UPathOp@gfx@mozilla@@@std@@@std@@QAE@XZ ; std::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >::vector<mozilla::gfx::PathOp,std::allocator<mozilla::gfx::PathOp> >
; Line 44
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1PathBuilder@gfx@mozilla@@UAE@XZ
__unwindfunclet$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$RefPtr@VPathBuilder@gfx@mozilla@@@@QAE@XZ ; RefPtr<mozilla::gfx::PathBuilder>::~RefPtr<mozilla::gfx::PathBuilder>
__ehhandler$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PathBuilderRecording@gfx@mozilla@@QAE@PAVPathBuilder@12@W4FillRule@12@@Z ENDP ; mozilla::gfx::PathBuilderRecording::PathBuilderRecording
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0PathOp@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PathOp@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::PathOp::PathOp, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PathOp@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::PathOp::PathOp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GPathBuilder@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPathBuilder@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::PathBuilder::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathBuilder@gfx@mozilla@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPathBuilder@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::PathBuilder::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1PathBuilder@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PathBuilder@gfx@mozilla@@UAE@XZ PROC			; mozilla::gfx::PathBuilder::~PathBuilder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathSink@gfx@mozilla@@UAE@XZ		; mozilla::gfx::PathSink::~PathSink
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PathBuilder@gfx@mozilla@@UAE@XZ ENDP			; mozilla::gfx::PathBuilder::~PathBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0PathBuilder@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PathBuilder@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::PathBuilder::PathBuilder, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0PathSink@gfx@mozilla@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathBuilder@gfx@mozilla@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PathBuilder@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::PathBuilder::PathBuilder
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
tv81 = -28						; size = 4
tv73 = -24						; size = 4
tv67 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_cnt$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::Release, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Release:
; Line 117
	xor	eax, eax
	jne	SHORT $LN3@Release
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	DWORD PTR tv67[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _cnt$[ebp], edx
; Line 128
	cmp	DWORD PTR _cnt$[ebp], 0
	jne	SHORT $LN5@Release
; Line 136
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@Release
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN8@Release
$LN7@Release:
	mov	DWORD PTR tv73[ebp], 0
$LN8@Release:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Release
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN9@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
; Line 138
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@AddRef:
; Line 102
	xor	eax, eax
	jne	SHORT $LN2@AddRef
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@?$RefCounted@VPath@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::Path,1>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GPathSink@gfx@mozilla@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GPathSink@gfx@mozilla@@UAEPAXI@Z PROC		; mozilla::gfx::PathSink::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PathSink@gfx@mozilla@@UAE@XZ		; mozilla::gfx::PathSink::~PathSink
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPathSink@gfx@mozilla@@UAEPAXI@Z ENDP		; mozilla::gfx::PathSink::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0PathSink@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0PathSink@gfx@mozilla@@QAE@XZ PROC			; mozilla::gfx::PathSink::PathSink, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathSink@gfx@mozilla@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0PathSink@gfx@mozilla@@QAE@XZ ENDP			; mozilla::gfx::PathSink::PathSink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1PathSink@gfx@mozilla@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1PathSink@gfx@mozilla@@UAE@XZ PROC			; mozilla::gfx::PathSink::~PathSink, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\2d.h
; Line 498
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PathSink@gfx@mozilla@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ ; mozilla::RefCounted<mozilla::gfx::PathSink>::~RefCounted<mozilla::gfx::PathSink>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1PathSink@gfx@mozilla@@UAE@XZ ENDP			; mozilla::gfx::PathSink::~PathSink
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ PROC ; mozilla::RefCounted<mozilla::gfx::PathSink>::RefCounted<mozilla::gfx::PathSink>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::RefCounted<mozilla::gfx::PathSink,1>
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ ENDP ; mozilla::RefCounted<mozilla::gfx::PathSink>::RefCounted<mozilla::gfx::PathSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ PROC ; mozilla::RefCounted<mozilla::gfx::PathSink>::~RefCounted<mozilla::gfx::PathSink>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 180
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::~RefCounted<mozilla::gfx::PathSink,1>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefCounted@VPathSink@gfx@mozilla@@@mozilla@@QAE@XZ ENDP ; mozilla::RefCounted<mozilla::gfx::PathSink>::~RefCounted<mozilla::gfx::PathSink>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
tv81 = -28						; size = 4
tv73 = -24						; size = 4
tv67 = -20						; size = 4
$T1 = -16						; size = 4
$T2 = -12						; size = 4
_cnt$ = -8						; size = 4
_this$ = -4						; size = 4
?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN3@Release:
; Line 117
	xor	eax, eax
	jne	SHORT $LN3@Release
; Line 119
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, 1
	mov	DWORD PTR tv67[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _cnt$[ebp], edx
; Line 128
	cmp	DWORD PTR _cnt$[ebp], 0
	jne	SHORT $LN5@Release
; Line 136
	cmp	DWORD PTR _this$[ebp], 0
	je	SHORT $LN7@Release
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN8@Release
$LN7@Release:
	mov	DWORD PTR tv73[ebp], 0
$LN8@Release:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR $T1[ebp], ecx
	mov	edx, DWORD PTR $T1[ebp]
	mov	DWORD PTR $T2[ebp], edx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN9@Release
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN5@Release
$LN9@Release:
	mov	DWORD PTR tv81[ebp], 0
$LN5@Release:
; Line 138
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Release@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::AddRef, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 100
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@AddRef:
; Line 102
	xor	eax, eax
	jne	SHORT $LN2@AddRef
; Line 104
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], edx
; Line 112
	mov	esp, ebp
	pop	ebp
	ret	0
?AddRef@?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@QBEXXZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::AddRef
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::~RefCounted<mozilla::gfx::PathSink,1>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 95
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN2@RefCounted:
	xor	eax, eax
	jne	SHORT $LN2@RefCounted
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::~RefCounted<mozilla::gfx::PathSink,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ PROC ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::RefCounted<mozilla::gfx::PathSink,1>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\mozilla\refcounted.h
; Line 94
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$RefCounted@VPathSink@gfx@mozilla@@$00@detail@mozilla@@IAE@XZ ENDP ; mozilla::detail::RefCounted<mozilla::gfx::PathSink,1>::RefCounted<mozilla::gfx::PathSink,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z
_TEXT	SEGMENT
_retPoint$ = -16					; size = 8
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_aPoint$ = 12						; size = 4
??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z PROC ; mozilla::gfx::Matrix::operator*, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\matrix.h
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 53
	lea	ecx, DWORD PTR _retPoint$[ebp]
	call	??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
; Line 55
	mov	eax, DWORD PTR _aPoint$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [eax]
	mulss	xmm0, DWORD PTR [ecx]
	mov	edx, DWORD PTR _aPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [edx+4]
	mulss	xmm1, DWORD PTR [eax+8]
	addss	xmm0, xmm1
	mov	ecx, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [ecx+16]
	movss	DWORD PTR _retPoint$[ebp], xmm0
; Line 56
	mov	edx, DWORD PTR _aPoint$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR [edx]
	mulss	xmm0, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _aPoint$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	movss	xmm1, DWORD PTR [ecx+4]
	mulss	xmm1, DWORD PTR [edx+12]
	addss	xmm0, xmm1
	mov	eax, DWORD PTR _this$[ebp]
	addss	xmm0, DWORD PTR [eax+20]
	movss	DWORD PTR _retPoint$[ebp+4], xmm0
; Line 58
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR _retPoint$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _retPoint$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 59
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@operator
$LN3@operator:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
??DMatrix@gfx@mozilla@@QBE?AU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@12@ABU312@@Z ENDP ; mozilla::gfx::Matrix::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ PROC ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\point.h
; Line 77
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$BasePoint@MU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@U?$CoordTyped@UUnknownUnits@gfx@mozilla@@M@23@@gfx@mozilla@@QAE@XZ ; mozilla::gfx::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@QAE@XZ ENDP ; mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>::PointTyped<mozilla::gfx::UnknownUnits,float>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$BasePoint@MU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@U?$CoordTyped@UUnknownUnits@gfx@mozilla@@M@23@@gfx@mozilla@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$BasePoint@MU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@U?$CoordTyped@UUnknownUnits@gfx@mozilla@@M@23@@gfx@mozilla@@QAE@XZ PROC ; mozilla::gfx::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >, COMDAT
; _this$ = ecx
; File d:\mozilla\gfx\2d\basepoint.h
; Line 28
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movss	xmm0, DWORD PTR __real@00000000
	movss	DWORD PTR [ecx+4], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$BasePoint@MU?$PointTyped@UUnknownUnits@gfx@mozilla@@M@gfx@mozilla@@U?$CoordTyped@UUnknownUnits@gfx@mozilla@@M@23@@gfx@mozilla@@QAE@XZ ENDP ; mozilla::gfx::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >::BasePoint<float,mozilla::gfx::PointTyped<mozilla::gfx::UnknownUnits,float>,mozilla::gfx::CoordTyped<mozilla::gfx::UnknownUnits,float> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_System_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_System_error_category@std@@UAEPAXI@Z PROC		; std::_System_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_System_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_System_error_category@std@@UAEPAXI@Z ENDP		; std::_System_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_System_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_System_error_category@std@@UAE@XZ PROC		; std::_System_error_category::~_System_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_System_error_category@std@@UAE@XZ ENDP		; std::_System_error_category::~_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::_System_error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 614
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 615
	mov	esi, esp
	mov	eax, DWORD PTR __Errval$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@default_er
; Line 616
	call	?generic_category@std@@YAABVerror_category@1@XZ ; std::generic_category
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@default_er
; Line 617
	jmp	SHORT $LN3@default_er
$LN2@default_er:
; Line 618
	call	?system_category@std@@YAABVerror_category@1@XZ ; std::system_category
	push	eax
	mov	edx, DWORD PTR __Errval$[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@default_er:
; Line 619
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::_System_error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_System_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 607
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 608
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Winerror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 609
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 610
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_System_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_System_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_System_error_category@std@@UBEPBDXZ PROC		; std::_System_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 602
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 603
	mov	eax, OFFSET ??_C@_06FHFOAHML@system?$AA@
; Line 604
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_System_error_category@std@@UBEPBDXZ ENDP		; std::_System_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_System_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_System_error_category@std@@QAE@XZ PROC		; std::_System_error_category::_System_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 597
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_System_error_category@std@@6B@
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_System_error_category@std@@QAE@XZ ENDP		; std::_System_error_category::_System_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Iostream_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Iostream_error_category@std@@UAEPAXI@Z PROC	; std::_Iostream_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iostream_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Iostream_error_category@std@@UAEPAXI@Z ENDP	; std::_Iostream_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iostream_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Iostream_error_category@std@@UAE@XZ PROC		; std::_Iostream_error_category::~_Iostream_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Iostream_error_category@std@@UAE@XZ ENDP		; std::_Iostream_error_category::~_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Iostream_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 584
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 585
	cmp	DWORD PTR __Errcode$[ebp], 1
	jne	SHORT $LN2@message
; Line 586
	push	OFFSET ??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@message
; Line 587
	jmp	SHORT $LN3@message
$LN2@message:
; Line 588
	mov	ecx, DWORD PTR __Errcode$[ebp]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@message:
; Line 589
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Iostream_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Iostream_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Iostream_error_category@std@@UBEPBDXZ PROC	; std::_Iostream_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 579
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 580
	mov	eax, OFFSET ??_C@_08LLGCOLLL@iostream?$AA@
; Line 581
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Iostream_error_category@std@@UBEPBDXZ ENDP	; std::_Iostream_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iostream_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iostream_error_category@std@@QAE@XZ PROC		; std::_Iostream_error_category::_Iostream_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 574
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Generic_error_category@std@@QAE@XZ	; std::_Generic_error_category::_Generic_error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Iostream_error_category@std@@6B@
; Line 576
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iostream_error_category@std@@QAE@XZ ENDP		; std::_Iostream_error_category::_Iostream_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G_Generic_error_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G_Generic_error_category@std@@UAEPAXI@Z PROC		; std::_Generic_error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Generic_error_category@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G_Generic_error_category@std@@UAEPAXI@Z ENDP		; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Generic_error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Generic_error_category@std@@UAE@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Generic_error_category@std@@UAE@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
tv69 = -16						; size = 4
$T1 = -12						; size = 4
__Name$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errcode$ = 12						; size = 4
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 563
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
; Line 564
	mov	esi, esp
	mov	eax, DWORD PTR __Errcode$[ebp]
	push	eax
	call	DWORD PTR __imp_?_Syserror_map@std@@YAPBDH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Name$[ebp], eax
; Line 565
	cmp	DWORD PTR __Name$[ebp], 0
	je	SHORT $LN3@message
	mov	ecx, DWORD PTR __Name$[ebp]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN4@message
$LN3@message:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0O@BFJCFAAK@unknown?5error?$AA@
$LN4@message:
	mov	edx, DWORD PTR tv69[ebp]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR $T1[ebp]
	or	eax, 1
	mov	DWORD PTR $T1[ebp], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 566
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?name@_Generic_error_category@std@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?name@_Generic_error_category@std@@UBEPBDXZ PROC	; std::_Generic_error_category::name, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 558
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 559
	mov	eax, OFFSET ??_C@_07DCLBNMLN@generic?$AA@
; Line 560
	mov	esp, ebp
	pop	ebp
	ret	0
?name@_Generic_error_category@std@@UBEPBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Generic_error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Generic_error_category@std@@QAE@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 553
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0error_category@std@@QAE@XZ		; std::error_category::error_category
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7_Generic_error_category@std@@6B@
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Generic_error_category@std@@QAE@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_condition@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv78 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_condition@std@@QBE_NABV01@@Z PROC		; std::error_condition::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?category@error_condition@std@@QBEABVerror_category@2@XZ ; std::error_condition::category
	mov	ecx, eax
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@operator
	mov	ecx, DWORD PTR _this$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?value@error_condition@std@@QBEHXZ	; std::error_condition::value
	cmp	esi, eax
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv78[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv78[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv78[ebp]
; Line 355
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_condition@std@@QBE_NABV01@@Z ENDP		; std::error_condition::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_condition@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_condition@std@@QBEABVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 337
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 339
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_condition@std@@QBEABVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_condition@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_condition@std@@QBEHXZ PROC			; std::error_condition::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 332
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 334
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_condition@std@@QBEHXZ ENDP			; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_condition@std@@QAE@HABVerror_category@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
__Cat$ = 12						; size = 4
??0error_condition@std@@QAE@HABVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 299
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Cat$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 300
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0error_condition@std@@QAE@HABVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?category@error_code@std@@QBEABVerror_category@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?category@error_code@std@@QBEABVerror_category@2@XZ PROC ; std::error_code::category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 246
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 248
	mov	esp, ebp
	pop	ebp
	ret	0
?category@error_code@std@@QBEABVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?value@error_code@std@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?value@error_code@std@@QBEHXZ PROC			; std::error_code::value, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 241
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 243
	mov	esp, ebp
	pop	ebp
	ret	0
?value@error_code@std@@QBEHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gerror_category@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gerror_category@std@@UAEPAXI@Z PROC			; std::error_category::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1error_category@std@@UAE@XZ		; std::error_category::~error_category
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gerror_category@std@@UAEPAXI@Z ENDP			; std::error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??8error_category@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8error_category@std@@QBE_NABV01@@Z PROC		; std::error_category::operator==, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv65[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv65[ebp]
; Line 178
	mov	esp, ebp
	pop	ebp
	ret	4
??8error_category@std@@QBE_NABV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
__Code$ = 8						; size = 4
__Errval$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 391
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?category@error_code@std@@QBEABVerror_category@2@XZ ; std::error_code::category
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8error_category@std@@QBE_NABV01@@Z	; std::error_category::operator==
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@equivalent
	mov	ecx, DWORD PTR __Code$[ebp]
	call	?value@error_code@std@@QBEHXZ		; std::error_code::value
	cmp	eax, DWORD PTR __Errval$[ebp]
	jne	SHORT $LN3@equivalent
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN4@equivalent
$LN3@equivalent:
	mov	DWORD PTR tv74[ebp], 0
$LN4@equivalent:
	mov	al, BYTE PTR tv74[ebp]
; Line 393
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 8
_this$ = -4						; size = 4
__Errval$ = 8						; size = 4
__Cond$ = 12						; size = 4
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 384
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 385
	mov	eax, DWORD PTR __Cond$[ebp]
	push	eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	??8error_condition@std@@QBE_NABV01@@Z	; std::error_condition::operator==
; Line 386
	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Errval$ = 12						; size = 4
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 377
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Errval$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0error_condition@std@@QAE@HABVerror_category@1@@Z ; std::error_condition::error_condition
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 379
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1error_category@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1error_category@std@@UAE@XZ PROC			; std::error_category::~error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 159
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 160
	mov	esp, ebp
	pop	ebp
	ret	0
??1error_category@std@@UAE@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0error_category@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0error_category@std@@QAE@XZ PROC			; std::error_category::error_category, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 154
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7error_category@std@@6B@
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0error_category@std@@QAE@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?system_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?system_category@std@@YAABVerror_category@1@XZ PROC	; std::system_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 652
	push	ebp
	mov	ebp, esp
; Line 653
	mov	eax, OFFSET ?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A ; std::_Error_objects<int>::_System_object
; Line 654
	pop	ebp
	ret	0
?system_category@std@@YAABVerror_category@1@XZ ENDP	; std::system_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?generic_category@std@@YAABVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAABVerror_category@1@XZ PROC	; std::generic_category, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\system_error
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, OFFSET ?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A ; std::_Error_objects<int>::_Generic_object
; Line 644
	pop	ebp
	ret	0
?generic_category@std@@YAABVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 545
	push	ebp
	mov	ebp, esp
	push	esi
; Line 546
	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Debug_poin:
; Line 548
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2294
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2295
	mov	esi, esp
	push	OFFSET ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	DWORD PTR __imp_?_Xout_of_range@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xran:
; Line 2296
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2289
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2290
	mov	esi, esp
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	DWORD PTR __imp_?_Xlength_error@std@@YAXPBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Xlen:
; Line 2291
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z
_TEXT	SEGMENT
$T1 = -10						; size = 1
$T2 = -9						; size = 1
__Ptr$3 = -8						; size = 4
_this$ = -4						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2272
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2273
	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:
; Line 2275
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], 16			; 00000010H
	jb	SHORT $LN3@Tidy
; Line 2277
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Ptr$3[ebp], eax
; Line 2278
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::destroy<char *>
; Line 2279
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy
; Line 2281
	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$3[ebp]
	push	ecx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	push	edx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Tidy:
; Line 2282
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$3[ebp]
	push	edx
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::deallocate
$LN3@Tidy:
; Line 2284
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 15			; 0000000fH
; Line 2285
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 2286
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2256
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2258
	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+20]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:
; Line 2259
	xor	al, al
	jmp	SHORT $LN4@Inside
; Line 2260
	jmp	SHORT $LN4@Inside
$LN3@Inside:
; Line 2261
	mov	al, 1
$LN4@Inside:
; Line 2262
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z
_TEXT	SEGMENT
tv136 = -12						; size = 4
tv129 = -8						; size = 4
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2242
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2243
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow
; Line 2244
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN6@Grow:
; Line 2245
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow
; Line 2246
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:
; Line 2247
	movzx	edx, BYTE PTR __Trim$[ebp]
	test	edx, edx
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow
; Line 2249
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv129[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR tv129[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv129[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:
; Line 2250
	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow
; Line 2251
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:
; Line 2252
	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv136[ebp], 0
$LN12@Grow:
	mov	al, BYTE PTR tv136[ebp]
$LN8@Grow:
; Line 2253
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2236
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 2237
	mov	BYTE PTR $T1[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+20], ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8
; Line 2238
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
_TEXT	SEGMENT
tv205 = -56						; size = 4
tv204 = -52						; size = 4
tv203 = -48						; size = 4
tv202 = -44						; size = 4
$T2 = -39						; size = 1
$T3 = -38						; size = 1
$T4 = -37						; size = 1
__Ptr$ = -32						; size = 4
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 2201
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 40					; 00000028H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx
; Line 2202
	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2203
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN9@Copy
; Line 2204
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], ecx
	jmp	SHORT $LN8@Copy
$LN9@Copy:
; Line 2205
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	ecx, 3
	div	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+24]
	shr	ecx, 1
	cmp	ecx, eax
	ja	SHORT $LN7@Copy
	jmp	SHORT $LN8@Copy
$LN7@Copy:
; Line 2207
	mov	edx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [edx+24]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+24], eax
	ja	SHORT $LN5@Copy
; Line 2209
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	shr	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR __Newres$[ebp], eax
; Line 2210
	jmp	SHORT $LN8@Copy
$LN5@Copy:
; Line 2211
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR __Newres$[ebp], eax
$LN8@Copy:
; Line 2214
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 2215
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv202[ebp], eax
	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR tv202[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv203[ebp], eax
	mov	ecx, DWORD PTR tv203[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN12@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0:
; Line 2216
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 2217
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], edx
; Line 2218
	mov	BYTE PTR __$EHRec$[ebp+12], 2
; Line 2219
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	DWORD PTR tv204[ebp], eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	ecx, DWORD PTR tv204[ebp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ; std::_Wrap_alloc<std::allocator<char> >::allocate
	mov	DWORD PTR tv205[ebp], eax
	mov	edx, DWORD PTR tv205[ebp]
	mov	DWORD PTR __Ptr$[ebp], edx
	jmp	SHORT $LN14@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1:
; Line 2221
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2222
	push	0
	push	0
	call	__CxxThrowException@8
; Line 2223
	mov	eax, $LN17@Copy
	ret	0
$LN14@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2
$LN17@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$2:
; Line 2224
	mov	eax, $LN19@Copy
	ret	0
$LN12@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3
$LN19@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$3:
; Line 2226
	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy
; Line 2228
	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
$LN1@Copy:
; Line 2229
	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 2230
	lea	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z ; std::_Wrap_alloc<std::allocator<char> >::construct<char *,char * &>
; Line 2231
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 2232
	mov	ecx, DWORD PTR __Oldlen$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN11@Copy:
; Line 2233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Copy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN23@Copy:
	DD	1
	DD	$LN22@Copy
$LN22@Copy:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN20@Copy
$LN20@Copy:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv75 = -16						; size = 4
$T1 = -9						; size = 1
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1758
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1759
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
	mov	ecx, eax
	call	?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ; std::_Wrap_alloc<std::allocator<char> >::max_size
	mov	DWORD PTR __Num$[ebp], eax
; Line 1760
	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv75[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	ecx, DWORD PTR __Num$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv75[ebp], ecx
$LN4@max_size:
	mov	eax, DWORD PTR tv75[ebp]
; Line 1761
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1753
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1754
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 1755
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$1 = -12					; size = 4
__Ptr$2 = -8						; size = 4
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1342
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1343
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN4@erase
; Line 1344
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN4@erase:
; Line 1345
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Off$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	ja	SHORT $LN3@erase
; Line 1346
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
	jmp	SHORT $LN2@erase
$LN3@erase:
; Line 1347
	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN2@erase
; Line 1349
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Ptr$2[ebp], eax
; Line 1350
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$1[ebp], eax
; Line 1351
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	sub	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ptr$2[ebp]
	add	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$2[ebp]
	push	eax
	call	?move@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::move
	add	esp, 12					; 0000000cH
; Line 1352
	mov	ecx, DWORD PTR __Newsize$1[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@erase:
; Line 1354
	mov	eax, DWORD PTR _this$[ebp]
$LN6@erase:
; Line 1355
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Off$ = 8						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1334
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1335
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN1@erase
; Line 1336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN1@erase:
; Line 1337
	mov	edx, DWORD PTR __Off$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Line 1338
	mov	eax, DWORD PTR _this$[ebp]
$LN3@erase:
; Line 1339
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1167
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1168
	push	1168					; 00000490H
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
; Line 1169
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 1170
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1148
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1150
	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign
; Line 1151
	push	1151					; 0000047fH
	push	OFFSET ??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:
; Line 1154
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@assign
; Line 1156
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:
; Line 1158
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign
; Line 1160
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1161
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:
; Line 1163
	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:
; Line 1164
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 1129
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 1130
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign
; Line 1131
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xran
$LN5@assign:
; Line 1132
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
; Line 1133
	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign
; Line 1134
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
$LN4@assign:
; Line 1136
	mov	edx, DWORD PTR _this$[ebp]
	cmp	edx, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign
; Line 1137
	mov	eax, DWORD PTR __Roff$[ebp]
	add	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	ecx, DWORD PTR __Roff$[ebp]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign
$LN3@assign:
; Line 1138
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign
; Line 1141
	mov	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	push	eax
	call	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ; std::char_traits<char>::copy
	add	esp, 12					; 0000000cH
; Line 1142
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign:
; Line 1144
	mov	eax, DWORD PTR _this$[ebp]
$LN7@assign:
; Line 1145
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T2 = -17						; size = 1
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 780
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 781
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 782
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 783
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 683
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 684
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 685
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 674
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 675
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Orphan_all@_Container_base12@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 676
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
; Line 677
	push	1
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 678
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], 0
; Line 679
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Free_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Free_proxy:
	DD	1
	DD	$LN4@Free_proxy
$LN4@Free_proxy:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Free_proxy
$LN3@Free_proxy:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -24						; size = 8
__Alproxy$ = -9						; size = 1
_this$ = -4						; size = 4
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 665
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy>
; Line 666
	push	1
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 667
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@XZ		; std::_Container_proxy::_Container_proxy
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	lea	ecx, DWORD PTR __Alproxy$[ebp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
; Line 668
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
; Line 669
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Alloc_prox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@Alloc_prox:
	DD	1
	DD	$LN4@Alloc_prox
$LN4@Alloc_prox:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN3@Alloc_prox
$LN3@Alloc_prox:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 649
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 650
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
; Line 651
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 643
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 645
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
; Line 646
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >::_String_alloc<0,std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 517
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 520
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 521
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
tv72 = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv72[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv72[ebp]
; Line 514
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstring
; Line 492
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0_Container_base12@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 494
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 495
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ PROC ; std::_Wrap_alloc<std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 883
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 884
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
; Line 885
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ ENDP ; std::_Wrap_alloc<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 857
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 858
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
; Line 859
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z PROC ; std::_Wrap_alloc<std::allocator<char> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 846
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 847
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
; Line 848
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z ENDP ; std::_Wrap_alloc<std::allocator<char> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 801
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
; Line 802
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_Wrap_alloc<std::allocator<char> >::_Wrap_alloc<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::allocator_traits<std::allocator<char> >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 734
	push	ebp
	mov	ebp, esp
; Line 735
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
; Line 736
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 611
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 612
	or	eax, -1
; Line 613
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 577
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 578
	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8
; Line 579
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 572
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 573
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 574
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xmemory0
; Line 552
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 554
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Eallocator_arg@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Eallocator_arg@std@@YAXXZ PROC			; std::`dynamic initializer for 'allocator_arg'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 3451
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Eallocator_arg@std@@YAXXZ ENDP			; std::`dynamic initializer for 'allocator_arg''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Orphan_me
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN3@Orphan_me:
; Line 197
	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Orphan_me
; Line 198
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx
	jmp	SHORT $LN3@Orphan_me
$LN2@Orphan_me:
; Line 200
	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN1@Orphan_me
; Line 201
	mov	esi, esp
	push	201					; 000000c9H
	push	OFFSET ??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	push	OFFSET ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	DWORD PTR __imp_?_Debug_message@std@@YAXPB_W0I@Z
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Orphan_me:
; Line 202
	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@Orphan_me:
; Line 206
	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 187
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
; Line 189
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 182
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 183
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@Getcont
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]
; Line 184
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Clrcont@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 177
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 179
	mov	esp, ebp
	pop	ebp
	ret	0
?_Clrcont@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Parent_proxy$3 = -32					; size = 4
__Lock$4 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 149
	cmp	DWORD PTR __Parent$[ebp], 0
	jne	SHORT $LN3@Adopt
; Line 152
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 153
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 155
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	jmp	SHORT $LN4@Adopt
$LN3@Adopt:
; Line 158
	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$3[ebp], ecx
; Line 161
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$3[ebp]
	je	SHORT $LN4@Adopt
; Line 163
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 164
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 165
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
; Line 166
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$3[ebp]
	mov	DWORD PTR [eax], ecx
; Line 168
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@Adopt:
; Line 174
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN12@Adopt:
	DD	2
	DD	$LN11@Adopt
$LN11@Adopt:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN9@Adopt
$LN9@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN8@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$4[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-40]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -12						; size = 4
_this$ = -4						; size = 4
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 142
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 143
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 145
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Iterator_b:
	DD	1
	DD	$LN4@Iterator_b
$LN4@Iterator_b:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 124
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN4@operator
	jmp	SHORT $LN3@operator
$LN4@operator:
; Line 127
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@operator
; Line 128
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
; Line 129
	jmp	SHORT $LN3@operator
$LN2@operator:
; Line 132
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 133
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me
; Line 135
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@operator:
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
; Line 137
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	esi
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN11@operator:
	DD	1
	DD	$LN10@operator
$LN10@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN8@operator
$LN8@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 119
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 120
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 114
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 68
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xutility
; Line 54
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
; Line 55
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Epiecewise_construct@std@@YAXXZ
text$di	SEGMENT
$T1 = -1						; size = 1
??__Epiecewise_construct@std@@YAXXZ PROC		; std::`dynamic initializer for 'piecewise_construct'', COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\utility
; Line 70
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	xor	eax, eax
	mov	BYTE PTR $T1[ebp], al
	mov	esp, ebp
	pop	ebp
	ret	0
??__Epiecewise_construct@std@@YAXXZ ENDP		; std::`dynamic initializer for 'piecewise_construct''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 563
	push	ebp
	mov	ebp, esp
; Line 564
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 565
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::move, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 551
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 553
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@move
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv69[ebp], eax
$LN4@move:
	mov	eax, DWORD PTR tv69[ebp]
; Line 554
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC		; std::char_traits<char>::copy, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 528
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 530
	cmp	DWORD PTR __Count$[ebp], 0
	jne	SHORT $LN3@copy
	mov	eax, DWORD PTR __First1$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR tv69[ebp], eax
$LN4@copy:
	mov	eax, DWORD PTR tv69[ebp]
; Line 531
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
tv68 = -4						; size = 4
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\iosfwd
; Line 521
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
; Line 523
	mov	eax, DWORD PTR __First$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN3@length
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	edx, DWORD PTR __First$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	mov	DWORD PTR tv68[ebp], eax
$LN4@length:
	mov	eax, DWORD PTR tv68[ebp]
; Line 524
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC					; operator delete, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 64
	push	ebp
	mov	ebp, esp
; Line 65
	pop	ebp
	ret	0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\new
; Line 59
	push	ebp
	mov	ebp, esp
; Line 60
	mov	eax, DWORD PTR __Where$[ebp]
; Line 61
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ?_Hash_seq@std@@YAIPBEI@Z
_TEXT	SEGMENT
__Next$1 = -16						; size = 4
__Val$ = -12						; size = 4
__FNV_prime$ = -8					; size = 4
__FNV_offset_basis$ = -4				; size = 4
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
?_Hash_seq@std@@YAIPBEI@Z PROC				; std::_Hash_seq, COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\xstddef
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
; Line 288
	mov	DWORD PTR __FNV_offset_basis$[ebp], -2128831035 ; 811c9dc5H
; Line 289
	mov	DWORD PTR __FNV_prime$[ebp], 16777619	; 01000193H
; Line 292
	mov	DWORD PTR __Val$[ebp], -2128831035	; 811c9dc5H
; Line 293
	mov	DWORD PTR __Next$1[ebp], 0
	jmp	SHORT $LN3@Hash_seq
$LN2@Hash_seq:
	mov	eax, DWORD PTR __Next$1[ebp]
	add	eax, 1
	mov	DWORD PTR __Next$1[ebp], eax
$LN3@Hash_seq:
	mov	ecx, DWORD PTR __Next$1[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN1@Hash_seq
; Line 295
	mov	edx, DWORD PTR __First$[ebp]
	add	edx, DWORD PTR __Next$1[ebp]
	movzx	eax, BYTE PTR [edx]
	xor	eax, DWORD PTR __Val$[ebp]
	mov	DWORD PTR __Val$[ebp], eax
; Line 296
	imul	ecx, DWORD PTR __Val$[ebp], 16777619
	mov	DWORD PTR __Val$[ebp], ecx
; Line 297
	jmp	SHORT $LN2@Hash_seq
$LN1@Hash_seq:
; Line 307
	mov	eax, DWORD PTR __Val$[ebp]
; Line 308
	mov	esp, ebp
	pop	ebp
	ret	0
?_Hash_seq@std@@YAIPBEI@Z ENDP				; std::_Hash_seq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT _hypot
_TEXT	SEGMENT
__X$ = 8						; size = 8
__Y$ = 16						; size = 8
_hypot	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\math.h
; Line 556
	push	ebp
	mov	ebp, esp
	push	esi
; Line 557
	mov	esi, esp
	sub	esp, 8
	movsd	xmm0, QWORD PTR __Y$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __X$[ebp]
	movsd	QWORD PTR [esp], xmm0
	call	DWORD PTR __imp___hypot
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 558
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hypot	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	push	esi
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR ___t$[ebp]
	add	ecx, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], ecx
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\io\sprintf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_sprintf_stream_handler DD FLAT:_u_sprintf_write
	DD	FLAT:_u_sprintf_pad_and_justify
CONST	ENDS
EXTRN	_u_strncpy_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\io\sprintf.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_sprintf_write
_TEXT	SEGMENT
tv67 = -220						; size = 4
_size$ = -20						; size = 4
_output$ = -8						; size = 4
_context$ = 8						; size = 4
_str$ = 12						; size = 4
_count$ = 16						; size = 4
_u_sprintf_write PROC					; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _output$[ebp], eax
; Line 42
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@u_sprintf_
	mov	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	jmp	SHORT $LN4@u_sprintf_
$LN3@u_sprintf_:
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv67[ebp], ecx
$LN4@u_sprintf_:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _size$[ebp], edx
; Line 44
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _output$[ebp]
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	sub	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _output$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx*2]
	push	ecx
	call	_u_strncpy_56
	add	esp, 12					; 0000000cH
; Line 45
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _size$[ebp]
	mov	edx, DWORD PTR _output$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 46
	mov	eax, DWORD PTR _size$[ebp]
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_sprintf_write ENDP
_TEXT	ENDS
EXTRN	_u_memset_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_sprintf_pad_and_justify
_TEXT	SEGMENT
tv67 = -256						; size = 4
_outputPos$12037 = -56					; size = 4
_paddingLeft$12036 = -44				; size = 4
_lengthOfResult$ = -32					; size = 4
_written$ = -20						; size = 4
_output$ = -8						; size = 4
_context$ = 8						; size = 4
_info$ = 12						; size = 4
_result$ = 16						; size = 4
_resultLen$ = 20					; size = 4
_u_sprintf_pad_and_justify PROC				; COMDAT
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 55
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _output$[ebp], eax
; Line 56
	mov	DWORD PTR _written$[ebp], 0
; Line 57
	mov	eax, DWORD PTR _resultLen$[ebp]
	mov	DWORD PTR _lengthOfResult$[ebp], eax
; Line 59
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR _resultLen$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN10@u_sprintf_@2
	mov	edx, DWORD PTR _resultLen$[ebp]
	mov	DWORD PTR tv67[ebp], edx
	jmp	SHORT $LN11@u_sprintf_@2
$LN10@u_sprintf_@2:
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv67[ebp], ecx
$LN11@u_sprintf_@2:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _resultLen$[ebp], edx
; Line 62
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax+4], -1
	je	$LN7@u_sprintf_@2
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _resultLen$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	$LN7@u_sprintf_@2
; Line 63
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _resultLen$[ebp]
	mov	DWORD PTR _paddingLeft$12036[ebp], ecx
; Line 64
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR _output$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _outputPos$12037[ebp], edx
; Line 66
	mov	eax, DWORD PTR _paddingLeft$12036[ebp]
	add	eax, DWORD PTR _resultLen$[ebp]
	mov	ecx, DWORD PTR _output$[ebp]
	cmp	eax, DWORD PTR [ecx+4]
	jle	SHORT $LN6@u_sprintf_@2
; Line 67
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _resultLen$[ebp]
	mov	DWORD PTR _paddingLeft$12036[ebp], ecx
; Line 68
	jns	SHORT $LN6@u_sprintf_@2
; Line 69
	mov	DWORD PTR _paddingLeft$12036[ebp], 0
$LN6@u_sprintf_@2:
; Line 73
	mov	eax, DWORD PTR _written$[ebp]
	add	eax, DWORD PTR _paddingLeft$12036[ebp]
	mov	DWORD PTR _written$[ebp], eax
; Line 76
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+16]
	test	ecx, ecx
	je	SHORT $LN4@u_sprintf_@2
; Line 77
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _output$[ebp]
	push	edx
	call	_u_sprintf_write
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _written$[ebp]
	mov	DWORD PTR _written$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _paddingLeft$12036[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _outputPos$12037[ebp]
	add	eax, DWORD PTR _resultLen$[ebp]
	mov	ecx, DWORD PTR _output$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+eax*2]
	push	eax
	call	_u_memset_56
	add	esp, 12					; 0000000cH
; Line 79
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _paddingLeft$12036[ebp]
	mov	edx, DWORD PTR _output$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 82
	jmp	SHORT $LN3@u_sprintf_@2
$LN4@u_sprintf_@2:
; Line 83
	mov	eax, DWORD PTR _paddingLeft$12036[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _outputPos$12037[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	push	eax
	call	_u_memset_56
	add	esp, 12					; 0000000cH
; Line 84
	mov	eax, DWORD PTR _output$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _paddingLeft$12036[ebp]
	mov	edx, DWORD PTR _output$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 85
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _output$[ebp]
	push	edx
	call	_u_sprintf_write
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _written$[ebp]
	mov	DWORD PTR _written$[ebp], eax
$LN3@u_sprintf_@2:
; Line 89
	jmp	SHORT $LN2@u_sprintf_@2
$LN7@u_sprintf_@2:
; Line 90
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _output$[ebp]
	push	edx
	call	_u_sprintf_write
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _written$[ebp], eax
$LN2@u_sprintf_@2:
; Line 93
	cmp	DWORD PTR _written$[ebp], 0
	jl	SHORT $LN1@u_sprintf_@2
	mov	eax, DWORD PTR _lengthOfResult$[ebp]
	cmp	eax, DWORD PTR _written$[ebp]
	jle	SHORT $LN1@u_sprintf_@2
; Line 94
	mov	eax, DWORD PTR _lengthOfResult$[ebp]
	jmp	SHORT $LN8@u_sprintf_@2
$LN1@u_sprintf_@2:
; Line 97
	mov	eax, DWORD PTR _written$[ebp]
$LN8@u_sprintf_@2:
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_sprintf_pad_and_justify ENDP
_TEXT	ENDS
PUBLIC	_u_vsnprintf_56
PUBLIC	_u_sprintf_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_sprintf_56
_TEXT	SEGMENT
_written$ = -20						; size = 4
_ap$ = -8						; size = 4
_buffer$ = 8						; size = 4
_patternSpecification$ = 12				; size = 4
_u_sprintf_56 PROC					; COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	lea	eax, DWORD PTR _patternSpecification$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 109
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_u_vsnprintf_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _written$[ebp], eax
; Line 110
	mov	DWORD PTR _ap$[ebp], 0
; Line 112
	mov	eax, DWORD PTR _written$[ebp]
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_sprintf_56 ENDP
_TEXT	ENDS
PUBLIC	_u_vsnprintf_u_56
PUBLIC	_u_sprintf_u_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_sprintf_u_56
_TEXT	SEGMENT
_written$ = -20						; size = 4
_ap$ = -8						; size = 4
_buffer$ = 8						; size = 4
_patternSpecification$ = 12				; size = 4
_u_sprintf_u_56 PROC					; COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 123
	lea	eax, DWORD PTR _patternSpecification$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 124
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_u_vsnprintf_u_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _written$[ebp], eax
; Line 125
	mov	DWORD PTR _ap$[ebp], 0
; Line 127
	mov	eax, DWORD PTR _written$[ebp]
; Line 128
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_sprintf_u_56 ENDP
_TEXT	ENDS
PUBLIC	_u_vsprintf_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_vsprintf_56
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_patternSpecification$ = 12				; size = 4
_ap$ = 16						; size = 4
_u_vsprintf_56 PROC					; COMDAT
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 135
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_u_vsnprintf_56
	add	esp, 16					; 00000010H
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_vsprintf_56 ENDP
_TEXT	ENDS
PUBLIC	_u_snprintf_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_snprintf_56
_TEXT	SEGMENT
_written$ = -20						; size = 4
_ap$ = -8						; size = 4
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_patternSpecification$ = 16				; size = 4
_u_snprintf_56 PROC					; COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	lea	eax, DWORD PTR _patternSpecification$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_u_vsnprintf_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _written$[ebp], eax
; Line 149
	mov	DWORD PTR _ap$[ebp], 0
; Line 151
	mov	eax, DWORD PTR _written$[ebp]
; Line 152
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_snprintf_56 ENDP
_TEXT	ENDS
PUBLIC	_u_snprintf_u_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_snprintf_u_56
_TEXT	SEGMENT
_written$ = -20						; size = 4
_ap$ = -8						; size = 4
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_patternSpecification$ = 16				; size = 4
_u_snprintf_u_56 PROC					; COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 163
	lea	eax, DWORD PTR _patternSpecification$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax
; Line 164
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_u_vsnprintf_u_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _written$[ebp], eax
; Line 165
	mov	DWORD PTR _ap$[ebp], 0
; Line 167
	mov	eax, DWORD PTR _written$[ebp]
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_snprintf_u_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uprv_free_56:PROC
EXTRN	_u_charsToUChars_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_strlen:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_vsnprintf_56
_TEXT	SEGMENT
_size$ = -300						; size = 4
_patBuffer$ = -288					; size = 256
_pattern$ = -24						; size = 4
_written$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_patternSpecification$ = 16				; size = 4
_ap$ = 20						; size = 4
_u_vsnprintf_56 PROC					; COMDAT
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 496				; 000001f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-496]
	mov	ecx, 124				; 0000007cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _patternSpecification$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _size$[ebp], eax
; Line 182
	cmp	DWORD PTR _size$[ebp], 64		; 00000040H
	jb	SHORT $LN4@u_vsnprint
; Line 183
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _pattern$[ebp], eax
; Line 184
	cmp	DWORD PTR _pattern$[ebp], 0
	jne	SHORT $LN3@u_vsnprint
; Line 185
	xor	eax, eax
	jmp	SHORT $LN5@u_vsnprint
$LN3@u_vsnprint:
; Line 188
	jmp	SHORT $LN2@u_vsnprint
$LN4@u_vsnprint:
; Line 189
	lea	eax, DWORD PTR _patBuffer$[ebp]
	mov	DWORD PTR _pattern$[ebp], eax
$LN2@u_vsnprint:
; Line 191
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patternSpecification$[ebp]
	push	edx
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 194
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pattern$[ebp]
	push	ecx
	mov	edx, DWORD PTR _count$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_u_vsnprintf_u_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _written$[ebp], eax
; Line 197
	mov	eax, DWORD PTR _pattern$[ebp]
	lea	ecx, DWORD PTR _patBuffer$[ebp]
	cmp	eax, ecx
	je	SHORT $LN1@u_vsnprint
; Line 198
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@u_vsnprint:
; Line 201
	mov	eax, DWORD PTR _written$[ebp]
$LN5@u_vsnprint:
; Line 202
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@u_vsnprint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 496				; 000001f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@u_vsnprint:
	DD	1
	DD	$LN8@u_vsnprint
$LN8@u_vsnprint:
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN7@u_vsnprint
$LN7@u_vsnprint:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_u_vsnprintf_56 ENDP
_TEXT	ENDS
PUBLIC	_u_vsprintf_u_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_vsprintf_u_56
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_patternSpecification$ = 12				; size = 4
_ap$ = 16						; size = 4
_u_vsprintf_u_56 PROC					; COMDAT
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 209
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _patternSpecification$[ebp]
	push	ecx
	push	2147483647				; 7fffffffH
	mov	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_u_vsnprintf_u_56
	add	esp, 16					; 00000010H
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_vsprintf_u_56 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@		; `string'
EXTRN	_u_locbund_close_56:PROC
EXTRN	_u_printf_parse_56:PROC
EXTRN	_u_locbund_init_56:PROC
;	COMDAT ??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@
CONST	SEGMENT
??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@ DB 'en_US_POSIX', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _u_vsnprintf_u_56
_TEXT	SEGMENT
_outStr$ = -68						; size = 40
_result$ = -20						; size = 4
_written$ = -8						; size = 4
_buffer$ = 8						; size = 4
_count$ = 12						; size = 4
_patternSpecification$ = 16				; size = 4
_ap$ = 20						; size = 4
_u_vsnprintf_u_56 PROC					; COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 223
	mov	DWORD PTR _written$[ebp], 0
; Line 224
	mov	DWORD PTR _result$[ebp], 0
; Line 228
	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN4@u_vsnprint@2
; Line 229
	mov	DWORD PTR _count$[ebp], 2147483647	; 7fffffffH
$LN4@u_vsnprint@2:
; Line 232
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _outStr$[ebp], eax
; Line 233
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _outStr$[ebp+8], eax
; Line 234
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _outStr$[ebp+4], eax
; Line 236
	push	OFFSET ??_C@_0M@EKCLCNAB@en_US_POSIX?$AA@
	lea	eax, DWORD PTR _outStr$[ebp+12]
	push	eax
	call	_u_locbund_init_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@u_vsnprint@2
; Line 237
	xor	eax, eax
	jmp	SHORT $LN5@u_vsnprint@2
$LN3@u_vsnprint@2:
; Line 241
	mov	eax, DWORD PTR _ap$[ebp]
	push	eax
	lea	ecx, DWORD PTR _written$[ebp]
	push	ecx
	lea	edx, DWORD PTR _outStr$[ebp+12]
	push	edx
	lea	eax, DWORD PTR _outStr$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outStr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _patternSpecification$[ebp]
	push	edx
	push	OFFSET _g_sprintf_stream_handler
	call	_u_printf_parse_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _result$[ebp], eax
; Line 244
	cmp	DWORD PTR _outStr$[ebp+4], 0
	jle	SHORT $LN2@u_vsnprint@2
; Line 245
	mov	eax, DWORD PTR _outStr$[ebp+8]
	sub	eax, DWORD PTR _outStr$[ebp+4]
	xor	ecx, ecx
	mov	edx, DWORD PTR _buffer$[ebp]
	mov	WORD PTR [edx+eax*2], cx
$LN2@u_vsnprint@2:
; Line 249
	lea	eax, DWORD PTR _outStr$[ebp+12]
	push	eax
	call	_u_locbund_close_56
	add	esp, 4
; Line 252
	cmp	DWORD PTR _result$[ebp], 0
	jge	SHORT $LN1@u_vsnprint@2
; Line 253
	mov	eax, DWORD PTR _result$[ebp]
	jmp	SHORT $LN5@u_vsnprint@2
$LN1@u_vsnprint@2:
; Line 256
	mov	eax, DWORD PTR _written$[ebp]
$LN5@u_vsnprint@2:
; Line 257
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@u_vsnprint@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@u_vsnprint@2:
	DD	2
	DD	$LN9@u_vsnprint@2
$LN9@u_vsnprint@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@u_vsnprint@2
	DD	-68					; ffffffbcH
	DD	40					; 00000028H
	DD	$LN8@u_vsnprint@2
$LN8@u_vsnprint@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN7@u_vsnprint@2:
	DB	119					; 00000077H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_u_vsnprintf_u_56 ENDP
_TEXT	ENDS
END

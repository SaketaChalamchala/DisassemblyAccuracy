; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\io\uscanf_p.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_g_u_scanf_infos DD 00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:_u_scanf_simple_percent_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	09H
	DD	FLAT:_u_scanf_uchar_handler
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_scanf_scientific_handler
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_scanf_scidbl_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_scanf_percent_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:_u_scanf_ustring_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_scanf_spellout_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_scanf_hex_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:_u_scanf_scanset_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:_u_scanf_char_handler
	DD	03H
	DD	FLAT:_u_scanf_integer_handler
	DD	08H
	DD	FLAT:_u_scanf_scientific_handler
	DD	08H
	DD	FLAT:_u_scanf_double_handler
	DD	08H
	DD	FLAT:_u_scanf_scidbl_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_scanf_integer_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	FLAT:_u_scanf_count_handler
	DD	03H
	DD	FLAT:_u_scanf_octal_handler
	DD	06H
	DD	FLAT:_u_scanf_pointer_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:_u_scanf_string_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_scanf_uinteger_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_scanf_hex_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+96
CONST	ENDS
EXTRN	_u_fgetc_56:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\io\uscanf_p.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_scanf_simple_percent_handler
_TEXT	SEGMENT
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_simple_percent_handler PROC			; COMDAT
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 382
	mov	eax, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [eax], 0
; Line 383
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_u_fgetc_56
	add	esp, 4
	movzx	ecx, ax
	cmp	ecx, 37					; 00000025H
	je	SHORT $LN1@u_scanf_si
; Line 384
	mov	eax, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [eax], -1
$LN1@u_scanf_si:
; Line 386
	mov	eax, 1
; Line 387
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_simple_percent_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_count_handler
_TEXT	SEGMENT
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_count_handler PROC				; COMDAT
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 399
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@u_scanf_co
; Line 400
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_co
; Line 401
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 65535				; 0000ffffH
	mov	edx, DWORD PTR _args$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	WORD PTR [eax], cx
	jmp	SHORT $LN5@u_scanf_co
$LN4@u_scanf_co:
; Line 402
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_co
; Line 403
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	cdq
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx
; Line 404
	jmp	SHORT $LN5@u_scanf_co
$LN2@u_scanf_co:
; Line 405
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
$LN5@u_scanf_co:
; Line 407
	mov	eax, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [eax], 0
; Line 410
	xor	eax, eax
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_count_handler ENDP
_TEXT	ENDS
EXTRN	_unum_parseDouble_56:PROC
EXTRN	_u_locbund_getNumberFormat_56:PROC
EXTRN	_ufile_fill_uchar_buffer_56:PROC
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_double_handler
_TEXT	SEGMENT
tv186 = -272						; size = 4
tv75 = -272						; size = 4
_status$ = -72						; size = 4
_skipped$ = -60						; size = 4
_parsePos$ = -48					; size = 4
_format$ = -36						; size = 4
_num$ = -24						; size = 8
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_double_handler PROC				; COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 424
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 426
	mov	DWORD PTR _status$[ebp], 0
; Line 430
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 433
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 436
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 439
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_scanf_do
; Line 440
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN10@u_scanf_do
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN11@u_scanf_do
$LN10@u_scanf_do:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN11@u_scanf_do:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN7@u_scanf_do:
; Line 443
	push	1
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 446
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN6@u_scanf_do
; Line 447
	xor	eax, eax
	jmp	$LN8@u_scanf_do
$LN6@u_scanf_do:
; Line 450
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_positive_sign
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _skipped$[ebp]
	mov	DWORD PTR _skipped$[ebp], eax
; Line 453
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _num$[ebp]
; Line 455
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_do
; Line 456
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+11]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_do
; Line 457
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
	jmp	SHORT $LN1@u_scanf_do
$LN4@u_scanf_do:
; Line 458
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_do
; Line 459
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
; Line 460
	jmp	SHORT $LN1@u_scanf_do
$LN2@u_scanf_do:
; Line 461
	fld	QWORD PTR _num$[ebp]
	fstp	DWORD PTR tv186[ebp]
	fld	DWORD PTR tv186[ebp]
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fstp	DWORD PTR [ecx]
$LN1@u_scanf_do:
; Line 469
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 472
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 473
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN8@u_scanf_do:
; Line 474
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@u_scanf_do
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@u_scanf_do:
	DD	2
	DD	$LN14@u_scanf_do
$LN14@u_scanf_do:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN12@u_scanf_do
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN13@u_scanf_do
$LN13@u_scanf_do:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN12@u_scanf_do:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_double_handler ENDP
_TEXT	ENDS
EXTRN	_u_fungetc_56:PROC
EXTRN	_u_isWhitespace_56:PROC
EXTRN	_ufile_getch_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_skip_leading_ws
_TEXT	SEGMENT
_isNotEOF$ = -29					; size = 1
_count$ = -20						; size = 4
_c$ = -8						; size = 2
_input$ = 8						; size = 4
_pad$ = 12						; size = 2
_u_scanf_skip_leading_ws PROC				; COMDAT
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 320
	mov	DWORD PTR _count$[ebp], 0
$LN4@u_scanf_sk:
; Line 324
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_ufile_getch_56
	add	esp, 8
	mov	BYTE PTR _isNotEOF$[ebp], al
	movsx	edx, BYTE PTR _isNotEOF$[ebp]
	test	edx, edx
	je	SHORT $LN3@u_scanf_sk
	movzx	eax, WORD PTR _c$[ebp]
	movzx	ecx, WORD PTR _pad$[ebp]
	cmp	eax, ecx
	je	SHORT $LN2@u_scanf_sk
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_u_isWhitespace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@u_scanf_sk
$LN2@u_scanf_sk:
; Line 326
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 327
	jmp	SHORT $LN4@u_scanf_sk
$LN3@u_scanf_sk:
; Line 330
	movsx	eax, BYTE PTR _isNotEOF$[ebp]
	test	eax, eax
	je	SHORT $LN1@u_scanf_sk
; Line 331
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	call	_u_fungetc_56
	add	esp, 8
$LN1@u_scanf_sk:
; Line 333
	mov	eax, DWORD PTR _count$[ebp]
; Line 334
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@u_scanf_sk
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@u_scanf_sk:
	DD	1
	DD	$LN8@u_scanf_sk
$LN8@u_scanf_sk:
	DD	-8					; fffffff8H
	DD	2
	DD	$LN7@u_scanf_sk
$LN7@u_scanf_sk:
	DB	99					; 00000063H
	DB	0
_u_scanf_skip_leading_ws ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_getSymbol_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_skip_leading_positive_sign
_TEXT	SEGMENT
_localStatus$ = -84					; size = 4
_symbolLen$ = -72					; size = 4
_plusSymbol$ = -60					; size = 16
_isNotEOF$ = -33					; size = 1
_count$ = -24						; size = 4
_c$ = -12						; size = 2
__$ArrayPad$ = -4					; size = 4
_input$ = 8						; size = 4
_format$ = 12						; size = 4
_status$ = 16						; size = 4
_u_scanf_skip_leading_positive_sign PROC		; COMDAT
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 343
	mov	DWORD PTR _count$[ebp], 0
; Line 347
	mov	DWORD PTR _localStatus$[ebp], 0
; Line 349
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN5@u_scanf_sk@2
; Line 354
	lea	eax, DWORD PTR _localStatus$[ebp]
	push	eax
	push	8
	lea	ecx, DWORD PTR _plusSymbol$[ebp]
	push	ecx
	push	7
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_getSymbol_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _symbolLen$[ebp], eax
; Line 356
	cmp	DWORD PTR _localStatus$[ebp], 0
	jg	SHORT $LN5@u_scanf_sk@2
$LN3@u_scanf_sk@2:
; Line 358
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_ufile_getch_56
	add	esp, 8
	mov	BYTE PTR _isNotEOF$[ebp], al
	movsx	edx, BYTE PTR _isNotEOF$[ebp]
	test	edx, edx
	je	SHORT $LN2@u_scanf_sk@2
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _symbolLen$[ebp]
	jge	SHORT $LN2@u_scanf_sk@2
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	movzx	edx, WORD PTR _plusSymbol$[ebp+ecx*2]
	cmp	eax, edx
	jne	SHORT $LN2@u_scanf_sk@2
; Line 360
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 361
	jmp	SHORT $LN3@u_scanf_sk@2
$LN2@u_scanf_sk@2:
; Line 364
	movsx	eax, BYTE PTR _isNotEOF$[ebp]
	test	eax, eax
	je	SHORT $LN5@u_scanf_sk@2
; Line 365
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	call	_u_fungetc_56
	add	esp, 8
$LN5@u_scanf_sk@2:
; Line 370
	mov	eax, DWORD PTR _count$[ebp]
; Line 371
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@u_scanf_sk@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@u_scanf_sk@2:
	DD	3
	DD	$LN11@u_scanf_sk@2
$LN11@u_scanf_sk@2:
	DD	-12					; fffffff4H
	DD	2
	DD	$LN8@u_scanf_sk@2
	DD	-60					; ffffffc4H
	DD	16					; 00000010H
	DD	$LN9@u_scanf_sk@2
	DD	-84					; ffffffacH
	DD	4
	DD	$LN10@u_scanf_sk@2
$LN10@u_scanf_sk@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN9@u_scanf_sk@2:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
$LN8@u_scanf_sk@2:
	DB	99					; 00000063H
	DB	0
_u_scanf_skip_leading_positive_sign ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_setSymbol_56:PROC
EXTRN	_u_strToUpper_56:PROC
EXTRN	_u_strToLower_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_scientific_handler
_TEXT	SEGMENT
tv239 = -348						; size = 4
tv75 = -348						; size = 4
_expBuf$ = -148						; size = 16
_expLen$ = -124						; size = 4
_srcLen$ = -112						; size = 4
_srcExpBuf$ = -100					; size = 16
_status$ = -76						; size = 4
_skipped$ = -64						; size = 4
_parsePos$ = -52					; size = 4
_format$ = -40						; size = 4
_num$ = -28						; size = 8
_len$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_scientific_handler PROC			; COMDAT
; Line 485
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 489
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 491
	mov	DWORD PTR _status$[ebp], 0
; Line 498
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 501
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 504
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 507
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN9@u_scanf_sc
; Line 508
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN12@u_scanf_sc
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN13@u_scanf_sc
$LN12@u_scanf_sc:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN13@u_scanf_sc:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN9@u_scanf_sc:
; Line 511
	push	4
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 514
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN8@u_scanf_sc
; Line 515
	xor	eax, eax
	jmp	$LN10@u_scanf_sc
$LN8@u_scanf_sc:
; Line 523
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_getSymbol_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srcLen$[ebp], eax
; Line 526
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	ecx, 101				; 00000065H
	jne	SHORT $LN7@u_scanf_sc
; Line 530
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	call	_u_strToLower_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _expLen$[ebp], eax
; Line 532
	jmp	SHORT $LN6@u_scanf_sc
$LN7@u_scanf_sc:
; Line 536
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	call	_u_strToUpper_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _expLen$[ebp], eax
$LN6@u_scanf_sc:
; Line 543
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	push	11					; 0000000bH
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setSymbol_56
	add	esp, 20					; 00000014H
; Line 549
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_positive_sign
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _skipped$[ebp]
	mov	DWORD PTR _skipped$[ebp], eax
; Line 552
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _num$[ebp]
; Line 554
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_sc
; Line 555
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+11]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_sc
; Line 556
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
	jmp	SHORT $LN1@u_scanf_sc
$LN4@u_scanf_sc:
; Line 557
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_sc
; Line 558
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
; Line 559
	jmp	SHORT $LN1@u_scanf_sc
$LN2@u_scanf_sc:
; Line 560
	fld	QWORD PTR _num$[ebp]
	fstp	DWORD PTR tv239[ebp]
	fld	DWORD PTR tv239[ebp]
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fstp	DWORD PTR [ecx]
$LN1@u_scanf_sc:
; Line 568
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 571
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 572
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN10@u_scanf_sc:
; Line 573
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@u_scanf_sc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@u_scanf_sc:
	DD	4
	DD	$LN18@u_scanf_sc
$LN18@u_scanf_sc:
	DD	-52					; ffffffccH
	DD	4
	DD	$LN14@u_scanf_sc
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN15@u_scanf_sc
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN16@u_scanf_sc
	DD	-148					; ffffff6cH
	DD	16					; 00000010H
	DD	$LN17@u_scanf_sc
$LN17@u_scanf_sc:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN16@u_scanf_sc:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN15@u_scanf_sc:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@u_scanf_sc:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_scientific_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_scidbl_handler
_TEXT	SEGMENT
tv219 = -352						; size = 4
tv75 = -352						; size = 4
_genericStatus$ = -152					; size = 4
_scientificStatus$ = -140				; size = 4
_skipped$ = -128					; size = 4
_parsePos$ = -116					; size = 4
_genericParsePos$ = -104				; size = 4
_scientificParsePos$ = -92				; size = 4
_genericResult$ = -80					; size = 8
_scientificResult$ = -64				; size = 8
_genericFormat$ = -48					; size = 4
_scientificFormat$ = -36				; size = 4
_num$ = -24						; size = 8
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_scidbl_handler PROC				; COMDAT
; Line 582
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 588
	mov	DWORD PTR _scientificParsePos$[ebp], 0
	mov	DWORD PTR _genericParsePos$[ebp], 0
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 590
	mov	DWORD PTR _scientificStatus$[ebp], 0
; Line 591
	mov	DWORD PTR _genericStatus$[ebp], 0
; Line 601
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 604
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 607
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 610
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN10@u_scanf_sc@2
; Line 611
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN13@u_scanf_sc@2
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN14@u_scanf_sc@2
$LN13@u_scanf_sc@2:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN14@u_scanf_sc@2:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN10@u_scanf_sc@2:
; Line 614
	push	4
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _scientificFormat$[ebp], eax
; Line 615
	push	1
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _genericFormat$[ebp], eax
; Line 618
	cmp	DWORD PTR _scientificFormat$[ebp], 0
	je	SHORT $LN8@u_scanf_sc@2
	cmp	DWORD PTR _genericFormat$[ebp], 0
	jne	SHORT $LN9@u_scanf_sc@2
$LN8@u_scanf_sc@2:
; Line 619
	xor	eax, eax
	jmp	$LN11@u_scanf_sc@2
$LN9@u_scanf_sc@2:
; Line 622
	lea	eax, DWORD PTR _genericStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _genericFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_positive_sign
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _skipped$[ebp]
	mov	DWORD PTR _skipped$[ebp], eax
; Line 627
	lea	eax, DWORD PTR _scientificStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scientificParsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _scientificFormat$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _scientificResult$[ebp]
; Line 630
	lea	eax, DWORD PTR _genericStatus$[ebp]
	push	eax
	lea	ecx, DWORD PTR _genericParsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _genericFormat$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _genericResult$[ebp]
; Line 633
	mov	eax, DWORD PTR _scientificParsePos$[ebp]
	cmp	eax, DWORD PTR _genericParsePos$[ebp]
	jle	SHORT $LN7@u_scanf_sc@2
; Line 635
	fld	QWORD PTR _scientificResult$[ebp]
	fstp	QWORD PTR _num$[ebp]
; Line 637
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _scientificParsePos$[ebp]
	mov	DWORD PTR _parsePos$[ebp], eax
; Line 639
	jmp	SHORT $LN6@u_scanf_sc@2
$LN7@u_scanf_sc@2:
; Line 641
	fld	QWORD PTR _genericResult$[ebp]
	fstp	QWORD PTR _num$[ebp]
; Line 643
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _genericParsePos$[ebp]
	mov	DWORD PTR _parsePos$[ebp], eax
$LN6@u_scanf_sc@2:
; Line 645
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 647
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_sc@2
; Line 648
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+11]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_sc@2
; Line 649
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
	jmp	SHORT $LN1@u_scanf_sc@2
$LN4@u_scanf_sc@2:
; Line 650
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_sc@2
; Line 651
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
; Line 652
	jmp	SHORT $LN1@u_scanf_sc@2
$LN2@u_scanf_sc@2:
; Line 653
	fld	QWORD PTR _num$[ebp]
	fstp	DWORD PTR tv219[ebp]
	fld	DWORD PTR tv219[ebp]
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fstp	DWORD PTR [ecx]
$LN1@u_scanf_sc@2:
; Line 661
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 662
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN11@u_scanf_sc@2:
; Line 663
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@u_scanf_sc@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@u_scanf_sc@2:
	DD	4
	DD	$LN19@u_scanf_sc@2
$LN19@u_scanf_sc@2:
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN15@u_scanf_sc@2
	DD	-104					; ffffff98H
	DD	4
	DD	$LN16@u_scanf_sc@2
	DD	-140					; ffffff74H
	DD	4
	DD	$LN17@u_scanf_sc@2
	DD	-152					; ffffff68H
	DD	4
	DD	$LN18@u_scanf_sc@2
$LN18@u_scanf_sc@2:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN17@u_scanf_sc@2:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN16@u_scanf_sc@2:
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN15@u_scanf_sc@2:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_scidbl_handler ENDP
_TEXT	ENDS
EXTRN	_unum_parseInt64_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_integer_handler
_TEXT	SEGMENT
tv75 = -284						; size = 4
_result$ = -84						; size = 8
_status$ = -68						; size = 4
_skipped$ = -56						; size = 4
_parsePos$ = -44					; size = 4
_format$ = -32						; size = 4
_num$ = -20						; size = 4
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_integer_handler PROC				; COMDAT
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 674
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
; Line 676
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 678
	mov	DWORD PTR _status$[ebp], 0
; Line 683
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 686
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 689
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 692
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_scanf_in
; Line 693
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN10@u_scanf_in
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN11@u_scanf_in
$LN10@u_scanf_in:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN11@u_scanf_in:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN7@u_scanf_in:
; Line 696
	push	1
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 699
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN6@u_scanf_in
; Line 700
	xor	eax, eax
	jmp	$LN8@u_scanf_in
$LN6@u_scanf_in:
; Line 703
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_positive_sign
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _skipped$[ebp]
	mov	DWORD PTR _skipped$[ebp], eax
; Line 706
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_parseInt64_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _result$[ebp], eax
	mov	DWORD PTR _result$[ebp+4], edx
; Line 709
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@u_scanf_in
; Line 710
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_in
; Line 711
	mov	eax, DWORD PTR _result$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	WORD PTR [edx], ax
	jmp	SHORT $LN5@u_scanf_in
$LN4@u_scanf_in:
; Line 712
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_in
; Line 713
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 714
	jmp	SHORT $LN5@u_scanf_in
$LN2@u_scanf_in:
; Line 715
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	DWORD PTR [edx], eax
$LN5@u_scanf_in:
; Line 719
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 722
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 723
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN8@u_scanf_in:
; Line 724
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@u_scanf_in
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@u_scanf_in:
	DD	2
	DD	$LN14@u_scanf_in
$LN14@u_scanf_in:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN12@u_scanf_in
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN13@u_scanf_in
$LN13@u_scanf_in:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN12@u_scanf_in:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_integer_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_uinteger_handler
_TEXT	SEGMENT
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_uinteger_handler PROC				; COMDAT
; Line 733
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 735
	mov	eax, DWORD PTR _argConverted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmtConsumed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_integer_handler
	add	esp, 24					; 00000018H
; Line 736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_uinteger_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_percent_handler
_TEXT	SEGMENT
tv74 = -260						; size = 4
_status$ = -60						; size = 4
_parsePos$ = -48					; size = 4
_format$ = -36						; size = 4
_num$ = -24						; size = 8
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_percent_handler PROC				; COMDAT
; Line 745
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 749
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 750
	mov	DWORD PTR _status$[ebp], 0
; Line 754
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
; Line 757
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 760
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 763
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@u_scanf_pe
; Line 764
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN6@u_scanf_pe
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN7@u_scanf_pe
$LN6@u_scanf_pe:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
$LN7@u_scanf_pe:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN3@u_scanf_pe:
; Line 767
	push	3
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 770
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN2@u_scanf_pe
; Line 771
	xor	eax, eax
	jmp	SHORT $LN4@u_scanf_pe
$LN2@u_scanf_pe:
; Line 774
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_positive_sign
	add	esp, 12					; 0000000cH
; Line 777
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _num$[ebp]
; Line 779
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_pe
; Line 780
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
$LN1@u_scanf_pe:
; Line 788
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 791
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 792
	mov	eax, DWORD PTR _parsePos$[ebp]
$LN4@u_scanf_pe:
; Line 793
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@u_scanf_pe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@u_scanf_pe:
	DD	2
	DD	$LN10@u_scanf_pe
$LN10@u_scanf_pe:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@u_scanf_pe
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN9@u_scanf_pe
$LN9@u_scanf_pe:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN8@u_scanf_pe:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_percent_handler ENDP
_TEXT	ENDS
EXTRN	_u_releaseDefaultConverter_56:PROC
EXTRN	_ucnv_fromUnicode_56:PROC
EXTRN	_ucnv_getMaxCharSize_56:PROC
EXTRN	_u_getDefaultConverter_56:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_string_handler
_TEXT	SEGMENT
$T13434 = -317						; size = 1
_isNotEOF$ = -113					; size = 1
_c$ = -104						; size = 2
_skipped$ = -92						; size = 4
_count$ = -80						; size = 4
_status$ = -68						; size = 4
_limit$ = -56						; size = 4
_alias$ = -44						; size = 4
_arg$ = -32						; size = 4
_conv$ = -20						; size = 4
_source$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_string_handler PROC				; COMDAT
; Line 802
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T13434[ebp], 0
; Line 805
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _arg$[ebp], ecx
; Line 806
	mov	eax, DWORD PTR _arg$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 808
	mov	DWORD PTR _status$[ebp], 0
; Line 810
	mov	DWORD PTR _skipped$[ebp], 0
; Line 812
	mov	BYTE PTR _isNotEOF$[ebp], 0
; Line 815
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN14@u_scanf_st
; Line 816
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
$LN14@u_scanf_st:
; Line 820
	mov	DWORD PTR _count$[ebp], 0
; Line 823
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_u_getDefaultConverter_56
	add	esp, 4
	mov	DWORD PTR _conv$[ebp], eax
; Line 825
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN12@u_scanf_st
; Line 826
	or	eax, -1
	jmp	$LN15@u_scanf_st
$LN12@u_scanf_st:
; Line 830
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN10@u_scanf_st
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN11@u_scanf_st
$LN10@u_scanf_st:
	mov	BYTE PTR $T13434[ebp], 1
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_ufile_getch_56
	add	esp, 8
	mov	BYTE PTR _isNotEOF$[ebp], al
	movsx	edx, BYTE PTR _isNotEOF$[ebp]
	test	edx, edx
	je	$LN11@u_scanf_st
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN9@u_scanf_st
	cmp	BYTE PTR $T13434[ebp], 0
	jne	SHORT $LN17@u_scanf_st
	push	OFFSET $LN18@u_scanf_st
	call	__RTC_UninitUse
	add	esp, 4
$LN17@u_scanf_st:
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	eax, edx
	je	$LN11@u_scanf_st
	cmp	BYTE PTR $T13434[ebp], 0
	jne	SHORT $LN19@u_scanf_st
	push	OFFSET $LN18@u_scanf_st
	call	__RTC_UninitUse
	add	esp, 4
$LN19@u_scanf_st:
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_u_isWhitespace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	$LN11@u_scanf_st
$LN9@u_scanf_st:
; Line 833
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN8@u_scanf_st
; Line 835
	mov	BYTE PTR $T13434[ebp], 1
	lea	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _source$[ebp], eax
; Line 837
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@u_scanf_st
; Line 838
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _limit$[ebp], ecx
; Line 840
	jmp	SHORT $LN6@u_scanf_st
$LN7@u_scanf_st:
; Line 841
	mov	eax, DWORD PTR _conv$[ebp]
	push	eax
	call	_ucnv_getMaxCharSize_56
	add	esp, 4
	movsx	ecx, al
	add	ecx, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _limit$[ebp], ecx
$LN6@u_scanf_st:
; Line 846
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _source$[ebp]
	add	ecx, 2
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _limit$[ebp]
	push	eax
	lea	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conv$[ebp]
	push	edx
	call	_ucnv_fromUnicode_56
	add	esp, 32					; 00000020H
; Line 848
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN8@u_scanf_st
; Line 850
	mov	eax, DWORD PTR _conv$[ebp]
	push	eax
	call	_u_releaseDefaultConverter_56
	add	esp, 4
; Line 851
	or	eax, -1
	jmp	$LN15@u_scanf_st
$LN8@u_scanf_st:
; Line 856
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 857
	jmp	$LN12@u_scanf_st
$LN11@u_scanf_st:
; Line 860
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN4@u_scanf_st
; Line 861
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN2@u_scanf_st
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@u_scanf_st
$LN2@u_scanf_st:
	movsx	eax, BYTE PTR _isNotEOF$[ebp]
	test	eax, eax
	je	SHORT $LN3@u_scanf_st
; Line 862
	cmp	BYTE PTR $T13434[ebp], 0
	jne	SHORT $LN20@u_scanf_st
	push	OFFSET $LN18@u_scanf_st
	call	__RTC_UninitUse
	add	esp, 4
$LN20@u_scanf_st:
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	call	_u_fungetc_56
	add	esp, 8
$LN3@u_scanf_st:
; Line 865
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_st
; Line 866
	mov	eax, DWORD PTR _alias$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@u_scanf_st:
; Line 871
	mov	eax, DWORD PTR _conv$[ebp]
	push	eax
	call	_u_releaseDefaultConverter_56
	add	esp, 4
; Line 874
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 875
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN15@u_scanf_st:
; Line 876
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@u_scanf_st
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@u_scanf_st:
	DD	4
	DD	$LN24@u_scanf_st
$LN24@u_scanf_st:
	DD	-104					; ffffff98H
	DD	2
	DD	$LN18@u_scanf_st
	DD	-8					; fffffff8H
	DD	4
	DD	$LN21@u_scanf_st
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN22@u_scanf_st
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN23@u_scanf_st
$LN23@u_scanf_st:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN22@u_scanf_st:
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	0
$LN21@u_scanf_st:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN18@u_scanf_st:
	DB	99					; 00000063H
	DB	0
_u_scanf_string_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_char_handler
_TEXT	SEGMENT
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_char_handler PROC				; COMDAT
; Line 885
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 886
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN1@u_scanf_ch
; Line 887
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@u_scanf_ch:
; Line 889
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+13], 0
; Line 890
	mov	eax, DWORD PTR _argConverted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmtConsumed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_string_handler
	add	esp, 24					; 00000018H
; Line 891
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_char_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_ustring_handler
_TEXT	SEGMENT
$T13449 = -269						; size = 1
_isNotEOF$ = -65					; size = 1
_c$ = -56						; size = 2
_skipped$ = -44						; size = 4
_count$ = -32						; size = 4
_alias$ = -20						; size = 4
_arg$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_ustring_handler PROC				; COMDAT
; Line 900
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T13449[ebp], 0
; Line 901
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _arg$[ebp], ecx
; Line 902
	mov	eax, DWORD PTR _arg$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 904
	mov	DWORD PTR _skipped$[ebp], 0
; Line 906
	mov	BYTE PTR _isNotEOF$[ebp], 0
; Line 909
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN10@u_scanf_us
; Line 910
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
$LN10@u_scanf_us:
; Line 914
	mov	DWORD PTR _count$[ebp], 0
$LN9@u_scanf_us:
; Line 918
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_scanf_us
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN8@u_scanf_us
$LN7@u_scanf_us:
	mov	BYTE PTR $T13449[ebp], 1
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_ufile_getch_56
	add	esp, 8
	mov	BYTE PTR _isNotEOF$[ebp], al
	movsx	edx, BYTE PTR _isNotEOF$[ebp]
	test	edx, edx
	je	$LN8@u_scanf_us
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN6@u_scanf_us
	cmp	BYTE PTR $T13449[ebp], 0
	jne	SHORT $LN13@u_scanf_us
	push	OFFSET $LN14@u_scanf_us
	call	__RTC_UninitUse
	add	esp, 4
$LN13@u_scanf_us:
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	cmp	eax, edx
	je	SHORT $LN8@u_scanf_us
	cmp	BYTE PTR $T13449[ebp], 0
	jne	SHORT $LN15@u_scanf_us
	push	OFFSET $LN14@u_scanf_us
	call	__RTC_UninitUse
	add	esp, 4
$LN15@u_scanf_us:
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_u_isWhitespace_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@u_scanf_us
$LN6@u_scanf_us:
; Line 922
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@u_scanf_us
; Line 923
	cmp	BYTE PTR $T13449[ebp], 0
	jne	SHORT $LN16@u_scanf_us
	push	OFFSET $LN14@u_scanf_us
	call	__RTC_UninitUse
	add	esp, 4
$LN16@u_scanf_us:
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR _c$[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN5@u_scanf_us:
; Line 927
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 928
	jmp	$LN9@u_scanf_us
$LN8@u_scanf_us:
; Line 931
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN4@u_scanf_us
; Line 932
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN2@u_scanf_us
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@u_scanf_us
$LN2@u_scanf_us:
	movsx	eax, BYTE PTR _isNotEOF$[ebp]
	test	eax, eax
	je	SHORT $LN3@u_scanf_us
; Line 933
	cmp	BYTE PTR $T13449[ebp], 0
	jne	SHORT $LN17@u_scanf_us
	push	OFFSET $LN14@u_scanf_us
	call	__RTC_UninitUse
	add	esp, 4
$LN17@u_scanf_us:
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	call	_u_fungetc_56
	add	esp, 8
$LN3@u_scanf_us:
; Line 937
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_us
; Line 938
	xor	eax, eax
	mov	ecx, DWORD PTR _alias$[ebp]
	mov	WORD PTR [ecx], ax
$LN4@u_scanf_us:
; Line 943
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 944
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
; Line 945
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@u_scanf_us
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@u_scanf_us:
	DD	1
	DD	$LN18@u_scanf_us
$LN18@u_scanf_us:
	DD	-56					; ffffffc8H
	DD	2
	DD	$LN14@u_scanf_us
$LN14@u_scanf_us:
	DB	99					; 00000063H
	DB	0
_u_scanf_ustring_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_uchar_handler
_TEXT	SEGMENT
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_uchar_handler PROC				; COMDAT
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 955
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN1@u_scanf_uc
; Line 956
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], 1
$LN1@u_scanf_uc:
; Line 958
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+13], 0
; Line 959
	mov	eax, DWORD PTR _argConverted$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmtConsumed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fmt$[ebp]
	push	edx
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_ustring_handler
	add	esp, 24					; 00000018H
; Line 960
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_uchar_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_spellout_handler
_TEXT	SEGMENT
tv75 = -272						; size = 4
_status$ = -72						; size = 4
_skipped$ = -60						; size = 4
_parsePos$ = -48					; size = 4
_format$ = -36						; size = 4
_num$ = -24						; size = 8
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_spellout_handler PROC				; COMDAT
; Line 969
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 973
	mov	DWORD PTR _parsePos$[ebp], 0
; Line 975
	mov	DWORD PTR _status$[ebp], 0
; Line 979
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 982
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 985
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 988
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@u_scanf_sp
; Line 989
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN6@u_scanf_sp
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN7@u_scanf_sp
$LN6@u_scanf_sp:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN7@u_scanf_sp:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN3@u_scanf_sp:
; Line 992
	push	5
	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 995
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN2@u_scanf_sp
; Line 996
	xor	eax, eax
	jmp	SHORT $LN4@u_scanf_sp
$LN2@u_scanf_sp:
; Line 1003
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _parsePos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_parseDouble_56
	add	esp, 20					; 00000014H
	fstp	QWORD PTR _num$[ebp]
; Line 1005
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_sp
; Line 1006
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [ecx]
$LN1@u_scanf_sp:
; Line 1014
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _parsePos$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1017
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1018
	mov	eax, DWORD PTR _parsePos$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
$LN4@u_scanf_sp:
; Line 1019
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@u_scanf_sp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@u_scanf_sp:
	DD	2
	DD	$LN10@u_scanf_sp
$LN10@u_scanf_sp:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@u_scanf_sp
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN9@u_scanf_sp
$LN9@u_scanf_sp:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN8@u_scanf_sp:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_u_scanf_spellout_handler ENDP
_TEXT	ENDS
EXTRN	_ufmt_uto64_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_hex_handler
_TEXT	SEGMENT
tv75 = -248						; size = 4
_result$ = -48						; size = 8
_num$ = -32						; size = 4
_skipped$ = -20						; size = 4
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_hex_handler PROC				; COMDAT
; Line 1028
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1031
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
; Line 1035
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 1038
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 1041
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 1044
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN8@u_scanf_he
; Line 1045
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN11@u_scanf_he
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN12@u_scanf_he
$LN11@u_scanf_he:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN12@u_scanf_he:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN8@u_scanf_he:
; Line 1049
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR [ecx]
	cmp	edx, 48					; 00000030H
	jne	SHORT $LN7@u_scanf_he
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 120				; 00000078H
	je	SHORT $LN6@u_scanf_he
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, WORD PTR [ecx+2]
	cmp	edx, 88					; 00000058H
	jne	SHORT $LN7@u_scanf_he
$LN6@u_scanf_he:
; Line 1052
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 4
	mov	edx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 1053
	mov	eax, DWORD PTR _len$[ebp]
	sub	eax, 2
	mov	DWORD PTR _len$[ebp], eax
$LN7@u_scanf_he:
; Line 1057
	push	16					; 00000010H
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ufmt_uto64_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$[ebp], eax
	mov	DWORD PTR _result$[ebp+4], edx
; Line 1060
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1063
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@u_scanf_he
; Line 1064
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_he
; Line 1065
	mov	eax, DWORD PTR _result$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	WORD PTR [edx], ax
	jmp	SHORT $LN5@u_scanf_he
$LN4@u_scanf_he:
; Line 1066
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_he
; Line 1067
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 1068
	jmp	SHORT $LN5@u_scanf_he
$LN2@u_scanf_he:
; Line 1069
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	DWORD PTR [edx], eax
$LN5@u_scanf_he:
; Line 1073
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1074
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
; Line 1075
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@u_scanf_he
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@u_scanf_he:
	DD	1
	DD	$LN14@u_scanf_he
$LN14@u_scanf_he:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN13@u_scanf_he
$LN13@u_scanf_he:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_u_scanf_hex_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_scanf_octal_handler
_TEXT	SEGMENT
tv75 = -248						; size = 4
_result$ = -48						; size = 8
_num$ = -32						; size = 4
_skipped$ = -20						; size = 4
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_octal_handler PROC				; COMDAT
; Line 1084
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1087
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
; Line 1091
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 1094
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 1097
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 1100
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN6@u_scanf_oc
; Line 1101
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN9@u_scanf_oc
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN10@u_scanf_oc
$LN9@u_scanf_oc:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN10@u_scanf_oc:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN6@u_scanf_oc:
; Line 1104
	push	8
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ufmt_uto64_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _result$[ebp], eax
	mov	DWORD PTR _result$[ebp+4], edx
; Line 1107
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1110
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@u_scanf_oc
; Line 1111
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+10]
	test	ecx, ecx
	je	SHORT $LN4@u_scanf_oc
; Line 1112
	mov	eax, DWORD PTR _result$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	WORD PTR [edx], ax
	jmp	SHORT $LN5@u_scanf_oc
$LN4@u_scanf_oc:
; Line 1113
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+12]
	test	ecx, ecx
	je	SHORT $LN2@u_scanf_oc
; Line 1114
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [eax+4], edx
; Line 1115
	jmp	SHORT $LN5@u_scanf_oc
$LN2@u_scanf_oc:
; Line 1116
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _result$[ebp+4]
	and	ecx, 0
	mov	edx, DWORD PTR _num$[ebp]
	mov	DWORD PTR [edx], eax
$LN5@u_scanf_oc:
; Line 1120
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1121
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
; Line 1122
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@u_scanf_oc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@u_scanf_oc:
	DD	1
	DD	$LN12@u_scanf_oc
$LN12@u_scanf_oc:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN11@u_scanf_oc
$LN11@u_scanf_oc:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_u_scanf_octal_handler ENDP
_TEXT	ENDS
EXTRN	_ufmt_utop_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_pointer_handler
_TEXT	SEGMENT
tv75 = -244						; size = 4
_p$ = -44						; size = 4
_result$ = -32						; size = 4
_skipped$ = -20						; size = 4
_len$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_pointer_handler PROC				; COMDAT
; Line 1131
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1135
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 1139
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _input$[ebp]
	push	edx
	call	_u_scanf_skip_leading_ws
	add	esp, 8
	mov	DWORD PTR _skipped$[ebp], eax
; Line 1142
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	call	_ufile_fill_uchar_buffer_56
	add	esp, 4
; Line 1145
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+12]
	sar	edx, 1
	mov	DWORD PTR _len$[ebp], edx
; Line 1148
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@u_scanf_po
; Line 1149
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN6@u_scanf_po
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN7@u_scanf_po
$LN6@u_scanf_po:
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv75[ebp], ecx
$LN7@u_scanf_po:
	mov	edx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _len$[ebp], edx
$LN3@u_scanf_po:
; Line 1153
	cmp	DWORD PTR _len$[ebp], 8
	jle	SHORT $LN2@u_scanf_po
; Line 1154
	mov	DWORD PTR _len$[ebp], 8
$LN2@u_scanf_po:
; Line 1158
	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_ufmt_utop_56
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
; Line 1160
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN1@u_scanf_po
; Line 1161
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@u_scanf_po:
; Line 1165
	mov	eax, DWORD PTR _input$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _len$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 1168
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1169
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, DWORD PTR _skipped$[ebp]
; Line 1170
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@u_scanf_po
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@u_scanf_po:
	DD	1
	DD	$LN9@u_scanf_po
$LN9@u_scanf_po:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN8@u_scanf_po
$LN8@u_scanf_po:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_u_scanf_pointer_handler ENDP
_TEXT	ENDS
EXTRN	_uset_close_56:PROC
EXTRN	_uset_contains_56:PROC
EXTRN	_ufile_getch32_56:PROC
EXTRN	_uset_applyPattern_56:PROC
EXTRN	_uset_open_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_scanset_handler
_TEXT	SEGMENT
tv166 = -304						; size = 4
_isError$13185 = -101					; size = 1
_idx$13184 = -92					; size = 4
_readCharacter$ = -77					; size = 1
_isNotEOF$ = -65					; size = 1
_alias$ = -56						; size = 4
_c$ = -44						; size = 4
_chLeft$ = -32						; size = 4
_status$ = -20						; size = 4
_scanset$ = -8						; size = 4
_input$ = 8						; size = 4
_info$ = 12						; size = 4
_args$ = 16						; size = 4
_fmt$ = 20						; size = 4
_fmtConsumed$ = 24					; size = 4
_argConverted$ = 28					; size = 4
_u_scanf_scanset_handler PROC				; COMDAT
; Line 1179
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1181
	mov	DWORD PTR _status$[ebp], 0
; Line 1182
	mov	DWORD PTR _chLeft$[ebp], 2147483647	; 7fffffffH
; Line 1184
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1185
	mov	BYTE PTR _isNotEOF$[ebp], 0
; Line 1186
	mov	BYTE PTR _readCharacter$[ebp], 0
; Line 1189
	push	-1
	push	0
	call	_uset_open_56
	add	esp, 8
	mov	DWORD PTR _scanset$[ebp], eax
; Line 1192
	mov	eax, DWORD PTR _fmt$[ebp]
	sub	eax, 2
	mov	DWORD PTR _fmt$[ebp], eax
; Line 1195
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN16@u_scanf_sc@3
; Line 1196
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _chLeft$[ebp], ecx
$LN16@u_scanf_sc@3:
; Line 1200
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	-1
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _scanset$[ebp]
	push	edx
	call	_uset_applyPattern_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _fmtConsumed$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1203
	cmp	DWORD PTR _status$[ebp], 0
	jg	$LN15@u_scanf_sc@3
; Line 1204
	mov	DWORD PTR _c$[ebp], 0
$LN14@u_scanf_sc@3:
; Line 1207
	cmp	DWORD PTR _chLeft$[ebp], 0
	jle	$LN13@u_scanf_sc@3
; Line 1208
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	call	_ufile_getch32_56
	add	esp, 8
	mov	BYTE PTR _isNotEOF$[ebp], al
	movsx	edx, BYTE PTR _isNotEOF$[ebp]
	test	edx, edx
	je	$LN12@u_scanf_sc@3
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _scanset$[ebp]
	push	ecx
	call	_uset_contains_56
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	$LN12@u_scanf_sc@3
; Line 1209
	mov	BYTE PTR _readCharacter$[ebp], 1
; Line 1210
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	$LN11@u_scanf_sc@3
; Line 1211
	mov	DWORD PTR _idx$13184[ebp], 0
; Line 1212
	mov	BYTE PTR _isError$13185[ebp], 0
; Line 1214
	cmp	DWORD PTR _c$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN10@u_scanf_sc@3
	mov	eax, DWORD PTR _idx$13184[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	mov	dx, WORD PTR _c$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _idx$13184[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$13184[ebp], eax
	jmp	SHORT $LN9@u_scanf_sc@3
$LN10@u_scanf_sc@3:
	cmp	DWORD PTR _c$[ebp], 1114111		; 0010ffffH
	ja	SHORT $LN8@u_scanf_sc@3
	mov	eax, DWORD PTR _idx$13184[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _chLeft$[ebp]
	jge	SHORT $LN8@u_scanf_sc@3
	mov	eax, DWORD PTR _c$[ebp]
	sar	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _idx$13184[ebp]
	mov	edx, DWORD PTR _alias$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _idx$13184[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$13184[ebp], eax
	mov	eax, DWORD PTR _c$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _idx$13184[ebp]
	mov	edx, DWORD PTR _alias$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _idx$13184[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$13184[ebp], eax
	jmp	SHORT $LN9@u_scanf_sc@3
$LN8@u_scanf_sc@3:
	mov	BYTE PTR _isError$13185[ebp], 1
$LN9@u_scanf_sc@3:
; Line 1215
	movsx	eax, BYTE PTR _isError$13185[ebp]
	test	eax, eax
	je	SHORT $LN6@u_scanf_sc@3
; Line 1216
	jmp	SHORT $LN13@u_scanf_sc@3
$LN6@u_scanf_sc@3:
; Line 1218
	mov	eax, DWORD PTR _idx$13184[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _alias$[ebp], edx
$LN11@u_scanf_sc@3:
; Line 1220
	mov	eax, DWORD PTR _c$[ebp]
	sub	eax, 65536				; 00010000H
	mov	ecx, 1048575				; 000fffffH
	cmp	ecx, eax
	sbb	edx, edx
	add	edx, 2
	mov	eax, DWORD PTR _chLeft$[ebp]
	sub	eax, edx
	mov	DWORD PTR _chLeft$[ebp], eax
; Line 1222
	jmp	SHORT $LN5@u_scanf_sc@3
$LN12@u_scanf_sc@3:
; Line 1224
	jmp	SHORT $LN13@u_scanf_sc@3
$LN5@u_scanf_sc@3:
; Line 1226
	jmp	$LN14@u_scanf_sc@3
$LN13@u_scanf_sc@3:
; Line 1229
	movsx	eax, BYTE PTR _isNotEOF$[ebp]
	test	eax, eax
	je	SHORT $LN15@u_scanf_sc@3
	cmp	DWORD PTR _chLeft$[ebp], 0
	jle	SHORT $LN15@u_scanf_sc@3
; Line 1230
	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _c$[ebp]
	push	ecx
	call	_u_fungetc_56
	add	esp, 8
$LN15@u_scanf_sc@3:
; Line 1234
	mov	eax, DWORD PTR _scanset$[ebp]
	push	eax
	call	_uset_close_56
	add	esp, 4
; Line 1237
	movsx	eax, BYTE PTR _readCharacter$[ebp]
	test	eax, eax
	jne	SHORT $LN3@u_scanf_sc@3
; Line 1238
	or	eax, -1
	jmp	SHORT $LN17@u_scanf_sc@3
	jmp	SHORT $LN2@u_scanf_sc@3
$LN3@u_scanf_sc@3:
; Line 1240
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN2@u_scanf_sc@3
; Line 1241
	xor	eax, eax
	mov	ecx, DWORD PTR _alias$[ebp]
	mov	WORD PTR [ecx], ax
$LN2@u_scanf_sc@3:
; Line 1245
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+8]
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _argConverted$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1246
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN19@u_scanf_sc@3
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv166[ebp], edx
	jmp	SHORT $LN20@u_scanf_sc@3
$LN19@u_scanf_sc@3:
	mov	DWORD PTR tv166[ebp], 2147483647	; 7fffffffH
$LN20@u_scanf_sc@3:
	mov	eax, DWORD PTR tv166[ebp]
	sub	eax, DWORD PTR _chLeft$[ebp]
$LN17@u_scanf_sc@3:
; Line 1247
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@u_scanf_sc@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@u_scanf_sc@3:
	DD	2
	DD	$LN23@u_scanf_sc@3
$LN23@u_scanf_sc@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN21@u_scanf_sc@3
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN22@u_scanf_sc@3
$LN22@u_scanf_sc@3:
	DB	99					; 00000063H
	DB	0
$LN21@u_scanf_sc@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_u_scanf_scanset_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_u_scanf_parse_56
EXTRN	_u_feof_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_parse_56
_TEXT	SEGMENT
tv130 = -340						; size = 4
_handler$ = -140					; size = 4
_info$ = -128						; size = 4
_spec$ = -116						; size = 20
_args$ = -88						; size = 8
_handlerNum$ = -72					; size = 2
_cpConsumed$ = -60					; size = 4
_argConsumed$ = -48					; size = 4
_converted$ = -36					; size = 4
_count$ = -24						; size = 4
_alias$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_f$ = 8							; size = 4
_patternSpecification$ = 12				; size = 4
_ap$ = 16						; size = 4
_u_scanf_parse_56 PROC					; COMDAT
; Line 1303
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1314
	mov	eax, DWORD PTR _patternSpecification$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 1317
	mov	DWORD PTR _argConsumed$[ebp], 0
; Line 1318
	mov	DWORD PTR _converted$[ebp], 0
; Line 1319
	mov	DWORD PTR _cpConsumed$[ebp], 0
$LN16@u_scanf_pa:
; Line 1325
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 37					; 00000025H
	je	SHORT $LN15@u_scanf_pa
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN15@u_scanf_pa
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_u_fgetc_56
	add	esp, 4
	movzx	ecx, ax
	mov	edx, DWORD PTR _alias$[ebp]
	movzx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN15@u_scanf_pa
; Line 1326
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1327
	jmp	SHORT $LN16@u_scanf_pa
$LN15@u_scanf_pa:
; Line 1330
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 37					; 00000025H
	jne	SHORT $LN13@u_scanf_pa
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@u_scanf_pa
$LN13@u_scanf_pa:
; Line 1331
	jmp	$LN17@u_scanf_pa
$LN14@u_scanf_pa:
; Line 1334
	lea	eax, DWORD PTR _spec$[ebp]
	push	eax
	mov	ecx, DWORD PTR _alias$[ebp]
	push	ecx
	call	_u_scanf_parse_spec
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
; Line 1337
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _alias$[ebp], edx
; Line 1339
	movzx	eax, WORD PTR _spec$[ebp+4]
	sub	eax, 32					; 00000020H
	mov	WORD PTR _handlerNum$[ebp], ax
; Line 1340
	movzx	eax, WORD PTR _handlerNum$[ebp]
	cmp	eax, 108				; 0000006cH
	jge	$LN12@u_scanf_pa
; Line 1343
	movzx	eax, WORD PTR _handlerNum$[ebp]
	mov	ecx, DWORD PTR _g_u_scanf_infos[eax*8]
	mov	DWORD PTR _info$[ebp], ecx
; Line 1344
	cmp	DWORD PTR _info$[ebp], 2
	je	SHORT $LN11@u_scanf_pa
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_u_feof_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN11@u_scanf_pa
; Line 1345
	jmp	$LN17@u_scanf_pa
	jmp	SHORT $LN10@u_scanf_pa
$LN11@u_scanf_pa:
; Line 1347
	movsx	eax, BYTE PTR _spec$[ebp+8]
	test	eax, eax
	je	SHORT $LN9@u_scanf_pa
; Line 1348
	mov	DWORD PTR _args$[ebp], 0
; Line 1350
	jmp	SHORT $LN10@u_scanf_pa
$LN9@u_scanf_pa:
; Line 1351
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR tv130[ebp], eax
	cmp	DWORD PTR tv130[ebp], 2
	je	SHORT $LN5@u_scanf_pa
	cmp	DWORD PTR tv130[ebp], 2
	jle	SHORT $LN3@u_scanf_pa
	cmp	DWORD PTR tv130[ebp], 10		; 0000000aH
	jle	SHORT $LN4@u_scanf_pa
	jmp	SHORT $LN3@u_scanf_pa
$LN5@u_scanf_pa:
; Line 1354
	mov	eax, DWORD PTR _cpConsumed$[ebp]
	mov	DWORD PTR _spec$[ebp], eax
$LN4@u_scanf_pa:
; Line 1364
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	mov	DWORD PTR _args$[ebp], edx
; Line 1365
	jmp	SHORT $LN10@u_scanf_pa
$LN3@u_scanf_pa:
; Line 1369
	mov	DWORD PTR _args$[ebp], 0
$LN10@u_scanf_pa:
; Line 1375
	movzx	eax, WORD PTR _handlerNum$[ebp]
	mov	ecx, DWORD PTR _g_u_scanf_infos[eax*8+4]
	mov	DWORD PTR _handler$[ebp], ecx
; Line 1376
	cmp	DWORD PTR _handler$[ebp], 0
	je	SHORT $LN12@u_scanf_pa
; Line 1379
	mov	DWORD PTR _count$[ebp], 1
; Line 1381
	mov	esi, esp
	lea	eax, DWORD PTR _argConsumed$[ebp]
	push	eax
	lea	ecx, DWORD PTR _count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _alias$[ebp]
	push	edx
	lea	eax, DWORD PTR _args$[ebp]
	push	eax
	lea	ecx, DWORD PTR _spec$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR _handler$[ebp]
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _cpConsumed$[ebp]
	mov	DWORD PTR _cpConsumed$[ebp], eax
; Line 1384
	cmp	DWORD PTR _argConsumed$[ebp], 0
	jge	SHORT $LN1@u_scanf_pa
; Line 1385
	mov	DWORD PTR _converted$[ebp], -1
; Line 1386
	jmp	SHORT $LN17@u_scanf_pa
$LN1@u_scanf_pa:
; Line 1390
	mov	eax, DWORD PTR _converted$[ebp]
	add	eax, DWORD PTR _argConsumed$[ebp]
	mov	DWORD PTR _converted$[ebp], eax
; Line 1393
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2-2]
	mov	DWORD PTR _alias$[ebp], edx
$LN12@u_scanf_pa:
; Line 1400
	jmp	$LN16@u_scanf_pa
$LN17@u_scanf_pa:
; Line 1403
	mov	eax, DWORD PTR _converted$[ebp]
; Line 1404
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@u_scanf_pa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@u_scanf_pa:
	DD	4
	DD	$LN25@u_scanf_pa
$LN25@u_scanf_pa:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN21@u_scanf_pa
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN22@u_scanf_pa
	DD	-88					; ffffffa8H
	DD	8
	DD	$LN23@u_scanf_pa
	DD	-116					; ffffff8cH
	DD	20					; 00000014H
	DD	$LN24@u_scanf_pa
$LN24@u_scanf_pa:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN23@u_scanf_pa:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
$LN22@u_scanf_pa:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN21@u_scanf_pa:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_u_scanf_parse_56 ENDP
_TEXT	ENDS
EXTRN	_ufmt_digitvalue_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_scanf_parse_spec
_TEXT	SEGMENT
tv288 = -236						; size = 4
tv190 = -236						; size = 4
tv287 = -232						; size = 4
tv189 = -232						; size = 4
tv224 = -230						; size = 2
tv214 = -230						; size = 2
tv204 = -230						; size = 2
tv195 = -230						; size = 2
_info$ = -32						; size = 4
_backup$ = -20						; size = 4
_s$ = -8						; size = 4
_fmt$ = 8						; size = 4
_spec$ = 12						; size = 4
_u_scanf_parse_spec PROC				; COMDAT
; Line 115
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 118
	mov	eax, DWORD PTR _spec$[ebp]
	mov	DWORD PTR _info$[ebp], eax
; Line 121
	mov	eax, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [eax+16], -1
; Line 123
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], -1
; Line 124
	xor	eax, eax
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 125
	mov	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 126
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+8], 0
; Line 127
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+9], 0
; Line 128
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 0
; Line 129
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+11], 0
; Line 130
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+12], 0
; Line 131
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+13], 1
; Line 135
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN29@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN21@u_scanf_pa@2
$LN29@u_scanf_pa@2:
; Line 141
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _backup$[ebp], eax
; Line 144
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN27@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN28@u_scanf_pa@2
$LN27@u_scanf_pa@2:
; Line 145
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN26@u_scanf_pa@2:
; Line 147
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN24@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN28@u_scanf_pa@2
$LN24@u_scanf_pa@2:
; Line 148
	mov	eax, DWORD PTR _spec$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 149
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _spec$[ebp]
	mov	eax, DWORD PTR [edx+16]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	edx, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [edx+16], ecx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 150
	jmp	$LN26@u_scanf_pa@2
$LN28@u_scanf_pa@2:
; Line 154
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	je	SHORT $LN23@u_scanf_pa@2
; Line 155
	mov	eax, DWORD PTR _spec$[ebp]
	mov	DWORD PTR [eax+16], -1
; Line 156
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 159
	jmp	SHORT $LN21@u_scanf_pa@2
$LN23@u_scanf_pa@2:
; Line 160
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN21@u_scanf_pa@2:
; Line 164
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 42					; 0000002aH
	je	SHORT $LN19@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 40					; 00000028H
	jne	$LN20@u_scanf_pa@2
$LN19@u_scanf_pa@2:
; Line 165
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv189[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR tv189[ebp]
	mov	DWORD PTR tv190[ebp], eax
	cmp	DWORD PTR tv190[ebp], 40		; 00000028H
	je	SHORT $LN15@u_scanf_pa@2
	cmp	DWORD PTR tv190[ebp], 42		; 0000002aH
	je	SHORT $LN16@u_scanf_pa@2
	jmp	$LN17@u_scanf_pa@2
$LN16@u_scanf_pa@2:
; Line 169
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 170
	jmp	$LN17@u_scanf_pa@2
$LN15@u_scanf_pa@2:
; Line 176
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv195[ebp], cx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	movzx	eax, WORD PTR tv195[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 177
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv204[ebp], cx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	movzx	eax, WORD PTR tv204[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+6], dx
; Line 178
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv214[ebp], cx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	movzx	eax, WORD PTR tv214[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+6], dx
; Line 179
	mov	eax, DWORD PTR _s$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv224[ebp], cx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	movzx	eax, WORD PTR tv224[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+6], dx
; Line 182
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN17@u_scanf_pa@2:
; Line 186
	jmp	$LN21@u_scanf_pa@2
$LN20@u_scanf_pa@2:
; Line 189
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN13@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN14@u_scanf_pa@2
$LN13@u_scanf_pa@2:
; Line 190
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
$LN12@u_scanf_pa@2:
; Line 192
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN10@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN14@u_scanf_pa@2
$LN10@u_scanf_pa@2:
; Line 193
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 194
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 195
	jmp	$LN12@u_scanf_pa@2
$LN14@u_scanf_pa@2:
; Line 199
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 104				; 00000068H
	je	SHORT $LN8@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	je	SHORT $LN8@u_scanf_pa@2
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 76					; 0000004cH
	jne	SHORT $LN9@u_scanf_pa@2
$LN8@u_scanf_pa@2:
; Line 200
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv287[ebp], ecx
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 2
	mov	DWORD PTR _s$[ebp], edx
	mov	eax, DWORD PTR tv287[ebp]
	mov	DWORD PTR tv288[ebp], eax
	cmp	DWORD PTR tv288[ebp], 76		; 0000004cH
	je	SHORT $LN1@u_scanf_pa@2
	cmp	DWORD PTR tv288[ebp], 104		; 00000068H
	je	SHORT $LN5@u_scanf_pa@2
	cmp	DWORD PTR tv288[ebp], 108		; 0000006cH
	je	SHORT $LN4@u_scanf_pa@2
	jmp	SHORT $LN9@u_scanf_pa@2
$LN5@u_scanf_pa@2:
; Line 204
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+10], 1
; Line 205
	jmp	SHORT $LN9@u_scanf_pa@2
$LN4@u_scanf_pa@2:
; Line 209
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	jne	SHORT $LN3@u_scanf_pa@2
; Line 210
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+12], 1
; Line 212
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 214
	jmp	SHORT $LN2@u_scanf_pa@2
$LN3@u_scanf_pa@2:
; Line 215
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+11], 1
$LN2@u_scanf_pa@2:
; Line 216
	jmp	SHORT $LN9@u_scanf_pa@2
$LN1@u_scanf_pa@2:
; Line 220
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+9], 1
$LN9@u_scanf_pa@2:
; Line 226
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	mov	DWORD PTR _s$[ebp], eax
; Line 229
	mov	eax, DWORD PTR _s$[ebp]
	sub	eax, DWORD PTR _fmt$[ebp]
	sar	eax, 1
; Line 230
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_scanf_parse_spec ENDP
_TEXT	ENDS
END

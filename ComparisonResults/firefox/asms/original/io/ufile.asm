; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\io\ufile.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_u_finit_56
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\io\ufile.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_finit_56
_TEXT	SEGMENT
_f$ = 8							; size = 4
_locale$ = 12						; size = 4
_codepage$ = 16						; size = 4
_u_finit_56 PROC					; COMDAT
; Line 131
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 132
	push	0
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	_finit_owner
	add	esp, 16					; 00000010H
; Line 133
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_finit_56 ENDP
_TEXT	ENDS
EXTRN	_u_locbund_close_56:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_u_locbund_init_56:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp___fileno:PROC
EXTRN	_memset:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _finit_owner
_TEXT	SEGMENT
_result$ = -20						; size = 4
_status$ = -8						; size = 4
_f$ = 8							; size = 4
_locale$ = 12						; size = 4
_codepage$ = 16						; size = 4
_takeOwnership$ = 20					; size = 1
_finit_owner PROC					; COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	DWORD PTR _status$[ebp], 0
; Line 55
	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN9@finit_owne
; Line 56
	xor	eax, eax
	jmp	$LN10@finit_owne
$LN9@finit_owne:
; Line 58
	push	2108					; 0000083cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 59
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN8@finit_owne
; Line 60
	xor	eax, eax
	jmp	$LN10@finit_owne
$LN8@finit_owne:
; Line 63
	push	2108					; 0000083cH
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 64
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	DWORD PTR __imp___fileno
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx+2104], eax
; Line 79
	mov	eax, DWORD PTR _result$[ebp]
	cmp	DWORD PTR [eax+2104], 0
	jl	SHORT $LN7@finit_owne
	mov	eax, DWORD PTR _result$[ebp]
	cmp	DWORD PTR [eax+2104], 2
	jg	SHORT $LN7@finit_owne
; Line 82
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, eax
	mov	edi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	DWORD PTR __imp___fileno
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	shl	eax, 5
	add	esi, eax
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx+4], esi
; Line 87
	jmp	SHORT $LN6@finit_owne
$LN7@finit_owne:
; Line 90
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN6@finit_owne:
; Line 93
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 94
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 95
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 99
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	call	_u_locbund_init_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@finit_owne
; Line 101
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 102
	xor	eax, eax
	jmp	SHORT $LN10@finit_owne
$LN5@finit_owne:
; Line 107
	cmp	DWORD PTR _codepage$[ebp], 0
	je	SHORT $LN3@finit_owne
	mov	eax, DWORD PTR _codepage$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN4@finit_owne
$LN3@finit_owne:
; Line 108
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codepage$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [edx+8], eax
$LN4@finit_owne:
; Line 112
	cmp	DWORD PTR _status$[ebp], 0
	jg	SHORT $LN2@finit_owne
; Line 113
	mov	eax, DWORD PTR _result$[ebp]
	mov	cl, BYTE PTR _takeOwnership$[ebp]
	mov	BYTE PTR [eax+2100], cl
; Line 115
	jmp	SHORT $LN1@finit_owne
$LN2@finit_owne:
; Line 117
	mov	eax, DWORD PTR _result$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_close_56
	add	esp, 4
; Line 120
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 121
	mov	DWORD PTR _result$[ebp], 0
$LN1@finit_owne:
; Line 124
	mov	eax, DWORD PTR _result$[ebp]
$LN10@finit_owne:
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@finit_owne
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@finit_owne:
	DD	1
	DD	$LN13@finit_owne
$LN13@finit_owne:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN12@finit_owne
$LN12@finit_owne:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_finit_owner ENDP
_TEXT	ENDS
PUBLIC	_u_fadopt_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fadopt_56
_TEXT	SEGMENT
_f$ = 8							; size = 4
_locale$ = 12						; size = 4
_codepage$ = 16						; size = 4
_u_fadopt_56 PROC					; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 140
	push	1
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	_finit_owner
	add	esp, 16					; 00000010H
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fadopt_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fopen_56
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fopen_56
_TEXT	SEGMENT
_systemFile$ = -20					; size = 4
_result$ = -8						; size = 4
_filename$ = 8						; size = 4
_perm$ = 12						; size = 4
_locale$ = 16						; size = 4
_codepage$ = 20						; size = 4
_u_fopen_56 PROC					; COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _perm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _systemFile$[ebp], eax
; Line 151
	cmp	DWORD PTR _systemFile$[ebp], 0
	jne	SHORT $LN2@u_fopen_56
; Line 152
	xor	eax, eax
	jmp	SHORT $LN3@u_fopen_56
$LN2@u_fopen_56:
; Line 155
	push	1
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _systemFile$[ebp]
	push	edx
	call	_finit_owner
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 157
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN1@u_fopen_56
; Line 160
	mov	esi, esp
	mov	eax, DWORD PTR _systemFile$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@u_fopen_56:
; Line 163
	mov	eax, DWORD PTR _result$[ebp]
$LN3@u_fopen_56:
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fopen_56 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_u_fopen_u_56
EXTRN	__imp___wfopen:PROC
EXTRN	_u_austrcpy_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fopen_u_56
_TEXT	SEGMENT
_systemFile$13591 = -288				; size = 4
_buffer$ = -276						; size = 256
_result$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_perm$ = 12						; size = 4
_locale$ = 16						; size = 4
_codepage$ = 20						; size = 4
_u_fopen_u_56 PROC					; COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 175
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_u_austrcpy_56
	add	esp, 8
; Line 177
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _perm$[ebp]
	push	edx
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_u_fopen_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
; Line 180
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN3@u_fopen_u_
; Line 181
	mov	esi, esp
	mov	eax, DWORD PTR _perm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	DWORD PTR __imp___wfopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _systemFile$13591[ebp], eax
; Line 182
	cmp	DWORD PTR _systemFile$13591[ebp], 0
	je	SHORT $LN2@u_fopen_u_
; Line 183
	push	1
	mov	eax, DWORD PTR _codepage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR _systemFile$13591[ebp]
	push	edx
	call	_finit_owner
	add	esp, 16					; 00000010H
	mov	DWORD PTR _result$[ebp], eax
$LN2@u_fopen_u_:
; Line 185
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN3@u_fopen_u_
; Line 188
	mov	esi, esp
	mov	eax, DWORD PTR _systemFile$13591[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@u_fopen_u_:
; Line 192
	mov	eax, DWORD PTR _result$[ebp]
; Line 193
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@u_fopen_u_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@u_fopen_u_:
	DD	1
	DD	$LN7@u_fopen_u_
$LN7@u_fopen_u_:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN6@u_fopen_u_
$LN6@u_fopen_u_:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_u_fopen_u_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fstropen_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fstropen_56
_TEXT	SEGMENT
_result$ = -8						; size = 4
_stringBuf$ = 8						; size = 4
_capacity$ = 12						; size = 4
_locale$ = 16						; size = 4
_u_fstropen_56 PROC					; COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 202
	cmp	DWORD PTR _capacity$[ebp], 0
	jge	SHORT $LN3@u_fstropen
; Line 203
	xor	eax, eax
	jmp	SHORT $LN4@u_fstropen
$LN3@u_fstropen:
; Line 206
	push	2108					; 0000083cH
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _result$[ebp], eax
; Line 208
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@u_fstropen
; Line 209
	xor	eax, eax
	jmp	SHORT $LN4@u_fstropen
$LN2@u_fstropen:
; Line 211
	push	2108					; 0000083cH
	push	0
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 212
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _stringBuf$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 213
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _stringBuf$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 214
	mov	eax, DWORD PTR _capacity$[ebp]
	mov	ecx, DWORD PTR _stringBuf$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [eax+16], edx
; Line 218
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _result$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	call	_u_locbund_init_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@u_fstropen
; Line 220
	mov	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 221
	xor	eax, eax
	jmp	SHORT $LN4@u_fstropen
$LN1@u_fstropen:
; Line 225
	mov	eax, DWORD PTR _result$[ebp]
$LN4@u_fstropen:
; Line 226
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fstropen_56 ENDP
_TEXT	ENDS
PUBLIC	_u_feof_56
EXTRN	__imp__feof:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_feof_56
_TEXT	SEGMENT
tv77 = -208						; size = 4
_endOfBuffer$ = -5					; size = 1
_f$ = 8							; size = 4
_u_feof_56 PROC						; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN2@u_feof_56
; Line 233
	mov	al, 1
	jmp	SHORT $LN3@u_feof_56
$LN2@u_feof_56:
; Line 235
	mov	eax, DWORD PTR _f$[ebp]
	mov	ecx, DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+16]
	setae	al
	mov	BYTE PTR _endOfBuffer$[ebp], al
; Line 236
	mov	eax, DWORD PTR _f$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@u_feof_56
; Line 237
	movsx	eax, BYTE PTR _endOfBuffer$[ebp]
	test	eax, eax
	je	SHORT $LN5@u_feof_56
	mov	esi, esp
	mov	ecx, DWORD PTR _f$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	DWORD PTR __imp__feof
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@u_feof_56
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN6@u_feof_56
$LN5@u_feof_56:
	mov	DWORD PTR tv77[ebp], 0
$LN6@u_feof_56:
	mov	al, BYTE PTR tv77[ebp]
	jmp	SHORT $LN3@u_feof_56
$LN1@u_feof_56:
; Line 239
	mov	al, BYTE PTR _endOfBuffer$[ebp]
$LN3@u_feof_56:
; Line 240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_feof_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fflush_56
EXTRN	__imp__fflush:PROC
EXTRN	_ufile_flush_io_56:PROC
EXTRN	_ufile_flush_translit_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fflush_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_fflush_56 PROC					; COMDAT
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 245
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_ufile_flush_translit_56
	add	esp, 4
; Line 246
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_ufile_flush_io_56
	add	esp, 4
; Line 247
	mov	eax, DWORD PTR _file$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@u_fflush_5
; Line 248
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__fflush
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@u_fflush_5
$LN3@u_fflush_5:
; Line 250
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR _file$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+16]
	jae	SHORT $LN4@u_fflush_5
; Line 251
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	xor	edx, edx
	mov	WORD PTR [ecx], dx
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 2
	mov	edx, DWORD PTR _file$[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN4@u_fflush_5:
; Line 254
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fflush_56 ENDP
_TEXT	ENDS
PUBLIC	_u_frewind_56
EXTRN	__imp__rewind:PROC
EXTRN	_ucnv_reset_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_frewind_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_frewind_56 PROC					; COMDAT
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 259
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_u_fflush_56
	add	esp, 4
; Line 260
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_ucnv_reset_56
	add	esp, 4
; Line 261
	mov	eax, DWORD PTR _file$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@u_frewind_
; Line 262
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__rewind
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 263
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _file$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 264
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 52					; 00000034H
	mov	ecx, DWORD PTR _file$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 266
	jmp	SHORT $LN3@u_frewind_
$LN2@u_frewind_:
; Line 267
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR _file$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+12], edx
$LN3@u_frewind_:
; Line 269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_frewind_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fclose_56
EXTRN	_ucnv_close_56:PROC
EXTRN	_ufile_close_translit_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fclose_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_fclose_56 PROC					; COMDAT
; Line 273
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 274
	cmp	DWORD PTR _file$[ebp], 0
	je	SHORT $LN3@u_fclose_5
; Line 275
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_u_fflush_56
	add	esp, 4
; Line 276
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_ufile_close_translit_56
	add	esp, 4
; Line 278
	mov	eax, DWORD PTR _file$[ebp]
	movsx	ecx, BYTE PTR [eax+2100]
	test	ecx, ecx
	je	SHORT $LN1@u_fclose_5
; Line 279
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@u_fclose_5:
; Line 282
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_close_56
	add	esp, 4
; Line 285
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_ucnv_close_56
	add	esp, 4
; Line 286
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@u_fclose_5:
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fclose_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fgetfile_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fgetfile_56
_TEXT	SEGMENT
_f$ = 8							; size = 4
_u_fgetfile_56 PROC					; COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 293
	mov	eax, DWORD PTR _f$[ebp]
	mov	eax, DWORD PTR [eax+4]
; Line 294
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fgetfile_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fgetlocale_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fgetlocale_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_fgetlocale_56 PROC					; COMDAT
; Line 300
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 301
	mov	eax, DWORD PTR _file$[ebp]
	mov	eax, DWORD PTR [eax+24]
; Line 302
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fgetlocale_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fsetlocale_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fsetlocale_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_locale$ = 12						; size = 4
_u_fsetlocale_56 PROC					; COMDAT
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 308
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_close_56
	add	esp, 4
; Line 310
	mov	eax, DWORD PTR _locale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	call	_u_locbund_init_56
	add	esp, 8
	neg	eax
	sbb	eax, eax
	neg	eax
	sub	eax, 1
; Line 311
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fsetlocale_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fgetcodepage_56
EXTRN	_ucnv_getName_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fgetcodepage_56
_TEXT	SEGMENT
_codepage$ = -20					; size = 4
_status$ = -8						; size = 4
_file$ = 8						; size = 4
_u_fgetcodepage_56 PROC					; COMDAT
; Line 317
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 318
	mov	DWORD PTR _status$[ebp], 0
; Line 319
	mov	DWORD PTR _codepage$[ebp], 0
; Line 321
	mov	eax, DWORD PTR _file$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN2@u_fgetcode
; Line 322
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_ucnv_getName_56
	add	esp, 8
	mov	DWORD PTR _codepage$[ebp], eax
; Line 323
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_fgetcode
; Line 324
	xor	eax, eax
	jmp	SHORT $LN3@u_fgetcode
$LN2@u_fgetcode:
; Line 326
	mov	eax, DWORD PTR _codepage$[ebp]
$LN3@u_fgetcode:
; Line 327
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@u_fgetcode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@u_fgetcode:
	DD	1
	DD	$LN6@u_fgetcode
$LN6@u_fgetcode:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@u_fgetcode
$LN5@u_fgetcode:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_u_fgetcodepage_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fsetcodepage_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fsetcodepage_56
_TEXT	SEGMENT
_retVal$ = -20						; size = 4
_status$ = -8						; size = 4
_codepage$ = 8						; size = 4
_file$ = 12						; size = 4
_u_fsetcodepage_56 PROC					; COMDAT
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 333
	mov	DWORD PTR _status$[ebp], 0
; Line 334
	mov	DWORD PTR _retVal$[ebp], -1
; Line 337
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR _file$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN2@u_fsetcode
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR _file$[ebp]
	mov	edx, DWORD PTR [eax+16]
	cmp	edx, DWORD PTR [ecx+20]
	jne	SHORT $LN2@u_fsetcode
; Line 338
	mov	eax, DWORD PTR _file$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_ucnv_close_56
	add	esp, 4
; Line 339
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _codepage$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	edx, DWORD PTR _file$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 340
	cmp	DWORD PTR _status$[ebp], 0
	jg	SHORT $LN2@u_fsetcode
; Line 341
	mov	DWORD PTR _retVal$[ebp], 0
$LN2@u_fsetcode:
; Line 344
	mov	eax, DWORD PTR _retVal$[ebp]
; Line 345
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@u_fsetcode
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@u_fsetcode:
	DD	1
	DD	$LN6@u_fsetcode
$LN6@u_fsetcode:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@u_fsetcode
$LN5@u_fsetcode:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_u_fsetcodepage_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fgetConverter_56
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fgetConverter_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_fgetConverter_56 PROC				; COMDAT
; Line 350
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 351
	mov	eax, DWORD PTR _file$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 352
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fgetConverter_56 ENDP
_TEXT	ENDS
PUBLIC	_u_fgetNumberFormat_56
EXTRN	_u_locbund_getNumberFormat_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_fgetNumberFormat_56
_TEXT	SEGMENT
_file$ = 8						; size = 4
_u_fgetNumberFormat_56 PROC				; COMDAT
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 356
	push	1
	mov	eax, DWORD PTR _file$[ebp]
	add	eax, 24					; 00000018H
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
; Line 357
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_fgetNumberFormat_56 ENDP
_TEXT	ENDS
END

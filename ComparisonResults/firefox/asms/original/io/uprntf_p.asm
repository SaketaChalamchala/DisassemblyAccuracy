; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\io\uprntf_p.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
_gNullStr DW	028H
	DW	06eH
	DW	075H
	DW	06cH
	DW	06cH
	DW	029H
	DW	00H
	ORG $+2
_gSpaceStr DW	020H
	DW	00H
?PERCENT@?1??u_printf_simple_percent_handler@@9@9 DW 025H ; `u_printf_simple_percent_handler'::`2'::PERCENT
	ORG $+2
_g_u_printf_infos DD 00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	FLAT:_u_printf_simple_percent_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	09H
	DD	FLAT:_u_printf_uchar_handler
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_printf_scientific_handler
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_printf_scidbl_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_printf_percent_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	0aH
	DD	FLAT:_u_printf_ustring_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	08H
	DD	FLAT:_u_printf_spellout_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_printf_hex_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	04H
	DD	FLAT:_u_printf_char_handler
	DD	03H
	DD	FLAT:_u_printf_integer_handler
	DD	08H
	DD	FLAT:_u_printf_scientific_handler
	DD	08H
	DD	FLAT:_u_printf_double_handler
	DD	08H
	DD	FLAT:_u_printf_scidbl_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_printf_integer_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	02H
	DD	FLAT:_u_printf_count_handler
	DD	03H
	DD	FLAT:_u_printf_octal_handler
	DD	06H
	DD	FLAT:_u_printf_pointer_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	05H
	DD	FLAT:_u_printf_string_handler
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_printf_uinteger_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	03H
	DD	FLAT:_u_printf_hex_handler
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+96
CONST	ENDS
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\io\uprntf_p.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_printf_simple_percent_handler
_TEXT	SEGMENT
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_simple_percent_handler PROC			; COMDAT
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 188
	mov	esi, esp
	push	1
	push	OFFSET ?PERCENT@?1??u_printf_simple_percent_handler@@9@9
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_printf_simple_percent_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_uprv_free_56:PROC
EXTRN	_u_strlen_56:PROC
EXTRN	_ufmt_defaultCPToUnicode_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_strlen:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_string_handler
_TEXT	SEGMENT
_arg$ = -324						; size = 4
_argSize$ = -312					; size = 4
_written$ = -300					; size = 4
_len$ = -288						; size = 4
_buffer$ = -276						; size = 256
_s$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_string_handler PROC				; COMDAT
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 203
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _arg$[ebp], ecx
; Line 206
	cmp	DWORD PTR _arg$[ebp], 0
	je	$LN7@u_printf_s
; Line 207
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _argSize$[ebp], eax
; Line 208
	cmp	DWORD PTR _argSize$[ebp], 64		; 00000040H
	jb	SHORT $LN6@u_printf_s
; Line 211
	mov	eax, DWORD PTR _argSize$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _argSize$[ebp]
	lea	eax, DWORD PTR [edx+edx+2]
	shl	eax, 1
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _argSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _arg$[ebp]
	push	edx
	call	_ufmt_defaultCPToUnicode_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
; Line 212
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN5@u_printf_s
; Line 213
	xor	eax, eax
	jmp	$LN8@u_printf_s
$LN5@u_printf_s:
; Line 216
	jmp	SHORT $LN4@u_printf_s
$LN6@u_printf_s:
; Line 218
	push	128					; 00000080H
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _argSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _arg$[ebp]
	push	edx
	call	_ufmt_defaultCPToUnicode_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _s$[ebp], eax
$LN4@u_printf_s:
; Line 221
	jmp	SHORT $LN3@u_printf_s
$LN7@u_printf_s:
; Line 222
	mov	DWORD PTR _s$[ebp], OFFSET _gNullStr
$LN3@u_printf_s:
; Line 224
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 228
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN2@u_printf_s
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN2@u_printf_s
; Line 229
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _len$[ebp], ecx
$LN2@u_printf_s:
; Line 232
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _written$[ebp], eax
; Line 235
	cmp	DWORD PTR _s$[ebp], OFFSET _gNullStr
	je	SHORT $LN1@u_printf_s
	lea	eax, DWORD PTR _buffer$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	je	SHORT $LN1@u_printf_s
; Line 236
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@u_printf_s:
; Line 239
	mov	eax, DWORD PTR _written$[ebp]
$LN8@u_printf_s:
; Line 240
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@u_printf_s
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@u_printf_s:
	DD	1
	DD	$LN11@u_printf_s
$LN11@u_printf_s:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN10@u_printf_s
$LN10@u_printf_s:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_u_printf_string_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_char_handler
_TEXT	SEGMENT
_arg$ = -49						; size = 1
_written$ = -40						; size = 4
_len$ = -28						; size = 4
_s$ = -16						; size = 6
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_char_handler PROC				; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 250
	mov	DWORD PTR _len$[ebp], 1
; Line 251
	mov	eax, DWORD PTR _args$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _arg$[ebp], cl
; Line 254
	push	3
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _arg$[ebp]
	push	ecx
	call	_ufmt_defaultCPToUnicode_56
	add	esp, 16					; 00000010H
; Line 257
	movzx	eax, BYTE PTR _arg$[ebp]
	test	eax, eax
	je	SHORT $LN1@u_printf_c
; Line 258
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
$LN1@u_printf_c:
; Line 265
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _written$[ebp], eax
; Line 267
	mov	eax, DWORD PTR _written$[ebp]
; Line 268
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@u_printf_c
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@u_printf_c:
	DD	2
	DD	$LN6@u_printf_c
$LN6@u_printf_c:
	DD	-16					; fffffff0H
	DD	6
	DD	$LN4@u_printf_c
	DD	-49					; ffffffcfH
	DD	1
	DD	$LN5@u_printf_c
$LN5@u_printf_c:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
$LN4@u_printf_c:
	DB	115					; 00000073H
	DB	0
_u_printf_char_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_formatDouble_56:PROC
EXTRN	_unum_setAttribute_56:PROC
EXTRN	_unum_getAttribute_56:PROC
EXTRN	_u_locbund_getNumberFormat_56:PROC
EXTRN	__fltused:DWORD
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_double_handler
_TEXT	SEGMENT
_localStatus$11943 = -4212				; size = 4
_status$ = -4200					; size = 4
_resultLen$ = -4188					; size = 4
_maxDecimalDigits$ = -4176				; size = 4
_minDecimalDigits$ = -4164				; size = 4
_prefixBufferLen$ = -4152				; size = 4
_prefixBuffer$ = -4140					; size = 2048
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_double_handler PROC				; COMDAT
; Line 276
	push	ebp
	mov	ebp, esp
	mov	eax, 4408				; 00001138H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4408]
	mov	ecx, 1102				; 0000044eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 277
	mov	eax, DWORD PTR _args$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _num$[ebp]
; Line 281
	mov	DWORD PTR _prefixBufferLen$[ebp], 2048	; 00000800H
; Line 285
	mov	DWORD PTR _status$[ebp], 0
; Line 287
	xor	eax, eax
	mov	WORD PTR _prefixBuffer$[ebp], ax
; Line 294
	push	1
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 297
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN8@u_printf_d
; Line 298
	xor	eax, eax
	jmp	$LN9@u_printf_d
$LN8@u_printf_d:
; Line 301
	push	7
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDecimalDigits$[ebp], eax
; Line 302
	push	6
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _maxDecimalDigits$[ebp], eax
; Line 305
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_printf_d
; Line 307
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	8
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@u_printf_d
$LN7@u_printf_d:
; Line 309
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN5@u_printf_d
; Line 312
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 314
	jmp	SHORT $LN4@u_printf_d
$LN5@u_printf_d:
; Line 316
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN4@u_printf_d:
; Line 320
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN3@u_printf_d
; Line 321
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_set_sign
	add	esp, 20					; 00000014H
$LN3@u_printf_d:
; Line 325
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_formatDouble_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 327
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_printf_d
; Line 328
	mov	DWORD PTR _resultLen$[ebp], 0
$LN2@u_printf_d:
; Line 333
	mov	eax, DWORD PTR _minDecimalDigits$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 334
	mov	eax, DWORD PTR _maxDecimalDigits$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 336
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_d
; Line 338
	mov	DWORD PTR _localStatus$11943[ebp], 0
; Line 339
	lea	eax, DWORD PTR _localStatus$11943[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_reset_sign
	add	esp, 20					; 00000014H
$LN1@u_printf_d:
; Line 342
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@u_printf_d:
; Line 343
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@u_printf_d
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4408				; 00001138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@u_printf_d:
	DD	5
	DD	$LN16@u_printf_d
$LN16@u_printf_d:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN11@u_printf_d
	DD	-4140					; ffffefd4H
	DD	2048					; 00000800H
	DD	$LN12@u_printf_d
	DD	-4152					; ffffefc8H
	DD	4
	DD	$LN13@u_printf_d
	DD	-4200					; ffffef98H
	DD	4
	DD	$LN14@u_printf_d
	DD	-4212					; ffffef8cH
	DD	4
	DD	$LN15@u_printf_d
$LN15@u_printf_d:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@u_printf_d:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN13@u_printf_d:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN12@u_printf_d:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@u_printf_d:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_double_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_getSymbol_56:PROC
EXTRN	_unum_setTextAttribute_56:PROC
EXTRN	_unum_getTextAttribute_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_set_sign
_TEXT	SEGMENT
_symbolLen$11830 = -36					; size = 4
_plusSymbol$11829 = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
_format$ = 8						; size = 4
_info$ = 12						; size = 4
_prefixBuffer$ = 16					; size = 4
_prefixBufLen$ = 20					; size = 4
_status$ = 24						; size = 4
_u_printf_set_sign PROC					; COMDAT
; Line 127
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 128
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN4@u_printf_s@2
; Line 133
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefixBufLen$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _prefixBuffer$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_getTextAttribute_56
	add	esp, 20					; 00000014H
	mov	edx, DWORD PTR _prefixBufLen$[ebp]
	mov	DWORD PTR [edx], eax
; Line 134
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+15]
	test	ecx, ecx
	je	SHORT $LN3@u_printf_s@2
; Line 137
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	push	OFFSET _gSpaceStr
	push	0
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setTextAttribute_56
	add	esp, 20					; 00000014H
; Line 139
	jmp	SHORT $LN2@u_printf_s@2
$LN3@u_printf_s@2:
; Line 147
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	8
	lea	ecx, DWORD PTR _plusSymbol$11829[ebp]
	push	ecx
	push	7
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_getSymbol_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _symbolLen$11830[ebp], eax
; Line 152
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _symbolLen$11830[ebp]
	push	ecx
	lea	edx, DWORD PTR _plusSymbol$11829[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setTextAttribute_56
	add	esp, 20					; 00000014H
$LN2@u_printf_s@2:
; Line 155
	jmp	SHORT $LN5@u_printf_s@2
$LN4@u_printf_s@2:
; Line 156
	mov	eax, DWORD PTR _prefixBufLen$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@u_printf_s@2:
; Line 158
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@u_printf_s@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@u_printf_s@2:
	DD	1
	DD	$LN8@u_printf_s@2
$LN8@u_printf_s@2:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN7@u_printf_s@2
$LN7@u_printf_s@2:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	0
_u_printf_set_sign ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_printf_reset_sign
_TEXT	SEGMENT
_format$ = 8						; size = 4
_info$ = 12						; size = 4
_prefixBuffer$ = 16					; size = 4
_prefixBufLen$ = 20					; size = 4
_status$ = 24						; size = 4
_u_printf_reset_sign PROC				; COMDAT
; Line 166
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 167
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN2@u_printf_r
; Line 172
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefixBufLen$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _prefixBuffer$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setTextAttribute_56
	add	esp, 20					; 00000014H
$LN2@u_printf_r:
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_printf_reset_sign ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_formatInt64_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_integer_handler
_TEXT	SEGMENT
_localStatus$11975 = -4200				; size = 4
_status$ = -4188					; size = 4
_resultLen$ = -4176					; size = 4
_minDigits$ = -4164					; size = 4
_prefixBufferLen$ = -4152				; size = 4
_prefixBuffer$ = -4140					; size = 2048
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_integer_handler PROC				; COMDAT
; Line 352
	push	ebp
	mov	ebp, esp
	mov	eax, 4396				; 0000112cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4396]
	mov	ecx, 1099				; 0000044bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 353
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _num$[ebp+4], edx
; Line 357
	mov	DWORD PTR _prefixBufferLen$[ebp], 2048	; 00000800H
; Line 358
	mov	DWORD PTR _minDigits$[ebp], -1
; Line 360
	mov	DWORD PTR _status$[ebp], 0
; Line 362
	xor	eax, eax
	mov	WORD PTR _prefixBuffer$[ebp], ax
; Line 365
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN9@u_printf_i
; Line 366
	movsx	eax, WORD PTR _num$[ebp]
	cdq
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], edx
	jmp	SHORT $LN8@u_printf_i
$LN9@u_printf_i:
; Line 367
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+22]
	test	ecx, ecx
	jne	SHORT $LN8@u_printf_i
; Line 368
	mov	eax, DWORD PTR _num$[ebp]
	cdq
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], edx
$LN8@u_printf_i:
; Line 371
	push	1
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 374
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN6@u_printf_i
; Line 375
	xor	eax, eax
	jmp	$LN10@u_printf_i
$LN6@u_printf_i:
; Line 380
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN5@u_printf_i
; Line 382
	push	4
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDigits$[ebp], eax
; Line 383
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	4
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN5@u_printf_i:
; Line 387
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN4@u_printf_i
; Line 388
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_set_sign
	add	esp, 20					; 00000014H
$LN4@u_printf_i:
; Line 392
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _num$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_formatInt64_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 394
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN3@u_printf_i
; Line 395
	mov	DWORD PTR _resultLen$[ebp], 0
$LN3@u_printf_i:
; Line 399
	cmp	DWORD PTR _minDigits$[ebp], -1
	je	SHORT $LN2@u_printf_i
; Line 400
	mov	eax, DWORD PTR _minDigits$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN2@u_printf_i:
; Line 403
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_i
; Line 405
	mov	DWORD PTR _localStatus$11975[ebp], 0
; Line 406
	lea	eax, DWORD PTR _localStatus$11975[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_reset_sign
	add	esp, 20					; 00000014H
$LN1@u_printf_i:
; Line 409
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@u_printf_i:
; Line 410
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@u_printf_i
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4396				; 0000112cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@u_printf_i:
	DD	5
	DD	$LN17@u_printf_i
$LN17@u_printf_i:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN12@u_printf_i
	DD	-4140					; ffffefd4H
	DD	2048					; 00000800H
	DD	$LN13@u_printf_i
	DD	-4152					; ffffefc8H
	DD	4
	DD	$LN14@u_printf_i
	DD	-4188					; ffffefa4H
	DD	4
	DD	$LN15@u_printf_i
	DD	-4200					; ffffef98H
	DD	4
	DD	$LN16@u_printf_i
$LN16@u_printf_i:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN15@u_printf_i:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@u_printf_i:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN13@u_printf_i:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN12@u_printf_i:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_integer_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__memmove:PROC
EXTRN	_ufmt_64tou_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_hex_handler
_TEXT	SEGMENT
tv77 = -2284						; size = 4
_len$ = -2084						; size = 4
_result$ = -2072					; size = 2048
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_hex_handler PROC				; COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 2284				; 000008ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2284]
	mov	ecx, 571				; 0000023bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 419
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _num$[ebp+4], edx
; Line 421
	mov	DWORD PTR _len$[ebp], 1024		; 00000400H
; Line 425
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN4@u_printf_h
; Line 426
	mov	eax, DWORD PTR _num$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
	jmp	SHORT $LN3@u_printf_h
$LN4@u_printf_h:
; Line 427
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+22]
	test	ecx, ecx
	jne	SHORT $LN3@u_printf_h
; Line 428
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
$LN3@u_printf_h:
; Line 433
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN7@u_printf_h
	mov	ecx, DWORD PTR _info$[ebp]
	movsx	edx, BYTE PTR [ecx+18]
	test	edx, edx
	je	SHORT $LN7@u_printf_h
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN8@u_printf_h
$LN7@u_printf_h:
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv77[ebp], eax
$LN8@u_printf_h:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	movzx	eax, WORD PTR [edx+10]
	cmp	eax, 120				; 00000078H
	sete	cl
	movzx	edx, cl
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _num$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _num$[ebp]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_ufmt_64tou_56
	add	esp, 28					; 0000001cH
; Line 436
	mov	eax, DWORD PTR _num$[ebp]
	or	eax, DWORD PTR _num$[ebp+4]
	je	SHORT $LN1@u_printf_h
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_h
	cmp	DWORD PTR _len$[ebp], 1022		; 000003feH
	jge	SHORT $LN1@u_printf_h
; Line 438
	mov	eax, DWORD PTR _len$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	lea	edx, DWORD PTR _result$[ebp+4]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 439
	mov	eax, 48					; 00000030H
	mov	WORD PTR _result$[ebp], ax
; Line 440
	mov	eax, DWORD PTR _info$[ebp]
	mov	cx, WORD PTR [eax+10]
	mov	WORD PTR _result$[ebp+2], cx
; Line 441
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 2
	mov	DWORD PTR _len$[ebp], eax
$LN1@u_printf_h:
; Line 444
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 445
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@u_printf_h
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2284				; 000008ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@u_printf_h:
	DD	2
	DD	$LN11@u_printf_h
$LN11@u_printf_h:
	DD	-2072					; fffff7e8H
	DD	2048					; 00000800H
	DD	$LN9@u_printf_h
	DD	-2084					; fffff7dcH
	DD	4
	DD	$LN10@u_printf_h
$LN10@u_printf_h:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN9@u_printf_h:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_hex_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_octal_handler
_TEXT	SEGMENT
tv77 = -2284						; size = 4
_len$ = -2084						; size = 4
_result$ = -2072					; size = 2048
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_octal_handler PROC				; COMDAT
; Line 453
	push	ebp
	mov	ebp, esp
	sub	esp, 2284				; 000008ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2284]
	mov	ecx, 571				; 0000023bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 454
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _num$[ebp+4], edx
; Line 456
	mov	DWORD PTR _len$[ebp], 1024		; 00000400H
; Line 460
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN4@u_printf_o
; Line 461
	mov	eax, DWORD PTR _num$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
	jmp	SHORT $LN3@u_printf_o
$LN4@u_printf_o:
; Line 462
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+22]
	test	ecx, ecx
	jne	SHORT $LN3@u_printf_o
; Line 463
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
$LN3@u_printf_o:
; Line 468
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	jne	SHORT $LN7@u_printf_o
	mov	ecx, DWORD PTR _info$[ebp]
	movsx	edx, BYTE PTR [ecx+18]
	test	edx, edx
	je	SHORT $LN7@u_printf_o
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv77[ebp], ecx
	jmp	SHORT $LN8@u_printf_o
$LN7@u_printf_o:
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv77[ebp], eax
$LN8@u_printf_o:
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	push	0
	push	8
	mov	edx, DWORD PTR _num$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	call	_ufmt_64tou_56
	add	esp, 28					; 0000001cH
; Line 471
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_o
	movzx	eax, WORD PTR _result$[ebp]
	cmp	eax, 48					; 00000030H
	je	SHORT $LN1@u_printf_o
	cmp	DWORD PTR _len$[ebp], 1023		; 000003ffH
	jge	SHORT $LN1@u_printf_o
; Line 473
	mov	eax, DWORD PTR _len$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	lea	edx, DWORD PTR _result$[ebp+2]
	push	edx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 474
	mov	eax, 48					; 00000030H
	mov	WORD PTR _result$[ebp], ax
; Line 475
	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	mov	DWORD PTR _len$[ebp], eax
$LN1@u_printf_o:
; Line 478
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@u_printf_o
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2284				; 000008ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@u_printf_o:
	DD	2
	DD	$LN11@u_printf_o
$LN11@u_printf_o:
	DD	-2072					; fffff7e8H
	DD	2048					; 00000800H
	DD	$LN9@u_printf_o
	DD	-2084					; fffff7dcH
	DD	4
	DD	$LN10@u_printf_o
$LN10@u_printf_o:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN9@u_printf_o:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_octal_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_uinteger_handler
_TEXT	SEGMENT
_status$ = -2120					; size = 4
_resultLen$ = -2108					; size = 4
_minDigits$ = -2096					; size = 4
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_uinteger_handler PROC				; COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 2316				; 0000090cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2316]
	mov	ecx, 579				; 00000243H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 488
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _num$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _num$[ebp+4], edx
; Line 491
	mov	DWORD PTR _minDigits$[ebp], -1
; Line 493
	mov	DWORD PTR _status$[ebp], 0
; Line 496
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+20]
	test	ecx, ecx
	je	SHORT $LN7@u_printf_u
; Line 497
	mov	eax, DWORD PTR _num$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
	jmp	SHORT $LN6@u_printf_u
$LN7@u_printf_u:
; Line 498
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+22]
	test	ecx, ecx
	jne	SHORT $LN6@u_printf_u
; Line 499
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _num$[ebp+4]
	and	ecx, 0
	mov	DWORD PTR _num$[ebp], eax
	mov	DWORD PTR _num$[ebp+4], ecx
$LN6@u_printf_u:
; Line 502
	push	1
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 505
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN4@u_printf_u
; Line 506
	xor	eax, eax
	jmp	$LN8@u_printf_u
$LN4@u_printf_u:
; Line 511
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN3@u_printf_u
; Line 513
	push	4
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDigits$[ebp], eax
; Line 514
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	4
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN3@u_printf_u:
; Line 520
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _num$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_formatInt64_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 522
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_printf_u
; Line 523
	mov	DWORD PTR _resultLen$[ebp], 0
$LN2@u_printf_u:
; Line 527
	cmp	DWORD PTR _minDigits$[ebp], -1
	je	SHORT $LN1@u_printf_u
; Line 528
	mov	eax, DWORD PTR _minDigits$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN1@u_printf_u:
; Line 531
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@u_printf_u:
; Line 532
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@u_printf_u
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2316				; 0000090cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@u_printf_u:
	DD	2
	DD	$LN12@u_printf_u
$LN12@u_printf_u:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN10@u_printf_u
	DD	-2120					; fffff7b8H
	DD	4
	DD	$LN11@u_printf_u
$LN11@u_printf_u:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN10@u_printf_u:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_uinteger_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_ufmt_ptou_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_pointer_handler
_TEXT	SEGMENT
_len$ = -2068						; size = 4
_result$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_pointer_handler PROC				; COMDAT
; Line 540
	push	ebp
	mov	ebp, esp
	sub	esp, 2264				; 000008d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2264]
	mov	ecx, 566				; 00000236H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 542
	mov	DWORD PTR _len$[ebp], 1024		; 00000400H
; Line 545
	push	1
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	call	_ufmt_ptou_56
	add	esp, 16					; 00000010H
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 548
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@u_printf_p
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2264				; 000008d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@u_printf_p:
	DD	2
	DD	$LN5@u_printf_p
$LN5@u_printf_p:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN3@u_printf_p
	DD	-2068					; fffff7ecH
	DD	4
	DD	$LN4@u_printf_p
$LN4@u_printf_p:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN3@u_printf_p:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_pointer_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_unum_setSymbol_56:PROC
EXTRN	_u_strToUpper_56:PROC
EXTRN	_u_strToLower_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_scientific_handler
_TEXT	SEGMENT
_localStatus$12100 = -4284				; size = 4
_expBuf$ = -4272					; size = 16
_resultLen$ = -4248					; size = 4
_expLen$ = -4236					; size = 4
_srcLen$ = -4224					; size = 4
_srcExpBuf$ = -4212					; size = 16
_status$ = -4188					; size = 4
_maxDecimalDigits$ = -4176				; size = 4
_minDecimalDigits$ = -4164				; size = 4
_prefixBufferLen$ = -4152				; size = 4
_prefixBuffer$ = -4140					; size = 2048
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_scientific_handler PROC			; COMDAT
; Line 556
	push	ebp
	mov	ebp, esp
	mov	eax, 4480				; 00001180H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4480]
	mov	ecx, 1120				; 00000460H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 557
	mov	eax, DWORD PTR _args$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _num$[ebp]
; Line 561
	mov	DWORD PTR _prefixBufferLen$[ebp], 2048	; 00000800H
; Line 564
	mov	DWORD PTR _status$[ebp], 0
; Line 570
	xor	eax, eax
	mov	WORD PTR _prefixBuffer$[ebp], ax
; Line 577
	push	4
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 580
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN13@u_printf_s@3
; Line 581
	xor	eax, eax
	jmp	$LN14@u_printf_s@3
$LN13@u_printf_s@3:
; Line 589
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	11					; 0000000bH
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_getSymbol_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _srcLen$[ebp], eax
; Line 592
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	cmp	ecx, 101				; 00000065H
	jne	SHORT $LN12@u_printf_s@3
; Line 596
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _formatBundle$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	call	_u_strToLower_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _expLen$[ebp], eax
; Line 598
	jmp	SHORT $LN11@u_printf_s@3
$LN12@u_printf_s@3:
; Line 602
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _formatBundle$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _srcLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _srcExpBuf$[ebp]
	push	ecx
	push	16					; 00000010H
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	call	_u_strToUpper_56
	add	esp, 24					; 00000018H
	mov	DWORD PTR _expLen$[ebp], eax
$LN11@u_printf_s@3:
; Line 609
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _expLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _expBuf$[ebp]
	push	edx
	push	11					; 0000000bH
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setSymbol_56
	add	esp, 20					; 00000014H
; Line 612
	push	7
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDecimalDigits$[ebp], eax
; Line 613
	push	6
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _maxDecimalDigits$[ebp], eax
; Line 616
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN10@u_printf_s@3
; Line 618
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 101				; 00000065H
	je	SHORT $LN8@u_printf_s@3
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+8]
	cmp	ecx, 69					; 00000045H
	jne	SHORT $LN9@u_printf_s@3
$LN8@u_printf_s@3:
; Line 619
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	8
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 621
	jmp	SHORT $LN7@u_printf_s@3
$LN9@u_printf_s@3:
; Line 622
	push	1
	push	7
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 623
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN7@u_printf_s@3:
; Line 624
	jmp	SHORT $LN4@u_printf_s@3
$LN10@u_printf_s@3:
; Line 626
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN5@u_printf_s@3
; Line 629
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 631
	jmp	SHORT $LN4@u_printf_s@3
$LN5@u_printf_s@3:
; Line 633
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN4@u_printf_s@3:
; Line 637
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN3@u_printf_s@3
; Line 638
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_set_sign
	add	esp, 20					; 00000014H
$LN3@u_printf_s@3:
; Line 642
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_formatDouble_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 644
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_printf_s@3
; Line 645
	mov	DWORD PTR _resultLen$[ebp], 0
$LN2@u_printf_s@3:
; Line 650
	mov	eax, DWORD PTR _minDecimalDigits$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 651
	mov	eax, DWORD PTR _maxDecimalDigits$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 661
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_s@3
; Line 663
	mov	DWORD PTR _localStatus$12100[ebp], 0
; Line 664
	lea	eax, DWORD PTR _localStatus$12100[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_reset_sign
	add	esp, 20					; 00000014H
$LN1@u_printf_s@3:
; Line 667
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@u_printf_s@3:
; Line 668
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@u_printf_s@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4480				; 00001180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@u_printf_s@3:
	DD	7
	DD	$LN23@u_printf_s@3
$LN23@u_printf_s@3:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN16@u_printf_s@3
	DD	-4140					; ffffefd4H
	DD	2048					; 00000800H
	DD	$LN17@u_printf_s@3
	DD	-4152					; ffffefc8H
	DD	4
	DD	$LN18@u_printf_s@3
	DD	-4188					; ffffefa4H
	DD	4
	DD	$LN19@u_printf_s@3
	DD	-4212					; ffffef8cH
	DD	16					; 00000010H
	DD	$LN20@u_printf_s@3
	DD	-4272					; ffffef50H
	DD	16					; 00000010H
	DD	$LN21@u_printf_s@3
	DD	-4284					; ffffef44H
	DD	4
	DD	$LN22@u_printf_s@3
$LN22@u_printf_s@3:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN21@u_printf_s@3:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN20@u_printf_s@3:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	69					; 00000045H
	DB	120					; 00000078H
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN19@u_printf_s@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN18@u_printf_s@3:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN17@u_printf_s@3:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN16@u_printf_s@3:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_scientific_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_percent_handler
_TEXT	SEGMENT
_localStatus$12131 = -4212				; size = 4
_status$ = -4200					; size = 4
_resultLen$ = -4188					; size = 4
_maxDecimalDigits$ = -4176				; size = 4
_minDecimalDigits$ = -4164				; size = 4
_prefixBufferLen$ = -4152				; size = 4
_prefixBuffer$ = -4140					; size = 2048
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_percent_handler PROC				; COMDAT
; Line 676
	push	ebp
	mov	ebp, esp
	mov	eax, 4408				; 00001138H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4408]
	mov	ecx, 1102				; 0000044eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 677
	mov	eax, DWORD PTR _args$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _num$[ebp]
; Line 681
	mov	DWORD PTR _prefixBufferLen$[ebp], 2048	; 00000800H
; Line 685
	mov	DWORD PTR _status$[ebp], 0
; Line 687
	xor	eax, eax
	mov	WORD PTR _prefixBuffer$[ebp], ax
; Line 694
	push	3
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 697
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN8@u_printf_p@2
; Line 698
	xor	eax, eax
	jmp	$LN9@u_printf_p@2
$LN8@u_printf_p@2:
; Line 701
	push	7
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDecimalDigits$[ebp], eax
; Line 702
	push	6
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _maxDecimalDigits$[ebp], eax
; Line 705
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_printf_p@2
; Line 707
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	8
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@u_printf_p@2
$LN7@u_printf_p@2:
; Line 709
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN5@u_printf_p@2
; Line 712
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 714
	jmp	SHORT $LN4@u_printf_p@2
$LN5@u_printf_p@2:
; Line 716
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN4@u_printf_p@2:
; Line 720
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN3@u_printf_p@2
; Line 721
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_set_sign
	add	esp, 20					; 00000014H
$LN3@u_printf_p@2:
; Line 725
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_formatDouble_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 727
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_printf_p@2
; Line 728
	mov	DWORD PTR _resultLen$[ebp], 0
$LN2@u_printf_p@2:
; Line 733
	mov	eax, DWORD PTR _minDecimalDigits$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 734
	mov	eax, DWORD PTR _maxDecimalDigits$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 736
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_p@2
; Line 738
	mov	DWORD PTR _localStatus$12131[ebp], 0
; Line 739
	lea	eax, DWORD PTR _localStatus$12131[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_reset_sign
	add	esp, 20					; 00000014H
$LN1@u_printf_p@2:
; Line 742
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@u_printf_p@2:
; Line 743
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@u_printf_p@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4408				; 00001138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@u_printf_p@2:
	DD	5
	DD	$LN16@u_printf_p@2
$LN16@u_printf_p@2:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN11@u_printf_p@2
	DD	-4140					; ffffefd4H
	DD	2048					; 00000800H
	DD	$LN12@u_printf_p@2
	DD	-4152					; ffffefc8H
	DD	4
	DD	$LN13@u_printf_p@2
	DD	-4200					; ffffef98H
	DD	4
	DD	$LN14@u_printf_p@2
	DD	-4212					; ffffef8cH
	DD	4
	DD	$LN15@u_printf_p@2
$LN15@u_printf_p@2:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@u_printf_p@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN13@u_printf_p@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN12@u_printf_p@2:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@u_printf_p@2:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_percent_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_printf_ustring_handler
_TEXT	SEGMENT
_arg$ = -32						; size = 4
_written$ = -20						; size = 4
_len$ = -8						; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_ustring_handler PROC				; COMDAT
; Line 751
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 753
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _arg$[ebp], ecx
; Line 756
	cmp	DWORD PTR _arg$[ebp], 0
	jne	SHORT $LN2@u_printf_u@2
; Line 757
	mov	DWORD PTR _arg$[ebp], OFFSET _gNullStr
$LN2@u_printf_u@2:
; Line 759
	mov	eax, DWORD PTR _arg$[ebp]
	push	eax
	call	_u_strlen_56
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 763
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN1@u_printf_u@2
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN1@u_printf_u@2
; Line 764
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _len$[ebp], ecx
$LN1@u_printf_u@2:
; Line 768
	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _arg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _written$[ebp], eax
; Line 770
	mov	eax, DWORD PTR _written$[ebp]
; Line 771
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_printf_ustring_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_printf_uchar_handler
_TEXT	SEGMENT
_arg$ = -20						; size = 2
_written$ = -8						; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_uchar_handler PROC				; COMDAT
; Line 779
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 780
	mov	DWORD PTR _written$[ebp], 0
; Line 781
	mov	eax, DWORD PTR _args$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _arg$[ebp], cx
; Line 788
	mov	esi, esp
	push	1
	lea	eax, DWORD PTR _arg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	mov	eax, DWORD PTR _handler$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _written$[ebp], eax
; Line 790
	mov	eax, DWORD PTR _written$[ebp]
; Line 791
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@u_printf_u@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@u_printf_u@3:
	DD	1
	DD	$LN4@u_printf_u@3
$LN4@u_printf_u@3:
	DD	-20					; ffffffecH
	DD	2
	DD	$LN3@u_printf_u@3
$LN3@u_printf_u@3:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
_u_printf_uchar_handler ENDP
_TEXT	ENDS
PUBLIC	__real@412e848000000000
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__$ArrayPad$
EXTRN	_uprv_pow10_56:PROC
EXTRN	_uprv_trunc_56:PROC
EXTRN	_memcpy:PROC
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+006
CONST	ENDS
;	COMDAT __real@3f1a36e2eb1c432d
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _u_printf_scidbl_handler
_TEXT	SEGMENT
_significantDigits$ = -96				; size = 4
_maxSigDecimalDigits$ = -84				; size = 4
_format$ = -72						; size = 4
_retVal$ = -60						; size = 4
_num$ = -48						; size = 8
_scidbl_info$ = -32					; size = 24
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_scidbl_handler PROC				; COMDAT
; Line 799
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 801
	mov	eax, DWORD PTR _args$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _num$[ebp]
; Line 806
	push	24					; 00000018H
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scidbl_info$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 809
	cmp	DWORD PTR _scidbl_info$[ebp], -1
	jne	SHORT $LN9@u_printf_s@4
	sub	esp, 8
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [esp]
	call	_uprv_trunc_56
	add	esp, 8
	fld	QWORD PTR _num$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN9@u_printf_s@4
; Line 812
	mov	eax, 102				; 00000066H
	mov	WORD PTR _scidbl_info$[ebp+10], ax
; Line 813
	mov	DWORD PTR _scidbl_info$[ebp], 0
; Line 815
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scidbl_info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _formatBundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	call	_u_printf_double_handler
	add	esp, 20					; 00000014H
	mov	DWORD PTR _retVal$[ebp], eax
; Line 817
	jmp	$LN3@u_printf_s@4
$LN9@u_printf_s@4:
; Line 818
	fld	QWORD PTR __real@3f1a36e2eb1c432d
	fcomp	QWORD PTR _num$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN6@u_printf_s@4
	cmp	DWORD PTR _scidbl_info$[ebp], 1
	jge	SHORT $LN5@u_printf_s@4
	fld	QWORD PTR _num$[ebp]
	fcomp	QWORD PTR __real@412e848000000000
	fnstsw	ax
	test	ah, 1
	je	SHORT $LN6@u_printf_s@4
$LN5@u_printf_s@4:
	cmp	DWORD PTR _scidbl_info$[ebp], -1
	je	SHORT $LN7@u_printf_s@4
	mov	eax, DWORD PTR _scidbl_info$[ebp]
	push	eax
	call	_uprv_pow10_56
	add	esp, 4
	fcomp	QWORD PTR _num$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN7@u_printf_s@4
$LN6@u_printf_s@4:
; Line 821
	movzx	eax, WORD PTR _scidbl_info$[ebp+10]
	sub	eax, 2
	mov	WORD PTR _scidbl_info$[ebp+10], ax
; Line 822
	cmp	DWORD PTR _scidbl_info$[ebp], -1
	jne	SHORT $LN4@u_printf_s@4
; Line 823
	mov	DWORD PTR _scidbl_info$[ebp], 5
$LN4@u_printf_s@4:
; Line 826
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scidbl_info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _formatBundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	call	_u_printf_scientific_handler
	add	esp, 20					; 00000014H
	mov	DWORD PTR _retVal$[ebp], eax
; Line 828
	jmp	$LN3@u_printf_s@4
$LN7@u_printf_s@4:
; Line 829
	push	1
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 831
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN2@u_printf_s@4
; Line 832
	xor	eax, eax
	jmp	$LN10@u_printf_s@4
$LN2@u_printf_s@4:
; Line 834
	push	18					; 00000012H
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _maxSigDecimalDigits$[ebp], eax
; Line 835
	mov	eax, DWORD PTR _scidbl_info$[ebp]
	mov	DWORD PTR _significantDigits$[ebp], eax
; Line 838
	mov	eax, 102				; 00000066H
	mov	WORD PTR _scidbl_info$[ebp+10], ax
; Line 839
	cmp	DWORD PTR _significantDigits$[ebp], -1
	jne	SHORT $LN1@u_printf_s@4
; Line 840
	mov	DWORD PTR _significantDigits$[ebp], 6
$LN1@u_printf_s@4:
; Line 842
	push	1
	push	16					; 00000010H
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 843
	mov	eax, DWORD PTR _significantDigits$[ebp]
	push	eax
	push	18					; 00000012H
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 845
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scidbl_info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _formatBundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	push	ecx
	call	_u_printf_double_handler
	add	esp, 20					; 00000014H
	mov	DWORD PTR _retVal$[ebp], eax
; Line 846
	mov	eax, DWORD PTR _maxSigDecimalDigits$[ebp]
	push	eax
	push	18					; 00000012H
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 847
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN3@u_printf_s@4:
; Line 849
	mov	eax, DWORD PTR _retVal$[ebp]
$LN10@u_printf_s@4:
; Line 850
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@u_printf_s@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@u_printf_s@4:
	DD	1
	DD	$LN13@u_printf_s@4
$LN13@u_printf_s@4:
	DD	-32					; ffffffe0H
	DD	24					; 00000018H
	DD	$LN12@u_printf_s@4
$LN12@u_printf_s@4:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	95					; 0000005fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_u_printf_scidbl_handler ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _u_printf_count_handler
_TEXT	SEGMENT
_count$ = -8						; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_count_handler PROC				; COMDAT
; Line 858
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 859
	mov	eax, DWORD PTR _args$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _count$[ebp], ecx
; Line 863
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
; Line 865
	xor	eax, eax
; Line 866
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_printf_count_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_spellout_handler
_TEXT	SEGMENT
_localStatus$12239 = -4212				; size = 4
_status$ = -4200					; size = 4
_resultLen$ = -4188					; size = 4
_maxDecimalDigits$ = -4176				; size = 4
_minDecimalDigits$ = -4164				; size = 4
_prefixBufferLen$ = -4152				; size = 4
_prefixBuffer$ = -4140					; size = 2048
_result$ = -2084					; size = 2048
_format$ = -28						; size = 4
_num$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_handler$ = 8						; size = 4
_context$ = 12						; size = 4
_formatBundle$ = 16					; size = 4
_info$ = 20						; size = 4
_args$ = 24						; size = 4
_u_printf_spellout_handler PROC				; COMDAT
; Line 874
	push	ebp
	mov	ebp, esp
	mov	eax, 4408				; 00001138H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4408]
	mov	ecx, 1102				; 0000044eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 875
	mov	eax, DWORD PTR _args$[ebp]
	fld	QWORD PTR [eax]
	fstp	QWORD PTR _num$[ebp]
; Line 879
	mov	DWORD PTR _prefixBufferLen$[ebp], 2048	; 00000800H
; Line 883
	mov	DWORD PTR _status$[ebp], 0
; Line 885
	xor	eax, eax
	mov	WORD PTR _prefixBuffer$[ebp], ax
; Line 892
	push	5
	mov	eax, DWORD PTR _formatBundle$[ebp]
	push	eax
	call	_u_locbund_getNumberFormat_56
	add	esp, 8
	mov	DWORD PTR _format$[ebp], eax
; Line 895
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN8@u_printf_s@5
; Line 896
	xor	eax, eax
	jmp	$LN9@u_printf_s@5
$LN8@u_printf_s@5:
; Line 899
	push	7
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _minDecimalDigits$[ebp], eax
; Line 900
	push	6
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_getAttribute_56
	add	esp, 8
	mov	DWORD PTR _maxDecimalDigits$[ebp], eax
; Line 903
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN7@u_printf_s@5
; Line 905
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	8
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@u_printf_s@5
$LN7@u_printf_s@5:
; Line 907
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+14]
	test	ecx, ecx
	je	SHORT $LN5@u_printf_s@5
; Line 910
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 912
	jmp	SHORT $LN4@u_printf_s@5
$LN5@u_printf_s@5:
; Line 914
	push	6
	push	8
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
$LN4@u_printf_s@5:
; Line 918
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN3@u_printf_s@5
; Line 919
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_set_sign
	add	esp, 20					; 00000014H
$LN3@u_printf_s@5:
; Line 923
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	sub	esp, 8
	fld	QWORD PTR _num$[ebp]
	fstp	QWORD PTR [esp]
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_unum_formatDouble_56
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 925
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN2@u_printf_s@5
; Line 926
	mov	DWORD PTR _resultLen$[ebp], 0
$LN2@u_printf_s@5:
; Line 931
	mov	eax, DWORD PTR _minDecimalDigits$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 932
	mov	eax, DWORD PTR _maxDecimalDigits$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_unum_setAttribute_56
	add	esp, 12					; 0000000cH
; Line 934
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+17]
	test	ecx, ecx
	je	SHORT $LN1@u_printf_s@5
; Line 936
	mov	DWORD PTR _localStatus$12239[ebp], 0
; Line 937
	lea	eax, DWORD PTR _localStatus$12239[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefixBufferLen$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefixBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_u_printf_reset_sign
	add	esp, 20					; 00000014H
$LN1@u_printf_s@5:
; Line 940
	mov	esi, esp
	mov	eax, DWORD PTR _resultLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	push	ecx
	mov	edx, DWORD PTR _info$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _handler$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@u_printf_s@5:
; Line 941
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@u_printf_s@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4408				; 00001138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@u_printf_s@5:
	DD	5
	DD	$LN16@u_printf_s@5
$LN16@u_printf_s@5:
	DD	-2084					; fffff7dcH
	DD	2048					; 00000800H
	DD	$LN11@u_printf_s@5
	DD	-4140					; ffffefd4H
	DD	2048					; 00000800H
	DD	$LN12@u_printf_s@5
	DD	-4152					; ffffefc8H
	DD	4
	DD	$LN13@u_printf_s@5
	DD	-4200					; ffffef98H
	DD	4
	DD	$LN14@u_printf_s@5
	DD	-4212					; ffffef8cH
	DD	4
	DD	$LN15@u_printf_s@5
$LN15@u_printf_s@5:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN14@u_printf_s@5:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN13@u_printf_s@5:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN12@u_printf_s@5:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN11@u_printf_s@5:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_u_printf_spellout_handler ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_u_printf_parse_56
EXTRN	_ufmt_digitvalue_56:PROC
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_printf_parse_56
_TEXT	SEGMENT
tv483 = -384						; size = 4
tv214 = -384						; size = 4
tv537 = -380						; size = 4
tv525 = -380						; size = 4
tv482 = -380						; size = 4
tv213 = -380						; size = 4
tv254 = -378						; size = 2
tv244 = -378						; size = 2
tv234 = -378						; size = 2
tv225 = -378						; size = 2
_status$ = -180						; size = 4
_arglist$ = -168					; size = 4
_orgAlias$ = -156					; size = 4
_lastAlias$ = -144					; size = 4
_backup$ = -132						; size = 4
_alias$ = -120						; size = 4
_info$ = -108						; size = 4
_spec$ = -96						; size = 36
_handler$ = -52						; size = 4
_argType$ = -40						; size = 4
_args$ = -28						; size = 8
_handlerNum$ = -12					; size = 2
__$ArrayPad$ = -4					; size = 4
_streamHandler$ = 8					; size = 4
_fmt$ = 12						; size = 4
_context$ = 16						; size = 4
_locStringContext$ = 20					; size = 4
_formatBundle$ = 24					; size = 4
_written$ = 28						; size = 4
_ap$ = 32						; size = 4
_u_printf_parse_56 PROC					; COMDAT
; Line 1214
	push	ebp
	mov	ebp, esp
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-384]
	mov	ecx, 96					; 00000060H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1220
	lea	eax, DWORD PTR _spec$[ebp]
	mov	DWORD PTR _info$[ebp], eax
; Line 1222
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 1225
	mov	eax, DWORD PTR _fmt$[ebp]
	mov	DWORD PTR _orgAlias$[ebp], eax
; Line 1227
	mov	DWORD PTR _arglist$[ebp], 0
; Line 1228
	mov	DWORD PTR _status$[ebp], 0
; Line 1229
	cmp	DWORD PTR _locStringContext$[ebp], 0
	je	SHORT $LN98@u_printf_p@3
	mov	eax, DWORD PTR _locStringContext$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jl	SHORT $LN97@u_printf_p@3
$LN98@u_printf_p@3:
; Line 1231
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _orgAlias$[ebp]
	push	edx
	call	_parseArguments
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _arglist$[ebp], eax
; Line 1234
	cmp	DWORD PTR _status$[ebp], 0
	jle	SHORT $LN97@u_printf_p@3
; Line 1235
	or	eax, -1
	jmp	$LN100@u_printf_p@3
$LN97@u_printf_p@3:
; Line 1240
	cmp	DWORD PTR _locStringContext$[ebp], 0
	je	SHORT $LN94@u_printf_p@3
	mov	eax, DWORD PTR _locStringContext$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jl	$LN95@u_printf_p@3
$LN94@u_printf_p@3:
; Line 1243
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _lastAlias$[ebp], eax
$LN93@u_printf_p@3:
; Line 1244
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 37					; 00000025H
	je	SHORT $LN92@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN92@u_printf_p@3
; Line 1245
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1246
	jmp	SHORT $LN93@u_printf_p@3
$LN92@u_printf_p@3:
; Line 1249
	mov	eax, DWORD PTR _alias$[ebp]
	cmp	eax, DWORD PTR _lastAlias$[ebp]
	jbe	SHORT $LN91@u_printf_p@3
; Line 1250
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, DWORD PTR _lastAlias$[ebp]
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _lastAlias$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	mov	eax, DWORD PTR _streamHandler$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _written$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	DWORD PTR [ecx], eax
$LN91@u_printf_p@3:
; Line 1254
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN90@u_printf_p@3
; Line 1255
	jmp	$LN95@u_printf_p@3
$LN90@u_printf_p@3:
; Line 1259
	mov	DWORD PTR _spec$[ebp+24], -1
; Line 1260
	mov	DWORD PTR _spec$[ebp+28], -1
; Line 1261
	mov	DWORD PTR _spec$[ebp+32], -1
; Line 1263
	push	24					; 00000018H
	push	0
	mov	eax, DWORD PTR _info$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1264
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], -1
; Line 1265
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 1266
	mov	eax, 32					; 00000020H
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 1269
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1272
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN88@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN81@u_printf_p@3
$LN88@u_printf_p@3:
; Line 1275
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _backup$[ebp], eax
; Line 1278
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN86@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN84@u_printf_p@3
$LN86@u_printf_p@3:
; Line 1279
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _spec$[ebp+32], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN85@u_printf_p@3:
; Line 1281
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN83@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN84@u_printf_p@3
$LN83@u_printf_p@3:
; Line 1282
	mov	eax, DWORD PTR _spec$[ebp+32]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _spec$[ebp+32], eax
; Line 1283
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _spec$[ebp+32]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _spec$[ebp+32], eax
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, 2
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1284
	jmp	$LN85@u_printf_p@3
$LN84@u_printf_p@3:
; Line 1288
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	je	SHORT $LN82@u_printf_p@3
; Line 1289
	mov	DWORD PTR _spec$[ebp+32], -1
; Line 1290
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 1293
	jmp	SHORT $LN81@u_printf_p@3
$LN82@u_printf_p@3:
; Line 1294
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN81@u_printf_p@3:
; Line 1298
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 45					; 0000002dH
	je	SHORT $LN78@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 43					; 0000002bH
	je	SHORT $LN78@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN78@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 35					; 00000023H
	je	SHORT $LN78@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN78@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 40					; 00000028H
	jne	$LN79@u_printf_p@3
$LN78@u_printf_p@3:
; Line 1299
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv213[ebp], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	mov	eax, DWORD PTR tv213[ebp]
	mov	DWORD PTR tv214[ebp], eax
	mov	ecx, DWORD PTR tv214[ebp]
	sub	ecx, 32					; 00000020H
	mov	DWORD PTR tv214[ebp], ecx
	cmp	DWORD PTR tv214[ebp], 16		; 00000010H
	ja	$LN76@u_printf_p@3
	mov	edx, DWORD PTR tv214[ebp]
	movzx	eax, BYTE PTR $LN102@u_printf_p@3[edx]
	jmp	DWORD PTR $LN108@u_printf_p@3[eax*4]
$LN75@u_printf_p@3:
; Line 1303
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+16], 1
; Line 1304
	jmp	$LN76@u_printf_p@3
$LN74@u_printf_p@3:
; Line 1308
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+17], 1
; Line 1309
	jmp	$LN76@u_printf_p@3
$LN73@u_printf_p@3:
; Line 1313
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+17], 1
; Line 1314
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+15], 1
; Line 1315
	jmp	$LN76@u_printf_p@3
$LN72@u_printf_p@3:
; Line 1319
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+14], 1
; Line 1320
	jmp	$LN76@u_printf_p@3
$LN71@u_printf_p@3:
; Line 1324
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+18], 1
; Line 1325
	mov	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 1326
	jmp	$LN76@u_printf_p@3
$LN70@u_printf_p@3:
; Line 1333
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv225[ebp], cx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	movzx	eax, WORD PTR tv225[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 1334
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv234[ebp], cx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	movzx	eax, WORD PTR tv234[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+12], dx
; Line 1335
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv244[ebp], cx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	movzx	eax, WORD PTR tv244[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+12], dx
; Line 1336
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR tv254[ebp], cx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	movzx	eax, WORD PTR tv254[ebp]
	push	eax
	call	_ufmt_digitvalue_56
	add	esp, 4
	mov	ecx, DWORD PTR _info$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	shl	edx, 4
	add	edx, eax
	mov	eax, DWORD PTR _info$[ebp]
	mov	WORD PTR [eax+12], dx
; Line 1339
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN76@u_printf_p@3:
; Line 1343
	jmp	$LN81@u_printf_p@3
$LN79@u_printf_p@3:
; Line 1348
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 42					; 0000002aH
	jne	$LN69@u_printf_p@3
; Line 1350
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax+4], -2			; fffffffeH
; Line 1353
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1356
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _backup$[ebp], eax
; Line 1359
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN67@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN65@u_printf_p@3
$LN67@u_printf_p@3:
; Line 1360
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _spec$[ebp+24], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN66@u_printf_p@3:
; Line 1362
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN64@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN65@u_printf_p@3
$LN64@u_printf_p@3:
; Line 1363
	mov	eax, DWORD PTR _spec$[ebp+24]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _spec$[ebp+24], eax
; Line 1364
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _spec$[ebp+24]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _spec$[ebp+24], eax
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, 2
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1365
	jmp	$LN66@u_printf_p@3
$LN65@u_printf_p@3:
; Line 1369
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	je	SHORT $LN63@u_printf_p@3
; Line 1370
	mov	DWORD PTR _spec$[ebp+24], -1
; Line 1371
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 1374
	jmp	SHORT $LN62@u_printf_p@3
$LN63@u_printf_p@3:
; Line 1375
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN62@u_printf_p@3:
; Line 1378
	jmp	$LN57@u_printf_p@3
$LN69@u_printf_p@3:
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN59@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN57@u_printf_p@3
$LN59@u_printf_p@3:
; Line 1379
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN58@u_printf_p@3:
; Line 1381
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN56@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN57@u_printf_p@3
$LN56@u_printf_p@3:
; Line 1382
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1383
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx+4]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1384
	jmp	$LN58@u_printf_p@3
$LN57@u_printf_p@3:
; Line 1389
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	$LN42@u_printf_p@3
; Line 1392
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1395
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 42					; 0000002aH
	jne	$LN54@u_printf_p@3
; Line 1397
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], -2			; fffffffeH
; Line 1400
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1403
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _backup$[ebp], eax
; Line 1406
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN52@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN47@u_printf_p@3
$LN52@u_printf_p@3:
; Line 1407
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _spec$[ebp+28], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN51@u_printf_p@3:
; Line 1409
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN49@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN50@u_printf_p@3
$LN49@u_printf_p@3:
; Line 1410
	mov	eax, DWORD PTR _spec$[ebp+28]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _spec$[ebp+28], eax
; Line 1411
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _spec$[ebp+28]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _spec$[ebp+28], eax
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, 2
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1412
	jmp	$LN51@u_printf_p@3
$LN50@u_printf_p@3:
; Line 1415
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	je	SHORT $LN48@u_printf_p@3
; Line 1416
	mov	DWORD PTR _spec$[ebp+28], -1
; Line 1417
	mov	eax, DWORD PTR _backup$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
; Line 1419
	jmp	SHORT $LN47@u_printf_p@3
$LN48@u_printf_p@3:
; Line 1421
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN47@u_printf_p@3:
; Line 1423
	jmp	$LN42@u_printf_p@3
$LN54@u_printf_p@3:
; Line 1426
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN44@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN42@u_printf_p@3
$LN44@u_printf_p@3:
; Line 1427
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
$LN43@u_printf_p@3:
; Line 1429
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN41@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN42@u_printf_p@3
$LN41@u_printf_p@3:
; Line 1430
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 1431
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _info$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1432
	jmp	$LN43@u_printf_p@3
$LN42@u_printf_p@3:
; Line 1437
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 104				; 00000068H
	je	SHORT $LN39@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	je	SHORT $LN39@u_printf_p@3
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 76					; 0000004cH
	jne	SHORT $LN37@u_printf_p@3
$LN39@u_printf_p@3:
; Line 1438
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv482[ebp], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
	mov	eax, DWORD PTR tv482[ebp]
	mov	DWORD PTR tv483[ebp], eax
	cmp	DWORD PTR tv483[ebp], 76		; 0000004cH
	je	SHORT $LN32@u_printf_p@3
	cmp	DWORD PTR tv483[ebp], 104		; 00000068H
	je	SHORT $LN36@u_printf_p@3
	cmp	DWORD PTR tv483[ebp], 108		; 0000006cH
	je	SHORT $LN35@u_printf_p@3
	jmp	SHORT $LN37@u_printf_p@3
$LN36@u_printf_p@3:
; Line 1442
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+20], 1
; Line 1443
	jmp	SHORT $LN37@u_printf_p@3
$LN35@u_printf_p@3:
; Line 1447
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	jne	SHORT $LN34@u_printf_p@3
; Line 1448
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+22], 1
; Line 1450
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1452
	jmp	SHORT $LN33@u_printf_p@3
$LN34@u_printf_p@3:
; Line 1453
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+21], 1
$LN33@u_printf_p@3:
; Line 1454
	jmp	SHORT $LN37@u_printf_p@3
$LN32@u_printf_p@3:
; Line 1458
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+19], 1
$LN37@u_printf_p@3:
; Line 1464
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _alias$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax+10], dx
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1465
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _info$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax+8], dx
; Line 1470
	cmp	DWORD PTR _spec$[ebp+4], -2		; fffffffeH
	jne	SHORT $LN29@u_printf_p@3
; Line 1471
	cmp	DWORD PTR _spec$[ebp+24], -1
	jne	SHORT $LN30@u_printf_p@3
; Line 1473
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR [ecx+4], eax
$LN30@u_printf_p@3:
; Line 1478
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jge	SHORT $LN29@u_printf_p@3
; Line 1479
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, -1
	mov	edx, DWORD PTR _info$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 1480
	mov	eax, DWORD PTR _info$[ebp]
	mov	BYTE PTR [eax+16], 1
$LN29@u_printf_p@3:
; Line 1485
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], -2			; fffffffeH
	jne	SHORT $LN26@u_printf_p@3
; Line 1486
	cmp	DWORD PTR _spec$[ebp+28], -1
	jne	SHORT $LN27@u_printf_p@3
; Line 1488
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _info$[ebp]
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	mov	DWORD PTR [ecx], eax
$LN27@u_printf_p@3:
; Line 1493
	mov	eax, DWORD PTR _info$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN26@u_printf_p@3
; Line 1494
	mov	eax, DWORD PTR _info$[ebp]
	mov	DWORD PTR [eax], 0
$LN26@u_printf_p@3:
; Line 1497
	mov	eax, DWORD PTR _info$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	sub	ecx, 32					; 00000020H
	mov	WORD PTR _handlerNum$[ebp], cx
; Line 1498
	movzx	eax, WORD PTR _handlerNum$[ebp]
	cmp	eax, 108				; 0000006cH
	jge	$LN25@u_printf_p@3
; Line 1500
	movzx	eax, WORD PTR _handlerNum$[ebp]
	mov	ecx, DWORD PTR _g_u_printf_infos[eax*8]
	mov	DWORD PTR _argType$[ebp], ecx
; Line 1503
	cmp	DWORD PTR _spec$[ebp+32], 0
	jle	$LN24@u_printf_p@3
; Line 1505
	mov	eax, DWORD PTR _spec$[ebp+32]
	sub	eax, 1
	mov	DWORD PTR _spec$[ebp+32], eax
; Line 1506
	mov	eax, DWORD PTR _argType$[ebp]
	mov	DWORD PTR tv525[ebp], eax
	mov	ecx, DWORD PTR tv525[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv525[ebp], ecx
	cmp	DWORD PTR tv525[ebp], 8
	ja	SHORT $LN16@u_printf_p@3
	mov	edx, DWORD PTR tv525[ebp]
	jmp	DWORD PTR $LN109@u_printf_p@3[edx*4]
$LN21@u_printf_p@3:
; Line 1509
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
$LN20@u_printf_p@3:
; Line 1514
	mov	eax, DWORD PTR _spec$[ebp+32]
	mov	ecx, DWORD PTR _arglist$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _args$[ebp], edx
; Line 1515
	jmp	SHORT $LN22@u_printf_p@3
$LN19@u_printf_p@3:
; Line 1519
	mov	eax, DWORD PTR _spec$[ebp+32]
	mov	ecx, DWORD PTR _arglist$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _args$[ebp], edx
	mov	eax, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _args$[ebp+4], eax
; Line 1520
	jmp	SHORT $LN22@u_printf_p@3
$LN18@u_printf_p@3:
; Line 1522
	mov	eax, DWORD PTR _spec$[ebp+32]
	mov	ecx, DWORD PTR _arglist$[ebp]
	fld	DWORD PTR [ecx+eax*8]
	fstp	DWORD PTR _args$[ebp]
; Line 1523
	jmp	SHORT $LN22@u_printf_p@3
$LN17@u_printf_p@3:
; Line 1525
	mov	eax, DWORD PTR _spec$[ebp+32]
	mov	ecx, DWORD PTR _arglist$[ebp]
	fld	QWORD PTR [ecx+eax*8]
	fstp	QWORD PTR _args$[ebp]
; Line 1526
	jmp	SHORT $LN22@u_printf_p@3
$LN16@u_printf_p@3:
; Line 1529
	mov	DWORD PTR _args$[ebp], 0
$LN22@u_printf_p@3:
; Line 1532
	jmp	$LN13@u_printf_p@3
$LN24@u_printf_p@3:
; Line 1533
	mov	eax, DWORD PTR _argType$[ebp]
	mov	DWORD PTR tv537[ebp], eax
	mov	ecx, DWORD PTR tv537[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv537[ebp], ecx
	cmp	DWORD PTR tv537[ebp], 8
	ja	$LN5@u_printf_p@3
	mov	edx, DWORD PTR tv537[ebp]
	jmp	DWORD PTR $LN110@u_printf_p@3[edx*4]
$LN12@u_printf_p@3:
; Line 1536
	mov	eax, DWORD PTR _info$[ebp]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
$LN11@u_printf_p@3:
; Line 1541
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	mov	DWORD PTR _args$[ebp], edx
; Line 1542
	jmp	SHORT $LN13@u_printf_p@3
$LN10@u_printf_p@3:
; Line 1546
	mov	eax, DWORD PTR _info$[ebp]
	movsx	ecx, BYTE PTR [eax+22]
	test	ecx, ecx
	je	SHORT $LN9@u_printf_p@3
; Line 1547
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	edx, DWORD PTR [ecx-8]
	mov	DWORD PTR _args$[ebp], edx
	mov	eax, DWORD PTR [ecx-4]
	mov	DWORD PTR _args$[ebp+4], eax
; Line 1549
	jmp	SHORT $LN8@u_printf_p@3
$LN9@u_printf_p@3:
; Line 1550
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [ecx-4]
	cdq
	mov	DWORD PTR _args$[ebp], eax
	mov	DWORD PTR _args$[ebp+4], edx
$LN8@u_printf_p@3:
; Line 1552
	jmp	SHORT $LN13@u_printf_p@3
$LN7@u_printf_p@3:
; Line 1554
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	fld	QWORD PTR [ecx-8]
	fstp	DWORD PTR _args$[ebp]
; Line 1555
	jmp	SHORT $LN13@u_printf_p@3
$LN6@u_printf_p@3:
; Line 1557
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	fld	QWORD PTR [ecx-8]
	fstp	QWORD PTR _args$[ebp]
; Line 1558
	jmp	SHORT $LN13@u_printf_p@3
$LN5@u_printf_p@3:
; Line 1561
	mov	DWORD PTR _args$[ebp], 0
$LN13@u_printf_p@3:
; Line 1567
	movzx	eax, WORD PTR _handlerNum$[ebp]
	mov	ecx, DWORD PTR _g_u_printf_infos[eax*8+4]
	mov	DWORD PTR _handler$[ebp], ecx
; Line 1568
	cmp	DWORD PTR _handler$[ebp], 0
	je	SHORT $LN4@u_printf_p@3
; Line 1569
	mov	esi, esp
	lea	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _info$[ebp]
	push	ecx
	mov	edx, DWORD PTR _formatBundle$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	mov	ecx, DWORD PTR _streamHandler$[ebp]
	push	ecx
	call	DWORD PTR _handler$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _written$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1571
	jmp	SHORT $LN3@u_printf_p@3
$LN4@u_printf_p@3:
; Line 1573
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, DWORD PTR _lastAlias$[ebp]
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	mov	eax, DWORD PTR _streamHandler$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _written$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@u_printf_p@3:
; Line 1576
	jmp	SHORT $LN2@u_printf_p@3
$LN25@u_printf_p@3:
; Line 1578
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, DWORD PTR _lastAlias$[ebp]
	sar	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	mov	eax, DWORD PTR _streamHandler$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _written$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _written$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@u_printf_p@3:
; Line 1580
	jmp	$LN97@u_printf_p@3
$LN95@u_printf_p@3:
; Line 1582
	cmp	DWORD PTR _arglist$[ebp], 0
	je	SHORT $LN1@u_printf_p@3
; Line 1583
	mov	eax, DWORD PTR _arglist$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@u_printf_p@3:
; Line 1586
	mov	eax, DWORD PTR _alias$[ebp]
	sub	eax, DWORD PTR _fmt$[ebp]
	sar	eax, 1
$LN100@u_printf_p@3:
; Line 1587
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN107@u_printf_p@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 384				; 00000180H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN107@u_printf_p@3:
	DD	3
	DD	$LN106@u_printf_p@3
$LN106@u_printf_p@3:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN103@u_printf_p@3
	DD	-96					; ffffffa0H
	DD	36					; 00000024H
	DD	$LN104@u_printf_p@3
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN105@u_printf_p@3
$LN105@u_printf_p@3:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN104@u_printf_p@3:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
$LN103@u_printf_p@3:
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	115					; 00000073H
	DB	0
	npad	3
$LN108@u_printf_p@3:
	DD	$LN73@u_printf_p@3
	DD	$LN72@u_printf_p@3
	DD	$LN70@u_printf_p@3
	DD	$LN74@u_printf_p@3
	DD	$LN75@u_printf_p@3
	DD	$LN71@u_printf_p@3
	DD	$LN76@u_printf_p@3
$LN102@u_printf_p@3:
	DB	0
	DB	6
	DB	6
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	6
	DB	6
	DB	3
	DB	6
	DB	4
	DB	6
	DB	6
	DB	5
	npad	3
$LN109@u_printf_p@3:
	DD	$LN21@u_printf_p@3
	DD	$LN19@u_printf_p@3
	DD	$LN19@u_printf_p@3
	DD	$LN20@u_printf_p@3
	DD	$LN20@u_printf_p@3
	DD	$LN18@u_printf_p@3
	DD	$LN17@u_printf_p@3
	DD	$LN19@u_printf_p@3
	DD	$LN20@u_printf_p@3
$LN110@u_printf_p@3:
	DD	$LN12@u_printf_p@3
	DD	$LN10@u_printf_p@3
	DD	$LN10@u_printf_p@3
	DD	$LN11@u_printf_p@3
	DD	$LN11@u_printf_p@3
	DD	$LN7@u_printf_p@3
	DD	$LN6@u_printf_p@3
	DD	$LN10@u_printf_p@3
	DD	$LN11@u_printf_p@3
_u_printf_parse_56 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _parseArguments
_TEXT	SEGMENT
tv321 = -292						; size = 4
_aliasStart$ = -92					; size = 4
_handlerNum$ = -80					; size = 2
_type$ = -68						; size = 2
_pos$ = -56						; size = 4
_size$ = -44						; size = 4
_islonglong$ = -32					; size = 4
_typelist$ = -20					; size = 4
_arglist$ = -8						; size = 4
_alias$ = 8						; size = 4
_ap$ = 12						; size = 4
_status$ = 16						; size = 4
_parseArguments PROC					; COMDAT
; Line 1046
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1047
	mov	DWORD PTR _arglist$[ebp], 0
; Line 1048
	mov	DWORD PTR _typelist$[ebp], 0
; Line 1049
	mov	DWORD PTR _islonglong$[ebp], 0
; Line 1050
	mov	DWORD PTR _size$[ebp], 0
; Line 1051
	mov	DWORD PTR _pos$[ebp], 0
; Line 1054
	mov	eax, DWORD PTR _alias$[ebp]
	mov	DWORD PTR _aliasStart$[ebp], eax
$LN50@parseArgum:
; Line 1059
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 37					; 00000025H
	je	SHORT $LN47@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN47@parseArgum
; Line 1060
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1061
	jmp	SHORT $LN50@parseArgum
$LN47@parseArgum:
; Line 1063
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN46@parseArgum
; Line 1064
	jmp	$LN49@parseArgum
$LN46@parseArgum:
; Line 1067
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1070
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN44@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN45@parseArgum
$LN44@parseArgum:
; Line 1073
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN42@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN40@parseArgum
$LN42@parseArgum:
; Line 1074
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN41@parseArgum:
; Line 1076
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN39@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN40@parseArgum
$LN39@parseArgum:
; Line 1077
	mov	eax, DWORD PTR _pos$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _pos$[ebp], eax
; Line 1078
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _pos$[ebp], eax
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, 2
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1079
	jmp	$LN41@parseArgum
$LN40@parseArgum:
; Line 1083
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	je	SHORT $LN38@parseArgum
; Line 1084
	xor	eax, eax
	jmp	$LN51@parseArgum
$LN38@parseArgum:
; Line 1086
	jmp	SHORT $LN37@parseArgum
$LN45@parseArgum:
; Line 1087
	xor	eax, eax
	jmp	$LN51@parseArgum
$LN37@parseArgum:
; Line 1090
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jle	SHORT $LN36@parseArgum
; Line 1091
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _size$[ebp], eax
$LN36@parseArgum:
; Line 1093
	jmp	$LN50@parseArgum
$LN49@parseArgum:
; Line 1096
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 2
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _typelist$[ebp], eax
; Line 1097
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _islonglong$[ebp], eax
; Line 1098
	mov	eax, DWORD PTR _size$[ebp]
	shl	eax, 3
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _arglist$[ebp], eax
; Line 1101
	cmp	DWORD PTR _typelist$[ebp], 0
	je	SHORT $LN34@parseArgum
	cmp	DWORD PTR _islonglong$[ebp], 0
	je	SHORT $LN34@parseArgum
	cmp	DWORD PTR _arglist$[ebp], 0
	jne	SHORT $LN35@parseArgum
$LN34@parseArgum:
; Line 1102
	cmp	DWORD PTR _typelist$[ebp], 0
	je	SHORT $LN33@parseArgum
; Line 1103
	mov	eax, DWORD PTR _typelist$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN33@parseArgum:
; Line 1106
	cmp	DWORD PTR _islonglong$[ebp], 0
	je	SHORT $LN32@parseArgum
; Line 1107
	mov	eax, DWORD PTR _islonglong$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN32@parseArgum:
; Line 1110
	cmp	DWORD PTR _arglist$[ebp], 0
	je	SHORT $LN31@parseArgum
; Line 1111
	mov	eax, DWORD PTR _arglist$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN31@parseArgum:
; Line 1114
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 7
; Line 1115
	xor	eax, eax
	jmp	$LN51@parseArgum
$LN35@parseArgum:
; Line 1119
	mov	eax, DWORD PTR _aliasStart$[ebp]
	mov	DWORD PTR _alias$[ebp], eax
$LN30@parseArgum:
; Line 1123
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 37					; 00000025H
	je	SHORT $LN27@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN27@parseArgum
; Line 1124
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1125
	jmp	SHORT $LN30@parseArgum
$LN27@parseArgum:
; Line 1127
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN26@parseArgum
; Line 1128
	jmp	$LN29@parseArgum
$LN26@parseArgum:
; Line 1131
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1134
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN24@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	$LN22@parseArgum
$LN24@parseArgum:
; Line 1135
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	sub	ecx, 48					; 00000030H
	mov	DWORD PTR _pos$[ebp], ecx
	mov	edx, DWORD PTR _alias$[ebp]
	add	edx, 2
	mov	DWORD PTR _alias$[ebp], edx
$LN23@parseArgum:
; Line 1137
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN21@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN22@parseArgum
$LN21@parseArgum:
; Line 1138
	mov	eax, DWORD PTR _pos$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _pos$[ebp], eax
; Line 1139
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pos$[ebp]
	lea	eax, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _pos$[ebp], eax
	mov	ecx, DWORD PTR _alias$[ebp]
	add	ecx, 2
	mov	DWORD PTR _alias$[ebp], ecx
; Line 1140
	jmp	$LN23@parseArgum
$LN22@parseArgum:
; Line 1143
	mov	eax, DWORD PTR _pos$[ebp]
	sub	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN20@parseArgum:
; Line 1147
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 104				; 00000068H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 76					; 0000004cH
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 45					; 0000002dH
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 43					; 0000002bH
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 35					; 00000023H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 40					; 00000028H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 48					; 00000030H
	je	$LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 49					; 00000031H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 51					; 00000033H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 52					; 00000034H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 53					; 00000035H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 54					; 00000036H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 56					; 00000038H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 57					; 00000039H
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 42					; 0000002aH
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN18@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 36					; 00000024H
	jne	SHORT $LN19@parseArgum
$LN18@parseArgum:
; Line 1148
	mov	eax, DWORD PTR _islonglong$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	BYTE PTR [eax], 0
; Line 1149
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 104				; 00000068H
	je	SHORT $LN16@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	je	SHORT $LN16@parseArgum
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 76					; 0000004cH
	jne	SHORT $LN15@parseArgum
$LN16@parseArgum:
; Line 1150
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1151
	mov	eax, DWORD PTR _alias$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 108				; 0000006cH
	jne	SHORT $LN15@parseArgum
; Line 1152
	mov	eax, DWORD PTR _islonglong$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	mov	BYTE PTR [eax], 1
$LN15@parseArgum:
; Line 1155
	mov	eax, DWORD PTR _alias$[ebp]
	add	eax, 2
	mov	DWORD PTR _alias$[ebp], eax
; Line 1156
	jmp	$LN20@parseArgum
$LN19@parseArgum:
; Line 1157
	mov	eax, DWORD PTR _alias$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _type$[ebp], cx
; Line 1160
	movzx	eax, WORD PTR _type$[ebp]
	sub	eax, 32					; 00000020H
	mov	WORD PTR _handlerNum$[ebp], ax
; Line 1161
	movzx	eax, WORD PTR _handlerNum$[ebp]
	cmp	eax, 108				; 0000006cH
	jge	SHORT $LN14@parseArgum
; Line 1162
	movzx	eax, WORD PTR _handlerNum$[ebp]
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _typelist$[ebp]
	mov	eax, DWORD PTR _g_u_printf_infos[eax*8]
	mov	DWORD PTR [edx+ecx*4], eax
; Line 1163
	jmp	SHORT $LN13@parseArgum
$LN14@parseArgum:
; Line 1164
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _typelist$[ebp]
	mov	DWORD PTR [ecx+eax*4], 0
$LN13@parseArgum:
; Line 1166
	jmp	$LN30@parseArgum
$LN29@parseArgum:
; Line 1169
	mov	DWORD PTR _pos$[ebp], 0
	jmp	SHORT $LN12@parseArgum
$LN11@parseArgum:
	mov	eax, DWORD PTR _pos$[ebp]
	add	eax, 1
	mov	DWORD PTR _pos$[ebp], eax
$LN12@parseArgum:
	mov	eax, DWORD PTR _pos$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	jge	$LN10@parseArgum
; Line 1170
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _typelist$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv321[ebp], edx
	mov	eax, DWORD PTR tv321[ebp]
	sub	eax, 3
	mov	DWORD PTR tv321[ebp], eax
	cmp	DWORD PTR tv321[ebp], 7
	ja	$LN1@parseArgum
	mov	ecx, DWORD PTR tv321[ebp]
	jmp	DWORD PTR $LN53@parseArgum[ecx*4]
$LN7@parseArgum:
; Line 1174
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _arglist$[ebp]
	mov	eax, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [eax-4]
	mov	DWORD PTR [edx+ecx*8], eax
; Line 1175
	jmp	$LN8@parseArgum
$LN6@parseArgum:
; Line 1179
	mov	eax, DWORD PTR _islonglong$[ebp]
	add	eax, DWORD PTR _pos$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN5@parseArgum
; Line 1180
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	edx, DWORD PTR _arglist$[ebp]
	mov	eax, DWORD PTR _ap$[ebp]
	mov	esi, DWORD PTR [eax-8]
	mov	DWORD PTR [edx+ecx*8], esi
	mov	eax, DWORD PTR [eax-4]
	mov	DWORD PTR [edx+ecx*8+4], eax
; Line 1182
	jmp	SHORT $LN4@parseArgum
$LN5@parseArgum:
; Line 1183
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 4
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [ecx-4]
	cdq
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	esi, DWORD PTR _arglist$[ebp]
	mov	DWORD PTR [esi+ecx*8], eax
	mov	DWORD PTR [esi+ecx*8+4], edx
$LN4@parseArgum:
; Line 1185
	jmp	SHORT $LN8@parseArgum
$LN3@parseArgum:
; Line 1187
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	fld	QWORD PTR [ecx-8]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR _arglist$[ebp]
	fstp	DWORD PTR [eax+edx*8]
; Line 1188
	jmp	SHORT $LN8@parseArgum
$LN2@parseArgum:
; Line 1190
	mov	eax, DWORD PTR _ap$[ebp]
	add	eax, 8
	mov	DWORD PTR _ap$[ebp], eax
	mov	ecx, DWORD PTR _ap$[ebp]
	fld	QWORD PTR [ecx-8]
	mov	edx, DWORD PTR _pos$[ebp]
	mov	eax, DWORD PTR _arglist$[ebp]
	fstp	QWORD PTR [eax+edx*8]
; Line 1191
	jmp	SHORT $LN8@parseArgum
$LN1@parseArgum:
; Line 1194
	mov	eax, DWORD PTR _pos$[ebp]
	mov	ecx, DWORD PTR _arglist$[ebp]
	mov	DWORD PTR [ecx+eax*8], 0
$LN8@parseArgum:
; Line 1197
	jmp	$LN11@parseArgum
$LN10@parseArgum:
; Line 1199
	mov	eax, DWORD PTR _typelist$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1200
	mov	eax, DWORD PTR _islonglong$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 1202
	mov	eax, DWORD PTR _arglist$[ebp]
$LN51@parseArgum:
; Line 1203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN53@parseArgum:
	DD	$LN6@parseArgum
	DD	$LN6@parseArgum
	DD	$LN7@parseArgum
	DD	$LN7@parseArgum
	DD	$LN3@parseArgum
	DD	$LN2@parseArgum
	DD	$LN6@parseArgum
	DD	$LN7@parseArgum
_parseArguments ENDP
_TEXT	ENDS
END

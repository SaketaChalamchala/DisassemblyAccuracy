; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\writesrc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_0JM@LOHDPDLH@?$CD?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Interna@ ; `string'
PUBLIC	??_C@_0KH@EDMDCEA@?1?$CK?6?5?$CK?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Int@ ; `string'
;	COMDAT ??_C@_0JM@LOHDPDLH@?$CD?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Interna@
CONST	SEGMENT
??_C@_0JM@LOHDPDLH@?$CD?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Interna@ DB '#'
	DB	' Copyright (C) 1999-%s, International Business Machines', 0aH
	DB	'# Corporation and others.  All Rights Reserved.', 0aH, '#', 0aH
	DB	'# file name: %s', 0aH, '#', 0aH, '# machine-generated by: %s', 0aH
	DB	'#', 0aH, 0aH, 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?header@?1??usrc_create@@9@9 DD FLAT:??_C@_0KH@EDMDCEA@?1?$CK?6?5?$CK?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Int@ ; `usrc_create'::`2'::header
?header@?1??usrc_createTextData@@9@9 DD FLAT:??_C@_0JM@LOHDPDLH@?$CD?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Interna@ ; `usrc_createTextData'::`2'::header
_DATA	ENDS
;	COMDAT ??_C@_0KH@EDMDCEA@?1?$CK?6?5?$CK?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Int@
CONST	SEGMENT
??_C@_0KH@EDMDCEA@?1?$CK?6?5?$CK?5Copyright?5?$CIC?$CJ?51999?9?$CFs?0?5Int@ DB '/'
	DB	'*', 0aH, ' * Copyright (C) 1999-%s, International Business Ma'
	DB	'chines', 0aH, ' * Corporation and others.  All Rights Reserve'
	DB	'd.', 0aH, ' *', 0aH, ' * file name: %s', 0aH, ' *', 0aH, ' * '
	DB	'machine-generated by: %s', 0aH, ' */', 0aH, 0aH, 00H ; `string'
CONST	ENDS
PUBLIC	_usrc_create
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\toolutil\writesrc.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _usrc_create
_TEXT	SEGMENT
_path$ = 8						; size = 4
_filename$ = 12						; size = 4
_generator$ = 16					; size = 4
_usrc_create PROC					; COMDAT
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 84
	mov	eax, DWORD PTR ?header@?1??usrc_create@@9@9
	push	eax
	mov	ecx, DWORD PTR _generator$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_usrc_createWithHeader
	add	esp, 16					; 00000010H
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_create ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CM@FPMHPCIJ@usrc_create?$CI?$CFs?0?5?$CFs?$CJ?3?5unable?5to?5c@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@	; `string'
PUBLIC	??_C@_02FFEBEEPL@?$CFY?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__strftime:PROC
EXTRN	__imp__fopen:PROC
EXTRN	_strlen:PROC
EXTRN	_strcpy:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0CM@FPMHPCIJ@usrc_create?$CI?$CFs?0?5?$CFs?$CJ?3?5unable?5to?5c@
CONST	SEGMENT
??_C@_0CM@FPMHPCIJ@usrc_create?$CI?$CFs?0?5?$CFs?$CJ?3?5unable?5to?5c@ DB 'u'
	DB	'src_create(%s, %s): unable to create file', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
CONST	SEGMENT
??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@ DB '%Y-%m-%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02FFEBEEPL@?$CFY?$AA@
CONST	SEGMENT
??_C@_02FFEBEEPL@?$CFY?$AA@ DB '%Y', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _usrc_createWithHeader
_TEXT	SEGMENT
tv140 = -1324						; size = 4
_t$6203 = -1124						; size = 8
_lt$6202 = -1108					; size = 4
_year$6201 = -1096					; size = 8
_c$ = -1077						; size = 1
_f$ = -1068						; size = 4
_q$ = -1056						; size = 4
_p$ = -1044						; size = 4
_buffer$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_filename$ = 12						; size = 4
_generator$ = 16					; size = 4
_header$ = 20						; size = 4
_usrc_createWithHeader PROC				; COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 1324				; 0000052cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1324]
	mov	ecx, 331				; 0000014bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 36
	cmp	DWORD PTR _path$[ebp], 0
	jne	SHORT $LN7@usrc_creat
; Line 37
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 38
	jmp	$LN6@usrc_creat
$LN7@usrc_creat:
; Line 40
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 41
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	lea	ecx, DWORD PTR _buffer$[ebp+eax]
	mov	DWORD PTR _q$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _q$[ebp]
	lea	ecx, DWORD PTR _buffer$[ebp]
	cmp	eax, ecx
	jbe	SHORT $LN5@usrc_creat
	mov	eax, DWORD PTR _q$[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 92					; 0000005cH
	je	SHORT $LN5@usrc_creat
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 47					; 0000002fH
	je	SHORT $LN5@usrc_creat
; Line 43
	mov	eax, DWORD PTR _q$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _q$[ebp]
	add	ecx, 1
	mov	DWORD PTR _q$[ebp], ecx
$LN5@usrc_creat:
; Line 45
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _q$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 46
	lea	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN6@usrc_creat:
; Line 49
	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _f$[ebp], eax
; Line 50
	cmp	DWORD PTR _f$[ebp], 0
	je	$LN4@usrc_creat
; Line 55
	lea	eax, DWORD PTR _t$6203[ebp]
	push	eax
	call	_time
	add	esp, 4
; Line 56
	lea	eax, DWORD PTR _t$6203[ebp]
	push	eax
	call	_localtime
	add	esp, 4
	mov	DWORD PTR _lt$6202[ebp], eax
; Line 57
	mov	esi, esp
	mov	eax, DWORD PTR _lt$6202[ebp]
	push	eax
	push	OFFSET ??_C@_02FFEBEEPL@?$CFY?$AA@
	push	8
	lea	ecx, DWORD PTR _year$6201[ebp]
	push	ecx
	call	DWORD PTR __imp__strftime
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	cmp	DWORD PTR _generator$[ebp], 0
	jne	SHORT $LN3@usrc_creat
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR _lt$6202[ebp]
	push	eax
	push	OFFSET ??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
	push	1024					; 00000400H
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__strftime
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	mov	esi, esp
	lea	eax, DWORD PTR _buffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$6201[ebp]
	push	edx
	mov	eax, DWORD PTR _header$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 61
	jmp	SHORT $LN2@usrc_creat
$LN3@usrc_creat:
; Line 62
	mov	esi, esp
	mov	eax, DWORD PTR _generator$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	lea	edx, DWORD PTR _year$6201[ebp]
	push	edx
	mov	eax, DWORD PTR _header$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@usrc_creat:
; Line 64
	jmp	SHORT $LN1@usrc_creat
$LN4@usrc_creat:
; Line 68
	cmp	DWORD PTR _path$[ebp], 0
	je	SHORT $LN10@usrc_creat
	mov	eax, DWORD PTR _path$[ebp]
	mov	DWORD PTR tv140[ebp], eax
	jmp	SHORT $LN11@usrc_creat
$LN10@usrc_creat:
	mov	DWORD PTR tv140[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN11@usrc_creat:
	mov	esi, esp
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv140[ebp]
	push	edx
	push	OFFSET ??_C@_0CM@FPMHPCIJ@usrc_create?$CI?$CFs?0?5?$CFs?$CJ?3?5unable?5to?5c@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@usrc_creat:
; Line 70
	mov	eax, DWORD PTR _f$[ebp]
; Line 71
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@usrc_creat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1324				; 0000052cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@usrc_creat:
	DD	3
	DD	$LN15@usrc_creat
$LN15@usrc_creat:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN12@usrc_creat
	DD	-1096					; fffffbb8H
	DD	8
	DD	$LN13@usrc_creat
	DD	-1124					; fffffb9cH
	DD	8
	DD	$LN14@usrc_creat
$LN14@usrc_creat:
	DB	116					; 00000074H
	DB	0
$LN13@usrc_creat:
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	0
$LN12@usrc_creat:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_usrc_createWithHeader ENDP
_TEXT	ENDS
EXTRN	__imp___localtime64:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _localtime
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_localtime PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\time.inl
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___localtime64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_localtime ENDP
_TEXT	ENDS
EXTRN	__imp___time64:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	esi, esp
	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	DWORD PTR __imp___time64
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
PUBLIC	_usrc_createTextData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usrc_createTextData
_TEXT	SEGMENT
_path$ = 8						; size = 4
_filename$ = 12						; size = 4
_generator$ = 16					; size = 4
_usrc_createTextData PROC				; COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\writesrc.c
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	mov	eax, DWORD PTR ?header@?1??usrc_createTextData@@9@9
	push	eax
	mov	ecx, DWORD PTR _generator$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_usrc_createWithHeader
	add	esp, 16					; 00000010H
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_createTextData ENDP
_TEXT	ENDS
PUBLIC	??_C@_05LCCCGMEJ@0x?$CFlx?$AA@			; `string'
PUBLIC	??_C@_03FKNCMABI@?$CFlu?$AA@			; `string'
PUBLIC	??_C@_02MLAGHBOD@?0?6?$AA@			; `string'
PUBLIC	??_C@_0CP@CPAIKAH@usrc_writeArray?$CIwidth?$DN?$CFld?$CJ?5unrec@ ; `string'
PUBLIC	_usrc_writeArray
EXTRN	__imp__fputs:PROC
EXTRN	__imp__fputc:PROC
;	COMDAT ??_C@_05LCCCGMEJ@0x?$CFlx?$AA@
CONST	SEGMENT
??_C@_05LCCCGMEJ@0x?$CFlx?$AA@ DB '0x%lx', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FKNCMABI@?$CFlu?$AA@
CONST	SEGMENT
??_C@_03FKNCMABI@?$CFlu?$AA@ DB '%lu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MLAGHBOD@?0?6?$AA@
CONST	SEGMENT
??_C@_02MLAGHBOD@?0?6?$AA@ DB ',', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@CPAIKAH@usrc_writeArray?$CIwidth?$DN?$CFld?$CJ?5unrec@
CONST	SEGMENT
??_C@_0CP@CPAIKAH@usrc_writeArray?$CIwidth?$DN?$CFld?$CJ?5unrec@ DB 'usrc'
	DB	'_writeArray(width=%ld) unrecognized width', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _usrc_writeArray
_TEXT	SEGMENT
tv132 = -268						; size = 4
tv82 = -268						; size = 4
tv64 = -268						; size = 4
_col$ = -68						; size = 4
_i$ = -56						; size = 4
_value$ = -44						; size = 4
_p32$ = -32						; size = 4
_p16$ = -20						; size = 4
_p8$ = -8						; size = 4
_f$ = 8							; size = 4
_prefix$ = 12						; size = 4
_p$ = 16						; size = 4
_width$ = 20						; size = 4
_length$ = 24						; size = 4
_postfix$ = 28						; size = 4
_usrc_writeArray PROC					; COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	DWORD PTR _p8$[ebp], 0
; Line 112
	mov	DWORD PTR _p16$[ebp], 0
; Line 113
	mov	DWORD PTR _p32$[ebp], 0
; Line 114
	mov	eax, DWORD PTR _width$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 8
	je	SHORT $LN18@usrc_write
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	je	SHORT $LN17@usrc_write
	cmp	DWORD PTR tv64[ebp], 32			; 00000020H
	je	SHORT $LN16@usrc_write
	jmp	SHORT $LN15@usrc_write
$LN18@usrc_write:
; Line 116
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p8$[ebp], eax
; Line 117
	jmp	SHORT $LN19@usrc_write
$LN17@usrc_write:
; Line 119
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p16$[ebp], eax
; Line 120
	jmp	SHORT $LN19@usrc_write
$LN16@usrc_write:
; Line 122
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _p32$[ebp], eax
; Line 123
	jmp	SHORT $LN19@usrc_write
$LN15@usrc_write:
; Line 125
	mov	esi, esp
	mov	eax, DWORD PTR _width$[ebp]
	push	eax
	push	OFFSET ??_C@_0CP@CPAIKAH@usrc_writeArray?$CIwidth?$DN?$CFld?$CJ?5unrec@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	jmp	$LN21@usrc_write
$LN19@usrc_write:
; Line 128
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN14@usrc_write
; Line 129
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@usrc_write:
; Line 131
	mov	DWORD PTR _col$[ebp], 0
	mov	eax, DWORD PTR _col$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN13@usrc_write
$LN12@usrc_write:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, 1
	mov	DWORD PTR _col$[ebp], ecx
$LN13@usrc_write:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN11@usrc_write
; Line 132
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN10@usrc_write
; Line 133
	cmp	DWORD PTR _col$[ebp], 16		; 00000010H
	jge	SHORT $LN9@usrc_write
; Line 134
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	push	44					; 0000002cH
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	jmp	SHORT $LN10@usrc_write
$LN9@usrc_write:
; Line 136
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	push	OFFSET ??_C@_02MLAGHBOD@?0?6?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 137
	mov	DWORD PTR _col$[ebp], 0
$LN10@usrc_write:
; Line 140
	mov	eax, DWORD PTR _width$[ebp]
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 8
	je	SHORT $LN5@usrc_write
	cmp	DWORD PTR tv82[ebp], 16			; 00000010H
	je	SHORT $LN4@usrc_write
	cmp	DWORD PTR tv82[ebp], 32			; 00000020H
	je	SHORT $LN3@usrc_write
	jmp	SHORT $LN2@usrc_write
$LN5@usrc_write:
; Line 142
	mov	eax, DWORD PTR _p8$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _value$[ebp], ecx
; Line 143
	jmp	SHORT $LN6@usrc_write
$LN4@usrc_write:
; Line 145
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p16$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _value$[ebp], edx
; Line 146
	jmp	SHORT $LN6@usrc_write
$LN3@usrc_write:
; Line 148
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _p32$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _value$[ebp], edx
; Line 149
	jmp	SHORT $LN6@usrc_write
$LN2@usrc_write:
; Line 151
	mov	DWORD PTR _value$[ebp], 0
$LN6@usrc_write:
; Line 154
	cmp	DWORD PTR _value$[ebp], 9
	ja	SHORT $LN23@usrc_write
	mov	DWORD PTR tv132[ebp], OFFSET ??_C@_03FKNCMABI@?$CFlu?$AA@
	jmp	SHORT $LN24@usrc_write
$LN23@usrc_write:
	mov	DWORD PTR tv132[ebp], OFFSET ??_C@_05LCCCGMEJ@0x?$CFlx?$AA@
$LN24@usrc_write:
	mov	esi, esp
	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv132[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 155
	jmp	$LN12@usrc_write
$LN11@usrc_write:
; Line 156
	cmp	DWORD PTR _postfix$[ebp], 0
	je	SHORT $LN21@usrc_write
; Line 157
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _postfix$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@usrc_write:
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_writeArray ENDP
_TEXT	ENDS
PUBLIC	_usrc_writeUTrie2Arrays
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _usrc_writeUTrie2Arrays
_TEXT	SEGMENT
_f$ = 8							; size = 4
_indexPrefix$ = 12					; size = 4
_data32Prefix$ = 16					; size = 4
_pTrie$ = 20						; size = 4
_postfix$ = 24						; size = 4
_usrc_writeUTrie2Arrays PROC				; COMDAT
; Line 165
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 166
	mov	eax, DWORD PTR _pTrie$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN2@usrc_write@2
; Line 168
	mov	eax, DWORD PTR _postfix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTrie$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR _pTrie$[ebp]
	add	edx, DWORD PTR [eax+16]
	push	edx
	push	16					; 00000010H
	mov	ecx, DWORD PTR _pTrie$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _indexPrefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	_usrc_writeArray
	add	esp, 24					; 00000018H
; Line 169
	jmp	SHORT $LN3@usrc_write@2
$LN2@usrc_write@2:
; Line 171
	mov	eax, DWORD PTR _postfix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTrie$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	push	16					; 00000010H
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _indexPrefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_usrc_writeArray
	add	esp, 24					; 00000018H
; Line 172
	mov	eax, DWORD PTR _postfix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTrie$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	32					; 00000020H
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _data32Prefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_usrc_writeArray
	add	esp, 24					; 00000018H
$LN3@usrc_write@2:
; Line 174
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_writeUTrie2Arrays ENDP
_TEXT	ENDS
PUBLIC	??_C@_0HI@PBHHPANN@?5?5?5?5?$CFld?0?6?5?5?5?5?$CFld?0?6?5?5?5?50x?$CFhx?0?6?5?5?5@ ; `string'
PUBLIC	??_C@_0BL@GDACFIPE@?5?5?5?5?$CFs?0?6?5?5?5?5NULL?0?6?5?5?5?5?$CFs?0?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@LKJNHJNA@?5?5?5?5?$CFs?0?6?5?5?5?5?$CFs?$CL?$CFld?0?6?5?5?5?5NULL?0?6?$AA@ ; `string'
PUBLIC	_usrc_writeUTrie2Struct
;	COMDAT ??_C@_0HI@PBHHPANN@?5?5?5?5?$CFld?0?6?5?5?5?5?$CFld?0?6?5?5?5?50x?$CFhx?0?6?5?5?5@
CONST	SEGMENT
??_C@_0HI@PBHHPANN@?5?5?5?5?$CFld?0?6?5?5?5?5?$CFld?0?6?5?5?5?50x?$CFhx?0?6?5?5?5@ DB ' '
	DB	'   %ld,', 0aH, '    %ld,', 0aH, '    0x%hx,', 0aH, '    0x%hx'
	DB	',', 0aH, '    0x%lx,', 0aH, '    0x%lx,', 0aH, '    0x%lx,', 0aH
	DB	'    0x%lx,', 0aH, '    NULL, 0, FALSE, FALSE, 0, NULL', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GDACFIPE@?5?5?5?5?$CFs?0?6?5?5?5?5NULL?0?6?5?5?5?5?$CFs?0?6?$AA@
CONST	SEGMENT
??_C@_0BL@GDACFIPE@?5?5?5?5?$CFs?0?6?5?5?5?5NULL?0?6?5?5?5?5?$CFs?0?6?$AA@ DB ' '
	DB	'   %s,', 0aH, '    NULL,', 0aH, '    %s,', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LKJNHJNA@?5?5?5?5?$CFs?0?6?5?5?5?5?$CFs?$CL?$CFld?0?6?5?5?5?5NULL?0?6?$AA@
CONST	SEGMENT
??_C@_0BP@LKJNHJNA@?5?5?5?5?$CFs?0?6?5?5?5?5?$CFs?$CL?$CFld?0?6?5?5?5?5NULL?0?6?$AA@ DB ' '
	DB	'   %s,', 0aH, '    %s+%ld,', 0aH, '    NULL,', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _usrc_writeUTrie2Struct
_TEXT	SEGMENT
_f$ = 8							; size = 4
_prefix$ = 12						; size = 4
_pTrie$ = 16						; size = 4
_indexName$ = 20					; size = 4
_data32Name$ = 24					; size = 4
_postfix$ = 28						; size = 4
_usrc_writeUTrie2Struct PROC				; COMDAT
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 182
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN4@usrc_write@3
; Line 183
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@usrc_write@3:
; Line 185
	mov	eax, DWORD PTR _pTrie$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@usrc_write@3
; Line 194
	mov	esi, esp
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _indexName$[ebp]
	push	edx
	mov	eax, DWORD PTR _indexName$[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@LKJNHJNA@?5?5?5?5?$CFs?0?6?5?5?5?5?$CFs?$CL?$CFld?0?6?5?5?5?5NULL?0?6?$AA@
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 195
	jmp	SHORT $LN2@usrc_write@3
$LN3@usrc_write@3:
; Line 203
	mov	esi, esp
	mov	eax, DWORD PTR _data32Name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _indexName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BL@GDACFIPE@?5?5?5?5?$CFs?0?6?5?5?5?5NULL?0?6?5?5?5?5?$CFs?0?6?$AA@
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@usrc_write@3:
; Line 219
	mov	esi, esp
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _pTrie$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _pTrie$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pTrie$[ebp]
	movsx	eax, WORD PTR [edx+22]
	push	eax
	mov	ecx, DWORD PTR _pTrie$[ebp]
	movsx	edx, WORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _pTrie$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _pTrie$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET ??_C@_0HI@PBHHPANN@?5?5?5?5?$CFld?0?6?5?5?5?5?$CFld?0?6?5?5?5?50x?$CFhx?0?6?5?5?5@
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	DWORD PTR __imp__fprintf
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	cmp	DWORD PTR _postfix$[ebp], 0
	je	SHORT $LN5@usrc_write@3
; Line 221
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _postfix$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@usrc_write@3:
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_writeUTrie2Struct ENDP
_TEXT	ENDS
PUBLIC	??_C@_04ENIEGDOG@?8?$CFc?8?$AA@			; `string'
PUBLIC	??_C@_02GMHACPFF@?$CFu?$AA@			; `string'
PUBLIC	_usrc_writeArrayOfMostlyInvChars
;	COMDAT ??_C@_04ENIEGDOG@?8?$CFc?8?$AA@
CONST	SEGMENT
??_C@_04ENIEGDOG@?8?$CFc?8?$AA@ DB '''%c''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMHACPFF@?$CFu?$AA@
CONST	SEGMENT
??_C@_02GMHACPFF@?$CFu?$AA@ DB '%u', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _usrc_writeArrayOfMostlyInvChars
_TEXT	SEGMENT
tv90 = -256						; size = 4
_c$ = -56						; size = 4
_prev$ = -44						; size = 4
_prev2$ = -32						; size = 4
_col$ = -20						; size = 4
_i$ = -8						; size = 4
_f$ = 8							; size = 4
_prefix$ = 12						; size = 4
_p$ = 16						; size = 4
_length$ = 20						; size = 4
_postfix$ = 24						; size = 4
_usrc_writeArrayOfMostlyInvChars PROC			; COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 233
	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN11@usrc_write@4
; Line 234
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@usrc_write@4:
; Line 236
	mov	DWORD PTR _prev$[ebp], -1
	mov	eax, DWORD PTR _prev$[ebp]
	mov	DWORD PTR _prev2$[ebp], eax
; Line 237
	mov	DWORD PTR _col$[ebp], 0
	mov	eax, DWORD PTR _col$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN10@usrc_write@4
$LN9@usrc_write@4:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _col$[ebp]
	add	ecx, 1
	mov	DWORD PTR _col$[ebp], ecx
$LN10@usrc_write@4:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	$LN8@usrc_write@4
; Line 238
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _c$[ebp], ecx
; Line 239
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN7@usrc_write@4
; Line 248
	cmp	DWORD PTR _col$[ebp], 32		; 00000020H
	jge	SHORT $LN5@usrc_write@4
	cmp	DWORD PTR _col$[ebp], 24		; 00000018H
	jl	SHORT $LN4@usrc_write@4
	cmp	DWORD PTR _prev2$[ebp], 32		; 00000020H
	jl	SHORT $LN4@usrc_write@4
	cmp	DWORD PTR _prev$[ebp], 0
	je	SHORT $LN5@usrc_write@4
$LN4@usrc_write@4:
	cmp	DWORD PTR _col$[ebp], 16		; 00000010H
	jl	SHORT $LN6@usrc_write@4
	cmp	DWORD PTR _prev$[ebp], 0
	je	SHORT $LN3@usrc_write@4
	cmp	DWORD PTR _prev$[ebp], 32		; 00000020H
	jl	SHORT $LN6@usrc_write@4
$LN3@usrc_write@4:
	cmp	DWORD PTR _c$[ebp], 0
	jle	SHORT $LN6@usrc_write@4
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jge	SHORT $LN6@usrc_write@4
$LN5@usrc_write@4:
; Line 249
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	push	OFFSET ??_C@_02MLAGHBOD@?0?6?$AA@
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 250
	mov	DWORD PTR _col$[ebp], 0
; Line 251
	jmp	SHORT $LN7@usrc_write@4
$LN6@usrc_write@4:
; Line 252
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	push	44					; 0000002cH
	call	DWORD PTR __imp__fputc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@usrc_write@4:
; Line 255
	cmp	DWORD PTR _c$[ebp], 32			; 00000020H
	jge	SHORT $LN14@usrc_write@4
	mov	DWORD PTR tv90[ebp], OFFSET ??_C@_02GMHACPFF@?$CFu?$AA@
	jmp	SHORT $LN15@usrc_write@4
$LN14@usrc_write@4:
	mov	DWORD PTR tv90[ebp], OFFSET ??_C@_04ENIEGDOG@?8?$CFc?8?$AA@
$LN15@usrc_write@4:
	mov	esi, esp
	mov	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv90[ebp]
	push	ecx
	mov	edx, DWORD PTR _f$[ebp]
	push	edx
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 256
	mov	eax, DWORD PTR _prev$[ebp]
	mov	DWORD PTR _prev2$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _prev$[ebp], eax
; Line 258
	jmp	$LN9@usrc_write@4
$LN8@usrc_write@4:
; Line 259
	cmp	DWORD PTR _postfix$[ebp], 0
	je	SHORT $LN12@usrc_write@4
; Line 260
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	mov	ecx, DWORD PTR _postfix$[ebp]
	push	ecx
	call	DWORD PTR __imp__fputs
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@usrc_write@4:
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_usrc_writeArrayOfMostlyInvChars ENDP
_TEXT	ENDS
END

; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\ucbuf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	__$ArrayPad$
PUBLIC	_ucbuf_autodetect_fs
EXTRN	_ucnv_toUnicode_56:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_T_FileStream_rewind:PROC
EXTRN	_ucnv_detectUnicodeSignature_56:PROC
EXTRN	_T_FileStream_read:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\toolutil\ucbuf.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ucbuf_autodetect_fs
_TEXT	SEGMENT
_pStart$ = -64						; size = 4
_pTarget$ = -52						; size = 4
_target$ = -40						; size = 2
_numRead$ = -28						; size = 4
_start$ = -16						; size = 8
__$ArrayPad$ = -4					; size = 4
_in$ = 8						; size = 4
_cp$ = 12						; size = 4
_conv$ = 16						; size = 4
_signatureLength$ = 20					; size = 4
_error$ = 24						; size = 4
_ucbuf_autodetect_fs PROC				; COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 57
	xor	eax, eax
	mov	WORD PTR _target$[ebp], ax
; Line 62
	push	8
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _numRead$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _signatureLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _numRead$[ebp]
	push	edx
	lea	eax, DWORD PTR _start$[ebp]
	push	eax
	call	_ucnv_detectUnicodeSignature_56
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _cp$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 67
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_rewind
	add	esp, 4
; Line 68
	mov	eax, DWORD PTR _signatureLength$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@ucbuf_auto
; Line 69
	mov	eax, DWORD PTR _signatureLength$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
$LN5@ucbuf_auto:
; Line 72
	mov	eax, DWORD PTR _cp$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN4@ucbuf_auto
; Line 73
	mov	eax, DWORD PTR _conv$[ebp]
	mov	DWORD PTR [eax], 0
; Line 74
	xor	al, al
	jmp	$LN6@ucbuf_auto
$LN4@ucbuf_auto:
; Line 78
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cp$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucnv_open_56
	add	esp, 8
	mov	ecx, DWORD PTR _conv$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 81
	lea	eax, DWORD PTR _target$[ebp]
	mov	DWORD PTR _pTarget$[ebp], eax
; Line 82
	lea	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _pStart$[ebp], eax
; Line 83
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _signatureLength$[ebp]
	mov	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR _start$[ebp+edx]
	push	eax
	lea	ecx, DWORD PTR _pStart$[ebp]
	push	ecx
	lea	edx, DWORD PTR _target$[ebp+2]
	push	edx
	lea	eax, DWORD PTR _pTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _conv$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 84
	mov	eax, DWORD PTR _pStart$[ebp]
	lea	ecx, DWORD PTR _start$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _signatureLength$[ebp]
	mov	DWORD PTR [edx], eax
; Line 85
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN3@ucbuf_auto
; Line 86
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@ucbuf_auto:
; Line 90
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN2@ucbuf_auto
	lea	eax, DWORD PTR _target$[ebp+2]
	cmp	DWORD PTR _pTarget$[ebp], eax
	jne	SHORT $LN1@ucbuf_auto
	movzx	eax, WORD PTR _target$[ebp]
	cmp	eax, 65279				; 0000feffH
	je	SHORT $LN2@ucbuf_auto
$LN1@ucbuf_auto:
; Line 91
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 5
$LN2@ucbuf_auto:
; Line 95
	mov	al, 1
$LN6@ucbuf_auto:
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@ucbuf_auto
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@ucbuf_auto:
	DD	4
	DD	$LN12@ucbuf_auto
$LN12@ucbuf_auto:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN8@ucbuf_auto
	DD	-40					; ffffffd8H
	DD	2
	DD	$LN9@ucbuf_auto
	DD	-52					; ffffffccH
	DD	4
	DD	$LN10@ucbuf_auto
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN11@ucbuf_auto
$LN11@ucbuf_auto:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN10@ucbuf_auto:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN9@ucbuf_auto:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN8@ucbuf_auto:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
_ucbuf_autodetect_fs ENDP
_TEXT	ENDS
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	_ucbuf_autodetect
EXTRN	_T_FileStream_close:PROC
EXTRN	_ucnv_close_56:PROC
EXTRN	_T_FileStream_open:PROC
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucbuf_autodetect
_TEXT	SEGMENT
_in$ = -8						; size = 4
_fileName$ = 8						; size = 4
_cp$ = 12						; size = 4
_conv$ = 16						; size = 4
_signatureLength$ = 20					; size = 4
_error$ = 24						; size = 4
_ucbuf_autodetect PROC					; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	DWORD PTR _in$[ebp], 0
; Line 134
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN6@ucbuf_auto@2
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@ucbuf_auto@2
$LN6@ucbuf_auto@2:
; Line 135
	xor	eax, eax
	jmp	$LN8@ucbuf_auto@2
$LN7@ucbuf_auto@2:
; Line 137
	cmp	DWORD PTR _conv$[ebp], 0
	je	SHORT $LN4@ucbuf_auto@2
	cmp	DWORD PTR _cp$[ebp], 0
	je	SHORT $LN4@ucbuf_auto@2
	cmp	DWORD PTR _fileName$[ebp], 0
	jne	SHORT $LN5@ucbuf_auto@2
$LN4@ucbuf_auto@2:
; Line 138
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 1
; Line 139
	xor	eax, eax
	jmp	SHORT $LN8@ucbuf_auto@2
$LN5@ucbuf_auto@2:
; Line 142
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _in$[ebp], eax
; Line 144
	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN3@ucbuf_auto@2
; Line 145
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 4
; Line 146
	xor	eax, eax
	jmp	SHORT $LN8@ucbuf_auto@2
$LN3@ucbuf_auto@2:
; Line 149
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _signatureLength$[ebp]
	push	ecx
	mov	edx, DWORD PTR _conv$[ebp]
	push	edx
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	_ucbuf_autodetect_fs
	add	esp, 20					; 00000014H
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@ucbuf_auto@2
; Line 150
	mov	eax, DWORD PTR _in$[ebp]
	jmp	SHORT $LN8@ucbuf_auto@2
; Line 151
	jmp	SHORT $LN8@ucbuf_auto@2
$LN2@ucbuf_auto@2:
; Line 152
	mov	eax, DWORD PTR _conv$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucnv_close_56
	add	esp, 4
; Line 153
	mov	eax, DWORD PTR _conv$[ebp]
	mov	DWORD PTR [eax], 0
; Line 154
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 155
	xor	eax, eax
$LN8@ucbuf_auto@2:
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_autodetect ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_getc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_getc
_TEXT	SEGMENT
tv80 = -194						; size = 2
_buf$ = 8						; size = 4
_error$ = 12						; size = 4
_ucbuf_getc PROC					; COMDAT
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 324
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN4@ucbuf_getc
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@ucbuf_getc
$LN4@ucbuf_getc:
; Line 325
	xor	eax, eax
	jmp	SHORT $LN6@ucbuf_getc
$LN5@ucbuf_getc:
; Line 327
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jb	SHORT $LN3@ucbuf_getc
; Line 328
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN2@ucbuf_getc
; Line 329
	or	eax, -1
	jmp	SHORT $LN6@ucbuf_getc
$LN2@ucbuf_getc:
; Line 331
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 332
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@ucbuf_getc
; Line 333
	or	eax, -1
	jmp	SHORT $LN6@ucbuf_getc
$LN3@ucbuf_getc:
; Line 337
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR tv80[ebp], dx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+4], ecx
	movzx	eax, WORD PTR tv80[ebp]
$LN6@ucbuf_getc:
; Line 338
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_getc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@	; `string'
PUBLIC	??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	_uprv_free_56:PROC
EXTRN	_u_charsToUChars_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_SUBSTITUTE_56:PROC
EXTRN	_ucnv_reset_56:PROC
EXTRN	_memcpy:PROC
EXTRN	_ucnv_getInvalidChars_56:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_ucnv_setToUCallBack_56:PROC
EXTRN	_UCNV_TO_U_CALLBACK_STOP_56:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	_T_FileStream_size:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_memset:PROC
;	COMDAT ??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@ DB 09H, 'Post-context:'
	DB	' %s', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@ DB 09H, 'Context: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@ DB 09H, 'Pre-context: %'
	DB	's', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@
CONST	SEGMENT
??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@ DB 0aH, '#'
	DB	'##WARNING: Encountered abnormal bytes while converting input '
	DB	'stream to target encoding: %s', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucbuf_fillucbuf
_TEXT	SEGMENT
tv269 = -1508						; size = 4
tv207 = -1508						; size = 4
tv190 = -1508						; size = 4
_error1$7888 = -1308					; size = 4
_pos$7887 = -1296					; size = 4
_stop$7886 = -1284					; size = 4
_start$7885 = -1272					; size = 4
_len$7884 = -1257					; size = 1
_postContext$7883 = -1248				; size = 21
_preContext$7882 = -1216				; size = 21
_context$7881 = -1184					; size = 21
_toUNewContext$7875 = -1152				; size = 4
_toUOldContext$7874 = -1140				; size = 4
_toUOldAction$7873 = -1128				; size = 4
_cbufSize$ = -1116					; size = 4
_sourceLimit$ = -1104					; size = 4
_offset$ = -1092					; size = 4
_outputWritten$ = -1080					; size = 4
_inputRead$ = -1068					; size = 4
_cbuf$ = -1056						; size = 4
_carr$ = -1044						; size = 1000
_source$ = -36						; size = 4
_target$ = -24						; size = 4
_pTarget$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_buf$ = 8						; size = 4
_error$ = 12						; size = 4
_ucbuf_fillucbuf PROC					; COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 1508				; 000005e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1508]
	mov	ecx, 377				; 00000179H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 162
	mov	DWORD PTR _pTarget$[ebp], 0
; Line 163
	mov	DWORD PTR _target$[ebp], 0
; Line 164
	mov	DWORD PTR _source$[ebp], 0
; Line 165
	mov	BYTE PTR _carr$[ebp], 0
	push	999					; 000003e7H
	push	0
	lea	eax, DWORD PTR _carr$[ebp+1]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 166
	lea	eax, DWORD PTR _carr$[ebp]
	mov	DWORD PTR _cbuf$[ebp], eax
; Line 167
	mov	DWORD PTR _inputRead$[ebp], 0
; Line 168
	mov	DWORD PTR _outputWritten$[ebp], 0
; Line 169
	mov	DWORD PTR _offset$[ebp], 0
; Line 170
	mov	DWORD PTR _sourceLimit$[ebp], 0
; Line 171
	mov	DWORD PTR _cbufSize$[ebp], 0
; Line 172
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pTarget$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN11@ucbuf_fill
; Line 175
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 1
	mov	DWORD PTR _offset$[ebp], edx
; Line 176
	mov	eax, DWORD PTR _offset$[ebp]
	shl	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@ucbuf_fill:
; Line 182
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	SHORT $LN10@ucbuf_fill
; Line 183
	mov	DWORD PTR _cbufSize$[ebp], 1000		; 000003e8H
; Line 185
	mov	eax, DWORD PTR _cbufSize$[ebp]
	sub	eax, DWORD PTR _offset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _inputRead$[ebp], eax
; Line 186
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _inputRead$[ebp]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 188
	jmp	SHORT $LN9@ucbuf_fill
$LN10@ucbuf_fill:
; Line 189
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _cbufSize$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _cbufSize$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _cbuf$[ebp], eax
; Line 191
	cmp	DWORD PTR _cbuf$[ebp], 0
	jne	SHORT $LN8@ucbuf_fill
; Line 192
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 7
; Line 193
	xor	eax, eax
	jmp	$LN12@ucbuf_fill
$LN8@ucbuf_fill:
; Line 195
	mov	eax, DWORD PTR _cbufSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cbuf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _inputRead$[ebp], eax
; Line 196
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _inputRead$[ebp]
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+16], ecx
$LN9@ucbuf_fill:
; Line 200
	cmp	DWORD PTR _inputRead$[ebp], 0
	jne	SHORT $LN7@ucbuf_fill
; Line 201
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN7@ucbuf_fill:
; Line 203
	mov	eax, DWORD PTR _pTarget$[ebp]
	mov	DWORD PTR _target$[ebp], eax
; Line 205
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	$LN6@ucbuf_fill
; Line 209
	mov	DWORD PTR _toUNewContext$7875[ebp], 0
; Line 215
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	lea	ecx, DWORD PTR _toUOldContext$7874[ebp]
	push	ecx
	lea	edx, DWORD PTR _toUOldAction$7873[ebp]
	push	edx
	mov	eax, DWORD PTR _toUNewContext$7875[ebp]
	push	eax
	push	OFFSET _UCNV_TO_U_CALLBACK_STOP_56
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_ucnv_setToUCallBack_56
	add	esp, 24					; 00000018H
; Line 217
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _pTarget$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _target$[ebp], edx
; Line 218
	mov	eax, DWORD PTR _cbuf$[ebp]
	mov	DWORD PTR _source$[ebp], eax
; Line 219
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, DWORD PTR _inputRead$[ebp]
	mov	DWORD PTR _sourceLimit$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	sete	dl
	movzx	eax, dl
	push	eax
	push	0
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 224
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	$LN5@ucbuf_fill
; Line 228
	mov	BYTE PTR _len$7884[ebp], 20		; 00000014H
; Line 229
	mov	DWORD PTR _start$7885[ebp], 0
; Line 230
	mov	DWORD PTR _stop$7886[ebp], 0
; Line 231
	mov	DWORD PTR _pos$7887[ebp], 0
; Line 233
	mov	DWORD PTR _error1$7888[ebp], 0
; Line 235
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	cmp	ecx, 1
	jne	SHORT $LN4@ucbuf_fill
; Line 238
	mov	eax, DWORD PTR _error$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0FO@NCCEOLOJ@?6?$CD?$CD?$CDWARNING?3?5Encountered?5abnorma@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@ucbuf_fill:
; Line 243
	lea	eax, DWORD PTR _error1$7888[ebp]
	push	eax
	lea	ecx, DWORD PTR _len$7884[ebp]
	push	ecx
	lea	edx, DWORD PTR _context$7881[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_getInvalidChars_56
	add	esp, 16					; 00000010H
; Line 244
	movsx	eax, BYTE PTR _len$7884[ebp]
	mov	BYTE PTR _context$7881[ebp+eax], 0
; Line 246
	mov	eax, DWORD PTR _source$[ebp]
	sub	eax, DWORD PTR _cbuf$[ebp]
	movsx	ecx, BYTE PTR _len$7884[ebp]
	sub	eax, ecx
	mov	DWORD PTR _pos$7887[ebp], eax
; Line 249
	cmp	DWORD PTR _pos$7887[ebp], 20		; 00000014H
	jg	SHORT $LN14@ucbuf_fill
	mov	DWORD PTR tv190[ebp], 0
	jmp	SHORT $LN15@ucbuf_fill
$LN14@ucbuf_fill:
	mov	eax, DWORD PTR _pos$7887[ebp]
	sub	eax, 19					; 00000013H
	mov	DWORD PTR tv190[ebp], eax
$LN15@ucbuf_fill:
	mov	ecx, DWORD PTR tv190[ebp]
	mov	DWORD PTR _start$7885[ebp], ecx
; Line 250
	movsx	eax, BYTE PTR _len$7884[ebp]
	mov	ecx, DWORD PTR _pos$7887[ebp]
	sub	ecx, eax
	mov	DWORD PTR _stop$7886[ebp], ecx
; Line 252
	mov	eax, DWORD PTR _stop$7886[ebp]
	sub	eax, DWORD PTR _start$7885[ebp]
	push	eax
	mov	ecx, DWORD PTR _cbuf$[ebp]
	add	ecx, DWORD PTR _start$7885[ebp]
	push	ecx
	lea	edx, DWORD PTR _preContext$7882[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 254
	mov	eax, DWORD PTR _stop$7886[ebp]
	sub	eax, DWORD PTR _start$7885[ebp]
	mov	BYTE PTR _preContext$7882[ebp+eax], 0
; Line 257
	movsx	eax, BYTE PTR _len$7884[ebp]
	add	eax, DWORD PTR _pos$7887[ebp]
	mov	DWORD PTR _start$7885[ebp], eax
; Line 258
	mov	eax, DWORD PTR _pos$7887[ebp]
	add	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	sub	ecx, DWORD PTR _cbuf$[ebp]
	cmp	eax, ecx
	jg	SHORT $LN16@ucbuf_fill
	mov	edx, DWORD PTR _pos$7887[ebp]
	add	edx, 19					; 00000013H
	mov	DWORD PTR tv207[ebp], edx
	jmp	SHORT $LN17@ucbuf_fill
$LN16@ucbuf_fill:
	mov	eax, DWORD PTR _sourceLimit$[ebp]
	sub	eax, DWORD PTR _cbuf$[ebp]
	mov	DWORD PTR tv207[ebp], eax
$LN17@ucbuf_fill:
	mov	ecx, DWORD PTR tv207[ebp]
	mov	DWORD PTR _stop$7886[ebp], ecx
; Line 260
	mov	eax, DWORD PTR _stop$7886[ebp]
	sub	eax, DWORD PTR _start$7885[ebp]
	push	eax
	mov	ecx, DWORD PTR _source$[ebp]
	push	ecx
	lea	edx, DWORD PTR _postContext$7883[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 262
	mov	eax, DWORD PTR _stop$7886[ebp]
	sub	eax, DWORD PTR _start$7885[ebp]
	mov	BYTE PTR _postContext$7883[ebp+eax], 0
; Line 264
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	cmp	ecx, 1
	jne	$LN3@ucbuf_fill
; Line 266
	mov	esi, esp
	lea	eax, DWORD PTR _preContext$7882[ebp]
	push	eax
	push	OFFSET ??_C@_0BC@EDBMLMME@?7Pre?9context?3?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 267
	mov	esi, esp
	lea	eax, DWORD PTR _context$7881[ebp]
	push	eax
	push	OFFSET ??_C@_0O@JGBDPAO@?7Context?3?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 268
	mov	esi, esp
	lea	eax, DWORD PTR _postContext$7883[ebp]
	push	eax
	push	OFFSET ??_C@_0BD@OAOAFOMK@?7Post?9context?3?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ucbuf_fill:
; Line 272
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_reset_56
	add	esp, 4
; Line 282
	lea	eax, DWORD PTR _error1$7888[ebp]
	push	eax
	lea	ecx, DWORD PTR _toUOldContext$7874[ebp]
	push	ecx
	lea	edx, DWORD PTR _toUOldAction$7873[ebp]
	push	edx
	mov	eax, DWORD PTR _toUNewContext$7875[ebp]
	push	eax
	push	OFFSET _UCNV_TO_U_CALLBACK_SUBSTITUTE_56
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_ucnv_setToUCallBack_56
	add	esp, 24					; 00000018H
; Line 285
	mov	eax, DWORD PTR _offset$[ebp]
	mov	ecx, DWORD PTR _pTarget$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _target$[ebp], edx
; Line 286
	mov	eax, DWORD PTR _cbuf$[ebp]
	mov	DWORD PTR _source$[ebp], eax
; Line 291
	lea	eax, DWORD PTR _error1$7888[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	sete	dl
	movzx	eax, dl
	push	eax
	push	0
	mov	ecx, DWORD PTR _sourceLimit$[ebp]
	push	ecx
	lea	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	lea	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
$LN5@ucbuf_fill:
; Line 294
	mov	eax, DWORD PTR _target$[ebp]
	sub	eax, DWORD PTR _pTarget$[ebp]
	sar	eax, 1
	mov	DWORD PTR _outputWritten$[ebp], eax
; Line 306
	jmp	SHORT $LN2@ucbuf_fill
$LN6@ucbuf_fill:
; Line 307
	mov	eax, DWORD PTR _inputRead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _offset$[ebp]
	mov	edx, DWORD PTR _target$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2]
	push	eax
	mov	ecx, DWORD PTR _cbuf$[ebp]
	push	ecx
	call	_u_charsToUChars_56
	add	esp, 12					; 0000000cH
; Line 308
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _cbufSize$[ebp]
	jle	SHORT $LN18@ucbuf_fill
	mov	edx, DWORD PTR _cbufSize$[ebp]
	mov	DWORD PTR tv269[ebp], edx
	jmp	SHORT $LN19@ucbuf_fill
$LN18@ucbuf_fill:
	mov	eax, DWORD PTR _inputRead$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR tv269[ebp], eax
$LN19@ucbuf_fill:
	mov	ecx, DWORD PTR tv269[ebp]
	mov	DWORD PTR _outputWritten$[ebp], ecx
$LN2@ucbuf_fill:
; Line 310
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _pTarget$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 311
	mov	eax, DWORD PTR _outputWritten$[ebp]
	mov	ecx, DWORD PTR _pTarget$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 312
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	xor	edx, edx
	mov	WORD PTR [ecx], dx
; Line 313
	mov	eax, DWORD PTR _cbuf$[ebp]
	lea	ecx, DWORD PTR _carr$[ebp]
	cmp	eax, ecx
	je	SHORT $LN1@ucbuf_fill
; Line 314
	mov	eax, DWORD PTR _cbuf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@ucbuf_fill:
; Line 316
	mov	eax, DWORD PTR _buf$[ebp]
$LN12@ucbuf_fill:
; Line 317
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@ucbuf_fill
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1508				; 000005e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN31@ucbuf_fill:
	DD	10					; 0000000aH
	DD	$LN30@ucbuf_fill
$LN30@ucbuf_fill:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN20@ucbuf_fill
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN21@ucbuf_fill
	DD	-1044					; fffffbecH
	DD	1000					; 000003e8H
	DD	$LN22@ucbuf_fill
	DD	-1128					; fffffb98H
	DD	4
	DD	$LN23@ucbuf_fill
	DD	-1140					; fffffb8cH
	DD	4
	DD	$LN24@ucbuf_fill
	DD	-1184					; fffffb60H
	DD	21					; 00000015H
	DD	$LN25@ucbuf_fill
	DD	-1216					; fffffb40H
	DD	21					; 00000015H
	DD	$LN26@ucbuf_fill
	DD	-1248					; fffffb20H
	DD	21					; 00000015H
	DD	$LN27@ucbuf_fill
	DD	-1257					; fffffb17H
	DD	1
	DD	$LN28@ucbuf_fill
	DD	-1308					; fffffae4H
	DD	4
	DD	$LN29@ucbuf_fill
$LN29@ucbuf_fill:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN28@ucbuf_fill:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN27@ucbuf_fill:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN26@ucbuf_fill:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN25@ucbuf_fill:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN24@ucbuf_fill:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	85					; 00000055H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN23@ucbuf_fill:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	85					; 00000055H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN22@ucbuf_fill:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	0
$LN21@ucbuf_fill:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN20@ucbuf_fill:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_ucbuf_fillucbuf ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_getc32
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_getc32
_TEXT	SEGMENT
_retVal$ = -8						; size = 4
_buf$ = 8						; size = 4
_error$ = 12						; size = 4
_ucbuf_getc32 PROC					; COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 343
	mov	DWORD PTR _retVal$[ebp], -1
; Line 344
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN6@ucbuf_getc@2
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@ucbuf_getc@2
$LN6@ucbuf_getc@2:
; Line 345
	xor	eax, eax
	jmp	$LN8@ucbuf_getc@2
$LN7@ucbuf_getc@2:
; Line 347
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	ecx, DWORD PTR [edx+8]
	jb	SHORT $LN5@ucbuf_getc@2
; Line 348
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN4@ucbuf_getc@2
; Line 349
	or	eax, -1
	jmp	$LN8@ucbuf_getc@2
$LN4@ucbuf_getc@2:
; Line 351
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
; Line 352
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN5@ucbuf_getc@2
; Line 353
	or	eax, -1
	jmp	SHORT $LN8@ucbuf_getc@2
$LN5@ucbuf_getc@2:
; Line 356
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	and	edx, -1024				; fffffc00H
	cmp	edx, 55296				; 0000d800H
	jne	SHORT $LN2@ucbuf_getc@2
; Line 357
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	shl	edx, 10					; 0000000aH
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	eax, WORD PTR [ecx+2]
	lea	ecx, DWORD PTR [edx+eax-56613888]
	mov	DWORD PTR _retVal$[ebp], ecx
; Line 358
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 359
	jmp	SHORT $LN1@ucbuf_getc@2
$LN2@ucbuf_getc@2:
; Line 360
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _retVal$[ebp], edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN1@ucbuf_getc@2:
; Line 362
	mov	eax, DWORD PTR _retVal$[ebp]
$LN8@ucbuf_getc@2:
; Line 363
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_getc32 ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_ucbuf_getcx32
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	_u_unescapeAt_56:PROC
;	COMDAT ??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@
CONST	SEGMENT
??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@ DB 'Bad '
	DB	'escape: [%c%s]...', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucbuf_getcx32
_TEXT	SEGMENT
_len$7962 = -104					; size = 4
_context$7961 = -92					; size = 21
_c2$ = -60						; size = 4
_c1$ = -48						; size = 4
_c32$ = -36						; size = 4
_offset$ = -24						; size = 4
_length$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_buf$ = 8						; size = 4
_error$ = 12						; size = 4
_ucbuf_getcx32 PROC					; COMDAT
; Line 373
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 377
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN13@ucbuf_getc@3
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN14@ucbuf_getc@3
$LN13@ucbuf_getc@3:
; Line 378
	xor	eax, eax
	jmp	$LN15@ucbuf_getc@3
$LN14@ucbuf_getc@3:
; Line 381
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 4
	mov	edx, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [edx+4], ecx
	jb	SHORT $LN12@ucbuf_getc@3
; Line 382
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
$LN12@ucbuf_getc@3:
; Line 386
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jae	SHORT $LN11@ucbuf_getc@3
; Line 387
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _c1$[ebp], edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 388
	jmp	SHORT $LN10@ucbuf_getc@3
$LN11@ucbuf_getc@3:
; Line 389
	mov	DWORD PTR _c1$[ebp], -1
$LN10@ucbuf_getc@3:
; Line 392
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx]
	mov	DWORD PTR _c2$[ebp], edx
; Line 395
	cmp	DWORD PTR _c1$[ebp], 92			; 0000005cH
	je	SHORT $LN9@ucbuf_getc@3
; Line 396
	mov	eax, DWORD PTR _c1$[ebp]
	jmp	$LN15@ucbuf_getc@3
$LN9@ucbuf_getc@3:
; Line 400
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx+4]
	sar	edx, 1
	mov	DWORD PTR _length$[ebp], edx
; Line 404
	cmp	DWORD PTR _length$[ebp], 10		; 0000000aH
	jge	SHORT $LN8@ucbuf_getc@3
; Line 407
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
; Line 408
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 1
	mov	DWORD PTR _length$[ebp], edx
$LN8@ucbuf_getc@3:
; Line 412
	mov	DWORD PTR _offset$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	lea	edx, DWORD PTR _offset$[ebp]
	push	edx
	push	OFFSET __charAt
	call	_u_unescapeAt_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _c32$[ebp], eax
; Line 418
	cmp	DWORD PTR _c32$[ebp], -1
	jne	$LN7@ucbuf_getc@3
; Line 419
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	test	ecx, ecx
	je	SHORT $LN6@ucbuf_getc@3
; Line 421
	mov	DWORD PTR _len$7962[ebp], 20		; 00000014H
; Line 422
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _len$7962[ebp]
	jge	SHORT $LN5@ucbuf_getc@3
; Line 423
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _len$7962[ebp], eax
$LN5@ucbuf_getc@3:
; Line 425
	mov	eax, DWORD PTR _len$7962[ebp]
	mov	BYTE PTR _context$7961[ebp+eax], 0
; Line 426
	mov	eax, DWORD PTR _len$7962[ebp]
	push	eax
	lea	ecx, DWORD PTR _context$7961[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 427
	mov	esi, esp
	lea	eax, DWORD PTR _context$7961[ebp]
	push	eax
	mov	ecx, DWORD PTR _c1$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BH@MHOIFCG@Bad?5escape?3?5?$FL?$CFc?$CFs?$FN?4?4?4?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@ucbuf_getc@3:
; Line 429
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 18			; 00000012H
; Line 430
	mov	eax, DWORD PTR _c1$[ebp]
	jmp	SHORT $LN15@ucbuf_getc@3
	jmp	SHORT $LN4@ucbuf_getc@3
$LN7@ucbuf_getc@3:
; Line 431
	mov	eax, DWORD PTR _c32$[ebp]
	cmp	eax, DWORD PTR _c2$[ebp]
	jne	SHORT $LN2@ucbuf_getc@3
	cmp	DWORD PTR _c32$[ebp], 117		; 00000075H
	jne	SHORT $LN3@ucbuf_getc@3
	cmp	DWORD PTR _c2$[ebp], 117		; 00000075H
	jne	SHORT $LN3@ucbuf_getc@3
	cmp	DWORD PTR _c1$[ebp], 92			; 0000005cH
	jne	SHORT $LN3@ucbuf_getc@3
$LN2@ucbuf_getc@3:
; Line 433
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _offset$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 434
	jmp	SHORT $LN4@ucbuf_getc@3
$LN3@ucbuf_getc@3:
; Line 441
	mov	eax, DWORD PTR _c1$[ebp]
	jmp	SHORT $LN15@ucbuf_getc@3
$LN4@ucbuf_getc@3:
; Line 444
	mov	eax, DWORD PTR _c32$[ebp]
$LN15@ucbuf_getc@3:
; Line 445
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ucbuf_getc@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@ucbuf_getc@3:
	DD	2
	DD	$LN19@ucbuf_getc@3
$LN19@ucbuf_getc@3:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN17@ucbuf_getc@3
	DD	-92					; ffffffa4H
	DD	21					; 00000015H
	DD	$LN18@ucbuf_getc@3
$LN18@ucbuf_getc@3:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN17@ucbuf_getc@3:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_ucbuf_getcx32 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __charAt
_TEXT	SEGMENT
_offset$ = 8						; size = 4
_context$ = 12						; size = 4
__charAt PROC						; COMDAT
; Line 367
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 368
	mov	eax, DWORD PTR _context$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _offset$[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
; Line 369
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__charAt ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@ ; `string'
PUBLIC	_ucbuf_close
PUBLIC	??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@ ; `string'
PUBLIC	??_C@_01JOAMLHOP@?9?$AA@			; `string'
PUBLIC	_ucbuf_open
EXTRN	_T_FileStream_stdin:PROC
EXTRN	_strcmp:PROC
;	COMDAT ??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@
CONST	SEGMENT
??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@ DB 'C'
	DB	'ould not open codepage [%s]: %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@
CONST	SEGMENT
??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@ DB '###'
	DB	'WARNING: No converter defined. Using codepage of system.', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9?$AA@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9?$AA@ DB '-', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucbuf_open
_TEXT	SEGMENT
_buf$7998 = -44						; size = 4
_knownCp$ = -32						; size = 4
_fileSize$ = -20					; size = 4
_in$ = -8						; size = 4
_fileName$ = 8						; size = 4
_cp$ = 12						; size = 4
_showWarning$ = 16					; size = 1
_buffered$ = 20						; size = 1
_error$ = 24						; size = 4
_ucbuf_open PROC					; COMDAT
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 450
	mov	DWORD PTR _in$[ebp], 0
; Line 451
	mov	DWORD PTR _fileSize$[ebp], 0
; Line 453
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN19@ucbuf_open
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN20@ucbuf_open
$LN19@ucbuf_open:
; Line 454
	xor	eax, eax
	jmp	$LN21@ucbuf_open
$LN20@ucbuf_open:
; Line 456
	cmp	DWORD PTR _cp$[ebp], 0
	je	SHORT $LN17@ucbuf_open
	cmp	DWORD PTR _fileName$[ebp], 0
	jne	SHORT $LN18@ucbuf_open
$LN17@ucbuf_open:
; Line 457
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 1
; Line 458
	xor	eax, eax
	jmp	$LN21@ucbuf_open
$LN18@ucbuf_open:
; Line 460
	push	OFFSET ??_C@_01JOAMLHOP@?9?$AA@
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@ucbuf_open
; Line 461
	call	_T_FileStream_stdin
	mov	DWORD PTR _in$[ebp], eax
; Line 462
	jmp	SHORT $LN15@ucbuf_open
$LN16@ucbuf_open:
; Line 463
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _in$[ebp], eax
$LN15@ucbuf_open:
; Line 466
	cmp	DWORD PTR _in$[ebp], 0
	je	$LN14@ucbuf_open
; Line 467
	push	36					; 00000024H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _buf$7998[ebp], eax
; Line 468
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _fileSize$[ebp], eax
; Line 469
	cmp	DWORD PTR _buf$7998[ebp], 0
	jne	SHORT $LN13@ucbuf_open
; Line 470
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 7
; Line 471
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 472
	xor	eax, eax
	jmp	$LN21@ucbuf_open
$LN13@ucbuf_open:
; Line 474
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR _in$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 475
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 476
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	cl, BYTE PTR _showWarning$[ebp]
	mov	BYTE PTR [eax+32], cl
; Line 477
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	cl, BYTE PTR _buffered$[ebp]
	mov	BYTE PTR [eax+33], cl
; Line 478
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 479
	mov	eax, DWORD PTR _cp$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN11@ucbuf_open
	mov	eax, DWORD PTR _cp$[ebp]
	mov	ecx, DWORD PTR [eax]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN12@ucbuf_open
$LN11@ucbuf_open:
; Line 481
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$7998[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _buf$7998[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	_ucbuf_autodetect_fs
	add	esp, 20					; 00000014H
	jmp	SHORT $LN10@ucbuf_open
$LN12@ucbuf_open:
; Line 482
	mov	eax, DWORD PTR _cp$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_ucbuf_isCPKnown
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN10@ucbuf_open
; Line 484
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$7998[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _buf$7998[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	lea	eax, DWORD PTR _knownCp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _in$[ebp]
	push	ecx
	call	_ucbuf_autodetect_fs
	add	esp, 20					; 00000014H
$LN10@ucbuf_open:
; Line 486
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN8@ucbuf_open
	mov	eax, DWORD PTR _buf$7998[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN8@ucbuf_open
; Line 487
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cp$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_ucnv_open_56
	add	esp, 8
	mov	ecx, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [ecx+28], eax
$LN8@ucbuf_open:
; Line 489
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@ucbuf_open
; Line 490
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_close_56
	add	esp, 4
; Line 491
	mov	eax, DWORD PTR _buf$7998[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 492
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 493
	xor	eax, eax
	jmp	$LN21@ucbuf_open
$LN7@ucbuf_open:
; Line 496
	mov	eax, DWORD PTR _buf$7998[ebp]
	cmp	DWORD PTR [eax+28], 0
	jne	SHORT $LN6@ucbuf_open
	mov	eax, DWORD PTR _buf$7998[ebp]
	movsx	ecx, BYTE PTR [eax+32]
	cmp	ecx, 1
	jne	SHORT $LN6@ucbuf_open
; Line 497
	mov	esi, esp
	push	OFFSET ??_C@_0DN@PBMNKNBG@?$CD?$CD?$CDWARNING?3?5No?5converter?5defined@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@ucbuf_open:
; Line 499
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR _fileSize$[ebp]
	sub	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 500
	mov	eax, DWORD PTR _buf$7998[ebp]
	movsx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	SHORT $LN5@ucbuf_open
; Line 501
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [eax+12], 1500		; 000005dcH
; Line 502
	jmp	SHORT $LN4@ucbuf_open
$LN5@ucbuf_open:
; Line 503
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _buf$7998[ebp]
	mov	eax, DWORD PTR [edx+20]
	lea	ecx, DWORD PTR [ecx+eax+1]
	mov	edx, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [edx+12], ecx
$LN4@ucbuf_open:
; Line 505
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR [eax+12]
	shl	ecx, 1
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _buf$7998[ebp]
	mov	DWORD PTR [edx], eax
; Line 506
	mov	eax, DWORD PTR _buf$7998[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@ucbuf_open
; Line 507
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 7
; Line 508
	mov	eax, DWORD PTR _buf$7998[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 509
	xor	eax, eax
	jmp	$LN21@ucbuf_open
$LN3@ucbuf_open:
; Line 511
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR _buf$7998[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 512
	mov	eax, DWORD PTR _buf$7998[ebp]
	mov	ecx, DWORD PTR _buf$7998[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
; Line 513
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@ucbuf_open
; Line 514
	mov	eax, DWORD PTR _error$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR _cp$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	OFFSET ??_C@_0CC@JOFLAJED@Could?5not?5open?5codepage?5?$FL?$CFs?$FN?3?5?$CFs@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 515
	mov	eax, DWORD PTR _buf$7998[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 516
	xor	eax, eax
	jmp	SHORT $LN21@ucbuf_open
$LN2@ucbuf_open:
; Line 518
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$7998[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
; Line 519
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN1@ucbuf_open
; Line 520
	mov	eax, DWORD PTR _buf$7998[ebp]
	push	eax
	call	_ucbuf_close
	add	esp, 4
; Line 521
	xor	eax, eax
	jmp	SHORT $LN21@ucbuf_open
$LN1@ucbuf_open:
; Line 523
	mov	eax, DWORD PTR _buf$7998[ebp]
	jmp	SHORT $LN21@ucbuf_open
$LN14@ucbuf_open:
; Line 525
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 4
; Line 526
	xor	eax, eax
$LN21@ucbuf_open:
; Line 527
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@ucbuf_open
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@ucbuf_open:
	DD	1
	DD	$LN24@ucbuf_open
$LN24@ucbuf_open:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN23@ucbuf_open
$LN23@ucbuf_open:
	DB	107					; 0000006bH
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	67					; 00000043H
	DB	112					; 00000070H
	DB	0
_ucbuf_open ENDP
_TEXT	ENDS
PUBLIC	??_C@_05MBAANMHF@UTF?97?$AA@			; `string'
PUBLIC	??_C@_06FKEBPDGA@BOCU?91?$AA@			; `string'
PUBLIC	??_C@_04GGPJHDNC@SCSU?$AA@			; `string'
PUBLIC	??_C@_08CEJLHJGH@UTF?932LE?$AA@			; `string'
PUBLIC	??_C@_08COAFFEGN@UTF?932BE?$AA@			; `string'
PUBLIC	??_C@_06MKNHHJMC@UTF?932?$AA@			; `string'
PUBLIC	??_C@_06KNDPGIKI@UTF?916?$AA@			; `string'
PUBLIC	??_C@_08NBDJLNFA@UTF?916LE?$AA@			; `string'
PUBLIC	??_C@_08NLKHJAFK@UTF?916BE?$AA@			; `string'
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
EXTRN	_ucnv_compareNames_56:PROC
;	COMDAT ??_C@_05MBAANMHF@UTF?97?$AA@
CONST	SEGMENT
??_C@_05MBAANMHF@UTF?97?$AA@ DB 'UTF-7', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FKEBPDGA@BOCU?91?$AA@
CONST	SEGMENT
??_C@_06FKEBPDGA@BOCU?91?$AA@ DB 'BOCU-1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGPJHDNC@SCSU?$AA@
CONST	SEGMENT
??_C@_04GGPJHDNC@SCSU?$AA@ DB 'SCSU', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CEJLHJGH@UTF?932LE?$AA@
CONST	SEGMENT
??_C@_08CEJLHJGH@UTF?932LE?$AA@ DB 'UTF-32LE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08COAFFEGN@UTF?932BE?$AA@
CONST	SEGMENT
??_C@_08COAFFEGN@UTF?932BE?$AA@ DB 'UTF-32BE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MKNHHJMC@UTF?932?$AA@
CONST	SEGMENT
??_C@_06MKNHHJMC@UTF?932?$AA@ DB 'UTF-32', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KNDPGIKI@UTF?916?$AA@
CONST	SEGMENT
??_C@_06KNDPGIKI@UTF?916?$AA@ DB 'UTF-16', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08NBDJLNFA@UTF?916LE?$AA@
CONST	SEGMENT
??_C@_08NBDJLNFA@UTF?916LE?$AA@ DB 'UTF-16LE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NLKHJAFK@UTF?916BE?$AA@
CONST	SEGMENT
??_C@_08NLKHJAFK@UTF?916BE?$AA@ DB 'UTF-16BE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ucbuf_isCPKnown
_TEXT	SEGMENT
_cp$ = 8						; size = 4
_ucbuf_isCPKnown PROC					; COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 98
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN10@ucbuf_isCP
; Line 99
	mov	al, 1
	jmp	$LN11@ucbuf_isCP
$LN10@ucbuf_isCP:
; Line 101
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_08NLKHJAFK@UTF?916BE?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@ucbuf_isCP
; Line 102
	mov	al, 1
	jmp	$LN11@ucbuf_isCP
$LN9@ucbuf_isCP:
; Line 104
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_08NBDJLNFA@UTF?916LE?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN8@ucbuf_isCP
; Line 105
	mov	al, 1
	jmp	$LN11@ucbuf_isCP
$LN8@ucbuf_isCP:
; Line 107
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_06KNDPGIKI@UTF?916?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@ucbuf_isCP
; Line 108
	mov	al, 1
	jmp	$LN11@ucbuf_isCP
$LN7@ucbuf_isCP:
; Line 110
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_06MKNHHJMC@UTF?932?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@ucbuf_isCP
; Line 111
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN6@ucbuf_isCP:
; Line 113
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_08COAFFEGN@UTF?932BE?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@ucbuf_isCP
; Line 114
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN5@ucbuf_isCP:
; Line 116
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_08CEJLHJGH@UTF?932LE?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@ucbuf_isCP
; Line 117
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN4@ucbuf_isCP:
; Line 119
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_04GGPJHDNC@SCSU?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@ucbuf_isCP
; Line 120
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN3@ucbuf_isCP:
; Line 122
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_06FKEBPDGA@BOCU?91?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@ucbuf_isCP
; Line 123
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN2@ucbuf_isCP:
; Line 125
	mov	eax, DWORD PTR _cp$[ebp]
	push	eax
	push	OFFSET ??_C@_05MBAANMHF@UTF?97?$AA@
	call	_ucnv_compareNames_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@ucbuf_isCP
; Line 126
	mov	al, 1
	jmp	SHORT $LN11@ucbuf_isCP
$LN1@ucbuf_isCP:
; Line 128
	xor	al, al
$LN11@ucbuf_isCP:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_isCPKnown ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_ungetc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_ungetc
_TEXT	SEGMENT
_c$ = 8							; size = 4
_buf$ = 12						; size = 4
_ucbuf_ungetc PROC					; COMDAT
; Line 537
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 541
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN5@ucbuf_unge
; Line 542
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx-2]
	cmp	edx, DWORD PTR _c$[ebp]
	jne	SHORT $LN5@ucbuf_unge
; Line 543
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 2
	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx+4], ecx
$LN5@ucbuf_unge:
; Line 550
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_ungetc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucbuf_close
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_ucbuf_close PROC					; COMDAT
; Line 561
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 562
	cmp	DWORD PTR _buf$[ebp], 0
	je	SHORT $LN3@ucbuf_clos
; Line 563
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN1@ucbuf_clos
; Line 564
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_close_56
	add	esp, 4
$LN1@ucbuf_clos:
; Line 566
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_close
	add	esp, 4
; Line 567
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_ucbuf_closebuf
	add	esp, 4
; Line 568
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@ucbuf_clos:
; Line 570
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_close ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucbuf_closebuf
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_ucbuf_closebuf PROC					; COMDAT
; Line 554
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 555
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 556
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [eax], 0
; Line 557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_closebuf ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ucbuf_rewind
EXTRN	_ucnv_resetToUnicode_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_rewind
_TEXT	SEGMENT
_numRead$8063 = -64					; size = 4
_pStart$8062 = -52					; size = 4
_start$8061 = -40					; size = 8
_pTarget$8060 = -24					; size = 4
_target$8059 = -12					; size = 2
__$ArrayPad$ = -4					; size = 4
_buf$ = 8						; size = 4
_error$ = 12						; size = 4
_ucbuf_rewind PROC					; COMDAT
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 575
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN6@ucbuf_rewi
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN7@ucbuf_rewi
$LN6@ucbuf_rewi:
; Line 576
	jmp	$LN8@ucbuf_rewi
$LN7@ucbuf_rewi:
; Line 578
	cmp	DWORD PTR _buf$[ebp], 0
	je	$LN8@ucbuf_rewi
; Line 579
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
; Line 580
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+8], edx
; Line 581
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_rewind
	add	esp, 4
; Line 582
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_size
	add	esp, 4
	mov	edx, DWORD PTR _buf$[ebp]
	sub	eax, DWORD PTR [edx+20]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 584
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_resetToUnicode_56
	add	esp, 4
; Line 585
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jle	$LN8@ucbuf_rewi
; Line 586
	xor	eax, eax
	mov	WORD PTR _target$8059[ebp], ax
; Line 593
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	lea	edx, DWORD PTR _start$8061[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _numRead$8063[ebp], eax
; Line 596
	lea	eax, DWORD PTR _target$8059[ebp]
	mov	DWORD PTR _pTarget$8060[ebp], eax
; Line 597
	lea	eax, DWORD PTR _start$8061[ebp]
	mov	DWORD PTR _pStart$8062[ebp], eax
; Line 598
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _numRead$8063[ebp]
	lea	edx, DWORD PTR _start$8061[ebp+ecx]
	push	edx
	lea	eax, DWORD PTR _pStart$8062[ebp]
	push	eax
	lea	ecx, DWORD PTR _target$8059[ebp+2]
	push	ecx
	lea	edx, DWORD PTR _pTarget$8060[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 599
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN3@ucbuf_rewi
; Line 600
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@ucbuf_rewi:
; Line 604
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN8@ucbuf_rewi
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _numRead$8063[ebp]
	cmp	ecx, DWORD PTR [eax+20]
	jne	SHORT $LN1@ucbuf_rewi
	lea	eax, DWORD PTR _target$8059[ebp+2]
	cmp	DWORD PTR _pTarget$8060[ebp], eax
	jne	SHORT $LN1@ucbuf_rewi
	movzx	eax, WORD PTR _target$8059[ebp]
	cmp	eax, 65279				; 0000feffH
	je	SHORT $LN8@ucbuf_rewi
$LN1@ucbuf_rewi:
; Line 605
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 5
$LN8@ucbuf_rewi:
; Line 609
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@ucbuf_rewi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@ucbuf_rewi:
	DD	4
	DD	$LN14@ucbuf_rewi
$LN14@ucbuf_rewi:
	DD	-12					; fffffff4H
	DD	2
	DD	$LN10@ucbuf_rewi
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN11@ucbuf_rewi
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN12@ucbuf_rewi
	DD	-52					; ffffffccH
	DD	4
	DD	$LN13@ucbuf_rewi
$LN13@ucbuf_rewi:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN12@ucbuf_rewi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN11@ucbuf_rewi:
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN10@ucbuf_rewi:
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_ucbuf_rewind ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_size
EXTRN	_ucnv_getMinCharSize_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_size
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_ucbuf_size PROC					; COMDAT
; Line 613
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 614
	cmp	DWORD PTR _buf$[ebp], 0
	je	SHORT $LN3@ucbuf_size
; Line 615
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	SHORT $LN2@ucbuf_size
; Line 616
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_T_FileStream_size
	add	esp, 4
	mov	esi, eax
	mov	edx, DWORD PTR _buf$[ebp]
	sub	esi, DWORD PTR [edx+20]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_ucnv_getMinCharSize_56
	add	esp, 4
	movsx	ecx, al
	mov	eax, esi
	cdq
	idiv	ecx
	jmp	SHORT $LN4@ucbuf_size
; Line 617
	jmp	SHORT $LN3@ucbuf_size
$LN2@ucbuf_size:
; Line 618
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [eax+8]
	sub	eax, DWORD PTR [ecx]
	sar	eax, 1
	jmp	SHORT $LN4@ucbuf_size
$LN3@ucbuf_size:
; Line 621
	xor	eax, eax
$LN4@ucbuf_size:
; Line 622
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_size ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_getBuffer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_getBuffer
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
_error$ = 16						; size = 4
_ucbuf_getBuffer PROC					; COMDAT
; Line 625
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 626
	cmp	DWORD PTR _error$[ebp], 0
	je	SHORT $LN3@ucbuf_getB
	mov	eax, DWORD PTR _error$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN4@ucbuf_getB
$LN3@ucbuf_getB:
; Line 627
	xor	eax, eax
	jmp	SHORT $LN5@ucbuf_getB
$LN4@ucbuf_getB:
; Line 629
	cmp	DWORD PTR _buf$[ebp], 0
	je	SHORT $LN1@ucbuf_getB
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN2@ucbuf_getB
$LN1@ucbuf_getB:
; Line 630
	mov	eax, DWORD PTR _error$[ebp]
	mov	DWORD PTR [eax], 1
; Line 631
	xor	eax, eax
	jmp	SHORT $LN5@ucbuf_getB
$LN2@ucbuf_getB:
; Line 633
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	sar	edx, 1
	mov	eax, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], edx
; Line 634
	mov	eax, DWORD PTR _buf$[ebp]
	mov	eax, DWORD PTR [eax]
$LN5@ucbuf_getB:
; Line 635
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_getBuffer ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_resolveFileName
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_resolveFileName
_TEXT	SEGMENT
_filelen$ = -32						; size = 4
_dirlen$ = -20						; size = 4
_requiredLen$ = -8					; size = 4
_inputDir$ = 8						; size = 4
_fileName$ = 12						; size = 4
_target$ = 16						; size = 4
_len$ = 20						; size = 4
_status$ = 24						; size = 4
_ucbuf_resolveFileName PROC				; COMDAT
; Line 638
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 639
	mov	DWORD PTR _requiredLen$[ebp], 0
; Line 640
	mov	DWORD PTR _dirlen$[ebp], 0
; Line 641
	mov	DWORD PTR _filelen$[ebp], 0
; Line 642
	cmp	DWORD PTR _status$[ebp], 0
	je	SHORT $LN10@ucbuf_reso
	mov	eax, DWORD PTR _status$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN11@ucbuf_reso
$LN10@ucbuf_reso:
; Line 643
	xor	eax, eax
	jmp	$LN12@ucbuf_reso
$LN11@ucbuf_reso:
; Line 646
	cmp	DWORD PTR _inputDir$[ebp], 0
	je	SHORT $LN8@ucbuf_reso
	cmp	DWORD PTR _fileName$[ebp], 0
	je	SHORT $LN8@ucbuf_reso
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN8@ucbuf_reso
	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN9@ucbuf_reso
	mov	eax, DWORD PTR _len$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN9@ucbuf_reso
$LN8@ucbuf_reso:
; Line 647
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 1
; Line 648
	xor	eax, eax
	jmp	$LN12@ucbuf_reso
$LN9@ucbuf_reso:
; Line 652
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _dirlen$[ebp], eax
; Line 653
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _filelen$[ebp], eax
; Line 654
	mov	eax, DWORD PTR _inputDir$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN7@ucbuf_reso
; Line 655
	mov	eax, DWORD PTR _filelen$[ebp]
	mov	ecx, DWORD PTR _dirlen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _requiredLen$[ebp], edx
; Line 656
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _requiredLen$[ebp]
	jl	SHORT $LN5@ucbuf_reso
	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN6@ucbuf_reso
$LN5@ucbuf_reso:
; Line 657
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _requiredLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 658
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 659
	xor	eax, eax
	jmp	$LN12@ucbuf_reso
$LN6@ucbuf_reso:
; Line 662
	mov	eax, DWORD PTR _target$[ebp]
	mov	BYTE PTR [eax], 0
; Line 674
	mov	eax, DWORD PTR _fileName$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN4@ucbuf_reso
	mov	eax, DWORD PTR _inputDir$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN4@ucbuf_reso
; Line 675
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 676
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
$LN4@ucbuf_reso:
; Line 678
	mov	eax, DWORD PTR _target$[ebp]
	add	eax, DWORD PTR _dirlen$[ebp]
	mov	BYTE PTR [eax+1], 0
; Line 679
	jmp	SHORT $LN3@ucbuf_reso
$LN7@ucbuf_reso:
; Line 680
	mov	eax, DWORD PTR _filelen$[ebp]
	mov	ecx, DWORD PTR _dirlen$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _requiredLen$[ebp], edx
; Line 681
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _requiredLen$[ebp]
	jl	SHORT $LN1@ucbuf_reso
	cmp	DWORD PTR _target$[ebp], 0
	jne	SHORT $LN2@ucbuf_reso
$LN1@ucbuf_reso:
; Line 682
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _requiredLen$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 683
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 684
	xor	eax, eax
	jmp	SHORT $LN12@ucbuf_reso
$LN2@ucbuf_reso:
; Line 687
	mov	eax, DWORD PTR _inputDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN3@ucbuf_reso:
; Line 690
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 691
	mov	eax, DWORD PTR _target$[ebp]
$LN12@ucbuf_reso:
; Line 692
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_resolveFileName ENDP
_TEXT	ENDS
PUBLIC	_ucbuf_readline
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ucbuf_readline
_TEXT	SEGMENT
_c$ = -32						; size = 2
_savePos$ = -20						; size = 4
_temp$ = -8						; size = 4
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
_err$ = 16						; size = 4
_ucbuf_readline PROC					; COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 715
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 716
	mov	DWORD PTR _savePos$[ebp], 0
; Line 717
	xor	eax, eax
	mov	WORD PTR _c$[ebp], ax
; Line 718
	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax+33]
	test	ecx, ecx
	je	$LN6@ucbuf_read
$LN16@ucbuf_read:
; Line 723
	mov	eax, DWORD PTR _temp$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$[ebp], cx
	mov	edx, DWORD PTR _temp$[ebp]
	add	edx, 2
	mov	DWORD PTR _temp$[ebp], edx
; Line 724
	mov	eax, DWORD PTR _buf$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN14@ucbuf_read
; Line 725
	xor	eax, eax
	jmp	$LN18@ucbuf_read
$LN14@ucbuf_read:
; Line 727
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jb	SHORT $LN13@ucbuf_read
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN13@ucbuf_read
; Line 728
	mov	eax, DWORD PTR _err$[ebp]
	mov	DWORD PTR [eax], 11			; 0000000bH
; Line 729
	xor	eax, eax
	jmp	$LN18@ucbuf_read
; Line 730
	jmp	SHORT $LN12@ucbuf_read
$LN13@ucbuf_read:
; Line 731
	mov	eax, DWORD PTR _err$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_ucbuf_fillucbuf
	add	esp, 8
; Line 732
	mov	eax, DWORD PTR _err$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN12@ucbuf_read
; Line 733
	xor	eax, eax
	jmp	$LN18@ucbuf_read
$LN12@ucbuf_read:
; Line 741
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN10@ucbuf_read
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	ja	SHORT $LN10@ucbuf_read
	mov	eax, DWORD PTR _temp$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN10@ucbuf_read
; Line 742
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 1
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _temp$[ebp]
	add	eax, 2
	mov	DWORD PTR _temp$[ebp], eax
; Line 743
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _savePos$[ebp], ecx
; Line 744
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 745
	mov	eax, DWORD PTR _savePos$[ebp]
	jmp	$LN18@ucbuf_read
$LN10@ucbuf_read:
; Line 749
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN8@ucbuf_read
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_ucbuf_isCharNewLine
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN9@ucbuf_read
$LN8@ucbuf_read:
; Line 750
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 1
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 751
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _savePos$[ebp], ecx
; Line 752
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 753
	mov	eax, DWORD PTR _savePos$[ebp]
	jmp	$LN18@ucbuf_read
$LN9@ucbuf_read:
; Line 755
	jmp	$LN16@ucbuf_read
; Line 756
	jmp	$LN18@ucbuf_read
$LN6@ucbuf_read:
; Line 761
	mov	eax, DWORD PTR _temp$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _c$[ebp], cx
	mov	edx, DWORD PTR _temp$[ebp]
	add	edx, 2
	mov	DWORD PTR _temp$[ebp], edx
; Line 763
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _buf$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN4@ucbuf_read
; Line 764
	xor	eax, eax
	jmp	$LN18@ucbuf_read
$LN4@ucbuf_read:
; Line 767
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN3@ucbuf_read
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	ja	SHORT $LN3@ucbuf_read
	mov	eax, DWORD PTR _temp$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN3@ucbuf_read
; Line 768
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 1
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _temp$[ebp]
	add	eax, 2
	mov	DWORD PTR _temp$[ebp], eax
; Line 769
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _savePos$[ebp], ecx
; Line 770
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 771
	mov	eax, DWORD PTR _savePos$[ebp]
	jmp	SHORT $LN18@ucbuf_read
$LN3@ucbuf_read:
; Line 774
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jae	SHORT $LN1@ucbuf_read
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_ucbuf_isCharNewLine
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@ucbuf_read
$LN1@ucbuf_read:
; Line 775
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	sub	ecx, DWORD PTR [eax+4]
	sar	ecx, 1
	mov	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 776
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _savePos$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _buf$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 778
	mov	eax, DWORD PTR _savePos$[ebp]
	jmp	SHORT $LN18@ucbuf_read
$LN2@ucbuf_read:
; Line 780
	jmp	$LN6@ucbuf_read
$LN18@ucbuf_read:
; Line 785
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_readline ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ucbuf_isCharNewLine
_TEXT	SEGMENT
tv65 = -196						; size = 4
_c$ = 8							; size = 2
_ucbuf_isCharNewLine PROC				; COMDAT
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 700
	movzx	eax, WORD PTR _c$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	cmp	DWORD PTR tv65[ebp], 133		; 00000085H
	jg	SHORT $LN7@ucbuf_isCh
	cmp	DWORD PTR tv65[ebp], 133		; 00000085H
	je	SHORT $LN2@ucbuf_isCh
	cmp	DWORD PTR tv65[ebp], 10			; 0000000aH
	je	SHORT $LN2@ucbuf_isCh
	cmp	DWORD PTR tv65[ebp], 11			; 0000000bH
	jle	SHORT $LN1@ucbuf_isCh
	cmp	DWORD PTR tv65[ebp], 13			; 0000000dH
	jle	SHORT $LN2@ucbuf_isCh
	jmp	SHORT $LN1@ucbuf_isCh
$LN7@ucbuf_isCh:
	cmp	DWORD PTR tv65[ebp], 8232		; 00002028H
	jl	SHORT $LN1@ucbuf_isCh
	cmp	DWORD PTR tv65[ebp], 8233		; 00002029H
	jle	SHORT $LN2@ucbuf_isCh
	jmp	SHORT $LN1@ucbuf_isCh
$LN2@ucbuf_isCh:
; Line 707
	mov	al, 1
	jmp	SHORT $LN5@ucbuf_isCh
$LN1@ucbuf_isCh:
; Line 709
	xor	al, al
$LN5@ucbuf_isCh:
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ucbuf_isCharNewLine ENDP
_TEXT	ENDS
END

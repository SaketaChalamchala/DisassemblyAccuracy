; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\ppucd.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_0BE@IOCFIJ@Turkic_Case_Folding?$AA@	; `string'
PUBLIC	??_C@_0BK@FDAPJCKK@Conditional_Case_Mappings?$AA@ ; `string'
PUBLIC	??_C@_0L@FNDGDCOI@Name_Alias?$AA@		; `string'
PUBLIC	??_C@_0O@EPGGOOOP@algnamesrange?$AA@		; `string'
PUBLIC	??_C@_02GFBACKGC@cp?$AA@			; `string'
PUBLIC	??_C@_05PIBOEKAB@block?$AA@			; `string'
PUBLIC	??_C@_08LMJEPNLL@defaults?$AA@			; `string'
PUBLIC	??_C@_05MFEJDJP@value?$AA@			; `string'
PUBLIC	??_C@_06FNFBAEBE@binary?$AA@			; `string'
PUBLIC	??_C@_08EMBNBNLN@property?$AA@			; `string'
PUBLIC	??_C@_03MJFKKLJH@ucd?$AA@			; `string'
PUBLIC	?kNumLineBuffers@PreparsedUCD@icu_56@@0HB	; icu_56::PreparsedUCD::kNumLineBuffers
;	COMDAT ??_C@_0BE@IOCFIJ@Turkic_Case_Folding?$AA@
CONST	SEGMENT
??_C@_0BE@IOCFIJ@Turkic_Case_Folding?$AA@ DB 'Turkic_Case_Folding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FDAPJCKK@Conditional_Case_Mappings?$AA@
CONST	SEGMENT
??_C@_0BK@FDAPJCKK@Conditional_Case_Mappings?$AA@ DB 'Conditional_Case_Ma'
	DB	'ppings', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNDGDCOI@Name_Alias?$AA@
CONST	SEGMENT
??_C@_0L@FNDGDCOI@Name_Alias?$AA@ DB 'Name_Alias', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
_lineTypeStrings DD 00H
	DD	00H
	DD	FLAT:??_C@_03MJFKKLJH@ucd?$AA@
	DD	FLAT:??_C@_08EMBNBNLN@property?$AA@
	DD	FLAT:??_C@_06FNFBAEBE@binary?$AA@
	DD	FLAT:??_C@_05MFEJDJP@value?$AA@
	DD	FLAT:??_C@_08LMJEPNLL@defaults?$AA@
	DD	FLAT:??_C@_05PIBOEKAB@block?$AA@
	DD	FLAT:??_C@_02GFBACKGC@cp?$AA@
	DD	FLAT:??_C@_0O@EPGGOOOP@algnamesrange?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0O@EPGGOOOP@algnamesrange?$AA@
CONST	SEGMENT
??_C@_0O@EPGGOOOP@algnamesrange?$AA@ DB 'algnamesrange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GFBACKGC@cp?$AA@
CONST	SEGMENT
??_C@_02GFBACKGC@cp?$AA@ DB 'cp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PIBOEKAB@block?$AA@
CONST	SEGMENT
??_C@_05PIBOEKAB@block?$AA@ DB 'block', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LMJEPNLL@defaults?$AA@
CONST	SEGMENT
??_C@_08LMJEPNLL@defaults?$AA@ DB 'defaults', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value?$AA@
CONST	SEGMENT
??_C@_05MFEJDJP@value?$AA@ DB 'value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNFBAEBE@binary?$AA@
CONST	SEGMENT
??_C@_06FNFBAEBE@binary?$AA@ DB 'binary', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EMBNBNLN@property?$AA@
CONST	SEGMENT
??_C@_08EMBNBNLN@property?$AA@ DB 'property', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MJFKKLJH@ucd?$AA@
CONST	SEGMENT
??_C@_03MJFKKLJH@ucd?$AA@ DB 'ucd', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?kNumLineBuffers@PreparsedUCD@icu_56@@0HB DD 03H	; icu_56::PreparsedUCD::kNumLineBuffers
_ppucdProperties DD FLAT:??_C@_0L@FNDGDCOI@Name_Alias?$AA@
	DD	0400eH
	DD	FLAT:??_C@_0BK@FDAPJCKK@Conditional_Case_Mappings?$AA@
	DD	0400fH
	DD	FLAT:??_C@_0BE@IOCFIJ@Turkic_Case_Folding?$AA@
	DD	04010H
CONST	ENDS
PUBLIC	??_7PropertyNames@icu_56@@6B@			; icu_56::PropertyNames::`vftable'
PUBLIC	??0PropertyNames@icu_56@@QAE@XZ			; icu_56::PropertyNames::PropertyNames
PUBLIC	??_R4PropertyNames@icu_56@@6B@			; icu_56::PropertyNames::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVPropertyNames@icu_56@@@8		; icu_56::PropertyNames `RTTI Type Descriptor'
PUBLIC	??_R3PropertyNames@icu_56@@8			; icu_56::PropertyNames::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2PropertyNames@icu_56@@8			; icu_56::PropertyNames::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@PropertyNames@icu_56@@8		; icu_56::PropertyNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EPropertyNames@icu_56@@UAEPAXI@Z		; icu_56::PropertyNames::`vector deleting destructor'
PUBLIC	?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z ; icu_56::PropertyNames::getPropertyEnum
PUBLIC	?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z ; icu_56::PropertyNames::getPropertyValueEnum
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@PropertyNames@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@PropertyNames@icu_56@@8 DD FLAT:??_R0?AVPropertyNames@icu_56@@@8 ; icu_56::PropertyNames::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3PropertyNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2PropertyNames@icu_56@@8
rdata$r	SEGMENT
??_R2PropertyNames@icu_56@@8 DD FLAT:??_R1A@?0A@EA@PropertyNames@icu_56@@8 ; icu_56::PropertyNames::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3PropertyNames@icu_56@@8
rdata$r	SEGMENT
??_R3PropertyNames@icu_56@@8 DD 00H			; icu_56::PropertyNames::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2PropertyNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVPropertyNames@icu_56@@@8
_DATA	SEGMENT
??_R0?AVPropertyNames@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::PropertyNames `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVPropertyNames@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4PropertyNames@icu_56@@6B@
rdata$r	SEGMENT
??_R4PropertyNames@icu_56@@6B@ DD 00H			; icu_56::PropertyNames::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVPropertyNames@icu_56@@@8
	DD	FLAT:??_R3PropertyNames@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7PropertyNames@icu_56@@6B@
CONST	SEGMENT
??_7PropertyNames@icu_56@@6B@ DD FLAT:??_R4PropertyNames@icu_56@@6B@ ; icu_56::PropertyNames::`vftable'
	DD	FLAT:??_EPropertyNames@icu_56@@UAEPAXI@Z
	DD	FLAT:?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z
	DD	FLAT:?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0PropertyNames@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0PropertyNames@icu_56@@QAE@XZ PROC			; icu_56::PropertyNames::PropertyNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PropertyNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0PropertyNames@icu_56@@QAE@XZ ENDP			; icu_56::PropertyNames::PropertyNames
_TEXT	ENDS
PUBLIC	??0PropertyNames@icu_56@@QAE@ABV01@@Z		; icu_56::PropertyNames::PropertyNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0PropertyNames@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0PropertyNames@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PropertyNames::PropertyNames, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PropertyNames@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0PropertyNames@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PropertyNames::PropertyNames
_TEXT	ENDS
PUBLIC	??4PropertyNames@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PropertyNames::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PropertyNames@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PropertyNames@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PropertyNames::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4PropertyNames@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PropertyNames::operator=
_TEXT	ENDS
PUBLIC	??1PropertyNames@icu_56@@UAE@XZ			; icu_56::PropertyNames::~PropertyNames
PUBLIC	??_GPropertyNames@icu_56@@UAEPAXI@Z		; icu_56::PropertyNames::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GPropertyNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GPropertyNames@icu_56@@UAEPAXI@Z PROC		; icu_56::PropertyNames::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PropertyNames@icu_56@@UAE@XZ		; icu_56::PropertyNames::~PropertyNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GPropertyNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::PropertyNames::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EPropertyNames@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EPropertyNames@icu_56@@UAEPAXI@Z PROC		; icu_56::PropertyNames::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1PropertyNames@icu_56@@UAE@XZ	; icu_56::PropertyNames::~PropertyNames
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1PropertyNames@icu_56@@UAE@XZ		; icu_56::PropertyNames::~PropertyNames
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EPropertyNames@icu_56@@UAEPAXI@Z ENDP		; icu_56::PropertyNames::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getIntProp@UniProps@icu_56@@QBEHH@Z		; icu_56::UniProps::getIntProp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getIntProp@UniProps@icu_56@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prop$ = 8						; size = 4
?getIntProp@UniProps@icu_56@@QBEHH@Z PROC		; icu_56::UniProps::getIntProp, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\toolutil\ppucd.h
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4-16316]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getIntProp@UniProps@icu_56@@QBEHH@Z ENDP		; icu_56::UniProps::getIntProp
_TEXT	ENDS
PUBLIC	??0UniProps@icu_56@@QAE@ABU01@@Z		; icu_56::UniProps::UniProps
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UniProps@icu_56@@QAE@ABU01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$3
__ehfuncinfo$??0UniProps@icu_56@@QAE@ABU01@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0UniProps@icu_56@@QAE@ABU01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UniProps@icu_56@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0UniProps@icu_56@@QAE@ABU01@@Z PROC			; icu_56::UniProps::UniProps, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UniProps@icu_56@@QAE@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 8
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 8
	mov	ecx, 14					; 0000000eH
	rep movsd
	movsb
	mov	esi, DWORD PTR ___that$[ebp]
	add	esi, 68					; 00000044H
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 22					; 00000016H
	rep movsd
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+156]
	mov	DWORD PTR [eax+156], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	mov	DWORD PTR [eax+160], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR [eax+164], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	DWORD PTR [eax+168], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	DWORD PTR [eax+172], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	mov	DWORD PTR [eax+176], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	mov	DWORD PTR [eax+180], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	DWORD PTR [eax+184], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR [eax+188], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR [eax+192], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	DWORD PTR [eax+196], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 200				; 000000c8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 264				; 00000108H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 328				; 00000148H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 392				; 00000188H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@ABU01@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0UniProps@icu_56@@QAE@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UniProps@icu_56@@QAE@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UniProps@icu_56@@QAE@ABU01@@Z ENDP			; icu_56::UniProps::UniProps
PUBLIC	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z		; icu_56::UniProps::operator=
EXTRN	__imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_$S3$26704 = -44					; size = 4
_$S2$26700 = -32					; size = 4
_$S1$26696 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4UniProps@icu_56@@QAEAAU01@ABU01@@Z PROC		; icu_56::UniProps::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR _$S1$26696[ebp], 0
	jmp	SHORT $LN9@operator
$LN8@operator:
	mov	eax, DWORD PTR _$S1$26696[ebp]
	add	eax, 1
	mov	DWORD PTR _$S1$26696[ebp], eax
$LN9@operator:
	cmp	DWORD PTR _$S1$26696[ebp], 57		; 00000039H
	jae	SHORT $LN7@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S1$26696[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S1$26696[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+8], dl
	jmp	SHORT $LN8@operator
$LN7@operator:
	mov	DWORD PTR _$S2$26700[ebp], 0
	jmp	SHORT $LN6@operator
$LN5@operator:
	mov	eax, DWORD PTR _$S2$26700[ebp]
	add	eax, 1
	mov	DWORD PTR _$S2$26700[ebp], eax
$LN6@operator:
	cmp	DWORD PTR _$S2$26700[ebp], 22		; 00000016H
	jae	SHORT $LN4@operator
	mov	eax, DWORD PTR _$S2$26700[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _$S2$26700[ebp]
	mov	esi, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+68]
	mov	DWORD PTR [ecx+eax*4+68], edx
	jmp	SHORT $LN5@operator
$LN4@operator:
	mov	DWORD PTR _$S3$26704[ebp], 0
	jmp	SHORT $LN3@operator
$LN2@operator:
	mov	eax, DWORD PTR _$S3$26704[ebp]
	add	eax, 1
	mov	DWORD PTR _$S3$26704[ebp], eax
$LN3@operator:
	cmp	DWORD PTR _$S3$26704[ebp], 4
	jae	SHORT $LN1@operator
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S3$26704[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S3$26704[ebp]
	mov	dl, BYTE PTR [ecx+156]
	mov	BYTE PTR [eax+156], dl
	jmp	SHORT $LN2@operator
$LN1@operator:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+160]
	mov	DWORD PTR [eax+160], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+164]
	mov	DWORD PTR [eax+164], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+168]
	mov	DWORD PTR [eax+168], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+172]
	mov	DWORD PTR [eax+172], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	mov	DWORD PTR [eax+176], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+180]
	mov	DWORD PTR [eax+180], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+184]
	mov	DWORD PTR [eax+184], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR [eax+188], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+192]
	mov	DWORD PTR [eax+192], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+196]
	mov	DWORD PTR [eax+196], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 200				; 000000c8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 264				; 00000108H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 328				; 00000148H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 392				; 00000188H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 456				; 000001c8H
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	call	DWORD PTR __imp_??4UnicodeSet@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4UniProps@icu_56@@QAEAAU01@ABU01@@Z ENDP		; icu_56::UniProps::operator=
_TEXT	ENDS
PUBLIC	?setPropertyNames@PreparsedUCD@icu_56@@QAEXPBVPropertyNames@2@@Z ; icu_56::PreparsedUCD::setPropertyNames
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPropertyNames@PreparsedUCD@icu_56@@QAEXPBVPropertyNames@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pn$ = 8						; size = 4
?setPropertyNames@PreparsedUCD@icu_56@@QAEXPBVPropertyNames@2@@Z PROC ; icu_56::PreparsedUCD::setPropertyNames, COMDAT
; _this$ = ecx
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pn$[ebp]
	mov	DWORD PTR [eax+4], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setPropertyNames@PreparsedUCD@icu_56@@QAEXPBVPropertyNames@2@@Z ENDP ; icu_56::PreparsedUCD::setPropertyNames
_TEXT	ENDS
PUBLIC	?getLineNumber@PreparsedUCD@icu_56@@QBEHXZ	; icu_56::PreparsedUCD::getLineNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLineNumber@PreparsedUCD@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getLineNumber@PreparsedUCD@icu_56@@QBEHXZ PROC		; icu_56::PreparsedUCD::getLineNumber, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getLineNumber@PreparsedUCD@icu_56@@QBEHXZ ENDP		; icu_56::PreparsedUCD::getLineNumber
_TEXT	ENDS
PUBLIC	?getUnicodeVersion@PreparsedUCD@icu_56@@QBEAAY03$$CBEXZ ; icu_56::PreparsedUCD::getUnicodeVersion
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getUnicodeVersion@PreparsedUCD@icu_56@@QBEAAY03$$CBEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getUnicodeVersion@PreparsedUCD@icu_56@@QBEAAY03$$CBEXZ PROC ; icu_56::PreparsedUCD::getUnicodeVersion, COMDAT
; _this$ = ecx
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getUnicodeVersion@PreparsedUCD@icu_56@@QBEAAY03$$CBEXZ ENDP ; icu_56::PreparsedUCD::getUnicodeVersion
_TEXT	ENDS
PUBLIC	?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ ; icu_56::PreparsedUCD::lineHasPropertyValues
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ PROC	; icu_56::PreparsedUCD::lineHasPropertyValues, COMDAT
; _this$ = ecx
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 6
	jl	SHORT $LN3@lineHasPro
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], 8
	jg	SHORT $LN3@lineHasPro
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@lineHasPro
$LN3@lineHasPro:
	mov	BYTE PTR tv68[ebp], 0
$LN4@lineHasPro:
	mov	al, BYTE PTR tv68[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ ENDP	; icu_56::PreparsedUCD::lineHasPropertyValues
_TEXT	ENDS
PUBLIC	?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z ; icu_56::PreparsedUCD::isLineBufferAvailable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z
_TEXT	SEGMENT
tv68 = -205						; size = 1
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z PROC ; icu_56::PreparsedUCD::isLineBufferAvailable, COMDAT
; _this$ = ecx
; Line 140
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _i$[ebp]
	je	SHORT $LN3@isLineBuff
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	cmp	eax, DWORD PTR _i$[ebp]
	je	SHORT $LN3@isLineBuff
	mov	BYTE PTR tv68[ebp], 1
	jmp	SHORT $LN4@isLineBuff
$LN3@isLineBuff:
	mov	BYTE PTR tv68[ebp], 0
$LN4@isLineBuff:
	mov	al, BYTE PTR tv68[ebp]
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z ENDP ; icu_56::PreparsedUCD::isLineBufferAvailable
_TEXT	ENDS
PUBLIC	??1UniProps@icu_56@@QAE@XZ			; icu_56::UniProps::~UniProps
PUBLIC	??0PreparsedUCD@icu_56@@QAE@ABV01@@Z		; icu_56::PreparsedUCD::PreparsedUCD
EXTRN	_memcpy:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$1
__ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PreparsedUCD@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0PreparsedUCD@icu_56@@QAE@ABV01@@Z PROC		; icu_56::PreparsedUCD::PreparsedUCD, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0UniProps@icu_56@@QAE@ABU01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 552				; 00000228H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??0UniProps@icu_56@@QAE@ABU01@@Z
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 1060				; 00000424H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??0UniProps@icu_56@@QAE@ABU01@@Z
	push	12288					; 00003000H
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 1568				; 00000620H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1568				; 00000620H
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__ehhandler$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PreparsedUCD@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::PreparsedUCD::PreparsedUCD
PUBLIC	??4PreparsedUCD@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::PreparsedUCD::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4PreparsedUCD@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_$S5$26809 = -32					; size = 4
_$S4$26805 = -20					; size = 4
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4PreparsedUCD@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::PreparsedUCD::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	DWORD PTR _$S4$26805[ebp], 0
	jmp	SHORT $LN6@operator@2
$LN5@operator@2:
	mov	eax, DWORD PTR _$S4$26805[ebp]
	add	eax, 1
	mov	DWORD PTR _$S4$26805[ebp], eax
$LN6@operator@2:
	cmp	DWORD PTR _$S4$26805[ebp], 4
	jae	SHORT $LN4@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S4$26805[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S4$26805[ebp]
	mov	dl, BYTE PTR [ecx+40]
	mov	BYTE PTR [eax+40], dl
	jmp	SHORT $LN5@operator@2
$LN4@operator@2:
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 552				; 00000228H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR ___that$[ebp]
	add	eax, 1060				; 00000424H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
	mov	DWORD PTR _$S5$26809[ebp], 0
	jmp	SHORT $LN3@operator@2
$LN2@operator@2:
	mov	eax, DWORD PTR _$S5$26809[ebp]
	add	eax, 1
	mov	DWORD PTR _$S5$26809[ebp], eax
$LN3@operator@2:
	cmp	DWORD PTR _$S5$26809[ebp], 12288	; 00003000H
	jae	SHORT $LN1@operator@2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _$S5$26809[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, DWORD PTR _$S5$26809[ebp]
	mov	dl, BYTE PTR [ecx+1568]
	mov	BYTE PTR [eax+1568], dl
	jmp	SHORT $LN2@operator@2
$LN1@operator@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4PreparsedUCD@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::PreparsedUCD::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1PropertyNames@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1PropertyNames@icu_56@@UAE@XZ PROC			; icu_56::PropertyNames::~PropertyNames, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\toolutil\ppucd.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7PropertyNames@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1PropertyNames@icu_56@@UAE@XZ ENDP			; icu_56::PropertyNames::~PropertyNames
_TEXT	ENDS
EXTRN	_u_getPropertyEnum_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z PROC	; icu_56::PropertyNames::getPropertyEnum, COMDAT
; _this$ = ecx
; Line 31
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 32
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_u_getPropertyEnum_56
	add	esp, 4
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getPropertyEnum@PropertyNames@icu_56@@UBEHPBD@Z ENDP	; icu_56::PropertyNames::getPropertyEnum
_TEXT	ENDS
EXTRN	_u_getPropertyValueEnum_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_property$ = 8						; size = 4
_name$ = 12						; size = 4
?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z PROC ; icu_56::PropertyNames::getPropertyValueEnum, COMDAT
; _this$ = ecx
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 37
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _property$[ebp]
	push	ecx
	call	_u_getPropertyValueEnum_56
	add	esp, 8
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getPropertyValueEnum@PropertyNames@icu_56@@UBEHHPBD@Z ENDP ; icu_56::PropertyNames::getPropertyValueEnum
_TEXT	ENDS
PUBLIC	??0UniProps@icu_56@@QAE@XZ			; icu_56::UniProps::UniProps
EXTRN	_memset:PROC
EXTRN	__imp_??0UnicodeSet@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UniProps@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$3
__ehfuncinfo$??0UniProps@icu_56@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0UniProps@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UniProps@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0UniProps@icu_56@@QAE@XZ PROC				; icu_56::UniProps::UniProps, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UniProps@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+160], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+164], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+168], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+172], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+176], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+180], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+184], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+188], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+192], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeSet@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	push	57					; 00000039H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 47
	push	88					; 00000058H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 48
	push	4
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 49
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UniProps@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0UniProps@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UniProps@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UniProps@icu_56@@QAE@XZ ENDP				; icu_56::UniProps::UniProps
EXTRN	__imp_??1UnicodeSet@icu_56@@UAE@XZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1UniProps@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$3
__ehfuncinfo$??1UniProps@icu_56@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1UniProps@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UniProps@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UniProps@icu_56@@QAE@XZ PROC				; icu_56::UniProps::~UniProps, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UniProps@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 456				; 000001c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeSet@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UniProps@icu_56@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1UniProps@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UniProps@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UniProps@icu_56@@QAE@XZ ENDP				; icu_56::UniProps::~UniProps
PUBLIC	??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@ ; `string'
PUBLIC	??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@ ; `string'
PUBLIC	??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::PreparsedUCD
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT ??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@
CONST	SEGMENT
??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@ DB 'error openin'
	DB	'g preparsed UCD file %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@
CONST	SEGMENT
??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@ DB '"no file name g'
	DB	'iven"', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@
CONST	SEGMENT
??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@ DB 'error opening '
	DB	'preparsed UCD', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$2
__ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv149 = -232						; size = 4
tv69 = -232						; size = 4
$T33939 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_filename$ = 8						; size = 4
_errorCode$ = 12					; size = 4
??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z PROC	; icu_56::PreparsedUCD::PreparsedUCD, COMDAT
; _this$ = ecx
; Line 61
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T33939[ebp], eax
	cmp	DWORD PTR $T33939[ebp], 0
	je	SHORT $LN8@PreparsedU
	mov	ecx, DWORD PTR $T33939[ebp]
	call	??0PropertyNames@icu_56@@QAE@XZ
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN9@PreparsedU
$LN8@PreparsedU:
	mov	DWORD PTR tv69[ebp], 0
$LN9@PreparsedU:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR tv69[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::UniProps
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??0UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::UniProps
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??0UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::UniProps
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 62
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@PreparsedU
	jmp	$LN6@PreparsedU
$LN5@PreparsedU:
; Line 64
	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN3@PreparsedU
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@PreparsedU
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN4@PreparsedU
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	test	ecx, ecx
	jne	SHORT $LN4@PreparsedU
$LN3@PreparsedU:
; Line 65
	mov	DWORD PTR _filename$[ebp], 0
; Line 66
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 67
	jmp	SHORT $LN2@PreparsedU
$LN4@PreparsedU:
; Line 68
	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN2@PreparsedU:
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN1@PreparsedU
; Line 71
	mov	esi, esp
	push	OFFSET ??_C@_0BM@NOPNOOEA@error?5opening?5preparsed?5UCD?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 72
	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN10@PreparsedU
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR tv149[ebp], eax
	jmp	SHORT $LN11@PreparsedU
$LN10@PreparsedU:
	mov	DWORD PTR tv149[ebp], OFFSET ??_C@_0BF@GHKHHFLO@?$CCno?5file?5name?5given?$CC?$AA@
$LN11@PreparsedU:
	mov	esi, esp
	mov	ecx, DWORD PTR tv149[ebp]
	push	ecx
	push	OFFSET ??_C@_0CF@CEIPKEIP@error?5opening?5preparsed?5UCD?5file@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 4
; Line 74
	jmp	SHORT $LN6@PreparsedU
$LN1@PreparsedU:
; Line 77
	push	4
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 78
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1568], 0
$LN6@PreparsedU:
; Line 79
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__unwindfunclet$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__ehhandler$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0PreparsedUCD@icu_56@@QAE@PBDAAW4UErrorCode@@@Z ENDP	; icu_56::PreparsedUCD::PreparsedUCD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
PUBLIC	??1PreparsedUCD@icu_56@@QAE@XZ			; icu_56::PreparsedUCD::~PreparsedUCD
EXTRN	__imp__fclose:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\tools\toolutil\ppucd.cpp
xdata$x	SEGMENT
__unwindtable$??1PreparsedUCD@icu_56@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$2
__ehfuncinfo$??1PreparsedUCD@icu_56@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1PreparsedUCD@icu_56@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1PreparsedUCD@icu_56@@QAE@XZ
_TEXT	SEGMENT
tv81 = -244						; size = 4
$T33957 = -236						; size = 4
$T33958 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1PreparsedUCD@icu_56@@QAE@XZ PROC			; icu_56::PreparsedUCD::~PreparsedUCD, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1PreparsedUCD@icu_56@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
; Line 82
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	je	SHORT $LN1@PreparsedU@2
; Line 83
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@PreparsedU@2:
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T33958[ebp], ecx
	mov	edx, DWORD PTR $T33958[ebp]
	mov	DWORD PTR $T33957[ebp], edx
	cmp	DWORD PTR $T33957[ebp], 0
	je	SHORT $LN4@PreparsedU@2
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR $T33957[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T33957[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN2@PreparsedU@2
$LN4@PreparsedU@2:
	mov	DWORD PTR tv81[ebp], 0
$LN2@PreparsedU@2:
; Line 86
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__unwindfunclet$??1PreparsedUCD@icu_56@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	jmp	??1UniProps@icu_56@@QAE@XZ		; icu_56::UniProps::~UniProps
__ehhandler$??1PreparsedUCD@icu_56@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1PreparsedUCD@icu_56@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1PreparsedUCD@icu_56@@QAE@XZ ENDP			; icu_56::PreparsedUCD::~PreparsedUCD
PUBLIC	??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@ ; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@ ; `string'
PUBLIC	??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@ ; `string'
PUBLIC	?readLine@PreparsedUCD@icu_56@@QAE?AW4LineType@12@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::readLine
EXTRN	_u_versionFromString_56:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fgets:PROC
;	COMDAT ??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@
CONST	SEGMENT
??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@ DB 'error in pr'
	DB	'eparsed UCD: unknown line type (first field) ''%s'' on line %'
	DB	'ld', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@
CONST	SEGMENT
??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@ DB 'error readin'
	DB	'g preparsed UCD before line %ld', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@
CONST	SEGMENT
??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@ DB 'error reading '
	DB	'preparsed UCD', 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?readLine@PreparsedUCD@icu_56@@QAE?AW4LineType@12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_type$ = -80						; size = 4
_semi$ = -68						; size = 4
_limit$ = -56						; size = 4
_c$ = -41						; size = 1
_result$ = -32						; size = 4
_line$ = -20						; size = 4
_this$ = -8						; size = 4
_errorCode$ = 8						; size = 4
?readLine@PreparsedUCD@icu_56@@QAE?AW4LineType@12@AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::readLine, COMDAT
; _this$ = ecx
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@readLine
	xor	eax, eax
	jmp	$LN23@readLine
$LN21@readLine:
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?isLineBufferAvailable@PreparsedUCD@icu_56@@AAECH@Z ; icu_56::PreparsedUCD::isLineBufferAvailable
	movsx	edx, al
	test	edx, edx
	jne	SHORT $LN20@readLine
; Line 107
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], ecx
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 3
	jne	SHORT $LN19@readLine
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN19@readLine:
; Line 111
	jmp	SHORT $LN21@readLine
$LN20@readLine:
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shl	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1568]
	mov	DWORD PTR _line$[ebp], eax
; Line 113
	mov	eax, DWORD PTR _line$[ebp]
	mov	BYTE PTR [eax], 0
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _line$[ebp]
	mov	DWORD PTR [eax+32], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR [edx+36], eax
; Line 115
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
; Line 116
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	4096					; 00001000H
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	DWORD PTR __imp__fgets
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 117
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN18@readLine
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	DWORD PTR __imp__ferror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN17@readLine
; Line 119
	mov	esi, esp
	push	OFFSET ??_C@_0BM@HAPPBACF@error?5reading?5preparsed?5UCD?$AA@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0CN@MIGBAGME@error?5reading?5preparsed?5UCD?5befo@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 4
$LN17@readLine:
; Line 123
	xor	eax, eax
	jmp	$LN23@readLine
$LN18@readLine:
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], ecx
; Line 126
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN16@readLine
; Line 127
	push	0
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1
	mov	eax, 1
	jmp	$LN23@readLine
$LN16@readLine:
; Line 132
	push	0
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _limit$[ebp], eax
$LN15@readLine:
; Line 133
	mov	eax, DWORD PTR _line$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN12@readLine
	mov	eax, DWORD PTR _limit$[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN13@readLine
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN12@readLine
$LN13@readLine:
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
	jmp	SHORT $LN15@readLine
$LN12@readLine:
; Line 135
	mov	eax, DWORD PTR _line$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jae	SHORT $LN11@readLine
	mov	eax, DWORD PTR _limit$[ebp]
	mov	cl, BYTE PTR [eax-1]
	mov	BYTE PTR _c$[ebp], cl
	movsx	edx, BYTE PTR _c$[ebp]
	cmp	edx, 32					; 00000020H
	je	SHORT $LN10@readLine
	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 9
	jne	SHORT $LN11@readLine
$LN10@readLine:
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
	jmp	SHORT $LN12@readLine
$LN11@readLine:
; Line 136
	mov	eax, DWORD PTR _limit$[ebp]
	mov	BYTE PTR [eax], 0
; Line 137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 138
	mov	eax, DWORD PTR _line$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jne	SHORT $LN9@readLine
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 140
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 1
	mov	eax, 1
	jmp	$LN23@readLine
$LN9@readLine:
; Line 143
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _semi$[ebp], eax
$LN8@readLine:
; Line 144
	push	59					; 0000003bH
	mov	eax, DWORD PTR _semi$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _semi$[ebp], eax
	cmp	DWORD PTR _semi$[ebp], 0
	je	SHORT $LN7@readLine
	mov	eax, DWORD PTR _semi$[ebp]
	mov	BYTE PTR [eax], 0
	mov	ecx, DWORD PTR _semi$[ebp]
	add	ecx, 1
	mov	DWORD PTR _semi$[ebp], ecx
	jmp	SHORT $LN8@readLine
$LN7@readLine:
; Line 145
	push	0
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 148
	mov	DWORD PTR _type$[ebp], 2
	jmp	SHORT $LN6@readLine
$LN5@readLine:
	mov	eax, DWORD PTR _type$[ebp]
	add	eax, 1
	mov	DWORD PTR _type$[ebp], eax
$LN6@readLine:
; Line 149
	cmp	DWORD PTR _type$[ebp], 10		; 0000000aH
	jne	SHORT $LN3@readLine
; Line 152
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	push	OFFSET ??_C@_0EK@GOJIBCL@error?5in?5preparsed?5UCD?3?5unknown?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 153
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 154
	xor	eax, eax
	jmp	SHORT $LN23@readLine
$LN3@readLine:
; Line 156
	mov	eax, DWORD PTR _type$[ebp]
	mov	ecx, DWORD PTR _lineTypeStrings[eax*4]
	push	ecx
	mov	edx, DWORD PTR _line$[ebp]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@readLine
; Line 157
	jmp	SHORT $LN4@readLine
$LN2@readLine:
; Line 159
	jmp	SHORT $LN5@readLine
$LN4@readLine:
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 161
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 2
	jne	SHORT $LN1@readLine
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+36]
	jae	SHORT $LN1@readLine
; Line 162
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 40					; 00000028H
	push	edx
	call	_u_versionFromString_56
	add	esp, 8
$LN1@readLine:
; Line 164
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
$LN23@readLine:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?readLine@PreparsedUCD@icu_56@@QAE?AW4LineType@12@AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::readLine
_TEXT	ENDS
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
PUBLIC	?firstField@PreparsedUCD@icu_56@@AAEPBDXZ	; icu_56::PreparsedUCD::firstField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?firstField@PreparsedUCD@icu_56@@AAEPBDXZ
_TEXT	SEGMENT
_field$ = -20						; size = 4
_this$ = -8						; size = 4
?firstField@PreparsedUCD@icu_56@@AAEPBDXZ PROC		; icu_56::PreparsedUCD::firstField, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\toolutil\ppucd.cpp
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	shl	ecx, 12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1568]
	mov	DWORD PTR _field$[ebp], eax
; Line 170
	push	0
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 171
	mov	eax, DWORD PTR _field$[ebp]
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?firstField@PreparsedUCD@icu_56@@AAEPBDXZ ENDP		; icu_56::PreparsedUCD::firstField
_TEXT	ENDS
PUBLIC	?nextField@PreparsedUCD@icu_56@@QAEPBDXZ	; icu_56::PreparsedUCD::nextField
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextField@PreparsedUCD@icu_56@@QAEPBDXZ
_TEXT	SEGMENT
_field$ = -20						; size = 4
_this$ = -8						; size = 4
?nextField@PreparsedUCD@icu_56@@QAEPBDXZ PROC		; icu_56::PreparsedUCD::nextField, COMDAT
; _this$ = ecx
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 176
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+32]
	cmp	edx, DWORD PTR [ecx+36]
	jne	SHORT $LN1@nextField
	xor	eax, eax
	jmp	SHORT $LN2@nextField
$LN1@nextField:
; Line 177
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 1
	mov	DWORD PTR _field$[ebp], ecx
; Line 178
	push	0
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+32], eax
; Line 179
	mov	eax, DWORD PTR _field$[ebp]
$LN2@nextField:
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?nextField@PreparsedUCD@icu_56@@QAEPBDXZ ENDP		; icu_56::PreparsedUCD::nextField
_TEXT	ENDS
PUBLIC	?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseProperty
PUBLIC	??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@ ; `string'
PUBLIC	??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@ ; `string'
PUBLIC	??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@ ; `string'
PUBLIC	?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePointRange
PUBLIC	??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@ ; `string'
PUBLIC	?getProps@PreparsedUCD@icu_56@@QAEPBUUniProps@2@AAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::getProps
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@
CONST	SEGMENT
??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@ DB 'error in p'
	DB	'reparsed UCD: cp range %s on line %ld only partially overlaps'
	DB	' with block range %04lX..%04lX', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@
CONST	SEGMENT
??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@ DB 'error in p'
	DB	'reparsed UCD: default range must be 0..10FFFF, not ''%s'' on '
	DB	'line %ld', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@
CONST	SEGMENT
??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@ DB 'error in p'
	DB	'reparsed UCD: second line with default properties on line %ld'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@
CONST	SEGMENT
??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@ DB 'error in p'
	DB	'reparsed UCD: missing default/block/cp range field (no second'
	DB	' field) on line %ld', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getProps@PreparsedUCD@icu_56@@QAEPBUUniProps@2@AAVUnicodeSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv94 = -256						; size = 4
_props$ = -56						; size = 4
_end$ = -44						; size = 4
_start$ = -32						; size = 4
_field$ = -20						; size = 4
_this$ = -8						; size = 4
_newValues$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?getProps@PreparsedUCD@icu_56@@QAEPBUUniProps@2@AAVUnicodeSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::getProps, COMDAT
; _this$ = ecx
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN21@getProps
	xor	eax, eax
	jmp	$LN22@getProps
$LN21@getProps:
; Line 185
	mov	eax, DWORD PTR _newValues$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _newValues$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	mov	ecx, DWORD PTR _this$[ebp]
	call	?lineHasPropertyValues@PreparsedUCD@icu_56@@QBECXZ ; icu_56::PreparsedUCD::lineHasPropertyValues
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN20@getProps
; Line 187
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 188
	xor	eax, eax
	jmp	$LN22@getProps
$LN20@getProps:
; Line 190
	mov	ecx, DWORD PTR _this$[ebp]
	call	?firstField@PreparsedUCD@icu_56@@AAEPBDXZ ; icu_56::PreparsedUCD::firstField
; Line 191
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextField@PreparsedUCD@icu_56@@QAEPBDXZ ; icu_56::PreparsedUCD::nextField
	mov	DWORD PTR _field$[ebp], eax
; Line 192
	cmp	DWORD PTR _field$[ebp], 0
	jne	SHORT $LN19@getProps
; Line 197
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0FM@BCFCIPLO@error?5in?5preparsed?5UCD?3?5missing?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 198
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 199
	xor	eax, eax
	jmp	$LN22@getProps
$LN19@getProps:
; Line 202
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _end$[ebp]
	push	ecx
	lea	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePointRange
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN18@getProps
	xor	eax, eax
	jmp	$LN22@getProps
$LN18@getProps:
; Line 204
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR tv94[ebp], ecx
	cmp	DWORD PTR tv94[ebp], 6
	je	SHORT $LN15@getProps
	cmp	DWORD PTR tv94[ebp], 7
	je	$LN11@getProps
	cmp	DWORD PTR tv94[ebp], 8
	je	$LN10@getProps
	jmp	$LN4@getProps
$LN15@getProps:
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jl	SHORT $LN14@getProps
; Line 209
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0EJ@COFDJIMH@error?5in?5preparsed?5UCD?3?5second?5l@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 210
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 211
	xor	eax, eax
	jmp	$LN22@getProps
$LN14@getProps:
; Line 213
	cmp	DWORD PTR _start$[ebp], 0
	jne	SHORT $LN12@getProps
	cmp	DWORD PTR _end$[ebp], 1114111		; 0010ffffH
	je	SHORT $LN13@getProps
$LN12@getProps:
; Line 216
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0EP@GLAMKFPE@error?5in?5preparsed?5UCD?3?5default?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 217
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 218
	xor	eax, eax
	jmp	$LN22@getProps
$LN13@getProps:
; Line 220
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR _props$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+12], edx
; Line 222
	jmp	$LN16@getProps
$LN11@getProps:
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
; Line 225
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 552				; 00000228H
	mov	DWORD PTR _props$[ebp], eax
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+16], edx
; Line 227
	jmp	$LN16@getProps
$LN10@getProps:
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+552]
	cmp	ecx, DWORD PTR _start$[ebp]
	jg	SHORT $LN9@getProps
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	cmp	ecx, DWORD PTR [eax+556]
	jg	SHORT $LN9@getProps
; Line 231
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 552				; 00000228H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
	jmp	$LN8@getProps
$LN9@getProps:
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	cmp	ecx, DWORD PTR [eax+556]
	jg	SHORT $LN6@getProps
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	cmp	ecx, DWORD PTR [eax+552]
	jge	SHORT $LN7@getProps
$LN6@getProps:
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1060				; 00000424H
	call	??4UniProps@icu_56@@QAEAAU01@ABU01@@Z
; Line 235
	jmp	SHORT $LN8@getProps
$LN7@getProps:
; Line 240
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+556]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	push	OFFSET ??_C@_0GH@HOIGFLFF@error?5in?5preparsed?5UCD?3?5cp?5range@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 241
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 242
	xor	eax, eax
	jmp	SHORT $LN22@getProps
$LN8@getProps:
; Line 244
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1060				; 00000424H
	mov	DWORD PTR _props$[ebp], eax
; Line 245
	jmp	SHORT $LN16@getProps
$LN4@getProps:
; Line 248
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 249
	xor	eax, eax
	jmp	SHORT $LN22@getProps
$LN16@getProps:
; Line 251
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 252
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN3@getProps:
; Line 253
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextField@PreparsedUCD@icu_56@@QAEPBDXZ ; icu_56::PreparsedUCD::nextField
	mov	DWORD PTR _field$[ebp], eax
	cmp	DWORD PTR _field$[ebp], 0
	je	SHORT $LN2@getProps
; Line 254
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newValues$[ebp]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	mov	eax, DWORD PTR _props$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseProperty
	movsx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@getProps
	xor	eax, eax
	jmp	SHORT $LN22@getProps
$LN1@getProps:
; Line 255
	jmp	SHORT $LN3@getProps
$LN2@getProps:
; Line 256
	mov	eax, DWORD PTR _props$[ebp]
$LN22@getProps:
; Line 257
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@getProps
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN27@getProps:
	DD	2
	DD	$LN26@getProps
$LN26@getProps:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN24@getProps
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN25@getProps
$LN25@getProps:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN24@getProps:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
?getProps@PreparsedUCD@icu_56@@QAEPBUUniProps@2@AAVUnicodeSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::getProps
_TEXT	ENDS
PUBLIC	?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseScriptExtensions
PUBLIC	?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseString
PUBLIC	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
PUBLIC	??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
PUBLIC	??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
PUBLIC	??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@ ; `string'
PUBLIC	??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@ ; `string'
PUBLIC	??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@ ; `string'
PUBLIC	??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ ; `string'
PUBLIC	?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA ; `icu_56::PreparsedUCD::parseProperty'::`2'::__LINE__Var
PUBLIC	??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	__imp__strtoul:PROC
EXTRN	__imp___wassert:PROC
EXTRN	_uprv_stricmp_56:PROC
EXTRN	__imp_?data@CharString@icu_56@@QAEPADXZ:PROC
EXTRN	__imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??1CharString@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??0CharString@icu_56@@QAE@XZ:PROC
;	COMDAT ??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid default value on li'
	DB	'ne %ld', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid value on line %ld', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@
CONST	SEGMENT
??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@ DB 'error in p'
	DB	'reparsed UCD: prop value is invalid: ''%d'' for line %ld', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@
CONST	SEGMENT
??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@ DB 'error in p'
	DB	'reparsed UCD: binary-property syntax ''%s'' for non-binary pr'
	DB	'operty on line %ld', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@
CONST	SEGMENT
??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@ DB 'error in pr'
	DB	'eparsed UCD: enum-property syntax ''%s'' for binary property '
	DB	'on line %ld', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'o', 00H, 'p', 00H, '>', 00H, '=', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
CONST	SEGMENT
??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'm', 00H, 'o', 00H, 'z', 00H, 'i', 00H
	DB	'l', 00H, 'l', 00H, 'a', 00H, '\', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, 'l', 00H, '\', 00H, 'i', 00H, 'c', 00H, 'u', 00H, '\', 00H
	DB	's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H, 'e', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 't', 00H, 'i'
	DB	00H, 'l', 00H, '\', 00H, 'p', 00H, 'p', 00H, 'u', 00H, 'c', 00H
	DB	'd', 00H, '.', 00H, 'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA DD 010fH ; `icu_56::PreparsedUCD::parseProperty'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@
CONST	SEGMENT
??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@ DB 'error in '
	DB	'preparsed UCD: mix of binary-property-no and enum-property sy'
	DB	'ntax ''%s'' on line %ld', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv242 = -456						; size = 4
tv211 = -456						; size = 4
$T33988 = -445						; size = 1
$T33989 = -433						; size = 1
$T33992 = -421						; size = 1
$T33995 = -409						; size = 1
$T33996 = -397						; size = 1
_c$27103 = -193						; size = 1
_ccc$27075 = -184					; size = 4
_end$27074 = -172					; size = 4
_value$27072 = -160					; size = 4
_i$27044 = -148						; size = 4
_prop$ = -136						; size = 4
_binaryValue$ = -124					; size = 4
_v$ = -112						; size = 4
_p$ = -100						; size = 4
_pBuffer$ = -88						; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_props$ = 8						; size = 4
_field$ = 12						; size = 4
_newValues$ = 16					; size = 4
_errorCode$ = 20					; size = 4
?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::parseProperty, COMDAT
; _this$ = ecx
; Line 271
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 272
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 273
	mov	eax, DWORD PTR _field$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 274
	mov	esi, esp
	push	61					; 0000003dH
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _v$[ebp], eax
; Line 276
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	$LN64@parsePrope
; Line 277
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN63@parsePrope
; Line 281
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0FN@CJPGCBAK@error?5in?5preparsed?5UCD?3?5mix?5of?5b@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 282
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 283
	mov	BYTE PTR $T33988[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T33988[ebp]
	jmp	$LN65@parsePrope
$LN63@parsePrope:
; Line 285
	mov	DWORD PTR _binaryValue$[ebp], 0
; Line 286
	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
	jmp	SHORT $LN62@parsePrope
$LN64@parsePrope:
; Line 287
	cmp	DWORD PTR _v$[ebp], 0
	jne	SHORT $LN61@parsePrope
; Line 288
	mov	DWORD PTR _binaryValue$[ebp], 1
; Line 289
	jmp	SHORT $LN62@parsePrope
$LN61@parsePrope:
; Line 290
	mov	DWORD PTR _binaryValue$[ebp], -1
; Line 292
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	sub	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 293
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax
; Line 294
	mov	eax, DWORD PTR _v$[ebp]
	add	eax, 1
	mov	DWORD PTR _v$[ebp], eax
$LN62@parsePrope:
; Line 296
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _prop$[ebp], eax
; Line 297
	cmp	DWORD PTR _prop$[ebp], 0
	jge	$LN59@parsePrope
; Line 298
	mov	DWORD PTR _i$27044[ebp], 0
	jmp	SHORT $LN58@parsePrope
$LN57@parsePrope:
	mov	eax, DWORD PTR _i$27044[ebp]
	add	eax, 1
	mov	DWORD PTR _i$27044[ebp], eax
$LN58@parsePrope:
; Line 299
	cmp	DWORD PTR _i$27044[ebp], 3
	jne	SHORT $LN55@parsePrope
; Line 301
	mov	BYTE PTR $T33989[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T33989[ebp]
	jmp	$LN65@parsePrope
$LN55@parsePrope:
; Line 303
	mov	eax, DWORD PTR _i$27044[ebp]
	mov	ecx, DWORD PTR _ppucdProperties[eax*8]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_uprv_stricmp_56
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN54@parsePrope
; Line 304
	mov	eax, DWORD PTR _i$27044[ebp]
	mov	ecx, DWORD PTR _ppucdProperties[eax*8+4]
	mov	DWORD PTR _prop$[ebp], ecx
; Line 305
	cmp	DWORD PTR _prop$[ebp], 0
	jge	SHORT $LN67@parsePrope
	mov	eax, DWORD PTR ?__LINE__Var@?1??parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@3@PBDAAVUnicodeSet@3@AAW4UErrorCode@@@Z@4JA
	add	eax, 34					; 00000022H
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1GI@EBLKJGFB@?$AAd?$AA?3?$AA?2?$AAm?$AAo?$AAz?$AAi?$AAl?$AAl?$AAa?$AA?2?$AAi?$AAn?$AAt?$AAl?$AA?2?$AAi?$AAc?$AAu?$AA?2?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?2?$AAt?$AAo?$AAo?$AAl?$AAs@
	push	OFFSET ??_C@_1BA@LDCEKLCH@?$AAp?$AAr?$AAo?$AAp?$AA?$DO?$AA?$DN?$AA0?$AA?$AA@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN67@parsePrope:
; Line 306
	jmp	SHORT $LN59@parsePrope
$LN54@parsePrope:
; Line 308
	jmp	$LN57@parsePrope
$LN59@parsePrope:
; Line 310
	cmp	DWORD PTR _prop$[ebp], 57		; 00000039H
	jge	SHORT $LN53@parsePrope
; Line 311
	cmp	DWORD PTR _binaryValue$[ebp], 0
	jl	SHORT $LN52@parsePrope
; Line 312
	mov	eax, DWORD PTR _props$[ebp]
	add	eax, DWORD PTR _prop$[ebp]
	mov	cl, BYTE PTR _binaryValue$[ebp]
	mov	BYTE PTR [eax+8], cl
; Line 313
	jmp	SHORT $LN51@parsePrope
$LN52@parsePrope:
; Line 318
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0FD@ODNMKAC@error?5in?5preparsed?5UCD?3?5enum?9pro@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 319
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
$LN51@parsePrope:
; Line 320
	jmp	$LN50@parsePrope
$LN53@parsePrope:
; Line 321
	cmp	DWORD PTR _binaryValue$[ebp], 0
	jl	SHORT $LN49@parsePrope
; Line 326
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0FJ@COAKGGEJ@error?5in?5preparsed?5UCD?3?5binary?9p@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 327
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
	jmp	$LN50@parsePrope
$LN49@parsePrope:
; Line 328
	cmp	DWORD PTR _prop$[ebp], 4096		; 00001000H
	jge	SHORT $LN47@parsePrope
; Line 331
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _prop$[ebp]
	push	edx
	push	OFFSET ??_C@_0EC@FGPBAAMM@error?5in?5preparsed?5UCD?3?5prop?5val@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
	jmp	$LN50@parsePrope
$LN47@parsePrope:
; Line 333
	cmp	DWORD PTR _prop$[ebp], 4118		; 00001016H
	jge	$LN45@parsePrope
; Line 334
	mov	esi, esp
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prop$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$27072[ebp], eax
; Line 335
	cmp	DWORD PTR _value$27072[ebp], -1
	jne	SHORT $LN44@parsePrope
	cmp	DWORD PTR _prop$[ebp], 4098		; 00001002H
	jne	SHORT $LN44@parsePrope
; Line 338
	mov	esi, esp
	push	10					; 0000000aH
	lea	eax, DWORD PTR _end$27074[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ccc$27075[ebp], eax
; Line 339
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _end$27074[ebp]
	jae	SHORT $LN44@parsePrope
	mov	eax, DWORD PTR _end$27074[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN44@parsePrope
	cmp	DWORD PTR _ccc$27075[ebp], 254		; 000000feH
	ja	SHORT $LN44@parsePrope
; Line 340
	mov	eax, DWORD PTR _ccc$27075[ebp]
	mov	DWORD PTR _value$27072[ebp], eax
$LN44@parsePrope:
; Line 343
	cmp	DWORD PTR _value$27072[ebp], -1
	jne	SHORT $LN42@parsePrope
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0DP@BDNEGABI@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 348
	jmp	SHORT $LN41@parsePrope
$LN42@parsePrope:
; Line 349
	mov	eax, DWORD PTR _prop$[ebp]
	mov	ecx, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR _value$27072[ebp]
	mov	DWORD PTR [ecx+eax*4-16316], edx
$LN41@parsePrope:
; Line 350
	jmp	$LN50@parsePrope
$LN45@parsePrope:
; Line 351
	mov	eax, DWORD PTR _v$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 60					; 0000003cH
	jne	$LN39@parsePrope
; Line 353
	mov	eax, DWORD PTR _prop$[ebp]
	mov	DWORD PTR tv211[ebp], eax
	cmp	DWORD PTR tv211[ebp], 28672		; 00007000H
	jg	SHORT $LN68@parsePrope
	cmp	DWORD PTR tv211[ebp], 28672		; 00007000H
	je	$LN26@parsePrope
	mov	ecx, DWORD PTR tv211[ebp]
	sub	ecx, 16385				; 00004001H
	mov	DWORD PTR tv211[ebp], ecx
	cmp	DWORD PTR tv211[ebp], 12		; 0000000cH
	ja	$LN25@parsePrope
	mov	edx, DWORD PTR tv211[ebp]
	jmp	DWORD PTR $LN77@parsePrope[edx*4]
$LN68@parsePrope:
	jmp	$LN25@parsePrope
$LN36@parsePrope:
; Line 355
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+160], -1
; Line 356
	jmp	$LN37@parsePrope
$LN35@parsePrope:
; Line 358
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+164], -1
; Line 359
	jmp	$LN37@parsePrope
$LN34@parsePrope:
; Line 361
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+168], -1
; Line 362
	jmp	$LN37@parsePrope
$LN33@parsePrope:
; Line 364
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+172], -1
; Line 365
	jmp	$LN37@parsePrope
$LN32@parsePrope:
; Line 367
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+176], -1
; Line 368
	jmp	$LN37@parsePrope
$LN31@parsePrope:
; Line 370
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+180], -1
; Line 371
	jmp	$LN37@parsePrope
$LN30@parsePrope:
; Line 373
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 200				; 000000c8H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 374
	jmp	$LN37@parsePrope
$LN29@parsePrope:
; Line 376
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 264				; 00000108H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 377
	jmp	$LN37@parsePrope
$LN28@parsePrope:
; Line 379
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 328				; 00000148H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 380
	jmp	SHORT $LN37@parsePrope
$LN27@parsePrope:
; Line 382
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 392				; 00000188H
	mov	esi, esp
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 383
	jmp	SHORT $LN37@parsePrope
$LN26@parsePrope:
; Line 385
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 456				; 000001c8H
	mov	eax, DWORD PTR _props$[ebp]
	mov	edx, DWORD PTR [eax+456]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 386
	jmp	SHORT $LN37@parsePrope
$LN25@parsePrope:
; Line 390
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _field$[ebp]
	push	edx
	push	OFFSET ??_C@_0EH@BBKEPFJE@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 391
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
$LN37@parsePrope:
; Line 393
	jmp	$LN50@parsePrope
$LN39@parsePrope:
; Line 395
	mov	eax, DWORD PTR _prop$[ebp]
	mov	DWORD PTR tv242[ebp], eax
	cmp	DWORD PTR tv242[ebp], 16384		; 00004000H
	jg	SHORT $LN69@parsePrope
	cmp	DWORD PTR tv242[ebp], 16384		; 00004000H
	je	$LN17@parsePrope
	cmp	DWORD PTR tv242[ebp], 12288		; 00003000H
	je	SHORT $LN21@parsePrope
	jmp	$LN3@parsePrope
$LN69@parsePrope:
	cmp	DWORD PTR tv242[ebp], 28672		; 00007000H
	jg	SHORT $LN70@parsePrope
	cmp	DWORD PTR tv242[ebp], 28672		; 00007000H
	je	$LN4@parsePrope
	mov	ecx, DWORD PTR tv242[ebp]
	sub	ecx, 16385				; 00004001H
	mov	DWORD PTR tv242[ebp], ecx
	cmp	DWORD PTR tv242[ebp], 15		; 0000000fH
	ja	$LN3@parsePrope
	mov	edx, DWORD PTR tv242[ebp]
	jmp	DWORD PTR $LN78@parsePrope[edx*4]
$LN70@parsePrope:
	jmp	$LN3@parsePrope
$LN21@parsePrope:
; Line 397
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+188], ecx
; Line 398
	mov	eax, DWORD PTR _v$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$27103[ebp], cl
; Line 399
	movsx	eax, BYTE PTR _c$27103[ebp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN20@parsePrope
	movsx	eax, BYTE PTR _c$27103[ebp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN20@parsePrope
	mov	eax, DWORD PTR _v$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	test	ecx, ecx
	jne	SHORT $LN20@parsePrope
; Line 400
	movsx	eax, BYTE PTR _c$27103[ebp]
	sub	eax, 48					; 00000030H
	mov	ecx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [ecx+184], eax
; Line 401
	jmp	SHORT $LN19@parsePrope
$LN20@parsePrope:
; Line 402
	mov	eax, DWORD PTR _props$[ebp]
	mov	DWORD PTR [eax+184], -1
$LN19@parsePrope:
; Line 404
	jmp	$LN50@parsePrope
$LN18@parsePrope:
; Line 406
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+192], ecx
; Line 407
	jmp	$LN50@parsePrope
$LN17@parsePrope:
; Line 409
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 156				; 0000009cH
	push	ecx
	call	_u_versionFromString_56
	add	esp, 8
; Line 410
	jmp	$LN50@parsePrope
$LN16@parsePrope:
; Line 412
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+160], eax
; Line 413
	jmp	$LN50@parsePrope
$LN15@parsePrope:
; Line 415
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+164], eax
; Line 416
	jmp	$LN50@parsePrope
$LN14@parsePrope:
; Line 418
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+168], eax
; Line 419
	jmp	$LN50@parsePrope
$LN13@parsePrope:
; Line 421
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+172], eax
; Line 422
	jmp	$LN50@parsePrope
$LN12@parsePrope:
; Line 424
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+176], eax
; Line 425
	jmp	$LN50@parsePrope
$LN11@parsePrope:
; Line 427
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePoint
	mov	edx, DWORD PTR _props$[ebp]
	mov	DWORD PTR [edx+180], eax
; Line 428
	jmp	$LN50@parsePrope
$LN10@parsePrope:
; Line 430
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 200				; 000000c8H
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseString
; Line 431
	jmp	$LN50@parsePrope
$LN9@parsePrope:
; Line 433
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 264				; 00000108H
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseString
; Line 434
	jmp	$LN50@parsePrope
$LN8@parsePrope:
; Line 436
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 328				; 00000148H
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseString
; Line 437
	jmp	SHORT $LN50@parsePrope
$LN7@parsePrope:
; Line 439
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 392				; 00000188H
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseString
; Line 440
	jmp	SHORT $LN50@parsePrope
$LN6@parsePrope:
; Line 442
	mov	eax, DWORD PTR _props$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+196], ecx
; Line 443
	jmp	SHORT $LN50@parsePrope
$LN5@parsePrope:
; Line 447
	jmp	SHORT $LN50@parsePrope
$LN4@parsePrope:
; Line 449
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _props$[ebp]
	add	ecx, 456				; 000001c8H
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseScriptExtensions
; Line 450
	jmp	SHORT $LN50@parsePrope
$LN3@parsePrope:
; Line 453
	mov	BYTE PTR $T33992[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T33992[ebp]
	jmp	$LN65@parsePrope
$LN50@parsePrope:
; Line 456
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parsePrope
; Line 457
	mov	esi, esp
	mov	eax, DWORD PTR _prop$[ebp]
	push	eax
	mov	ecx, DWORD PTR _newValues$[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 458
	mov	BYTE PTR $T33995[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T33995[ebp]
	jmp	SHORT $LN65@parsePrope
; Line 459
	jmp	SHORT $LN1@parsePrope
$LN2@parsePrope:
; Line 460
	mov	BYTE PTR $T33996[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	al, BYTE PTR $T33996[ebp]
	jmp	SHORT $LN65@parsePrope
$LN1@parsePrope:
; Line 462
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN65@parsePrope:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN76@parsePrope
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN76@parsePrope:
	DD	2
	DD	$LN75@parsePrope
$LN75@parsePrope:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN72@parsePrope
	DD	-172					; ffffff54H
	DD	4
	DD	$LN73@parsePrope
$LN73@parsePrope:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN72@parsePrope:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN77@parsePrope:
	DD	$LN36@parsePrope
	DD	$LN30@parsePrope
	DD	$LN25@parsePrope
	DD	$LN29@parsePrope
	DD	$LN25@parsePrope
	DD	$LN34@parsePrope
	DD	$LN33@parsePrope
	DD	$LN32@parsePrope
	DD	$LN31@parsePrope
	DD	$LN28@parsePrope
	DD	$LN25@parsePrope
	DD	$LN27@parsePrope
	DD	$LN35@parsePrope
$LN78@parsePrope:
	DD	$LN16@parsePrope
	DD	$LN10@parsePrope
	DD	$LN3@parsePrope
	DD	$LN9@parsePrope
	DD	$LN18@parsePrope
	DD	$LN14@parsePrope
	DD	$LN13@parsePrope
	DD	$LN12@parsePrope
	DD	$LN11@parsePrope
	DD	$LN8@parsePrope
	DD	$LN3@parsePrope
	DD	$LN7@parsePrope
	DD	$LN15@parsePrope
	DD	$LN6@parsePrope
	DD	$LN5@parsePrope
	DD	$LN5@parsePrope
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseProperty@PreparsedUCD@icu_56@@AAECAAUUniProps@2@PBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::parseProperty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@ ; `string'
PUBLIC	?getRangeForAlgNames@PreparsedUCD@icu_56@@QAECAAH0AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::getRangeForAlgNames
;	COMDAT ??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@
; File d:\mozilla\intl\icu\source\tools\toolutil\ppucd.cpp
CONST	SEGMENT
??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@ DB 'error in p'
	DB	'reparsed UCD: missing algnamesrange range field (no second fi'
	DB	'eld) on line %ld', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?getRangeForAlgNames@PreparsedUCD@icu_56@@QAECAAH0AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_field$ = -20						; size = 4
_this$ = -8						; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?getRangeForAlgNames@PreparsedUCD@icu_56@@QAECAAH0AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::getRangeForAlgNames, COMDAT
; _this$ = ecx
; Line 465
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 466
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@getRangeFo
	xor	al, al
	jmp	$LN4@getRangeFo
$LN3@getRangeFo:
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 9
	je	SHORT $LN2@getRangeFo
; Line 468
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 469
	xor	al, al
	jmp	SHORT $LN4@getRangeFo
$LN2@getRangeFo:
; Line 471
	mov	ecx, DWORD PTR _this$[ebp]
	call	?firstField@PreparsedUCD@icu_56@@AAEPBDXZ ; icu_56::PreparsedUCD::firstField
; Line 472
	mov	ecx, DWORD PTR _this$[ebp]
	call	?nextField@PreparsedUCD@icu_56@@QAEPBDXZ ; icu_56::PreparsedUCD::nextField
	mov	DWORD PTR _field$[ebp], eax
; Line 473
	cmp	DWORD PTR _field$[ebp], 0
	jne	SHORT $LN1@getRangeFo
; Line 478
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0FJ@JJPNBDAA@error?5in?5preparsed?5UCD?3?5missing?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 479
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 480
	xor	al, al
	jmp	SHORT $LN4@getRangeFo
$LN1@getRangeFo:
; Line 482
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _end$[ebp]
	push	ecx
	mov	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z ; icu_56::PreparsedUCD::parseCodePointRange
$LN4@getRangeFo:
; Line 483
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getRangeForAlgNames@PreparsedUCD@icu_56@@QAECAAH0AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::getRangeForAlgNames
_TEXT	ENDS
PUBLIC	??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
;	COMDAT ??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid code point on line '
	DB	'%ld', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_value$ = -32						; size = 4
_end$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::parseCodePoint, COMDAT
; _this$ = ecx
; Line 486
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 488
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 489
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN1@parseCodeP
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@parseCodeP
	cmp	DWORD PTR _value$[ebp], 1114112		; 00110000H
	jb	SHORT $LN2@parseCodeP
$LN1@parseCodeP:
; Line 492
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	OFFSET ??_C@_0EE@KAFJKEGG@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 493
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 494
	or	eax, -1
	jmp	SHORT $LN3@parseCodeP
$LN2@parseCodeP:
; Line 496
	mov	eax, DWORD PTR _value$[ebp]
$LN3@parseCodeP:
; Line 497
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@parseCodeP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN7@parseCodeP:
	DD	1
	DD	$LN6@parseCodeP
$LN6@parseCodeP:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@parseCodeP
$LN5@parseCodeP:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?parseCodePoint@PreparsedUCD@icu_56@@AAEHPBDAAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::parseCodePoint
_TEXT	ENDS
PUBLIC	??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
EXTRN	_u_parseCodePointRange:PROC
;	COMDAT ??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid code point range on'
	DB	' line %ld', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_e$ = -32						; size = 4
_st$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_start$ = 12						; size = 4
_end$ = 16						; size = 4
_errorCode$ = 20					; size = 4
?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::parseCodePointRange, COMDAT
; _this$ = ecx
; Line 500
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 502
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _e$[ebp]
	push	ecx
	lea	edx, DWORD PTR _st$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_parseCodePointRange
	add	esp, 16					; 00000010H
; Line 503
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@parseCodeP@2
; Line 506
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	OFFSET ??_C@_0EK@ELHJJIBP@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 507
	xor	al, al
	jmp	SHORT $LN2@parseCodeP@2
$LN1@parseCodeP@2:
; Line 509
	mov	eax, DWORD PTR _start$[ebp]
	mov	ecx, DWORD PTR _st$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 510
	mov	eax, DWORD PTR _end$[ebp]
	mov	ecx, DWORD PTR _e$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 511
	mov	al, 1
$LN2@parseCodeP@2:
; Line 512
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@parseCodeP@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN7@parseCodeP@2:
	DD	2
	DD	$LN6@parseCodeP@2
$LN6@parseCodeP@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@parseCodeP@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@parseCodeP@2
$LN5@parseCodeP@2:
	DB	101					; 00000065H
	DB	0
$LN4@parseCodeP@2:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?parseCodePointRange@PreparsedUCD@icu_56@@AAECPBDAAH1AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::parseCodePointRange
_TEXT	ENDS
PUBLIC	??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
EXTRN	__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC
EXTRN	_u_parseString:PROC
EXTRN	__imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
;	COMDAT ??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid Unicode string on l'
	DB	'ine %ld', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_length$ = -32						; size = 4
_buffer$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_uni$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::parseString, COMDAT
; _this$ = ecx
; Line 515
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 516
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer$[ebp], eax
; Line 517
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_u_parseString
	add	esp, 20					; 00000014H
	mov	DWORD PTR _length$[ebp], eax
; Line 518
	mov	eax, DWORD PTR _errorCode$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN2@parseStrin
; Line 519
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 520
	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 521
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer$[ebp], eax
; Line 522
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	esi, esp
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_u_parseString
	add	esp, 20					; 00000014H
	mov	DWORD PTR _length$[ebp], eax
$LN2@parseStrin:
; Line 524
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _uni$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 525
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN3@parseStrin
; Line 528
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	push	OFFSET ??_C@_0EI@LLLFILCN@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@parseStrin:
; Line 530
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?parseString@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::parseString
_TEXT	ENDS
PUBLIC	??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@ ; `string'
PUBLIC	??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@ ; `string'
PUBLIC	??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_?clear@CharString@icu_56@@QAEAAV12@XZ:PROC
;	COMDAT ??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@
CONST	SEGMENT
??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@ DB 'error in p'
	DB	'reparsed UCD: empty scx= on line %ld', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@
CONST	SEGMENT
??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@ DB 'error in '
	DB	'preparsed UCD: scx has duplicate ''%s'' codes on line %ld', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
CONST	SEGMENT
??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@ DB 'erro'
	DB	'r in preparsed UCD: ''%s'' is not a valid script code on line'
	DB	' %ld', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_script$27201 = -124					; size = 4
_scLimit$27196 = -112					; size = 4
_scs$27195 = -100					; size = 4
_scString$ = -88					; size = 56
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_scx$ = 12						; size = 4
_errorCode$ = 16					; size = 4
?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z PROC ; icu_56::PreparsedUCD::parseScriptExtensions, COMDAT
; _this$ = ecx
; Line 533
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-320]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 534
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN13@parseScrip
	jmp	$LN14@parseScrip
$LN13@parseScrip:
; Line 535
	mov	eax, DWORD PTR _scx$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _scx$[ebp]
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 536
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??0CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
$LN12@parseScrip:
; Line 539
	mov	esi, esp
	push	32					; 00000020H
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _scLimit$27196[ebp], eax
; Line 540
	cmp	DWORD PTR _scLimit$27196[ebp], 0
	je	SHORT $LN10@parseScrip
; Line 541
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _scLimit$27196[ebp]
	sub	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	mov	edi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_?clear@CharString@icu_56@@QAEAAV12@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	DWORD PTR __imp_?append@CharString@icu_56@@QAEAAV12@PBDHAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?data@CharString@icu_56@@QAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _scs$27195[ebp], eax
; Line 542
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parseScrip
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN14@parseScrip
$LN9@parseScrip:
; Line 543
	jmp	SHORT $LN8@parseScrip
$LN10@parseScrip:
; Line 544
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _scs$27195[ebp], eax
$LN8@parseScrip:
; Line 546
	mov	esi, esp
	mov	eax, DWORD PTR _scs$27195[ebp]
	push	eax
	push	4106					; 0000100aH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _script$27201[ebp], eax
; Line 547
	cmp	DWORD PTR _script$27201[ebp], -1
	jne	SHORT $LN7@parseScrip
; Line 550
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _scs$27195[ebp]
	push	edx
	push	OFFSET ??_C@_0EF@EFKGHKPD@error?5in?5preparsed?5UCD?3?5?8?$CFs?8?5is?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 551
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 552
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN14@parseScrip
	jmp	$LN6@parseScrip
$LN7@parseScrip:
; Line 553
	mov	esi, esp
	mov	eax, DWORD PTR _script$27201[ebp]
	push	eax
	mov	ecx, DWORD PTR _scx$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _scx$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@parseScrip
; Line 556
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _scs$27195[ebp]
	push	edx
	push	OFFSET ??_C@_0EC@KDEAPDNP@error?5in?5preparsed?5UCD?3?5scx?5has?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 557
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 558
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN14@parseScrip
; Line 559
	jmp	SHORT $LN6@parseScrip
$LN5@parseScrip:
; Line 560
	mov	esi, esp
	mov	eax, DWORD PTR _script$27201[ebp]
	push	eax
	mov	ecx, DWORD PTR _scx$[ebp]
	call	DWORD PTR __imp_?add@UnicodeSet@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@parseScrip:
; Line 562
	cmp	DWORD PTR _scLimit$27196[ebp], 0
	je	SHORT $LN3@parseScrip
; Line 563
	mov	eax, DWORD PTR _scLimit$27196[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 564
	jmp	SHORT $LN2@parseScrip
$LN3@parseScrip:
; Line 565
	jmp	SHORT $LN11@parseScrip
$LN2@parseScrip:
; Line 567
	jmp	$LN12@parseScrip
$LN11@parseScrip:
; Line 568
	mov	eax, DWORD PTR _scx$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _scx$[ebp]
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@parseScrip
; Line 569
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	push	OFFSET ??_C@_0DA@MEICKNBO@error?5in?5preparsed?5UCD?3?5empty?5sc@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 570
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 9
$LN1@parseScrip:
; Line 572
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@parseScrip:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@parseScrip
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 320				; 00000140H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN20@parseScrip:
	DD	1
	DD	$LN19@parseScrip
$LN19@parseScrip:
	DD	-88					; ffffffa8H
	DD	56					; 00000038H
	DD	$LN17@parseScrip
$LN17@parseScrip:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _scString$[ebp]
	call	DWORD PTR __imp_??1CharString@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-324]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseScriptExtensions@PreparsedUCD@icu_56@@AAEXPBDAAVUnicodeSet@2@AAW4UErrorCode@@@Z ENDP ; icu_56::PreparsedUCD::parseScriptExtensions
END

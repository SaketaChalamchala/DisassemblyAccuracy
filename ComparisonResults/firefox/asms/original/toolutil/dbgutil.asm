; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\dbgutil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_BSS	SEGMENT
_strs	DD	01H DUP (?)
_BSS	ENDS
PUBLIC	??_EUnicodeString@icu_56@@UAEPAXI@Z		; icu_56::UnicodeString::`vector deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_EUnicodeString@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUnicodeString@icu_56@@UAEPAXI@Z PROC		; icu_56::UnicodeString::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	mov	eax, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx-4]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUnicodeString@icu_56@@UAEPAXI@Z ENDP		; icu_56::UnicodeString::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?udbg_enumString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@H@Z ; udbg_enumString
EXTRN	_udbg_enumCount:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?udbg_enumString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@H@Z
_TEXT	SEGMENT
_count$ = -8						; size = 4
_type$ = 8						; size = 4
_field$ = 12						; size = 4
?udbg_enumString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@H@Z PROC ; udbg_enumString, COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\dbgutil.cpp
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 78
	cmp	DWORD PTR _strs, 0
	jne	SHORT $LN6@udbg_enumS
; Line 79
	call	?udbg_setup@@YAXXZ			; udbg_setup
$LN6@udbg_enumS:
; Line 81
	cmp	DWORD PTR _type$[ebp], 0
	jl	SHORT $LN4@udbg_enumS
	cmp	DWORD PTR _type$[ebp], 6
	jl	SHORT $LN5@udbg_enumS
$LN4@udbg_enumS:
; Line 85
	mov	eax, DWORD PTR _strs
	mov	eax, DWORD PTR [eax+24]
	jmp	SHORT $LN7@udbg_enumS
$LN5@udbg_enumS:
; Line 87
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_udbg_enumCount
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
; Line 90
	cmp	DWORD PTR _field$[ebp], 0
	jl	SHORT $LN2@udbg_enumS
	mov	eax, DWORD PTR _field$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jle	SHORT $LN3@udbg_enumS
$LN2@udbg_enumS:
; Line 91
	mov	eax, DWORD PTR _count$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _type$[ebp]
	mov	edx, DWORD PTR _strs
	add	eax, DWORD PTR [edx+ecx*4]
	jmp	SHORT $LN7@udbg_enumS
	jmp	SHORT $LN7@udbg_enumS
$LN3@udbg_enumS:
; Line 92
	mov	eax, DWORD PTR _field$[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _type$[ebp]
	mov	edx, DWORD PTR _strs
	add	eax, DWORD PTR [edx+ecx*4]
$LN7@udbg_enumS:
; Line 94
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?udbg_enumString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@H@Z ENDP ; udbg_enumString
_TEXT	ENDS
PUBLIC	??_TUnicodeString@icu_56@@QAEXXZ		; icu_56::UnicodeString::`local vftable constructor closure'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??_UUMemory@icu_56@@SAPAXI@Z:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?udbg_setup@@YAXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?udbg_setup@@YAXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?udbg_setup@@YAXXZ$1
__ehfuncinfo$?udbg_setup@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?udbg_setup@@YAXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?udbg_setup@@YAXXZ
_TEXT	SEGMENT
tv132 = -332						; size = 4
tv154 = -328						; size = 4
tv89 = -328						; size = 4
$T31428 = -320						; size = 4
$T31429 = -308						; size = 4
$T31430 = -296						; size = 4
$T31431 = -284						; size = 4
$T31436 = -272						; size = 4
$T31437 = -260						; size = 4
_f$24815 = -56						; size = 4
_c$24806 = -44						; size = 4
_t$24802 = -32						; size = 4
_newStrs$24799 = -20					; size = 4
__$EHRec$ = -12						; size = 12
?udbg_setup@@YAXXZ PROC					; udbg_setup, COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?udbg_setup@@YAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 57
	cmp	DWORD PTR _strs, 0
	jne	$LN8@udbg_setup
; Line 58
	call	_udbg_register_cleanup
; Line 61
	push	28					; 0000001cH
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T31428[ebp], eax
	mov	eax, DWORD PTR $T31428[ebp]
	mov	DWORD PTR _newStrs$24799[ebp], eax
; Line 62
	mov	DWORD PTR _t$24802[ebp], 0
	jmp	SHORT $LN6@udbg_setup
$LN5@udbg_setup:
	mov	eax, DWORD PTR _t$24802[ebp]
	add	eax, 1
	mov	DWORD PTR _t$24802[ebp], eax
$LN6@udbg_setup:
	cmp	DWORD PTR _t$24802[ebp], 6
	jge	$LN4@udbg_setup
; Line 63
	mov	eax, DWORD PTR _t$24802[ebp]
	push	eax
	call	_udbg_enumCount
	add	esp, 4
	mov	DWORD PTR _c$24806[ebp], eax
; Line 64
	mov	eax, DWORD PTR _c$24806[ebp]
	add	eax, 1
	mov	DWORD PTR $T31429[ebp], eax
	jne	SHORT $LN10@udbg_setup
	push	4
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN11@udbg_setup
$LN10@udbg_setup:
	xor	ecx, ecx
	mov	eax, DWORD PTR $T31429[ebp]
	mov	edx, 64					; 00000040H
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	xor	eax, eax
	add	ecx, 4
	setb	al
	neg	eax
	or	eax, ecx
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
$LN11@udbg_setup:
	mov	ecx, DWORD PTR tv89[ebp]
	mov	DWORD PTR $T31431[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T31431[ebp], 0
	je	SHORT $LN12@udbg_setup
	mov	edx, DWORD PTR $T31431[ebp]
	mov	eax, DWORD PTR $T31429[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	ecx
	push	OFFSET ??_TUnicodeString@icu_56@@QAEXXZ
	mov	edx, DWORD PTR $T31429[ebp]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR $T31431[ebp]
	add	eax, 4
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	ecx, DWORD PTR $T31431[ebp]
	add	ecx, 4
	mov	DWORD PTR tv132[ebp], ecx
	jmp	SHORT $LN13@udbg_setup
$LN12@udbg_setup:
	mov	DWORD PTR tv132[ebp], 0
$LN13@udbg_setup:
	mov	edx, DWORD PTR tv132[ebp]
	mov	DWORD PTR $T31430[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _t$24802[ebp]
	mov	ecx, DWORD PTR _newStrs$24799[ebp]
	mov	edx, DWORD PTR $T31430[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 65
	mov	DWORD PTR _f$24815[ebp], 0
	jmp	SHORT $LN3@udbg_setup
$LN2@udbg_setup:
	mov	eax, DWORD PTR _f$24815[ebp]
	add	eax, 1
	mov	DWORD PTR _f$24815[ebp], eax
$LN3@udbg_setup:
	mov	eax, DWORD PTR _f$24815[ebp]
	cmp	eax, DWORD PTR _c$24806[ebp]
	jg	SHORT $LN1@udbg_setup
; Line 66
	mov	eax, DWORD PTR _f$24815[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _t$24802[ebp]
	mov	edx, DWORD PTR _newStrs$24799[ebp]
	add	eax, DWORD PTR [edx+ecx*4]
	push	eax
	mov	eax, DWORD PTR _f$24815[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$24802[ebp]
	push	ecx
	call	?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z ; _fieldString
	add	esp, 12					; 0000000cH
; Line 67
	jmp	SHORT $LN2@udbg_setup
$LN1@udbg_setup:
; Line 68
	jmp	$LN5@udbg_setup
$LN4@udbg_setup:
; Line 69
	mov	esi, esp
	push	68					; 00000044H
	call	DWORD PTR __imp_??_UUMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T31437[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T31437[ebp], 0
	je	SHORT $LN14@udbg_setup
	mov	eax, DWORD PTR $T31437[ebp]
	mov	DWORD PTR [eax], 1
	mov	ecx, DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	push	ecx
	push	OFFSET ??_TUnicodeString@icu_56@@QAEXXZ
	push	1
	push	64					; 00000040H
	mov	edx, DWORD PTR $T31437[ebp]
	add	edx, 4
	push	edx
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, DWORD PTR $T31437[ebp]
	add	eax, 4
	mov	DWORD PTR tv154[ebp], eax
	jmp	SHORT $LN15@udbg_setup
$LN14@udbg_setup:
	mov	DWORD PTR tv154[ebp], 0
$LN15@udbg_setup:
	mov	ecx, DWORD PTR tv154[ebp]
	mov	DWORD PTR $T31436[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	edx, DWORD PTR _newStrs$24799[ebp]
	mov	eax, DWORD PTR $T31436[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 71
	mov	eax, DWORD PTR _newStrs$24799[ebp]
	mov	DWORD PTR _strs, eax
$LN8@udbg_setup:
; Line 73
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?udbg_setup@@YAXXZ$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T31431[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?udbg_setup@@YAXXZ$1:
	mov	esi, esp
	mov	eax, DWORD PTR $T31437[ebp]
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?udbg_setup@@YAXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-336]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?udbg_setup@@YAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?udbg_setup@@YAXXZ ENDP					; udbg_setup
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD0@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	_udbg_enumName:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z$0
__ehfuncinfo$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z
_TEXT	SEGMENT
tv80 = -312						; size = 4
tv81 = -308						; size = 4
$T24774 = -300						; size = 64
$T31456 = -228						; size = 4
_str$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_type$ = 8						; size = 4
_field$ = 12						; size = 4
_fillin$ = 16						; size = 4
?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z PROC ; _fieldString, COMDAT
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 26
	mov	eax, DWORD PTR _field$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	_udbg_enumName
	add	esp, 8
	mov	DWORD PTR _str$[ebp], eax
; Line 27
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN2@fieldStrin
; Line 28
	mov	esi, esp
	mov	ecx, DWORD PTR _fillin$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@fieldStrin
; Line 29
	jmp	SHORT $LN3@fieldStrin
$LN2@fieldStrin:
; Line 30
	mov	esi, esp
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T24774[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	mov	ecx, DWORD PTR _fillin$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T31456[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR $T24774[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T31456[ebp]
$LN3@fieldStrin:
; Line 32
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR $T24774[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_fieldString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@HAAV12@@Z ENDP ; _fieldString
EXTRN	_ucln_registerCleanup_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udbg_register_cleanup
_TEXT	SEGMENT
_udbg_register_cleanup PROC				; COMDAT
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 52
	push	OFFSET _tu_cleanup
	push	3
	call	_ucln_registerCleanup_56
	add	esp, 8
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udbg_register_cleanup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _tu_cleanup
_TEXT	SEGMENT
_tu_cleanup PROC					; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 47
	call	_udbg_cleanup
; Line 48
	mov	al, 1
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_tu_cleanup ENDP
_TEXT	ENDS
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udbg_cleanup
_TEXT	SEGMENT
tv84 = -260						; size = 4
tv83 = -256						; size = 4
$T31470 = -248						; size = 4
$T31471 = -236						; size = 4
$T31472 = -224						; size = 4
$T31477 = -212						; size = 4
_t$24781 = -8						; size = 4
_udbg_cleanup PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 36
	cmp	DWORD PTR _strs, 0
	je	$LN5@udbg_clean
; Line 37
	mov	DWORD PTR _t$24781[ebp], 0
	jmp	SHORT $LN3@udbg_clean
$LN2@udbg_clean:
	mov	eax, DWORD PTR _t$24781[ebp]
	add	eax, 1
	mov	DWORD PTR _t$24781[ebp], eax
$LN3@udbg_clean:
	cmp	DWORD PTR _t$24781[ebp], 6
	jg	$LN1@udbg_clean
; Line 38
	mov	eax, DWORD PTR _t$24781[ebp]
	mov	ecx, DWORD PTR _strs
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR $T31472[ebp], edx
	mov	eax, DWORD PTR $T31472[ebp]
	mov	DWORD PTR $T31471[ebp], eax
	mov	ecx, DWORD PTR $T31471[ebp]
	mov	DWORD PTR $T31470[ebp], ecx
	cmp	DWORD PTR $T31470[ebp], 0
	je	SHORT $LN9@udbg_clean
	mov	edx, DWORD PTR $T31470[ebp]
	cmp	DWORD PTR [edx-4], 0
	je	SHORT $LN7@udbg_clean
	mov	esi, esp
	push	3
	mov	eax, DWORD PTR $T31471[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR $T31471[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN8@udbg_clean
$LN7@udbg_clean:
	mov	ecx, DWORD PTR $T31470[ebp]
	sub	ecx, 4
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	DWORD PTR tv83[ebp], 0
$LN8@udbg_clean:
	mov	edx, DWORD PTR tv83[ebp]
	mov	DWORD PTR tv84[ebp], edx
	jmp	SHORT $LN10@udbg_clean
$LN9@udbg_clean:
	mov	DWORD PTR tv84[ebp], 0
$LN10@udbg_clean:
; Line 39
	jmp	$LN2@udbg_clean
$LN1@udbg_clean:
; Line 40
	mov	eax, DWORD PTR _strs
	mov	DWORD PTR $T31477[ebp], eax
	mov	ecx, DWORD PTR $T31477[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 41
	mov	DWORD PTR _strs, 0
$LN5@udbg_clean:
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udbg_cleanup ENDP
_TEXT	ENDS
PUBLIC	??_SUnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`local vftable'
PUBLIC	??_R4UnicodeString@icu_56@@6B@			; icu_56::UnicodeString::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
PUBLIC	??_R3UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UnicodeString@icu_56@@8			; icu_56::UnicodeString::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UnicodeString@icu_56@@8		; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Replaceable@icu_56@@8		; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReplaceable@icu_56@@@8			; icu_56::Replaceable `RTTI Type Descriptor'
PUBLIC	??_R3Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Replaceable@icu_56@@8			; icu_56::Replaceable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ:PROC ; icu_56::UnicodeString::getDynamicClassID
EXTRN	?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z:PROC ; icu_56::UnicodeString::extractBetween
EXTRN	?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z:PROC ; icu_56::UnicodeString::handleReplaceBetween
EXTRN	?copy@UnicodeString@icu_56@@UAEXHHH@Z:PROC	; icu_56::UnicodeString::copy
EXTRN	?hasMetaData@UnicodeString@icu_56@@UBECXZ:PROC	; icu_56::UnicodeString::hasMetaData
EXTRN	?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC ; icu_56::UnicodeString::clone
EXTRN	?getLength@UnicodeString@icu_56@@MBEHXZ:PROC	; icu_56::UnicodeString::getLength
EXTRN	?getCharAt@UnicodeString@icu_56@@MBE_WH@Z:PROC	; icu_56::UnicodeString::getCharAt
EXTRN	?getChar32At@UnicodeString@icu_56@@MBEHH@Z:PROC	; icu_56::UnicodeString::getChar32At
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R2Replaceable@icu_56@@8 DD FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8 ; icu_56::Replaceable::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R3Replaceable@icu_56@@8 DD 00H			; icu_56::Replaceable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReplaceable@icu_56@@@8
_DATA	SEGMENT
??_R0?AVReplaceable@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::Replaceable `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVReplaceable@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@Replaceable@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Replaceable@icu_56@@8 DD FLAT:??_R0?AVReplaceable@icu_56@@@8 ; icu_56::Replaceable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Replaceable@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UnicodeString@icu_56@@8 DD FLAT:??_R0?AVUnicodeString@icu_56@@@8 ; icu_56::UnicodeString::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R2UnicodeString@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UnicodeString@icu_56@@8 ; icu_56::UnicodeString::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Replaceable@icu_56@@8
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UnicodeString@icu_56@@8
rdata$r	SEGMENT
??_R3UnicodeString@icu_56@@8 DD 00H			; icu_56::UnicodeString::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UnicodeString@icu_56@@6B@
rdata$r	SEGMENT
??_R4UnicodeString@icu_56@@6B@ DD 00H			; icu_56::UnicodeString::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUnicodeString@icu_56@@@8
	DD	FLAT:??_R3UnicodeString@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_SUnicodeString@icu_56@@6B@
CONST	SEGMENT
??_SUnicodeString@icu_56@@6B@ DD FLAT:??_R4UnicodeString@icu_56@@6B@ ; icu_56::UnicodeString::`local vftable'
	DD	FLAT:??_EUnicodeString@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UnicodeString@icu_56@@UBEPAXXZ
	DD	FLAT:?extractBetween@UnicodeString@icu_56@@UBEXHHAAV12@@Z
	DD	FLAT:?handleReplaceBetween@UnicodeString@icu_56@@UAEXHHABV12@@Z
	DD	FLAT:?copy@UnicodeString@icu_56@@UAEXHHH@Z
	DD	FLAT:?hasMetaData@UnicodeString@icu_56@@UBECXZ
	DD	FLAT:?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	DD	FLAT:?getLength@UnicodeString@icu_56@@MBEHXZ
	DD	FLAT:?getCharAt@UnicodeString@icu_56@@MBE_WH@Z
	DD	FLAT:?getChar32At@UnicodeString@icu_56@@MBEHH@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??_TUnicodeString@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_TUnicodeString@icu_56@@QAEXXZ PROC			; icu_56::UnicodeString::`local vftable constructor closure', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_SUnicodeString@icu_56@@6B@
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_TUnicodeString@icu_56@@QAEXXZ ENDP			; icu_56::UnicodeString::`local vftable constructor closure'
_TEXT	ENDS
PUBLIC	_udbg_enumByString
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udbg_enumByString
_TEXT	SEGMENT
_i$24852 = -8						; size = 4
_type$ = 8						; size = 4
_string$ = 12						; size = 4
_udbg_enumByString PROC					; COMDAT
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	cmp	DWORD PTR _type$[ebp], 0
	jl	SHORT $LN5@udbg_enumB
	cmp	DWORD PTR _type$[ebp], 6
	jl	SHORT $LN6@udbg_enumB
$LN5@udbg_enumB:
; Line 98
	or	eax, -1
	jmp	SHORT $LN7@udbg_enumB
$LN6@udbg_enumB:
; Line 101
	push	0
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	?udbg_enumString@@YAABVUnicodeString@icu_56@@W4UDebugEnumType@@H@Z ; udbg_enumString
	add	esp, 8
; Line 104
	mov	DWORD PTR _i$24852[ebp], 0
	jmp	SHORT $LN4@udbg_enumB
$LN3@udbg_enumB:
	mov	eax, DWORD PTR _i$24852[ebp]
	add	eax, 1
	mov	DWORD PTR _i$24852[ebp], eax
$LN4@udbg_enumB:
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_udbg_enumCount
	add	esp, 4
	cmp	DWORD PTR _i$24852[ebp], eax
	jge	SHORT $LN2@udbg_enumB
; Line 106
	mov	eax, DWORD PTR _i$24852[ebp]
	shl	eax, 6
	mov	ecx, DWORD PTR _type$[ebp]
	mov	edx, DWORD PTR _strs
	add	eax, DWORD PTR [edx+ecx*4]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _string$[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@udbg_enumB
; Line 107
	mov	eax, DWORD PTR _i$24852[ebp]
	jmp	SHORT $LN7@udbg_enumB
$LN1@udbg_enumB:
; Line 109
	jmp	SHORT $LN3@udbg_enumB
$LN2@udbg_enumB:
; Line 110
	or	eax, -1
$LN7@udbg_enumB:
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udbg_enumByString ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_udbg_stoi
EXTRN	__imp__atoi:PROC
EXTRN	_u_UCharsToChars_56:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udbg_stoi
_TEXT	SEGMENT
_len$ = -288						; size = 4
_u$ = -276						; size = 4
_ch$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_udbg_stoi PROC						; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 118
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u$[ebp], eax
; Line 119
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 120
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 121
	mov	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR _ch$[ebp+eax], 0
; Line 122
	mov	esi, esp
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	DWORD PTR __imp__atoi
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 123
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@udbg_stoi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@udbg_stoi:
	DD	1
	DD	$LN4@udbg_stoi
$LN4@udbg_stoi:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN3@udbg_stoi
$LN3@udbg_stoi:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_udbg_stoi ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_udbg_stod
EXTRN	__imp__atof:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _udbg_stod
_TEXT	SEGMENT
_len$ = -288						; size = 4
_u$ = -276						; size = 4
_ch$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
_s$ = 8							; size = 4
_udbg_stod PROC						; COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 130
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QBEPB_WXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _u$[ebp], eax
; Line 131
	mov	esi, esp
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _u$[ebp]
	push	edx
	call	_u_UCharsToChars_56
	add	esp, 12					; 0000000cH
; Line 133
	mov	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR _ch$[ebp+eax], 0
; Line 134
	mov	esi, esp
	lea	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	DWORD PTR __imp__atof
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@udbg_stod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@udbg_stod:
	DD	1
	DD	$LN4@udbg_stod
$LN4@udbg_stod:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN3@udbg_stod
$LN3@udbg_stod:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_udbg_stod ENDP
_TEXT	ENDS
PUBLIC	??_C@_01LBDDMOBJ@?$FN?$AA@			; `string'
PUBLIC	??_C@_01OHGJGJJP@?$FL?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_udbg_escape
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z:PROC
EXTRN	__imp_?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z:PROC
EXTRN	__imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp_?isUnprintable@ICU_Utility@icu_56@@SACH@Z:PROC
EXTRN	__imp_??AUnicodeString@icu_56@@QBE_WH@Z:PROC
;	COMDAT ??_C@_01LBDDMOBJ@?$FN?$AA@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN?$AA@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OHGJGJJP@?$FL?$AA@
CONST	SEGMENT
??_C@_01OHGJGJJP@?$FL?$AA@ DB '[', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _udbg_escape
_TEXT	SEGMENT
$T24879 = -360						; size = 64
$T24881 = -288						; size = 64
_c$24877 = -24						; size = 2
_i$24873 = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_src$ = 8						; size = 4
_dst$ = 12						; size = 4
_udbg_escape PROC					; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 140
	mov	esi, esp
	mov	ecx, DWORD PTR _dst$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 141
	mov	DWORD PTR _i$24873[ebp], 0
	jmp	SHORT $LN5@udbg_escap
$LN4@udbg_escap:
	mov	eax, DWORD PTR _i$24873[ebp]
	add	eax, 1
	mov	DWORD PTR _i$24873[ebp], eax
$LN5@udbg_escap:
	mov	esi, esp
	mov	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$24873[ebp], eax
	jge	$LN3@udbg_escap
; Line 142
	mov	esi, esp
	mov	eax, DWORD PTR _i$24873[ebp]
	push	eax
	mov	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??AUnicodeString@icu_56@@QBE_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _c$24877[ebp], ax
; Line 143
	movzx	eax, WORD PTR _c$24877[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_?isUnprintable@ICU_Utility@icu_56@@SACH@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN2@udbg_escap
; Line 144
	mov	esi, esp
	push	OFFSET ??_C@_01OHGJGJJP@?$FL?$AA@
	lea	ecx, DWORD PTR $T24879[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR $T24879[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 145
	movzx	eax, WORD PTR _c$24877[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	push	ecx
	call	DWORD PTR __imp_?escapeUnprintable@ICU_Utility@icu_56@@SACAAVUnicodeString@2@H@Z
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	mov	esi, esp
	push	OFFSET ??_C@_01LBDDMOBJ@?$FN?$AA@
	lea	ecx, DWORD PTR $T24881[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	lea	ecx, DWORD PTR $T24881[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 148
	jmp	SHORT $LN1@udbg_escap
$LN2@udbg_escap:
; Line 149
	mov	esi, esp
	movzx	eax, WORD PTR _c$24877[ebp]
	push	eax
	mov	ecx, DWORD PTR _dst$[ebp]
	call	DWORD PTR __imp_??YUnicodeString@icu_56@@QAEAAV01@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@udbg_escap:
; Line 151
	jmp	$LN4@udbg_escap
$LN3@udbg_escap:
; Line 153
	mov	eax, DWORD PTR _dst$[ebp]
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_udbg_escape ENDP
_TEXT	ENDS
END

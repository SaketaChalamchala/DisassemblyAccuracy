; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\denseranges.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	?gapStart@LargestGaps@?A0x2c42d6c1@@QBEHH@Z	; `anonymous namespace'::LargestGaps::gapStart
PUBLIC	?firstAfter@LargestGaps@?A0x2c42d6c1@@QBEHH@Z	; `anonymous namespace'::LargestGaps::firstAfter
PUBLIC	?truncate@LargestGaps@?A0x2c42d6c1@@QAEXH@Z	; `anonymous namespace'::LargestGaps::truncate
PUBLIC	?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z	; `anonymous namespace'::LargestGaps::gapLength
PUBLIC	?count@LargestGaps@?A0x2c42d6c1@@QBEHXZ		; `anonymous namespace'::LargestGaps::count
PUBLIC	?add@LargestGaps@?A0x2c42d6c1@@QAEXH_J@Z	; `anonymous namespace'::LargestGaps::add
PUBLIC	??0LargestGaps@?A0x2c42d6c1@@QAE@H@Z		; `anonymous namespace'::LargestGaps::LargestGaps
PUBLIC	__$ArrayPad$
PUBLIC	_uprv_makeDenseRanges
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\toolutil\denseranges.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _uprv_makeDenseRanges
_TEXT	SEGMENT
tv330 = -524						; size = 8
tv234 = -524						; size = 8
tv327 = -516						; size = 8
tv231 = -516						; size = 8
_gapStart$837 = -312					; size = 4
_gapIndex$836 = -300					; size = 4
_num$ = -288						; size = 4
_actualValue$823 = -276					; size = 4
_expectedValue$ = -264					; size = 4
_i$ = -252						; size = 4
_gaps$ = -240						; size = 192
_maxLength$ = -40					; size = 8
_maxValue$ = -24					; size = 4
_minValue$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_values$ = 8						; size = 4
_length$ = 12						; size = 4
_density$ = 16						; size = 4
_ranges$ = 20						; size = 4
_capacity$ = 24						; size = 4
_uprv_makeDenseRanges PROC				; COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-524]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 102
	cmp	DWORD PTR _length$[ebp], 2
	jg	SHORT $LN15@uprv_makeD
; Line 103
	xor	eax, eax
	jmp	$LN16@uprv_makeD
$LN15@uprv_makeD:
; Line 105
	mov	eax, DWORD PTR _values$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _minValue$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _values$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4-4]
	mov	DWORD PTR _maxValue$[ebp], edx
; Line 109
	mov	eax, DWORD PTR _maxValue$[ebp]
	cdq
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _minValue$[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	add	ecx, 1
	adc	esi, 0
	mov	DWORD PTR _maxLength$[ebp], ecx
	mov	DWORD PTR _maxLength$[ebp+4], esi
; Line 110
	mov	eax, DWORD PTR _length$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _density$[ebp]
	cdq
	mov	ecx, DWORD PTR _maxLength$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _maxLength$[ebp]
	push	ecx
	push	edx
	push	eax
	call	__allmul
	push	0
	push	256					; 00000100H
	push	edx
	push	eax
	call	__alldiv
	mov	DWORD PTR tv231[ebp], esi
	mov	DWORD PTR tv231[ebp+4], edi
	mov	DWORD PTR tv234[ebp], eax
	mov	DWORD PTR tv234[ebp+4], edx
	mov	edx, DWORD PTR tv231[ebp+4]
	cmp	edx, DWORD PTR tv234[ebp+4]
	jl	SHORT $LN14@uprv_makeD
	jg	SHORT $LN18@uprv_makeD
	mov	eax, DWORD PTR tv231[ebp]
	cmp	eax, DWORD PTR tv234[ebp]
	jb	SHORT $LN14@uprv_makeD
$LN18@uprv_makeD:
; Line 112
	mov	eax, DWORD PTR _ranges$[ebp]
	mov	ecx, DWORD PTR _minValue$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 113
	mov	eax, DWORD PTR _ranges$[ebp]
	mov	ecx, DWORD PTR _maxValue$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 114
	mov	eax, 1
	jmp	$LN16@uprv_makeD
$LN14@uprv_makeD:
; Line 116
	cmp	DWORD PTR _length$[ebp], 4
	jg	SHORT $LN13@uprv_makeD
; Line 117
	xor	eax, eax
	jmp	$LN16@uprv_makeD
$LN13@uprv_makeD:
; Line 121
	mov	eax, DWORD PTR _capacity$[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	??0LargestGaps@?A0x2c42d6c1@@QAE@H@Z	; `anonymous namespace'::LargestGaps::LargestGaps
; Line 123
	mov	eax, DWORD PTR _minValue$[ebp]
	mov	DWORD PTR _expectedValue$[ebp], eax
; Line 124
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN12@uprv_makeD
$LN11@uprv_makeD:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@uprv_makeD:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _length$[ebp]
	jge	SHORT $LN10@uprv_makeD
; Line 125
	mov	eax, DWORD PTR _expectedValue$[ebp]
	add	eax, 1
	mov	DWORD PTR _expectedValue$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _values$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _actualValue$823[ebp], edx
; Line 127
	mov	eax, DWORD PTR _expectedValue$[ebp]
	cmp	eax, DWORD PTR _actualValue$823[ebp]
	je	SHORT $LN9@uprv_makeD
; Line 128
	mov	eax, DWORD PTR _actualValue$823[ebp]
	cdq
	mov	ecx, eax
	mov	esi, edx
	mov	eax, DWORD PTR _expectedValue$[ebp]
	cdq
	sub	ecx, eax
	sbb	esi, edx
	push	esi
	push	ecx
	mov	edx, DWORD PTR _expectedValue$[ebp]
	push	edx
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?add@LargestGaps@?A0x2c42d6c1@@QAEXH_J@Z ; `anonymous namespace'::LargestGaps::add
; Line 129
	mov	eax, DWORD PTR _actualValue$823[ebp]
	mov	DWORD PTR _expectedValue$[ebp], eax
$LN9@uprv_makeD:
; Line 131
	jmp	$LN11@uprv_makeD
$LN10@uprv_makeD:
; Line 136
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _num$[ebp], 2
	jmp	SHORT $LN8@uprv_makeD
$LN7@uprv_makeD:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _num$[ebp]
	add	ecx, 1
	mov	DWORD PTR _num$[ebp], ecx
$LN8@uprv_makeD:
; Line 137
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?count@LargestGaps@?A0x2c42d6c1@@QBEHXZ	; `anonymous namespace'::LargestGaps::count
	cmp	DWORD PTR _i$[ebp], eax
	jl	SHORT $LN5@uprv_makeD
; Line 140
	xor	eax, eax
	jmp	$LN16@uprv_makeD
$LN5@uprv_makeD:
; Line 142
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z ; `anonymous namespace'::LargestGaps::gapLength
	mov	ecx, DWORD PTR _maxLength$[ebp]
	sub	ecx, eax
	mov	eax, DWORD PTR _maxLength$[ebp+4]
	sbb	eax, edx
	mov	DWORD PTR _maxLength$[ebp], ecx
	mov	DWORD PTR _maxLength$[ebp+4], eax
; Line 143
	mov	eax, DWORD PTR _num$[ebp]
	shl	eax, 1
	cmp	DWORD PTR _length$[ebp], eax
	jle	SHORT $LN4@uprv_makeD
	mov	eax, DWORD PTR _length$[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _density$[ebp]
	cdq
	mov	ecx, DWORD PTR _maxLength$[ebp+4]
	push	ecx
	mov	ecx, DWORD PTR _maxLength$[ebp]
	push	ecx
	push	edx
	push	eax
	call	__allmul
	push	0
	push	256					; 00000100H
	push	edx
	push	eax
	call	__alldiv
	mov	DWORD PTR tv327[ebp], esi
	mov	DWORD PTR tv327[ebp+4], edi
	mov	DWORD PTR tv330[ebp], eax
	mov	DWORD PTR tv330[ebp+4], edx
	mov	edx, DWORD PTR tv327[ebp+4]
	cmp	edx, DWORD PTR tv330[ebp+4]
	jl	SHORT $LN4@uprv_makeD
	jg	SHORT $LN19@uprv_makeD
	mov	eax, DWORD PTR tv327[ebp]
	cmp	eax, DWORD PTR tv330[ebp]
	jb	SHORT $LN4@uprv_makeD
$LN19@uprv_makeD:
; Line 144
	jmp	SHORT $LN6@uprv_makeD
$LN4@uprv_makeD:
; Line 146
	jmp	$LN7@uprv_makeD
$LN6@uprv_makeD:
; Line 148
	mov	eax, DWORD PTR _num$[ebp]
	sub	eax, 1
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?truncate@LargestGaps@?A0x2c42d6c1@@QAEXH@Z ; `anonymous namespace'::LargestGaps::truncate
; Line 149
	mov	eax, DWORD PTR _ranges$[ebp]
	mov	ecx, DWORD PTR _minValue$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 150
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@uprv_makeD
$LN2@uprv_makeD:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@uprv_makeD:
	mov	eax, DWORD PTR _num$[ebp]
	sub	eax, 2
	cmp	DWORD PTR _i$[ebp], eax
	jg	SHORT $LN1@uprv_makeD
; Line 151
	mov	eax, DWORD PTR _minValue$[ebp]
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?firstAfter@LargestGaps@?A0x2c42d6c1@@QBEHH@Z ; `anonymous namespace'::LargestGaps::firstAfter
	mov	DWORD PTR _gapIndex$836[ebp], eax
; Line 152
	mov	eax, DWORD PTR _gapIndex$836[ebp]
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?gapStart@LargestGaps@?A0x2c42d6c1@@QBEHH@Z ; `anonymous namespace'::LargestGaps::gapStart
	mov	DWORD PTR _gapStart$837[ebp], eax
; Line 153
	mov	eax, DWORD PTR _gapStart$837[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ranges$[ebp]
	mov	DWORD PTR [edx+ecx*8+4], eax
; Line 154
	mov	eax, DWORD PTR _gapStart$837[ebp]
	cdq
	mov	esi, eax
	mov	edi, edx
	mov	eax, DWORD PTR _gapIndex$836[ebp]
	push	eax
	lea	ecx, DWORD PTR _gaps$[ebp]
	call	?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z ; `anonymous namespace'::LargestGaps::gapLength
	add	esi, eax
	adc	edi, edx
	mov	DWORD PTR _minValue$[ebp], esi
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ranges$[ebp]
	mov	eax, DWORD PTR _minValue$[ebp]
	mov	DWORD PTR [edx+ecx*8+8], eax
; Line 155
	jmp	$LN2@uprv_makeD
$LN1@uprv_makeD:
; Line 156
	mov	eax, DWORD PTR _num$[ebp]
	mov	ecx, DWORD PTR _ranges$[ebp]
	mov	edx, DWORD PTR _maxValue$[ebp]
	mov	DWORD PTR [ecx+eax*8-4], edx
; Line 157
	mov	eax, DWORD PTR _num$[ebp]
$LN16@uprv_makeD:
; Line 158
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@uprv_makeD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 524				; 0000020cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@uprv_makeD:
	DD	1
	DD	$LN21@uprv_makeD
$LN21@uprv_makeD:
	DD	-240					; ffffff10H
	DD	192					; 000000c0H
	DD	$LN20@uprv_makeD
$LN20@uprv_makeD:
	DB	103					; 00000067H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
_uprv_makeDenseRanges ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0LargestGaps@?A0x2c42d6c1@@QAE@H@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
_this$ = -8						; size = 4
_max$ = 8						; size = 4
??0LargestGaps@?A0x2c42d6c1@@QAE@H@Z PROC		; `anonymous namespace'::LargestGaps::LargestGaps, COMDAT
; _this$ = ecx
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	cmp	DWORD PTR _max$[ebp], 15		; 0000000fH
	jg	SHORT $LN3@LargestGap
	mov	eax, DWORD PTR _max$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@LargestGap
$LN3@LargestGap:
	mov	DWORD PTR tv65[ebp], 15			; 0000000fH
$LN4@LargestGap:
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0LargestGaps@?A0x2c42d6c1@@QAE@H@Z ENDP		; `anonymous namespace'::LargestGaps::LargestGaps
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?add@LargestGaps@?A0x2c42d6c1@@QAEXH_J@Z
_TEXT	SEGMENT
tv142 = -236						; size = 4
tv141 = -232						; size = 4
tv80 = -232						; size = 4
_j$778 = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_gapStart$ = 8						; size = 4
_gapLength$ = 12					; size = 8
?add@LargestGaps@?A0x2c42d6c1@@QAEXH_J@Z PROC		; `anonymous namespace'::LargestGaps::add, COMDAT
; _this$ = ecx
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _i$[ebp], ecx
$LN5@add:
; Line 32
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN4@add
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv141[ebp], ecx
	mov	DWORD PTR tv142[ebp], eax
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR tv141[ebp]
	mov	ecx, DWORD PTR _gapLength$[ebp+4]
	cmp	ecx, DWORD PTR [eax+edx*8+68]
	jl	SHORT $LN4@add
	jg	SHORT $LN10@add
	mov	edx, DWORD PTR tv142[ebp]
	mov	eax, DWORD PTR tv141[ebp]
	mov	ecx, DWORD PTR _gapLength$[ebp]
	cmp	ecx, DWORD PTR [eax+edx*8+64]
	jbe	SHORT $LN4@add
$LN10@add:
; Line 33
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 34
	jmp	SHORT $LN5@add
$LN4@add:
; Line 35
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	$LN6@add
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN8@add
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	jmp	SHORT $LN9@add
$LN8@add:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	sub	eax, 1
	mov	DWORD PTR tv80[ebp], eax
$LN9@add:
	mov	ecx, DWORD PTR tv80[ebp]
	mov	DWORD PTR _j$778[ebp], ecx
$LN2@add:
; Line 40
	mov	eax, DWORD PTR _j$778[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jle	SHORT $LN1@add
; Line 41
	mov	eax, DWORD PTR _j$778[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _j$778[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+4]
	mov	DWORD PTR [ecx+eax*4+8], edx
; Line 42
	mov	eax, DWORD PTR _j$778[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _j$778[ebp]
	mov	esi, DWORD PTR _this$[ebp]
	mov	edi, DWORD PTR [esi+edx*8+64]
	mov	DWORD PTR [ecx+eax*8+72], edi
	mov	edx, DWORD PTR [esi+edx*8+68]
	mov	DWORD PTR [ecx+eax*8+76], edx
; Line 43
	mov	eax, DWORD PTR _j$778[ebp]
	sub	eax, 1
	mov	DWORD PTR _j$778[ebp], eax
; Line 44
	jmp	SHORT $LN2@add
$LN1@add:
; Line 45
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _gapStart$[ebp]
	mov	DWORD PTR [ecx+eax*4+8], edx
; Line 46
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _gapLength$[ebp]
	mov	DWORD PTR [ecx+eax*8+72], edx
	mov	edx, DWORD PTR _gapLength$[ebp+4]
	mov	DWORD PTR [ecx+eax*8+76], edx
$LN6@add:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?add@LargestGaps@?A0x2c42d6c1@@QAEXH_J@Z ENDP		; `anonymous namespace'::LargestGaps::add
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?truncate@LargestGaps@?A0x2c42d6c1@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_newLength$ = 8						; size = 4
?truncate@LargestGaps@?A0x2c42d6c1@@QAEXH@Z PROC	; `anonymous namespace'::LargestGaps::truncate, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLength$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN2@truncate
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newLength$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN2@truncate:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?truncate@LargestGaps@?A0x2c42d6c1@@QAEXH@Z ENDP	; `anonymous namespace'::LargestGaps::truncate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?count@LargestGaps@?A0x2c42d6c1@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?count@LargestGaps@?A0x2c42d6c1@@QBEHXZ PROC		; `anonymous namespace'::LargestGaps::count, COMDAT
; _this$ = ecx
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?count@LargestGaps@?A0x2c42d6c1@@QBEHXZ ENDP		; `anonymous namespace'::LargestGaps::count
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?gapStart@LargestGaps@?A0x2c42d6c1@@QBEHH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?gapStart@LargestGaps@?A0x2c42d6c1@@QBEHH@Z PROC	; `anonymous namespace'::LargestGaps::gapStart, COMDAT
; _this$ = ecx
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?gapStart@LargestGaps@?A0x2c42d6c1@@QBEHH@Z ENDP	; `anonymous namespace'::LargestGaps::gapStart
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z PROC	; `anonymous namespace'::LargestGaps::gapLength, COMDAT
; _this$ = ecx
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+72]
	mov	edx, DWORD PTR [edx+ecx*8+76]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?gapLength@LargestGaps@?A0x2c42d6c1@@QBE_JH@Z ENDP	; `anonymous namespace'::LargestGaps::gapLength
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?firstAfter@LargestGaps@?A0x2c42d6c1@@QBEHH@Z
_TEXT	SEGMENT
_i$796 = -44						; size = 4
_minIndex$ = -32					; size = 4
_minValue$ = -20					; size = 4
_this$ = -8						; size = 4
_value$ = 8						; size = 4
?firstAfter@LargestGaps@?A0x2c42d6c1@@QBEHH@Z PROC	; `anonymous namespace'::LargestGaps::firstAfter, COMDAT
; _this$ = ecx
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN6@firstAfter
; Line 62
	or	eax, -1
	jmp	SHORT $LN7@firstAfter
$LN6@firstAfter:
; Line 64
	mov	DWORD PTR _minValue$[ebp], 0
; Line 65
	mov	DWORD PTR _minIndex$[ebp], -1
; Line 66
	mov	DWORD PTR _i$796[ebp], 0
	jmp	SHORT $LN5@firstAfter
$LN4@firstAfter:
	mov	eax, DWORD PTR _i$796[ebp]
	add	eax, 1
	mov	DWORD PTR _i$796[ebp], eax
$LN5@firstAfter:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$796[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN3@firstAfter
; Line 67
	mov	eax, DWORD PTR _i$796[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	cmp	edx, DWORD PTR [ecx+eax*4+8]
	jge	SHORT $LN2@firstAfter
	cmp	DWORD PTR _minIndex$[ebp], 0
	jl	SHORT $LN1@firstAfter
	mov	eax, DWORD PTR _i$796[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	cmp	edx, DWORD PTR _minValue$[ebp]
	jge	SHORT $LN2@firstAfter
$LN1@firstAfter:
; Line 68
	mov	eax, DWORD PTR _i$796[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	mov	DWORD PTR _minValue$[ebp], edx
; Line 69
	mov	eax, DWORD PTR _i$796[ebp]
	mov	DWORD PTR _minIndex$[ebp], eax
$LN2@firstAfter:
; Line 71
	jmp	SHORT $LN4@firstAfter
$LN3@firstAfter:
; Line 72
	mov	eax, DWORD PTR _minIndex$[ebp]
$LN7@firstAfter:
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?firstAfter@LargestGaps@?A0x2c42d6c1@@QBEHH@Z ENDP	; `anonymous namespace'::LargestGaps::firstAfter
_TEXT	ENDS
END

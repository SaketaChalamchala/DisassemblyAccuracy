; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\pkg_gencmn.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_stringTop DD	01H DUP (?)
_basenameTotal DD 01H DUP (?)
_files	DD	01H DUP (?)
_fileCount DD	01H DUP (?)
_fileMax DD	01H DUP (?)
_symPrefix DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	043H
	DB	06dH
	DB	06eH
	DB	044H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
PUBLIC	??_C@_0L@DLDIFACK@?6?5?5?5?5?$HN?6?$HN?$DL?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@KGNNPFB@?0?6?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@ ; `string'
PUBLIC	??_C@_0BH@PNKMJCLL@?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@ ; `string'
PUBLIC	??_C@_0BJM@GJPIMPL@U_EXPORT?5struct?5?$HL?6?5?5?5?5uint16_t?5h@ ; `string'
PUBLIC	??_C@_03OOJDCBP@?$DL?6?6?$AA@			; `string'
PUBLIC	??_C@_0N@IOFKOLPK@?0?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@ ; `string'
PUBLIC	??_C@_0BN@KFDELHKJ@extern?5const?5char?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@ ; `string'
PUBLIC	??_C@_0OG@GNGPLPNN@?1?$CK?6?5?$CK?5ICU?5common?5data?5table?5of?5c@ ; `string'
PUBLIC	??_C@_0CK@BOPEGOAD@gencmn?3?5unable?5to?5open?5?4c?5output@ ; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_02HMLNHFGD@?4c?$AA@			; `string'
PUBLIC	??_C@_0CE@BLEKNEJI@gencmn?3?5udata_finish?$CI?$CJ?5failed?5?9?5@ ; `string'
PUBLIC	??_C@_0DJ@FEGNLBHH@gencmn?3?5unable?5to?5read?5?$CFs?5proper@ ; `string'
PUBLIC	??_C@_0CH@IDECOLPO@gencmn?3?5unable?5to?5open?5listed?5fi@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??_C@_0BI@MFFFPPLH@adding?5?$CFs?5?$CI?$CFld?5byte?$CFs?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_01LKDEMHDF@s?$AA@				; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0DF@JLCHGFIL@gencmn?3?5udata_create?$CI?9d?5?$CFs?5?9n?5?$CFs@ ; `string'
PUBLIC	??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ ; `string'
PUBLIC	??_C@_0BP@MIHEJPCE@gencmn?3?5no?5files?5listed?5in?5?$CFs?6?$AA@ ; `string'
PUBLIC	??_C@_07CMJMHHJG@?$DMstdin?$DO?$AA@		; `string'
PUBLIC	??_C@_0DM@NHKFDPA@generating?5?$CFs?4?$CFs?5?$CIcommon?5data?5fi@ ; `string'
PUBLIC	??_C@_0DE@IBAJAAFA@generating?5?$CFs_?$CFs?4c?5?$CItable?5of?5con@ ; `string'
PUBLIC	??_C@_0CG@MJCJPJMK@gencmn?3?5unable?5to?5open?5input?5fil@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_03GILJFNFC@dat?$AA@			; `string'
PUBLIC	??_C@_08LIGODKCD@icudt56l?$AA@			; `string'
PUBLIC	??_C@_0DO@NOOJLNGK@gencmn?3?5unable?5to?5allocate?5memor@ ; `string'
PUBLIC	_createCommonDataFile
EXTRN	_T_FileStream_writeLine:PROC
EXTRN	__imp__sprintf:PROC
EXTRN	_strlen:PROC
EXTRN	_strcpy:PROC
EXTRN	_udata_finish:PROC
EXTRN	_udata_writeBlock:PROC
EXTRN	_T_FileStream_read:PROC
EXTRN	_udata_writePadding:PROC
EXTRN	_udata_writeString:PROC
EXTRN	_udata_write32:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_udata_create:PROC
EXTRN	__imp__qsort:PROC
EXTRN	_T_FileStream_close:PROC
EXTRN	_uprv_free_56:PROC
EXTRN	_getLongPathname:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_T_FileStream_readLine:PROC
EXTRN	__imp__printf:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	_T_FileStream_stdin:PROC
EXTRN	_u_getDataDirectory_56:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
?buffer@?1??createCommonDataFile@@9@9 DB 01000H DUP (?)	; `createCommonDataFile'::`2'::buffer
_maxSize DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0L@DLDIFACK@?6?5?5?5?5?$HN?6?$HN?$DL?6?$AA@
; File d:\mozilla\intl\icu\source\tools\toolutil\pkg_gencmn.c
CONST	SEGMENT
??_C@_0L@DLDIFACK@?6?5?5?5?5?$HN?6?$HN?$DL?6?$AA@ DB 0aH, '    }', 0aH, '}'
	DB	';', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KGNNPFB@?0?6?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@KGNNPFB@?0?6?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@ DB ','
	DB	0aH, '        { "%s", %s%s }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PNKMJCLL@?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BH@PNKMJCLL@?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@ DB ' '
	DB	'       { "%s", %s%s }', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJM@GJPIMPL@U_EXPORT?5struct?5?$HL?6?5?5?5?5uint16_t?5h@
CONST	SEGMENT
??_C@_0BJM@GJPIMPL@U_EXPORT?5struct?5?$HL?6?5?5?5?5uint16_t?5h@ DB 'U_EXP'
	DB	'ORT struct {', 0aH, '    uint16_t headerSize;', 0aH, '    uin'
	DB	't8_t magic1, magic2;', 0aH, '    UDataInfo info;', 0aH, '    '
	DB	'char padding[%lu];', 0aH, '    uint32_t count, reserved;', 0aH
	DB	'    struct {', 0aH, '        const char *name;', 0aH, '      '
	DB	'  const void *data;', 0aH, '    } toc[%lu];', 0aH, '} U_EXPOR'
	DB	'T2 %s_dat = {', 0aH, '    32, 0xda, 0x27, {', 0aH, '        %'
	DB	'lu, 0,', 0aH, '        %u, %u, %u, 0,', 0aH, '        {0x54, '
	DB	'0x6f, 0x43, 0x50},', 0aH, '        {1, 0, 0, 0},', 0aH, '    '
	DB	'    {0, 0, 0, 0}', 0aH, '    },', 0aH, '    "", %lu, 0, {', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03OOJDCBP@?$DL?6?6?$AA@
CONST	SEGMENT
??_C@_03OOJDCBP@?$DL?6?6?$AA@ DB ';', 0aH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IOFKOLPK@?0?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@
CONST	SEGMENT
??_C@_0N@IOFKOLPK@?0?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@ DB ',', 0aH, '    %'
	DB	's%s[]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KFDELHKJ@extern?5const?5char?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@
CONST	SEGMENT
??_C@_0BN@KFDELHKJ@extern?5const?5char?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@ DB 'e'
	DB	'xtern const char', 0aH, '    %s%s[]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0OG@GNGPLPNN@?1?$CK?6?5?$CK?5ICU?5common?5data?5table?5of?5c@
CONST	SEGMENT
??_C@_0OG@GNGPLPNN@?1?$CK?6?5?$CK?5ICU?5common?5data?5table?5of?5c@ DB '/'
	DB	'*', 0aH, ' * ICU common data table of contents for %s.%s', 0aH
	DB	' * Automatically generated by icu/source/tools/gencmn/gencmn '
	DB	'.', 0aH, ' */', 0aH, 0aH, '#include "unicode/utypes.h"', 0aH, '#'
	DB	'include "unicode/udata.h"', 0aH, 0aH, '/* external symbol dec'
	DB	'larations for data (%d files) */', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BOPEGOAD@gencmn?3?5unable?5to?5open?5?4c?5output@
CONST	SEGMENT
??_C@_0CK@BOPEGOAD@gencmn?3?5unable?5to?5open?5?4c?5output@ DB 'gencmn: u'
	DB	'nable to open .c output file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HMLNHFGD@?4c?$AA@
CONST	SEGMENT
??_C@_02HMLNHFGD@?4c?$AA@ DB '.c', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@BLEKNEJI@gencmn?3?5udata_finish?$CI?$CJ?5failed?5?9?5@
CONST	SEGMENT
??_C@_0CE@BLEKNEJI@gencmn?3?5udata_finish?$CI?$CJ?5failed?5?9?5@ DB 'genc'
	DB	'mn: udata_finish() failed - %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@FEGNLBHH@gencmn?3?5unable?5to?5read?5?$CFs?5proper@
CONST	SEGMENT
??_C@_0DJ@FEGNLBHH@gencmn?3?5unable?5to?5read?5?$CFs?5proper@ DB 'gencmn:'
	DB	' unable to read %s properly (got %ld/%ld byte%s)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IDECOLPO@gencmn?3?5unable?5to?5open?5listed?5fi@
CONST	SEGMENT
??_C@_0CH@IDECOLPO@gencmn?3?5unable?5to?5open?5listed?5fi@ DB 'gencmn: un'
	DB	'able to open listed file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MFFFPPLH@adding?5?$CFs?5?$CI?$CFld?5byte?$CFs?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BI@MFFFPPLH@adding?5?$CFs?5?$CI?$CFld?5byte?$CFs?$CJ?6?$AA@ DB 'ad'
	DB	'ding %s (%ld byte%s)', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LKDEMHDF@s?$AA@
CONST	SEGMENT
??_C@_01LKDEMHDF@s?$AA@ DB 's', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@JLCHGFIL@gencmn?3?5udata_create?$CI?9d?5?$CFs?5?9n?5?$CFs@
CONST	SEGMENT
??_C@_0DF@JLCHGFIL@gencmn?3?5udata_create?$CI?9d?5?$CFs?5?9n?5?$CFs@ DB 'g'
	DB	'encmn: udata_create(-d %s -n %s -t %s) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
CONST	SEGMENT
??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@ DB ' Copy'
	DB	'right (C) 2015, International Business Machines Corporation a'
	DB	'nd others. All Rights Reserved. ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MIHEJPCE@gencmn?3?5no?5files?5listed?5in?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BP@MIHEJPCE@gencmn?3?5no?5files?5listed?5in?5?$CFs?6?$AA@ DB 'genc'
	DB	'mn: no files listed in %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07CMJMHHJG@?$DMstdin?$DO?$AA@
CONST	SEGMENT
??_C@_07CMJMHHJG@?$DMstdin?$DO?$AA@ DB '<stdin>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@NHKFDPA@generating?5?$CFs?4?$CFs?5?$CIcommon?5data?5fi@
CONST	SEGMENT
??_C@_0DM@NHKFDPA@generating?5?$CFs?4?$CFs?5?$CIcommon?5data?5fi@ DB 'gen'
	DB	'erating %s.%s (common data file with table of contents)', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@IBAJAAFA@generating?5?$CFs_?$CFs?4c?5?$CItable?5of?5con@
CONST	SEGMENT
??_C@_0DE@IBAJAAFA@generating?5?$CFs_?$CFs?4c?5?$CItable?5of?5con@ DB 'ge'
	DB	'nerating %s_%s.c (table of contents source file)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MJCJPJMK@gencmn?3?5unable?5to?5open?5input?5fil@
CONST	SEGMENT
??_C@_0CG@MJCJPJMK@gencmn?3?5unable?5to?5open?5input?5fil@ DB 'gencmn: un'
	DB	'able to open input file %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GILJFNFC@dat?$AA@
CONST	SEGMENT
??_C@_03GILJFNFC@dat?$AA@ DB 'dat', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIGODKCD@icudt56l?$AA@
CONST	SEGMENT
??_C@_08LIGODKCD@icudt56l?$AA@ DB 'icudt56l', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@NOOJLNGK@gencmn?3?5unable?5to?5allocate?5memor@
CONST	SEGMENT
??_C@_0DO@NOOJLNGK@gencmn?3?5unable?5to?5allocate?5memor@ DB 'gencmn: una'
	DB	'ble to allocate memory for line buffer of size %d', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _createCommonDataFile
_TEXT	SEGMENT
tv473 = -376						; size = 4
tv459 = -376						; size = 4
tv405 = -376						; size = 4
tv393 = -376						; size = 4
tv315 = -376						; size = 4
tv270 = -376						; size = 4
tv210 = -376						; size = 4
tv173 = -376						; size = 4
_out$6242 = -176					; size = 4
_filename$6241 = -164					; size = 4
_out$6202 = -152					; size = 4
_t$6191 = -140						; size = 4
_file$ = -128						; size = 4
_in$ = -116						; size = 4
_nread$ = -104						; size = 4
_length$ = -92						; size = 4
_basenameOffset$ = -80					; size = 4
_fileOffset$ = -68					; size = 4
_i$ = -56						; size = 4
_errorCode$ = -44					; size = 4
_s$ = -32						; size = 4
_linePtr$ = -20						; size = 4
_line$ = -8						; size = 4
_destDir$ = 8						; size = 4
_name$ = 12						; size = 4
_entrypointName$ = 16					; size = 4
_type$ = 20						; size = 4
_source$ = 24						; size = 4
_copyRight$ = 28					; size = 4
_dataFile$ = 32						; size = 4
_max_size$ = 36						; size = 4
_sourceTOC$ = 40					; size = 1
_verbose$ = 44						; size = 1
_gencmnFileName$ = 48					; size = 4
_createCommonDataFile PROC				; COMDAT
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 121
	mov	DWORD PTR _s$[ebp], 0
; Line 122
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 126
	push	512					; 00000200H
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _line$[ebp], eax
; Line 127
	cmp	DWORD PTR _line$[ebp], 0
	jne	SHORT $LN62@createComm
; Line 128
	mov	esi, esp
	push	512					; 00000200H
	push	OFFSET ??_C@_0DO@NOOJLNGK@gencmn?3?5unable?5to?5allocate?5memor@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 129
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN62@createComm:
; Line 132
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _linePtr$[ebp], eax
; Line 134
	mov	eax, DWORD PTR _max_size$[ebp]
	mov	DWORD PTR _maxSize, eax
; Line 136
	cmp	DWORD PTR _destDir$[ebp], 0
	jne	SHORT $LN61@createComm
; Line 137
	call	_u_getDataDirectory_56
	mov	DWORD PTR _destDir$[ebp], eax
$LN61@createComm:
; Line 139
	cmp	DWORD PTR _name$[ebp], 0
	jne	SHORT $LN60@createComm
; Line 140
	mov	DWORD PTR _name$[ebp], OFFSET ??_C@_08LIGODKCD@icudt56l?$AA@
$LN60@createComm:
; Line 142
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN59@createComm
; Line 143
	mov	DWORD PTR _type$[ebp], OFFSET ??_C@_03GILJFNFC@dat?$AA@
$LN59@createComm:
; Line 145
	cmp	DWORD PTR _source$[ebp], 0
	jne	SHORT $LN58@createComm
; Line 146
	mov	DWORD PTR _source$[ebp], OFFSET ??_C@_01LFCBOECM@?4?$AA@
$LN58@createComm:
; Line 149
	cmp	DWORD PTR _dataFile$[ebp], 0
	jne	SHORT $LN57@createComm
; Line 150
	call	_T_FileStream_stdin
	mov	DWORD PTR _in$[ebp], eax
; Line 151
	jmp	SHORT $LN56@createComm
$LN57@createComm:
; Line 152
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _dataFile$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _in$[ebp], eax
; Line 153
	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN56@createComm
; Line 154
	mov	esi, esp
	mov	eax, DWORD PTR _dataFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0CG@MJCJPJMK@gencmn?3?5unable?5to?5open?5input?5fil@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 155
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN56@createComm:
; Line 159
	movsx	eax, BYTE PTR _verbose$[ebp]
	test	eax, eax
	je	SHORT $LN51@createComm
; Line 160
	movsx	eax, BYTE PTR _sourceTOC$[ebp]
	test	eax, eax
	je	SHORT $LN53@createComm
; Line 161
	mov	esi, esp
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DE@IBAJAAFA@generating?5?$CFs_?$CFs?4c?5?$CItable?5of?5con@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 162
	jmp	SHORT $LN51@createComm
$LN53@createComm:
; Line 163
	mov	esi, esp
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DM@NHKFDPA@generating?5?$CFs?4?$CFs?5?$CIcommon?5data?5fi@
	call	DWORD PTR __imp__printf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN51@createComm:
; Line 169
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN48@createComm
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN49@createComm
$LN48@createComm:
	mov	eax, DWORD PTR _linePtr$[ebp]
	mov	DWORD PTR _line$[ebp], eax
	push	512					; 00000200H
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	edx, DWORD PTR _in$[ebp]
	push	edx
	call	_T_FileStream_readLine
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _s$[ebp], eax
	cmp	DWORD PTR _s$[ebp], 0
	je	$LN50@createComm
$LN49@createComm:
; Line 171
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN47@createComm
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN47@createComm
; Line 172
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _line$[ebp], eax
; Line 173
	jmp	SHORT $LN45@createComm
$LN47@createComm:
; Line 174
	mov	eax, DWORD PTR _line$[ebp]
	mov	DWORD PTR _s$[ebp], eax
$LN45@createComm:
; Line 176
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN44@createComm
; Line 177
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN43@createComm
; Line 178
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 0
; Line 179
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 180
	jmp	SHORT $LN44@createComm
	jmp	SHORT $LN42@createComm
$LN43@createComm:
; Line 181
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN40@createComm
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN42@createComm
$LN40@createComm:
; Line 182
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 0
; Line 183
	jmp	SHORT $LN44@createComm
$LN42@createComm:
; Line 185
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 186
	jmp	SHORT $LN45@createComm
$LN44@createComm:
; Line 190
	mov	eax, DWORD PTR _line$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN38@createComm
; Line 191
	jmp	$LN51@createComm
$LN38@createComm:
; Line 198
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$6191[ebp], eax
	cmp	DWORD PTR _t$6191[ebp], 0
	je	SHORT $LN37@createComm
; Line 199
	mov	eax, DWORD PTR _t$6191[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
; Line 200
	jmp	SHORT $LN38@createComm
$LN37@createComm:
; Line 203
	movzx	eax, BYTE PTR _verbose$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _sourceTOC$[ebp]
	push	ecx
	mov	edx, DWORD PTR _source$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	call	_getLongPathname
	add	esp, 4
	push	eax
	call	_addFile
	add	esp, 20					; 00000014H
; Line 204
	jmp	$LN51@createComm
$LN50@createComm:
; Line 206
	mov	eax, DWORD PTR _linePtr$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
; Line 208
	call	_T_FileStream_stdin
	cmp	DWORD PTR _in$[ebp], eax
	je	SHORT $LN36@createComm
; Line 209
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
$LN36@createComm:
; Line 212
	cmp	DWORD PTR _fileCount, 0
	jne	SHORT $LN35@createComm
; Line 213
	cmp	DWORD PTR _dataFile$[ebp], 0
	jne	SHORT $LN65@createComm
	mov	DWORD PTR tv173[ebp], OFFSET ??_C@_07CMJMHHJG@?$DMstdin?$DO?$AA@
	jmp	SHORT $LN66@createComm
$LN65@createComm:
	mov	eax, DWORD PTR _dataFile$[ebp]
	mov	DWORD PTR tv173[ebp], eax
$LN66@createComm:
	mov	esi, esp
	mov	ecx, DWORD PTR tv173[ebp]
	push	ecx
	push	OFFSET ??_C@_0BP@MIHEJPCE@gencmn?3?5no?5files?5listed?5in?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 214
	jmp	$LN64@createComm
$LN35@createComm:
; Line 218
	mov	esi, esp
	push	OFFSET _compareFiles
	push	24					; 00000018H
	mov	eax, DWORD PTR _fileCount
	push	eax
	mov	ecx, DWORD PTR _files
	push	ecx
	call	DWORD PTR __imp__qsort
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 220
	movsx	eax, BYTE PTR _sourceTOC$[ebp]
	test	eax, eax
	jne	$LN34@createComm
; Line 224
	mov	eax, DWORD PTR _fileCount
	lea	ecx, DWORD PTR [eax*8+4]
	mov	DWORD PTR _basenameOffset$[ebp], ecx
; Line 225
	mov	eax, DWORD PTR _basenameTotal
	mov	ecx, DWORD PTR _basenameOffset$[ebp]
	lea	edx, DWORD PTR [ecx+eax+15]
	and	edx, -16				; fffffff0H
	mov	DWORD PTR _fileOffset$[ebp], edx
; Line 226
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN33@createComm
$LN32@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN33@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	SHORT $LN31@createComm
; Line 227
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _fileOffset$[ebp]
	mov	DWORD PTR [ecx+eax+20], edx
; Line 228
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+16]
	add	edx, 15					; 0000000fH
	and	edx, -16				; fffffff0H
	add	edx, DWORD PTR _fileOffset$[ebp]
	mov	DWORD PTR _fileOffset$[ebp], edx
; Line 229
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _basenameOffset$[ebp]
	mov	DWORD PTR [ecx+eax+12], edx
; Line 230
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _basenameOffset$[ebp]
	add	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _basenameOffset$[ebp], edx
; Line 231
	jmp	SHORT $LN32@createComm
$LN31@createComm:
; Line 237
	cmp	DWORD PTR _copyRight$[ebp], 0
	jne	SHORT $LN67@createComm
	mov	DWORD PTR tv210[ebp], OFFSET ??_C@_0GD@IBBFEJOD@?5Copyright?5?$CIC?$CJ?52015?0?5Internation@
	jmp	SHORT $LN68@createComm
$LN67@createComm:
	mov	eax, DWORD PTR _copyRight$[ebp]
	mov	DWORD PTR tv210[ebp], eax
$LN68@createComm:
	lea	ecx, DWORD PTR _errorCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv210[ebp]
	push	edx
	push	OFFSET _dataInfo
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destDir$[ebp]
	push	edx
	call	_udata_create
	add	esp, 24					; 00000018H
	mov	DWORD PTR _out$6202[ebp], eax
; Line 238
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN30@createComm
; Line 241
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _destDir$[ebp]
	push	eax
	push	OFFSET ??_C@_0DF@JLCHGFIL@gencmn?3?5udata_create?$CI?9d?5?$CFs?5?9n?5?$CFs@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 242
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN30@createComm:
; Line 246
	mov	eax, DWORD PTR _fileCount
	push	eax
	mov	ecx, DWORD PTR _out$6202[ebp]
	push	ecx
	call	_udata_write32
	add	esp, 8
; Line 247
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN29@createComm
$LN28@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN29@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	SHORT $LN27@createComm
; Line 248
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+12]
	push	edx
	mov	eax, DWORD PTR _out$6202[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
; Line 249
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+20]
	push	edx
	mov	eax, DWORD PTR _out$6202[ebp]
	push	eax
	call	_udata_write32
	add	esp, 8
; Line 250
	jmp	SHORT $LN28@createComm
$LN27@createComm:
; Line 253
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN26@createComm
$LN25@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN26@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	SHORT $LN24@createComm
; Line 254
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+8]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+4]
	push	edx
	mov	eax, DWORD PTR _out$6202[ebp]
	push	eax
	call	_udata_writeString
	add	esp, 12					; 0000000cH
; Line 255
	jmp	SHORT $LN25@createComm
$LN24@createComm:
; Line 256
	mov	eax, DWORD PTR _fileCount
	mov	ecx, DWORD PTR _basenameTotal
	lea	edx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _length$[ebp], edx
; Line 259
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN23@createComm
$LN22@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN23@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	$LN21@createComm
; Line 261
	mov	eax, DWORD PTR _length$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _length$[ebp], eax
; Line 262
	je	SHORT $LN20@createComm
; Line 263
	mov	eax, 16					; 00000010H
	sub	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$6202[ebp]
	push	ecx
	call	_udata_writePadding
	add	esp, 8
$LN20@createComm:
; Line 266
	movsx	eax, BYTE PTR _verbose$[ebp]
	test	eax, eax
	je	SHORT $LN19@createComm
; Line 267
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	cmp	DWORD PTR [ecx+eax+16], 1
	jne	SHORT $LN69@createComm
	mov	DWORD PTR tv270[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN70@createComm
$LN69@createComm:
	mov	DWORD PTR tv270[ebp], OFFSET ??_C@_01LKDEMHDF@s?$AA@
$LN70@createComm:
	mov	esi, esp
	mov	edx, DWORD PTR tv270[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+16]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	OFFSET ??_C@_0BI@MFFFPPLH@adding?5?$CFs?5?$CI?$CFld?5byte?$CFs?$CJ?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@createComm:
; Line 271
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax
; Line 272
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN18@createComm
; Line 273
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	esi, esp
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	push	OFFSET ??_C@_0CH@IDECOLPO@gencmn?3?5unable?5to?5open?5listed?5fi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 274
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@createComm:
; Line 276
	mov	DWORD PTR _nread$[ebp], 0
$LN17@createComm:
; Line 277
	push	4096					; 00001000H
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _length$[ebp], eax
; Line 278
	cmp	DWORD PTR _length$[ebp], 0
	ja	SHORT $LN15@createComm
; Line 279
	jmp	SHORT $LN16@createComm
$LN15@createComm:
; Line 281
	mov	eax, DWORD PTR _nread$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _nread$[ebp], eax
; Line 282
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	ecx, DWORD PTR _out$6202[ebp]
	push	ecx
	call	_udata_writeBlock
	add	esp, 12					; 0000000cH
; Line 283
	jmp	SHORT $LN17@createComm
$LN16@createComm:
; Line 284
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 285
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+16]
	mov	DWORD PTR _length$[ebp], edx
; Line 287
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _nread$[ebp]
	cmp	edx, DWORD PTR [ecx+eax+16]
	je	$LN14@createComm
; Line 288
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	cmp	DWORD PTR [ecx+eax+16], 1
	jne	SHORT $LN71@createComm
	mov	DWORD PTR tv315[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
	jmp	SHORT $LN72@createComm
$LN71@createComm:
	mov	DWORD PTR tv315[ebp], OFFSET ??_C@_01LKDEMHDF@s?$AA@
$LN72@createComm:
	mov	esi, esp
	mov	edx, DWORD PTR tv315[ebp]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+eax+16]
	push	edx
	mov	eax, DWORD PTR _nread$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _files
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	push	OFFSET ??_C@_0DJ@FEGNLBHH@gencmn?3?5unable?5to?5read?5?$CFs?5proper@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 289
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@createComm:
; Line 291
	jmp	$LN22@createComm
$LN21@createComm:
; Line 294
	mov	eax, DWORD PTR _length$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _length$[ebp], eax
; Line 295
	je	SHORT $LN13@createComm
; Line 296
	mov	eax, 16					; 00000010H
	sub	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$6202[ebp]
	push	ecx
	call	_udata_writePadding
	add	esp, 8
$LN13@createComm:
; Line 300
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$6202[ebp]
	push	ecx
	call	_udata_finish
	add	esp, 8
; Line 301
	cmp	DWORD PTR _errorCode$[ebp], 0
	jle	SHORT $LN12@createComm
; Line 302
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CE@BLEKNEJI@gencmn?3?5udata_finish?$CI?$CJ?5failed?5?9?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 303
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@createComm:
; Line 305
	jmp	$LN64@createComm
$LN34@createComm:
; Line 311
	mov	DWORD PTR _s$[ebp], OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _filename$6241[ebp], eax
; Line 312
	mov	eax, DWORD PTR _destDir$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$6241[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 313
	mov	eax, DWORD PTR _filename$6241[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _filename$6241[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 314
	mov	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _filename$6241[ebp]
	jbe	SHORT $LN10@createComm
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN10@createComm
; Line 315
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN10@createComm:
; Line 317
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 318
	mov	eax, DWORD PTR _type$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN9@createComm
; Line 319
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 320
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 95			; 0000005fH
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN9@createComm:
; Line 323
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 324
	push	OFFSET ??_C@_02HMLNHFGD@?4c?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 327
	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _filename$6241[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _out$6242[ebp], eax
; Line 328
	cmp	DWORD PTR _gencmnFileName$[ebp], 0
	je	SHORT $LN8@createComm
; Line 329
	mov	eax, DWORD PTR _filename$6241[ebp]
	push	eax
	mov	ecx, DWORD PTR _gencmnFileName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
$LN8@createComm:
; Line 331
	cmp	DWORD PTR _out$6242[ebp], 0
	jne	SHORT $LN7@createComm
; Line 332
	mov	esi, esp
	mov	eax, DWORD PTR _filename$6241[ebp]
	push	eax
	push	OFFSET ??_C@_0CK@BOPEGOAD@gencmn?3?5unable?5to?5open?5?4c?5output@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 333
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@createComm:
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _fileCount
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	push	OFFSET ??_C@_0OG@GNGPLPNN@?1?$CK?6?5?$CK?5ICU?5common?5data?5table?5of?5c@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 349
	cmp	DWORD PTR _symPrefix, 0
	je	SHORT $LN73@createComm
	mov	eax, DWORD PTR _symPrefix
	mov	DWORD PTR tv393[ebp], eax
	jmp	SHORT $LN74@createComm
$LN73@createComm:
	mov	DWORD PTR tv393[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN74@createComm:
	mov	esi, esp
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR tv393[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@KFDELHKJ@extern?5const?5char?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 350
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 351
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN6@createComm
$LN5@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	SHORT $LN4@createComm
; Line 352
	cmp	DWORD PTR _symPrefix, 0
	je	SHORT $LN75@createComm
	mov	eax, DWORD PTR _symPrefix
	mov	DWORD PTR tv405[ebp], eax
	jmp	SHORT $LN76@createComm
$LN75@createComm:
	mov	DWORD PTR tv405[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN76@createComm:
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 24					; 00000018H
	mov	esi, esp
	mov	edx, DWORD PTR _files
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	mov	ecx, DWORD PTR tv405[ebp]
	push	ecx
	push	OFFSET ??_C@_0N@IOFKOLPK@?0?6?5?5?5?5?$CFs?$CFs?$FL?$FN?$AA@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 353
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 354
	jmp	SHORT $LN5@createComm
$LN4@createComm:
; Line 355
	push	OFFSET ??_C@_03OOJDCBP@?$DL?6?6?$AA@
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 386
	mov	esi, esp
	mov	eax, DWORD PTR _fileCount
	push	eax
	push	2
	push	0
	push	0
	push	20					; 00000014H
	mov	ecx, DWORD PTR _entrypointName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fileCount
	push	edx
	push	8
	push	OFFSET ??_C@_0BJM@GJPIMPL@U_EXPORT?5struct?5?$HL?6?5?5?5?5uint16_t?5h@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 387
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 389
	cmp	DWORD PTR _symPrefix, 0
	je	SHORT $LN77@createComm
	mov	eax, DWORD PTR _symPrefix
	mov	DWORD PTR tv459[ebp], eax
	jmp	SHORT $LN78@createComm
$LN77@createComm:
	mov	DWORD PTR tv459[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN78@createComm:
	mov	esi, esp
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR tv459[ebp]
	push	eax
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_0BH@PNKMJCLL@?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 390
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 391
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN3@createComm
$LN2@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@createComm:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fileCount
	jae	SHORT $LN1@createComm
; Line 392
	cmp	DWORD PTR _symPrefix, 0
	je	SHORT $LN79@createComm
	mov	eax, DWORD PTR _symPrefix
	mov	DWORD PTR tv473[ebp], eax
	jmp	SHORT $LN80@createComm
$LN79@createComm:
	mov	DWORD PTR tv473[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
$LN80@createComm:
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 24					; 00000018H
	mov	esi, esp
	mov	edx, DWORD PTR _files
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	mov	ecx, DWORD PTR tv473[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	imul	edx, 24					; 00000018H
	mov	eax, DWORD PTR _files
	mov	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	push	OFFSET ??_C@_0BJ@KGNNPFB@?0?6?5?5?5?5?5?5?5?5?$HL?5?$CC?$CFs?$CC?0?5?$CFs?$CFs?5?$HN?$AA@
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	call	DWORD PTR __imp__sprintf
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 393
	push	OFFSET ?buffer@?1??createCommonDataFile@@9@9
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 394
	jmp	$LN2@createComm
$LN1@createComm:
; Line 396
	push	OFFSET ??_C@_0L@DLDIFACK@?6?5?5?5?5?$HN?6?$HN?$DL?6?$AA@
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_writeLine
	add	esp, 8
; Line 397
	mov	eax, DWORD PTR _out$6242[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 399
	mov	eax, DWORD PTR _symPrefix
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN64@createComm:
; Line 401
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN84@createComm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN84@createComm:
	DD	1
	DD	$LN83@createComm
$LN83@createComm:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN82@createComm
$LN82@createComm:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_createCommonDataFile ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BN@JNHJJIPK@?$CFs?5ignored?5?$CIsize?5?$CFld?5?$DO?5?$CFld?$CJ?6?$AA@ ; `string'
PUBLIC	??_C@_0DA@ONHHMBH@gencmn?3?5unable?5to?5get?5length?5of?5@ ; `string'
PUBLIC	??_C@_01KMDKNFGN@?1?$AA@			; `string'
PUBLIC	??_C@_0JL@JCAHNOEP@gencmn?3?5Error?3?5absolute?5path?5enc@ ; `string'
PUBLIC	??_C@_0DK@PHKNKBNO@pkgdata?1gencmn?3?5Could?5not?5alloca@ ; `string'
EXTRN	_T_FileStream_error:PROC
EXTRN	_T_FileStream_size:PROC
EXTRN	_strcat:PROC
EXTRN	_uprv_pathIsAbsolute_56:PROC
EXTRN	_uprv_realloc_56:PROC
;	COMDAT ??_C@_0BN@JNHJJIPK@?$CFs?5ignored?5?$CIsize?5?$CFld?5?$DO?5?$CFld?$CJ?6?$AA@
CONST	SEGMENT
??_C@_0BN@JNHJJIPK@?$CFs?5ignored?5?$CIsize?5?$CFld?5?$DO?5?$CFld?$CJ?6?$AA@ DB '%'
	DB	's ignored (size %ld > %ld)', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@ONHHMBH@gencmn?3?5unable?5to?5get?5length?5of?5@
CONST	SEGMENT
??_C@_0DA@ONHHMBH@gencmn?3?5unable?5to?5get?5length?5of?5@ DB 'gencmn: un'
	DB	'able to get length of listed file %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1?$AA@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1?$AA@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0JL@JCAHNOEP@gencmn?3?5Error?3?5absolute?5path?5enc@
CONST	SEGMENT
??_C@_0JL@JCAHNOEP@gencmn?3?5Error?3?5absolute?5path?5enc@ DB 'gencmn: Er'
	DB	'ror: absolute path encountered. Old style paths are not suppo'
	DB	'rted. Use relative paths such as ''fur.res'' or ''translit%cf'
	DB	'ur.res''.', 0aH, 09H, 'Bad path: ''%s''', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@PHKNKBNO@pkgdata?1gencmn?3?5Could?5not?5alloca@
CONST	SEGMENT
??_C@_0DK@PHKNKBNO@pkgdata?1gencmn?3?5Could?5not?5alloca@ DB 'pkgdata/gen'
	DB	'cmn: Could not allocate %u bytes for %d files', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _addFile
_TEXT	SEGMENT
tv207 = -256						; size = 4
_t$6309 = -56						; size = 4
_file$6293 = -44					; size = 4
_fullPath$ = -32					; size = 4
_length$ = -20						; size = 4
_s$ = -8						; size = 4
_filename$ = 8						; size = 4
_name$ = 12						; size = 4
_source$ = 16						; size = 4
_sourceTOC$ = 20					; size = 1
_verbose$ = 24						; size = 1
_addFile PROC						; COMDAT
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	DWORD PTR _fullPath$[ebp], 0
; Line 409
	mov	eax, DWORD PTR _fileCount
	cmp	eax, DWORD PTR _fileMax
	jne	$LN15@addFile
; Line 410
	mov	eax, DWORD PTR _fileMax
	add	eax, 256				; 00000100H
	mov	DWORD PTR _fileMax, eax
; Line 411
	mov	eax, DWORD PTR _fileMax
	imul	eax, 24					; 00000018H
	push	eax
	mov	ecx, DWORD PTR _files
	push	ecx
	call	_uprv_realloc_56
	add	esp, 8
	mov	DWORD PTR _files, eax
; Line 412
	cmp	DWORD PTR _files, 0
	jne	SHORT $LN15@addFile
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _fileCount
	push	eax
	mov	ecx, DWORD PTR _fileMax
	imul	ecx, 24					; 00000018H
	push	ecx
	push	OFFSET ??_C@_0DK@PHKNKBNO@pkgdata?1gencmn?3?5Could?5not?5alloca@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 414
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@addFile:
; Line 418
	movsx	eax, BYTE PTR _sourceTOC$[ebp]
	test	eax, eax
	jne	$LN13@addFile
; Line 421
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_uprv_pathIsAbsolute_56
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@addFile
; Line 422
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	92					; 0000005cH
	push	OFFSET ??_C@_0JL@JCAHNOEP@gencmn?3?5Error?3?5absolute?5path?5enc@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 423
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@addFile:
; Line 425
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_pathToFullPath
	add	esp, 8
	mov	DWORD PTR _fullPath$[ebp], eax
; Line 427
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+2]
	mov	DWORD PTR _length$[ebp], edx
; Line 428
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_allocString
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 429
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 430
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 431
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 434
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_fixDirToTreePath
	add	esp, 4
; Line 435
	mov	eax, DWORD PTR _fileCount
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax+4], edx
; Line 436
	mov	eax, DWORD PTR _fileCount
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 438
	mov	eax, DWORD PTR _fileCount
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _fullPath$[ebp]
	mov	DWORD PTR [ecx+eax], edx
; Line 440
	mov	eax, DWORD PTR _basenameTotal
	add	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _basenameTotal, eax
; Line 443
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _file$6293[ebp], eax
; Line 444
	cmp	DWORD PTR _file$6293[ebp], 0
	jne	SHORT $LN11@addFile
; Line 445
	mov	esi, esp
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	push	OFFSET ??_C@_0CH@IDECOLPO@gencmn?3?5unable?5to?5open?5listed?5fi@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 446
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@addFile:
; Line 450
	mov	eax, DWORD PTR _file$6293[ebp]
	push	eax
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
; Line 451
	mov	eax, DWORD PTR _file$6293[ebp]
	push	eax
	call	_T_FileStream_error
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@addFile
	cmp	DWORD PTR _length$[ebp], 20		; 00000014H
	ja	SHORT $LN10@addFile
$LN9@addFile:
; Line 452
	mov	esi, esp
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@ONHHMBH@gencmn?3?5unable?5to?5get?5length?5of?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 453
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@addFile:
; Line 456
	mov	eax, DWORD PTR _file$6293[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 459
	cmp	DWORD PTR _maxSize, 0
	je	SHORT $LN8@addFile
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _maxSize
	jbe	SHORT $LN8@addFile
; Line 460
	movsx	eax, BYTE PTR _verbose$[ebp]
	test	eax, eax
	je	SHORT $LN7@addFile
; Line 461
	mov	esi, esp
	mov	eax, DWORD PTR _maxSize
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fullPath$[ebp]
	push	edx
	push	OFFSET ??_C@_0BN@JNHJJIPK@?$CFs?5ignored?5?$CIsize?5?$CFld?5?$DO?5?$CFld?$CJ?6?$AA@
	call	DWORD PTR __imp__printf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@addFile:
; Line 463
	jmp	$LN17@addFile
$LN8@addFile:
; Line 465
	mov	eax, DWORD PTR _fileCount
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx+eax+16], edx
; Line 466
	jmp	$LN6@addFile
$LN13@addFile:
; Line 470
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	lea	edx, DWORD PTR [esi+eax+2]
	mov	DWORD PTR _length$[ebp], edx
; Line 471
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_allocString
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 472
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 473
	push	OFFSET ??_C@_01KMDKNFGN@?1?$AA@
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 474
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 475
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_fixDirToTreePath
	add	esp, 4
; Line 476
	mov	eax, DWORD PTR _fileCount
	imul	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _files
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+eax+4], edx
; Line 478
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	call	_allocString
	add	esp, 4
	mov	DWORD PTR tv207[ebp], eax
	mov	ecx, DWORD PTR _fileCount
	imul	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _files
	mov	eax, DWORD PTR tv207[ebp]
	mov	DWORD PTR [edx+ecx], eax
	mov	ecx, DWORD PTR tv207[ebp]
	mov	DWORD PTR _t$6309[ebp], ecx
$LN5@addFile:
; Line 479
	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 1
	mov	DWORD PTR _length$[ebp], eax
	je	SHORT $LN4@addFile
; Line 480
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN2@addFile
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	je	SHORT $LN2@addFile
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN3@addFile
$LN2@addFile:
; Line 481
	mov	eax, DWORD PTR _t$6309[ebp]
	mov	BYTE PTR [eax], 95			; 0000005fH
; Line 482
	jmp	SHORT $LN1@addFile
$LN3@addFile:
; Line 483
	mov	eax, DWORD PTR _t$6309[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
$LN1@addFile:
; Line 485
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 486
	mov	eax, DWORD PTR _t$6309[ebp]
	add	eax, 1
	mov	DWORD PTR _t$6309[ebp], eax
; Line 487
	jmp	SHORT $LN5@addFile
$LN4@addFile:
; Line 488
	mov	eax, DWORD PTR _t$6309[ebp]
	mov	BYTE PTR [eax], 0
$LN6@addFile:
; Line 490
	mov	eax, DWORD PTR _fileCount
	add	eax, 1
	mov	DWORD PTR _fileCount, eax
$LN17@addFile:
; Line 491
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_addFile ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@KBMJONOK@gencmn?3?5out?5of?5memory?6?$AA@ ; `string'
_BSS	SEGMENT
_stringStore DB	030d40H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0BH@KBMJONOK@gencmn?3?5out?5of?5memory?6?$AA@
CONST	SEGMENT
??_C@_0BH@KBMJONOK@gencmn?3?5out?5of?5memory?6?$AA@ DB 'gencmn: out of me'
	DB	'mory', 0aH, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _allocString
_TEXT	SEGMENT
_p$ = -20						; size = 4
_top$ = -8						; size = 4
_length$ = 8						; size = 4
_allocString PROC					; COMDAT
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 495
	mov	eax, DWORD PTR _stringTop
	add	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _top$[ebp], eax
; Line 498
	cmp	DWORD PTR _top$[ebp], 200000		; 00030d40H
	jbe	SHORT $LN1@allocStrin
; Line 499
	mov	esi, esp
	push	OFFSET ??_C@_0BH@KBMJONOK@gencmn?3?5out?5of?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 500
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@allocStrin:
; Line 502
	mov	eax, DWORD PTR _stringTop
	add	eax, OFFSET _stringStore
	mov	DWORD PTR _p$[ebp], eax
; Line 503
	mov	eax, DWORD PTR _top$[ebp]
	mov	DWORD PTR _stringTop, eax
; Line 504
	mov	eax, DWORD PTR _p$[ebp]
$LN3@allocStrin:
; Line 505
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_allocString ENDP
_TEXT	ENDS
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _pathToFullPath
_TEXT	SEGMENT
_n$ = -44						; size = 4
_fullPath$ = -32					; size = 4
_newLength$ = -20					; size = 4
_length$ = -8						; size = 4
_path$ = 8						; size = 4
_source$ = 12						; size = 4
_pathToFullPath PROC					; COMDAT
; Line 508
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 514
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _length$[ebp], eax
; Line 515
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _length$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _newLength$[ebp], edx
; Line 516
	mov	eax, DWORD PTR _newLength$[ebp]
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _fullPath$[ebp], eax
; Line 517
	cmp	DWORD PTR _source$[ebp], 0
	je	SHORT $LN6@pathToFull
; Line 518
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullPath$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 519
	push	OFFSET ??_C@_01KICIPPFI@?2?$AA@
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 520
	jmp	SHORT $LN5@pathToFull
$LN6@pathToFull:
; Line 521
	mov	eax, DWORD PTR _fullPath$[ebp]
	mov	BYTE PTR [eax], 0
$LN5@pathToFull:
; Line 523
	mov	eax, DWORD PTR _fullPath$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _n$[ebp], eax
; Line 524
	mov	eax, DWORD PTR _fullPath$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR [eax], 0
; Line 526
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullPath$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN4@pathToFull
$LN3@pathToFull:
; Line 540
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
$LN4@pathToFull:
	mov	eax, DWORD PTR _fullPath$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@pathToFull
; Line 541
	mov	eax, DWORD PTR _fullPath$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN1@pathToFull
; Line 542
	mov	eax, DWORD PTR _fullPath$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
$LN1@pathToFull:
; Line 544
	jmp	SHORT $LN3@pathToFull
$LN2@pathToFull:
; Line 546
	mov	eax, DWORD PTR _fullPath$[ebp]
; Line 547
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_pathToFullPath ENDP
_TEXT	ENDS
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _compareFiles
_TEXT	SEGMENT
_file1$ = 8						; size = 4
_file2$ = 12						; size = 4
_compareFiles PROC					; COMDAT
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 552
	mov	eax, DWORD PTR _file2$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _file1$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_strcmp
	add	esp, 8
; Line 553
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_compareFiles ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _fixDirToTreePath
_TEXT	SEGMENT
_t$ = -8						; size = 4
_s$ = 8							; size = 4
_fixDirToTreePath PROC					; COMDAT
; Line 557
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 562
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _t$[ebp], eax
$LN2@fixDirToTr:
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _t$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _t$[ebp], eax
	cmp	DWORD PTR _t$[ebp], 0
	je	SHORT $LN3@fixDirToTr
; Line 563
	mov	eax, DWORD PTR _t$[ebp]
	mov	BYTE PTR [eax], 47			; 0000002fH
; Line 564
	jmp	SHORT $LN2@fixDirToTr
$LN3@fixDirToTr:
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_fixDirToTreePath ENDP
_TEXT	ENDS
END

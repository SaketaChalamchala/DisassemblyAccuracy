; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\xmlparser.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

_BSS	SEGMENT
?classID@?1??getStaticClassID@UXMLParser@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::UXMLParser::getStaticClassID'::`2'::classID
?classID@?1??getStaticClassID@UXMLElement@icu_56@@SAPAXXZ@4DA DB 01H DUP (?) ; `icu_56::UXMLElement::getStaticClassID'::`2'::classID
_BSS	ENDS
PUBLIC	??1UXMLElement@icu_56@@UAE@XZ			; icu_56::UXMLElement::~UXMLElement
PUBLIC	??_GUXMLElement@icu_56@@UAEPAXI@Z		; icu_56::UXMLElement::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_GUXMLElement@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUXMLElement@icu_56@@UAEPAXI@Z PROC			; icu_56::UXMLElement::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UXMLElement@icu_56@@UAE@XZ		; icu_56::UXMLElement::~UXMLElement
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUXMLElement@icu_56@@UAEPAXI@Z ENDP			; icu_56::UXMLElement::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUXMLElement@icu_56@@UAEPAXI@Z		; icu_56::UXMLElement::`vector deleting destructor'
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUXMLElement@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUXMLElement@icu_56@@UAEPAXI@Z PROC			; icu_56::UXMLElement::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1UXMLElement@icu_56@@UAE@XZ	; icu_56::UXMLElement::~UXMLElement
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	152					; 00000098H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UXMLElement@icu_56@@UAE@XZ		; icu_56::UXMLElement::~UXMLElement
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUXMLElement@icu_56@@UAEPAXI@Z ENDP			; icu_56::UXMLElement::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	??1UXMLParser@icu_56@@UAE@XZ			; icu_56::UXMLParser::~UXMLParser
PUBLIC	??_GUXMLParser@icu_56@@UAEPAXI@Z		; icu_56::UXMLParser::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GUXMLParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GUXMLParser@icu_56@@UAEPAXI@Z PROC			; icu_56::UXMLParser::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UXMLParser@icu_56@@UAE@XZ		; icu_56::UXMLParser::~UXMLParser
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GUXMLParser@icu_56@@UAEPAXI@Z ENDP			; icu_56::UXMLParser::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_EUXMLParser@icu_56@@UAEPAXI@Z		; icu_56::UXMLParser::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EUXMLParser@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EUXMLParser@icu_56@@UAEPAXI@Z PROC			; icu_56::UXMLParser::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector@2
	push	OFFSET ??1UXMLParser@icu_56@@UAE@XZ	; icu_56::UXMLParser::~UXMLParser
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	3696					; 00000e70H
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector@2
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector@2
$LN3@vector@2:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UXMLParser@icu_56@@UAE@XZ		; icu_56::UXMLParser::~UXMLParser
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector@2
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector@2:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector@2:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EUXMLParser@icu_56@@UAEPAXI@Z ENDP			; icu_56::UXMLParser::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?getStaticClassID@UXMLParser@icu_56@@SAPAXXZ	; icu_56::UXMLParser::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@UXMLParser@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@UXMLParser@icu_56@@SAPAXXZ PROC	; icu_56::UXMLParser::getStaticClassID, COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\xmlparser.cpp
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@UXMLParser@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@UXMLParser@icu_56@@SAPAXXZ ENDP	; icu_56::UXMLParser::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@UXMLParser@icu_56@@UBEPAXXZ	; icu_56::UXMLParser::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@UXMLParser@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@UXMLParser@icu_56@@UBEPAXXZ PROC	; icu_56::UXMLParser::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@UXMLParser@icu_56@@SAPAXXZ ; icu_56::UXMLParser::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@UXMLParser@icu_56@@UBEPAXXZ ENDP	; icu_56::UXMLParser::getDynamicClassID
_TEXT	ENDS
PUBLIC	?getStaticClassID@UXMLElement@icu_56@@SAPAXXZ	; icu_56::UXMLElement::getStaticClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getStaticClassID@UXMLElement@icu_56@@SAPAXXZ
_TEXT	SEGMENT
?getStaticClassID@UXMLElement@icu_56@@SAPAXXZ PROC	; icu_56::UXMLElement::getStaticClassID, COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, OFFSET ?classID@?1??getStaticClassID@UXMLElement@icu_56@@SAPAXXZ@4DA
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getStaticClassID@UXMLElement@icu_56@@SAPAXXZ ENDP	; icu_56::UXMLElement::getStaticClassID
_TEXT	ENDS
PUBLIC	?getDynamicClassID@UXMLElement@icu_56@@UBEPAXXZ	; icu_56::UXMLElement::getDynamicClassID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDynamicClassID@UXMLElement@icu_56@@UBEPAXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getDynamicClassID@UXMLElement@icu_56@@UBEPAXXZ PROC	; icu_56::UXMLElement::getDynamicClassID, COMDAT
; _this$ = ecx
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	call	?getStaticClassID@UXMLElement@icu_56@@SAPAXXZ ; icu_56::UXMLElement::getStaticClassID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getDynamicClassID@UXMLElement@icu_56@@UBEPAXXZ ENDP	; icu_56::UXMLElement::getDynamicClassID
_TEXT	ENDS
PUBLIC	??_C@_0FB@EKAALDCF@?$CG?$CI?$DP?3?$CIamp?$DL?$CJ?$HM?$CIlt?$DL?$CJ?$HM?$CIgt?$DL?$CJ?$HM?$CIapos?$DL?$CJ?$HM?$CI@ ; `string'
PUBLIC	??_C@_0DG@BCOHOPKO@?2u000d?2u000a?$HM?2u000d?2u0085?$HM?2u000a@ ; `string'
PUBLIC	??_C@_0BG@DCLJEJIJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$AA@ ; `string'
PUBLIC	??_C@_0CDA@OJPNFHAJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$CI?$FL?$FLA?9Z?$FN?3_?$FL@ ; `string'
PUBLIC	??_C@_09JJBFIONO@?$CI?$DPs?$CJ?$FL?$FO?$DM?$FN?$CK?$AA@ ; `string'
PUBLIC	??_C@_0EBM@LKDDMKOE@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@ ; `string'
PUBLIC	??_C@_0BOD@MNBCMNKF@?$DM?1?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d6?$FN?$FL@ ; `string'
PUBLIC	??_C@_0EBL@HBEENPEP@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@ ; `string'
PUBLIC	??_C@_0O@NKIADKDG@?$CI?$DPs?$CJ?$DM?2?$DP?4?$CL?$DP?2?$DP?$DO?$AA@ ; `string'
PUBLIC	??_C@_0CA@BKELOGPF@?$CI?$DPs?$CJ?$DM?$CBDOCTYPE?4?$CK?$DP?$CI?$DO?$HM?2?$FL?4?$CK?$DP?2?$FN?4?$CK?$DP?$DO?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0BH@OCCGHPKE@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$AA@ ; `string'
PUBLIC	??_C@_0P@HBDGINGI@?$CI?$DPs?$CJ?$DM?$CB?9?9?4?$CL?$DP?9?9?$DO?$AA@ ; `string'
PUBLIC	??_C@_0BI@CBFCLLCJ@?$CI?$DPs?$CJ?2uFEFF?$DP?$DM?2?$DPxml?4?$CL?$DP?2?$DP?$DO?$AA@ ; `string'
PUBLIC	??_7UXMLParser@icu_56@@6B@			; icu_56::UXMLParser::`vftable'
PUBLIC	__$ArrayPad$
PUBLIC	??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z	; icu_56::UXMLParser::UXMLParser
PUBLIC	??_R4UXMLParser@icu_56@@6B@			; icu_56::UXMLParser::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUXMLParser@icu_56@@@8			; icu_56::UXMLParser `RTTI Type Descriptor'
PUBLIC	??_R3UXMLParser@icu_56@@8			; icu_56::UXMLParser::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UXMLParser@icu_56@@8			; icu_56::UXMLParser::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UXMLParser@icu_56@@8		; icu_56::UXMLParser::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@UObject@icu_56@@8			; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVUObject@icu_56@@@8			; icu_56::UObject `RTTI Type Descriptor'
PUBLIC	??_R3UObject@icu_56@@8				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UObject@icu_56@@8				; icu_56::UObject::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UStack@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1Hashtable@icu_56@@QAE@XZ:PROC
EXTRN	__imp_??1RegexMatcher@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??1UObject@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@_W@Z:PROC
EXTRN	__imp_??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBD@Z:PROC
EXTRN	__imp_??1UnicodeString@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z:PROC
EXTRN	__imp_??0UObject@icu_56@@QAE@XZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UObject@icu_56@@8
rdata$r	SEGMENT
??_R2UObject@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UObject@icu_56@@8 ; icu_56::UObject::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UObject@icu_56@@8
rdata$r	SEGMENT
??_R3UObject@icu_56@@8 DD 00H				; icu_56::UObject::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUObject@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUObject@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UObject `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUObject@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@UObject@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UObject@icu_56@@8 DD FLAT:??_R0?AVUObject@icu_56@@@8 ; icu_56::UObject::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UObject@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@UXMLParser@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UXMLParser@icu_56@@8 DD FLAT:??_R0?AVUXMLParser@icu_56@@@8 ; icu_56::UXMLParser::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UXMLParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UXMLParser@icu_56@@8
rdata$r	SEGMENT
??_R2UXMLParser@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UXMLParser@icu_56@@8 ; icu_56::UXMLParser::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UXMLParser@icu_56@@8
rdata$r	SEGMENT
??_R3UXMLParser@icu_56@@8 DD 00H			; icu_56::UXMLParser::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UXMLParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUXMLParser@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUXMLParser@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UXMLParser `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUXMLParser@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UXMLParser@icu_56@@6B@
rdata$r	SEGMENT
??_R4UXMLParser@icu_56@@6B@ DD 00H			; icu_56::UXMLParser::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUXMLParser@icu_56@@@8
	DD	FLAT:??_R3UXMLParser@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_C@_0FB@EKAALDCF@?$CG?$CI?$DP?3?$CIamp?$DL?$CJ?$HM?$CIlt?$DL?$CJ?$HM?$CIgt?$DL?$CJ?$HM?$CIapos?$DL?$CJ?$HM?$CI@
CONST	SEGMENT
??_C@_0FB@EKAALDCF@?$CG?$CI?$DP?3?$CIamp?$DL?$CJ?$HM?$CIlt?$DL?$CJ?$HM?$CIgt?$DL?$CJ?$HM?$CIapos?$DL?$CJ?$HM?$CI@ DB '&'
	DB	'(?:(amp;)|(lt;)|(gt;)|(apos;)|(quot;)|#x([0-9A-Fa-f]{1,8});|#'
	DB	'([0-9]{1,8});|(.))', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@BCOHOPKO@?2u000d?2u000a?$HM?2u000d?2u0085?$HM?2u000a@
CONST	SEGMENT
??_C@_0DG@BCOHOPKO@?2u000d?2u000a?$HM?2u000d?2u0085?$HM?2u000a@ DB '\u000'
	DB	'd\u000a|\u000d\u0085|\u000a|\u000d|\u0085|\u2028', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DCLJEJIJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$AA@
CONST	SEGMENT
??_C@_0BG@DCLJEJIJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$AA@ DB '[ \u0009\u000'
	DB	'd\u000a]', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CDA@OJPNFHAJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$CI?$FL?$FLA?9Z?$FN?3_?$FL@
CONST	SEGMENT
??_C@_0CDA@OJPNFHAJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$CI?$FL?$FLA?9Z?$FN?3_?$FL@ DB '['
	DB	' \u0009\u000d\u000a]+([[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u0'
	DB	'0f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200C-\u20'
	DB	'0D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDC'
	DB	'F][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u'
	DB	'00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02ff][\u0370-\u037d][\u0'
	DB	'37F-\u1FFF][\u200C-\u200D][\u2070-\u218F][\u2C00-\u2FEF][\u30'
	DB	'01-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD][\U00010000-\U000EFFF'
	DB	'F]]\-.[0-9]\u00b7[\u0300-\u036f][\u203f-\u2040]])*)[ \u0009\u'
	DB	'000d\u000a]*=[ \u0009\u000d\u000a]*((?:\''[^<\'']*?\'')|(?:\"'
	DB	'[^<\"]*?\"))', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09JJBFIONO@?$CI?$DPs?$CJ?$FL?$FO?$DM?$FN?$CK?$AA@
CONST	SEGMENT
??_C@_09JJBFIONO@?$CI?$DPs?$CJ?$FL?$FO?$DM?$FN?$CK?$AA@ DB '(?s)[^<]*', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EBM@LKDDMKOE@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@
CONST	SEGMENT
??_C@_0EBM@LKDDMKOE@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@ DB '('
	DB	'?s)<([[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02f'
	DB	'f][\u0370-\u037d][\u037F-\u1FFF][\u200C-\u200D][\u2070-\u218F'
	DB	'][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD]'
	DB	'[\U00010000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u00c0-\u00d6][\u00'
	DB	'd8-\u00f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200'
	DB	'C-\u200D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900'
	DB	'-\uFDCF][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]]\-.[0-9]\u00b7'
	DB	'[\u0300-\u036f][\u203f-\u2040]])*)(?:[ \u0009\u000d\u000a]+[['
	DB	'A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02ff][\u03'
	DB	'70-\u037d][\u037F-\u1FFF][\u200C-\u200D][\u2070-\u218F][\u2C0'
	DB	'0-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD][\U0001'
	DB	'0000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00'
	DB	'f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200C-\u200'
	DB	'D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF'
	DB	'][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]]\-.[0-9]\u00b7[\u0300'
	DB	'-\u036f][\u203f-\u2040]])*[ \u0009\u000d\u000a]*=[ \u0009\u00'
	DB	'0d\u000a]*(?:(?:\''[^<\'']*?\'')|(?:\"[^<\"]*?\")))*[ \u0009\'
	DB	'u000d\u000a]*?/>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BOD@MNBCMNKF@?$DM?1?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d6?$FN?$FL@
CONST	SEGMENT
??_C@_0BOD@MNBCMNKF@?$DM?1?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d6?$FN?$FL@ DB '<'
	DB	'/([[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02ff]['
	DB	'\u0370-\u037d][\u037F-\u1FFF][\u200C-\u200D][\u2070-\u218F][\'
	DB	'u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD][\U'
	DB	'00010000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-'
	DB	'\u00f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200C-\'
	DB	'u200D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\u'
	DB	'FDCF][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]]\-.[0-9]\u00b7[\u'
	DB	'0300-\u036f][\u203f-\u2040]])*)[ \u0009\u000d\u000a]*>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EBL@HBEENPEP@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@
CONST	SEGMENT
??_C@_0EBL@HBEENPEP@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@ DB '('
	DB	'?s)<([[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02f'
	DB	'f][\u0370-\u037d][\u037F-\u1FFF][\u200C-\u200D][\u2070-\u218F'
	DB	'][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD]'
	DB	'[\U00010000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u00c0-\u00d6][\u00'
	DB	'd8-\u00f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200'
	DB	'C-\u200D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900'
	DB	'-\uFDCF][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]]\-.[0-9]\u00b7'
	DB	'[\u0300-\u036f][\u203f-\u2040]])*)(?:[ \u0009\u000d\u000a]+[['
	DB	'A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00f6][\u00f8-\u02ff][\u03'
	DB	'70-\u037d][\u037F-\u1FFF][\u200C-\u200D][\u2070-\u218F][\u2C0'
	DB	'0-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF][\uFDF0-\uFFFD][\U0001'
	DB	'0000-\U000EFFFF]](?:[[[A-Z]:_[a-z][\u00c0-\u00d6][\u00d8-\u00'
	DB	'f6][\u00f8-\u02ff][\u0370-\u037d][\u037F-\u1FFF][\u200C-\u200'
	DB	'D][\u2070-\u218F][\u2C00-\u2FEF][\u3001-\uD7FF][\uF900-\uFDCF'
	DB	'][\uFDF0-\uFFFD][\U00010000-\U000EFFFF]]\-.[0-9]\u00b7[\u0300'
	DB	'-\u036f][\u203f-\u2040]])*[ \u0009\u000d\u000a]*=[ \u0009\u00'
	DB	'0d\u000a]*(?:(?:\''[^<\'']*?\'')|(?:\"[^<\"]*?\")))*[ \u0009\'
	DB	'u000d\u000a]*?>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NKIADKDG@?$CI?$DPs?$CJ?$DM?2?$DP?4?$CL?$DP?2?$DP?$DO?$AA@
CONST	SEGMENT
??_C@_0O@NKIADKDG@?$CI?$DPs?$CJ?$DM?2?$DP?4?$CL?$DP?2?$DP?$DO?$AA@ DB '(?'
	DB	's)<\?.+?\?>', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BKELOGPF@?$CI?$DPs?$CJ?$DM?$CBDOCTYPE?4?$CK?$DP?$CI?$DO?$HM?2?$FL?4?$CK?$DP?2?$FN?4?$CK?$DP?$DO?$CJ?$AA@
CONST	SEGMENT
??_C@_0CA@BKELOGPF@?$CI?$DPs?$CJ?$DM?$CBDOCTYPE?4?$CK?$DP?$CI?$DO?$HM?2?$FL?4?$CK?$DP?2?$FN?4?$CK?$DP?$DO?$CJ?$AA@ DB '('
	DB	'?s)<!DOCTYPE.*?(>|\[.*?\].*?>)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OCCGHPKE@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$AA@
CONST	SEGMENT
??_C@_0BH@OCCGHPKE@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$AA@ DB '[ \u0009\'
	DB	'u000d\u000a]+', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HBDGINGI@?$CI?$DPs?$CJ?$DM?$CB?9?9?4?$CL?$DP?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_0P@HBDGINGI@?$CI?$DPs?$CJ?$DM?$CB?9?9?4?$CL?$DP?9?9?$DO?$AA@ DB '(?'
	DB	's)<!--.+?-->', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CBFCLLCJ@?$CI?$DPs?$CJ?2uFEFF?$DP?$DM?2?$DPxml?4?$CL?$DP?2?$DP?$DO?$AA@
CONST	SEGMENT
??_C@_0BI@CBFCLLCJ@?$CI?$DPs?$CJ?2uFEFF?$DP?$DM?2?$DPxml?4?$CL?$DP?2?$DP?$DO?$AA@ DB '('
	DB	'?s)\uFEFF?<\?xml.+?\?>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7UXMLParser@icu_56@@6B@
CONST	SEGMENT
??_7UXMLParser@icu_56@@6B@ DD FLAT:??_R4UXMLParser@icu_56@@6B@ ; icu_56::UXMLParser::`vftable'
	DD	FLAT:??_EUXMLParser@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UXMLParser@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z DD 019930522H
	DD	02aH
	DD	FLAT:__unwindtable$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$2
	DD	00H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$4
	DD	03H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$4
	DD	06H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$5
	DD	07H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$6
	DD	09H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$7
	DD	0aH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$8
	DD	09H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$8
	DD	0cH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$9
	DD	0dH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$10
	DD	0cH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$10
	DD	0fH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$11
	DD	010H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$12
	DD	0fH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$12
	DD	012H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$13
	DD	013H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$14
	DD	012H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$14
	DD	015H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$15
	DD	016H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$16
	DD	015H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$16
	DD	018H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$17
	DD	019H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$18
	DD	018H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$18
	DD	01bH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$19
	DD	01cH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$20
	DD	01bH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$20
	DD	01eH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$21
	DD	01fH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$22
	DD	01eH
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$22
	DD	021H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$23
	DD	022H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$24
	DD	021H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$24
	DD	024H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$25
	DD	025H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$26
	DD	024H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$26
	DD	027H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$27
	DD	028H
	DD	FLAT:__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$28
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv373 = -1164						; size = 4
tv369 = -1164						; size = 4
tv365 = -1164						; size = 4
tv361 = -1164						; size = 4
tv357 = -1164						; size = 4
tv353 = -1164						; size = 4
tv349 = -1164						; size = 4
tv345 = -1164						; size = 4
tv341 = -1164						; size = 4
tv337 = -1164						; size = 4
tv333 = -1164						; size = 4
tv329 = -1164						; size = 4
tv325 = -1164						; size = 4
tv442 = -1160						; size = 4
tv437 = -1160						; size = 4
tv432 = -1160						; size = 4
tv427 = -1160						; size = 4
tv422 = -1160						; size = 4
tv417 = -1160						; size = 4
tv412 = -1160						; size = 4
tv407 = -1160						; size = 4
tv402 = -1160						; size = 4
tv397 = -1160						; size = 4
tv392 = -1160						; size = 4
tv387 = -1160						; size = 4
tv382 = -1160						; size = 4
$T28446 = -1152						; size = 64
$T28447 = -1080						; size = 64
$T28448 = -1008						; size = 64
$T28449 = -936						; size = 64
$T28450 = -864						; size = 64
$T28451 = -792						; size = 64
$T28452 = -720						; size = 64
$T28453 = -648						; size = 64
$T28454 = -576						; size = 64
$T28455 = -504						; size = 64
$T28456 = -432						; size = 64
$T28457 = -360						; size = 64
$T28458 = -288						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_status$ = 8						; size = 4
??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z PROC	; icu_56::UXMLParser::UXMLParser, COMDAT
; _this$ = ecx
; Line 148
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1152				; 00000480H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1164]
	mov	ecx, 288				; 00000120H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UXMLParser@icu_56@@6B@
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0BI@CBFCLLCJ@?$CI?$DPs?$CJ?2uFEFF?$DP?$DM?2?$DPxml?4?$CL?$DP?2?$DP?$DO?$AA@
	lea	ecx, DWORD PTR $T28446[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv382[ebp], eax
	mov	ecx, DWORD PTR tv382[ebp]
	mov	DWORD PTR tv325[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv325[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR $T28446[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0P@HBDGINGI@?$CI?$DPs?$CJ?$DM?$CB?9?9?4?$CL?$DP?9?9?$DO?$AA@
	lea	ecx, DWORD PTR $T28447[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv387[ebp], eax
	mov	ecx, DWORD PTR tv387[ebp]
	mov	DWORD PTR tv329[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv329[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T28447[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0BH@OCCGHPKE@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$AA@
	lea	ecx, DWORD PTR $T28448[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv392[ebp], eax
	mov	ecx, DWORD PTR tv392[ebp]
	mov	DWORD PTR tv333[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	edx, DWORD PTR tv333[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	esi, esp
	lea	ecx, DWORD PTR $T28448[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0CA@BKELOGPF@?$CI?$DPs?$CJ?$DM?$CBDOCTYPE?4?$CK?$DP?$CI?$DO?$HM?2?$FL?4?$CK?$DP?2?$FN?4?$CK?$DP?$DO?$CJ?$AA@
	lea	ecx, DWORD PTR $T28449[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv397[ebp], eax
	mov	ecx, DWORD PTR tv397[ebp]
	mov	DWORD PTR tv337[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	edx, DWORD PTR tv337[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28449[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0O@NKIADKDG@?$CI?$DPs?$CJ?$DM?2?$DP?4?$CL?$DP?2?$DP?$DO?$AA@
	lea	ecx, DWORD PTR $T28450[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv402[ebp], eax
	mov	ecx, DWORD PTR tv402[ebp]
	mov	DWORD PTR tv341[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	edx, DWORD PTR tv341[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28450[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0EBL@HBEENPEP@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@
	lea	ecx, DWORD PTR $T28451[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv407[ebp], eax
	mov	ecx, DWORD PTR tv407[ebp]
	mov	DWORD PTR tv345[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	mov	edx, DWORD PTR tv345[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 18		; 00000012H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0BOD@MNBCMNKF@?$DM?1?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d6?$FN?$FL@
	lea	ecx, DWORD PTR $T28452[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv412[ebp], eax
	mov	ecx, DWORD PTR tv412[ebp]
	mov	DWORD PTR tv349[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 19		; 00000013H
	mov	edx, DWORD PTR tv349[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 21		; 00000015H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28452[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0EBM@LKDDMKOE@?$CI?$DPs?$CJ?$DM?$CI?$FL?$FLA?9Z?$FN?3_?$FLa?9z?$FN?$FL?2u00c0?9?2u00d@
	lea	ecx, DWORD PTR $T28453[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv417[ebp], eax
	mov	ecx, DWORD PTR tv417[ebp]
	mov	DWORD PTR tv353[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 22		; 00000016H
	mov	edx, DWORD PTR tv353[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 24		; 00000018H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28453[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_09JJBFIONO@?$CI?$DPs?$CJ?$FL?$FO?$DM?$FN?$CK?$AA@
	lea	ecx, DWORD PTR $T28454[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv422[ebp], eax
	mov	ecx, DWORD PTR tv422[ebp]
	mov	DWORD PTR tv357[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 25		; 00000019H
	mov	edx, DWORD PTR tv357[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 27		; 0000001bH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28454[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0CDA@OJPNFHAJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$CL?$CI?$FL?$FLA?9Z?$FN?3_?$FL@
	lea	ecx, DWORD PTR $T28455[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv427[ebp], eax
	mov	ecx, DWORD PTR tv427[ebp]
	mov	DWORD PTR tv361[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 28		; 0000001cH
	mov	edx, DWORD PTR tv361[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 30		; 0000001eH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28455[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0BG@DCLJEJIJ@?$FL?5?2u0009?2u000d?2u000a?$FN?$AA@
	lea	ecx, DWORD PTR $T28456[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv432[ebp], eax
	mov	ecx, DWORD PTR tv432[ebp]
	mov	DWORD PTR tv365[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 31		; 0000001fH
	mov	edx, DWORD PTR tv365[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 33		; 00000021H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28456[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	0
	push	-1
	push	OFFSET ??_C@_0DG@BCOHOPKO@?2u000d?2u000a?$HM?2u000d?2u0085?$HM?2u000a@
	lea	ecx, DWORD PTR $T28457[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBDHW4EInvariant@01@@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv437[ebp], eax
	mov	ecx, DWORD PTR tv437[ebp]
	mov	DWORD PTR tv369[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 34		; 00000022H
	mov	edx, DWORD PTR tv369[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 36		; 00000024H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28457[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	edi, esp
	push	OFFSET ??_C@_0FB@EKAALDCF@?$CG?$CI?$DP?3?$CIamp?$DL?$CJ?$HM?$CIlt?$DL?$CJ?$HM?$CIgt?$DL?$CJ?$HM?$CIapos?$DL?$CJ?$HM?$CI@
	lea	ecx, DWORD PTR $T28458[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@PBD@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv442[ebp], eax
	mov	ecx, DWORD PTR tv442[ebp]
	mov	DWORD PTR tv373[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 37		; 00000025H
	mov	edx, DWORD PTR tv373[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	call	DWORD PTR __imp_??0RegexMatcher@icu_56@@QAE@ABVUnicodeString@1@IAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 39		; 00000027H
	mov	esi, esp
	lea	ecx, DWORD PTR $T28458[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	call	DWORD PTR __imp_??0Hashtable@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 40		; 00000028H
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	call	DWORD PTR __imp_??0UStack@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 41		; 00000029H
	mov	esi, esp
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3628				; 00000e2cH
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 149
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1164				; 0000048cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28446[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28447[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28448[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28449[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$9:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28450[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$11:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28451[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$12:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$13:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28452[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$14:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$15:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28453[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$16:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$17:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28454[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$18:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$19:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28455[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$20:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$21:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28456[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$22:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$23:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28457[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$24:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$25:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28458[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$26:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$27:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z$28:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1168]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z ENDP	; icu_56::UXMLParser::UXMLParser
PUBLIC	?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createParser
EXTRN	__imp_??2UMemory@icu_56@@SAPAXI@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0
__ehfuncinfo$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv76 = -232						; size = 4
$T35630 = -224						; size = 4
$T35631 = -212						; size = 4
__$EHRec$ = -12						; size = 12
_errorCode$ = 8						; size = 4
?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::createParser, COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 153
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@createPars
; Line 154
	xor	eax, eax
	jmp	SHORT $LN3@createPars
; Line 155
	jmp	SHORT $LN3@createPars
$LN2@createPars:
; Line 156
	mov	esi, esp
	push	3696					; 00000e70H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T35631[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T35631[ebp], 0
	je	SHORT $LN5@createPars
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR $T35631[ebp]
	call	??0UXMLParser@icu_56@@AAE@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::UXMLParser
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN6@createPars
$LN5@createPars:
	mov	DWORD PTR tv76[ebp], 0
$LN6@createPars:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR $T35630[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T35630[ebp]
$LN3@createPars:
; Line 158
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T35631[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createParser@UXMLParser@icu_56@@SAPAV12@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::createParser
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
_TEXT	ENDS
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\tools\toolutil\xmlparser.cpp
xdata$x	SEGMENT
__ehfuncinfo$??1UXMLParser@icu_56@@UAE@XZ DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$??1UXMLParser@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1UXMLParser@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$4
	DD	04H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$5
	DD	05H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$6
	DD	06H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$7
	DD	07H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$8
	DD	08H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$9
	DD	09H
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$10
	DD	0aH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$11
	DD	0bH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$12
	DD	0cH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$13
	DD	0dH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$14
	DD	0eH
	DD	FLAT:__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$15
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UXMLParser@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UXMLParser@icu_56@@UAE@XZ PROC			; icu_56::UXMLParser::~UXMLParser, COMDAT
; _this$ = ecx
; Line 160
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UXMLParser@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UXMLParser@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3628				; 00000e2cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$5:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$6:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$7:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$8:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$9:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$10:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$11:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$12:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$13:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	esi, esp
	call	DWORD PTR __imp_??1RegexMatcher@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$14:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	mov	esi, esp
	call	DWORD PTR __imp_??1Hashtable@icu_56@@QAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLParser@icu_56@@UAE@XZ$15:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_??1UStack@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1UXMLParser@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UXMLParser@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UXMLParser@icu_56@@UAE@XZ ENDP			; icu_56::UXMLParser::~UXMLParser
PUBLIC	?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::parse
PUBLIC	??_C@_05EGJIMALK@UTF?98?$AA@			; `string'
PUBLIC	??_C@_1BC@KLMLAFKI@?$AAe?$AAn?$AAc?$AAo?$AAd?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@		; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::parseFile
EXTRN	_T_FileStream_close:PROC
EXTRN	__imp_?extract@UnicodeString@icu_56@@QBEHHHPADI@Z:PROC
EXTRN	__imp_??8UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z:PROC
EXTRN	__imp_?truncate@UnicodeString@icu_56@@QAECH@Z:PROC
EXTRN	__imp_?length@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z:PROC
EXTRN	__imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ:PROC
EXTRN	_ucnv_close_56:PROC
EXTRN	__imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z:PROC
EXTRN	_ucnv_toUnicode_56:PROC
EXTRN	__imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ:PROC
EXTRN	__imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z:PROC
EXTRN	_ucnv_open_56:PROC
EXTRN	_ucnv_detectUnicodeSignature_56:PROC
EXTRN	_T_FileStream_size:PROC
EXTRN	_T_FileStream_read:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@XZ:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__chkstk:PROC
;	COMDAT ??_C@_05EGJIMALK@UTF?98?$AA@
CONST	SEGMENT
??_C@_05EGJIMALK@UTF?98?$AA@ DB 'UTF-8', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@KLMLAFKI@?$AAe?$AAn?$AAc?$AAo?$AAd?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@KLMLAFKI@?$AAe?$AAn?$AAc?$AAo?$AAd?$AAi?$AAn?$AAg?$AA?$AA@ DB 'e'
	DB	00H, 'n', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@
CONST	SEGMENT
??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@ DB 'ISO-8859-1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$5
	DD	00H
	DD	FLAT:__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$7
	DD	02H
	DD	FLAT:__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$8
__ehfuncinfo$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv339 = -4944						; size = 4
tv347 = -4940						; size = 4
tv305 = -4940						; size = 4
tv174 = -4940						; size = 4
tv158 = -4940						; size = 4
$T35671 = -4932						; size = 4
$T35672 = -4920						; size = 4
$T35675 = -4905						; size = 1
$T35678 = -4896						; size = 4
$T35679 = -4884						; size = 4
$T28537 = -4872						; size = 64
_attValue$28534 = -4608					; size = 64
_attName$28532 = -4536					; size = 64
_pos$28527 = -4464					; size = 4
_declEnd$28526 = -4452					; size = 4
_flush$ = -4437						; size = 1
_capacity$ = -4428					; size = 4
_length$ = -4416					; size = 4
_bytesLength$ = -4404					; size = 4
_fileLength$ = -4392					; size = 4
_pu$ = -4380						; size = 4
_buffer$ = -4368					; size = 4
_cnv$ = -4356						; size = 4
_src$ = -4344						; size = 64
_pb$ = -4272						; size = 4
_charset$ = -4260					; size = 4
_f$ = -4248						; size = 4
_charsetBuffer$ = -4236					; size = 100
_bytes$ = -4128						; size = 4096
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_filename$ = 8						; size = 4
_errorCode$ = 12					; size = 4
?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::parseFile, COMDAT
; _this$ = ecx
; Line 163
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, 4932				; 00001344H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-4944]
	mov	ecx, 1233				; 000004d1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 167
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 173
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN32@parseFile
; Line 174
	mov	DWORD PTR $T35671[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T35671[ebp]
	jmp	$LN33@parseFile
$LN32@parseFile:
; Line 177
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _f$[ebp], eax
; Line 178
	cmp	DWORD PTR _f$[ebp], 0
	jne	SHORT $LN31@parseFile
; Line 179
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 4
; Line 180
	mov	DWORD PTR $T35672[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T35672[ebp]
	jmp	$LN33@parseFile
$LN31@parseFile:
; Line 183
	push	4096					; 00001000H
	lea	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bytesLength$[ebp], eax
; Line 184
	cmp	DWORD PTR _bytesLength$[ebp], 4096	; 00001000H
	jge	SHORT $LN30@parseFile
; Line 186
	mov	eax, DWORD PTR _bytesLength$[ebp]
	mov	DWORD PTR _fileLength$[ebp], eax
; Line 187
	jmp	SHORT $LN29@parseFile
$LN30@parseFile:
; Line 189
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_T_FileStream_size
	add	esp, 4
	mov	DWORD PTR _fileLength$[ebp], eax
$LN29@parseFile:
; Line 198
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _bytesLength$[ebp]
	push	ecx
	lea	edx, DWORD PTR _bytes$[ebp]
	push	edx
	call	_ucnv_detectUnicodeSignature_56
	add	esp, 16					; 00000010H
	mov	DWORD PTR _charset$[ebp], eax
; Line 199
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN28@parseFile
	cmp	DWORD PTR _charset$[ebp], 0
	je	SHORT $LN28@parseFile
; Line 201
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _charset$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _cnv$[ebp], eax
; Line 202
	jmp	$LN27@parseFile
$LN28@parseFile:
; Line 204
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@GJIJNDEK@ISO?98859?91?$AA@
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _cnv$[ebp], eax
; Line 205
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN26@parseFile
; Line 207
	jmp	$exit$28518
$LN26@parseFile:
; Line 210
	mov	esi, esp
	mov	eax, DWORD PTR _bytesLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer$[ebp], eax
; Line 211
	cmp	DWORD PTR _buffer$[ebp], 0
	jne	SHORT $LN24@parseFile
; Line 213
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 214
	jmp	$exit$28518
$LN24@parseFile:
; Line 216
	lea	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _pb$[ebp], eax
; Line 217
	mov	eax, DWORD PTR _buffer$[ebp]
	mov	DWORD PTR _pu$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR _bytesLength$[ebp]
	lea	edx, DWORD PTR _bytes$[ebp+ecx]
	push	edx
	lea	eax, DWORD PTR _pb$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _buffer$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	lea	eax, DWORD PTR _pu$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 223
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN35@parseFile
	mov	eax, DWORD PTR _pu$[ebp]
	sub	eax, DWORD PTR _buffer$[ebp]
	sar	eax, 1
	mov	DWORD PTR tv158[ebp], eax
	jmp	SHORT $LN36@parseFile
$LN35@parseFile:
	mov	DWORD PTR tv158[ebp], 0
$LN36@parseFile:
	mov	esi, esp
	mov	ecx, DWORD PTR tv158[ebp]
	push	ecx
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 224
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 225
	mov	DWORD PTR _cnv$[ebp], 0
; Line 226
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN22@parseFile
; Line 228
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 229
	jmp	$exit$28518
$LN22@parseFile:
; Line 233
	mov	esi, esp
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv174[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR tv174[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv174[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN27@parseFile
; Line 234
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _declEnd$28526[ebp], eax
; Line 236
	mov	esi, esp
	push	108					; 0000006cH
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 1
	mov	DWORD PTR _pos$28527[ebp], eax
; Line 238
	mov	esi, esp
	lea	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@parseFile:
; Line 239
	mov	eax, DWORD PTR _pos$28527[ebp]
	cmp	eax, DWORD PTR _declEnd$28526[ebp]
	jge	$LN18@parseFile
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	eax, DWORD PTR _pos$28527[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN18@parseFile
; Line 240
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _attName$28532[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 241
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 245
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 246
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 248
	mov	esi, esp
	push	8
	push	OFFSET ??_C@_1BC@KLMLAFKI@?$AAe?$AAn?$AAc?$AAo?$AAd?$AAi?$AAn?$AAg?$AA?$AA@
	push	1
	lea	ecx, DWORD PTR $T28537[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@CPB_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv347[ebp], eax
	mov	eax, DWORD PTR tv347[ebp]
	mov	DWORD PTR tv339[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	ecx, DWORD PTR tv339[ebp]
	push	ecx
	lea	ecx, DWORD PTR _attName$28532[ebp]
	call	DWORD PTR __imp_??8UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T35675[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	lea	ecx, DWORD PTR $T28537[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, BYTE PTR $T35675[ebp]
	test	edx, edx
	je	SHORT $LN17@parseFile
; Line 249
	mov	esi, esp
	push	100					; 00000064H
	lea	eax, DWORD PTR _charsetBuffer$[ebp]
	push	eax
	push	2147483647				; 7fffffffH
	push	0
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_?extract@UnicodeString@icu_56@@QBEHHHPADI@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 250
	lea	eax, DWORD PTR _charsetBuffer$[ebp]
	mov	DWORD PTR _charset$[ebp], eax
; Line 251
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _attName$28532[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN18@parseFile
$LN17@parseFile:
; Line 253
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$28527[ebp], eax
; Line 254
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _attName$28532[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@parseFile
$LN18@parseFile:
; Line 256
	cmp	DWORD PTR _charset$[ebp], 0
	jne	SHORT $LN16@parseFile
; Line 258
	mov	DWORD PTR _charset$[ebp], OFFSET ??_C@_05EGJIMALK@UTF?98?$AA@
$LN16@parseFile:
; Line 260
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _charset$[ebp]
	push	ecx
	call	_ucnv_open_56
	add	esp, 8
	mov	DWORD PTR _cnv$[ebp], eax
$LN27@parseFile:
; Line 264
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN15@parseFile
; Line 266
	jmp	$exit$28518
$LN15@parseFile:
; Line 270
	mov	eax, DWORD PTR _fileLength$[ebp]
	mov	DWORD PTR _capacity$[ebp], eax
; Line 271
	mov	esi, esp
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 272
	mov	esi, esp
	push	0
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 273
	mov	BYTE PTR _flush$[ebp], 0
$LN13@parseFile:
; Line 276
	lea	eax, DWORD PTR _bytes$[ebp]
	mov	DWORD PTR _pb$[ebp], eax
$LN11@parseFile:
; Line 278
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 279
	mov	esi, esp
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getBuffer@UnicodeString@icu_56@@QAEPA_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buffer$[ebp], eax
; Line 280
	cmp	DWORD PTR _buffer$[ebp], 0
	jne	SHORT $LN9@parseFile
; Line 282
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 7
; Line 283
	jmp	$exit$28518
$LN9@parseFile:
; Line 286
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _buffer$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pu$[ebp], edx
; Line 290
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _bytesLength$[ebp]
	lea	edx, DWORD PTR _bytes$[ebp+ecx]
	push	edx
	lea	eax, DWORD PTR _pb$[ebp]
	push	eax
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _buffer$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	push	edx
	lea	eax, DWORD PTR _pu$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cnv$[ebp]
	push	ecx
	call	_ucnv_toUnicode_56
	add	esp, 32					; 00000020H
; Line 291
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN37@parseFile
	mov	eax, DWORD PTR _pu$[ebp]
	sub	eax, DWORD PTR _buffer$[ebp]
	sar	eax, 1
	mov	DWORD PTR tv305[ebp], eax
	jmp	SHORT $LN38@parseFile
$LN37@parseFile:
	mov	DWORD PTR tv305[ebp], 0
$LN38@parseFile:
	mov	esi, esp
	mov	ecx, DWORD PTR tv305[ebp]
	push	ecx
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?releaseBuffer@UnicodeString@icu_56@@QAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 292
	mov	eax, DWORD PTR _errorCode$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN7@parseFile
; Line 293
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 294
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?getCapacity@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	imul	eax, 3
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _capacity$[ebp], eax
; Line 295
	jmp	SHORT $LN6@parseFile
$LN7@parseFile:
; Line 296
	jmp	SHORT $LN10@parseFile
$LN6@parseFile:
; Line 298
	jmp	$LN11@parseFile
$LN10@parseFile:
; Line 300
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN5@parseFile
; Line 301
	jmp	SHORT $exit$28518
$LN5@parseFile:
; Line 304
	movsx	eax, BYTE PTR _flush$[ebp]
	test	eax, eax
	je	SHORT $LN4@parseFile
; Line 305
	jmp	SHORT $exit$28518
$LN4@parseFile:
; Line 309
	push	4096					; 00001000H
	lea	eax, DWORD PTR _bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	_T_FileStream_read
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _bytesLength$[ebp], eax
; Line 310
	cmp	DWORD PTR _bytesLength$[ebp], 0
	jne	SHORT $LN3@parseFile
; Line 312
	mov	BYTE PTR _flush$[ebp], 1
$LN3@parseFile:
; Line 314
	jmp	$LN13@parseFile
$exit$28518:
; Line 317
	mov	eax, DWORD PTR _cnv$[ebp]
	push	eax
	call	_ucnv_close_56
	add	esp, 4
; Line 318
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
; Line 320
	mov	eax, DWORD PTR _errorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN2@parseFile
; Line 321
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _src$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::parse
	mov	DWORD PTR $T35678[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T35678[ebp]
	jmp	SHORT $LN33@parseFile
; Line 322
	jmp	SHORT $LN1@parseFile
$LN2@parseFile:
; Line 323
	mov	DWORD PTR $T35679[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR $T35679[ebp]
	jmp	SHORT $LN33@parseFile
$LN1@parseFile:
; Line 325
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN33@parseFile:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN52@parseFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 4944				; 00001350H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN52@parseFile:
	DD	7
	DD	$LN51@parseFile
$LN51@parseFile:
	DD	-4128					; ffffefe0H
	DD	4096					; 00001000H
	DD	$LN43@parseFile
	DD	-4236					; ffffef74H
	DD	100					; 00000064H
	DD	$LN44@parseFile
	DD	-4272					; ffffef50H
	DD	4
	DD	$LN45@parseFile
	DD	-4344					; ffffef08H
	DD	64					; 00000040H
	DD	$LN46@parseFile
	DD	-4380					; ffffeee4H
	DD	4
	DD	$LN47@parseFile
	DD	-4536					; ffffee48H
	DD	64					; 00000040H
	DD	$LN48@parseFile
	DD	-4608					; ffffee00H
	DD	64					; 00000040H
	DD	$LN49@parseFile
$LN49@parseFile:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN48@parseFile:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN47@parseFile:
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	0
$LN46@parseFile:
	DB	115					; 00000073H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN45@parseFile:
	DB	112					; 00000070H
	DB	98					; 00000062H
	DB	0
$LN44@parseFile:
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN43@parseFile:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR _attName$28532[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$7:
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28534[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z$8:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28537[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4948]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parseFile@UXMLParser@icu_56@@QAEPAVUXMLElement@2@PBDAAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::parseFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?U_SUCCESS@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_SUCCESS@@YACW4UErrorCode@@@Z PROC			; U_SUCCESS, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 699
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setle	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_SUCCESS@@YACW4UErrorCode@@@Z ENDP			; U_SUCCESS
_TEXT	ENDS
PUBLIC	??_C@_0CJ@JKANOFNI@Extra?5content?5at?5the?5end?5of?5the?5@ ; `string'
PUBLIC	??_C@_0BJ@CMMFNLEO@Root?5element?5not?5closed?4?$AA@ ; `string'
PUBLIC	??_C@_0BE@PMBKPLKP@Unrecognized?5markup?$AA@	; `string'
PUBLIC	??_C@_0CB@BNECBIKG@Element?5start?5?1?5end?5tag?5mismatch@ ; `string'
PUBLIC	?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::replaceCharRefs
PUBLIC	?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::scanContent
PUBLIC	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
PUBLIC	??_C@_0BG@KMCGCHCD@Root?5Element?5expected?$AA@	; `string'
PUBLIC	?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createElement
PUBLIC	?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::UXMLParser::parseMisc
PUBLIC	__$ArrayPad$
EXTRN	__imp_?pop@UStack@icu_56@@QAEPAXXZ:PROC
EXTRN	__imp_?empty@UStack@icu_56@@QBECXZ:PROC
EXTRN	__imp_??9UnicodeString@icu_56@@QBECABV01@@Z:PROC
EXTRN	__imp_?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ:PROC
EXTRN	__imp_?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z:PROC
;	COMDAT ??_C@_0CJ@JKANOFNI@Extra?5content?5at?5the?5end?5of?5the?5@
; File d:\mozilla\intl\icu\source\tools\toolutil\xmlparser.cpp
CONST	SEGMENT
??_C@_0CJ@JKANOFNI@Extra?5content?5at?5the?5end?5of?5the?5@ DB 'Extra con'
	DB	'tent at the end of the document', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CMMFNLEO@Root?5element?5not?5closed?4?$AA@
CONST	SEGMENT
??_C@_0BJ@CMMFNLEO@Root?5element?5not?5closed?4?$AA@ DB 'Root element not'
	DB	' closed.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PMBKPLKP@Unrecognized?5markup?$AA@
CONST	SEGMENT
??_C@_0BE@PMBKPLKP@Unrecognized?5markup?$AA@ DB 'Unrecognized markup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@BNECBIKG@Element?5start?5?1?5end?5tag?5mismatch@
CONST	SEGMENT
??_C@_0CB@BNECBIKG@Element?5start?5?1?5end?5tag?5mismatch@ DB 'Element st'
	DB	'art / end tag mismatch', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KMCGCHCD@Root?5Element?5expected?$AA@
CONST	SEGMENT
??_C@_0BG@KMCGCHCD@Root?5Element?5expected?$AA@ DB 'Root Element expected'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4
	DD	00H
	DD	FLAT:__unwindfunclet$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5
__ehfuncinfo$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv472 = -440						; size = 4
$T35706 = -432						; size = 4
$T35707 = -420						; size = 4
_t$28601 = -216						; size = 4
_name$28593 = -204					; size = 64
_s$28586 = -132						; size = 64
_t$28585 = -60						; size = 4
_el$28580 = -48						; size = 4
_root$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_src$ = 8						; size = 4
_status$ = 12						; size = 4
?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::parse, COMDAT
; _this$ = ecx
; Line 328
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 329
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN24@parse
; Line 330
	xor	eax, eax
	jmp	$LN25@parse
$LN24@parse:
; Line 333
	mov	DWORD PTR _root$[ebp], 0
; Line 334
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+3624], 0
; Line 338
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 339
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 340
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 341
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+824]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 342
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1096]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 343
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1368]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 344
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 345
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2184]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 348
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2728]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 349
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3000]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 350
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 353
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN23@parse
; Line 354
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
$LN23@parse:
; Line 358
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::UXMLParser::parseMisc
; Line 361
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+824]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN22@parse
; Line 362
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 824				; 00000338H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+824]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
$LN22@parse:
; Line 366
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::UXMLParser::parseMisc
; Line 369
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN21@parse
; Line 371
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createElement
	mov	DWORD PTR _root$[ebp], eax
; Line 372
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 373
	jmp	$LN20@parse
$LN21@parse:
; Line 374
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1368]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN19@parse
; Line 375
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0BG@KMCGCHCD@Root?5Element?5expected?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
; Line 376
	jmp	$errorExit$28578
$LN19@parse:
; Line 378
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createElement
	mov	DWORD PTR _root$[ebp], eax
; Line 379
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR _el$28580[ebp], eax
$LN17@parse:
; Line 390
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1368]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN15@parse
; Line 391
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1368				; 00000558H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createElement
	mov	DWORD PTR _t$28585[ebp], eax
; Line 392
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$28585[ebp]
	push	ecx
	mov	ecx, DWORD PTR _el$28580[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 393
	mov	eax, DWORD PTR _t$28585[ebp]
	mov	ecx, DWORD PTR _el$28580[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 394
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _el$28580[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	call	DWORD PTR __imp_?push@UStack@icu_56@@QAEPAXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 395
	mov	eax, DWORD PTR _t$28585[ebp]
	mov	DWORD PTR _el$28580[ebp], eax
; Line 396
	jmp	$LN17@parse
$LN15@parse:
; Line 401
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$28586[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::scanContent
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 402
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jle	$LN14@parse
; Line 403
	mov	esi, esp
	lea	eax, DWORD PTR _s$28586[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 404
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN13@parse
; Line 407
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _s$28586[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::replaceCharRefs
; Line 408
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _el$28580[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@parse:
; Line 410
	mov	esi, esp
	mov	eax, DWORD PTR _src$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 411
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@parse
$LN14@parse:
; Line 415
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN12@parse
; Line 416
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 417
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@parse
$LN12@parse:
; Line 421
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1096]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN11@parse
; Line 422
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1096]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 423
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@parse
$LN11@parse:
; Line 427
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN10@parse
; Line 428
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 429
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _name$28593[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1640				; 00000668H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1640]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 430
	mov	esi, esp
	mov	eax, DWORD PTR _el$28580[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	lea	ecx, DWORD PTR _name$28593[ebp]
	call	DWORD PTR __imp_??9UnicodeString@icu_56@@QBECABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN9@parse
; Line 431
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0CB@BNECBIKG@Element?5start?5?1?5end?5tag?5mismatch@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
; Line 476
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$28593[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 432
	jmp	$errorExit$28578
$LN9@parse:
; Line 434
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN7@parse
; Line 436
	mov	DWORD PTR _el$28580[ebp], 0
; Line 437
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$28593[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN16@parse
$LN7@parse:
; Line 439
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_?pop@UStack@icu_56@@QAEPAXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _el$28580[ebp], eax
; Line 440
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _name$28593[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@parse
$LN10@parse:
; Line 444
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1912]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN6@parse
; Line 445
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1912				; 00000778H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::createElement
	mov	DWORD PTR _t$28601[ebp], eax
; Line 446
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _t$28601[ebp]
	push	ecx
	mov	ecx, DWORD PTR _el$28580[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 447
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN17@parse
$LN6@parse:
; Line 452
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0BE@PMBKPLKP@Unrecognized?5markup?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
; Line 453
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN16@parse
; Line 454
	jmp	$LN17@parse
$LN16@parse:
; Line 456
	cmp	DWORD PTR _el$28580[ebp], 0
	jne	SHORT $LN4@parse
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3600				; 00000e10H
	mov	esi, esp
	call	DWORD PTR __imp_?empty@UStack@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN20@parse
$LN4@parse:
; Line 458
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0BJ@CMMFNLEO@Root?5element?5not?5closed?4?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
; Line 459
	jmp	SHORT $errorExit$28578
$LN20@parse:
; Line 465
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z ; icu_56::UXMLParser::parseMisc
; Line 468
	mov	esi, esp
	mov	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+3624], eax
	je	SHORT $LN2@parse
; Line 469
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	OFFSET ??_C@_0CJ@JKANOFNI@Extra?5content?5at?5the?5end?5of?5the?5@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ; icu_56::UXMLParser::error
; Line 470
	jmp	SHORT $errorExit$28578
$LN2@parse:
; Line 474
	mov	eax, DWORD PTR _root$[ebp]
	jmp	SHORT $LN25@parse
$errorExit$28578:
; Line 477
	mov	eax, DWORD PTR _root$[ebp]
	mov	DWORD PTR $T35707[ebp], eax
	mov	ecx, DWORD PTR $T35707[ebp]
	mov	DWORD PTR $T35706[ebp], ecx
	cmp	DWORD PTR $T35706[ebp], 0
	je	SHORT $LN27@parse
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T35706[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T35706[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv472[ebp], eax
	jmp	SHORT $LN28@parse
$LN27@parse:
	mov	DWORD PTR tv472[ebp], 0
$LN28@parse:
; Line 478
	xor	eax, eax
$LN25@parse:
; Line 479
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN40@parse
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN40@parse:
	DD	2
	DD	$LN39@parse
$LN39@parse:
	DD	-132					; ffffff7cH
	DD	64					; 00000040H
	DD	$LN36@parse
	DD	-204					; ffffff34H
	DD	64					; 00000040H
	DD	$LN37@parse
$LN37@parse:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN36@parse:
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR _s$28586[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _name$28593[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-444]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?parse@UXMLParser@icu_56@@QAEPAVUXMLElement@2@ABVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::parse
PUBLIC	??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UXMLElement::UXMLElement
PUBLIC	?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::intern
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$2
	DD	03H
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$3
	DD	04H
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$5
	DD	06H
	DD	FLAT:__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$6
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv87 = -724						; size = 4
tv253 = -720						; size = 4
tv250 = -720						; size = 4
tv244 = -720						; size = 4
tv267 = -716						; size = 4
tv263 = -716						; size = 4
tv257 = -716						; size = 4
$T35730 = -708						; size = 4
$T35731 = -696						; size = 4
$T35735 = -684						; size = 4
$T28618 = -672						; size = 64
$T28631 = -600						; size = 64
$T28634 = -528						; size = 64
_oneSpace$28633 = -264					; size = 64
_attValue$28629 = -192					; size = 64
_attName$28627 = -120					; size = 64
_pos$ = -48						; size = 4
_el$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_mEl$ = 8						; size = 4
_status$ = 12						; size = 4
?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::createElement, COMDAT
; _this$ = ecx
; Line 487
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 712				; 000002c8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-724]
	mov	ecx, 178				; 000000b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T35735[ebp], 0
; Line 489
	mov	esi, esp
	push	152					; 00000098H
	call	DWORD PTR __imp_??2UMemory@icu_56@@SAPAXI@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T35731[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T35731[ebp], 0
	je	SHORT $LN5@createElem
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	mov	esi, esp
	mov	edx, DWORD PTR _status$[ebp]
	push	edx
	push	1
	lea	eax, DWORD PTR $T28618[ebp]
	push	eax
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv257[ebp], eax
	mov	ecx, DWORD PTR tv257[ebp]
	mov	DWORD PTR tv244[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR $T35735[ebp]
	or	edx, 1
	mov	DWORD PTR $T35735[ebp], edx
	mov	eax, DWORD PTR tv244[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::intern
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T35731[ebp]
	call	??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ; icu_56::UXMLElement::UXMLElement
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN6@createElem
$LN5@createElem:
	mov	DWORD PTR tv87[ebp], 0
$LN6@createElem:
	mov	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T35730[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	eax, DWORD PTR $T35730[ebp]
	mov	DWORD PTR _el$[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T35735[ebp]
	and	ecx, 1
	je	SHORT $LN10@createElem
	and	DWORD PTR $T35735[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28618[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@createElem:
; Line 492
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
$LN2@createElem:
; Line 494
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	eax, DWORD PTR _pos$[ebp]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN1@createElem
; Line 495
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	lea	ecx, DWORD PTR _attName$28627[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 496
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 500
	mov	esi, esp
	push	1
	push	0
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_?remove@UnicodeString@icu_56@@QAEAAV12@HH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 501
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_?truncate@UnicodeString@icu_56@@QAECH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 510
	mov	esi, esp
	lea	eax, DWORD PTR _attValue$28629[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3000]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 511
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3628				; 00000e2cH
	push	ecx
	lea	edx, DWORD PTR $T28631[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+3000]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv263[ebp], eax
	mov	ecx, DWORD PTR tv263[ebp]
	mov	DWORD PTR tv250[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	mov	esi, esp
	mov	edx, DWORD PTR tv250[ebp]
	push	edx
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR $T28631[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 514
	mov	esi, esp
	lea	eax, DWORD PTR _attValue$28629[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2728]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 515
	mov	esi, esp
	push	32					; 00000020H
	lea	ecx, DWORD PTR _oneSpace$28633[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 516
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _oneSpace$28633[ebp]
	push	ecx
	lea	edx, DWORD PTR $T28634[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2728				; 00000aa8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+2728]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv267[ebp], eax
	mov	ecx, DWORD PTR tv267[ebp]
	mov	DWORD PTR tv253[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	esi, esp
	mov	edx, DWORD PTR tv253[ebp]
	push	edx
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	mov	esi, esp
	lea	ecx, DWORD PTR $T28634[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 519
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::replaceCharRefs
; Line 522
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _status$[ebp]
	push	ecx
	lea	edx, DWORD PTR _attName$28627[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ; icu_56::UXMLParser::intern
	push	eax
	mov	ecx, DWORD PTR _el$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 523
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	edi, esp
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_?clone@UnicodeString@icu_56@@UBEPAVReplaceable@2@XZ
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _el$[ebp]
	add	ecx, 100				; 00000064H
	call	DWORD PTR __imp_?addElement@UVector@icu_56@@QAEXPAXAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 524
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2456				; 00000998H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2456]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pos$[ebp], eax
; Line 525
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	lea	ecx, DWORD PTR _oneSpace$28633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _attName$28627[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN2@createElem
$LN1@createElem:
; Line 526
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _mEl$[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 527
	mov	eax, DWORD PTR _el$[ebp]
; Line 528
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@createElem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 724				; 000002d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN21@createElem:
	DD	3
	DD	$LN20@createElem
$LN20@createElem:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN16@createElem
	DD	-192					; ffffff40H
	DD	64					; 00000040H
	DD	$LN17@createElem
	DD	-264					; fffffef8H
	DD	64					; 00000040H
	DD	$LN18@createElem
$LN18@createElem:
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
$LN17@createElem:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
$LN16@createElem:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	eax, DWORD PTR $T35731[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$1:
	mov	eax, DWORD PTR $T35735[ebp]
	and	eax, 1
	je	$LN9@createElem
	and	DWORD PTR $T35735[ebp], -2		; fffffffeH
	mov	esi, esp
	lea	ecx, DWORD PTR $T28618[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN9@createElem:
	ret	0
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _attName$28627[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _attValue$28629[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28631[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$5:
	mov	esi, esp
	lea	ecx, DWORD PTR _oneSpace$28633[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z$6:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28634[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-728]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?createElement@UXMLParser@icu_56@@AAEPAVUXMLElement@2@AAVRegexMatcher@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::createElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_status$ = 8						; size = 4
?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::parseMisc, COMDAT
; _this$ = ecx
; Line 538
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
$LN6@parseMisc:
; Line 540
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1096]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	mov	ecx, eax
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+3624], eax
	jl	SHORT $LN4@parseMisc
; Line 541
	jmp	$LN7@parseMisc
$LN4@parseMisc:
; Line 543
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1096]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN3@parseMisc
; Line 544
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1096				; 00000448H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1096]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 545
	jmp	$LN6@parseMisc
$LN3@parseMisc:
; Line 547
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@parseMisc
; Line 548
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 552				; 00000228H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+552]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 549
	jmp	$LN6@parseMisc
$LN2@parseMisc:
; Line 551
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN1@parseMisc
; Line 552
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 280				; 00000118H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+280]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
; Line 553
	jmp	$LN6@parseMisc
$LN1@parseMisc:
; Line 555
	jmp	SHORT $LN7@parseMisc
; Line 556
	jmp	$LN6@parseMisc
$LN7@parseMisc:
; Line 557
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?parseMisc@UXMLParser@icu_56@@AAEXAAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::parseMisc
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	01H
	DD	FLAT:__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$2
__ehfuncinfo$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv161 = -456						; size = 4
tv159 = -456						; size = 4
tv171 = -452						; size = 4
tv168 = -452						; size = 4
$T35766 = -444						; size = 4
$T28655 = -432						; size = 64
$T28656 = -360						; size = 64
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_status$ = 12						; size = 4
?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::scanContent, COMDAT
; _this$ = ecx
; Line 563
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 444				; 000001bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 111				; 0000006fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T35766[ebp], 0
; Line 564
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 565
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+3624]
	cdq
	push	edx
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2184]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	$LN1@scanConten
; Line 566
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T28655[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2184]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv168[ebp], eax
	mov	eax, DWORD PTR tv168[ebp]
	mov	DWORD PTR tv159[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	ecx, DWORD PTR tv159[ebp]
	push	ecx
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T28655[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 568
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3000]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 569
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3628				; 00000e2cH
	push	ecx
	lea	edx, DWORD PTR $T28656[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3000				; 00000bb8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+3000]
	mov	eax, DWORD PTR [edx+176]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv171[ebp], eax
	mov	ecx, DWORD PTR tv171[ebp]
	mov	DWORD PTR tv161[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	edx, DWORD PTR tv161[ebp]
	push	edx
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T28656[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 572
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 2184				; 00000888H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+2184]
	mov	edx, DWORD PTR [eax+72]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+3624], eax
$LN1@scanConten:
; Line 575
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T35766[ebp]
	or	ecx, 1
	mov	DWORD PTR $T35766[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 576
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@scanConten
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 456				; 000001c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN12@scanConten:
	DD	1
	DD	$LN11@scanConten
$LN11@scanConten:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN9@scanConten
$LN9@scanConten:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28655[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28656[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z$3:
	mov	eax, DWORD PTR $T35766[ebp]
	and	eax, 1
	je	$LN8@scanConten
	and	DWORD PTR $T35766[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN8@scanConten:
	ret	0
__ehhandler$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-460]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?scanContent@UXMLParser@icu_56@@AAE?AVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::scanContent
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z:PROC
EXTRN	_u_digit_56:PROC
EXTRN	__imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z:PROC
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$2
	DD	01H
	DD	FLAT:__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$3
	DD	01H
	DD	FLAT:__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
tv273 = -624						; size = 4
tv278 = -620						; size = 4
$T28700 = -612						; size = 64
_val$28694 = -348					; size = 4
_decimalString$28692 = -336				; size = 64
_val$28686 = -264					; size = 4
_hexString$28684 = -252					; size = 64
_i$ = -180						; size = 4
_replacement$ = -168					; size = 64
_result$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_s$ = 8							; size = 4
_status$ = 12						; size = 4
?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::replaceCharRefs, COMDAT
; _this$ = ecx
; Line 585
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 612				; 00000264H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-624]
	mov	ecx, 153				; 00000099H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 586
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 587
	mov	esi, esp
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 590
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN22@replaceCha:
; Line 594
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+3272]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	ecx, al
	test	ecx, ecx
	je	$LN21@replaceCha
; Line 595
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN20@replaceCha
; Line 596
	mov	esi, esp
	push	38					; 00000026H
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN20@replaceCha:
; Line 597
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN18@replaceCha
; Line 598
	mov	esi, esp
	push	60					; 0000003cH
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN18@replaceCha:
; Line 599
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN16@replaceCha
; Line 600
	mov	esi, esp
	push	62					; 0000003eH
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN16@replaceCha:
; Line 601
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN14@replaceCha
; Line 602
	mov	esi, esp
	push	39					; 00000027H
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN14@replaceCha:
; Line 603
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	SHORT $LN12@replaceCha
; Line 604
	mov	esi, esp
	push	34					; 00000022H
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@_W@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN12@replaceCha:
; Line 605
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	$LN10@replaceCha
; Line 606
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	6
	lea	ecx, DWORD PTR _hexString$28684[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 607
	mov	DWORD PTR _val$28686[ebp], 0
; Line 608
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@replaceCha
$LN8@replaceCha:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@replaceCha:
	mov	esi, esp
	lea	ecx, DWORD PTR _hexString$28684[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN7@replaceCha
; Line 609
	mov	esi, DWORD PTR _val$28686[ebp]
	shl	esi, 4
	push	16					; 00000010H
	mov	edi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hexString$28684[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	push	ecx
	call	_u_digit_56
	add	esp, 8
	add	esi, eax
	mov	DWORD PTR _val$28686[ebp], esi
; Line 610
	jmp	SHORT $LN8@replaceCha
$LN7@replaceCha:
; Line 612
	mov	esi, esp
	mov	eax, DWORD PTR _val$28686[ebp]
	push	eax
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 613
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _hexString$28684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN19@replaceCha
$LN10@replaceCha:
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	je	$LN5@replaceCha
; Line 614
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	7
	lea	ecx, DWORD PTR _decimalString$28692[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 615
	mov	DWORD PTR _val$28694[ebp], 0
; Line 616
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@replaceCha
$LN3@replaceCha:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@replaceCha:
	mov	esi, esp
	lea	ecx, DWORD PTR _decimalString$28692[ebp]
	call	DWORD PTR __imp_?length@UnicodeString@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@replaceCha
; Line 617
	mov	esi, DWORD PTR _val$28694[ebp]
	imul	esi, 10					; 0000000aH
	push	10					; 0000000aH
	mov	edi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	lea	ecx, DWORD PTR _decimalString$28692[ebp]
	call	DWORD PTR __imp_?charAt@UnicodeString@icu_56@@QBE_WH@Z
	cmp	edi, esp
	call	__RTC_CheckEsp
	movzx	ecx, ax
	push	ecx
	call	_u_digit_56
	add	esp, 8
	add	esi, eax
	mov	DWORD PTR _val$28694[ebp], esi
; Line 618
	jmp	SHORT $LN3@replaceCha
$LN2@replaceCha:
; Line 620
	mov	esi, esp
	mov	eax, DWORD PTR _val$28694[ebp]
	push	eax
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 621
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR _decimalString$28692[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@replaceCha
$LN5@replaceCha:
; Line 625
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR $T28700[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv278[ebp], eax
	mov	eax, DWORD PTR tv278[ebp]
	mov	DWORD PTR tv273[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	esi, esp
	mov	ecx, DWORD PTR tv273[ebp]
	push	ecx
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	lea	ecx, DWORD PTR $T28700[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@replaceCha:
; Line 627
	mov	esi, esp
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	lea	ecx, DWORD PTR _replacement$[ebp]
	push	ecx
	lea	edx, DWORD PTR _result$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+3272]
	mov	eax, DWORD PTR [edx+192]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 628
	jmp	$LN22@replaceCha
$LN21@replaceCha:
; Line 629
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3272				; 00000cc8H
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+3272]
	mov	edx, DWORD PTR [eax+200]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 630
	mov	esi, esp
	lea	eax, DWORD PTR _result$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	DWORD PTR __imp_??4UnicodeString@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 631
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@replaceCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 624				; 00000270H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN36@replaceCha:
	DD	4
	DD	$LN35@replaceCha
$LN35@replaceCha:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN30@replaceCha
	DD	-168					; ffffff58H
	DD	64					; 00000040H
	DD	$LN31@replaceCha
	DD	-252					; ffffff04H
	DD	64					; 00000040H
	DD	$LN32@replaceCha
	DD	-336					; fffffeb0H
	DD	64					; 00000040H
	DD	$LN33@replaceCha
$LN33@replaceCha:
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN32@replaceCha:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN31@replaceCha:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN30@replaceCha:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _result$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$1:
	mov	esi, esp
	lea	ecx, DWORD PTR _replacement$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$2:
	mov	esi, esp
	lea	ecx, DWORD PTR _hexString$28684[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$3:
	mov	esi, esp
	lea	ecx, DWORD PTR _decimalString$28692[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z$4:
	mov	esi, esp
	lea	ecx, DWORD PTR $T28700[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-628]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?replaceCharRefs@UXMLParser@icu_56@@AAEXAAVUnicodeString@2@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::replaceCharRefs
PUBLIC	??_C@_0BG@NOGGPEDJ@Error?3?5?$CFs?5at?5line?5?$CFd?6?$AA@ ; `string'
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z:PROC
;	COMDAT ??_C@_0BG@NOGGPEDJ@Error?3?5?$CFs?5at?5line?5?$CFd?6?$AA@
CONST	SEGMENT
??_C@_0BG@NOGGPEDJ@Error?3?5?$CFs?5at?5line?5?$CFd?6?$AA@ DB 'Error: %s a'
	DB	't line %d', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z
_TEXT	SEGMENT
_ci$ = -44						; size = 4
_line$ = -32						; size = 4
_src$ = -20						; size = 4
_this$ = -8						; size = 4
_message$ = 8						; size = 4
_status$ = 12						; size = 4
?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::error, COMDAT
; _this$ = ecx
; Line 634
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 636
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	esi, esp
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _src$[ebp], eax
; Line 637
	mov	DWORD PTR _line$[ebp], 0
; Line 638
	mov	DWORD PTR _ci$[ebp], 0
$LN3@error:
; Line 639
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ci$[ebp]
	cmp	ecx, DWORD PTR [eax+3624]
	jge	SHORT $LN2@error
	cmp	DWORD PTR _ci$[ebp], 0
	jl	SHORT $LN2@error
; Line 640
	mov	eax, DWORD PTR _ci$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR _src$[ebp]
	call	DWORD PTR __imp_?indexOf@UnicodeString@icu_56@@QBEH_WH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ci$[ebp], eax
; Line 641
	mov	eax, DWORD PTR _line$[ebp]
	add	eax, 1
	mov	DWORD PTR _line$[ebp], eax
; Line 642
	jmp	SHORT $LN3@error
$LN2@error:
; Line 643
	mov	esi, esp
	mov	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BG@NOGGPEDJ@Error?3?5?$CFs?5at?5line?5?$CFd?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 644
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_SUCCESS@@YACW4UErrorCode@@@Z		; U_SUCCESS
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN4@error
; Line 645
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 9
$LN4@error:
; Line 647
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?error@UXMLParser@icu_56@@AAEXPBDAAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::error
_TEXT	ENDS
EXTRN	__imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z:PROC
EXTRN	__imp_?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_he$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
_errorCode$ = 12					; size = 4
?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLParser::intern, COMDAT
; _this$ = ecx
; Line 652
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 653
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	call	DWORD PTR __imp_?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _he$[ebp], eax
; Line 654
	cmp	DWORD PTR _he$[ebp], 0
	je	SHORT $LN2@intern
; Line 656
	mov	eax, DWORD PTR _he$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN3@intern
; Line 657
	jmp	SHORT $LN3@intern
$LN2@intern:
; Line 659
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	call	DWORD PTR __imp_?puti@Hashtable@icu_56@@QAEHABVUnicodeString@2@HAAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 660
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	call	DWORD PTR __imp_?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _he$[ebp], eax
; Line 661
	mov	eax, DWORD PTR _he$[ebp]
	mov	eax, DWORD PTR [eax+8]
$LN3@intern:
; Line 663
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?intern@UXMLParser@icu_56@@AAEPBVUnicodeString@2@ABV32@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLParser::intern
_TEXT	ENDS
PUBLIC	?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ; icu_56::UXMLParser::findName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z
_TEXT	SEGMENT
_he$ = -20						; size = 4
_this$ = -8						; size = 4
_s$ = 8							; size = 4
?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z PROC ; icu_56::UXMLParser::findName, COMDAT
; _this$ = ecx
; Line 666
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 667
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 3544				; 00000dd8H
	call	DWORD PTR __imp_?find@Hashtable@icu_56@@QBEPBUUHashElement@@ABVUnicodeString@2@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _he$[ebp], eax
; Line 668
	cmp	DWORD PTR _he$[ebp], 0
	je	SHORT $LN2@findName
; Line 670
	mov	eax, DWORD PTR _he$[ebp]
	mov	eax, DWORD PTR [eax+8]
	jmp	SHORT $LN3@findName
; Line 671
	jmp	SHORT $LN3@findName
$LN2@findName:
; Line 673
	xor	eax, eax
$LN3@findName:
; Line 675
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ENDP ; icu_56::UXMLParser::findName
_TEXT	ENDS
PUBLIC	??_7UXMLElement@icu_56@@6B@			; icu_56::UXMLElement::`vftable'
PUBLIC	??_R4UXMLElement@icu_56@@6B@			; icu_56::UXMLElement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVUXMLElement@icu_56@@@8			; icu_56::UXMLElement `RTTI Type Descriptor'
PUBLIC	??_R3UXMLElement@icu_56@@8			; icu_56::UXMLElement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UXMLElement@icu_56@@8			; icu_56::UXMLElement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UXMLElement@icu_56@@8		; icu_56::UXMLElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__imp_??1UVector@icu_56@@UAE@XZ:PROC
EXTRN	__imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z:PROC
;	COMDAT ??_R1A@?0A@EA@UXMLElement@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@UXMLElement@icu_56@@8 DD FLAT:??_R0?AVUXMLElement@icu_56@@@8 ; icu_56::UXMLElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UXMLElement@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UXMLElement@icu_56@@8
rdata$r	SEGMENT
??_R2UXMLElement@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UXMLElement@icu_56@@8 ; icu_56::UXMLElement::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@UObject@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3UXMLElement@icu_56@@8
rdata$r	SEGMENT
??_R3UXMLElement@icu_56@@8 DD 00H			; icu_56::UXMLElement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2UXMLElement@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUXMLElement@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUXMLElement@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UXMLElement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUXMLElement@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UXMLElement@icu_56@@6B@
rdata$r	SEGMENT
??_R4UXMLElement@icu_56@@6B@ DD 00H			; icu_56::UXMLElement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVUXMLElement@icu_56@@@8
	DD	FLAT:??_R3UXMLElement@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7UXMLElement@icu_56@@6B@
CONST	SEGMENT
??_7UXMLElement@icu_56@@6B@ DD FLAT:??_R4UXMLElement@icu_56@@6B@ ; icu_56::UXMLElement::`vftable'
	DD	FLAT:??_EUXMLElement@icu_56@@UAEPAXI@Z
	DD	FLAT:?getDynamicClassID@UXMLElement@icu_56@@UBEPAXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$3
__ehfuncinfo$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_parser$ = 8						; size = 4
_name$ = 12						; size = 4
_errorCode$ = 16					; size = 4
??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z PROC ; icu_56::UXMLElement::UXMLElement, COMDAT
; _this$ = ecx
; Line 686
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0UObject@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UXMLElement@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _parser$[ebp]
	mov	DWORD PTR [eax+4], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_??0UVector@icu_56@@QAE@AAW4UErrorCode@@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0
; Line 687
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UXMLElement@icu_56@@AAE@PBVUXMLParser@1@PBVUnicodeString@1@AAW4UErrorCode@@@Z ENDP ; icu_56::UXMLElement::UXMLElement
EXTRN	__imp_?elementAt@UVector@icu_56@@QBEPAXH@Z:PROC
EXTRN	__imp_?size@UVector@icu_56@@QBEHXZ:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1UXMLElement@icu_56@@UAE@XZ DD 019930522H
	DD	05H
	DD	FLAT:__unwindtable$??1UXMLElement@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??1UXMLElement@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$3
	DD	03H
	DD	FLAT:__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$4
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UXMLElement@icu_56@@UAE@XZ
_TEXT	SEGMENT
tv147 = -280						; size = 4
tv130 = -280						; size = 4
$T35818 = -272						; size = 4
$T35819 = -260						; size = 4
$T35822 = -248						; size = 4
$T35823 = -236						; size = 4
_i$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UXMLElement@icu_56@@UAE@XZ PROC			; icu_56::UXMLElement::~UXMLElement, COMDAT
; _this$ = ecx
; Line 689
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UXMLElement@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7UXMLElement@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 4
; Line 692
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN6@UXMLElemen
$LN5@UXMLElemen:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@UXMLElemen:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN4@UXMLElemen
; Line 693
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T35819[ebp], eax
	mov	ecx, DWORD PTR $T35819[ebp]
	mov	DWORD PTR $T35818[ebp], ecx
	cmp	DWORD PTR $T35818[ebp], 0
	je	SHORT $LN9@UXMLElemen
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T35818[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T35818[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv130[ebp], eax
	jmp	SHORT $LN10@UXMLElemen
$LN9@UXMLElemen:
	mov	DWORD PTR tv130[ebp], 0
$LN10@UXMLElemen:
; Line 694
	jmp	SHORT $LN5@UXMLElemen
$LN4@UXMLElemen:
; Line 695
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@UXMLElemen
$LN2@UXMLElemen:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@UXMLElemen:
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN7@UXMLElemen
; Line 696
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T35823[ebp], eax
	mov	ecx, DWORD PTR $T35823[ebp]
	mov	DWORD PTR $T35822[ebp], ecx
	cmp	DWORD PTR $T35822[ebp], 0
	je	SHORT $LN11@UXMLElemen
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T35822[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T35822[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv147[ebp], eax
	jmp	SHORT $LN12@UXMLElemen
$LN11@UXMLElemen:
	mov	DWORD PTR tv147[ebp], 0
$LN12@UXMLElemen:
; Line 697
	jmp	SHORT $LN2@UXMLElemen
$LN7@UXMLElemen:
; Line 698
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1UObject@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$??1UXMLElement@icu_56@@UAE@XZ$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_??1UVector@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1UXMLElement@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UXMLElement@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UXMLElement@icu_56@@UAE@XZ ENDP			; icu_56::UXMLElement::~UXMLElement
PUBLIC	?getTagName@UXMLElement@icu_56@@QBEABVUnicodeString@2@XZ ; icu_56::UXMLElement::getTagName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTagName@UXMLElement@icu_56@@QBEABVUnicodeString@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTagName@UXMLElement@icu_56@@QBEABVUnicodeString@2@XZ PROC ; icu_56::UXMLElement::getTagName, COMDAT
; _this$ = ecx
; Line 701
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 702
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
; Line 703
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getTagName@UXMLElement@icu_56@@QBEABVUnicodeString@2@XZ ENDP ; icu_56::UXMLElement::getTagName
_TEXT	ENDS
PUBLIC	?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z ; icu_56::UXMLElement::appendText
PUBLIC	__$ArrayPad$
PUBLIC	?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z ; icu_56::UXMLElement::getText
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z$0
__ehfuncinfo$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z
_TEXT	SEGMENT
$T35844 = -300						; size = 4
_text$ = -96						; size = 64
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_recurse$ = 12						; size = 1
?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z PROC ; icu_56::UXMLElement::getText, COMDAT
; _this$ = ecx
; Line 706
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T35844[ebp], 0
; Line 707
	mov	esi, esp
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
; Line 708
	movzx	eax, BYTE PTR _recurse$[ebp]
	push	eax
	lea	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z ; icu_56::UXMLElement::appendText
; Line 709
	mov	esi, esp
	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??0UnicodeString@icu_56@@QAE@$$QAV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR $T35844[ebp]
	or	ecx, 1
	mov	DWORD PTR $T35844[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	esi, esp
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 710
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@getText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN9@getText:
	DD	1
	DD	$LN8@getText
$LN8@getText:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN6@getText
$LN6@getText:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z$0:
	mov	esi, esp
	lea	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__unwindfunclet$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z$1:
	mov	eax, DWORD PTR $T35844[ebp]
	and	eax, 1
	je	$LN5@getText
	and	DWORD PTR $T35844[ebp], -2		; fffffffeH
	mov	esi, esp
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	DWORD PTR __imp_??1UnicodeString@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@getText:
	ret	0
__ehhandler$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?getText@UXMLElement@icu_56@@QBE?AVUnicodeString@2@C@Z ENDP ; icu_56::UXMLElement::getText
PUBLIC	??_R0?AVUnicodeString@icu_56@@@8		; icu_56::UnicodeString `RTTI Type Descriptor'
EXTRN	__imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVUnicodeString@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUnicodeString@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::UnicodeString `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUnicodeString@icu_56@@', 00H
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z
_TEXT	SEGMENT
_s$28776 = -56						; size = 4
_count$ = -44						; size = 4
_i$ = -32						; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_text$ = 8						; size = 4
_recurse$ = 12						; size = 1
?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z PROC ; icu_56::UXMLElement::appendText, COMDAT
; _this$ = ecx
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 715
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 716
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@appendText
$LN5@appendText:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@appendText:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN7@appendText
; Line 717
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax
; Line 718
	push	0
	push	OFFSET ??_R0?AVUnicodeString@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _s$28776[ebp], eax
; Line 719
	cmp	DWORD PTR _s$28776[ebp], 0
	je	SHORT $LN3@appendText
; Line 720
	mov	esi, esp
	mov	eax, DWORD PTR _s$28776[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	DWORD PTR __imp_?append@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN2@appendText
$LN3@appendText:
; Line 721
	movsx	eax, BYTE PTR _recurse$[ebp]
	test	eax, eax
	je	SHORT $LN2@appendText
; Line 722
	movzx	eax, BYTE PTR _recurse$[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _node$[ebp]
	call	?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z ; icu_56::UXMLElement::appendText
$LN2@appendText:
; Line 724
	jmp	$LN5@appendText
$LN7@appendText:
; Line 725
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?appendText@UXMLElement@icu_56@@ABEXAAVUnicodeString@2@C@Z ENDP ; icu_56::UXMLElement::appendText
_TEXT	ENDS
PUBLIC	?countAttributes@UXMLElement@icu_56@@QBEHXZ	; icu_56::UXMLElement::countAttributes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countAttributes@UXMLElement@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countAttributes@UXMLElement@icu_56@@QBEHXZ PROC	; icu_56::UXMLElement::countAttributes, COMDAT
; _this$ = ecx
; Line 728
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 729
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 730
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countAttributes@UXMLElement@icu_56@@QBEHXZ ENDP	; icu_56::UXMLElement::countAttributes
_TEXT	ENDS
PUBLIC	?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@HAAV32@0@Z ; icu_56::UXMLElement::getAttribute
EXTRN	__imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@HAAV32@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@HAAV32@0@Z PROC ; icu_56::UXMLElement::getAttribute, COMDAT
; _this$ = ecx
; Line 733
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 734
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN2@getAttribu
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@getAttribu
; Line 735
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 736
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	call	DWORD PTR __imp_?setTo@UnicodeString@icu_56@@QAEAAV12@ABV12@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 737
	mov	eax, DWORD PTR _value$[ebp]
	jmp	SHORT $LN3@getAttribu
; Line 738
	jmp	SHORT $LN3@getAttribu
$LN2@getAttribu:
; Line 739
	xor	eax, eax
$LN3@getAttribu:
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@HAAV32@0@Z ENDP ; icu_56::UXMLElement::getAttribute
_TEXT	ENDS
PUBLIC	?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ; icu_56::UXMLElement::getAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z
_TEXT	SEGMENT
_count$ = -44						; size = 4
_i$ = -32						; size = 4
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z PROC ; icu_56::UXMLElement::getAttribute, COMDAT
; _this$ = ecx
; Line 744
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 747
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ; icu_56::UXMLParser::findName
	mov	DWORD PTR _p$[ebp], eax
; Line 748
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN5@getAttribu@2
; Line 749
	xor	eax, eax
	jmp	SHORT $LN6@getAttribu@2
$LN5@getAttribu@2:
; Line 752
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 753
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@getAttribu@2
$LN3@getAttribu@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@getAttribu@2:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@getAttribu@2
; Line 754
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 76					; 0000004cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _p$[ebp], eax
	jne	SHORT $LN1@getAttribu@2
; Line 755
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 100				; 00000064H
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@getAttribu@2
$LN1@getAttribu@2:
; Line 757
	jmp	SHORT $LN3@getAttribu@2
$LN2@getAttribu@2:
; Line 758
	xor	eax, eax
$LN6@getAttribu@2:
; Line 759
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getAttribute@UXMLElement@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ENDP ; icu_56::UXMLElement::getAttribute
_TEXT	ENDS
PUBLIC	?countChildren@UXMLElement@icu_56@@QBEHXZ	; icu_56::UXMLElement::countChildren
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?countChildren@UXMLElement@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?countChildren@UXMLElement@icu_56@@QBEHXZ PROC		; icu_56::UXMLElement::countChildren, COMDAT
; _this$ = ecx
; Line 762
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 763
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 764
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?countChildren@UXMLElement@icu_56@@QBEHXZ ENDP		; icu_56::UXMLElement::countChildren
_TEXT	ENDS
PUBLIC	?getChild@UXMLElement@icu_56@@QBEPBVUObject@2@HAAW4UXMLNodeType@@@Z ; icu_56::UXMLElement::getChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getChild@UXMLElement@icu_56@@QBEPBVUObject@2@HAAW4UXMLNodeType@@@Z
_TEXT	SEGMENT
_node$28820 = -20					; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
_type$ = 12						; size = 4
?getChild@UXMLElement@icu_56@@QBEPBVUObject@2@HAAW4UXMLNodeType@@@Z PROC ; icu_56::UXMLElement::getChild, COMDAT
; _this$ = ecx
; Line 767
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 768
	cmp	DWORD PTR _i$[ebp], 0
	jl	SHORT $LN4@getChild
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@getChild
; Line 769
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$28820[ebp], eax
; Line 770
	push	0
	push	OFFSET ??_R0?AVUXMLElement@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _node$28820[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN3@getChild
; Line 771
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax], 1
; Line 772
	jmp	SHORT $LN2@getChild
$LN3@getChild:
; Line 773
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@getChild:
; Line 775
	mov	eax, DWORD PTR _node$28820[ebp]
	jmp	SHORT $LN5@getChild
; Line 776
	jmp	SHORT $LN5@getChild
$LN4@getChild:
; Line 777
	xor	eax, eax
$LN5@getChild:
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getChild@UXMLElement@icu_56@@QBEPBVUObject@2@HAAW4UXMLNodeType@@@Z ENDP ; icu_56::UXMLElement::getChild
_TEXT	ENDS
PUBLIC	?nextChildElement@UXMLElement@icu_56@@QBEPBV12@AAH@Z ; icu_56::UXMLElement::nextChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?nextChildElement@UXMLElement@icu_56@@QBEPBV12@AAH@Z
_TEXT	SEGMENT
tv73 = -244						; size = 4
_elem$28838 = -44					; size = 4
_count$ = -32						; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_i$ = 8							; size = 4
?nextChildElement@UXMLElement@icu_56@@QBEPBV12@AAH@Z PROC ; icu_56::UXMLElement::nextChildElement, COMDAT
; _this$ = ecx
; Line 782
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 783
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR [eax], 0
	jge	SHORT $LN4@nextChildE
; Line 784
	xor	eax, eax
	jmp	$LN5@nextChildE
$LN4@nextChildE:
; Line 788
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
$LN3@nextChildE:
; Line 789
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@nextChildE
; Line 790
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv73[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax
; Line 791
	push	0
	push	OFFSET ??_R0?AVUXMLElement@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _elem$28838[ebp], eax
; Line 792
	cmp	DWORD PTR _elem$28838[ebp], 0
	je	SHORT $LN1@nextChildE
; Line 793
	mov	eax, DWORD PTR _elem$28838[ebp]
	jmp	SHORT $LN5@nextChildE
$LN1@nextChildE:
; Line 795
	jmp	SHORT $LN3@nextChildE
$LN2@nextChildE:
; Line 796
	xor	eax, eax
$LN5@nextChildE:
; Line 797
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?nextChildElement@UXMLElement@icu_56@@QBEPBV12@AAH@Z ENDP ; icu_56::UXMLElement::nextChildElement
_TEXT	ENDS
PUBLIC	?getChildElement@UXMLElement@icu_56@@QBEPBV12@ABVUnicodeString@2@@Z ; icu_56::UXMLElement::getChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getChildElement@UXMLElement@icu_56@@QBEPBV12@ABVUnicodeString@2@@Z
_TEXT	SEGMENT
_elem$28854 = -68					; size = 4
_count$ = -56						; size = 4
_i$ = -44						; size = 4
_node$ = -32						; size = 4
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?getChildElement@UXMLElement@icu_56@@QBEPBV12@ABVUnicodeString@2@@Z PROC ; icu_56::UXMLElement::getChildElement, COMDAT
; _this$ = ecx
; Line 800
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 803
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+4]
	call	?findName@UXMLParser@icu_56@@QBEPBVUnicodeString@2@ABV32@@Z ; icu_56::UXMLParser::findName
	mov	DWORD PTR _p$[ebp], eax
; Line 804
	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@getChildEl
; Line 805
	xor	eax, eax
	jmp	$LN7@getChildEl
$LN6@getChildEl:
; Line 809
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	mov	esi, esp
	call	DWORD PTR __imp_?size@UVector@icu_56@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _count$[ebp], eax
; Line 810
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@getChildEl
$LN4@getChildEl:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@getChildEl:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN3@getChildEl
; Line 811
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 124				; 0000007cH
	call	DWORD PTR __imp_?elementAt@UVector@icu_56@@QBEPAXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax
; Line 812
	push	0
	push	OFFSET ??_R0?AVUXMLElement@icu_56@@@8
	push	OFFSET ??_R0?AVUObject@icu_56@@@8
	push	0
	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	call	___RTDynamicCast
	add	esp, 20					; 00000014H
	mov	DWORD PTR _elem$28854[ebp], eax
; Line 813
	cmp	DWORD PTR _elem$28854[ebp], 0
	je	SHORT $LN2@getChildEl
; Line 814
	mov	eax, DWORD PTR _elem$28854[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN2@getChildEl
; Line 815
	mov	eax, DWORD PTR _elem$28854[ebp]
	jmp	SHORT $LN7@getChildEl
$LN2@getChildEl:
; Line 818
	jmp	SHORT $LN4@getChildEl
$LN3@getChildEl:
; Line 819
	xor	eax, eax
$LN7@getChildEl:
; Line 820
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?getChildElement@UXMLElement@icu_56@@QBEPBV12@ABVUnicodeString@2@@Z ENDP ; icu_56::UXMLElement::getChildElement
_TEXT	ENDS
END

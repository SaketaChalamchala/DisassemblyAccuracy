; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\toolutil.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?value@?$integral_constant@I$0A@@tr1@std@@2IB	; std::tr1::integral_constant<unsigned int,0>::value
PUBLIC	?_Rank@?$_Arithmetic_traits@_N@std@@2HB		; std::_Arithmetic_traits<bool>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@D@std@@2HB		; std::_Arithmetic_traits<char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@C@std@@2HB		; std::_Arithmetic_traits<signed char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@E@std@@2HB		; std::_Arithmetic_traits<unsigned char>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@F@std@@2HB		; std::_Arithmetic_traits<short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@G@std@@2HB		; std::_Arithmetic_traits<unsigned short>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@H@std@@2HB		; std::_Arithmetic_traits<int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@I@std@@2HB		; std::_Arithmetic_traits<unsigned int>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@J@std@@2HB		; std::_Arithmetic_traits<long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@K@std@@2HB		; std::_Arithmetic_traits<unsigned long>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_J@std@@2HB		; std::_Arithmetic_traits<__int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@_K@std@@2HB		; std::_Arithmetic_traits<unsigned __int64>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@M@std@@2HB		; std::_Arithmetic_traits<float>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@N@std@@2HB		; std::_Arithmetic_traits<double>::_Rank
PUBLIC	?_Rank@?$_Arithmetic_traits@O@std@@2HB		; std::_Arithmetic_traits<long double>::_Rank
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
_DATA	SEGMENT
_currentYear DD	0ffffffffH
_DATA	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@O@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@O@std@@2HB DD 09H		; std::_Arithmetic_traits<long double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@N@std@@2HB DD 08H		; std::_Arithmetic_traits<double>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@M@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@M@std@@2HB DD 07H		; std::_Arithmetic_traits<float>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_K@std@@2HB DD 06H		; std::_Arithmetic_traits<unsigned __int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_J@std@@2HB DD 06H		; std::_Arithmetic_traits<__int64>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@K@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@K@std@@2HB DD 05H		; std::_Arithmetic_traits<unsigned long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@J@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@J@std@@2HB DD 05H		; std::_Arithmetic_traits<long>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@I@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@I@std@@2HB DD 04H		; std::_Arithmetic_traits<unsigned int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@H@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@H@std@@2HB DD 04H		; std::_Arithmetic_traits<int>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@G@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@G@std@@2HB DD 03H		; std::_Arithmetic_traits<unsigned short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@F@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@F@std@@2HB DD 03H		; std::_Arithmetic_traits<short>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@E@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@E@std@@2HB DD 02H		; std::_Arithmetic_traits<unsigned char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@C@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@C@std@@2HB DD 02H		; std::_Arithmetic_traits<signed char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@D@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@D@std@@2HB DD 02H		; std::_Arithmetic_traits<char>::_Rank
CONST	ENDS
;	COMDAT ?_Rank@?$_Arithmetic_traits@_N@std@@2HB
CONST	SEGMENT
?_Rank@?$_Arithmetic_traits@_N@std@@2HB DD 01H		; std::_Arithmetic_traits<bool>::_Rank
CONST	ENDS
;	COMDAT ?value@?$integral_constant@I$0A@@tr1@std@@2IB
CONST	SEGMENT
?value@?$integral_constant@I$0A@@tr1@std@@2IB DD 00H	; std::tr1::integral_constant<unsigned int,0>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
PUBLIC	??_7IcuToolErrorCode@icu_56@@6B@		; icu_56::IcuToolErrorCode::`vftable'
PUBLIC	??0IcuToolErrorCode@icu_56@@QAE@PBD@Z		; icu_56::IcuToolErrorCode::IcuToolErrorCode
PUBLIC	??_R4IcuToolErrorCode@icu_56@@6B@		; icu_56::IcuToolErrorCode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIcuToolErrorCode@icu_56@@@8		; icu_56::IcuToolErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3IcuToolErrorCode@icu_56@@8			; icu_56::IcuToolErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IcuToolErrorCode@icu_56@@8			; icu_56::IcuToolErrorCode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8	; icu_56::IcuToolErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ErrorCode@icu_56@@8		; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVErrorCode@icu_56@@@8			; icu_56::ErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z		; icu_56::IcuToolErrorCode::`vector deleting destructor'
PUBLIC	?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ	; icu_56::IcuToolErrorCode::handleFailure
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\tools\toolutil\toolutil.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2ErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8 ; icu_56::ErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3ErrorCode@icu_56@@8 DD 00H				; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ErrorCode@icu_56@@8 DD FLAT:??_R0?AVErrorCode@icu_56@@@8 ; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8 DD FLAT:??_R0?AVIcuToolErrorCode@icu_56@@@8 ; icu_56::IcuToolErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2IcuToolErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8 ; icu_56::IcuToolErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3IcuToolErrorCode@icu_56@@8 DD 00H			; icu_56::IcuToolErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIcuToolErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVIcuToolErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::IcuToolErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIcuToolErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IcuToolErrorCode@icu_56@@6B@
rdata$r	SEGMENT
??_R4IcuToolErrorCode@icu_56@@6B@ DD 00H		; icu_56::IcuToolErrorCode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIcuToolErrorCode@icu_56@@@8
	DD	FLAT:??_R3IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7IcuToolErrorCode@icu_56@@6B@
CONST	SEGMENT
??_7IcuToolErrorCode@icu_56@@6B@ DD FLAT:??_R4IcuToolErrorCode@icu_56@@6B@ ; icu_56::IcuToolErrorCode::`vftable'
	DD	FLAT:??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z
	DD	FLAT:?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0IcuToolErrorCode@icu_56@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_loc$ = 8						; size = 4
??0IcuToolErrorCode@icu_56@@QAE@PBD@Z PROC		; icu_56::IcuToolErrorCode::IcuToolErrorCode, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuToolErrorCode@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _loc$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuToolErrorCode@icu_56@@QAE@PBD@Z ENDP		; icu_56::IcuToolErrorCode::IcuToolErrorCode
_TEXT	ENDS
PUBLIC	??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z	; icu_56::IcuToolErrorCode::IcuToolErrorCode
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z PROC		; icu_56::IcuToolErrorCode::IcuToolErrorCode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuToolErrorCode@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::IcuToolErrorCode::IcuToolErrorCode
_TEXT	ENDS
PUBLIC	??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::IcuToolErrorCode::operator=
EXTRN	__imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::IcuToolErrorCode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::IcuToolErrorCode::operator=
_TEXT	ENDS
PUBLIC	??1IcuToolErrorCode@icu_56@@UAE@XZ		; icu_56::IcuToolErrorCode::~IcuToolErrorCode
PUBLIC	??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z		; icu_56::IcuToolErrorCode::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z PROC		; icu_56::IcuToolErrorCode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuToolErrorCode@icu_56@@UAE@XZ	; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z ENDP		; icu_56::IcuToolErrorCode::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z PROC		; icu_56::IcuToolErrorCode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1IcuToolErrorCode@icu_56@@UAE@XZ ; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuToolErrorCode@icu_56@@UAE@XZ	; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z ENDP		; icu_56::IcuToolErrorCode::`vector deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??1ErrorCode@icu_56@@UAE@XZ:PROC
EXTRN	__imp_?isFailure@ErrorCode@icu_56@@QBECXZ:PROC
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\mozilla\intl\icu\source\tools\toolutil\toolutil.cpp
xdata$x	SEGMENT
__unwindtable$??1IcuToolErrorCode@icu_56@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1IcuToolErrorCode@icu_56@@UAE@XZ$0
__ehfuncinfo$??1IcuToolErrorCode@icu_56@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1IcuToolErrorCode@icu_56@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1IcuToolErrorCode@icu_56@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1IcuToolErrorCode@icu_56@@UAE@XZ PROC			; icu_56::IcuToolErrorCode::~IcuToolErrorCode, COMDAT
; _this$ = ecx
; Line 70
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1IcuToolErrorCode@icu_56@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuToolErrorCode@icu_56@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 72
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?isFailure@ErrorCode@icu_56@@QBECXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN2@IcuToolErr
	mov	ecx, DWORD PTR _this$[ebp]
	call	?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ ; icu_56::IcuToolErrorCode::handleFailure
$LN2@IcuToolErr:
; Line 73
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ErrorCode@icu_56@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1IcuToolErrorCode@icu_56@@UAE@XZ$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1ErrorCode@icu_56@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
__ehhandler$??1IcuToolErrorCode@icu_56@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1IcuToolErrorCode@icu_56@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1IcuToolErrorCode@icu_56@@UAE@XZ ENDP			; icu_56::IcuToolErrorCode::~IcuToolErrorCode
PUBLIC	??_C@_0BB@IABMEDBC@error?5at?5?$CFs?3?5?$CFs?6?$AA@ ; `string'
EXTRN	__imp__exit:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ:PROC
;	COMDAT ??_C@_0BB@IABMEDBC@error?5at?5?$CFs?3?5?$CFs?6?$AA@
CONST	SEGMENT
??_C@_0BB@IABMEDBC@error?5at?5?$CFs?3?5?$CFs?6?$AA@ DB 'error at %s: %s', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ PROC	; icu_56::IcuToolErrorCode::handleFailure, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?errorName@ErrorCode@icu_56@@QBEPBDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	push	OFFSET ??_C@_0BB@IABMEDBC@error?5at?5?$CFs?3?5?$CFs?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 77
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@handleFail:
; Line 78
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ ENDP	; icu_56::IcuToolErrorCode::handleFailure
_TEXT	ENDS
PUBLIC	_getCurrentYear
EXTRN	_ucal_close_56:PROC
EXTRN	_ucal_get_56:PROC
EXTRN	_ucal_setMillis_56:PROC
EXTRN	_ucal_getNow_56:PROC
EXTRN	_ucal_open_56:PROC
EXTRN	__fltused:DWORD
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getCurrentYear
_TEXT	SEGMENT
_cal$ = -20						; size = 4
_status$ = -8						; size = 4
_getCurrentYear PROC					; COMDAT
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 86
	mov	DWORD PTR _status$[ebp], 0
; Line 87
	mov	DWORD PTR _cal$[ebp], 0
; Line 89
	cmp	DWORD PTR _currentYear, -1
	jne	SHORT $LN1@getCurrent
; Line 90
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	0
	push	0
	push	-1
	push	0
	call	_ucal_open_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _cal$[ebp], eax
; Line 91
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	call	_ucal_getNow_56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	ecx, DWORD PTR _cal$[ebp]
	push	ecx
	call	_ucal_setMillis_56
	add	esp, 16					; 00000010H
; Line 92
	lea	eax, DWORD PTR _status$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _cal$[ebp]
	push	ecx
	call	_ucal_get_56
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _currentYear, eax
; Line 93
	mov	eax, DWORD PTR _cal$[ebp]
	push	eax
	call	_ucal_close_56
	add	esp, 4
$LN1@getCurrent:
; Line 98
	mov	eax, DWORD PTR _currentYear
; Line 99
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@getCurrent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@getCurrent:
	DD	1
	DD	$LN5@getCurrent
$LN5@getCurrent:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@getCurrent
$LN4@getCurrent:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
_getCurrentYear ENDP
_TEXT	ENDS
PUBLIC	_findBasename
PUBLIC	_getLongPathname
EXTRN	__imp__FindClose@4:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__memmove:PROC
EXTRN	_strlen:PROC
EXTRN	_uprv_checkValidMemory:PROC
EXTRN	__imp__FindFirstFileA@8:PROC
_BSS	SEGMENT
?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A DB 0140H DUP (?) ; `getLongPathname'::`2'::info
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _getLongPathname
_TEXT	SEGMENT
_basename$48713 = -20					; size = 4
_file$ = -8						; size = 4
_pathname$ = 8						; size = 4
_getLongPathname PROC					; COMDAT
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	esi, esp
	push	OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A
	mov	eax, DWORD PTR _pathname$[ebp]
	push	eax
	call	DWORD PTR __imp__FindFirstFileA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _file$[ebp], eax
; Line 108
	cmp	DWORD PTR _file$[ebp], -1
	je	$LN3@getLongPat
; Line 109
	movsx	eax, BYTE PTR ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+304
	test	eax, eax
	je	$LN2@getLongPat
; Line 111
	mov	eax, DWORD PTR _pathname$[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _basename$48713[ebp], eax
; Line 112
	mov	eax, DWORD PTR _basename$48713[ebp]
	cmp	eax, DWORD PTR _pathname$[ebp]
	je	SHORT $LN1@getLongPat
; Line 114
	push	1
	push	OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
	call	_uprv_checkValidMemory
	add	esp, 8
	push	OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
	mov	eax, DWORD PTR _basename$48713[ebp]
	sub	eax, DWORD PTR _pathname$[ebp]
	add	eax, OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
	push	eax
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	push	1
	mov	eax, DWORD PTR _pathname$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _basename$48713[ebp]
	sub	ecx, DWORD PTR _pathname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pathname$[ebp]
	push	edx
	push	OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@getLongPat:
; Line 117
	mov	DWORD PTR _pathname$[ebp], OFFSET ?info@?1??getLongPathname@@9@4U_WIN32_FIND_DATAA@@A+44
$LN2@getLongPat:
; Line 119
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__FindClose@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@getLongPat:
; Line 122
	mov	eax, DWORD PTR _pathname$[ebp]
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_getLongPathname ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	_findDirname
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__strrchr:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _findDirname
_TEXT	SEGMENT
_basenameAlt$ = -44					; size = 4
_basename$ = -32					; size = 4
_resultLen$ = -20					; size = 4
_resultPtr$ = -8					; size = 4
_path$ = 8						; size = 4
_buffer$ = 12						; size = 4
_bufLen$ = 16						; size = 4
_status$ = 20						; size = 4
_findDirname PROC					; COMDAT
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	mov	eax, DWORD PTR _status$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN8@findDirnam
	xor	eax, eax
	jmp	$LN9@findDirnam
$LN8@findDirnam:
; Line 128
	mov	DWORD PTR _resultPtr$[ebp], 0
; Line 129
	mov	DWORD PTR _resultLen$[ebp], 0
; Line 131
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _basename$[ebp], eax
; Line 133
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _basenameAlt$[ebp], eax
; Line 134
	cmp	DWORD PTR _basenameAlt$[ebp], 0
	je	SHORT $LN7@findDirnam
	cmp	DWORD PTR _basename$[ebp], 0
	je	SHORT $LN6@findDirnam
	mov	eax, DWORD PTR _basename$[ebp]
	cmp	eax, DWORD PTR _basenameAlt$[ebp]
	jae	SHORT $LN7@findDirnam
$LN6@findDirnam:
; Line 135
	mov	eax, DWORD PTR _basenameAlt$[ebp]
	mov	DWORD PTR _basename$[ebp], eax
$LN7@findDirnam:
; Line 138
	cmp	DWORD PTR _basename$[ebp], 0
	jne	SHORT $LN5@findDirnam
; Line 140
	mov	DWORD PTR _resultPtr$[ebp], OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 141
	mov	DWORD PTR _resultLen$[ebp], 0
; Line 142
	jmp	SHORT $LN4@findDirnam
$LN5@findDirnam:
; Line 143
	mov	eax, DWORD PTR _path$[ebp]
	mov	DWORD PTR _resultPtr$[ebp], eax
; Line 144
	mov	eax, DWORD PTR _basename$[ebp]
	sub	eax, DWORD PTR _path$[ebp]
	mov	DWORD PTR _resultLen$[ebp], eax
; Line 145
	cmp	DWORD PTR _resultLen$[ebp], 1
	jge	SHORT $LN4@findDirnam
; Line 146
	mov	DWORD PTR _resultLen$[ebp], 1
$LN4@findDirnam:
; Line 150
	mov	eax, DWORD PTR _resultLen$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _bufLen$[ebp]
	jg	SHORT $LN2@findDirnam
; Line 151
	push	1
	mov	eax, DWORD PTR _resultPtr$[ebp]
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	esi, esp
	mov	ecx, DWORD PTR _resultLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _resultPtr$[ebp]
	push	edx
	mov	eax, DWORD PTR _buffer$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 152
	mov	eax, DWORD PTR _buffer$[ebp]
	add	eax, DWORD PTR _resultLen$[ebp]
	mov	BYTE PTR [eax], 0
; Line 153
	mov	eax, DWORD PTR _buffer$[ebp]
	jmp	SHORT $LN9@findDirnam
; Line 154
	jmp	SHORT $LN9@findDirnam
$LN2@findDirnam:
; Line 155
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
; Line 156
	xor	eax, eax
$LN9@findDirnam:
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_findDirname ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _findBasename
_TEXT	SEGMENT
_basename$ = -8						; size = 4
_filename$ = 8						; size = 4
_findBasename PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\toolutil.cpp
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 162
	mov	esi, esp
	push	92					; 0000005cH
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _basename$[ebp], eax
; Line 166
	cmp	DWORD PTR _basename$[ebp], 0
	jne	SHORT $LN3@findBasena
; Line 172
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__strrchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _basename$[ebp], eax
$LN3@findBasena:
; Line 176
	cmp	DWORD PTR _basename$[ebp], 0
	je	SHORT $LN2@findBasena
; Line 177
	mov	eax, DWORD PTR _basename$[ebp]
	add	eax, 1
	jmp	SHORT $LN4@findBasena
; Line 178
	jmp	SHORT $LN4@findBasena
$LN2@findBasena:
; Line 179
	mov	eax, DWORD PTR _filename$[ebp]
$LN4@findBasena:
; Line 181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_findBasename ENDP
_TEXT	ENDS
PUBLIC	_uprv_mkdir
EXTRN	__imp___errno:PROC
EXTRN	__imp___mkdir:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_mkdir
_TEXT	SEGMENT
_retVal$ = -8						; size = 4
_pathname$ = 8						; size = 4
_status$ = 12						; size = 4
_uprv_mkdir PROC					; COMDAT
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 186
	mov	DWORD PTR _retVal$[ebp], 0
; Line 188
	mov	esi, esp
	mov	eax, DWORD PTR _pathname$[ebp]
	push	eax
	call	DWORD PTR __imp___mkdir
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _retVal$[ebp], eax
; Line 192
	cmp	DWORD PTR _retVal$[ebp], 0
	je	SHORT $LN2@uprv_mkdir
	mov	esi, esp
	call	DWORD PTR __imp___errno
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR [eax], 17			; 00000011H
	je	SHORT $LN2@uprv_mkdir
; Line 203
	mov	eax, DWORD PTR _status$[ebp]
	mov	DWORD PTR [eax], 4
$LN2@uprv_mkdir:
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_uprv_mkdir ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_uprv_fileExists
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _uprv_fileExists
_TEXT	SEGMENT
_stat_buf$ = -56					; size = 48
__$ArrayPad$ = -4					; size = 4
_file$ = 8						; size = 4
_uprv_fileExists PROC					; COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 212
	lea	eax, DWORD PTR _stat_buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_stat
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@uprv_fileE
; Line 213
	mov	al, 1
	jmp	SHORT $LN3@uprv_fileE
; Line 214
	jmp	SHORT $LN3@uprv_fileE
$LN2@uprv_fileE:
; Line 215
	xor	al, al
$LN3@uprv_fileE:
; Line 217
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@uprv_fileE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@uprv_fileE:
	DD	1
	DD	$LN6@uprv_fileE
$LN6@uprv_fileE:
	DD	-56					; ffffffc8H
	DD	48					; 00000030H
	DD	$LN5@uprv_fileE
$LN5@uprv_fileE:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_uprv_fileExists ENDP
_TEXT	ENDS
EXTRN	__imp___stat64i32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _stat
_TEXT	SEGMENT
__Filename$ = 8						; size = 4
__Stat$ = 12						; size = 4
_stat	PROC						; COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\sys\stat.inl
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR __Stat$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Filename$[ebp]
	push	ecx
	call	DWORD PTR __imp___stat64i32
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_stat	ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BL@HEDJGADP@error?3?5?$CFs?5?9?5out?5of?5memory?6?$AA@ ; `string'
PUBLIC	_utm_open
EXTRN	_strcpy:PROC
EXTRN	_uprv_malloc_56:PROC
;	COMDAT ??_C@_0BL@HEDJGADP@error?3?5?$CFs?5?9?5out?5of?5memory?6?$AA@
; File d:\mozilla\intl\icu\source\tools\toolutil\toolutil.cpp
CONST	SEGMENT
??_C@_0BL@HEDJGADP@error?3?5?$CFs?5?9?5out?5of?5memory?6?$AA@ DB 'error: '
	DB	'%s - out of memory', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _utm_open
_TEXT	SEGMENT
_mem$ = -8						; size = 4
_name$ = 8						; size = 4
_initialCapacity$ = 12					; size = 4
_maxCapacity$ = 16					; size = 4
_size$ = 20						; size = 4
_utm_open PROC						; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 251
	mov	eax, DWORD PTR _maxCapacity$[ebp]
	cmp	eax, DWORD PTR _initialCapacity$[ebp]
	jge	SHORT $LN2@utm_open
; Line 252
	mov	eax, DWORD PTR _initialCapacity$[ebp]
	mov	DWORD PTR _maxCapacity$[ebp], eax
$LN2@utm_open:
; Line 255
	mov	eax, DWORD PTR _initialCapacity$[ebp]
	imul	eax, DWORD PTR _size$[ebp]
	add	eax, 96					; 00000060H
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _mem$[ebp], eax
; Line 256
	cmp	DWORD PTR _mem$[ebp], 0
	jne	SHORT $LN1@utm_open
; Line 257
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@HEDJGADP@error?3?5?$CFs?5?9?5out?5of?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 258
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@utm_open:
; Line 260
	mov	eax, DWORD PTR _mem$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _mem$[ebp]
	mov	DWORD PTR [ecx+80], eax
; Line 262
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 263
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _initialCapacity$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 264
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _maxCapacity$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 265
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 266
	mov	eax, DWORD PTR _mem$[ebp]
	mov	DWORD PTR [eax+76], 0
; Line 267
	mov	eax, DWORD PTR _mem$[ebp]
$LN4@utm_open:
; Line 268
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_open ENDP
_TEXT	ENDS
PUBLIC	_utm_close
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utm_close
_TEXT	SEGMENT
_mem$ = 8						; size = 4
_utm_close PROC						; COMDAT
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 272
	cmp	DWORD PTR _mem$[ebp], 0
	je	SHORT $LN3@utm_close
; Line 273
	mov	eax, DWORD PTR _mem$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _mem$[ebp]
	cmp	DWORD PTR [ecx+80], eax
	je	SHORT $LN1@utm_close
; Line 274
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
$LN1@utm_close:
; Line 276
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@utm_close:
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_close ENDP
_TEXT	ENDS
PUBLIC	_utm_getStart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utm_getStart
_TEXT	SEGMENT
_mem$ = 8						; size = 4
_utm_getStart PROC					; COMDAT
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 283
	mov	eax, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [eax+80]
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_getStart ENDP
_TEXT	ENDS
PUBLIC	_utm_countItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utm_countItems
_TEXT	SEGMENT
_mem$ = 8						; size = 4
_utm_countItems PROC					; COMDAT
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 288
	mov	eax, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [eax+76]
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_countItems ENDP
_TEXT	ENDS
PUBLIC	_utm_alloc
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utm_alloc
_TEXT	SEGMENT
_newIndex$ = -32					; size = 4
_oldIndex$ = -20					; size = 4
_p$ = -8						; size = 4
_mem$ = 8						; size = 4
_utm_alloc PROC						; COMDAT
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 333
	mov	DWORD PTR _p$[ebp], 0
; Line 334
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _oldIndex$[ebp], ecx
; Line 335
	mov	eax, DWORD PTR _oldIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _newIndex$[ebp], eax
; Line 336
	mov	eax, DWORD PTR _newIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	?utm_hasCapacity@@YACPAUUToolMemory@@H@Z ; utm_hasCapacity
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@utm_alloc
; Line 337
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _oldIndex$[ebp]
	imul	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _mem$[ebp]
	add	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR _p$[ebp], ecx
; Line 338
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _newIndex$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 339
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	push	0
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN1@utm_alloc:
; Line 341
	mov	eax, DWORD PTR _p$[ebp]
; Line 342
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_alloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DL@CHCGDJBB@error?3?5?$CFs?5?9?5trying?5to?5use?5more?5t@ ; `string'
EXTRN	_uprv_realloc_56:PROC
;	COMDAT ??_C@_0DL@CHCGDJBB@error?3?5?$CFs?5?9?5trying?5to?5use?5more?5t@
CONST	SEGMENT
??_C@_0DL@CHCGDJBB@error?3?5?$CFs?5?9?5trying?5to?5use?5more?5t@ DB 'erro'
	DB	'r: %s - trying to use more than maxCapacity=%ld units', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?utm_hasCapacity@@YACPAUUToolMemory@@H@Z
_TEXT	SEGMENT
_newCapacity$48795 = -8					; size = 4
_mem$ = 8						; size = 4
_capacity$ = 12						; size = 4
?utm_hasCapacity@@YACPAUUToolMemory@@H@Z PROC		; utm_hasCapacity, COMDAT
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 294
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	cmp	ecx, DWORD PTR _capacity$[ebp]
	jge	$LN10@utm_hasCap
; Line 297
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	ecx, DWORD PTR _capacity$[ebp]
	jge	SHORT $LN9@utm_hasCap
; Line 299
	mov	esi, esp
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	push	edx
	push	OFFSET ??_C@_0DL@CHCGDJBB@error?3?5?$CFs?5?9?5trying?5to?5use?5more?5t@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 300
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@utm_hasCap:
; Line 304
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	shl	ecx, 1
	cmp	DWORD PTR _capacity$[ebp], ecx
	jl	SHORT $LN8@utm_hasCap
; Line 305
	mov	eax, DWORD PTR _capacity$[ebp]
	mov	DWORD PTR _newCapacity$48795[ebp], eax
	jmp	SHORT $LN7@utm_hasCap
$LN8@utm_hasCap:
; Line 306
	mov	eax, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [eax+68]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	cmp	DWORD PTR [edx+64], eax
	jg	SHORT $LN6@utm_hasCap
; Line 307
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	shl	ecx, 1
	mov	DWORD PTR _newCapacity$48795[ebp], ecx
; Line 308
	jmp	SHORT $LN7@utm_hasCap
$LN6@utm_hasCap:
; Line 309
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _newCapacity$48795[ebp], ecx
$LN7@utm_hasCap:
; Line 312
	mov	eax, DWORD PTR _mem$[ebp]
	add	eax, 88					; 00000058H
	mov	ecx, DWORD PTR _mem$[ebp]
	cmp	DWORD PTR [ecx+80], eax
	jne	SHORT $LN4@utm_hasCap
; Line 313
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _newCapacity$48795[ebp]
	imul	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	mov	edx, DWORD PTR _mem$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 314
	mov	eax, DWORD PTR _mem$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN3@utm_hasCap
; Line 315
	push	1
	mov	eax, DWORD PTR _mem$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	ecx, DWORD PTR _mem$[ebp]
	mov	edx, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [ecx+76]
	imul	eax, DWORD PTR [edx+72]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	add	ecx, 88					; 00000058H
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN3@utm_hasCap:
; Line 317
	jmp	SHORT $LN2@utm_hasCap
$LN4@utm_hasCap:
; Line 318
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _newCapacity$48795[ebp]
	imul	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR _mem$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	call	_uprv_realloc_56
	add	esp, 8
	mov	ecx, DWORD PTR _mem$[ebp]
	mov	DWORD PTR [ecx+80], eax
$LN2@utm_hasCap:
; Line 321
	mov	eax, DWORD PTR _mem$[ebp]
	cmp	DWORD PTR [eax+80], 0
	jne	SHORT $LN1@utm_hasCap
; Line 322
	mov	esi, esp
	mov	eax, DWORD PTR _mem$[ebp]
	push	eax
	push	OFFSET ??_C@_0BL@HEDJGADP@error?3?5?$CFs?5?9?5out?5of?5memory?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 323
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@utm_hasCap:
; Line 325
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _newCapacity$48795[ebp]
	mov	DWORD PTR [eax+64], ecx
$LN10@utm_hasCap:
; Line 328
	mov	al, 1
$LN12@utm_hasCap:
; Line 329
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?utm_hasCapacity@@YACPAUUToolMemory@@H@Z ENDP		; utm_hasCapacity
_TEXT	ENDS
PUBLIC	_utm_allocN
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _utm_allocN
_TEXT	SEGMENT
_newIndex$ = -32					; size = 4
_oldIndex$ = -20					; size = 4
_p$ = -8						; size = 4
_mem$ = 8						; size = 4
_n$ = 12						; size = 4
_utm_allocN PROC					; COMDAT
; Line 345
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 346
	mov	DWORD PTR _p$[ebp], 0
; Line 347
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _oldIndex$[ebp], ecx
; Line 348
	mov	eax, DWORD PTR _oldIndex$[ebp]
	add	eax, DWORD PTR _n$[ebp]
	mov	DWORD PTR _newIndex$[ebp], eax
; Line 349
	mov	eax, DWORD PTR _newIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _mem$[ebp]
	push	ecx
	call	?utm_hasCapacity@@YACPAUUToolMemory@@H@Z ; utm_hasCapacity
	add	esp, 8
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN1@utm_allocN
; Line 350
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _oldIndex$[ebp]
	imul	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _mem$[ebp]
	add	ecx, DWORD PTR [edx+80]
	mov	DWORD PTR _p$[ebp], ecx
; Line 351
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _newIndex$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 352
	mov	eax, DWORD PTR _mem$[ebp]
	mov	ecx, DWORD PTR _n$[ebp]
	imul	ecx, DWORD PTR [eax+72]
	push	ecx
	push	0
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
$LN1@utm_allocN:
; Line 354
	mov	eax, DWORD PTR _p$[ebp]
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_utm_allocN ENDP
_TEXT	ENDS
END

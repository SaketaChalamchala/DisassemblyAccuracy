; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\package.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	??_C@_04MDINJAGJ@lb?$DPe?$AA@			; `string'
_DATA	SEGMENT
_types	DD	FLAT:??_C@_04MDINJAGJ@lb?$DPe?$AA@
_DATA	ENDS
;	COMDAT ??_C@_04MDINJAGJ@lb?$DPe?$AA@
CONST	SEGMENT
??_C@_04MDINJAGJ@lb?$DPe?$AA@ DB 'lb?e', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_dataInfo DW	014H
	DW	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	043H
	DB	06dH
	DB	06eH
	DB	044H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
PUBLIC	??_7IcuToolErrorCode@icu_56@@6B@		; icu_56::IcuToolErrorCode::`vftable'
PUBLIC	??0IcuToolErrorCode@icu_56@@QAE@PBD@Z		; icu_56::IcuToolErrorCode::IcuToolErrorCode
PUBLIC	??_R4IcuToolErrorCode@icu_56@@6B@		; icu_56::IcuToolErrorCode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIcuToolErrorCode@icu_56@@@8		; icu_56::IcuToolErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3IcuToolErrorCode@icu_56@@8			; icu_56::IcuToolErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IcuToolErrorCode@icu_56@@8			; icu_56::IcuToolErrorCode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8	; icu_56::IcuToolErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ErrorCode@icu_56@@8		; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVErrorCode@icu_56@@@8			; icu_56::ErrorCode `RTTI Type Descriptor'
PUBLIC	??_R3ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ErrorCode@icu_56@@8			; icu_56::ErrorCode::`RTTI Base Class Array'
PUBLIC	??_R13?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
PUBLIC	??_R0?AVUMemory@icu_56@@@8			; icu_56::UMemory `RTTI Type Descriptor'
PUBLIC	??_R3UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UMemory@icu_56@@8				; icu_56::UMemory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UMemory@icu_56@@8			; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z		; icu_56::IcuToolErrorCode::`vector deleting destructor'
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@XZ:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ:PROC ; icu_56::IcuToolErrorCode::handleFailure
;	COMDAT ??_R1A@?0A@EA@UMemory@icu_56@@8
; File d:\mozilla\intl\icu\source\tools\toolutil\toolutil.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2UMemory@icu_56@@8
rdata$r	SEGMENT
??_R2UMemory@icu_56@@8 DD FLAT:??_R1A@?0A@EA@UMemory@icu_56@@8 ; icu_56::UMemory::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3UMemory@icu_56@@8
rdata$r	SEGMENT
??_R3UMemory@icu_56@@8 DD 00H				; icu_56::UMemory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVUMemory@icu_56@@@8
_DATA	SEGMENT
??_R0?AVUMemory@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::UMemory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVUMemory@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	SEGMENT
??_R13?0A@EA@UMemory@icu_56@@8 DD FLAT:??_R0?AVUMemory@icu_56@@@8 ; icu_56::UMemory::`RTTI Base Class Descriptor at (4,-1,0,64)'
	DD	00H
	DD	04H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2ErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8 ; icu_56::ErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3ErrorCode@icu_56@@8 DD 00H				; icu_56::ErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@	; icu_56::ErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ErrorCode@icu_56@@8 DD FLAT:??_R0?AVErrorCode@icu_56@@@8 ; icu_56::ErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8 DD FLAT:??_R0?AVIcuToolErrorCode@icu_56@@@8 ; icu_56::IcuToolErrorCode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R2IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R2IcuToolErrorCode@icu_56@@8 DD FLAT:??_R1A@?0A@EA@IcuToolErrorCode@icu_56@@8 ; icu_56::IcuToolErrorCode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ErrorCode@icu_56@@8
	DD	FLAT:??_R13?0A@EA@UMemory@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R3IcuToolErrorCode@icu_56@@8
rdata$r	SEGMENT
??_R3IcuToolErrorCode@icu_56@@8 DD 00H			; icu_56::IcuToolErrorCode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIcuToolErrorCode@icu_56@@@8
_DATA	SEGMENT
??_R0?AVIcuToolErrorCode@icu_56@@@8 DD FLAT:??_7type_info@@6B@ ; icu_56::IcuToolErrorCode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIcuToolErrorCode@icu_56@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IcuToolErrorCode@icu_56@@6B@
rdata$r	SEGMENT
??_R4IcuToolErrorCode@icu_56@@6B@ DD 00H		; icu_56::IcuToolErrorCode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIcuToolErrorCode@icu_56@@@8
	DD	FLAT:??_R3IcuToolErrorCode@icu_56@@8
rdata$r	ENDS
;	COMDAT ??_7IcuToolErrorCode@icu_56@@6B@
CONST	SEGMENT
??_7IcuToolErrorCode@icu_56@@6B@ DD FLAT:??_R4IcuToolErrorCode@icu_56@@6B@ ; icu_56::IcuToolErrorCode::`vftable'
	DD	FLAT:??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z
	DD	FLAT:?handleFailure@IcuToolErrorCode@icu_56@@MBEXXZ
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0IcuToolErrorCode@icu_56@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_loc$ = 8						; size = 4
??0IcuToolErrorCode@icu_56@@QAE@PBD@Z PROC		; icu_56::IcuToolErrorCode::IcuToolErrorCode, COMDAT
; _this$ = ecx
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuToolErrorCode@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _loc$[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuToolErrorCode@icu_56@@QAE@PBD@Z ENDP		; icu_56::IcuToolErrorCode::IcuToolErrorCode
_TEXT	ENDS
PUBLIC	??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z	; icu_56::IcuToolErrorCode::IcuToolErrorCode
EXTRN	__imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z PROC		; icu_56::IcuToolErrorCode::IcuToolErrorCode, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0ErrorCode@icu_56@@QAE@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IcuToolErrorCode@icu_56@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IcuToolErrorCode@icu_56@@QAE@ABV01@@Z ENDP		; icu_56::IcuToolErrorCode::IcuToolErrorCode
_TEXT	ENDS
PUBLIC	??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z	; icu_56::IcuToolErrorCode::operator=
EXTRN	__imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z PROC	; icu_56::IcuToolErrorCode::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??4ErrorCode@icu_56@@QAEAAV01@ABV01@@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4IcuToolErrorCode@icu_56@@QAEAAV01@ABV01@@Z ENDP	; icu_56::IcuToolErrorCode::operator=
_TEXT	ENDS
PUBLIC	??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z		; icu_56::IcuToolErrorCode::`scalar deleting destructor'
EXTRN	__imp_??3UMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??1IcuToolErrorCode@icu_56@@UAE@XZ:PROC		; icu_56::IcuToolErrorCode::~IcuToolErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z PROC		; icu_56::IcuToolErrorCode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuToolErrorCode@icu_56@@UAE@XZ	; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GIcuToolErrorCode@icu_56@@UAEPAXI@Z ENDP		; icu_56::IcuToolErrorCode::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	__imp_??_VUMemory@icu_56@@SAXPAX@Z:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z PROC		; icu_56::IcuToolErrorCode::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@vector
	push	OFFSET ??1IcuToolErrorCode@icu_56@@UAE@XZ ; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	12					; 0000000cH
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@vector
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp_??_VUMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN4@vector
$LN3@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1IcuToolErrorCode@icu_56@@UAE@XZ	; icu_56::IcuToolErrorCode::~IcuToolErrorCode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@vector
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	DWORD PTR __imp_??3UMemory@icu_56@@SAXPAX@Z
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN4@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_EIcuToolErrorCode@icu_56@@UAEPAXI@Z ENDP		; icu_56::IcuToolErrorCode::`vector deleting destructor'
_TEXT	ENDS
PUBLIC	?setAutoPrefix@Package@icu_56@@QAEXXZ		; icu_56::Package::setAutoPrefix
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAutoPrefix@Package@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setAutoPrefix@Package@icu_56@@QAEXXZ PROC		; icu_56::Package::setAutoPrefix, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\tools\toolutil\package.h
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1166], 1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setAutoPrefix@Package@icu_56@@QAEXXZ ENDP		; icu_56::Package::setAutoPrefix
_TEXT	ENDS
PUBLIC	?setAutoPrefixWithType@Package@icu_56@@QAEXXZ	; icu_56::Package::setAutoPrefixWithType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setAutoPrefixWithType@Package@icu_56@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?setAutoPrefixWithType@Package@icu_56@@QAEXXZ PROC	; icu_56::Package::setAutoPrefixWithType, COMDAT
; _this$ = ecx
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1166], 1
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1167], 1
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?setAutoPrefixWithType@Package@icu_56@@QAEXXZ ENDP	; icu_56::Package::setAutoPrefixWithType
_TEXT	ENDS
PUBLIC	??4Package@icu_56@@QAEAAV01@ABV01@@Z		; icu_56::Package::operator=
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Package@icu_56@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Package@icu_56@@QAEAAV01@ABV01@@Z PROC		; icu_56::Package::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	201216					; 00031200H
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4Package@icu_56@@QAEAAV01@ABV01@@Z ENDP		; icu_56::Package::operator=
_TEXT	ENDS
PUBLIC	_getDataInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _getDataInfo
_TEXT	SEGMENT
_pInfo$ = -20						; size = 4
_pHeader$ = -8						; size = 4
_data$ = 8						; size = 4
_length$ = 12						; size = 4
_infoLength$ = 16					; size = 4
_headerLength$ = 20					; size = 4
_pErrorCode$ = 24					; size = 4
_getDataInfo PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\package.cpp
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	cmp	DWORD PTR _pErrorCode$[ebp], 0
	je	SHORT $LN10@getDataInf
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	edx, al
	test	edx, edx
	je	SHORT $LN11@getDataInf
$LN10@getDataInf:
; Line 117
	xor	eax, eax
	jmp	$LN12@getDataInf
$LN11@getDataInf:
; Line 121
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN8@getDataInf
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN9@getDataInf
	cmp	DWORD PTR _length$[ebp], 24		; 00000018H
	jge	SHORT $LN9@getDataInf
$LN8@getDataInf:
; Line 122
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 123
	xor	eax, eax
	jmp	$LN12@getDataInf
$LN9@getDataInf:
; Line 126
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR _pHeader$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _pHeader$[ebp]
	add	eax, 4
	mov	DWORD PTR _pInfo$[ebp], eax
; Line 132
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN5@getDataInf
	cmp	DWORD PTR _length$[ebp], 24		; 00000018H
	jl	SHORT $LN6@getDataInf
$LN5@getDataInf:
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	cmp	ecx, 218				; 000000daH
	jne	SHORT $LN6@getDataInf
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN6@getDataInf
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+6]
	cmp	ecx, 2
	je	SHORT $LN7@getDataInf
$LN6@getDataInf:
; Line 133
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 134
	xor	eax, eax
	jmp	$LN12@getDataInf
$LN7@getDataInf:
; Line 137
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN4@getDataInf
; Line 138
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _headerLength$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 139
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _infoLength$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 140
	jmp	SHORT $LN3@getDataInf
$LN4@getDataInf:
; Line 141
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?readSwapUInt16@@YAGG@Z			; readSwapUInt16
	add	esp, 4
	movzx	edx, ax
	mov	eax, DWORD PTR _headerLength$[ebp]
	mov	DWORD PTR [eax], edx
; Line 142
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, WORD PTR [eax]
	push	ecx
	call	?readSwapUInt16@@YAGG@Z			; readSwapUInt16
	add	esp, 4
	movzx	edx, ax
	mov	eax, DWORD PTR _infoLength$[ebp]
	mov	DWORD PTR [eax], edx
$LN3@getDataInf:
; Line 149
	mov	eax, DWORD PTR _headerLength$[ebp]
	cmp	DWORD PTR [eax], 24			; 00000018H
	jl	SHORT $LN1@getDataInf
	mov	eax, DWORD PTR _infoLength$[ebp]
	cmp	DWORD PTR [eax], 20			; 00000014H
	jl	SHORT $LN1@getDataInf
	mov	eax, DWORD PTR _infoLength$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	edx, DWORD PTR _headerLength$[ebp]
	cmp	DWORD PTR [edx], ecx
	jl	SHORT $LN1@getDataInf
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN2@getDataInf
	mov	eax, DWORD PTR _headerLength$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN2@getDataInf
$LN1@getDataInf:
; Line 150
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 16			; 00000010H
; Line 151
	xor	eax, eax
	jmp	SHORT $LN12@getDataInf
$LN2@getDataInf:
; Line 154
	mov	eax, DWORD PTR _pInfo$[ebp]
$LN12@getDataInf:
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_getDataInfo ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?U_FAILURE@@YACW4UErrorCode@@@Z
_TEXT	SEGMENT
_code$ = 8						; size = 4
?U_FAILURE@@YACW4UErrorCode@@@Z PROC			; U_FAILURE, COMDAT
; File d:\mozilla\intl\icu\include\unicode\utypes.h
; Line 705
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	cmp	DWORD PTR _code$[ebp], 0
	setg	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?U_FAILURE@@YACW4UErrorCode@@@Z ENDP			; U_FAILURE
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?readSwapUInt16@@YAGG@Z
_TEXT	SEGMENT
_x$ = 8							; size = 2
?readSwapUInt16@@YAGG@Z PROC				; readSwapUInt16, COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\package.cpp
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 69
	movzx	eax, WORD PTR _x$[ebp]
	shl	eax, 8
	movzx	ecx, WORD PTR _x$[ebp]
	sar	ecx, 8
	or	eax, ecx
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?readSwapUInt16@@YAGG@Z ENDP				; readSwapUInt16
_TEXT	ENDS
PUBLIC	??0Package@icu_56@@QAE@XZ			; icu_56::Package::Package
EXTRN	_memset:PROC
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Package@icu_56@@QAE@XZ
_TEXT	SEGMENT
_length$5040 = -32					; size = 4
_pHeader$ = -20						; size = 4
_this$ = -8						; size = 4
??0Package@icu_56@@QAE@XZ PROC				; icu_56::Package::Package, COMDAT
; _this$ = ecx
; Line 383
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1166], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1167], 0
; Line 384
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax], 0
; Line 385
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+64], 0
; Line 386
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+128], 0
; Line 387
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1156], 0
; Line 388
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1164], 0
; Line 389
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+1165], 0
; Line 391
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1168], 0
; Line 392
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1172], 0
; Line 393
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1176], 0
; Line 395
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1184], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1180], 0
; Line 397
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201188], 0
; Line 398
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201196], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201192], 0
; Line 399
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201204], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201200], 0
; Line 400
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201208], -1
; Line 404
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 132				; 00000084H
	mov	DWORD PTR _pHeader$[ebp], eax
; Line 405
	mov	eax, DWORD PTR _pHeader$[ebp]
	mov	BYTE PTR [eax+2], 218			; 000000daH
; Line 406
	mov	eax, DWORD PTR _pHeader$[ebp]
	mov	BYTE PTR [eax+3], 39			; 00000027H
; Line 407
	push	20					; 00000014H
	push	OFFSET _dataInfo
	mov	eax, DWORD PTR _pHeader$[ebp]
	add	eax, 4
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1160], 24		; 00000018H
; Line 409
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	and	ecx, 15					; 0000000fH
	je	SHORT $LN1@Package
; Line 411
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	add	ecx, 15					; 0000000fH
	and	ecx, -16				; fffffff0H
	mov	DWORD PTR _length$5040[ebp], ecx
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$5040[ebp]
	sub	ecx, DWORD PTR [eax+1160]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1160]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+132]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 413
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$5040[ebp]
	mov	DWORD PTR [eax+1160], ecx
$LN1@Package:
; Line 415
	mov	eax, DWORD PTR _pHeader$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+1160]
	mov	WORD PTR [eax], dx
; Line 416
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Package@icu_56@@QAE@XZ ENDP				; icu_56::Package::Package
_TEXT	ENDS
PUBLIC	??1Package@icu_56@@QAE@XZ			; icu_56::Package::~Package
EXTRN	_uprv_free_56:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Package@icu_56@@QAE@XZ
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
??1Package@icu_56@@QAE@XZ PROC				; icu_56::Package::~Package, COMDAT
; _this$ = ecx
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 421
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 423
	mov	DWORD PTR _idx$[ebp], 0
	jmp	SHORT $LN4@Package@2
$LN3@Package@2:
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	DWORD PTR _idx$[ebp], eax
$LN4@Package@2:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN2@Package@2
; Line 424
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	movsx	eax, BYTE PTR [edx+eax+12]
	test	eax, eax
	je	SHORT $LN1@Package@2
; Line 425
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN1@Package@2:
; Line 427
	jmp	SHORT $LN3@Package@2
$LN2@Package@2:
; Line 429
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 430
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Package@icu_56@@QAE@XZ ENDP				; icu_56::Package::~Package
_TEXT	ENDS
PUBLIC	??_C@_0CC@PJGMPHDM@icupkg?3?5?9?9toc_prefix?5?$CFs?5too?5long@ ; `string'
PUBLIC	?setPrefix@Package@icu_56@@QAEXPBD@Z		; icu_56::Package::setPrefix
EXTRN	_strcpy:PROC
EXTRN	__imp__exit:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	_strlen:PROC
;	COMDAT ??_C@_0CC@PJGMPHDM@icupkg?3?5?9?9toc_prefix?5?$CFs?5too?5long@
CONST	SEGMENT
??_C@_0CC@PJGMPHDM@icupkg?3?5?9?9toc_prefix?5?$CFs?5too?5long@ DB 'icupkg'
	DB	': --toc_prefix %s too long', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?setPrefix@Package@icu_56@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
?setPrefix@Package@icu_56@@QAEXPBD@Z PROC		; icu_56::Package::setPrefix, COMDAT
; _this$ = ecx
; Line 433
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 434
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	eax, 64					; 00000040H
	jb	SHORT $LN1@setPrefix
; Line 435
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	OFFSET ??_C@_0CC@PJGMPHDM@icupkg?3?5?9?9toc_prefix?5?$CFs?5too?5long@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 436
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setPrefix:
; Line 438
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	call	_strcpy
	add	esp, 8
$LN3@setPrefix:
; Line 439
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPrefix@Package@icu_56@@QAEXPBD@Z ENDP		; icu_56::Package::setPrefix
_TEXT	ENDS
PUBLIC	?sortItems@Package@icu_56@@AAEXXZ		; icu_56::Package::sortItems
PUBLIC	??_C@_01HHGOMJKL@l?$AA@				; `string'
PUBLIC	??_C@_0DB@NCAFBFKP@icupkg?3?5not?5an?5ICU?5data?5file?3?5it@ ; `string'
PUBLIC	??_C@_0DM@JBCPKHHB@icupkg?3?5input?5?4dat?5item?5name?5?$CC?$CFs@ ; `string'
PUBLIC	??_C@_0GD@OMDDMBFA@icupkg?3?5?9?9auto_toc_prefix_with_t@ ; `string'
PUBLIC	??_C@_0GD@BNKEEKBB@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ ; `string'
PUBLIC	??_C@_0FI@DEHMAJHI@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ ; `string'
PUBLIC	?strchr@@YAPADPADH@Z				; strchr
PUBLIC	??_C@_0EA@EACJDGNN@icupkg?5failed?5to?5swap?5the?5input?5@ ; `string'
PUBLIC	??_C@_0DE@PFBCELMC@icupkg?3?5total?5length?5of?5item?5nam@ ; `string'
PUBLIC	??_C@_0CH@HHPINJOH@icupkg?3?5too?5many?5items?0?5maximum?5@ ; `string'
PUBLIC	??_C@_0EG@NAOMHJME@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ ; `string'
PUBLIC	??_C@_0DN@DJDAOAPB@icupkg?3?5too?5few?5bytes?5?$CI?$CFld?5after@ ; `string'
PUBLIC	?setItemCapacity@Package@icu_56@@AAEXH@Z	; icu_56::Package::setItemCapacity
PUBLIC	??_C@_0GI@INIGLCEL@icupkg?3?5data?5format?5?$CF02x?4?$CF02x?4?$CF0@ ; `string'
PUBLIC	??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?readPackage@Package@icu_56@@QAEXPBD@Z		; icu_56::Package::readPackage
EXTRN	_udata_closeSwapper_56:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	_memcmp:PROC
EXTRN	_udata_readInt32_56:PROC
EXTRN	_udata_swapDataHeader_56:PROC
EXTRN	_u_errorName_56:PROC
EXTRN	_udata_openSwapper_56:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_01HHGOMJKL@l?$AA@
CONST	SEGMENT
??_C@_01HHGOMJKL@l?$AA@ DB 'l', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@NCAFBFKP@icupkg?3?5not?5an?5ICU?5data?5file?3?5it@
CONST	SEGMENT
??_C@_0DB@NCAFBFKP@icupkg?3?5not?5an?5ICU?5data?5file?3?5it@ DB 'icupkg: '
	DB	'not an ICU data file: item "%s" in "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@JBCPKHHB@icupkg?3?5input?5?4dat?5item?5name?5?$CC?$CFs@
CONST	SEGMENT
??_C@_0DM@JBCPKHHB@icupkg?3?5input?5?4dat?5item?5name?5?$CC?$CFs@ DB 'icu'
	DB	'pkg: input .dat item name "%s" does not start with "%s"', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@OMDDMBFA@icupkg?3?5?9?9auto_toc_prefix_with_t@
CONST	SEGMENT
??_C@_0GD@OMDDMBFA@icupkg?3?5?9?9auto_toc_prefix_with_t@ DB 'icupkg: --au'
	DB	'to_toc_prefix_with_type but the prefix of the first entry "%s'
	DB	'" does not end with ''%c''', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@BNKEEKBB@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
CONST	SEGMENT
??_C@_0GD@BNKEEKBB@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ DB 'icupkg: -'
	DB	'-auto_toc_prefix[_with_type] but the prefix of the first entr'
	DB	'y "%s" is empty or too long', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@DEHMAJHI@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
CONST	SEGMENT
??_C@_0FI@DEHMAJHI@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ DB 'icupkg: -'
	DB	'-auto_toc_prefix[_with_type] but the first entry "%s" does no'
	DB	't contain a ''%c''', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@EACJDGNN@icupkg?5failed?5to?5swap?5the?5input?5@
CONST	SEGMENT
??_C@_0EA@EACJDGNN@icupkg?5failed?5to?5swap?5the?5input?5@ DB 'icupkg fai'
	DB	'led to swap the input .dat package item name strings', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@PFBCELMC@icupkg?3?5total?5length?5of?5item?5nam@
CONST	SEGMENT
??_C@_0DE@PFBCELMC@icupkg?3?5total?5length?5of?5item?5nam@ DB 'icupkg: to'
	DB	'tal length of item name strings too long', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HHPINJOH@icupkg?3?5too?5many?5items?0?5maximum?5@
CONST	SEGMENT
??_C@_0CH@HHPINJOH@icupkg?3?5too?5many?5items?0?5maximum?5@ DB 'icupkg: t'
	DB	'oo many items, maximum is %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@NAOMHJME@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
CONST	SEGMENT
??_C@_0EG@NAOMHJME@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@ DB 'icupkg: -'
	DB	'-auto_toc_prefix[_with_type] but the input package is empty', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@DJDAOAPB@icupkg?3?5too?5few?5bytes?5?$CI?$CFld?5after@
CONST	SEGMENT
??_C@_0DN@DJDAOAPB@icupkg?3?5too?5few?5bytes?5?$CI?$CFld?5after@ DB 'icup'
	DB	'kg: too few bytes (%ld after header) for a .dat package', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@INIGLCEL@icupkg?3?5data?5format?5?$CF02x?4?$CF02x?4?$CF0@
CONST	SEGMENT
??_C@_0GI@INIGLCEL@icupkg?3?5data?5format?5?$CF02x?4?$CF02x?4?$CF0@ DB 'i'
	DB	'cupkg: data format %02x.%02x.%02x.%02x (format version %02x) '
	DB	'is not recognized as an ICU .dat package', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@
CONST	SEGMENT
??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@ DB 'i'
	DB	'cupkg: udata_openSwapper("%s") failed - %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?readPackage@Package@icu_56@@QAEXPBD@Z
_TEXT	SEGMENT
_inPkgNameLength$5129 = -292				; size = 4
_prefixLimit$5118 = -280				; size = 4
_prefixLength$5116 = -268				; size = 4
_stringsOffset$5105 = -256				; size = 4
_inItemStrings$5102 = -244				; size = 4
_s$5101 = -232						; size = 4
_prefix$5100 = -220					; size = 68
_inEntries$ = -144					; size = 4
_type$ = -129						; size = 1
_typeEnum$ = -120					; size = 4
_itemLength$ = -108					; size = 4
_i$ = -96						; size = 4
_offset$ = -84						; size = 4
_length$ = -72						; size = 4
_inBytes$ = -60						; size = 4
_errorCode$ = -48					; size = 4
_pInfo$ = -36						; size = 4
_ds$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
?readPackage@Package@icu_56@@QAEXPBD@Z PROC		; icu_56::Package::readPackage, COMDAT
; _this$ = ecx
; Line 442
	push	ebp
	mov	ebp, esp
	sub	esp, 488				; 000001e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-488]
	mov	ecx, 122				; 0000007aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 455
	push	64					; 00000040H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?extractPackageName@@YAXPBDQADH@Z	; extractPackageName
	add	esp, 12					; 0000000cH
; Line 458
	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1156				; 00000484H
	push	ecx
	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	push	0
	call	?readFile@@YAPAEPBD0AAHAAD@Z		; readFile
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+128], eax
; Line 459
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1156]
	mov	DWORD PTR _length$[ebp], ecx
; Line 465
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 1165				; 0000048dH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1164				; 0000048cH
	push	ecx
	movzx	edx, BYTE PTR _type$[ebp]
	push	edx
	call	?makeTypeProps@@YAXDAAEAAC@Z		; makeTypeProps
	add	esp, 12					; 0000000cH
; Line 467
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+1164]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1165]
	push	ecx
	call	_udata_openSwapper_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ds$[ebp], eax
; Line 468
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN39@readPackag
; Line 470
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CN@LLPBJDCH@icupkg?3?5udata_openSwapper?$CI?$CC?$CFs?$CC?$CJ?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 471
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN39@readPackag:
; Line 474
	mov	eax, DWORD PTR _ds$[ebp]
	mov	DWORD PTR [eax+40], OFFSET _printPackageError
; Line 475
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 477
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+1160], 1024		; 00000400H
; Line 478
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+1160]
	jge	SHORT $LN38@readPackag
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [eax+1160], ecx
$LN38@readPackag:
; Line 481
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1160]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+128]
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_swapDataHeader_56
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1160], eax
; Line 482
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN37@readPackag
; Line 483
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN37@readPackag:
; Line 487
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	add	ecx, 4
	mov	DWORD PTR _pInfo$[ebp], ecx
; Line 494
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 67					; 00000043H
	jne	SHORT $LN35@readPackag
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	cmp	ecx, 109				; 0000006dH
	jne	SHORT $LN35@readPackag
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+10]
	cmp	ecx, 110				; 0000006eH
	jne	SHORT $LN35@readPackag
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+11]
	cmp	ecx, 68					; 00000044H
	jne	SHORT $LN35@readPackag
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	cmp	ecx, 1
	je	SHORT $LN36@readPackag
$LN35@readPackag:
; Line 498
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+12]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+11]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+10]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+8]
	push	eax
	push	OFFSET ??_C@_0GI@INIGLCEL@icupkg?3?5data?5format?5?$CF02x?4?$CF02x?4?$CF0@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 499
	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN36@readPackag:
; Line 501
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	dl, BYTE PTR [ecx+4]
	mov	BYTE PTR [eax+1165], dl
; Line 502
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	dl, BYTE PTR [ecx+5]
	mov	BYTE PTR [eax+1164], dl
; Line 504
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+1160]
	mov	DWORD PTR _inBytes$[ebp], ecx
; Line 505
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, 4
	mov	DWORD PTR _inEntries$[ebp], eax
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	sub	ecx, DWORD PTR [eax+1160]
	mov	DWORD PTR _length$[ebp], ecx
; Line 509
	cmp	DWORD PTR _length$[ebp], 4
	jge	SHORT $LN34@readPackag
; Line 511
	mov	DWORD PTR _offset$[ebp], 2147483647	; 7fffffffH
; Line 512
	jmp	$LN33@readPackag
$LN34@readPackag:
; Line 513
	mov	eax, DWORD PTR _inBytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	push	edx
	call	_udata_readInt32_56
	add	esp, 8
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+1168], eax
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setItemCapacity@Package@icu_56@@AAEXH@Z ; icu_56::Package::setItemCapacity
; Line 515
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1168], 0
	jne	SHORT $LN32@readPackag
; Line 516
	mov	DWORD PTR _offset$[ebp], 4
	jmp	SHORT $LN33@readPackag
$LN32@readPackag:
; Line 517
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	lea	edx, DWORD PTR [ecx*8+4]
	cmp	DWORD PTR _length$[ebp], edx
	jge	SHORT $LN30@readPackag
; Line 519
	mov	DWORD PTR _offset$[ebp], 2147483647	; 7fffffffH
; Line 520
	jmp	SHORT $LN33@readPackag
$LN30@readPackag:
; Line 522
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	mov	esi, esp
	mov	edx, DWORD PTR _inEntries$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8-4]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 20					; 00000014H
	mov	DWORD PTR _offset$[ebp], eax
$LN33@readPackag:
; Line 525
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _offset$[ebp]
	jge	SHORT $LN28@readPackag
; Line 527
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	OFFSET ??_C@_0DN@DJDAOAPB@icupkg?3?5too?5few?5bytes?5?$CI?$CFld?5after@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 528
	mov	esi, esp
	push	8
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN28@readPackag:
; Line 532
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1168], 0
	jg	SHORT $LN27@readPackag
; Line 533
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1166]
	test	ecx, ecx
	je	SHORT $LN26@readPackag
; Line 534
	mov	esi, esp
	push	OFFSET ??_C@_0EG@NAOMHJME@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 535
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@readPackag:
; Line 537
	jmp	$LN25@readPackag
$LN27@readPackag:
; Line 541
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+1168]
	cmp	edx, DWORD PTR [ecx+1172]
	jle	SHORT $LN24@readPackag
; Line 542
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1172]
	push	ecx
	push	OFFSET ??_C@_0CH@HHPINJOH@icupkg?3?5too?5many?5items?0?5maximum?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 543
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@readPackag:
; Line 547
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	lea	edx, DWORD PTR [ecx*8+4]
	mov	DWORD PTR _stringsOffset$5105[ebp], edx
; Line 548
	mov	esi, esp
	mov	eax, DWORD PTR _inEntries$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _stringsOffset$5105[ebp]
	mov	DWORD PTR _itemLength$[ebp], eax
$LN23@readPackag:
; Line 551
	cmp	DWORD PTR _itemLength$[ebp], 0
	jle	SHORT $LN22@readPackag
	mov	eax, DWORD PTR _stringsOffset$5105[ebp]
	add	eax, DWORD PTR _itemLength$[ebp]
	mov	ecx, DWORD PTR _inBytes$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-1]
	test	edx, edx
	je	SHORT $LN22@readPackag
; Line 552
	mov	eax, DWORD PTR _itemLength$[ebp]
	sub	eax, 1
	mov	DWORD PTR _itemLength$[ebp], eax
; Line 553
	jmp	SHORT $LN23@readPackag
$LN22@readPackag:
; Line 555
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1180]
	add	ecx, DWORD PTR _itemLength$[ebp]
	cmp	ecx, 100000				; 000186a0H
	jle	SHORT $LN21@readPackag
; Line 556
	mov	esi, esp
	push	OFFSET ??_C@_0DE@PFBCELMC@icupkg?3?5total?5length?5of?5item?5nam@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 557
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@readPackag:
; Line 560
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1180]
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1188]
	mov	DWORD PTR _inItemStrings$5102[ebp], eax
; Line 561
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _inItemStrings$5102[ebp]
	push	ecx
	mov	edx, DWORD PTR _itemLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _inBytes$[ebp]
	add	eax, DWORD PTR _stringsOffset$5105[ebp]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 562
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN20@readPackag
; Line 563
	mov	esi, esp
	push	OFFSET ??_C@_0EA@EACJDGNN@icupkg?5failed?5to?5swap?5the?5input?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 564
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@readPackag:
; Line 566
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1180]
	add	ecx, DWORD PTR _itemLength$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1180], ecx
; Line 569
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	shl	ecx, 4
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 578
	mov	esi, esp
	mov	eax, DWORD PTR _inEntries$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _ds$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _stringsOffset$5105[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 579
	mov	eax, DWORD PTR _inItemStrings$5102[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _s$5101[ebp], eax
; Line 581
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1166]
	test	ecx, ecx
	je	$LN19@readPackag
; Line 583
	push	47					; 0000002fH
	mov	eax, DWORD PTR _s$5101[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _prefixLimit$5118[ebp], eax
; Line 584
	cmp	DWORD PTR _prefixLimit$5118[ebp], 0
	jne	SHORT $LN18@readPackag
; Line 588
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _s$5101[ebp]
	push	eax
	push	OFFSET ??_C@_0FI@DEHMAJHI@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 589
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN18@readPackag:
; Line 591
	mov	eax, DWORD PTR _prefixLimit$5118[ebp]
	sub	eax, DWORD PTR _s$5101[ebp]
	mov	DWORD PTR _prefixLength$5116[ebp], eax
; Line 592
	je	SHORT $LN16@readPackag
	cmp	DWORD PTR _prefixLength$5116[ebp], 64	; 00000040H
	jl	SHORT $LN17@readPackag
$LN16@readPackag:
; Line 596
	mov	esi, esp
	mov	eax, DWORD PTR _s$5101[ebp]
	push	eax
	push	OFFSET ??_C@_0GD@BNKEEKBB@icupkg?3?5?9?9auto_toc_prefix?$FL_with_@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 597
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@readPackag:
; Line 599
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1167]
	test	ecx, ecx
	je	SHORT $LN15@readPackag
	mov	eax, DWORD PTR _s$5101[ebp]
	add	eax, DWORD PTR _prefixLength$5116[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	movsx	edx, BYTE PTR _type$[ebp]
	cmp	ecx, edx
	je	SHORT $LN15@readPackag
; Line 603
	movsx	eax, BYTE PTR _type$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$5101[ebp]
	push	ecx
	push	OFFSET ??_C@_0GD@OMDDMBFA@icupkg?3?5?9?9auto_toc_prefix_with_t@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 604
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@readPackag:
; Line 606
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$5101[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 64					; 00000040H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 607
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR _prefixLength$5116[ebp]
	mov	BYTE PTR [eax+64], 0
; Line 608
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	add	eax, 1
	mov	DWORD PTR _prefixLength$5116[ebp], eax
	mov	ecx, DWORD PTR _prefixLength$5116[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$5101[ebp]
	push	edx
	lea	eax, DWORD PTR _prefix$5100[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 609
	jmp	$LN14@readPackag
$LN19@readPackag:
; Line 611
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _inPkgNameLength$5129[ebp], eax
; Line 612
	mov	eax, DWORD PTR _inPkgNameLength$5129[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	lea	edx, DWORD PTR _prefix$5100[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 613
	mov	eax, DWORD PTR _inPkgNameLength$5129[ebp]
	mov	DWORD PTR _prefixLength$5116[ebp], eax
; Line 618
	mov	eax, DWORD PTR _s$5101[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _inPkgNameLength$5129[ebp]
	add	ecx, 2
	cmp	eax, ecx
	jl	SHORT $LN13@readPackag
	mov	eax, DWORD PTR _inPkgNameLength$5129[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$5101[ebp]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN13@readPackag
	mov	eax, DWORD PTR _s$5101[ebp]
	add	eax, DWORD PTR _inPkgNameLength$5129[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 95					; 0000005fH
	jne	SHORT $LN13@readPackag
; Line 620
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	mov	BYTE PTR _prefix$5100[ebp+eax], 95	; 0000005fH
	mov	ecx, DWORD PTR _prefixLength$5116[ebp]
	add	ecx, 1
	mov	DWORD PTR _prefixLength$5116[ebp], ecx
; Line 621
	jmp	SHORT $LN14@readPackag
$LN13@readPackag:
; Line 623
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	mov	BYTE PTR _prefix$5100[ebp+eax], 47	; 0000002fH
	mov	ecx, DWORD PTR _prefixLength$5116[ebp]
	add	ecx, 1
	mov	DWORD PTR _prefixLength$5116[ebp], ecx
$LN14@readPackag:
; Line 628
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	mov	BYTE PTR _prefix$5100[ebp+eax], 0
; Line 631
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@readPackag
$LN10@readPackag:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@readPackag:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	$LN9@readPackag
; Line 634
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _inEntries$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR _stringsOffset$5105[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 635
	mov	eax, DWORD PTR _inItemStrings$5102[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _s$5101[ebp], eax
; Line 636
	mov	esi, esp
	mov	eax, DWORD PTR _prefixLength$5116[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$5100[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$5101[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN7@readPackag
	mov	eax, DWORD PTR _s$5101[ebp]
	add	eax, DWORD PTR _prefixLength$5116[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN8@readPackag
$LN7@readPackag:
; Line 638
	mov	esi, esp
	lea	eax, DWORD PTR _prefix$5100[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$5101[ebp]
	push	ecx
	push	OFFSET ??_C@_0DM@JBCPKHHB@icupkg?3?5input?5?4dat?5item?5name?5?$CC?$CFs@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 639
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@readPackag:
; Line 641
	mov	eax, DWORD PTR _s$5101[ebp]
	add	eax, DWORD PTR _prefixLength$5116[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+1176]
	mov	DWORD PTR [ecx+edx], eax
; Line 644
	mov	esi, esp
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _inEntries$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	push	edx
	mov	eax, DWORD PTR _ds$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _inBytes$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1176]
	mov	DWORD PTR [ecx+edx+4], eax
; Line 645
	cmp	DWORD PTR _i$[ebp], 0
	jle	$LN6@readPackag
; Line 646
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	esi, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [esi+1176]
	mov	edx, DWORD PTR [edx+eax+4]
	sub	edx, DWORD PTR [esi+ecx+4]
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1176]
	mov	DWORD PTR [ecx+eax+8], edx
; Line 649
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx+8]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	edx, DWORD PTR [ecx+edx+4]
	push	edx
	call	?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z ; getTypeEnumForInputData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _typeEnum$[ebp], eax
; Line 650
	cmp	DWORD PTR _typeEnum$[ebp], 0
	jl	SHORT $LN4@readPackag
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@readPackag
$LN4@readPackag:
; Line 651
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	push	OFFSET ??_C@_0DB@NCAFBFKP@icupkg?3?5not?5an?5ICU?5data?5file?3?5it@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 652
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@readPackag:
; Line 654
	mov	eax, DWORD PTR _typeEnum$[ebp]
	push	eax
	call	?makeTypeLetter@@YADH@Z			; makeTypeLetter
	add	esp, 4
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+1176]
	mov	BYTE PTR [edx+ecx+13], al
$LN6@readPackag:
; Line 656
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	BYTE PTR [edx+eax+12], 0
; Line 657
	jmp	$LN10@readPackag
$LN9@readPackag:
; Line 659
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	mov	esi, esp
	mov	edx, DWORD PTR _inEntries$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8-4]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _length$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1168]
	sub	eax, 1
	shl	eax, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+1176]
	mov	DWORD PTR [edx+eax+8], ecx
; Line 662
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1168]
	sub	edx, 1
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	edx, DWORD PTR [ecx+edx+8]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx+4]
	push	ecx
	call	?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z ; getTypeEnumForInputData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _typeEnum$[ebp], eax
; Line 663
	cmp	DWORD PTR _typeEnum$[ebp], 0
	jl	SHORT $LN2@readPackag
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@readPackag
$LN2@readPackag:
; Line 664
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	push	OFFSET ??_C@_0DB@NCAFBFKP@icupkg?3?5not?5an?5ICU?5data?5file?3?5it@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 665
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@readPackag:
; Line 667
	mov	eax, DWORD PTR _typeEnum$[ebp]
	push	eax
	call	?makeTypeLetter@@YADH@Z			; makeTypeLetter
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1168]
	sub	edx, 1
	shl	edx, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+1176]
	mov	BYTE PTR [ecx+edx+13], al
; Line 669
	movsx	eax, BYTE PTR _type$[ebp]
	movsx	ecx, BYTE PTR ??_C@_01HHGOMJKL@l?$AA@
	cmp	eax, ecx
	je	SHORT $LN25@readPackag
; Line 671
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortItems@Package@icu_56@@AAEXXZ	; icu_56::Package::sortItems
$LN25@readPackag:
; Line 675
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_closeSwapper_56
	add	esp, 4
$LN41@readPackag:
; Line 676
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN46@readPackag
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 488				; 000001e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN46@readPackag:
	DD	3
	DD	$LN45@readPackag
$LN45@readPackag:
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN42@readPackag
	DD	-129					; ffffff7fH
	DD	1
	DD	$LN43@readPackag
	DD	-220					; ffffff24H
	DD	68					; 00000044H
	DD	$LN44@readPackag
$LN44@readPackag:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
$LN43@readPackag:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN42@readPackag:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?readPackage@Package@icu_56@@QAEXPBD@Z ENDP		; icu_56::Package::readPackage
_TEXT	ENDS
EXTRN	__imp__strchr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?strchr@@YAPADPADH@Z
_TEXT	SEGMENT
__Str$ = 8						; size = 4
__Ch$ = 12						; size = 4
?strchr@@YAPADPADH@Z PROC				; strchr, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\string.h
; Line 215
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	esi, esp
	mov	eax, DWORD PTR __Ch$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Str$[ebp]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?strchr@@YAPADPADH@Z ENDP				; strchr
_TEXT	ENDS
EXTRN	__imp__vfprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _printPackageError
_TEXT	SEGMENT
_context$ = 8						; size = 4
_fmt$ = 12						; size = 4
_args$ = 16						; size = 4
_printPackageError PROC					; COMDAT
; File d:\mozilla\intl\icu\source\tools\toolutil\package.cpp
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 63
	mov	esi, esp
	mov	eax, DWORD PTR _args$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fmt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _context$[ebp]
	push	edx
	call	DWORD PTR __imp__vfprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printPackageError ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?makeTypeLetter@@YADH@Z
_TEXT	SEGMENT
_typeEnum$ = 8						; size = 4
?makeTypeLetter@@YADH@Z PROC				; makeTypeLetter, COMDAT
; Line 98
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 99
	mov	eax, DWORD PTR _types
	add	eax, DWORD PTR _typeEnum$[ebp]
	mov	al, BYTE PTR [eax]
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeTypeLetter@@YADH@Z ENDP				; makeTypeLetter
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?makeTypeProps@@YAXDAAEAAC@Z
_TEXT	SEGMENT
_typeEnum$ = -8						; size = 4
_type$ = 8						; size = 1
_charset$ = 12						; size = 4
_isBigEndian$ = 16					; size = 4
?makeTypeProps@@YAXDAAEAAC@Z PROC			; makeTypeProps, COMDAT
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 104
	movzx	eax, BYTE PTR _type$[ebp]
	push	eax
	call	?makeTypeEnum@@YAHD@Z			; makeTypeEnum
	add	esp, 4
	mov	DWORD PTR _typeEnum$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _typeEnum$[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _charset$[ebp]
	mov	BYTE PTR [ecx], al
; Line 106
	mov	eax, DWORD PTR _typeEnum$[ebp]
	and	eax, 1
	mov	ecx, DWORD PTR _isBigEndian$[ebp]
	mov	BYTE PTR [ecx], al
; Line 107
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeTypeProps@@YAXDAAEAAC@Z ENDP			; makeTypeProps
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?makeTypeEnum@@YAHD@Z
_TEXT	SEGMENT
tv71 = -200						; size = 4
tv72 = -196						; size = 4
_type$ = 8						; size = 1
?makeTypeEnum@@YAHD@Z PROC				; makeTypeEnum, COMDAT
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	movsx	eax, BYTE PTR _type$[ebp]
	cmp	eax, 108				; 0000006cH
	jne	SHORT $LN5@makeTypeEn
	mov	DWORD PTR tv72[ebp], 0
	jmp	SHORT $LN6@makeTypeEn
$LN5@makeTypeEn:
	movsx	ecx, BYTE PTR _type$[ebp]
	cmp	ecx, 98					; 00000062H
	jne	SHORT $LN3@makeTypeEn
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN4@makeTypeEn
$LN3@makeTypeEn:
	movsx	edx, BYTE PTR _type$[ebp]
	xor	eax, eax
	cmp	edx, 101				; 00000065H
	sete	al
	lea	eax, DWORD PTR [eax*4-1]
	mov	DWORD PTR tv71[ebp], eax
$LN4@makeTypeEn:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR tv72[ebp], ecx
$LN6@makeTypeEn:
	mov	eax, DWORD PTR tv72[ebp]
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeTypeEnum@@YAHD@Z ENDP				; makeTypeEnum
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z
_TEXT	SEGMENT
_headerLength$ = -32					; size = 4
_infoLength$ = -20					; size = 4
_pInfo$ = -8						; size = 4
_data$ = 8						; size = 4
_length$ = 12						; size = 4
_pErrorCode$ = 16					; size = 4
?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z PROC ; getTypeEnumForInputData, COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 164
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _headerLength$[ebp]
	push	ecx
	lea	edx, DWORD PTR _infoLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	push	ecx
	call	_getDataInfo
	add	esp, 20					; 00000014H
	mov	DWORD PTR _pInfo$[ebp], eax
; Line 165
	cmp	DWORD PTR _pInfo$[ebp], 0
	jne	SHORT $LN1@getTypeEnu
; Line 166
	or	eax, -1
	jmp	SHORT $LN2@getTypeEnu
$LN1@getTypeEnu:
; Line 169
	mov	eax, DWORD PTR _pInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	movzx	eax, BYTE PTR [edx+5]
	push	eax
	call	?makeTypeEnum@@YAHEC@Z			; makeTypeEnum
	add	esp, 8
$LN2@getTypeEnu:
; Line 170
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getTypeEnu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@getTypeEnu:
	DD	2
	DD	$LN6@getTypeEnu
$LN6@getTypeEnu:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getTypeEnu
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@getTypeEnu
$LN5@getTypeEnu:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN4@getTypeEnu:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z ENDP ; getTypeEnumForInputData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?makeTypeEnum@@YAHEC@Z
_TEXT	SEGMENT
_charset$ = 8						; size = 1
_isBigEndian$ = 12					; size = 1
?makeTypeEnum@@YAHEC@Z PROC				; makeTypeEnum, COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 80
	movzx	eax, BYTE PTR _charset$[ebp]
	movsx	ecx, BYTE PTR _isBigEndian$[ebp]
	lea	eax, DWORD PTR [ecx+eax*2]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?makeTypeEnum@@YAHEC@Z ENDP				; makeTypeEnum
_TEXT	ENDS
PUBLIC	??_C@_0DD@LKMGIPGD@icupkg?3?5the?5package?5name?5?$CC?$CFs?$CC?5is@ ; `string'
PUBLIC	??_C@_0EL@GINPKLPI@icupkg?3?5?$CC?$CFs?$CC?5is?5not?5recognized?5a@ ; `string'
PUBLIC	??_C@_04PBCOOEDG@?4dat?$AA@			; `string'
EXTRN	_strcmp:PROC
EXTRN	_findBasename:PROC
;	COMDAT ??_C@_0DD@LKMGIPGD@icupkg?3?5the?5package?5name?5?$CC?$CFs?$CC?5is@
CONST	SEGMENT
??_C@_0DD@LKMGIPGD@icupkg?3?5the?5package?5name?5?$CC?$CFs?$CC?5is@ DB 'i'
	DB	'cupkg: the package name "%s" is too long (>=%ld)', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@GINPKLPI@icupkg?3?5?$CC?$CFs?$CC?5is?5not?5recognized?5a@
CONST	SEGMENT
??_C@_0EL@GINPKLPI@icupkg?3?5?$CC?$CFs?$CC?5is?5not?5recognized?5a@ DB 'i'
	DB	'cupkg: "%s" is not recognized as a package filename (must end'
	DB	' with .dat)', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PBCOOEDG@?4dat?$AA@
CONST	SEGMENT
??_C@_04PBCOOEDG@?4dat?$AA@ DB '.dat', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?extractPackageName@@YAXPBDQADH@Z
_TEXT	SEGMENT
_len$ = -20						; size = 4
_basename$ = -8						; size = 4
_filename$ = 8						; size = 4
_pkg$ = 12						; size = 4
_capacity$ = 16						; size = 4
?extractPackageName@@YAXPBDQADH@Z PROC			; extractPackageName, COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 180
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_findBasename
	add	esp, 4
	mov	DWORD PTR _basename$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	sub	eax, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 183
	cmp	DWORD PTR _len$[ebp], 0
	jle	SHORT $LN2@extractPac
	push	OFFSET ??_C@_04PBCOOEDG@?4dat?$AA@
	mov	eax, DWORD PTR _basename$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@extractPac
$LN2@extractPac:
; Line 185
	mov	esi, esp
	mov	eax, DWORD PTR _basename$[ebp]
	push	eax
	push	OFFSET ??_C@_0EL@GINPKLPI@icupkg?3?5?$CC?$CFs?$CC?5is?5not?5recognized?5a@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 186
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@extractPac:
; Line 189
	mov	eax, DWORD PTR _len$[ebp]
	cmp	eax, DWORD PTR _capacity$[ebp]
	jl	SHORT $LN1@extractPac
; Line 191
	mov	esi, esp
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _basename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DD@LKMGIPGD@icupkg?3?5the?5package?5name?5?$CC?$CFs?$CC?5is@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 192
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@extractPac:
; Line 195
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _basename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pkg$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 196
	mov	eax, DWORD PTR _pkg$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR [eax], 0
$LN5@extractPac:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?extractPackageName@@YAXPBDQADH@Z ENDP			; extractPackageName
_TEXT	ENDS
PUBLIC	??1?$LocalMemory@E@icu_56@@QAE@XZ		; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
PUBLIC	?orphan@?$LocalPointerBase@E@icu_56@@QAEPAEXZ	; icu_56::LocalPointerBase<unsigned char>::orphan
PUBLIC	??_C@_0CE@JKNGGHDM@icupkg?3?5not?5an?5ICU?5data?5file?3?5?$CC?$CF@ ; `string'
PUBLIC	??_C@_0BM@EFFFBCNG@icupkg?3?5error?5reading?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ	; icu_56::LocalPointerBase<unsigned char>::getAlias
PUBLIC	??_C@_0CL@IBLJCEKE@icupkg?3?5malloc?5error?5allocating?5@ ; `string'
PUBLIC	?isNull@?$LocalPointerBase@E@icu_56@@QBECXZ	; icu_56::LocalPointerBase<unsigned char>::isNull
PUBLIC	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
PUBLIC	??_C@_0BP@KCKKCOBE@icupkg?3?5empty?5input?5file?5?$CC?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@GAADNHLM@icupkg?3?5unable?5to?5open?5input?5fil@ ; `string'
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp__fread:PROC
EXTRN	_uprv_malloc_56:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fopen:PROC
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT ??_C@_0CE@JKNGGHDM@icupkg?3?5not?5an?5ICU?5data?5file?3?5?$CC?$CF@
CONST	SEGMENT
??_C@_0CE@JKNGGHDM@icupkg?3?5not?5an?5ICU?5data?5file?3?5?$CC?$CF@ DB 'ic'
	DB	'upkg: not an ICU data file: "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EFFFBCNG@icupkg?3?5error?5reading?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BM@EFFFBCNG@icupkg?3?5error?5reading?5?$CC?$CFs?$CC?6?$AA@ DB 'icu'
	DB	'pkg: error reading "%s"', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@IBLJCEKE@icupkg?3?5malloc?5error?5allocating?5@
CONST	SEGMENT
??_C@_0CL@IBLJCEKE@icupkg?3?5malloc?5error?5allocating?5@ DB 'icupkg: mal'
	DB	'loc error allocating %d bytes.', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KCKKCOBE@icupkg?3?5empty?5input?5file?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BP@KCKKCOBE@icupkg?3?5empty?5input?5file?5?$CC?$CFs?$CC?6?$AA@ DB 'i'
	DB	'cupkg: empty input file "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GAADNHLM@icupkg?3?5unable?5to?5open?5input?5fil@
CONST	SEGMENT
??_C@_0CI@GAADNHLM@icupkg?3?5unable?5to?5open?5input?5fil@ DB 'icupkg: un'
	DB	'able to open input file "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?readFile@@YAPAEPBD0AAHAAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?readFile@@YAPAEPBD0AAHAAD@Z$0
__ehfuncinfo$?readFile@@YAPAEPBD0AAHAAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?readFile@@YAPAEPBD0AAHAAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?readFile@@YAPAEPBD0AAHAAD@Z
_TEXT	SEGMENT
$T5796 = -1308						; size = 4
_data$ = -1104						; size = 4
_typeEnum$ = -1092					; size = 4
_fileLength$ = -1080					; size = 4
_errorCode$ = -1068					; size = 4
_file$ = -1056						; size = 4
_filename$ = -1044					; size = 1024
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_path$ = 8						; size = 4
_name$ = 12						; size = 4
_length$ = 16						; size = 4
_type$ = 20						; size = 4
?readFile@@YAPAEPBD0AAHAAD@Z PROC			; readFile, COMDAT
; Line 304
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?readFile@@YAPAEPBD0AAHAAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1300				; 00000514H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1312]
	mov	ecx, 325				; 00000145H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 310
	push	1024					; 00000400H
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _path$[ebp]
	push	edx
	call	?makeFullFilename@@YAXPBD0PADH@Z	; makeFullFilename
	add	esp, 16					; 00000010H
; Line 313
	mov	esi, esp
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _file$[ebp], eax
; Line 314
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN8@readFile
; Line 315
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CI@GAADNHLM@icupkg?3?5unable?5to?5open?5input?5fil@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 316
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@readFile:
; Line 320
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	?getFileLength@@YAHPAU_iobuf@@@Z	; getFileLength
	add	esp, 4
	mov	DWORD PTR _fileLength$[ebp], eax
; Line 321
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__ferror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@readFile
	cmp	DWORD PTR _fileLength$[ebp], 0
	jg	SHORT $LN7@readFile
$LN6@readFile:
; Line 322
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0BP@KCKKCOBE@icupkg?3?5empty?5input?5file?5?$CC?$CFs?$CC?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 323
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 324
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@readFile:
; Line 328
	mov	eax, DWORD PTR _fileLength$[ebp]
	add	eax, 15					; 0000000fH
	and	eax, -16				; fffffff0H
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 329
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_malloc_56
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	??0?$LocalMemory@E@icu_56@@QAE@PAE@Z	; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 330
	lea	ecx, DWORD PTR _data$[ebp]
	call	?isNull@?$LocalPointerBase@E@icu_56@@QBECXZ ; icu_56::LocalPointerBase<unsigned char>::isNull
	movsx	eax, al
	test	eax, eax
	je	SHORT $LN5@readFile
; Line 331
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 332
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET ??_C@_0CL@IBLJCEKE@icupkg?3?5malloc?5error?5allocating?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 333
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@readFile:
; Line 337
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fileLength$[ebp]
	push	ecx
	push	1
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	push	eax
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR _fileLength$[ebp], eax
	je	SHORT $LN4@readFile
; Line 338
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0BM@EFFFBCNG@icupkg?3?5error?5reading?5?$CC?$CFs?$CC?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 339
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 340
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@readFile:
; Line 344
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _fileLength$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@readFile
; Line 345
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _fileLength$[ebp]
	push	ecx
	push	170					; 000000aaH
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	add	eax, DWORD PTR _fileLength$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
$LN3@readFile:
; Line 348
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 351
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 352
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _length$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	ecx, DWORD PTR _data$[ebp]
	call	?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::getAlias
	push	eax
	call	?getTypeEnumForInputData@@YAHPBEHPAW4UErrorCode@@@Z ; getTypeEnumForInputData
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _typeEnum$[ebp], eax
; Line 353
	cmp	DWORD PTR _typeEnum$[ebp], 0
	jl	SHORT $LN1@readFile
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@readFile
$LN1@readFile:
; Line 354
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@JKNGGHDM@icupkg?3?5not?5an?5ICU?5data?5file?3?5?$CC?$CF@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 356
	mov	esi, esp
	push	3
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@readFile:
; Line 362
	mov	eax, DWORD PTR _typeEnum$[ebp]
	push	eax
	call	?makeTypeLetter@@YADH@Z			; makeTypeLetter
	add	esp, 4
	mov	ecx, DWORD PTR _type$[ebp]
	mov	BYTE PTR [ecx], al
; Line 364
	lea	ecx, DWORD PTR _data$[ebp]
	call	?orphan@?$LocalPointerBase@E@icu_56@@QAEPAEXZ ; icu_56::LocalPointerBase<unsigned char>::orphan
	mov	DWORD PTR $T5796[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
	mov	eax, DWORD PTR $T5796[ebp]
$LN10@readFile:
; Line 365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@readFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1312				; 00000520H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@readFile:
	DD	3
	DD	$LN16@readFile
$LN16@readFile:
	DD	-1044					; fffffbecH
	DD	1024					; 00000400H
	DD	$LN12@readFile
	DD	-1068					; fffffbd4H
	DD	4
	DD	$LN13@readFile
	DD	-1104					; fffffbb0H
	DD	4
	DD	$LN14@readFile
$LN14@readFile:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN13@readFile:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN12@readFile:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?readFile@@YAPAEPBD0AAHAAD@Z$0:
	lea	ecx, DWORD PTR _data$[ebp]
	jmp	??1?$LocalMemory@E@icu_56@@QAE@XZ	; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
__ehhandler$?readFile@@YAPAEPBD0AAHAAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1316]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?readFile@@YAPAEPBD0AAHAAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?readFile@@YAPAEPBD0AAHAAD@Z ENDP			; readFile
EXTRN	__imp__ftell:PROC
EXTRN	__imp__fseek:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFileLength@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_length$ = -8						; size = 4
_f$ = 8							; size = 4
?getFileLength@@YAHPAU_iobuf@@@Z PROC			; getFileLength, COMDAT
; Line 200
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 203
	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 204
	mov	esi, esp
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	DWORD PTR __imp__ftell
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 205
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 206
	mov	eax, DWORD PTR _length$[ebp]
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFileLength@@YAHPAU_iobuf@@@Z ENDP			; getFileLength
_TEXT	ENDS
PUBLIC	??_C@_0CA@ICCKNGON@path?1filename?5too?5long?3?5?$CC?$CFs?$CFs?$CC?6?$AA@ ; `string'
PUBLIC	??_C@_0BJ@CHPPGMCJ@pathname?5too?5long?3?5?$CC?$CFs?$CC?6?$AA@ ; `string'
;	COMDAT ??_C@_0CA@ICCKNGON@path?1filename?5too?5long?3?5?$CC?$CFs?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0CA@ICCKNGON@path?1filename?5too?5long?3?5?$CC?$CFs?$CFs?$CC?6?$AA@ DB 'p'
	DB	'ath/filename too long: "%s%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHPPGMCJ@pathname?5too?5long?3?5?$CC?$CFs?$CC?6?$AA@
CONST	SEGMENT
??_C@_0BJ@CHPPGMCJ@pathname?5too?5long?3?5?$CC?$CFs?$CC?6?$AA@ DB 'pathna'
	DB	'me too long: "%s"', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?makeFullFilename@@YAXPBD0PADH@Z
_TEXT	SEGMENT
_s$ = -8						; size = 4
_path$ = 8						; size = 4
_name$ = 12						; size = 4
_filename$ = 16						; size = 4
_capacity$ = 20						; size = 4
?makeFullFilename@@YAXPBD0PADH@Z PROC			; makeFullFilename, COMDAT
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 254
	cmp	DWORD PTR _path$[ebp], 0
	je	$LN5@makeFullFi
	mov	eax, DWORD PTR _path$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN5@makeFullFi
; Line 255
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	cmp	eax, DWORD PTR _capacity$[ebp]
	jl	SHORT $LN4@makeFullFi
; Line 256
	mov	esi, esp
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	push	OFFSET ??_C@_0BJ@CHPPGMCJ@pathname?5too?5long?3?5?$CC?$CFs?$CC?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 257
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@makeFullFi:
; Line 259
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 262
	push	0
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _s$[ebp], eax
; Line 263
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN3@makeFullFi
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN3@makeFullFi
; Line 264
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
$LN3@makeFullFi:
; Line 266
	jmp	SHORT $LN2@makeFullFi
$LN5@makeFullFi:
; Line 267
	mov	eax, DWORD PTR _filename$[ebp]
	mov	DWORD PTR _s$[ebp], eax
$LN2@makeFullFi:
; Line 271
	mov	esi, DWORD PTR _s$[ebp]
	sub	esi, DWORD PTR _filename$[ebp]
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	esi, eax
	cmp	esi, DWORD PTR _capacity$[ebp]
	jl	SHORT $LN1@makeFullFi
; Line 272
	mov	esi, esp
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CA@ICCKNGON@path?1filename?5too?5long?3?5?$CC?$CFs?$CFs?$CC?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 273
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@makeFullFi:
; Line 275
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 276
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	?treeToPath@@YAXPAD@Z			; treeToPath
	add	esp, 4
$LN7@makeFullFi:
; Line 277
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeFullFilename@@YAXPBD0PADH@Z ENDP			; makeFullFilename
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?treeToPath@@YAXPAD@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_s$ = 8							; size = 4
?treeToPath@@YAXPAD@Z PROC				; treeToPath, COMDAT
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 219
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _t$[ebp], eax
	jmp	SHORT $LN5@treeToPath
$LN4@treeToPath:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN5@treeToPath:
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@treeToPath
; Line 220
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	je	SHORT $LN1@treeToPath
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN2@treeToPath
$LN1@treeToPath:
; Line 221
	mov	eax, DWORD PTR _t$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
$LN2@treeToPath:
; Line 223
	jmp	SHORT $LN4@treeToPath
$LN6@treeToPath:
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?treeToPath@@YAXPAD@Z ENDP				; treeToPath
_TEXT	ENDS
PUBLIC	?getInType@Package@icu_56@@QAEDXZ		; icu_56::Package::getInType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getInType@Package@icu_56@@QAEDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getInType@Package@icu_56@@QAEDXZ PROC			; icu_56::Package::getInType, COMDAT
; _this$ = ecx
; Line 679
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 680
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+1165]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [edx+1164]
	push	eax
	call	?makeTypeLetter@@YADEC@Z		; makeTypeLetter
	add	esp, 8
; Line 681
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getInType@Package@icu_56@@QAEDXZ ENDP			; icu_56::Package::getInType
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?makeTypeLetter@@YADEC@Z
_TEXT	SEGMENT
_charset$ = 8						; size = 1
_isBigEndian$ = 12					; size = 1
?makeTypeLetter@@YADEC@Z PROC				; makeTypeLetter, COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 94
	movzx	eax, BYTE PTR _isBigEndian$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _charset$[ebp]
	push	ecx
	call	?makeTypeEnum@@YAHEC@Z			; makeTypeEnum
	add	esp, 8
	mov	edx, DWORD PTR _types
	mov	al, BYTE PTR [edx+eax]
; Line 95
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?makeTypeLetter@@YADEC@Z ENDP				; makeTypeLetter
_TEXT	ENDS
PUBLIC	??_C@_0CM@NJFNEBFE@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0DI@CLGAAIPJ@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0CK@CCIKENKA@icupkg?3?5udata_swap?$CIitem?5?$CFld?$CJ?5fai@ ; `string'
PUBLIC	??_C@_0DK@MOCLHOOC@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0DO@FGJHJKP@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0DB@CNBOBHLA@icupkg?3?5swapArray32?$CIitem?5entry?5?$CF@ ; `string'
PUBLIC	??_C@_0DK@JNIGHAKC@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0CN@BDHOIBIM@icupkg?3?5swapArray32?$CIitem?5count?$CJ?5@ ; `string'
PUBLIC	?allocString@Package@icu_56@@AAEPADCH@Z		; icu_56::Package::allocString
PUBLIC	??_C@_0CO@MEDIODPA@icupkg?3?5swapInvChars?$CIitem?5names?$CJ@ ; `string'
PUBLIC	??_C@_0DH@KGKCPAMK@icupkg?3?5swapInvChars?$CIoutput?5pack@ ; `string'
PUBLIC	??_C@_0DG@ONCJPGGE@icupkg?3?5unable?5to?5write?5complete@ ; `string'
PUBLIC	??_C@_0DI@HFHCINBM@icupkg?3?5udata_swapDataHeader?$CIloc@ ; `string'
PUBLIC	??_C@_0CE@JAMGDFAP@icupkg?3?5unable?5to?5create?5file?5?$CC?$CF@ ; `string'
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	??_C@_0CJ@MGOPFMHK@icupkg?3?5udata_openSwapper?$CI?$CJ?5fail@ ; `string'
PUBLIC	??_C@_0BK@EECIGFMN@icupkg?3?5comment?5too?5long?6?$AA@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?writePackage@Package@icu_56@@QAEXPBDD0@Z	; icu_56::Package::writePackage
EXTRN	_udata_swap:PROC
EXTRN	__imp__fwrite:PROC
;	COMDAT ??_C@_0CM@NJFNEBFE@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0CM@NJFNEBFE@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: una'
	DB	'ble to write complete file "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@CLGAAIPJ@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0DI@CLGAAIPJ@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: una'
	DB	'ble to write complete item %ld to file "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@CCIKENKA@icupkg?3?5udata_swap?$CIitem?5?$CFld?$CJ?5fai@
CONST	SEGMENT
??_C@_0CK@CCIKENKA@icupkg?3?5udata_swap?$CIitem?5?$CFld?$CJ?5fai@ DB 'icu'
	DB	'pkg: udata_swap(item %ld) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MOCLHOOC@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0DK@MOCLHOOC@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: una'
	DB	'ble to write complete item names to file "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@FGJHJKP@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0DO@FGJHJKP@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: unab'
	DB	'le to write complete item entry %ld to file "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@CNBOBHLA@icupkg?3?5swapArray32?$CIitem?5entry?5?$CF@
CONST	SEGMENT
??_C@_0DB@CNBOBHLA@icupkg?3?5swapArray32?$CIitem?5entry?5?$CF@ DB 'icupkg'
	DB	': swapArray32(item entry %ld) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@JNIGHAKC@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0DK@JNIGHAKC@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: una'
	DB	'ble to write complete item count to file "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BDHOIBIM@icupkg?3?5swapArray32?$CIitem?5count?$CJ?5@
CONST	SEGMENT
??_C@_0CN@BDHOIBIM@icupkg?3?5swapArray32?$CIitem?5count?$CJ?5@ DB 'icupkg'
	DB	': swapArray32(item count) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MEDIODPA@icupkg?3?5swapInvChars?$CIitem?5names?$CJ@
CONST	SEGMENT
??_C@_0CO@MEDIODPA@icupkg?3?5swapInvChars?$CIitem?5names?$CJ@ DB 'icupkg:'
	DB	' swapInvChars(item names) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@KGKCPAMK@icupkg?3?5swapInvChars?$CIoutput?5pack@
CONST	SEGMENT
??_C@_0DH@KGKCPAMK@icupkg?3?5swapInvChars?$CIoutput?5pack@ DB 'icupkg: sw'
	DB	'apInvChars(output package name) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@ONCJPGGE@icupkg?3?5unable?5to?5write?5complete@
CONST	SEGMENT
??_C@_0DG@ONCJPGGE@icupkg?3?5unable?5to?5write?5complete@ DB 'icupkg: una'
	DB	'ble to write complete header to file "%s"', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HFHCINBM@icupkg?3?5udata_swapDataHeader?$CIloc@
CONST	SEGMENT
??_C@_0DI@HFHCINBM@icupkg?3?5udata_swapDataHeader?$CIloc@ DB 'icupkg: uda'
	DB	'ta_swapDataHeader(local to out) failed - %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JAMGDFAP@icupkg?3?5unable?5to?5create?5file?5?$CC?$CF@
CONST	SEGMENT
??_C@_0CE@JAMGDFAP@icupkg?3?5unable?5to?5create?5file?5?$CC?$CF@ DB 'icup'
	DB	'kg: unable to create file "%s"', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@MGOPFMHK@icupkg?3?5udata_openSwapper?$CI?$CJ?5fail@
CONST	SEGMENT
??_C@_0CJ@MGOPFMHK@icupkg?3?5udata_openSwapper?$CI?$CJ?5fail@ DB 'icupkg:'
	DB	' udata_openSwapper() failed - %s', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EECIGFMN@icupkg?3?5comment?5too?5long?6?$AA@
CONST	SEGMENT
??_C@_0BK@EECIGFMN@icupkg?3?5comment?5too?5long?6?$AA@ DB 'icupkg: commen'
	DB	't too long', 0aH, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?writePackage@Package@icu_56@@QAEXPBDD0@Z
_TEXT	SEGMENT
tv173 = -532						; size = 4
tv163 = -532						; size = 4
tv155 = -532						; size = 4
_type$5243 = -332					; size = 4
_length$5178 = -320					; size = 4
_pHeader$5177 = -308					; size = 4
_outIsBigEndian$ = -293					; size = 1
_outCharset$ = -281					; size = 1
_outInt32$ = -272					; size = 4
_offset$ = -260						; size = 4
_basenameOffset$ = -248					; size = 4
_maxItemLength$ = -236					; size = 4
_prefixLength$ = -224					; size = 4
_length$ = -212						; size = 4
_i$ = -200						; size = 4
_errorCode$ = -188					; size = 4
_name$ = -176						; size = 4
_pItem$ = -164						; size = 4
_file$ = -152						; size = 4
_ds$ = -140						; size = 16
_dsLocalToOut$ = -116					; size = 4
_entry$ = -104						; size = 8
_prefix$ = -88						; size = 68
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_outType$ = 12						; size = 1
_comment$ = 16						; size = 4
?writePackage@Package@icu_56@@QAEXPBDD0@Z PROC		; icu_56::Package::writePackage, COMDAT
; _this$ = ecx
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 532				; 00000214H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-532]
	mov	ecx, 133				; 00000085H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 696
	push	64					; 00000040H
	lea	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	?extractPackageName@@YAXPBDQADH@Z	; extractPackageName
	add	esp, 12					; 0000000cH
; Line 699
	cmp	DWORD PTR _comment$[ebp], 0
	je	$LN43@writePacka
; Line 704
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 132				; 00000084H
	mov	DWORD PTR _pHeader$5177[ebp], eax
; Line 705
	mov	eax, DWORD PTR _pHeader$5177[ebp]
	movzx	ecx, WORD PTR [eax+4]
	add	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1160], ecx
; Line 706
	mov	eax, DWORD PTR _comment$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$5178[ebp], eax
; Line 707
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	add	ecx, DWORD PTR _length$5178[ebp]
	cmp	ecx, 1024				; 00000400H
	jl	SHORT $LN42@writePacka
; Line 708
	mov	esi, esp
	push	OFFSET ??_C@_0BK@EECIGFMN@icupkg?3?5comment?5too?5long?6?$AA@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 709
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN42@writePacka:
; Line 711
	mov	eax, DWORD PTR _length$5178[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _comment$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1160]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+132]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 712
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	add	ecx, DWORD PTR _length$5178[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1160], ecx
; Line 713
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	and	ecx, 15					; 0000000fH
	je	SHORT $LN41@writePacka
; Line 715
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1160]
	add	ecx, 15					; 0000000fH
	and	ecx, -16				; fffffff0H
	mov	DWORD PTR _length$5178[ebp], ecx
; Line 716
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$5178[ebp]
	sub	ecx, DWORD PTR [eax+1160]
	push	ecx
	push	0
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1160]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+132]
	push	edx
	call	_memset
	add	esp, 12					; 0000000cH
; Line 717
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$5178[ebp]
	mov	DWORD PTR [eax+1160], ecx
$LN41@writePacka:
; Line 719
	mov	eax, DWORD PTR _pHeader$5177[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dx, WORD PTR [ecx+1160]
	mov	WORD PTR [eax], dx
$LN43@writePacka:
; Line 722
	lea	eax, DWORD PTR _outIsBigEndian$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outType$[ebp]
	push	edx
	call	?makeTypeProps@@YAXDAAEAAC@Z		; makeTypeProps
	add	esp, 12					; 0000000cH
; Line 727
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 728
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	call	?makeTypeEnum@@YAHD@Z			; makeTypeEnum
	add	esp, 4
	mov	DWORD PTR _i$[ebp], eax
; Line 729
	cmp	DWORD PTR _i$[ebp], 1
	jne	SHORT $LN46@writePacka
	mov	DWORD PTR tv155[ebp], 0
	jmp	SHORT $LN47@writePacka
$LN46@writePacka:
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outIsBigEndian$[ebp]
	push	edx
	push	0
	push	1
	call	_udata_openSwapper_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv155[ebp], eax
$LN47@writePacka:
	mov	eax, DWORD PTR tv155[ebp]
	mov	DWORD PTR _ds$[ebp+4], eax
; Line 730
	cmp	DWORD PTR _i$[ebp], 0
	jne	SHORT $LN48@writePacka
	mov	DWORD PTR tv163[ebp], 0
	jmp	SHORT $LN49@writePacka
$LN48@writePacka:
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outIsBigEndian$[ebp]
	push	edx
	push	0
	push	0
	call	_udata_openSwapper_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv163[ebp], eax
$LN49@writePacka:
	mov	eax, DWORD PTR tv163[ebp]
	mov	DWORD PTR _ds$[ebp], eax
; Line 731
	mov	DWORD PTR _ds$[ebp+8], 0
; Line 732
	cmp	DWORD PTR _i$[ebp], 3
	jne	SHORT $LN50@writePacka
	mov	DWORD PTR tv173[ebp], 0
	jmp	SHORT $LN51@writePacka
$LN50@writePacka:
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outIsBigEndian$[ebp]
	push	edx
	push	1
	push	1
	call	_udata_openSwapper_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR tv173[ebp], eax
$LN51@writePacka:
	mov	eax, DWORD PTR tv173[ebp]
	mov	DWORD PTR _ds$[ebp+12], eax
; Line 733
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN40@writePacka
; Line 734
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CJ@MGOPFMHK@icupkg?3?5udata_openSwapper?$CI?$CJ?5fail@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 735
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN40@writePacka:
; Line 737
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN39@writePacka
$LN38@writePacka:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN39@writePacka:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN37@writePacka
; Line 738
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _ds$[ebp+eax*4], 0
	je	SHORT $LN36@writePacka
; Line 739
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ds$[ebp+eax*4]
	mov	DWORD PTR [ecx+40], OFFSET _printPackageError
; Line 740
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ds$[ebp+ecx*4]
	mov	DWORD PTR [edx+44], eax
$LN36@writePacka:
; Line 742
	jmp	SHORT $LN38@writePacka
$LN37@writePacka:
; Line 744
	push	0
	push	0
	call	?makeTypeEnum@@YAHEC@Z			; makeTypeEnum
	add	esp, 8
	mov	eax, DWORD PTR _ds$[ebp+eax*4]
	mov	DWORD PTR _dsLocalToOut$[ebp], eax
; Line 747
	mov	esi, esp
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _file$[ebp], eax
; Line 748
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN35@writePacka
; Line 749
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@JAMGDFAP@icupkg?3?5unable?5to?5create?5file?5?$CC?$CF@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 750
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN35@writePacka:
; Line 754
	cmp	DWORD PTR _dsLocalToOut$[ebp], 0
	je	$LN34@writePacka
; Line 755
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1160]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 132				; 00000084H
	push	ecx
	mov	edx, DWORD PTR _dsLocalToOut$[ebp]
	push	edx
	call	_udata_swapDataHeader_56
	add	esp, 20					; 00000014H
; Line 756
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN34@writePacka
; Line 757
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DI@HFHCINBM@icupkg?3?5udata_swapDataHeader?$CIloc@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 758
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN34@writePacka:
; Line 761
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1160]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 132				; 00000084H
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 762
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+1160]
	je	SHORT $LN32@writePacka
; Line 763
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DG@ONCJPGGE@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 764
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN32@writePacka:
; Line 769
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+64]
	test	ecx, ecx
	jne	SHORT $LN31@writePacka
; Line 770
	lea	eax, DWORD PTR _prefix$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _prefixLength$[ebp], eax
; Line 771
	jmp	SHORT $LN30@writePacka
$LN31@writePacka:
; Line 772
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _prefixLength$[ebp], eax
; Line 773
	mov	eax, DWORD PTR _prefixLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	push	ecx
	lea	edx, DWORD PTR _prefix$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 774
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+1167]
	test	ecx, ecx
	je	SHORT $LN30@writePacka
; Line 775
	mov	eax, DWORD PTR _prefixLength$[ebp]
	mov	cl, BYTE PTR _outType$[ebp]
	mov	BYTE PTR _prefix$[ebp+eax-1], cl
$LN30@writePacka:
; Line 778
	mov	eax, DWORD PTR _prefixLength$[ebp]
	mov	BYTE PTR _prefix$[ebp+eax], 47		; 0000002fH
	mov	ecx, DWORD PTR _prefixLength$[ebp]
	add	ecx, 1
	mov	DWORD PTR _prefixLength$[ebp], ecx
; Line 779
	mov	eax, DWORD PTR _prefixLength$[ebp]
	mov	BYTE PTR _prefix$[ebp+eax], 0
; Line 780
	cmp	DWORD PTR _dsLocalToOut$[ebp], 0
	je	$LN28@writePacka
; Line 781
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prefixLength$[ebp]
	push	edx
	lea	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dsLocalToOut$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dsLocalToOut$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 782
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN27@writePacka
; Line 783
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0DH@KGKCPAMK@icupkg?3?5swapInvChars?$CIoutput?5pack@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 784
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN27@writePacka:
; Line 788
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1188				; 000004a4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1180]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 1188				; 000004a4H
	push	ecx
	mov	edx, DWORD PTR _dsLocalToOut$[ebp]
	push	edx
	mov	eax, DWORD PTR _dsLocalToOut$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 789
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@writePacka
; Line 790
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CO@MEDIODPA@icupkg?3?5swapInvChars?$CIitem?5names?$CJ@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 791
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN26@writePacka:
; Line 793
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortItems@Package@icu_56@@AAEXXZ	; icu_56::Package::sortItems
$LN28@writePacka:
; Line 797
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN25@writePacka
$LN24@writePacka:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN25@writePacka:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	$LN23@writePacka
; Line 798
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax
; Line 799
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, DWORD PTR _prefixLength$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocString@Package@icu_56@@AAEPADCH@Z	; icu_56::Package::allocString
	mov	DWORD PTR _name$[ebp], eax
; Line 800
	mov	eax, DWORD PTR _prefixLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 801
	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	add	edx, DWORD PTR _prefixLength$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 802
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR [eax+edx], ecx
; Line 803
	jmp	$LN24@writePacka
$LN23@writePacka:
; Line 807
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	lea	edx, DWORD PTR [ecx*8+4]
	mov	DWORD PTR _basenameOffset$[ebp], edx
; Line 808
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _basenameOffset$[ebp]
	add	ecx, DWORD PTR [eax+1184]
	mov	DWORD PTR _offset$[ebp], ecx
; Line 809
	mov	eax, DWORD PTR _offset$[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _length$[ebp], eax
	je	SHORT $LN22@writePacka
; Line 810
	mov	eax, 16					; 00000010H
	sub	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _length$[ebp], eax
; Line 811
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	push	170					; 000000aaH
	mov	ecx, DWORD PTR _length$[ebp]
	sub	ecx, 1
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocString@Package@icu_56@@AAEPADCH@Z	; icu_56::Package::allocString
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 812
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
$LN22@writePacka:
; Line 817
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	mov	DWORD PTR _outInt32$[ebp], ecx
; Line 818
	cmp	DWORD PTR _dsLocalToOut$[ebp], 0
	je	$LN21@writePacka
; Line 819
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outInt32$[ebp]
	push	ecx
	push	4
	lea	edx, DWORD PTR _outInt32$[ebp]
	push	edx
	mov	eax, DWORD PTR _dsLocalToOut$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dsLocalToOut$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 820
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN21@writePacka
; Line 821
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CN@BDHOIBIM@icupkg?3?5swapArray32?$CIitem?5count?$CJ?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 822
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@writePacka:
; Line 825
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	4
	push	1
	lea	ecx, DWORD PTR _outInt32$[ebp]
	push	ecx
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 826
	cmp	DWORD PTR _length$[ebp], 4
	je	SHORT $LN19@writePacka
; Line 827
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DK@JNIGHAKC@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 828
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@writePacka:
; Line 832
	mov	DWORD PTR _maxItemLength$[ebp], 0
; Line 833
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN18@writePacka
$LN17@writePacka:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN18@writePacka:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	$LN16@writePacka
; Line 834
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 101188				; 00018b44H
	mov	edx, DWORD PTR [edx+eax]
	sub	edx, ecx
	add	edx, DWORD PTR _basenameOffset$[ebp]
	mov	DWORD PTR _entry$[ebp], edx
; Line 835
	mov	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _entry$[ebp+4], eax
; Line 836
	cmp	DWORD PTR _dsLocalToOut$[ebp], 0
	je	$LN15@writePacka
; Line 837
	mov	esi, esp
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _entry$[ebp]
	push	ecx
	push	8
	lea	edx, DWORD PTR _entry$[ebp]
	push	edx
	mov	eax, DWORD PTR _dsLocalToOut$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dsLocalToOut$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 838
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN15@writePacka
; Line 839
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DB@CNBOBHLA@icupkg?3?5swapArray32?$CIitem?5entry?5?$CF@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 840
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@writePacka:
; Line 843
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	8
	push	1
	lea	ecx, DWORD PTR _entry$[ebp]
	push	ecx
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 844
	cmp	DWORD PTR _length$[ebp], 8
	je	SHORT $LN13@writePacka
; Line 845
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DO@FGJHJKP@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 846
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@writePacka:
; Line 849
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax+8]
	mov	DWORD PTR _length$[ebp], eax
; Line 850
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _maxItemLength$[ebp]
	jle	SHORT $LN12@writePacka
; Line 851
	mov	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _maxItemLength$[ebp], eax
$LN12@writePacka:
; Line 853
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	DWORD PTR _offset$[ebp], eax
; Line 854
	jmp	$LN17@writePacka
$LN16@writePacka:
; Line 857
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1184]
	push	edx
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 101188				; 00018b44H
	push	eax
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 858
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+1184]
	je	SHORT $LN11@writePacka
; Line 859
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0DK@MOCLHOOC@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 860
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@writePacka:
; Line 864
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	DWORD PTR _pItem$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@writePacka
$LN9@writePacka:
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _pItem$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN10@writePacka:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	$LN8@writePacka
; Line 865
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	push	ecx
	call	?makeTypeEnum@@YAHD@Z			; makeTypeEnum
	add	esp, 4
	mov	DWORD PTR _type$5243[ebp], eax
; Line 866
	mov	eax, DWORD PTR _type$5243[ebp]
	cmp	DWORD PTR _ds$[ebp+eax*4], 0
	je	$LN7@writePacka
; Line 871
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _type$5243[ebp]
	mov	edx, DWORD PTR _ds$[ebp+ecx*4]
	push	edx
	call	_udata_swap
	add	esp, 20					; 00000014H
; Line 872
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN7@writePacka
; Line 873
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CK@CCIKENKA@icupkg?3?5udata_swap?$CIitem?5?$CFld?$CJ?5fai@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 874
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@writePacka:
; Line 877
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	1
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _length$[ebp], eax
; Line 878
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _length$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN5@writePacka
; Line 879
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DI@CLGAAIPJ@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 880
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@writePacka:
; Line 882
	jmp	$LN9@writePacka
$LN8@writePacka:
; Line 884
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__ferror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@writePacka
; Line 885
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CM@NJFNEBFE@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 886
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@writePacka:
; Line 889
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 890
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@writePacka
$LN2@writePacka:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@writePacka:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN45@writePacka
; Line 891
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ds$[ebp+eax*4]
	push	ecx
	call	_udata_closeSwapper_56
	add	esp, 4
; Line 892
	jmp	SHORT $LN2@writePacka
$LN45@writePacka:
; Line 893
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN60@writePacka
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 532				; 00000214H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN60@writePacka:
	DD	7
	DD	$LN59@writePacka
$LN59@writePacka:
	DD	-88					; ffffffa8H
	DD	68					; 00000044H
	DD	$LN52@writePacka
	DD	-104					; ffffff98H
	DD	8
	DD	$LN53@writePacka
	DD	-140					; ffffff74H
	DD	16					; 00000010H
	DD	$LN54@writePacka
	DD	-188					; ffffff44H
	DD	4
	DD	$LN55@writePacka
	DD	-272					; fffffef0H
	DD	4
	DD	$LN56@writePacka
	DD	-281					; fffffee7H
	DD	1
	DD	$LN57@writePacka
	DD	-293					; fffffedbH
	DD	1
	DD	$LN58@writePacka
$LN58@writePacka:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	115					; 00000073H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
$LN57@writePacka:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN56@writePacka:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	51					; 00000033H
	DB	50					; 00000032H
	DB	0
$LN55@writePacka:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN54@writePacka:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN53@writePacka:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN52@writePacka:
	DB	112					; 00000070H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	0
?writePackage@Package@icu_56@@QAEXPBDD0@Z ENDP		; icu_56::Package::writePackage
_TEXT	ENDS
PUBLIC	?findItem@Package@icu_56@@QBEHPBDH@Z		; icu_56::Package::findItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findItem@Package@icu_56@@QBEHPBDH@Z
_TEXT	SEGMENT
_result$ = -56						; size = 4
_limit$ = -44						; size = 4
_start$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_length$ = 12						; size = 4
?findItem@Package@icu_56@@QBEHPBDH@Z PROC		; icu_56::Package::findItem, COMDAT
; _this$ = ecx
; Line 896
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 901
	mov	DWORD PTR _start$[ebp], 0
; Line 902
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	mov	DWORD PTR _limit$[ebp], ecx
$LN11@findItem:
; Line 903
	mov	eax, DWORD PTR _start$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN10@findItem
; Line 904
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, DWORD PTR _limit$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 905
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN9@findItem
; Line 906
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _result$[ebp], eax
; Line 907
	jmp	SHORT $LN8@findItem
$LN9@findItem:
; Line 908
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	mov	DWORD PTR _result$[ebp], eax
$LN8@findItem:
; Line 911
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN7@findItem
; Line 913
	cmp	DWORD PTR _length$[ebp], 0
	jl	SHORT $LN6@findItem
$LN5@findItem:
; Line 918
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN6@findItem
	mov	esi, esp
	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN6@findItem
; Line 919
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 920
	jmp	SHORT $LN5@findItem
$LN6@findItem:
; Line 922
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN12@findItem
	jmp	SHORT $LN3@findItem
$LN7@findItem:
; Line 923
	cmp	DWORD PTR _result$[ebp], 0
	jge	SHORT $LN2@findItem
; Line 924
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
; Line 925
	jmp	SHORT $LN3@findItem
$LN2@findItem:
; Line 926
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
$LN3@findItem:
; Line 928
	jmp	$LN11@findItem
$LN10@findItem:
; Line 930
	mov	eax, DWORD PTR _start$[ebp]
	not	eax
$LN12@findItem:
; Line 931
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?findItem@Package@icu_56@@QBEHPBDH@Z ENDP		; icu_56::Package::findItem
_TEXT	ENDS
PUBLIC	??_C@_0DP@JLHPGFBI@icupkg?3?5syntax?5error?5?$CImore?5than?5@ ; `string'
PUBLIC	?findItems@Package@icu_56@@QAEXPBD@Z		; icu_56::Package::findItems
;	COMDAT ??_C@_0DP@JLHPGFBI@icupkg?3?5syntax?5error?5?$CImore?5than?5@
CONST	SEGMENT
??_C@_0DP@JLHPGFBI@icupkg?3?5syntax?5error?5?$CImore?5than?5@ DB 'icupkg:'
	DB	' syntax error (more than one ''*'') in item pattern "%s"', 0aH
	DB	00H						; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?findItems@Package@icu_56@@QAEXPBD@Z
_TEXT	SEGMENT
_wild$ = -20						; size = 4
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
?findItems@Package@icu_56@@QAEXPBD@Z PROC		; icu_56::Package::findItems, COMDAT
; _this$ = ecx
; Line 934
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 937
	cmp	DWORD PTR _pattern$[ebp], 0
	je	SHORT $LN6@findItems
	mov	eax, DWORD PTR _pattern$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@findItems
$LN6@findItems:
; Line 938
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201208], -1
; Line 939
	jmp	$LN9@findItems
$LN7@findItems:
; Line 942
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pattern$[ebp]
	mov	DWORD PTR [eax+201192], ecx
; Line 943
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201196], 0
; Line 944
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201204], 0
; Line 946
	mov	esi, esp
	push	42					; 0000002aH
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wild$[ebp], eax
; Line 947
	cmp	DWORD PTR _wild$[ebp], 0
	jne	SHORT $LN5@findItems
; Line 949
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201200], eax
; Line 950
	jmp	$LN4@findItems
$LN5@findItems:
; Line 952
	mov	eax, DWORD PTR _wild$[ebp]
	sub	eax, DWORD PTR _pattern$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201200], eax
; Line 953
	mov	eax, DWORD PTR _wild$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201196], eax
; Line 954
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201196]
	push	ecx
	call	_strlen
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+201204], eax
; Line 955
	mov	esi, esp
	push	42					; 0000002aH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201196]
	push	ecx
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@findItems
; Line 957
	mov	esi, esp
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	push	OFFSET ??_C@_0DP@JLHPGFBI@icupkg?3?5syntax?5error?5?$CImore?5than?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 958
	mov	esi, esp
	push	9
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@findItems:
; Line 962
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+201200], 0
	jne	SHORT $LN2@findItems
; Line 963
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201208], 0
; Line 964
	jmp	SHORT $LN9@findItems
$LN2@findItems:
; Line 965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201200]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+201192]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findItem@Package@icu_56@@QBEHPBDH@Z	; icu_56::Package::findItem
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201208], eax
$LN9@findItems:
; Line 967
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?findItems@Package@icu_56@@QAEXPBD@Z ENDP		; icu_56::Package::findItems
_TEXT	ENDS
PUBLIC	?findNextItem@Package@icu_56@@QAEHXZ		; icu_56::Package::findNextItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?findNextItem@Package@icu_56@@QAEHXZ
_TEXT	SEGMENT
_middleLength$ = -80					; size = 4
_nameLength$ = -68					; size = 4
_idx$ = -56						; size = 4
_treeSep$ = -44						; size = 4
_middle$ = -32						; size = 4
_name$ = -20						; size = 4
_this$ = -8						; size = 4
?findNextItem@Package@icu_56@@QAEHXZ PROC		; icu_56::Package::findNextItem, COMDAT
; _this$ = ecx
; Line 970
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 974
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+201208], 0
	jge	SHORT $LN7@findNextIt
; Line 975
	or	eax, -1
	jmp	$LN9@findNextIt
$LN7@findNextIt:
; Line 978
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+201208]
	cmp	edx, DWORD PTR [ecx+1168]
	jge	$LN6@findNextIt
; Line 979
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201208]
	mov	DWORD PTR _idx$[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+201208]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+201208], eax
; Line 980
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [eax+edx]
	mov	DWORD PTR _name$[ebp], eax
; Line 981
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _nameLength$[ebp], eax
; Line 982
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201200]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+201204]
	cmp	DWORD PTR _nameLength$[ebp], ecx
	jge	SHORT $LN5@findNextIt
; Line 984
	jmp	SHORT $LN7@findNextIt
$LN5@findNextIt:
; Line 986
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+201200], 0
	jle	SHORT $LN4@findNextIt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201200]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201192]
	push	ecx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@findNextIt
; Line 988
	jmp	$LN6@findNextIt
$LN4@findNextIt:
; Line 990
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _name$[ebp]
	add	ecx, DWORD PTR [eax+201200]
	mov	DWORD PTR _middle$[ebp], ecx
; Line 991
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _nameLength$[ebp]
	sub	ecx, DWORD PTR [eax+201200]
	mov	edx, DWORD PTR _this$[ebp]
	sub	ecx, DWORD PTR [edx+201204]
	mov	DWORD PTR _middleLength$[ebp], ecx
; Line 992
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+201204], 0
	jle	SHORT $LN3@findNextIt
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201204]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _nameLength$[ebp]
	sub	eax, DWORD PTR [edx+201204]
	add	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+201196]
	push	edx
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@findNextIt
; Line 994
	jmp	$LN7@findNextIt
$LN3@findNextIt:
; Line 998
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201188]
	and	ecx, 1
	je	SHORT $LN2@findNextIt
; Line 999
	mov	esi, esp
	push	47					; 0000002fH
	mov	eax, DWORD PTR _middle$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _treeSep$[ebp], eax
; Line 1000
	cmp	DWORD PTR _treeSep$[ebp], 0
	je	SHORT $LN2@findNextIt
	mov	eax, DWORD PTR _treeSep$[ebp]
	sub	eax, DWORD PTR _middle$[ebp]
	cmp	eax, DWORD PTR _middleLength$[ebp]
	jge	SHORT $LN2@findNextIt
; Line 1002
	jmp	$LN7@findNextIt
$LN2@findNextIt:
; Line 1007
	mov	eax, DWORD PTR _idx$[ebp]
	jmp	SHORT $LN9@findNextIt
; Line 1008
	jmp	$LN7@findNextIt
$LN6@findNextIt:
; Line 1011
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+201208], -1
; Line 1012
	or	eax, -1
$LN9@findNextIt:
; Line 1013
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?findNextItem@Package@icu_56@@QAEHXZ ENDP		; icu_56::Package::findNextItem
_TEXT	ENDS
PUBLIC	?setMatchMode@Package@icu_56@@QAEXI@Z		; icu_56::Package::setMatchMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMatchMode@Package@icu_56@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_mode$ = 8						; size = 4
?setMatchMode@Package@icu_56@@QAEXI@Z PROC		; icu_56::Package::setMatchMode, COMDAT
; _this$ = ecx
; Line 1016
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1017
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _mode$[ebp]
	mov	DWORD PTR [eax+201188], ecx
; Line 1018
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?setMatchMode@Package@icu_56@@QAEXI@Z ENDP		; icu_56::Package::setMatchMode
_TEXT	ENDS
PUBLIC	?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z	; icu_56::Package::addItem
PUBLIC	?addItem@Package@icu_56@@QAEXPBD@Z		; icu_56::Package::addItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addItem@Package@icu_56@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?addItem@Package@icu_56@@QAEXPBD@Z PROC			; icu_56::Package::addItem, COMDAT
; _this$ = ecx
; Line 1021
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1022
	movzx	eax, BYTE PTR ??_C@_01HHGOMJKL@l?$AA@
	push	eax
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z ; icu_56::Package::addItem
; Line 1023
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addItem@Package@icu_56@@QAEXPBD@Z ENDP			; icu_56::Package::addItem
_TEXT	ENDS
PUBLIC	?ensureItemCapacity@Package@icu_56@@AAEXXZ	; icu_56::Package::ensureItemCapacity
EXTRN	__imp__memmove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_data$ = 12						; size = 4
_length$ = 16						; size = 4
_isDataOwned$ = 20					; size = 1
_type$ = 24						; size = 1
?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z PROC		; icu_56::Package::addItem, COMDAT
; _this$ = ecx
; Line 1026
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1029
	push	-1
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findItem@Package@icu_56@@QBEHPBDH@Z	; icu_56::Package::findItem
	mov	DWORD PTR _idx$[ebp], eax
; Line 1030
	cmp	DWORD PTR _idx$[ebp], 0
	jge	$LN4@addItem
; Line 1032
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ensureItemCapacity@Package@icu_56@@AAEXXZ ; icu_56::Package::ensureItemCapacity
; Line 1034
	mov	eax, DWORD PTR _idx$[ebp]
	not	eax
	mov	DWORD PTR _idx$[ebp], eax
; Line 1035
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN3@addItem
; Line 1036
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	sub	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+1176]
	push	edx
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	lea	ecx, DWORD PTR [eax+ecx+16]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@addItem:
; Line 1038
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1168], ecx
; Line 1041
	push	16					; 00000010H
	push	0
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1176]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 1044
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?allocString@Package@icu_56@@AAEPADCH@Z	; icu_56::Package::allocString
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx+1176]
	mov	DWORD PTR [ecx+edx], eax
; Line 1045
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1176]
	mov	ecx, DWORD PTR [eax+ecx]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1046
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax]
	push	eax
	call	?pathToTree@@YAXPAD@Z			; pathToTree
	add	esp, 4
; Line 1047
	jmp	SHORT $LN2@addItem
$LN4@addItem:
; Line 1049
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	movsx	eax, BYTE PTR [edx+eax+12]
	test	eax, eax
	je	SHORT $LN2@addItem
; Line 1050
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN2@addItem:
; Line 1057
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	ecx, DWORD PTR _data$[ebp]
	mov	DWORD PTR [edx+eax+4], ecx
; Line 1058
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	ecx, DWORD PTR _length$[ebp]
	mov	DWORD PTR [edx+eax+8], ecx
; Line 1059
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	cl, BYTE PTR _isDataOwned$[ebp]
	mov	BYTE PTR [edx+eax+12], cl
; Line 1060
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	cl, BYTE PTR _type$[ebp]
	mov	BYTE PTR [edx+eax+13], cl
; Line 1061
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z ENDP		; icu_56::Package::addItem
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?pathToTree@@YAXPAD@Z
_TEXT	SEGMENT
_t$ = -8						; size = 4
_s$ = 8							; size = 4
?pathToTree@@YAXPAD@Z PROC				; pathToTree, COMDAT
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 237
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _t$[ebp], eax
	jmp	SHORT $LN5@pathToTree
$LN4@pathToTree:
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 1
	mov	DWORD PTR _t$[ebp], eax
$LN5@pathToTree:
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@pathToTree
; Line 238
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 92					; 0000005cH
	je	SHORT $LN1@pathToTree
	mov	eax, DWORD PTR _t$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 47					; 0000002fH
	jne	SHORT $LN2@pathToTree
$LN1@pathToTree:
; Line 239
	mov	eax, DWORD PTR _t$[ebp]
	mov	BYTE PTR [eax], 47			; 0000002fH
$LN2@pathToTree:
; Line 241
	jmp	SHORT $LN4@pathToTree
$LN6@pathToTree:
; Line 242
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?pathToTree@@YAXPAD@Z ENDP				; pathToTree
_TEXT	ENDS
PUBLIC	?addFile@Package@icu_56@@QAEXPBD0@Z		; icu_56::Package::addFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addFile@Package@icu_56@@QAEXPBD0@Z
_TEXT	SEGMENT
_type$ = -41						; size = 1
_length$ = -32						; size = 4
_data$ = -20						; size = 4
_this$ = -8						; size = 4
_filesPath$ = 8						; size = 4
_name$ = 12						; size = 4
?addFile@Package@icu_56@@QAEXPBD0@Z PROC		; icu_56::Package::addFile, COMDAT
; _this$ = ecx
; Line 1064
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1069
	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	lea	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _filesPath$[ebp]
	push	eax
	call	?readFile@@YAPAEPBD0AAHAAD@Z		; readFile
	add	esp, 16					; 00000010H
	mov	DWORD PTR _data$[ebp], eax
; Line 1071
	movzx	eax, BYTE PTR _type$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z ; icu_56::Package::addItem
; Line 1072
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@addFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN6@addFile:
	DD	2
	DD	$LN5@addFile
$LN5@addFile:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN3@addFile
	DD	-41					; ffffffd7H
	DD	1
	DD	$LN4@addFile
$LN4@addFile:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN3@addFile:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?addFile@Package@icu_56@@QAEXPBD0@Z ENDP		; icu_56::Package::addFile
_TEXT	ENDS
PUBLIC	?addItems@Package@icu_56@@QAEXABV12@@Z		; icu_56::Package::addItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?addItems@Package@icu_56@@QAEXABV12@@Z
_TEXT	SEGMENT
_i$ = -32						; size = 4
_pItem$ = -20						; size = 4
_this$ = -8						; size = 4
_listPkg$ = 8						; size = 4
?addItems@Package@icu_56@@QAEXABV12@@Z PROC		; icu_56::Package::addItems, COMDAT
; _this$ = ecx
; Line 1075
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1079
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	DWORD PTR _pItem$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@addItems
$LN2@addItems:
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _pItem$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@addItems:
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN4@addItems
; Line 1080
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+13]
	push	ecx
	push	0
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?addItem@Package@icu_56@@QAEXPBDPAEHCD@Z ; icu_56::Package::addItem
; Line 1081
	jmp	SHORT $LN2@addItems
$LN4@addItems:
; Line 1082
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?addItems@Package@icu_56@@QAEXABV12@@Z ENDP		; icu_56::Package::addItems
_TEXT	ENDS
PUBLIC	?removeItem@Package@icu_56@@QAEXH@Z		; icu_56::Package::removeItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeItem@Package@icu_56@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?removeItem@Package@icu_56@@QAEXH@Z PROC		; icu_56::Package::removeItem, COMDAT
; _this$ = ecx
; Line 1085
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1086
	cmp	DWORD PTR _idx$[ebp], 0
	jl	$LN5@removeItem
; Line 1088
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	movsx	eax, BYTE PTR [edx+eax+12]
	test	eax, eax
	je	SHORT $LN3@removeItem
; Line 1089
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	mov	eax, DWORD PTR [edx+eax+4]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN3@removeItem:
; Line 1093
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+1168]
	jge	SHORT $LN2@removeItem
; Line 1094
	mov	eax, DWORD PTR _idx$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1168]
	sub	edx, eax
	shl	edx, 4
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	lea	eax, DWORD PTR [edx+eax+16]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	shl	ecx, 4
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+1176]
	push	ecx
	call	DWORD PTR __imp__memmove
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@removeItem:
; Line 1096
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+1168], ecx
; Line 1098
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax+201208]
	jg	SHORT $LN5@removeItem
; Line 1099
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+201208]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+201208], ecx
$LN5@removeItem:
; Line 1102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeItem@Package@icu_56@@QAEXH@Z ENDP		; icu_56::Package::removeItem
_TEXT	ENDS
PUBLIC	?removeItems@Package@icu_56@@QAEXPBD@Z		; icu_56::Package::removeItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeItems@Package@icu_56@@QAEXPBD@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_pattern$ = 8						; size = 4
?removeItems@Package@icu_56@@QAEXPBD@Z PROC		; icu_56::Package::removeItems, COMDAT
; _this$ = ecx
; Line 1105
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1108
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findItems@Package@icu_56@@QAEXPBD@Z	; icu_56::Package::findItems
$LN2@removeItem@2:
; Line 1109
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findNextItem@Package@icu_56@@QAEHXZ	; icu_56::Package::findNextItem
	mov	DWORD PTR _idx$[ebp], eax
	cmp	DWORD PTR _idx$[ebp], 0
	jl	SHORT $LN3@removeItem@2
; Line 1110
	mov	eax, DWORD PTR _idx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeItem@Package@icu_56@@QAEXH@Z	; icu_56::Package::removeItem
; Line 1111
	jmp	SHORT $LN2@removeItem@2
$LN3@removeItem@2:
; Line 1112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeItems@Package@icu_56@@QAEXPBD@Z ENDP		; icu_56::Package::removeItems
_TEXT	ENDS
PUBLIC	?removeItems@Package@icu_56@@QAEXABV12@@Z	; icu_56::Package::removeItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?removeItems@Package@icu_56@@QAEXABV12@@Z
_TEXT	SEGMENT
_i$ = -32						; size = 4
_pItem$ = -20						; size = 4
_this$ = -8						; size = 4
_listPkg$ = 8						; size = 4
?removeItems@Package@icu_56@@QAEXABV12@@Z PROC		; icu_56::Package::removeItems, COMDAT
; _this$ = ecx
; Line 1115
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1119
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	DWORD PTR _pItem$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@removeItem@3
$LN2@removeItem@3:
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _pItem$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@removeItem@3:
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN4@removeItem@3
; Line 1120
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?removeItems@Package@icu_56@@QAEXPBD@Z	; icu_56::Package::removeItems
; Line 1121
	jmp	SHORT $LN2@removeItem@3
$LN4@removeItem@3:
; Line 1122
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?removeItems@Package@icu_56@@QAEXABV12@@Z ENDP		; icu_56::Package::removeItems
_TEXT	ENDS
PUBLIC	??_C@_0DB@MJKBDNEM@icupkg?3?5udata_openSwapper?$CIitem?5?$CF@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?extractItem@Package@icu_56@@QAEXPBD0HD@Z	; icu_56::Package::extractItem
;	COMDAT ??_C@_0DB@MJKBDNEM@icupkg?3?5udata_openSwapper?$CIitem?5?$CF@
CONST	SEGMENT
??_C@_0DB@MJKBDNEM@icupkg?3?5udata_openSwapper?$CIitem?5?$CF@ DB 'icupkg:'
	DB	' udata_openSwapper(item %ld) failed - %s', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?extractItem@Package@icu_56@@QAEXPBD0HD@Z
_TEXT	SEGMENT
_errorCode$5399 = -1152					; size = 4
_outIsBigEndian$ = -1137				; size = 1
_itemIsBigEndian$ = -1125				; size = 1
_outCharset$ = -1113					; size = 1
_itemCharset$ = -1101					; size = 1
_fileLength$ = -1092					; size = 4
_pItem$ = -1080						; size = 4
_file$ = -1068						; size = 4
_ds$ = -1056						; size = 4
_filename$ = -1044					; size = 1024
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filesPath$ = 8						; size = 4
_outName$ = 12						; size = 4
_idx$ = 16						; size = 4
_outType$ = 20						; size = 1
?extractItem@Package@icu_56@@QAEXPBD0HD@Z PROC		; icu_56::Package::extractItem, COMDAT
; _this$ = ecx
; Line 1125
	push	ebp
	mov	ebp, esp
	sub	esp, 1348				; 00000544H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1348]
	mov	ecx, 337				; 00000151H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 1134
	cmp	DWORD PTR _idx$[ebp], 0
	jl	SHORT $LN7@extractIte
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	cmp	ecx, DWORD PTR _idx$[ebp]
	jg	SHORT $LN8@extractIte
$LN7@extractIte:
; Line 1135
	jmp	$LN10@extractIte
$LN8@extractIte:
; Line 1137
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1176]
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1141
	movsx	eax, BYTE PTR _outType$[ebp]
	test	eax, eax
	je	$LN6@extractIte
	mov	eax, DWORD PTR _pItem$[ebp]
	movsx	ecx, BYTE PTR [eax+13]
	movsx	edx, BYTE PTR _outType$[ebp]
	cmp	ecx, edx
	je	$LN6@extractIte
; Line 1143
	mov	DWORD PTR _errorCode$5399[ebp], 0
; Line 1144
	lea	eax, DWORD PTR _itemIsBigEndian$[ebp]
	push	eax
	lea	ecx, DWORD PTR _itemCharset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pItem$[ebp]
	movzx	eax, BYTE PTR [edx+13]
	push	eax
	call	?makeTypeProps@@YAXDAAEAAC@Z		; makeTypeProps
	add	esp, 12					; 0000000cH
; Line 1145
	lea	eax, DWORD PTR _outIsBigEndian$[ebp]
	push	eax
	lea	ecx, DWORD PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outType$[ebp]
	push	edx
	call	?makeTypeProps@@YAXDAAEAAC@Z		; makeTypeProps
	add	esp, 12					; 0000000cH
; Line 1146
	lea	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	movzx	ecx, BYTE PTR _outCharset$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _outIsBigEndian$[ebp]
	push	edx
	movzx	eax, BYTE PTR _itemCharset$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _itemIsBigEndian$[ebp]
	push	ecx
	call	_udata_openSwapper_56
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ds$[ebp], eax
; Line 1147
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@extractIte
; Line 1149
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DB@MJKBDNEM@icupkg?3?5udata_openSwapper?$CIitem?5?$CF@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1150
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@extractIte:
; Line 1153
	mov	eax, DWORD PTR _ds$[ebp]
	mov	DWORD PTR [eax+40], OFFSET _printPackageError
; Line 1154
	mov	esi, esp
	call	DWORD PTR __imp____iob_func
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	mov	ecx, DWORD PTR _ds$[ebp]
	mov	DWORD PTR [ecx+44], eax
; Line 1157
	lea	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _ds$[ebp]
	push	ecx
	call	_udata_swap
	add	esp, 20					; 00000014H
; Line 1158
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@extractIte
; Line 1159
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CK@CCIKENKA@icupkg?3?5udata_swap?$CIitem?5?$CFld?$CJ?5fai@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1160
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$5399[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@extractIte:
; Line 1162
	mov	eax, DWORD PTR _ds$[ebp]
	push	eax
	call	_udata_closeSwapper_56
	add	esp, 4
; Line 1163
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cl, BYTE PTR _outType$[ebp]
	mov	BYTE PTR [eax+13], cl
$LN6@extractIte:
; Line 1167
	push	1024					; 00000400H
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filesPath$[ebp]
	push	edx
	call	?makeFullFilenameAndDirs@@YAXPBD0PADH@Z	; makeFullFilenameAndDirs
	add	esp, 16					; 00000010H
; Line 1168
	mov	esi, esp
	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _file$[ebp], eax
; Line 1169
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN3@extractIte
; Line 1170
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CE@JAMGDFAP@icupkg?3?5unable?5to?5create?5file?5?$CC?$CF@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1171
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@extractIte:
; Line 1173
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	push	1
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR __imp__fwrite
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fileLength$[ebp], eax
; Line 1175
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__ferror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@extractIte
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _fileLength$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	je	SHORT $LN2@extractIte
$LN1@extractIte:
; Line 1176
	mov	esi, esp
	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CM@NJFNEBFE@icupkg?3?5unable?5to?5write?5complete@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1177
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@extractIte:
; Line 1179
	mov	esi, esp
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@extractIte:
; Line 1180
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@extractIte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1348				; 00000544H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN18@extractIte:
	DD	6
	DD	$LN17@extractIte
$LN17@extractIte:
	DD	-1044					; fffffbecH
	DD	1024					; 00000400H
	DD	$LN11@extractIte
	DD	-1101					; fffffbb3H
	DD	1
	DD	$LN12@extractIte
	DD	-1113					; fffffba7H
	DD	1
	DD	$LN13@extractIte
	DD	-1125					; fffffb9bH
	DD	1
	DD	$LN14@extractIte
	DD	-1137					; fffffb8fH
	DD	1
	DD	$LN15@extractIte
	DD	-1152					; fffffb80H
	DD	4
	DD	$LN16@extractIte
$LN16@extractIte:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN15@extractIte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	115					; 00000073H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
$LN14@extractIte:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	115					; 00000073H
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	69					; 00000045H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	0
$LN13@extractIte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN12@extractIte:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN11@extractIte:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?extractItem@Package@icu_56@@QAEXPBD0HD@Z ENDP		; icu_56::Package::extractItem
_TEXT	ENDS
PUBLIC	??_C@_0CO@EIJJGCNB@icupkg?3?5unable?5to?5create?5tree?5di@ ; `string'
EXTRN	_uprv_mkdir:PROC
;	COMDAT ??_C@_0CO@EIJJGCNB@icupkg?3?5unable?5to?5create?5tree?5di@
CONST	SEGMENT
??_C@_0CO@EIJJGCNB@icupkg?3?5unable?5to?5create?5tree?5di@ DB 'icupkg: un'
	DB	'able to create tree directory "%s"', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?makeFullFilenameAndDirs@@YAXPBD0PADH@Z
_TEXT	SEGMENT
_errorCode$ = -20					; size = 4
_sep$ = -8						; size = 4
_path$ = 8						; size = 4
_name$ = 12						; size = 4
_filename$ = 16						; size = 4
_capacity$ = 20						; size = 4
?makeFullFilenameAndDirs@@YAXPBD0PADH@Z PROC		; makeFullFilenameAndDirs, COMDAT
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 285
	mov	eax, DWORD PTR _capacity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?makeFullFilename@@YAXPBD0PADH@Z	; makeFullFilename
	add	esp, 16					; 00000010H
; Line 288
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 289
	push	0
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	esi, eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	sub	esi, eax
	mov	DWORD PTR _sep$[ebp], esi
$LN4@makeFullFi@2:
; Line 290
	push	92					; 0000005cH
	mov	eax, DWORD PTR _sep$[ebp]
	push	eax
	call	?strchr@@YAPADPADH@Z			; strchr
	add	esp, 8
	mov	DWORD PTR _sep$[ebp], eax
	cmp	DWORD PTR _sep$[ebp], 0
	je	$LN6@makeFullFi@2
; Line 291
	mov	eax, DWORD PTR _sep$[ebp]
	cmp	eax, DWORD PTR _filename$[ebp]
	je	SHORT $LN2@makeFullFi@2
; Line 292
	mov	eax, DWORD PTR _sep$[ebp]
	mov	BYTE PTR [eax], 0
; Line 293
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	call	_uprv_mkdir
	add	esp, 8
; Line 294
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@makeFullFi@2
; Line 295
	mov	esi, esp
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0CO@EIJJGCNB@icupkg?3?5unable?5to?5create?5tree?5di@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 296
	mov	esi, esp
	push	4
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@makeFullFi@2:
; Line 299
	mov	eax, DWORD PTR _sep$[ebp]
	mov	BYTE PTR [eax], 92			; 0000005cH
	mov	ecx, DWORD PTR _sep$[ebp]
	add	ecx, 1
	mov	DWORD PTR _sep$[ebp], ecx
; Line 300
	jmp	$LN4@makeFullFi@2
$LN6@makeFullFi@2:
; Line 301
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@makeFullFi@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@makeFullFi@2:
	DD	1
	DD	$LN8@makeFullFi@2
$LN8@makeFullFi@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@makeFullFi@2
$LN7@makeFullFi@2:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?makeFullFilenameAndDirs@@YAXPBD0PADH@Z ENDP		; makeFullFilenameAndDirs
_TEXT	ENDS
PUBLIC	?extractItem@Package@icu_56@@QAEXPBDHD@Z	; icu_56::Package::extractItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractItem@Package@icu_56@@QAEXPBDHD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_filesPath$ = 8						; size = 4
_idx$ = 12						; size = 4
_outType$ = 16						; size = 1
?extractItem@Package@icu_56@@QAEXPBDHD@Z PROC		; icu_56::Package::extractItem, COMDAT
; _this$ = ecx
; Line 1183
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1184
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _idx$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	mov	eax, DWORD PTR _filesPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractItem@Package@icu_56@@QAEXPBD0HD@Z ; icu_56::Package::extractItem
; Line 1185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extractItem@Package@icu_56@@QAEXPBDHD@Z ENDP		; icu_56::Package::extractItem
_TEXT	ENDS
PUBLIC	?extractItems@Package@icu_56@@QAEXPBD0D@Z	; icu_56::Package::extractItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractItems@Package@icu_56@@QAEXPBD0D@Z
_TEXT	SEGMENT
_idx$ = -20						; size = 4
_this$ = -8						; size = 4
_filesPath$ = 8						; size = 4
_pattern$ = 12						; size = 4
_outType$ = 16						; size = 1
?extractItems@Package@icu_56@@QAEXPBD0D@Z PROC		; icu_56::Package::extractItems, COMDAT
; _this$ = ecx
; Line 1188
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR _pattern$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findItems@Package@icu_56@@QAEXPBD@Z	; icu_56::Package::findItems
$LN2@extractIte@2:
; Line 1192
	mov	ecx, DWORD PTR _this$[ebp]
	call	?findNextItem@Package@icu_56@@QAEHXZ	; icu_56::Package::findNextItem
	mov	DWORD PTR _idx$[ebp], eax
	cmp	DWORD PTR _idx$[ebp], 0
	jl	SHORT $LN3@extractIte@2
; Line 1193
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _idx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _filesPath$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractItem@Package@icu_56@@QAEXPBDHD@Z ; icu_56::Package::extractItem
; Line 1194
	jmp	SHORT $LN2@extractIte@2
$LN3@extractIte@2:
; Line 1195
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extractItems@Package@icu_56@@QAEXPBD0D@Z ENDP		; icu_56::Package::extractItems
_TEXT	ENDS
PUBLIC	?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z	; icu_56::Package::extractItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z
_TEXT	SEGMENT
_i$ = -32						; size = 4
_pItem$ = -20						; size = 4
_this$ = -8						; size = 4
_filesPath$ = 8						; size = 4
_listPkg$ = 12						; size = 4
_outType$ = 16						; size = 1
?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z PROC	; icu_56::Package::extractItems, COMDAT
; _this$ = ecx
; Line 1198
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1202
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	DWORD PTR _pItem$[ebp], ecx
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@extractIte@3
$LN2@extractIte@3:
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _pItem$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN3@extractIte@3:
	mov	eax, DWORD PTR _listPkg$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN4@extractIte@3
; Line 1203
	movzx	eax, BYTE PTR _outType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _filesPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?extractItems@Package@icu_56@@QAEXPBD0D@Z ; icu_56::Package::extractItems
; Line 1204
	jmp	SHORT $LN2@extractIte@3
$LN4@extractIte@3:
; Line 1205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?extractItems@Package@icu_56@@QAEXPBDABV12@D@Z ENDP	; icu_56::Package::extractItems
_TEXT	ENDS
PUBLIC	?getItemCount@Package@icu_56@@QBEHXZ		; icu_56::Package::getItemCount
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getItemCount@Package@icu_56@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getItemCount@Package@icu_56@@QBEHXZ PROC		; icu_56::Package::getItemCount, COMDAT
; _this$ = ecx
; Line 1208
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1209
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+1168]
; Line 1210
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getItemCount@Package@icu_56@@QBEHXZ ENDP		; icu_56::Package::getItemCount
_TEXT	ENDS
PUBLIC	?getItem@Package@icu_56@@QBEPBUItem@2@H@Z	; icu_56::Package::getItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getItem@Package@icu_56@@QBEPBUItem@2@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_idx$ = 8						; size = 4
?getItem@Package@icu_56@@QBEPBUItem@2@H@Z PROC		; icu_56::Package::getItem, COMDAT
; _this$ = ecx
; Line 1213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1214
	cmp	DWORD PTR _idx$[ebp], 0
	jl	SHORT $LN1@getItem
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _idx$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN1@getItem
; Line 1215
	mov	eax, DWORD PTR _idx$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+1176]
	jmp	SHORT $LN2@getItem
$LN1@getItem:
; Line 1217
	xor	eax, eax
$LN2@getItem:
; Line 1218
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getItem@Package@icu_56@@QBEPBUItem@2@H@Z ENDP		; icu_56::Package::getItem
_TEXT	ENDS
PUBLIC	??_C@_0CE@HLPCBFIP@Item?5?$CFs?5depends?5on?5missing?5item?5@ ; `string'
PUBLIC	?checkDependency@Package@icu_56@@CAXPAXPBD1@Z	; icu_56::Package::checkDependency
;	COMDAT ??_C@_0CE@HLPCBFIP@Item?5?$CFs?5depends?5on?5missing?5item?5@
CONST	SEGMENT
??_C@_0CE@HLPCBFIP@Item?5?$CFs?5depends?5on?5missing?5item?5@ DB 'Item %s'
	DB	' depends on missing item %s', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?checkDependency@Package@icu_56@@CAXPAXPBD1@Z
_TEXT	SEGMENT
_me$ = -8						; size = 4
_context$ = 8						; size = 4
_itemName$ = 12						; size = 4
_targetName$ = 16					; size = 4
?checkDependency@Package@icu_56@@CAXPAXPBD1@Z PROC	; icu_56::Package::checkDependency, COMDAT
; Line 1221
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1223
	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _me$[ebp], eax
; Line 1224
	push	-1
	mov	eax, DWORD PTR _targetName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _me$[ebp]
	call	?findItem@Package@icu_56@@QBEHPBDH@Z	; icu_56::Package::findItem
	test	eax, eax
	jge	SHORT $LN2@checkDepen
; Line 1225
	mov	eax, DWORD PTR _me$[ebp]
	mov	BYTE PTR [eax+201212], 1
; Line 1226
	mov	esi, esp
	mov	eax, DWORD PTR _targetName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _itemName$[ebp]
	push	ecx
	push	OFFSET ??_C@_0CE@HLPCBFIP@Item?5?$CFs?5depends?5on?5missing?5item?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@checkDepen:
; Line 1228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?checkDependency@Package@icu_56@@CAXPAXPBD1@Z ENDP	; icu_56::Package::checkDependency
_TEXT	ENDS
PUBLIC	?enumDependencies@Package@icu_56@@QAEXPAXP6AX0PBD1@Z@Z ; icu_56::Package::enumDependencies
PUBLIC	?checkDependencies@Package@icu_56@@QAECXZ	; icu_56::Package::checkDependencies
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?checkDependencies@Package@icu_56@@QAECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?checkDependencies@Package@icu_56@@QAECXZ PROC		; icu_56::Package::checkDependencies, COMDAT
; _this$ = ecx
; Line 1231
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1232
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+201212], 0
; Line 1233
	push	OFFSET ?checkDependency@Package@icu_56@@CAXPAXPBD1@Z ; icu_56::Package::checkDependency
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?enumDependencies@Package@icu_56@@QAEXPAXP6AX0PBD1@Z@Z ; icu_56::Package::enumDependencies
; Line 1234
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, BYTE PTR [eax+201212]
	test	ecx, ecx
	sete	al
; Line 1235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?checkDependencies@Package@icu_56@@QAECXZ ENDP		; icu_56::Package::checkDependencies
_TEXT	ENDS
EXTRN	?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z:PROC ; icu_56::Package::enumDependencies
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?enumDependencies@Package@icu_56@@QAEXPAXP6AX0PBD1@Z@Z
_TEXT	SEGMENT
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_context$ = 8						; size = 4
_check$ = 12						; size = 4
?enumDependencies@Package@icu_56@@QAEXPAXP6AX0PBD1@Z@Z PROC ; icu_56::Package::enumDependencies, COMDAT
; _this$ = ecx
; Line 1238
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1241
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@enumDepend
$LN2@enumDepend:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@enumDepend:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+1168]
	jge	SHORT $LN4@enumDepend
; Line 1242
	mov	eax, DWORD PTR _check$[ebp]
	push	eax
	mov	ecx, DWORD PTR _context$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	shl	edx, 4
	mov	eax, DWORD PTR _this$[ebp]
	add	edx, DWORD PTR [eax+1176]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?enumDependencies@Package@icu_56@@AAEXPAUItem@2@PAXP6AX1PBD2@Z@Z ; icu_56::Package::enumDependencies
; Line 1243
	jmp	SHORT $LN2@enumDepend
$LN4@enumDepend:
; Line 1244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?enumDependencies@Package@icu_56@@QAEXPAXP6AX0PBD1@Z@Z ENDP ; icu_56::Package::enumDependencies
_TEXT	ENDS
PUBLIC	??_C@_0CB@LIIPADLB@icupkg?3?5string?5storage?5overflow?6@ ; `string'
;	COMDAT ??_C@_0CB@LIIPADLB@icupkg?3?5string?5storage?5overflow?6@
CONST	SEGMENT
??_C@_0CB@LIIPADLB@icupkg?3?5string?5storage?5overflow?6@ DB 'icupkg: str'
	DB	'ing storage overflow', 0aH, 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?allocString@Package@icu_56@@AAEPADCH@Z
_TEXT	SEGMENT
_top$ = -32						; size = 4
_p$ = -20						; size = 4
_this$ = -8						; size = 4
_in$ = 8						; size = 1
_length$ = 12						; size = 4
?allocString@Package@icu_56@@AAEPADCH@Z PROC		; icu_56::Package::allocString, COMDAT
; _this$ = ecx
; Line 1247
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1251
	movsx	eax, BYTE PTR _in$[ebp]
	test	eax, eax
	je	SHORT $LN5@allocStrin
; Line 1252
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1180]
	mov	DWORD PTR _top$[ebp], ecx
; Line 1253
	mov	eax, DWORD PTR _top$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1188]
	mov	DWORD PTR _p$[ebp], edx
; Line 1254
	jmp	SHORT $LN4@allocStrin
$LN5@allocStrin:
; Line 1255
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1184]
	mov	DWORD PTR _top$[ebp], ecx
; Line 1256
	mov	eax, DWORD PTR _top$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	lea	edx, DWORD PTR [ecx+eax+101188]
	mov	DWORD PTR _p$[ebp], edx
$LN4@allocStrin:
; Line 1258
	mov	eax, DWORD PTR _length$[ebp]
	mov	ecx, DWORD PTR _top$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _top$[ebp], edx
; Line 1260
	cmp	DWORD PTR _top$[ebp], 100000		; 000186a0H
	jle	SHORT $LN3@allocStrin
; Line 1261
	mov	esi, esp
	push	OFFSET ??_C@_0CB@LIIPADLB@icupkg?3?5string?5storage?5overflow?6@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1262
	mov	esi, esp
	push	15					; 0000000fH
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@allocStrin:
; Line 1264
	movsx	eax, BYTE PTR _in$[ebp]
	test	eax, eax
	je	SHORT $LN2@allocStrin
; Line 1265
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _top$[ebp]
	mov	DWORD PTR [eax+1180], ecx
; Line 1266
	jmp	SHORT $LN1@allocStrin
$LN2@allocStrin:
; Line 1267
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _top$[ebp]
	mov	DWORD PTR [eax+1184], ecx
$LN1@allocStrin:
; Line 1269
	mov	eax, DWORD PTR _p$[ebp]
$LN7@allocStrin:
; Line 1270
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?allocString@Package@icu_56@@AAEPADCH@Z ENDP		; icu_56::Package::allocString
_TEXT	ENDS
PUBLIC	??_C@_0CI@LGBKFGHL@icupkg?3?5sorting?5item?5names?5faile@ ; `string'
EXTRN	_uprv_sortArray_56:PROC
;	COMDAT ??_C@_0CI@LGBKFGHL@icupkg?3?5sorting?5item?5names?5faile@
CONST	SEGMENT
??_C@_0CI@LGBKFGHL@icupkg?3?5sorting?5item?5names?5faile@ DB 'icupkg: sor'
	DB	'ting item names failed - %s', 0aH, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?sortItems@Package@icu_56@@AAEXXZ
_TEXT	SEGMENT
_errorCode$ = -20					; size = 4
_this$ = -8						; size = 4
?sortItems@Package@icu_56@@AAEXXZ PROC			; icu_56::Package::sortItems, COMDAT
; _this$ = ecx
; Line 1273
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1274
	mov	DWORD PTR _errorCode$[ebp], 0
; Line 1275
	lea	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	push	0
	push	0
	push	OFFSET _compareItems
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1168]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	push	ecx
	call	_uprv_sortArray_56
	add	esp, 28					; 0000001cH
; Line 1276
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	?U_FAILURE@@YACW4UErrorCode@@@Z		; U_FAILURE
	add	esp, 4
	movsx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@sortItems
; Line 1277
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	_u_errorName_56
	add	esp, 4
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_0CI@LGBKFGHL@icupkg?3?5sorting?5item?5names?5faile@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1278
	mov	esi, esp
	mov	eax, DWORD PTR _errorCode$[ebp]
	push	eax
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@sortItems:
; Line 1280
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@sortItems
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@sortItems:
	DD	1
	DD	$LN5@sortItems
$LN5@sortItems:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@sortItems
$LN4@sortItems:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?sortItems@Package@icu_56@@AAEXXZ ENDP			; icu_56::Package::sortItems
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _compareItems
_TEXT	SEGMENT
___formal$ = 8						; size = 4
_left$ = 12						; size = 4
_right$ = 16						; size = 4
_compareItems PROC					; COMDAT
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 375
	mov	eax, DWORD PTR _right$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _left$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_strcmp
	add	esp, 8
; Line 376
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_compareItems ENDP
_TEXT	ENDS
PUBLIC	??_C@_0EB@MGCFHHLO@icupkg?3?5Out?5of?5memory?5trying?5to?5@ ; `string'
EXTRN	_uprv_checkValidMemory:PROC
;	COMDAT ??_C@_0EB@MGCFHHLO@icupkg?3?5Out?5of?5memory?5trying?5to?5@
CONST	SEGMENT
??_C@_0EB@MGCFHHLO@icupkg?3?5Out?5of?5memory?5trying?5to?5@ DB 'icupkg: O'
	DB	'ut of memory trying to allocate %lu bytes for %d items', 0aH, 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?setItemCapacity@Package@icu_56@@AAEXH@Z
_TEXT	SEGMENT
_oldItems$ = -32					; size = 4
_newItems$ = -20					; size = 4
_this$ = -8						; size = 4
_max$ = 8						; size = 4
?setItemCapacity@Package@icu_56@@AAEXH@Z PROC		; icu_56::Package::setItemCapacity, COMDAT
; _this$ = ecx
; Line 1283
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1284
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	cmp	ecx, DWORD PTR [eax+1172]
	jg	SHORT $LN3@setItemCap
; Line 1285
	jmp	$LN5@setItemCap
$LN3@setItemCap:
; Line 1287
	mov	eax, DWORD PTR _max$[ebp]
	shl	eax, 4
	push	eax
	call	_uprv_malloc_56
	add	esp, 4
	mov	DWORD PTR _newItems$[ebp], eax
; Line 1288
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	mov	DWORD PTR _oldItems$[ebp], ecx
; Line 1289
	cmp	DWORD PTR _newItems$[ebp], 0
	jne	SHORT $LN2@setItemCap
; Line 1291
	mov	esi, esp
	mov	eax, DWORD PTR _max$[ebp]
	push	eax
	mov	ecx, DWORD PTR _max$[ebp]
	shl	ecx, 4
	push	ecx
	push	OFFSET ??_C@_0EB@MGCFHHLO@icupkg?3?5Out?5of?5memory?5trying?5to?5@
	mov	edi, esp
	call	DWORD PTR __imp____iob_func
	cmp	edi, esp
	call	__RTC_CheckEsp
	add	eax, 64					; 00000040H
	push	eax
	call	DWORD PTR __imp__fprintf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1292
	mov	esi, esp
	push	7
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setItemCap:
; Line 1294
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1176], 0
	je	SHORT $LN1@setItemCap
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+1168], 0
	jle	SHORT $LN1@setItemCap
; Line 1295
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1176]
	push	ecx
	call	_uprv_checkValidMemory
	add	esp, 8
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+1168]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+1176]
	push	edx
	mov	eax, DWORD PTR _newItems$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@setItemCap:
; Line 1297
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _max$[ebp]
	mov	DWORD PTR [eax+1172], ecx
; Line 1298
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _newItems$[ebp]
	mov	DWORD PTR [eax+1176], ecx
; Line 1299
	mov	eax, DWORD PTR _oldItems$[ebp]
	push	eax
	call	_uprv_free_56
	add	esp, 4
$LN5@setItemCap:
; Line 1300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setItemCapacity@Package@icu_56@@AAEXH@Z ENDP		; icu_56::Package::setItemCapacity
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ensureItemCapacity@Package@icu_56@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ensureItemCapacity@Package@icu_56@@AAEXXZ PROC		; icu_56::Package::ensureItemCapacity, COMDAT
; _this$ = ecx
; Line 1303
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 1304
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+1172]
	jle	SHORT $LN2@ensureItem
; Line 1305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+1168]
	add	ecx, 256				; 00000100H
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setItemCapacity@Package@icu_56@@AAEXH@Z ; icu_56::Package::setItemCapacity
$LN2@ensureItem:
; Line 1307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ensureItemCapacity@Package@icu_56@@AAEXXZ ENDP		; icu_56::Package::ensureItemCapacity
_TEXT	ENDS
PUBLIC	??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z	; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$LocalMemory@E@icu_56@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalMemory@E@icu_56@@QAE@PAE@Z PROC		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\source\common\cmemory.h
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z ; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalMemory@E@icu_56@@QAE@PAE@Z ENDP		; icu_56::LocalMemory<unsigned char>::LocalMemory<unsigned char>
_TEXT	ENDS
PUBLIC	??1?$LocalPointerBase@E@icu_56@@QAE@XZ		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$LocalMemory@E@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalMemory@E@icu_56@@QAE@XZ PROC			; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>, COMDAT
; _this$ = ecx
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 174
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_uprv_free_56
	add	esp, 4
; Line 175
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$LocalPointerBase@E@icu_56@@QAE@XZ	; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalMemory@E@icu_56@@QAE@XZ ENDP			; icu_56::LocalMemory<unsigned char>::~LocalMemory<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?isNull@?$LocalPointerBase@E@icu_56@@QBECXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?isNull@?$LocalPointerBase@E@icu_56@@QBECXZ PROC	; icu_56::LocalPointerBase<unsigned char>::isNull, COMDAT
; _this$ = ecx
; File d:\mozilla\intl\icu\include\unicode\localpointer.h
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?isNull@?$LocalPointerBase@E@icu_56@@QBECXZ ENDP	; icu_56::LocalPointerBase<unsigned char>::isNull
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ PROC	; icu_56::LocalPointerBase<unsigned char>::getAlias, COMDAT
; _this$ = ecx
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?getAlias@?$LocalPointerBase@E@icu_56@@QBEPAEXZ ENDP	; icu_56::LocalPointerBase<unsigned char>::getAlias
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?orphan@?$LocalPointerBase@E@icu_56@@QAEPAEXZ
_TEXT	SEGMENT
_p$ = -20						; size = 4
_this$ = -8						; size = 4
?orphan@?$LocalPointerBase@E@icu_56@@QAEPAEXZ PROC	; icu_56::LocalPointerBase<unsigned char>::orphan, COMDAT
; _this$ = ecx
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 133
	mov	eax, DWORD PTR _p$[ebp]
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?orphan@?$LocalPointerBase@E@icu_56@@QAEPAEXZ ENDP	; icu_56::LocalPointerBase<unsigned char>::orphan
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_p$ = 8							; size = 4
??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z PROC		; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>, COMDAT
; _this$ = ecx
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$LocalPointerBase@E@icu_56@@QAE@PAE@Z ENDP		; icu_56::LocalPointerBase<unsigned char>::LocalPointerBase<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1?$LocalPointerBase@E@icu_56@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$LocalPointerBase@E@icu_56@@QAE@XZ PROC		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>, COMDAT
; _this$ = ecx
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$LocalPointerBase@E@icu_56@@QAE@XZ ENDP		; icu_56::LocalPointerBase<unsigned char>::~LocalPointerBase<unsigned char>
_TEXT	ENDS
END

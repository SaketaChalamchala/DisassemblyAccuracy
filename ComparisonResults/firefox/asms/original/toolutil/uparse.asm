; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\mozilla\intl\icu\source\tools\toolutil\uparse.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD

PUBLIC	_u_skipWhitespace
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\mozilla\intl\icu\source\tools\toolutil\uparse.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _u_skipWhitespace
_TEXT	SEGMENT
_s$ = 8							; size = 4
_u_skipWhitespace PROC					; COMDAT
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@u_skipWhit:
; Line 34
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN1@u_skipWhit
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN1@u_skipWhit
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN1@u_skipWhit
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN2@u_skipWhit
$LN1@u_skipWhit:
; Line 35
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 36
	jmp	SHORT $LN3@u_skipWhit
$LN2@u_skipWhit:
; Line 37
	mov	eax, DWORD PTR _s$[ebp]
; Line 38
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_u_skipWhitespace ENDP
_TEXT	ENDS
PUBLIC	_u_rtrim
EXTRN	__imp__strchr:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_rtrim
_TEXT	SEGMENT
_end$ = -8						; size = 4
_s$ = 8							; size = 4
_u_rtrim PROC						; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _end$[ebp], eax
$LN3@u_rtrim:
; Line 43
	mov	eax, DWORD PTR _s$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	SHORT $LN2@u_rtrim
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN1@u_rtrim
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 9
	je	SHORT $LN1@u_rtrim
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN1@u_rtrim
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN2@u_rtrim
$LN1@u_rtrim:
; Line 44
	mov	eax, DWORD PTR _end$[ebp]
	sub	eax, 1
	mov	DWORD PTR _end$[ebp], eax
	mov	ecx, DWORD PTR _end$[ebp]
	mov	BYTE PTR [ecx], 0
; Line 45
	jmp	SHORT $LN3@u_rtrim
$LN2@u_rtrim:
; Line 46
	mov	eax, DWORD PTR _end$[ebp]
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_u_rtrim ENDP
_TEXT	ENDS
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_u_parseDelimitedFile
EXTRN	_T_FileStream_close:PROC
EXTRN	_T_FileStream_readLine:PROC
EXTRN	_T_FileStream_open:PROC
EXTRN	_T_FileStream_stdin:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _u_parseDelimitedFile
_TEXT	SEGMENT
_length$ = -368						; size = 4
_i$ = -356						; size = 4
_limit$ = -344						; size = 4
_start$ = -332						; size = 4
_line$ = -320						; size = 300
_file$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_filename$ = 8						; size = 4
_delimiter$ = 12					; size = 1
_fields$ = 16						; size = 4
_fieldCount$ = 20					; size = 4
_lineFn$ = 24						; size = 4
_context$ = 28						; size = 4
_pErrorCode$ = 32					; size = 4
_u_parseDelimitedFile PROC				; COMDAT
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 564				; 00000234H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-564]
	mov	ecx, 141				; 0000008dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 82
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN29@u_parseDel
; Line 83
	jmp	$LN30@u_parseDel
$LN29@u_parseDel:
; Line 86
	cmp	DWORD PTR _fields$[ebp], 0
	je	SHORT $LN27@u_parseDel
	cmp	DWORD PTR _lineFn$[ebp], 0
	je	SHORT $LN27@u_parseDel
	cmp	DWORD PTR _fieldCount$[ebp], 0
	jg	SHORT $LN28@u_parseDel
$LN27@u_parseDel:
; Line 87
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 88
	jmp	$LN30@u_parseDel
$LN28@u_parseDel:
; Line 91
	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN25@u_parseDel
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN25@u_parseDel
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN26@u_parseDel
	mov	eax, DWORD PTR _filename$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	test	ecx, ecx
	jne	SHORT $LN26@u_parseDel
$LN25@u_parseDel:
; Line 92
	mov	DWORD PTR _filename$[ebp], 0
; Line 93
	call	_T_FileStream_stdin
	mov	DWORD PTR _file$[ebp], eax
; Line 94
	jmp	SHORT $LN24@u_parseDel
$LN26@u_parseDel:
; Line 95
	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	_T_FileStream_open
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax
$LN24@u_parseDel:
; Line 97
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN22@u_parseDel
; Line 98
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 4
; Line 99
	jmp	$LN30@u_parseDel
$LN22@u_parseDel:
; Line 102
	push	300					; 0000012cH
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	call	_T_FileStream_readLine
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	$LN21@u_parseDel
; Line 104
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_u_rtrim
	add	esp, 4
	lea	ecx, DWORD PTR _line$[ebp]
	sub	eax, ecx
	mov	DWORD PTR _length$[ebp], eax
; Line 111
	lea	eax, DWORD PTR _line$[ebp]
	push	eax
	call	_getMissingLimit
	add	esp, 4
	mov	DWORD PTR _start$[ebp], eax
; Line 112
	mov	eax, DWORD PTR _start$[ebp]
	lea	ecx, DWORD PTR _line$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN20@u_parseDel
; Line 113
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 0
; Line 114
	jmp	SHORT $LN19@u_parseDel
$LN20@u_parseDel:
; Line 115
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], -127			; ffffff81H
$LN19@u_parseDel:
; Line 119
	mov	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN17@u_parseDel
	mov	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN18@u_parseDel
$LN17@u_parseDel:
; Line 120
	jmp	$LN22@u_parseDel
$LN18@u_parseDel:
; Line 124
	mov	esi, esp
	push	35					; 00000023H
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	call	DWORD PTR __imp__strchr
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _limit$[ebp], eax
; Line 125
	cmp	DWORD PTR _limit$[ebp], 0
	je	SHORT $LN16@u_parseDel
$LN15@u_parseDel:
; Line 127
	mov	eax, DWORD PTR _limit$[ebp]
	cmp	eax, DWORD PTR _start$[ebp]
	jbe	SHORT $LN14@u_parseDel
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN13@u_parseDel
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 9
	je	SHORT $LN13@u_parseDel
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN13@u_parseDel
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax-1]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN14@u_parseDel
$LN13@u_parseDel:
; Line 128
	mov	eax, DWORD PTR _limit$[ebp]
	sub	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
; Line 129
	jmp	SHORT $LN15@u_parseDel
$LN14@u_parseDel:
; Line 132
	mov	eax, DWORD PTR _limit$[ebp]
	mov	BYTE PTR [eax], 0
$LN16@u_parseDel:
; Line 136
	mov	eax, DWORD PTR _start$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN12@u_parseDel
; Line 137
	jmp	$LN22@u_parseDel
$LN12@u_parseDel:
; Line 141
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@u_parseDel
$LN10@u_parseDel:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@u_parseDel:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _fieldCount$[ebp]
	jge	$LN9@u_parseDel
; Line 143
	mov	eax, DWORD PTR _start$[ebp]
	mov	DWORD PTR _limit$[ebp], eax
$LN8@u_parseDel:
; Line 144
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	movsx	edx, BYTE PTR _delimiter$[ebp]
	cmp	ecx, edx
	je	SHORT $LN7@u_parseDel
	mov	eax, DWORD PTR _limit$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN7@u_parseDel
; Line 145
	mov	eax, DWORD PTR _limit$[ebp]
	add	eax, 1
	mov	DWORD PTR _limit$[ebp], eax
; Line 146
	jmp	SHORT $LN8@u_parseDel
$LN7@u_parseDel:
; Line 149
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _fields$[ebp]
	mov	edx, DWORD PTR _start$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
; Line 150
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _fields$[ebp]
	mov	edx, DWORD PTR _limit$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 153
	mov	eax, DWORD PTR _limit$[ebp]
	mov	DWORD PTR _start$[ebp], eax
; Line 154
	mov	eax, DWORD PTR _start$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN6@u_parseDel
; Line 155
	mov	eax, DWORD PTR _start$[ebp]
	add	eax, 1
	mov	DWORD PTR _start$[ebp], eax
	jmp	SHORT $LN5@u_parseDel
$LN6@u_parseDel:
; Line 156
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _fieldCount$[ebp]
	jge	SHORT $LN5@u_parseDel
; Line 157
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 158
	mov	eax, DWORD PTR _length$[ebp]
	lea	ecx, DWORD PTR _line$[ebp+eax]
	mov	DWORD PTR _limit$[ebp], ecx
; Line 159
	mov	eax, DWORD PTR _fieldCount$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 160
	jmp	SHORT $LN9@u_parseDel
$LN5@u_parseDel:
; Line 162
	jmp	$LN10@u_parseDel
$LN9@u_parseDel:
; Line 165
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN3@u_parseDel
; Line 166
	jmp	SHORT $LN21@u_parseDel
$LN3@u_parseDel:
; Line 170
	mov	esi, esp
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fieldCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _fields$[ebp]
	push	edx
	mov	eax, DWORD PTR _context$[ebp]
	push	eax
	call	DWORD PTR _lineFn$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN2@u_parseDel
; Line 172
	jmp	SHORT $LN21@u_parseDel
$LN2@u_parseDel:
; Line 174
	jmp	$LN22@u_parseDel
$LN21@u_parseDel:
; Line 176
	cmp	DWORD PTR _filename$[ebp], 0
	je	SHORT $LN30@u_parseDel
; Line 177
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_T_FileStream_close
	add	esp, 4
$LN30@u_parseDel:
; Line 179
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@u_parseDel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 564				; 00000234H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN36@u_parseDel:
	DD	1
	DD	$LN35@u_parseDel
$LN35@u_parseDel:
	DD	-320					; fffffec0H
	DD	300					; 0000012cH
	DD	$LN34@u_parseDel
$LN34@u_parseDel:
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
_u_parseDelimitedFile ENDP
_TEXT	ENDS
PUBLIC	??_C@_07NCACNKHJ@missing?$AA@			; `string'
EXTRN	__imp__strncmp:PROC
;	COMDAT ??_C@_07NCACNKHJ@missing?$AA@
CONST	SEGMENT
??_C@_07NCACNKHJ@missing?$AA@ DB 'missing', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _getMissingLimit
_TEXT	SEGMENT
_s0$ = -8						; size = 4
_s$ = 8							; size = 4
_getMissingLimit PROC					; COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s0$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 35					; 00000023H
	jne	$LN2@getMissing
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 64					; 00000040H
	jne	SHORT $LN2@getMissing
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
	mov	esi, esp
	push	7
	push	OFFSET ??_C@_07NCACNKHJ@missing?$AA@
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN2@getMissing
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 7
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
	mov	ecx, DWORD PTR _s$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 58					; 0000003aH
	jne	SHORT $LN2@getMissing
; Line 66
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	jmp	SHORT $LN3@getMissing
; Line 67
	jmp	SHORT $LN3@getMissing
$LN2@getMissing:
; Line 68
	mov	eax, DWORD PTR _s0$[ebp]
$LN3@getMissing:
; Line 70
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_getMissingLimit ENDP
_TEXT	ENDS
PUBLIC	_u_parseCodePoints
EXTRN	__imp__strtoul:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_parseCodePoints
_TEXT	SEGMENT
_count$ = -32						; size = 4
_value$ = -20						; size = 4
_end$ = -8						; size = 4
_s$ = 8							; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_pErrorCode$ = 20					; size = 4
_u_parseCodePoints PROC					; COMDAT
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 194
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN12@u_parseCod
; Line 195
	xor	eax, eax
	jmp	$LN13@u_parseCod
$LN12@u_parseCod:
; Line 197
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN10@u_parseCod
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jl	SHORT $LN10@u_parseCod
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN11@u_parseCod
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN11@u_parseCod
$LN10@u_parseCod:
; Line 198
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 199
	xor	eax, eax
	jmp	$LN13@u_parseCod
$LN11@u_parseCod:
; Line 202
	mov	DWORD PTR _count$[ebp], 0
$LN9@u_parseCod:
; Line 204
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 205
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN6@u_parseCod
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@u_parseCod
$LN6@u_parseCod:
; Line 206
	mov	eax, DWORD PTR _count$[ebp]
	jmp	$LN13@u_parseCod
$LN7@u_parseCod:
; Line 210
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN4@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN3@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN3@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN3@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN3@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN3@u_parseCod
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@u_parseCod
$LN3@u_parseCod:
	cmp	DWORD PTR _value$[ebp], 1114112		; 00110000H
	jb	SHORT $LN5@u_parseCod
$LN4@u_parseCod:
; Line 212
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 213
	xor	eax, eax
	jmp	SHORT $LN13@u_parseCod
$LN5@u_parseCod:
; Line 217
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jge	SHORT $LN2@u_parseCod
; Line 218
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 219
	jmp	SHORT $LN1@u_parseCod
$LN2@u_parseCod:
; Line 220
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN1@u_parseCod:
; Line 224
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 225
	jmp	$LN9@u_parseCod
$LN13@u_parseCod:
; Line 226
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@u_parseCod
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@u_parseCod:
	DD	1
	DD	$LN16@u_parseCod
$LN16@u_parseCod:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN15@u_parseCod
$LN15@u_parseCod:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_u_parseCodePoints ENDP
_TEXT	ENDS
PUBLIC	_u_parseString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_parseString
_TEXT	SEGMENT
_destLength$ = -32					; size = 4
_value$ = -20						; size = 4
_end$ = -8						; size = 4
_s$ = 8							; size = 4
_dest$ = 12						; size = 4
_destCapacity$ = 16					; size = 4
_pFirst$ = 20						; size = 4
_pErrorCode$ = 24					; size = 4
_u_parseString PROC					; COMDAT
; Line 238
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 243
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN20@u_parseStr
; Line 244
	xor	eax, eax
	jmp	$LN21@u_parseStr
$LN20@u_parseStr:
; Line 246
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN18@u_parseStr
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jl	SHORT $LN18@u_parseStr
	cmp	DWORD PTR _destCapacity$[ebp], 0
	jle	SHORT $LN19@u_parseStr
	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN19@u_parseStr
$LN18@u_parseStr:
; Line 247
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 248
	xor	eax, eax
	jmp	$LN21@u_parseStr
$LN19@u_parseStr:
; Line 251
	cmp	DWORD PTR _pFirst$[ebp], 0
	je	SHORT $LN17@u_parseStr
; Line 252
	mov	eax, DWORD PTR _pFirst$[ebp]
	mov	DWORD PTR [eax], -1
$LN17@u_parseStr:
; Line 255
	mov	DWORD PTR _destLength$[ebp], 0
$LN16@u_parseStr:
; Line 257
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 258
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN13@u_parseStr
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN14@u_parseStr
$LN13@u_parseStr:
; Line 259
	mov	eax, DWORD PTR _destLength$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jge	SHORT $LN12@u_parseStr
; Line 260
	xor	eax, eax
	mov	ecx, DWORD PTR _destLength$[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	jmp	SHORT $LN11@u_parseStr
$LN12@u_parseStr:
; Line 261
	mov	eax, DWORD PTR _destLength$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jne	SHORT $LN10@u_parseStr
; Line 262
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], -124			; ffffff84H
; Line 263
	jmp	SHORT $LN11@u_parseStr
$LN10@u_parseStr:
; Line 264
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 15			; 0000000fH
$LN11@u_parseStr:
; Line 266
	mov	eax, DWORD PTR _destLength$[ebp]
	jmp	$LN21@u_parseStr
$LN14@u_parseStr:
; Line 270
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 271
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN7@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN6@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 9
	je	SHORT $LN6@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	je	SHORT $LN6@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN6@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN6@u_parseStr
	mov	eax, DWORD PTR _end$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN7@u_parseStr
$LN6@u_parseStr:
	cmp	DWORD PTR _value$[ebp], 1114112		; 00110000H
	jb	SHORT $LN8@u_parseStr
$LN7@u_parseStr:
; Line 272
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 273
	xor	eax, eax
	jmp	$LN21@u_parseStr
$LN8@u_parseStr:
; Line 277
	cmp	DWORD PTR _pFirst$[ebp], 0
	je	SHORT $LN5@u_parseStr
; Line 278
	mov	eax, DWORD PTR _pFirst$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 279
	mov	DWORD PTR _pFirst$[ebp], 0
$LN5@u_parseStr:
; Line 283
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _value$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _destLength$[ebp]
	cmp	ecx, DWORD PTR _destCapacity$[ebp]
	jg	SHORT $LN4@u_parseStr
; Line 284
	cmp	DWORD PTR _value$[ebp], 65535		; 0000ffffH
	ja	SHORT $LN3@u_parseStr
	mov	eax, DWORD PTR _destLength$[ebp]
	mov	ecx, DWORD PTR _dest$[ebp]
	mov	dx, WORD PTR _value$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
	mov	eax, DWORD PTR _destLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _destLength$[ebp], eax
	jmp	SHORT $LN2@u_parseStr
$LN3@u_parseStr:
	mov	eax, DWORD PTR _value$[ebp]
	shr	eax, 10					; 0000000aH
	add	eax, 55232				; 0000d7c0H
	mov	ecx, DWORD PTR _destLength$[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _destLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _destLength$[ebp], eax
	mov	eax, DWORD PTR _value$[ebp]
	and	eax, 1023				; 000003ffH
	or	eax, 56320				; 0000dc00H
	mov	ecx, DWORD PTR _destLength$[ebp]
	mov	edx, DWORD PTR _dest$[ebp]
	mov	WORD PTR [edx+ecx*2], ax
	mov	eax, DWORD PTR _destLength$[ebp]
	add	eax, 1
	mov	DWORD PTR _destLength$[ebp], eax
$LN2@u_parseStr:
; Line 285
	jmp	SHORT $LN1@u_parseStr
$LN4@u_parseStr:
; Line 286
	mov	eax, 65535				; 0000ffffH
	cmp	eax, DWORD PTR _value$[ebp]
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	add	ecx, DWORD PTR _destLength$[ebp]
	mov	DWORD PTR _destLength$[ebp], ecx
$LN1@u_parseStr:
; Line 290
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 291
	jmp	$LN16@u_parseStr
$LN21@u_parseStr:
; Line 292
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@u_parseStr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN25@u_parseStr:
	DD	1
	DD	$LN24@u_parseStr
$LN24@u_parseStr:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN23@u_parseStr
$LN23@u_parseStr:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_u_parseString ENDP
_TEXT	ENDS
PUBLIC	_u_parseCodePointRangeAnyTerminator
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_parseCodePointRangeAnyTerminator
_TEXT	SEGMENT
_value$ = -20						; size = 4
_end$ = -8						; size = 4
_s$ = 8							; size = 4
_pStart$ = 12						; size = 4
_pEnd$ = 16						; size = 4
_terminator$ = 20					; size = 4
_pErrorCode$ = 24					; size = 4
_u_parseCodePointRangeAnyTerminator PROC		; COMDAT
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 303
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jle	SHORT $LN10@u_parseCod@2
; Line 304
	xor	eax, eax
	jmp	$LN11@u_parseCod@2
$LN10@u_parseCod@2:
; Line 306
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN8@u_parseCod@2
	cmp	DWORD PTR _pStart$[ebp], 0
	je	SHORT $LN8@u_parseCod@2
	cmp	DWORD PTR _pEnd$[ebp], 0
	jne	SHORT $LN9@u_parseCod@2
$LN8@u_parseCod@2:
; Line 307
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 1
; Line 308
	xor	eax, eax
	jmp	$LN11@u_parseCod@2
$LN9@u_parseCod@2:
; Line 312
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 313
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 314
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN6@u_parseCod@2
	cmp	DWORD PTR _value$[ebp], 1114112		; 00110000H
	jb	SHORT $LN7@u_parseCod@2
$LN6@u_parseCod@2:
; Line 315
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 316
	xor	eax, eax
	jmp	$LN11@u_parseCod@2
$LN7@u_parseCod@2:
; Line 318
	mov	eax, DWORD PTR _pEnd$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pStart$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	mov	DWORD PTR [edx], eax
; Line 321
	mov	eax, DWORD PTR _end$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 322
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 46					; 0000002eH
	jne	SHORT $LN4@u_parseCod@2
	mov	eax, DWORD PTR _s$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN5@u_parseCod@2
$LN4@u_parseCod@2:
; Line 323
	mov	eax, DWORD PTR _terminator$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 324
	mov	eax, 1
	jmp	$LN11@u_parseCod@2
$LN5@u_parseCod@2:
; Line 326
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 2
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 329
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _end$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	DWORD PTR __imp__strtoul
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _value$[ebp], eax
; Line 330
	mov	eax, DWORD PTR _end$[ebp]
	cmp	eax, DWORD PTR _s$[ebp]
	jbe	SHORT $LN2@u_parseCod@2
	cmp	DWORD PTR _value$[ebp], 1114112		; 00110000H
	jb	SHORT $LN3@u_parseCod@2
$LN2@u_parseCod@2:
; Line 331
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 332
	xor	eax, eax
	jmp	SHORT $LN11@u_parseCod@2
$LN3@u_parseCod@2:
; Line 334
	mov	eax, DWORD PTR _pEnd$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 337
	mov	eax, DWORD PTR _pStart$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jae	SHORT $LN1@u_parseCod@2
; Line 338
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 339
	xor	eax, eax
	jmp	SHORT $LN11@u_parseCod@2
$LN1@u_parseCod@2:
; Line 342
	mov	eax, DWORD PTR _terminator$[ebp]
	mov	ecx, DWORD PTR _end$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 343
	mov	eax, DWORD PTR _pStart$[ebp]
	mov	ecx, DWORD PTR _value$[ebp]
	sub	ecx, DWORD PTR [eax]
	add	ecx, 1
	mov	eax, ecx
$LN11@u_parseCod@2:
; Line 344
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@u_parseCod@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@u_parseCod@2:
	DD	1
	DD	$LN14@u_parseCod@2
$LN14@u_parseCod@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN13@u_parseCod@2
$LN13@u_parseCod@2:
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_u_parseCodePointRangeAnyTerminator ENDP
_TEXT	ENDS
PUBLIC	_u_parseCodePointRange
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _u_parseCodePointRange
_TEXT	SEGMENT
_rangeLength$ = -20					; size = 4
_terminator$ = -8					; size = 4
_s$ = 8							; size = 4
_pStart$ = 12						; size = 4
_pEnd$ = 16						; size = 4
_pErrorCode$ = 20					; size = 4
_u_parseCodePointRange PROC				; COMDAT
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 352
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	push	eax
	lea	ecx, DWORD PTR _terminator$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pEnd$[ebp]
	push	edx
	mov	eax, DWORD PTR _pStart$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_u_parseCodePointRangeAnyTerminator
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rangeLength$[ebp], eax
; Line 353
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN2@u_parseCod@3
; Line 354
	mov	eax, DWORD PTR _terminator$[ebp]
	push	eax
	call	_u_skipWhitespace
	add	esp, 4
	mov	DWORD PTR _terminator$[ebp], eax
; Line 355
	mov	eax, DWORD PTR _terminator$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	je	SHORT $LN2@u_parseCod@3
	mov	eax, DWORD PTR _terminator$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@u_parseCod@3
; Line 356
	mov	eax, DWORD PTR _pErrorCode$[ebp]
	mov	DWORD PTR [eax], 9
; Line 357
	xor	eax, eax
	jmp	SHORT $LN3@u_parseCod@3
$LN2@u_parseCod@3:
; Line 360
	mov	eax, DWORD PTR _rangeLength$[ebp]
$LN3@u_parseCod@3:
; Line 361
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@u_parseCod@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@u_parseCod@3:
	DD	1
	DD	$LN6@u_parseCod@3
$LN6@u_parseCod@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@u_parseCod@3
$LN5@u_parseCod@3:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
_u_parseCodePointRange ENDP
_TEXT	ENDS
PUBLIC	??_C@_03IJFOLNOP@?$CF2x?$AA@			; `string'
PUBLIC	_u_parseUTF8
EXTRN	_u_terminateChars_56:PROC
EXTRN	__imp__sscanf:PROC
EXTRN	_strlen:PROC
;	COMDAT ??_C@_03IJFOLNOP@?$CF2x?$AA@
CONST	SEGMENT
??_C@_03IJFOLNOP@?$CF2x?$AA@ DB '%2x', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _u_parseUTF8
_TEXT	SEGMENT
_value$ = -32						; size = 4
_i$ = -20						; size = 4
_read$ = -8						; size = 4
_source$ = 8						; size = 4
_sLen$ = 12						; size = 4
_dest$ = 16						; size = 4
_destCapacity$ = 20					; size = 4
_status$ = 24						; size = 4
_u_parseUTF8 PROC					; COMDAT
; Line 364
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 365
	mov	eax, DWORD PTR _source$[ebp]
	mov	DWORD PTR _read$[ebp], eax
; Line 366
	mov	DWORD PTR _i$[ebp], 0
; Line 367
	mov	DWORD PTR _value$[ebp], 0
; Line 368
	cmp	DWORD PTR _sLen$[ebp], -1
	jne	SHORT $LN3@u_parseUTF
; Line 369
	mov	eax, DWORD PTR _source$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _sLen$[ebp], eax
$LN3@u_parseUTF:
; Line 372
	mov	eax, DWORD PTR _source$[ebp]
	add	eax, DWORD PTR _sLen$[ebp]
	cmp	DWORD PTR _read$[ebp], eax
	jae	SHORT $LN2@u_parseUTF
; Line 373
	mov	esi, esp
	lea	eax, DWORD PTR _value$[ebp]
	push	eax
	push	OFFSET ??_C@_03IJFOLNOP@?$CF2x?$AA@
	mov	ecx, DWORD PTR _read$[ebp]
	push	ecx
	call	DWORD PTR __imp__sscanf
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 374
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _destCapacity$[ebp]
	jge	SHORT $LN1@u_parseUTF
; Line 375
	mov	eax, DWORD PTR _dest$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR _value$[ebp]
	mov	BYTE PTR [eax], cl
$LN1@u_parseUTF:
; Line 377
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 378
	mov	eax, DWORD PTR _read$[ebp]
	add	eax, 2
	mov	DWORD PTR _read$[ebp], eax
; Line 379
	jmp	SHORT $LN3@u_parseUTF
$LN2@u_parseUTF:
; Line 380
	mov	eax, DWORD PTR _status$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _destCapacity$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	call	_u_terminateChars_56
	add	esp, 16					; 00000010H
; Line 381
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@u_parseUTF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@u_parseUTF:
	DD	1
	DD	$LN8@u_parseUTF
$LN8@u_parseUTF:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@u_parseUTF
$LN7@u_parseUTF:
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
_u_parseUTF8 ENDP
_TEXT	ENDS
END

??0Gripper@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+50h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+54h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+58h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+5Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+60h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+64h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+7Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+80h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+84h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+88h],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0B8h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0BCh],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+0C0h],', '0']
push ['10h']
push ['0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '6Ch']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
push ['10h']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8Ch']
push ['eax']
call ['_memset']
add ['esp,', '0Ch']
push ['1Ch']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '9Ch']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['44h']
push ['0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '0Ch']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?startGrip@Gripper@@QAEXPAVDockingCont@@PAVDockingManager@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '44h']
mov ['[ebp+lpParam],', 'ecx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+50h],', 'ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+54h],', 'eax']
mov ['ecx,', '[ebp+lpParam]']
add ['ecx,', '0Ch']
push ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['ecx,', '[edx+50h]']
call ['?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z']
cmp ['ds:?_isRegistered@Gripper@@0HA,', '0']
jnz ['loc_3E4']
mov ['[ebp+WndClass.style],', '0']
mov ['[ebp+WndClass.lpfnWndProc],', 'offset', '?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z']
mov ['[ebp+WndClass.cbClsExtra],', '0']
mov ['[ebp+WndClass.cbWndExtra],', '0']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax]']
mov ['[ebp+WndClass.hInstance],', 'ecx']
mov ['[ebp+WndClass.hIcon],', '0']
push ['7F00h']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LoadCursorW@8']
mov ['[ebp+WndClass.hCursor],', 'eax']
mov ['[ebp+WndClass.hbrBackground],', '0']
mov ['[ebp+WndClass.lpszMenuName],', '0']
mov ['[ebp+WndClass.lpszClassName],', 'offset', '$SG125965']
lea ['edx,', '[ebp+WndClass]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegisterClassW@4']
movzx ['eax,', 'ax']
test ['eax,', 'eax']
jnz ['short', 'loc_3DA']
push ['offset', '$SG125969']
lea ['ecx,', '[ebp+var_10]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['ds:?_isRegistered@Gripper@@0HA,', '1']
mov ['edx,', '[ebp+lpParam]']
push ['edx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax]']
push ['ecx']
push ['0']
push ['0']
push ['80000000h']
push ['80000000h']
push ['80000000h']
push ['80000000h']
push ['0']
push ['offset', '$SG125975']
push ['offset', '$SG125976']
push ['0']
call ['dword', 'ptr', 'ds:__imp__CreateWindowExW@48']
mov ['edx,', '[ebp+lpParam]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+8]']
mov ['ds:_hWndServer,', 'ecx']
mov ['edx,', '[ebp+lpParam]']
cmp ['dword', 'ptr', '[edx+8],', '0']
jnz ['short', 'loc_450']
push ['offset', '$SG125980']
lea ['ecx,', '[ebp+var_1C]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?create@Gripper@@IAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '22Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_218],', 'ecx']
mov ['[ebp+Rect.left],', '0']
xor ['eax,', 'eax']
mov ['[ebp+Rect.top],', 'eax']
mov ['[ebp+Rect.right],', 'eax']
mov ['[ebp+Rect.bottom],', 'eax']
mov ['[ebp+Point.x],', '0']
xor ['ecx,', 'ecx']
mov ['[ebp+Point.y],', 'ecx']
push ['3']
push ['0']
push ['0']
push ['0']
push ['0']
push ['0FFFFFFFFh']
mov ['edx,', '[ebp+var_218]']
mov ['ecx,', '[edx+54h]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowPos@28']
mov ['eax,', '[ebp+var_218]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetCapture@4']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ']
mov ['[ebp+var_21C],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_218]']
mov ['eax,', '[edx]']
push ['eax']
push ['offset', '?hookProcMouse@@YGJHIJ@Z']
push ['0Eh']
call ['dword', 'ptr', 'ds:__imp__SetWindowsHookExW@16']
mov ['ds:_hookMouse,', 'eax']
cmp ['ds:_hookMouse,', '0']
jnz ['short', 'loc_554']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
mov ['[ebp+var_22C],', 'eax']
mov ['ecx,', '[ebp+var_22C]']
push ['ecx']
push ['offset', '$SG126036']
lea ['edx,', '[ebp+Text]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
push ['10h']
push ['offset', '$SG126037']
lea ['eax,', '[ebp+Text]']
push ['eax']
push ['0']
call ['dword', 'ptr', 'ds:__imp__MessageBoxW@16']
cmp ['[ebp+var_21C],', '0']
jz ['short', 'loc_5CA']
cmp ['[ebp+var_21C],', '0Ah']
jge ['short', 'loc_5CA']
push ['0']
mov ['ecx,', '[ebp+var_218]']
mov ['edx,', '[ecx]']
push ['edx']
push ['offset', '?hookProcKeyboard@@YGJHIJ@Z']
push ['0Dh']
call ['dword', 'ptr', 'ds:__imp__SetWindowsHookExW@16']
mov ['ds:_hookKeyboard,', 'eax']
cmp ['ds:_hookKeyboard,', '0']
jnz ['short', 'loc_5CA']
call ['dword', 'ptr', 'ds:__imp__GetLastError@0']
mov ['[ebp+var_228],', 'eax']
mov ['eax,', '[ebp+var_228]']
push ['eax']
push ['offset', '$SG126075']
lea ['ecx,', '[ebp+var_104]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
push ['10h']
push ['offset', '$SG126076']
lea ['edx,', '[ebp+var_104]']
push ['edx']
push ['0']
call ['dword', 'ptr', 'ds:__imp__MessageBoxW@16']
lea ['eax,', '[ebp+Point]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
mov ['ecx,', '[ebp+var_218]']
call ['?initTabInformation@Gripper@@IAEXXZ']
mov ['ecx,', '[ebp+var_218]']
mov ['ecx,', '[ecx+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['edx,', 'al']
cmp ['edx,', '1']
jnz ['short', 'loc_616']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_218]']
mov ['ecx,', '[ecx+54h]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
jmp ['short', 'loc_652']
lea ['edx,', '[ebp+Rect]']
push ['edx']
mov ['eax,', '[ebp+var_218]']
mov ['ecx,', '[eax+54h]']
mov ['edx,', '[ebp+var_218]']
mov ['eax,', '[ecx]']
mov ['ecx,', '[edx+54h]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
lea ['eax,', '[ebp+Point]']
push ['eax']
mov ['ecx,', '[ebp+var_218]']
mov ['ecx,', '[ecx+54h]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ScreenToClient@8']
mov ['edx,', '[ebp+Point.x]']
sub ['edx,', '[ebp+Rect.left]']
mov ['eax,', '[ebp+var_218]']
mov ['[eax+58h],', 'edx']
mov ['ecx,', '[ebp+Point.y]']
sub ['ecx,', '[ebp+Rect.top]']
mov ['edx,', '[ebp+var_218]']
mov ['[edx+5Ch],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?staticWinProc@Gripper@@KGJPAUHWND__@@IIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+dwNewLong],', '0']
mov ['eax,', '[ebp+Msg]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '81h']
jz ['short', 'loc_6B2']
jmp ['short', 'loc_6DA']
mov ['ecx,', '[ebp+lParam]']
mov ['edx,', '[ecx]']
mov ['[ebp+dwNewLong],', 'edx']
mov ['eax,', '[ebp+dwNewLong]']
mov ['ecx,', '[ebp+hWnd]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+dwNewLong]']
push ['edx']
push ['0FFFFFFEBh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['eax,', '1']
jmp ['short', 'loc_71B']
push ['0FFFFFFEBh']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
mov ['[ebp+dwNewLong],', 'eax']
cmp ['[ebp+dwNewLong],', '0']
jnz ['short', 'loc_707']
mov ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', '[ebp+Msg]']
push ['ecx']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DefWindowProcW@16']
jmp ['short', 'loc_71B']
mov ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
mov ['edx,', '[ebp+Msg]']
push ['edx']
mov ['ecx,', '[ebp+dwNewLong]']
call ['?runProc@Gripper@@IAEJIIJ@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?runProc@Gripper@@IAEJIIJ@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Msg]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0A2h']
ja ['short', 'loc_763']
cmp ['[ebp+var_8],', '0A2h']
jz ['short', 'loc_7A2']
cmp ['[ebp+var_8],', '1']
jz ['short', 'loc_783']
cmp ['[ebp+var_8],', '2']
jz ['loc_862']
cmp ['[ebp+var_8],', '0A0h']
jz ['short', 'loc_790']
jmp ['loc_8BE']
cmp ['[ebp+var_8],', '200h']
jz ['short', 'loc_790']
cmp ['[ebp+var_8],', '202h']
jz ['short', 'loc_7A2']
cmp ['[ebp+var_8],', '500Ch']
jz ['short', 'loc_7F8']
jmp ['loc_8BE']
mov ['ecx,', '[ebp+var_4]']
call ['?create@Gripper@@IAEXXZ']
jmp ['loc_8BE']
mov ['ecx,', '[ebp+var_4]']
call ['?onMove@Gripper@@IAEXXZ']
mov ['eax,', '1']
jmp ['loc_8D7']
cmp ['ds:_hookMouse,', '0']
jz ['short', 'loc_7D9']
mov ['ecx,', 'ds:_hookMouse']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__UnhookWindowsHookEx@4']
mov ['edx,', 'ds:_hookKeyboard']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__UnhookWindowsHookEx@4']
mov ['ds:_hookMouse,', '0']
mov ['ds:_hookKeyboard,', '0']
mov ['ecx,', '[ebp+var_4]']
call ['?onButtonUp@Gripper@@IAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DestroyWindow@4']
mov ['eax,', '1']
jmp ['loc_8D7']
mov ['[ebp+Point.x],', '0']
mov ['[ebp+Point.y],', '0']
mov ['[ebp+var_24.x],', '0']
mov ['[ebp+var_24.y],', '0']
lea ['edx,', '[ebp+Point]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z']
mov ['edx,', 'ds:_hookMouse']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__UnhookWindowsHookEx@4']
mov ['eax,', 'ds:_hookKeyboard']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__UnhookWindowsHookEx@4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DestroyWindow@4']
xor ['eax,', 'eax']
jmp ['short', 'loc_8D7']
push ['0']
push ['0']
push ['0']
push ['0']
push ['4']
call ['dword', 'ptr', 'ds:__imp__mouse_event@20']
push ['3']
push ['0']
push ['0']
push ['0']
push ['0']
push ['0FFFFFFFEh']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetWindowPos@28']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+54h]']
call ['?focusClient@DockingCont@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_8B7']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['??_GGripper@@QAEPAXI@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_8BE']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', '[ebp+Msg]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DefWindowProcW@16']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?onMove@Gripper@@IAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+Point.x],', '0']
mov ['[ebp+Point.y],', '0']
mov ['[ebp+var_14.x],', '0']
mov ['[ebp+var_14.y],', '0']
lea ['eax,', '[ebp+Point]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+Point]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+84h],', '1']
jnz ['short', 'loc_93F']
mov ['ecx,', '[ebp+Point.y]']
push ['ecx']
mov ['edx,', '[ebp+Point.x]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z']
lea ['eax,', '[ebp+Point]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?onButtonUp@Gripper@@IAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '40h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+Point.x],', '0']
mov ['[ebp+Point.y],', '0']
mov ['[ebp+var_40.x],', '0']
mov ['[ebp+var_40.y],', '0']
mov ['[ebp+X],', '0']
xor ['eax,', 'eax']
mov ['[ebp+Y],', 'eax']
mov ['[ebp+nWidth],', 'eax']
mov ['[ebp+nHeight],', 'eax']
mov ['[ebp+var_24.left],', '0']
xor ['ecx,', 'ecx']
mov ['[ebp+var_24.top],', 'ecx']
mov ['[ebp+var_24.right],', 'ecx']
mov ['[ebp+var_24.bottom],', 'ecx']
mov ['[ebp+var_30],', '0']
lea ['edx,', '[ebp+Point]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
lea ['eax,', '[ebp+var_40]']
push ['eax']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+68h],', '0']
jnz ['short', 'loc_9D6']
jmp ['loc_C0C']
push ['0']
mov ['ecx,', '[ebp+var_28]']
call ['?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z']
mov ['eax,', '[ebp+Point.y]']
push ['eax']
mov ['ecx,', '[ebp+Point.x]']
push ['ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['short', 'loc_A0E']
push ['0']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
call ['?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z']
mov ['[ebp+var_2C],', 'eax']
cmp ['[ebp+var_2C],', '0']
jnz ['loc_BA9']
mov ['ecx,', '[ebp+var_28]']
mov ['ecx,', '[ecx+54h]']
call ['?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ']
add ['eax,', '18h']
mov ['edx,', '[eax]']
mov ['[ebp+X],', 'edx']
mov ['ecx,', '[eax+4]']
mov ['[ebp+Y],', 'ecx']
mov ['edx,', '[eax+8]']
mov ['[ebp+nWidth],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ebp+nHeight],', 'eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ecx+54h]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
lea ['ecx,', '[ebp+X]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
call ['?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
call ['?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ebp+Point.x]']
sub ['edx,', '[ecx+58h]']
mov ['[ebp+X],', 'edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+Point.y]']
sub ['ecx,', '[eax+5Ch]']
mov ['[ebp+Y],', 'ecx']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
sub ['esp,', '10h']
mov ['ecx,', 'esp']
mov ['edx,', '[ebp+var_24.left]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_24.top]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_24.right]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_24.bottom]']
mov ['[ecx+0Ch],', 'eax']
lea ['ecx,', '[ebp+X]']
push ['ecx']
mov ['ecx,', '[ebp+var_28]']
call ['?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z']
mov ['edx,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[edx+84h],', '1']
jnz ['short', 'loc_B32']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_B10']
mov ['edx,', '[ebp+var_28]']
mov ['ecx,', '[edx+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B30']
push ['0']
push ['0']
push ['1304h']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+80h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jle ['short', 'loc_B30']
lea ['eax,', '[ebp+X]']
push ['eax']
push ['1']
push ['5003h']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+50h]']
call ['?toggleActiveTb@DockingManager@@QAEPAVDockingCont@@PAV2@IHPAUtagRECT@@@Z']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_B62']
mov ['ecx,', '[ebp+var_28]']
mov ['ecx,', '[ecx+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_B62']
lea ['eax,', '[ebp+X]']
push ['eax']
push ['5003h']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+50h]']
call ['?toggleVisTb@DockingManager@@QAEPAVDockingCont@@PAV2@IPAUtagRECT@@@Z']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '0']
jnz ['short', 'loc_B71']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+54h]']
mov ['[ebp+var_30],', 'edx']
push ['1']
mov ['eax,', '[ebp+nHeight]']
push ['eax']
mov ['ecx,', '[ebp+nWidth]']
push ['ecx']
mov ['edx,', '[ebp+Y]']
push ['edx']
mov ['eax,', '[ebp+X]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
push ['0']
push ['5']
mov ['ecx,', '[ebp+var_30]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_C0C']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+54h]']
cmp ['edx,', '[ebp+var_2C]']
jz ['short', 'loc_C0C']
mov ['eax,', '[ebp+var_28]']
cmp ['dword', 'ptr', '[eax+84h],', '1']
jnz ['short', 'loc_BF6']
push ['0']
push ['0']
push ['1304h']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+80h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jz ['short', 'loc_BF6']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+54h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+50h]']
call ['?toggleActiveTb@DockingManager@@QAEXPAVDockingCont@@0@Z']
jmp ['short', 'loc_C0C']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+54h]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['ecx,', '[ecx+50h]']
call ['?toggleVisTb@DockingManager@@QAEXPAVDockingCont@@0@Z']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '5Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+50h]']
call ['?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_68]']
call ['??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_48],', '0']
mov ['[ebp+hWnd],', '0']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+7Ch]']
mov ['[ebp+var_3C],', 'edx']
mov ['[ebp+wParam],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+88h]']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_44],', '0']
lea ['ecx,', '[ebp+var_68]']
call ['?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_CB1']
mov ['edx,', '[ebp+var_44]']
add ['edx,', '1']
mov ['[ebp+var_44],', 'edx']
mov ['eax,', '[ebp+var_44]']
cmp ['eax,', '[ebp+var_54]']
jnb ['loc_E72']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
lea ['ecx,', '[ebp+var_68]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
call ['?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ']
mov ['[ebp+hWnd],', 'eax']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
cmp ['eax,', '1']
jnz ['loc_E6D']
mov ['[ebp+Rect.left],', '0']
xor ['eax,', 'eax']
mov ['[ebp+Rect.top],', 'eax']
mov ['[ebp+Rect.right],', 'eax']
mov ['[ebp+Rect.bottom],', 'eax']
lea ['ecx,', '[ebp+Rect]']
push ['ecx']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
mov ['eax,', '[ebp+pt.y]']
push ['eax']
mov ['ecx,', '[ebp+pt.x]']
push ['ecx']
lea ['edx,', '[ebp+Rect]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__PtInRect@12']
cmp ['eax,', '1']
jnz ['loc_E6D']
mov ['[ebp+Point.x],', '0']
xor ['eax,', 'eax']
mov ['[ebp+Point.y],', 'eax']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+7Ch],', '0']
jnz ['short', 'loc_D56']
mov ['ecx,', '[ebp+var_30]']
call ['?initTabInformation@Gripper@@IAEXXZ']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+7Ch]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+88h]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+pt.x]']
mov ['[ebp+Point.x],', 'eax']
mov ['ecx,', '[ebp+pt.y]']
mov ['[ebp+Point.y],', 'ecx']
lea ['edx,', '[ebp+Point]']
push ['edx']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ScreenToClient@8']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
push ['0']
push ['130Dh']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+wParam],', 'eax']
cmp ['[ebp+wParam],', '0FFFFFFFFh']
jz ['short', 'loc_DF1']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['130Ah']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[edx+94h]']
sub ['ecx,', '[eax+8Ch]']
add ['ecx,', '[ebp+Rect.left]']
cmp ['ecx,', '[ebp+pt.x]']
jge ['short', 'loc_DE3']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
jmp ['loc_FF4']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+wParam]']
mov ['[edx+88h],', 'eax']
jmp ['short', 'loc_E5B']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+7Ch],', '0']
jz ['short', 'loc_E5B']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+hWnd]']
cmp ['eax,', '[edx+7Ch]']
jnz ['short', 'loc_E11']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+88h],', '0FFFFFFFFh']
jnz ['short', 'loc_E5B']
push ['0']
push ['0']
push ['1304h']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
sub ['eax,', '1']
mov ['[ebp+var_4C],', 'eax']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
push ['130Ah']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '[ebp+Rect.left]']
add ['eax,', '[ebp+Rect.right]']
cmp ['eax,', '[ebp+pt.x]']
jge ['short', 'loc_E5B']
mov ['ecx,', '[ebp+var_4C]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_30]']
mov ['[edx+88h],', 'ecx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+hWnd]']
mov ['[eax+7Ch],', 'ecx']
mov ['[ebp+var_48],', '1']
jmp ['short', 'loc_E72']
jmp ['loc_CA8']
cmp ['[ebp+var_48],', '1']
jnz ['short', 'loc_EEF']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_38]']
cmp ['eax,', '[edx+88h]']
jz ['short', 'loc_EEF']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ecx+7Ch]']
cmp ['eax,', '[edx+80h]']
jnz ['short', 'loc_ECA']
push ['0']
push ['0']
push ['130Bh']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+7Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_58],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_58]']
push ['eax']
push ['1308h']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+7Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_EED']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+7Ch]']
cmp ['ecx,', '[ebp+var_3C]']
jnz ['short', 'loc_EED']
push ['0']
mov ['edx,', '[ebp+var_38]']
push ['edx']
push ['1308h']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+7Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_F25']
cmp ['[ebp+var_48],', '0']
jnz ['short', 'loc_F25']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+var_3C]']
cmp ['eax,', '[edx+80h]']
jz ['short', 'loc_F18']
push ['0']
mov ['ecx,', '[ebp+var_38]']
push ['ecx']
push ['1308h']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '[ebp+var_30]']
mov ['dword', 'ptr', '[eax+88h],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+7Ch],', '0']
jz ['short', 'loc_F9D']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+7Ch]']
cmp ['eax,', '[ebp+var_3C]']
jnz ['short', 'loc_F47']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+88h]']
cmp ['edx,', '[ebp+var_38]']
jz ['short', 'loc_F9D']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[eax+7Ch]']
cmp ['edx,', '[ecx+80h]']
jnz ['short', 'loc_F61']
mov ['[ebp+var_50],', '1']
jmp ['short', 'loc_F68']
mov ['[ebp+var_50],', '0']
mov ['eax,', '[ebp+var_50]']
or ['eax,', '8']
mov ['ecx,', '[ebp+var_30]']
mov ['[ecx+9Ch],', 'eax']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '9Ch']
push ['edx']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+88h]']
push ['ecx']
push ['133Eh']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+7Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ecx+7Ch]']
cmp ['eax,', '[edx+80h]']
jnz ['short', 'loc_FD8']
mov ['ecx,', '[ebp+var_30]']
cmp ['dword', 'ptr', '[ecx+88h],', '0FFFFFFFFh']
jz ['short', 'loc_FD8']
push ['0']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[edx+88h]']
push ['eax']
push ['130Ch']
mov ['ecx,', '[ebp+var_30]']
mov ['edx,', '[ecx+7Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[eax+4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__UpdateWindow@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_68]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?drawRectangle@Gripper@@IAEXPBUtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '60h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['[ebp+var_5C],', '0']
mov ['[ebp+var_44],', '0']
mov ['[ebp+x1],', '0']
xor ['eax,', 'eax']
mov ['[ebp+y1],', 'eax']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+cy],', 'eax']
mov ['[ebp+var_14.left],', '0']
xor ['ecx,', 'ecx']
mov ['[ebp+var_14.top],', 'ecx']
mov ['[ebp+var_14.right],', 'ecx']
mov ['[ebp+var_14.bottom],', 'ecx']
mov ['edx,', '[ebp+var_38]']
add ['edx,', '6Ch']
mov ['eax,', '[edx]']
mov ['[ebp+x],', 'eax']
mov ['ecx,', '[edx+4]']
mov ['[ebp+y],', 'ecx']
mov ['eax,', '[edx+8]']
mov ['[ebp+w],', 'eax']
mov ['ecx,', '[edx+0Ch]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[edx+0B8h],', '0']
jnz ['short', 'loc_10C2']
call ['dword', 'ptr', 'ds:__imp__GetDesktopWindow@0']
mov ['[ebp+hWndLock],', 'eax']
mov ['eax,', '[ebp+hWndLock]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LockWindowUpdate@4']
test ['eax,', 'eax']
jz ['short', 'loc_10A2']
mov ['[ebp+flags],', '403h']
jmp ['short', 'loc_10A9']
mov ['[ebp+flags],', '3']
mov ['ecx,', '[ebp+flags]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+hWndLock]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDCEx@12']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+0B8h],', 'eax']
mov ['edx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[edx+0BCh],', '0']
jnz ['short', 'loc_10EA']
push ['offset', '_DotPattern']
push ['1']
push ['1']
push ['8']
push ['8']
call ['dword', 'ptr', 'ds:__imp__CreateBitmap@20']
mov ['ecx,', '[ebp+var_38]']
mov ['[ecx+0BCh],', 'eax']
mov ['edx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[edx+0C0h],', '0']
jnz ['short', 'loc_110F']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+0BCh]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CreatePatternBrush@4']
mov ['edx,', '[ebp+var_38]']
mov ['[edx+0C0h],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['loc_1238']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
call ['?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '6Ch']
mov ['edx,', '[ebp+var_14.left]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_14.top]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_14.right]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_14.bottom]']
mov ['[ecx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[ecx+68h],', '0']
jz ['loc_121E']
mov ['edx,', '[ebp+x]']
cmp ['edx,', '[ebp+var_14.left]']
jnz ['short', 'loc_117E']
mov ['eax,', '[ebp+w]']
cmp ['eax,', '[ebp+var_14.right]']
jnz ['short', 'loc_117E']
mov ['ecx,', '[ebp+y]']
cmp ['ecx,', '[ebp+var_14.top]']
jnz ['short', 'loc_117E']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_14.bottom]']
jnz ['short', 'loc_117E']
jmp ['loc_1474']
mov ['eax,', '[ebp+x]']
cmp ['eax,', '[ebp+var_14.left]']
jge ['short', 'loc_118E']
mov ['ecx,', '[ebp+x]']
mov ['[ebp+var_58],', 'ecx']
jmp ['short', 'loc_1194']
mov ['edx,', '[ebp+var_14.left]']
mov ['[ebp+var_58],', 'edx']
mov ['eax,', '[ebp+var_58]']
mov ['[ebp+x1],', 'eax']
mov ['ecx,', '[ebp+y]']
cmp ['ecx,', '[ebp+var_14.top]']
jge ['short', 'loc_11AA']
mov ['edx,', '[ebp+y]']
mov ['[ebp+var_60],', 'edx']
jmp ['short', 'loc_11B0']
mov ['eax,', '[ebp+var_14.top]']
mov ['[ebp+var_60],', 'eax']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+y1],', 'ecx']
mov ['edx,', '[ebp+x]']
add ['edx,', '[ebp+w]']
mov ['eax,', '[ebp+var_14.left]']
add ['eax,', '[ebp+var_14.right]']
cmp ['edx,', 'eax']
jle ['short', 'loc_11D1']
mov ['ecx,', '[ebp+x]']
add ['ecx,', '[ebp+w]']
mov ['[ebp+var_40],', 'ecx']
jmp ['short', 'loc_11DA']
mov ['edx,', '[ebp+var_14.left]']
add ['edx,', '[ebp+var_14.right]']
mov ['[ebp+var_40],', 'edx']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+y]']
add ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+var_14.top]']
add ['edx,', '[ebp+var_14.bottom]']
cmp ['ecx,', 'edx']
jle ['short', 'loc_11FB']
mov ['eax,', '[ebp+y]']
add ['eax,', '[ebp+var_18]']
mov ['[ebp+var_4C],', 'eax']
jmp ['short', 'loc_1204']
mov ['ecx,', '[ebp+var_14.top]']
add ['ecx,', '[ebp+var_14.bottom]']
mov ['[ebp+var_4C],', 'ecx']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+cy],', 'edx']
mov ['eax,', '[ebp+var_2C]']
sub ['eax,', '[ebp+x1]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+cy]']
sub ['ecx,', '[ebp+y1]']
mov ['[ebp+cy],', 'ecx']
jmp ['short', 'loc_1236']
mov ['edx,', '[ebp+var_14.left]']
mov ['[ebp+x1],', 'edx']
mov ['eax,', '[ebp+var_14.top]']
mov ['[ebp+y1],', 'eax']
mov ['ecx,', '[ebp+var_14.right]']
mov ['[ebp+var_2C],', 'ecx']
mov ['edx,', '[ebp+var_14.bottom]']
mov ['[ebp+cy],', 'edx']
jmp ['short', 'loc_1250']
mov ['eax,', '[ebp+x]']
mov ['[ebp+x1],', 'eax']
mov ['ecx,', '[ebp+y]']
mov ['[ebp+y1],', 'ecx']
mov ['edx,', '[ebp+w]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+cy],', 'eax']
mov ['ecx,', '[ebp+x]']
sub ['ecx,', '[ebp+x1]']
mov ['[ebp+x],', 'ecx']
mov ['edx,', '[ebp+y]']
sub ['edx,', '[ebp+y1]']
mov ['[ebp+y],', 'edx']
mov ['eax,', '[ebp+var_14.left]']
sub ['eax,', '[ebp+x1]']
mov ['[ebp+var_14.left],', 'eax']
mov ['ecx,', '[ebp+var_14.top]']
sub ['ecx,', '[ebp+y1]']
mov ['[ebp+var_14.top],', 'ecx']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+0B8h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CreateCompatibleDC@4']
mov ['[ebp+hdc],', 'eax']
mov ['ecx,', '[ebp+cy]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+0B8h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CreateCompatibleBitmap@12']
mov ['[ebp+h],', 'eax']
mov ['edx,', '[ebp+h]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
mov ['[ebp+var_5C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+y1]']
and ['ecx,', '80000007h']
jns ['short', 'loc_12C5']
dec ['ecx']
or ['ecx,', '0FFFFFFF8h']
inc ['ecx']
push ['ecx']
mov ['edx,', '[ebp+x1]']
and ['edx,', '80000007h']
jns ['short', 'loc_12D6']
dec ['edx']
or ['edx,', '0FFFFFFF8h']
inc ['edx']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetBrushOrgEx@16']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+0C0h]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
mov ['[ebp+var_44],', 'eax']
push ['0CC0020h']
mov ['ecx,', '[ebp+y1]']
push ['ecx']
mov ['edx,', '[ebp+x1]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[eax+0B8h]']
push ['ecx']
mov ['edx,', '[ebp+cy]']
push ['edx']
mov ['eax,', '[ebp+var_2C]']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__BitBlt@36']
mov ['edx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[edx+68h],', '0']
jz ['short', 'loc_1378']
push ['5A0049h']
mov ['eax,', '[ebp+var_18]']
push ['eax']
mov ['ecx,', '[ebp+w]']
push ['ecx']
mov ['edx,', '[ebp+y]']
push ['edx']
mov ['eax,', '[ebp+x]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__PatBlt@24']
push ['5A0049h']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '6']
push ['edx']
mov ['eax,', '[ebp+w]']
sub ['eax,', '6']
push ['eax']
mov ['ecx,', '[ebp+y]']
add ['ecx,', '3']
push ['ecx']
mov ['edx,', '[ebp+x]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__PatBlt@24']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_13C8']
push ['5A0049h']
mov ['ecx,', '[ebp+var_14.bottom]']
push ['ecx']
mov ['edx,', '[ebp+var_14.right]']
push ['edx']
mov ['eax,', '[ebp+var_14.top]']
push ['eax']
mov ['ecx,', '[ebp+var_14.left]']
push ['ecx']
mov ['edx,', '[ebp+hdc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__PatBlt@24']
push ['5A0049h']
mov ['eax,', '[ebp+var_14.bottom]']
sub ['eax,', '6']
push ['eax']
mov ['ecx,', '[ebp+var_14.right]']
sub ['ecx,', '6']
push ['ecx']
mov ['edx,', '[ebp+var_14.top]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_14.left]']
add ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__PatBlt@24']
push ['0CC0020h']
push ['0']
push ['0']
mov ['edx,', '[ebp+hdc]']
push ['edx']
mov ['eax,', '[ebp+cy]']
push ['eax']
mov ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+y1]']
push ['edx']
mov ['eax,', '[ebp+x1]']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
mov ['edx,', '[ecx+0B8h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__BitBlt@36']
mov ['eax,', '[ebp+var_5C]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
mov ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
mov ['ecx,', '[ebp+h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DeleteObject@4']
mov ['edx,', '[ebp+hdc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeleteDC@4']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_146A']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LockWindowUpdate@4']
mov ['eax,', '[ebp+var_38]']
mov ['dword', 'ptr', '[eax+68h],', '0']
mov ['ecx,', '[ebp+var_38]']
cmp ['dword', 'ptr', '[ecx+0B8h],', '0']
jz ['short', 'loc_1468']
mov ['edx,', '[ebp+var_38]']
mov ['eax,', '[edx+0B8h]']
push ['eax']
push ['0']
call ['dword', 'ptr', 'ds:__imp__ReleaseDC@8']
mov ['ecx,', '[ebp+var_38]']
mov ['dword', 'ptr', '[ecx+0B8h],', '0']
jmp ['short', 'loc_1474']
mov ['edx,', '[ebp+var_38]']
mov ['dword', 'ptr', '[edx+68h],', '1']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getMousePoints@Gripper@@IAEXPAUtagPOINT@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+60h]']
mov ['edx,', '[eax+64h]']
mov ['eax,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+60h],', 'edx']
mov ['[ecx+64h],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?getMovingRect@Gripper@@IAEXUtagPOINT@@PAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_14.left],', '0']
xor ['eax,', 'eax']
mov ['[ebp+var_14.top],', 'eax']
mov ['[ebp+var_14.right],', 'eax']
mov ['[ebp+var_14.bottom],', 'eax']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+pt.y]']
push ['ecx']
mov ['edx,', '[ebp+pt.x]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jz ['loc_15AE']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_1C]']
call ['?getHSelf@Window@@QBEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
mov ['ecx,', '[ebp+var_18]']
mov ['ecx,', '[ecx+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['edx,', 'al']
cmp ['edx,', '1']
jnz ['short', 'loc_154A']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+54h]']
call ['?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ']
add ['eax,', '18h']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14.left],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_14.top],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14.right],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_14.bottom],', 'edx']
jmp ['short', 'loc_1561']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+54h]']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[edx]']
mov ['ecx,', '[eax+54h]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
mov ['ecx,', '[ebp+lpRect]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z']
mov ['eax,', '[ebp+pt.y]']
push ['eax']
mov ['ecx,', '[ebp+pt.x]']
push ['ecx']
sub ['esp,', '10h']
mov ['edx,', 'esp']
mov ['eax,', '[ebp+var_14.left]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_14.top]']
mov ['[edx+4],', 'ecx']
mov ['eax,', '[ebp+var_14.right]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+var_14.bottom]']
mov ['[edx+0Ch],', 'ecx']
mov ['edx,', '[ebp+lpRect]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z']
jmp ['loc_16AB']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+pt.y]']
push ['ecx']
mov ['edx,', '[ebp+pt.x]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z']
mov ['[ebp+var_1C],', 'eax']
cmp ['[ebp+var_1C],', '0']
jnz ['loc_16AB']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+54h]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_160A']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+54h]']
call ['?getDataOfActiveTb@DockingCont@@QAEPAUtTbData@@XZ']
add ['eax,', '18h']
mov ['ecx,', '[ebp+lpRect]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
jmp ['short', 'loc_1621']
mov ['ecx,', '[ebp+lpRect]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ecx+54h]']
mov ['eax,', '[edx+20h]']
call ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+54h]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ecx+54h]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
mov ['ecx,', '[ebp+lpRect]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+pt.x]']
sub ['edx,', '[ecx+58h]']
mov ['eax,', '[ebp+lpRect]']
mov ['[eax],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+pt.y]']
sub ['edx,', '[ecx+5Ch]']
mov ['eax,', '[ebp+lpRect]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+pt.y]']
push ['ecx']
mov ['edx,', '[ebp+pt.x]']
push ['edx']
sub ['esp,', '10h']
mov ['eax,', 'esp']
mov ['ecx,', '[ebp+var_14.left]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_14.top]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_14.right]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_14.bottom]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '5Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+var_48]']
mov ['ecx,', '[eax+50h]']
call ['?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+Point.y]']
push ['ecx']
mov ['edx,', '[ebp+Point.x]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__WindowFromPoint@8']
mov ['[ebp+var_58],', 'eax']
mov ['[ebp+var_34],', '0']
lea ['ecx,', '[ebp+var_44]']
call ['?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_68],', 'eax']
jmp ['short', 'loc_1738']
mov ['eax,', '[ebp+var_34]']
add ['eax,', '1']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
cmp ['ecx,', '[ebp+var_68]']
jnb ['loc_18DB']
mov ['edx,', '[ebp+var_34]']
push ['edx']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
call ['?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ']
cmp ['[ebp+var_58],', 'eax']
jnz ['loc_184D']
mov ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
call ['?isFloating@DockingCont@@QAE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_1825']
mov ['[ebp+var_20],', '0']
xor ['edx,', 'edx']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4C],', 'ecx']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+var_4C]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4C]']
mov ['eax,', '[edx+20h]']
call ['eax']
mov ['ecx,', '[ebp+var_1C]']
cmp ['ecx,', '[ebp+Point.y]']
jge ['short', 'loc_1823']
mov ['edx,', '[ebp+var_1C]']
add ['edx,', '18h']
cmp ['[ebp+Point.y],', 'edx']
jge ['short', 'loc_1823']
mov ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[ebp+var_48]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+54h]']
jnz ['short', 'loc_17FB']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_60]']
jmp ['loc_18F4']
jmp ['short', 'loc_1823']
mov ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_50],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_18F4']
jmp ['short', 'loc_184D']
mov ['edx,', '[ebp+var_34]']
push ['edx']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_18F4']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
call ['?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
test ['eax,', 'eax']
jz ['short', 'loc_18D6']
mov ['[ebp+Rect.left],', '0']
xor ['edx,', 'edx']
mov ['[ebp+Rect.top],', 'edx']
mov ['[ebp+Rect.right],', 'edx']
mov ['[ebp+Rect.bottom],', 'edx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
call ['?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
lea ['ecx,', '[ebp+Rect]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__PtInRect@12']
test ['eax,', 'eax']
jz ['short', 'loc_18D6']
mov ['edx,', '[ebp+var_34]']
push ['edx']
lea ['ecx,', '[ebp+var_44]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_5C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_18F4']
jmp ['loc_172F']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '50h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_2C],', 'ecx']
mov ['[ebp+rc.left],', '0']
xor ['eax,', 'eax']
mov ['[ebp+rc.top],', 'eax']
mov ['[ebp+rc.right],', 'eax']
mov ['[ebp+rc.bottom],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['ecx,', '[ecx+50h]']
call ['?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
call ['??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_28],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_54],', 'eax']
jmp ['short', 'loc_1989']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_54]']
jnb ['loc_1A16']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
lea ['ecx,', '[ebp+var_4C]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_34]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1A11']
mov ['edx,', '[ebp+var_28]']
push ['edx']
lea ['ecx,', '[ebp+var_4C]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+rc]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_3C]']
mov ['edx,', '[eax+20h]']
call ['edx']
mov ['eax,', '[ebp+pt.y]']
push ['eax']
mov ['ecx,', '[ebp+pt.x]']
push ['ecx']
lea ['edx,', '[ebp+rc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__PtInRect@12']
cmp ['eax,', '1']
jnz ['short', 'loc_1A11']
mov ['[ebp+var_50],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_50]']
jmp ['loc_1BBE']
jmp ['loc_1980']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_1A28']
mov ['eax,', '[ebp+var_24]']
add ['eax,', '1']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '4']
jge ['loc_1BA5']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['ecx,', '[ebp+var_4C]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_38],', 'edx']
mov ['eax,', '[ebp+var_38]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_38]']
mov ['eax,', '[edx+2Ch]']
call ['eax']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_1BA0']
mov ['edx,', '[ebp+var_24]']
shl ['edx,', '4']
mov ['eax,', '[ebp+var_2C]']
lea ['ecx,', '[eax+edx+10h]']
mov ['edx,', '[ecx]']
mov ['[ebp+rc.left],', 'edx']
mov ['eax,', '[ecx+4]']
mov ['[ebp+rc.top],', 'eax']
mov ['edx,', '[ecx+8]']
mov ['[ebp+rc.right],', 'edx']
mov ['eax,', '[ecx+0Ch]']
mov ['[ebp+rc.bottom],', 'eax']
mov ['ecx,', '[ebp+rc.right]']
add ['ecx,', '[ebp+rc.left]']
mov ['[ebp+rc.right],', 'ecx']
mov ['edx,', '[ebp+rc.bottom]']
add ['edx,', '[ebp+rc.top]']
mov ['[ebp+rc.bottom],', 'edx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1AB1']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[ebp+rc.left]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+rc.top]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+rc.right]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+rc.bottom]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '3']
ja ['short', 'loc_1B15']
mov ['ecx,', '[ebp+var_30]']
jmp ['ds:$LN24[ecx*4]']
mov ['edx,', '[ebp+rc.left]']
add ['edx,', '14h']
mov ['[ebp+rc.right],', 'edx']
mov ['eax,', '[ebp+rc.left]']
sub ['eax,', '14h']
mov ['[ebp+rc.left],', 'eax']
jmp ['short', 'loc_1B15']
mov ['ecx,', '[ebp+rc.right]']
sub ['ecx,', '14h']
mov ['[ebp+rc.left],', 'ecx']
mov ['edx,', '[ebp+rc.right]']
add ['edx,', '14h']
mov ['[ebp+rc.right],', 'edx']
jmp ['short', 'loc_1B15']
mov ['eax,', '[ebp+rc.top]']
add ['eax,', '14h']
mov ['[ebp+rc.bottom],', 'eax']
mov ['ecx,', '[ebp+rc.top]']
sub ['ecx,', '14h']
mov ['[ebp+rc.top],', 'ecx']
jmp ['short', 'loc_1B15']
mov ['edx,', '[ebp+rc.bottom]']
sub ['edx,', '14h']
mov ['[ebp+rc.top],', 'edx']
mov ['eax,', '[ebp+rc.bottom]']
add ['eax,', '14h']
mov ['[ebp+rc.bottom],', 'eax']
lea ['ecx,', '[ebp+rc]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+pt.y]']
push ['ecx']
mov ['edx,', '[ebp+pt.x]']
push ['edx']
lea ['eax,', '[ebp+rc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__PtInRect@12']
cmp ['eax,', '1']
jnz ['short', 'loc_1BA0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_1B7B']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+var_2C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_8]']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'eax']
mov ['edx,', '[ebp+arg_8]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[edx+0Ch]']
sub ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[edx+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_4C]']
call ['??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z']
mov ['ecx,', '[eax]']
mov ['[ebp+var_5C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['short', 'loc_1BBE']
jmp ['loc_1A1F']
mov ['[ebp+var_58],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_58]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?initTabInformation@Gripper@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+54h]']
call ['?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+80h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+54h]']
call ['?startMovingFromTab@DockingCont@@QAEHXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+84h],', 'eax']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+84h],', '0']
jnz ['short', 'loc_1C69']
push ['0']
push ['0']
push ['1304h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+80h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_1C69']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+84h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+88h],', '0']
jmp ['short', 'loc_1C8B']
push ['0']
push ['0']
push ['130Bh']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+80h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+88h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+80h]']
mov ['[edx+7Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8Ch']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+88h]']
push ['ecx']
push ['130Ah']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+80h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+9Ch],', '9']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+0A8h],', 'offset', '?szText@?6??initTabInformation@Gripper@@IAEXXZ@4PA_WA']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0ACh],', '40h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '9Ch']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+88h]']
push ['eax']
push ['133Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+80h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?hookProcMouse@@YGJHIJ@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+code],', '0']
jl ['short', 'loc_1D98']
mov ['eax,', '[ebp+wParam]']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '200h']
ja ['short', 'loc_1D5A']
cmp ['[ebp+var_4],', '200h']
jz ['short', 'loc_1D65']
cmp ['[ebp+var_4],', '0A0h']
jz ['short', 'loc_1D65']
cmp ['[ebp+var_4],', '0A2h']
jz ['short', 'loc_1D7C']
jmp ['short', 'loc_1D98']
cmp ['[ebp+var_4],', '202h']
jz ['short', 'loc_1D7C']
jmp ['short', 'loc_1D98']
push ['0']
push ['0']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
mov ['edx,', 'ds:_hWndServer']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_1D98']
push ['0']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', 'ds:_hWndServer']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['short', 'loc_1DB1']
mov ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', '[ebp+code]']
push ['ecx']
mov ['edx,', 'ds:_hookMouse']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CallNextHookEx@16']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?hookProcKeyboard@@YGJHIJ@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+code],', '0']
jl ['short', 'loc_1DEC']
cmp ['[ebp+wParam],', '1Bh']
jnz ['short', 'loc_1DEC']
push ['0']
push ['0']
push ['500Ch']
mov ['eax,', 'ds:_hWndServer']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__PostMessageW@16']
xor ['eax,', 'eax']
jmp ['short', 'loc_1E05']
mov ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+wParam]']
push ['edx']
mov ['eax,', '[ebp+code]']
push ['eax']
mov ['ecx,', 'ds:_hookKeyboard']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__CallNextHookEx@16']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z$0 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?doTabReordering@Gripper@@IAEXUtagPOINT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z$0 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?contHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z$0 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-54h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?workHitTest@Gripper@@IAEPAVDockingCont@@UtagPOINT@@PAUtagRECT@@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1EA7']
jmp ['short', 'loc_1EC7']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_1EC2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1EC7']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1EE3']
jmp ['short', 'loc_1F09']
cmp ['[ebp+arg_0],', '3FFFFFFFh']
ja ['short', 'loc_1F04']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '2']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1F09']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1F23']
jmp ['short', 'loc_1F49']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_1F44']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1F49']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1F6E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1F8E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1FAE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_2000']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@PAVDockingCont@@@std@@YAXPBQAVDockingCont@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2000']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??$_Iter_cat@PBQAVDockingCont@@@std@@YA?AUrandom_access_iterator_tag@0@ABQBQAVDockingCont@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVDockingCont@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_D]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_D]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_28],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_2C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_30],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z']
add ['esp,', '20h']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$2 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z$3 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z$0 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Ptr_cat@PAVDockingCont@@PAV1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PBQAVDockingCont@@PAPAV2@@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_copy@QAVDockingCont@@PAV1@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['192h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PBQAVDockingCont@@@std@@YAXPBQAVDockingCont@@0PB_WI@Z']
add ['esp,', '10h']
push ['193h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@PAVDockingCont@@@std@@YAXPAPAVDockingCont@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
sar ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
lea ['eax,', '[eax+ecx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_1C]']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
call ['??$_Unchecked@PAPAVDockingCont@@@std@@YAPAPAVDockingCont@@PAPAV1@@Z']
add ['esp,', '4']
push ['eax']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_28],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_30],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Unchecked@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@YAPBQAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['[ebp+Src],', 'eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Uninit_copy@PBQAVDockingCont@@PAPAV1@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAPAPAVDockingCont@@PBQAV1@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
push ['edx']
lea ['eax,', '[ebp+arg_18]']
push ['eax']
call ['??$_Rechecked@PAPAVDockingCont@@PAPAV1@@std@@YAAAPAPAVDockingCont@@AAPAPAV1@PAPAV1@@Z']
add ['esp,', '8']
mov ['ecx,', '[eax]']
mov ['[ebp+var_24],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$2 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z$3 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@PAPAVDockingCont@@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@@std@@YAPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@0@0PAPAV1@AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2491']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2498']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2597']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_259E']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@$$QAU31@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
pop ['ebp']
retn
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@PAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
pop ['ebp']
retn
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@PAVDockingCont@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@PAVDockingCont@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '24h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
lea ['eax,', '[ebp+var_11]']
push ['eax']
lea ['ecx,', '[ebp+var_12]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['loc_2CE2']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+4]']
push ['ecx']
sub ['esp,', '0Ch']
mov ['edx,', 'esp']
mov ['[ebp+var_28],', 'esp']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_30],', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_34],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEPAPAVDockingCont@@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@1@0PAPAV2@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_24]']
mov ['[eax+8],', 'ecx']
jmp ['short', 'loc_2CD2']
endp
__catch$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN11           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0']
endp
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$2 proc near
mov ['ecx,', '[ebp-18h]']
jmp ['??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$3 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z$4 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iterator_base12@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0runtime_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Iterator_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@PAVDockingCont@@HPBQAV3@ABQAV3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1Gripper@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0B8h],', '0']
jz ['short', 'loc_3465']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LockWindowUpdate@4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0B8h]']
push ['edx']
push ['0']
call ['dword', 'ptr', 'ds:__imp__ReleaseDC@8']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0BCh],', '0']
jz ['short', 'loc_3481']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0BCh]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeleteObject@4']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0C0h],', '0']
jz ['short', 'loc_349D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0C0h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeleteObject@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iterator_base12@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??1_Iterator_base12@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1runtime_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1runtime_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1exception@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??1runtime_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1runtime_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_3756']
jmp ['short', 'loc_3798']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3770']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['short', 'loc_3798']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_37EA']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_37F1']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3844']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_3844']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_384B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QAEAAPAVDockingCont@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_38D4']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_3890']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_38B6']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_38B6']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1LC@HLAKEHED@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAD?$AAo?$AAc?$AAk?$AAi?$AAn?$AAg?$AAC?$AAo?$AAn?$AAt?$AA?5?$AA?$CK?$AA?0@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GGripper@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1Gripper@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_390B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3937']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3963']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_398F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_39BB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gruntime_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_39E7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?CalcRectToScreen@Gripper@@IAEXPAUHWND__@@PAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?ClientRectToScreenRect@@YAXPAUHWND__@@PAUtagRECT@@@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?DoCalcGripperRect@Gripper@@IAEXPAUtagRECT@@U2@UtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['ecx,', '[edx+8]']
cmp ['ecx,', '[ebp+arg_14.x]']
jge ['short', 'loc_3B32']
mov ['eax,', '[ebp+arg_14.x]']
sub ['eax,', '14h']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'eax']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+0Ch]']
cmp ['eax,', '[ebp+arg_14.y]']
jge ['short', 'loc_3B58']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[edx+0Ch]']
mov ['ecx,', '[ebp+arg_0]']
add ['eax,', '[ecx+4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
?ShrinkRcToSize@Gripper@@IAEXPAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_0]']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+0Ch]']
sub ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx+0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3BE8']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
jmp ['short', 'loc_3C3F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_3C3F']
push ['3']
lea ['ecx,', '[ebp+var_1C]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Buy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAE_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+4],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+0Ch],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3D3F']
xor ['al,', 'al']
jmp ['short', 'loc_3D93']
jmp ['short', 'loc_3D91']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_3D56']
mov ['ecx,', '[ebp+var_8]']
call ['?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ']
jmp ['short', 'loc_3D91']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+0Ch],', 'eax']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_3DE9']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3E3B']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_3E03']
jmp ['short', 'loc_3E3B']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_3E30']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3E3B']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3EBE']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_3EA8']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_3EED']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@YAXPAPAVDockingCont@@0AAU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Free_proxy@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_4096']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_40B6']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_4100']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_40F0']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_40F0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_40D7']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_40E0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_4100']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_4100']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_410F']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_4116']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_414D']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_414D']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_4153']
xor ['al,', 'al']
jmp ['short', 'loc_4155']
jmp ['short', 'loc_4155']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_4182']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_418B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_41BA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_41C3']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4257']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_4227']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_423C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_421A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_me@_Iterator_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_42FA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_42C7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_8]']
jz ['short', 'loc_42C7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_42A8']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_42E6']
push ['0C9h']
push ['offset', '??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_4313']
jmp ['short', 'loc_4386']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_4386']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_4365']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+4],', '0']
jz ['short', 'loc_441C']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Destroy@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IAEXPAPAVDockingCont@@0@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+0Ch]']
sub ['ecx,', '[eax+4]']
sar ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z']
mov ['edx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QBEPBQAVDockingCont@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEPAPAVDockingCont@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@PAVDockingCont@@@std@@QAEPAPAVDockingCont@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@PAVDockingCont@@@std@@YAPAPAVDockingCont@@IPAPAV1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_4542']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_455E']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4585']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_45C7']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_45C7']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_462F']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4662']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_469F']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_469C']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?begin@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_478E']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_47A5']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAEXPAPAVDockingCont@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@PAVDockingCont@@@std@@QAEXPAPAVDockingCont@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_4890']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_48A5']
jmp ['short', 'loc_48A5']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@PAPAVDockingCont@@PBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_1']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?end@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@PAVDockingCont@@@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_499F']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_499F']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_49A6']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_49FA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_4A2C']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_4A48']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_4A8E']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_4A8E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?getCaptionWnd@DockingCont@@QAEPAUHWND__@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+24h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4AC0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
jmp ['short', 'loc_4AC6']
jmp ['short', 'loc_4AC6']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getContainerInfo@DockingManager@@QAEAAV?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getDockInfo@DockingManager@@QAEXPAUtDockMgr@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
push ['edi']
mov ['[ebp+var_4],', 'ecx']
mov ['esi,', '[ebp+var_4]']
add ['esi,', '5Ch']
mov ['ecx,', '11h']
mov ['edi,', '[ebp+arg_0]']
rep ['movsd']
pop ['edi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getHSelf@Window@@QBEPAUHWND__@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getInstance@NppParameters@@SAPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:?_pSelf@NppParameters@@0PAV1@A']
pop ['ebp']
retn
endp
?getTabWnd@DockingCont@@QAEPAUHWND__@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+2Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getWinVersion@NppParameters@@QAE?AW4winVer@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+1CC1Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?isFloating@DockingCont@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+24h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_4B77']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_4B86']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '3FFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SAIABV?$allocator@PAVDockingCont@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@PAVDockingCont@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_4C2E']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_4C37']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_4CAC']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_4CB3']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_4D71']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_4D94']
jmp ['short', 'loc_4D94']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_4E28']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_4E2F']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_4EA6']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_4EBD']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@PAVDockingCont@@@std@@@std@@QAE@ABV?$allocator@PAVDockingCont@@@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@PAVDockingCont@@@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@PAVDockingCont@@@std@@@std@@SA?AV?$allocator@PAVDockingCont@@@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@PAVDockingCont@@@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@PAVDockingCont@@V?$allocator@PAVDockingCont@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '2']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?startMovingFromTab@DockingCont@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+74h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+74h],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp

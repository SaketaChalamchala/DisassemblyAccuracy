?create@URLCtrl@@QAEXPAUHWND__@@PA_WK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+dwNewLong],', 'ecx']
push ['0FFFFFFF0h']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
or ['eax,', '100h']
push ['eax']
push ['0FFFFFFF0h']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_156']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+dwNewLong]']
add ['ecx,', '10h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['eax,', '[ebp+dwNewLong]']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+40h],', 'ecx']
mov ['edx,', '[ebp+dwNewLong]']
mov ['dword', 'ptr', '[edx+44h],', '800080h']
push ['offset', '?URLCtrlProc@URLCtrl@@KGJPAUHWND__@@IIJ@Z']
push ['0FFFFFFFCh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['ecx,', '[ebp+dwNewLong]']
mov ['[ecx+3Ch],', 'eax']
mov ['edx,', '[ebp+dwNewLong]']
push ['edx']
push ['0FFFFFFEBh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['ecx,', '[ebp+dwNewLong]']
mov ['edx,', '[ebp+hWnd]']
mov ['[ecx+0Ch],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?create@URLCtrl@@QAEXPAUHWND__@@H0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+dwNewLong],', 'ecx']
push ['0FFFFFFF0h']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
or ['eax,', '100h']
push ['eax']
push ['0FFFFFFF0h']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['edx,', '[ebp+dwNewLong]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+dwNewLong]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+34h],', 'edx']
mov ['eax,', '[ebp+dwNewLong]']
mov ['dword', 'ptr', '[eax+40h],', '0FF0000h']
push ['offset', '?URLCtrlProc@URLCtrl@@KGJPAUHWND__@@IIJ@Z']
push ['0FFFFFFFCh']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['edx,', '[ebp+dwNewLong]']
mov ['[edx+3Ch],', 'eax']
mov ['eax,', '[ebp+dwNewLong]']
push ['eax']
push ['0FFFFFFEBh']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['edx,', '[ebp+dwNewLong]']
mov ['eax,', '[ebp+hWnd]']
mov ['[edx+0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?destroy@URLCtrl@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+2Ch],', '0']
jz ['short', 'loc_249']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DeleteObject@4']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+30h],', '0']
jz ['short', 'loc_25F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DestroyCursor@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?action@URLCtrl@@AAEXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '214h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_210],', 'ecx']
mov ['eax,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_2E0']
mov ['ecx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[ecx+34h],', '0']
jz ['short', 'loc_2AE']
mov ['edx,', '[ebp+var_210]']
mov ['eax,', '[edx+34h]']
mov ['[ebp+hWnd],', 'eax']
jmp ['short', 'loc_2BD']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+hWnd],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_210]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
push ['111h']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['loc_38E']
mov ['eax,', '[ebp+var_210]']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+44h]']
mov ['[eax+40h],', 'edx']
push ['0']
push ['0']
mov ['eax,', '[ebp+var_210]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InvalidateRect@12']
mov ['edx,', '[ebp+var_210]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__UpdateWindow@4']
push ['offset', '$SG94724']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '10h']
push ['ecx']
call ['??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_358']
push ['1']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '10h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['offset', '$SG94725']
push ['0']
call ['dword', 'ptr', 'ds:__imp__ShellExecuteW@24']
jmp ['short', 'loc_38E']
push ['104h']
lea ['eax,', '[ebp+String]']
push ['eax']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetWindowTextW@12']
push ['1']
push ['0']
push ['0']
lea ['eax,', '[ebp+String]']
push ['eax']
push ['offset', '$SG94728']
push ['0']
call ['dword', 'ptr', 'ds:__imp__ShellExecuteW@24']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?runProc@URLCtrl@@IAEJPAUHWND__@@IIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2D8h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_2BC],', 'ecx']
mov ['eax,', '[ebp+Msg]']
mov ['[ebp+var_2C0],', 'eax']
cmp ['[ebp+var_2C0],', '101h']
ja ['short', 'loc_40D']
cmp ['[ebp+var_2C0],', '101h']
jz ['loc_6B5']
mov ['ecx,', '[ebp+var_2C0]']
sub ['ecx,', '0Ch']
mov ['[ebp+var_2C0],', 'ecx']
cmp ['[ebp+var_2C0],', '0F4h']
ja ['$LN18']
mov ['edx,', '[ebp+var_2C0]']
movzx ['eax,', 'ds:$LN23[edx]']
jmp ['ds:$LN24[eax*4]']
cmp ['[ebp+var_2C0],', '200h']
jz ['loc_622']
cmp ['[ebp+var_2C0],', '201h']
jz ['loc_672']
cmp ['[ebp+var_2C0],', '202h']
jz ['loc_67E']
jmp ['$LN18']
jmp ['$LN18']
push ['0FFFFFFF0h']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
mov ['[ebp+var_2CC],', 'eax']
mov ['[ebp+format],', '20h']
mov ['edx,', '[ebp+var_2CC]']
and ['edx,', '1']
jz ['short', 'loc_47D']
mov ['eax,', '[ebp+format]']
or ['eax,', '1']
mov ['[ebp+format],', 'eax']
mov ['ecx,', '[ebp+var_2CC]']
and ['ecx,', '2']
jz ['short', 'loc_497']
mov ['edx,', '[ebp+format]']
or ['edx,', '2']
mov ['[ebp+format],', 'edx']
mov ['eax,', '[ebp+var_2CC]']
and ['eax,', '200h']
jz ['short', 'loc_4B3']
mov ['ecx,', '[ebp+format]']
or ['ecx,', '4']
mov ['[ebp+format],', 'ecx']
lea ['edx,', '[ebp+Rect]']
push ['edx']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
lea ['ecx,', '[ebp+Paint]']
push ['ecx']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__BeginPaint@8']
mov ['[ebp+hdc],', 'eax']
mov ['eax,', '[ebp+var_2BC]']
mov ['ecx,', '[eax+40h]']
push ['ecx']
mov ['edx,', '[ebp+hdc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetTextColor@8']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['?getCtrlBgColor@@YAKPAUHWND__@@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetBkColor@8']
mov ['edx,', '[ebp+var_2BC]']
cmp ['dword', 'ptr', '[edx+2Ch],', '0']
jnz ['short', 'loc_560']
push ['11h']
call ['dword', 'ptr', 'ds:__imp__GetStockObject@4']
mov ['[ebp+h],', 'eax']
lea ['eax,', '[ebp+pv]']
push ['eax']
push ['5Ch']
mov ['ecx,', '[ebp+h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetObjectW@12']
mov ['[ebp+var_263],', '1']
lea ['edx,', '[ebp+pv]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CreateFontIndirectW@4']
mov ['ecx,', '[ebp+var_2BC]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_2BC]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
mov ['[ebp+var_2D4],', 'eax']
push ['104h']
lea ['edx,', '[ebp+String]']
push ['edx']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetWindowTextW@12']
mov ['ecx,', '[ebp+format]']
push ['ecx']
lea ['edx,', '[ebp+Rect]']
push ['edx']
push ['0FFFFFFFFh']
lea ['eax,', '[ebp+String]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DrawTextW@20']
mov ['edx,', '[ebp+var_2D4]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SelectObject@8']
lea ['ecx,', '[ebp+Paint]']
push ['ecx']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__EndPaint@8']
xor ['eax,', 'eax']
jmp ['loc_707']
mov ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
mov ['edx,', '[ebp+Msg]']
push ['edx']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
mov ['ecx,', '[ebp+var_2BC]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__CallWindowProcW@20']
mov ['[ebp+var_2D8],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InvalidateRect@12']
mov ['eax,', '[ebp+var_2D8]']
jmp ['loc_707']
mov ['ecx,', '[ebp+var_2BC]']
cmp ['dword', 'ptr', '[ecx+30h],', '0']
jnz ['short', 'loc_658']
push ['offset', '_ANDMask']
push ['offset', '_XORMask']
push ['20h']
push ['20h']
push ['2']
push ['5']
push ['0']
call ['dword', 'ptr', 'ds:__imp__GetModuleHandleW@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CreateCursor@28']
mov ['edx,', '[ebp+var_2BC]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_2BC]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetCursor@4']
mov ['eax,', '1']
jmp ['loc_707']
mov ['edx,', '[ebp+var_2BC]']
mov ['byte', 'ptr', '[edx+48h],', '1']
jmp ['short', '$LN18']
mov ['eax,', '[ebp+var_2BC]']
movzx ['ecx,', 'byte', 'ptr', '[eax+48h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_6A1']
mov ['edx,', '[ebp+var_2BC]']
mov ['byte', 'ptr', '[edx+48h],', '0']
mov ['ecx,', '[ebp+var_2BC]']
call ['?action@URLCtrl@@AAEXXZ']
jmp ['short', '$LN18']
cmp ['[ebp+wParam],', '20h']
jnz ['short', 'loc_6B3']
mov ['eax,', '[ebp+var_2BC]']
mov ['byte', 'ptr', '[eax+48h],', '1']
jmp ['short', '$LN18']
cmp ['[ebp+wParam],', '20h']
jnz ['short', 'loc_6DE']
mov ['ecx,', '[ebp+var_2BC]']
movzx ['edx,', 'byte', 'ptr', '[ecx+48h]']
test ['edx,', 'edx']
jz ['short', 'loc_6DE']
mov ['eax,', '[ebp+var_2BC]']
mov ['byte', 'ptr', '[eax+48h],', '0']
mov ['ecx,', '[ebp+var_2BC]']
call ['?action@URLCtrl@@AAEXXZ']
jmp ['short', '$LN18']
mov ['eax,', '1']
jmp ['short', 'loc_707']
mov ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+wParam]']
push ['edx']
mov ['eax,', '[ebp+Msg]']
push ['eax']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
mov ['edx,', '[ebp+var_2BC]']
mov ['eax,', '[edx+3Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CallWindowProcW@20']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_841']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_848']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?9_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_874']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_87B']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_897']
jmp ['short', 'loc_8B7']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_8B2']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_8B7']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_8D3']
jmp ['short', 'loc_8F9']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_8F4']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_8F9']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@_W@std@@YAPA_WIPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_913']
jmp ['short', 'loc_938']
cmp ['[ebp+arg_0],', '7FFFFFFFh']
ja ['short', 'loc_933']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_938']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_95E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_97E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@_W@std@@YAPA_WAA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_A1D']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_A24']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_B1D']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_B24']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_BF7']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_BFE']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@_W@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@_W@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_141A']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_1421']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1474']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_1474']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_147B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14AB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_14D7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1503']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_152F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?URLCtrlProc@URLCtrl@@KGJPAUHWND__@@IIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
mov ['edx,', '[ebp+Msg]']
push ['edx']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
push ['0FFFFFFEBh']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
mov ['ecx,', 'eax']
call ['?runProc@URLCtrl@@IAEJPAUHWND__@@IIJ@Z']
pop ['ebp']
retn ['10h']
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_16ED']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_173F']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_1707']
jmp ['short', 'loc_173F']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_1734']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_173F']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_17C2']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_17AC']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_17F1']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '7']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_18AD']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_18FF']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_18C7']
jmp ['short', 'loc_18FF']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_18F4']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_18FF']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1982']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_196C']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_19B1']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+14h],', 'edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_1B22']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1B42']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_1B8C']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_1B7C']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_1B7C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1B63']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_1B6C']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_1B8C']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1B8C']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_1B9B']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_1BA2']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_1BCA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1BEA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['short', 'loc_1C34']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_1C24']
cmp ['[ebp+arg_0],', '8']
jnb ['short', 'loc_1C24']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_1C0B']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1C14']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_1C34']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1C34']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_1C43']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_1C4A']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1C81']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_1C81']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_1C87']
xor ['al,', 'al']
jmp ['short', 'loc_1C89']
jmp ['short', 'loc_1C89']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1CC0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_1CC0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_1CC6']
xor ['al,', 'al']
jmp ['short', 'loc_1CC8']
jmp ['short', 'loc_1CC8']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_1CF6']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1CFF']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_1D2E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1D37']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_1D66']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1D6F']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_1D9E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1DA7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_1E3B']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_1E0B']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1E20']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_1DFE']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_1E83']
jmp ['short', 'loc_1EF6']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_1EF6']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_1ED5']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_1F27']
jmp ['short', 'loc_1F9A']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '8']
jb ['short', 'loc_1F9A']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_1F79']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@_W@std@@QAEPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@_W@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@_W@std@@YAPA_WIPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_20C2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_20DE']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_2105']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_2147']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2147']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_21AF']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_21E2']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_221F']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_221C']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_2246']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_2262']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_2289']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_22CE']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_22CE']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2337']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_236C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_23A9']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_23A6']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
pop ['ebp']
retn
endp
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_2435']
push ['87Dh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_2448']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_2462']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_2472']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_2478']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?compare@?$char_traits@_W@std@@SAHPB_W0I@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_24A8']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_24DD']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_24B9']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_24D7']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_C]']
jnz ['short', 'loc_24CA']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_24D1']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['86Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2543']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_255A']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_wmemcmp']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_2576']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_258D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_25A6']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_25BD']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_2688']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_269D']
jmp ['short', 'loc_269D']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_26FB']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_26FB']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_2702']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2756']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2788']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_27A4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_27EA']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_27EA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_280E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2840']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_285C']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
jmp ['short', 'loc_28A8']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_28A8']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Dst]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_28D7']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_28E6']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@_W@std@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2907']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2916']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_wcslen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@_W@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@_W@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_29BE']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_29C7']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_29FE']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_2A07']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2A5C']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_2A63']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_2B21']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_2B44']
jmp ['short', 'loc_2B44']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2BD8']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_2BDF']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_2C56']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2C6D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_2C86']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2C9D']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp
_wmemcmp        proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
jmp ['short', 'loc_2D71']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_2DAE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_2DAC']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jge ['short', 'loc_2DA0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_2DA7']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_2DB0']
jmp ['short', 'loc_2D56']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wmemcpy        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
_wmemmove       proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memmove']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp

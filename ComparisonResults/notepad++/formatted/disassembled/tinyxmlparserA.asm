?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_653']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_657']
xor ['eax,', 'eax']
jmp ['short', 'loc_6A2']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_69F']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_69F']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_690']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Ah']
jz ['short', 'loc_690']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '0Dh']
jnz ['short', 'loc_69B']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1']
mov ['[ebp+arg_0],', 'ecx']
jmp ['short', 'loc_69D']
jmp ['short', 'loc_69F']
jmp ['short', 'loc_657']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?StreamWhiteSpace@TiXmlBaseA@@KA_NPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_6D1']
xor ['al,', 'al']
jmp ['short', 'loc_706']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+C],', 'eax']
mov ['ecx,', '[ebp+C]']
push ['ecx']
call ['?IsWhiteSpace@TiXmlBaseA@@KA_NH@Z']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_6F3']
mov ['al,', '1']
jmp ['short', 'loc_706']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['short', 'loc_6B4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?StreamTo@TiXmlBaseA@@KA_NPAV?$basic_istream@DU?$char_traits@D@std@@@std@@HPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_75B']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jnz ['short', 'loc_744']
mov ['al,', '1']
jmp ['short', 'loc_75D']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['short', 'loc_714']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ReadName@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['offset', '$SG94532']
mov ['ecx,', '[ebp+arg_4]']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_79D']
push ['0C7h']
push ['offset', '$SG94534']
push ['offset', '$SG94535']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['[ebp+arg_0],', '0']
jz ['loc_841']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_841']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_isalpha']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_7D3']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Fh']
jnz ['short', 'loc_841']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_83C']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_83C']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_isalnum']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_822']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '5Fh']
jz ['short', 'loc_822']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Dh']
jz ['short', 'loc_822']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '2Eh']
jz ['short', 'loc_822']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '3Ah']
jnz ['short', 'loc_83C']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_7D3']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_843']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
?ReadText@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N02@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['offset', '$SG94610']
mov ['ecx,', '[ebp+arg_4]']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
movzx ['eax,', '[ebp+arg_8]']
test ['eax,', 'eax']
jz ['short', 'loc_874']
movzx ['ecx,', 'byte', 'ptr', 'ds:?condenseWhiteSpace@TiXmlBaseA@@0_NA']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8C7']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_8C2']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_8C2']
movzx ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_8C2']
lea ['edx,', '[ebp+var_2]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?GetChar@TiXmlBaseA@@KAPBDPBDPAD@Z']
add ['esp,', '8']
mov ['[ebp+Str2],', 'eax']
movzx ['ecx,', '[ebp+var_2]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['short', 'loc_874']
jmp ['loc_994']
mov ['[ebp+var_1],', '0']
mov ['edx,', '[ebp+Str2]']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['loc_994']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['loc_994']
movzx ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['loc_994']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_928']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '0Ah']
jnz ['short', 'loc_937']
mov ['[ebp+var_1],', '1']
mov ['ecx,', '[ebp+Str2]']
add ['ecx,', '1']
mov ['[ebp+Str2],', 'ecx']
jmp ['short', 'loc_98F']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_959']
mov ['[ebp+var_1],', '1']
mov ['ecx,', '[ebp+Str2]']
add ['ecx,', '1']
mov ['[ebp+Str2],', 'ecx']
jmp ['short', 'loc_98F']
movzx ['edx,', '[ebp+var_1]']
test ['edx,', 'edx']
jz ['short', 'loc_96F']
push ['20h']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['[ebp+var_1],', '0']
lea ['eax,', '[ebp+var_3]']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?GetChar@TiXmlBaseA@@KAPBDPBDPAD@Z']
add ['esp,', '8']
mov ['[ebp+Str2],', 'eax']
movzx ['edx,', '[ebp+var_3]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['loc_8DA']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+Str2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '34h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['3']
mov ['eax,', '[ebp+Str2]']
push ['eax']
push ['offset', '$SG94551']
call ['_strncmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['loc_B85']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx+3]']
test ['edx,', 'edx']
jz ['loc_B85']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax+4]']
test ['ecx,', 'ecx']
jz ['loc_B85']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx+4]']
cmp ['eax,', '3Bh']
jz ['short', 'loc_A3C']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx+5]']
cmp ['edx,', '3Bh']
jnz ['loc_B85']
mov ['eax,', '[ebp+arg_4]']
mov ['byte', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
cmp ['edx,', '3Bh']
jnz ['short', 'loc_AC1']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax+3]']
push ['ecx']
call ['_isalpha']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_A86']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx+3]']
push ['eax']
call ['_tolower']
add ['esp,', '4']
movsx ['ecx,', 'al']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
lea ['ecx,', '[eax+ecx-57h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_A9C']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax+3]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
lea ['ecx,', '[eax+ecx-30h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+Str2]']
add ['eax,', '5']
mov ['[ebp+var_40],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_40]']
jmp ['loc_C5A']
jmp ['loc_B85']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx+3]']
push ['edx']
call ['_isalpha']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_AFD']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax+3]']
push ['ecx']
call ['_tolower']
add ['esp,', '4']
movsx ['edx,', 'al']
sub ['edx,', '57h']
shl ['edx,', '4']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
add ['ecx,', 'edx']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'cl']
jmp ['short', 'loc_B17']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax+3]']
sub ['ecx,', '30h']
shl ['ecx,', '4']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
add ['eax,', 'ecx']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx+4]']
push ['eax']
call ['_isalpha']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_B4F']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx+4]']
push ['edx']
call ['_tolower']
add ['esp,', '4']
movsx ['eax,', 'al']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
lea ['eax,', '[edx+eax-57h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_B65']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx+4]']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
lea ['eax,', '[edx+eax-30h]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ecx],', 'al']
mov ['edx,', '[ebp+Str2]']
add ['edx,', '6']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_34]']
jmp ['loc_C5A']
mov ['[ebp+var_30],', '0']
jmp ['short', 'loc_B97']
mov ['eax,', '[ebp+var_30]']
add ['eax,', '1']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+var_30],', '5']
jge ['loc_C35']
imul ['ecx,', '[ebp+var_30],', '0Ch']
mov ['edx,', 'ds:dword_608[ecx]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
imul ['ecx,', '[ebp+var_30],', '0Ch']
mov ['edx,', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[ecx]']
push ['edx']
call ['_strncmp']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_C30']
imul ['eax,', '[ebp+var_30],', '0Ch']
mov ['ecx,', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[eax]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
imul ['edx,', '[ebp+var_30],', '0Ch']
cmp ['eax,', 'ds:dword_608[edx]']
jz ['short', 'loc_BFD']
push ['10Ch']
push ['offset', '$SG94574']
push ['offset', '$SG94575']
call ['__wassert']
add ['esp,', '0Ch']
imul ['ecx,', '[ebp+var_30],', '0Ch']
mov ['edx,', '[ebp+arg_4]']
mov ['al,', 'ds:byte_60C[ecx]']
mov ['[edx],', 'al']
imul ['ecx,', '[ebp+var_30],', '0Ch']
mov ['edx,', '[ebp+Str2]']
add ['edx,', 'ds:dword_608[ecx]']
mov ['[ebp+var_3C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
jmp ['short', 'loc_C5A']
jmp ['loc_B8E']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+Str2]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
mov ['eax,', '[ebp+Str2]']
add ['eax,', '1']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_CA2']
push ['11Ch']
push ['offset', '$SG94584']
push ['offset', '$SG94585']
call ['__wassert']
add ['esp,', '0Ch']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_CB2']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_CD4']
xor ['eax,', 'eax']
jnz ['short', 'loc_CCD']
push ['11Fh']
push ['offset', '$SG94589']
push ['offset', '$SG94590']
call ['__wassert']
add ['esp,', '0Ch']
xor ['al,', 'al']
jmp ['loc_DAE']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['_tolower']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
call ['_tolower']
add ['esp,', '4']
cmp ['esi,', 'eax']
jnz ['loc_DAC']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
movzx ['ecx,', '[ebp+arg_8]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D52']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_D42']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_D42']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_D42']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_D0A']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_D50']
mov ['al,', '1']
jmp ['short', 'loc_DAE']
jmp ['short', 'loc_DAC']
mov ['edx,', '[ebp+var_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_D9E']
mov ['ecx,', '[ebp+arg_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_D9E']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_tolower']
add ['esp,', '4']
mov ['esi,', 'eax']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['_tolower']
add ['esp,', '4']
cmp ['esi,', 'eax']
jnz ['short', 'loc_D9E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
mov ['[ebp+arg_4],', 'edx']
jmp ['short', 'loc_D52']
mov ['eax,', '[ebp+arg_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_DAC']
mov ['al,', '1']
jmp ['short', 'loc_DAE']
xor ['al,', 'al']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '44h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E19']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_E19']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Ch']
jz ['short', 'loc_E20']
xor ['eax,', 'eax']
jmp ['loc_FF4']
mov ['ecx,', '[ebp+var_34]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_E4A']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_E51']
xor ['eax,', 'eax']
jmp ['loc_FF4']
mov ['[ebp+var_3C],', 'offset', '$SG94691']
mov ['[ebp+var_48],', 'offset', '$SG94693']
push ['1']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_EC1']
push ['98h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_EA2']
mov ['ecx,', '[ebp+var_14]']
call ['??0TiXmlDeclarationA@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_EA9']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_40],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_FCC']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx+1]']
push ['edx']
call ['_isalpha']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_EE1']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax+1]']
cmp ['ecx,', '5Fh']
jnz ['short', 'loc_F2F']
push ['94h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_F10']
push ['offset', '$SG94706']
mov ['ecx,', '[ebp+var_1C]']
call ['??0TiXmlElementA@@QAE@PBD@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_F17']
mov ['[ebp+var_20],', '0']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_44],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_10],', 'eax']
jmp ['loc_FCC']
push ['0']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_F8B']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '2']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_F6F']
mov ['ecx,', '[ebp+var_24]']
call ['??0TiXmlCommentA@@QAE@XZ']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_F76']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_4C]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_FCC']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_4],', '3']
cmp ['[ebp+var_2C],', '0']
jz ['short', 'loc_FB2']
mov ['ecx,', '[ebp+var_2C]']
call ['??0TiXmlUnknownA@@QAE@XZ']
mov ['[ebp+var_30],', 'eax']
jmp ['short', 'loc_FB9']
mov ['[ebp+var_30],', '0']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_50]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_FDD']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_34]']
mov ['[edx+0Ch],', 'eax']
jmp ['short', 'loc_FF1']
cmp ['[ebp+var_38],', '0']
jz ['short', 'loc_FF1']
push ['0']
push ['0']
push ['3']
mov ['ecx,', '[ebp+var_38]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Parse@TiXmlAttributeA@@UAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1038']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_103F']
xor ['eax,', 'eax']
jmp ['loc_126A']
mov ['[ebp+var_C],', '4']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_105D']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx+0Ch]']
call ['?TabSize@TiXmlDocumentA@@QBEHXZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1085']
mov ['edx,', '[ebp+Str2]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+Str2]']
mov ['[ebp+var_10],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '10h']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?ReadName@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z']
add ['esp,', '8']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_10B1']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_10D6']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_10CF']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_126A']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1100']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_1100']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Dh']
jz ['short', 'loc_1125']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_111E']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str2]']
push ['edx']
push ['7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_126A']
mov ['ecx,', '[ebp+Str2]']
add ['ecx,', '1']
mov ['[ebp+Str2],', 'ecx']
mov ['edx,', '[ebp+Str2]']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_114D']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1172']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jz ['short', 'loc_116B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
push ['7']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_126A']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '27h']
jnz ['short', 'loc_11B0']
mov ['edx,', '[ebp+Str2]']
add ['edx,', '1']
mov ['[ebp+Str2],', 'edx']
mov ['[ebp+Str],', 'offset', '$SG94938']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
push ['ecx']
mov ['edx,', '[ebp+Str2]']
push ['edx']
call ['?ReadText@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N02@Z']
add ['esp,', '14h']
mov ['[ebp+Str2],', 'eax']
jmp ['loc_1267']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '22h']
jnz ['short', 'loc_11EB']
mov ['edx,', '[ebp+Str2]']
add ['edx,', '1']
mov ['[ebp+Str2],', 'edx']
mov ['[ebp+Str],', 'offset', '$SG94941']
push ['0']
mov ['eax,', '[ebp+Str]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
push ['ecx']
mov ['edx,', '[ebp+Str2]']
push ['edx']
call ['?ReadText@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N02@Z']
add ['esp,', '14h']
mov ['[ebp+Str2],', 'eax']
jmp ['short', 'loc_1267']
push ['offset', '$SG94943']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1267']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1267']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_1267']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Ah']
jz ['short', 'loc_1267']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jz ['short', 'loc_1267']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '2Fh']
jz ['short', 'loc_1267']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_1267']
mov ['eax,', '[ebp+Str2]']
movzx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['edx,', '[ebp+Str2]']
add ['edx,', '1']
mov ['[ebp+Str2],', 'edx']
jmp ['short', 'loc_11FB']
mov ['eax,', '[ebp+Str2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamIn@TiXmlElementA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?StreamIn@TiXmlElementA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '74h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_70],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_12D6']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_6C],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_6C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
cmp ['[ebp+var_6C],', '3Eh']
jnz ['short', 'loc_12D4']
jmp ['short', 'loc_12D6']
jmp ['short', 'loc_129B']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '3']
jnb ['short', 'loc_12E8']
jmp ['loc_1530']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z']
movsx ['edx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', '3Eh']
jnz ['short', 'loc_132A']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z']
movsx ['eax,', 'byte', 'ptr', '[eax]']
cmp ['eax,', '2Fh']
jnz ['short', 'loc_132A']
jmp ['loc_1530']
jmp ['loc_1530']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Eh']
jnz ['loc_1530']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?StreamWhiteSpace@TiXmlBaseA@@KA_NPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_13B3']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '3Ch']
jz ['short', 'loc_13B3']
push ['offset', '$SG94741']
lea ['ecx,', '[ebp+var_54]']
call ['??0TiXmlTextA@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_54]']
call ['?StreamIn@TiXmlTextA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_54]']
call ['??1TiXmlTextA@@UAE@XZ']
jmp ['short', 'loc_134A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_13D1']
jmp ['loc_1530']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '3Ch']
jz ['short', 'loc_13F5']
push ['281h']
push ['offset', '$SG94744']
push ['offset', '$SG94745']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_7C],', 'eax']
mov ['[ebp+var_55],', '0']
mov ['[ebp+var_56],', '0']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1424']
jmp ['loc_1530']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+C],', 'eax']
cmp ['[ebp+C],', '3Eh']
jnz ['short', 'loc_1437']
jmp ['short', 'loc_147D']
movzx ['edx,', 'byte', 'ptr', '[ebp+C]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
movzx ['eax,', '[ebp+var_56]']
test ['eax,', 'eax']
jnz ['short', 'loc_147B']
cmp ['[ebp+C],', '3Ch']
jz ['short', 'loc_147B']
mov ['ecx,', '[ebp+C]']
push ['ecx']
call ['?IsWhiteSpace@TiXmlBaseA@@KA_NH@Z']
add ['esp,', '4']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_147B']
mov ['[ebp+var_56],', '1']
cmp ['[ebp+C],', '2Fh']
jnz ['short', 'loc_147B']
mov ['[ebp+var_55],', '1']
jmp ['short', 'loc_1408']
movzx ['eax,', '[ebp+var_55]']
test ['eax,', 'eax']
jz ['short', 'loc_14BE']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_68],', 'eax']
cmp ['[ebp+var_68],', '3Eh']
jz ['short', 'loc_14AD']
push ['2A0h']
push ['offset', '$SG94761']
push ['offset', '$SG94762']
call ['__wassert']
add ['esp,', '0Ch']
movzx ['edx,', 'byte', 'ptr', '[ebp+var_68]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['short', 'loc_1530']
jmp ['short', 'loc_152B']
mov ['ecx,', '[ebp+arg_4]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
add ['eax,', '[ebp+var_7C]']
mov ['[ebp+var_80],', 'eax']
mov ['eax,', '[ebp+var_80]']
push ['eax']
mov ['ecx,', '[ebp+var_70]']
call ['?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
mov ['[ebp+var_60],', 'eax']
cmp ['[ebp+var_60],', '0']
jnz ['short', 'loc_14E3']
jmp ['short', 'loc_1530']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_60]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_60]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['ecx,', '[ebp+var_60]']
mov ['[ebp+var_74],', 'ecx']
mov ['edx,', '[ebp+var_74]']
mov ['[ebp+var_64],', 'edx']
cmp ['[ebp+var_64],', '0']
jz ['short', 'loc_151D']
push ['1']
mov ['eax,', '[ebp+var_64]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_64]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_1524']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_60],', '0']
jmp ['loc_134A']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '84h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_38],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_38]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_30],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_15A8']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jnz ['short', 'loc_15C3']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_15BC']
push ['0']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_1A3A']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_15EB']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_38]']
mov ['[eax+4],', 'ecx']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Ch']
jz ['short', 'loc_1615']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_160E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['4']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_1A3A']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?ReadName@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z']
add ['esp,', '8']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1653']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1672']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_166B']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
push ['5']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_1A3A']
push ['offset', '$SG94787']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '1Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z']
push ['offset', '$SG94788']
lea ['ecx,', '[ebp+var_2C]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+arg_0],', '0']
jz ['loc_1A1C']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_1A1C']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_3C],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_16DF']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_171B']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_16F7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
push ['7']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+var_84],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_84]']
jmp ['loc_1A3A']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '2Fh']
jnz ['short', 'loc_179B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_1776']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1752']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['8']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+var_90],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_90]']
jmp ['loc_1A3A']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+var_5C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_5C]']
jmp ['loc_1A3A']
jmp ['loc_1A17']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Eh']
jnz ['loc_187A']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_38]']
call ['?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_17D6']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jnz ['short', 'loc_17F4']
mov ['[ebp+var_54],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_54]']
jmp ['loc_1A3A']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_183F']
lea ['ecx,', '[ebp+var_2C]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_64]']
jmp ['loc_1A3A']
jmp ['short', 'loc_1875']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1857']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
push ['9']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+var_7C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_7C]']
jmp ['loc_1A3A']
jmp ['loc_1A17']
push ['50h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_189E']
mov ['ecx,', '[ebp+var_50]']
call ['??0TiXmlAttributeA@@QAE@XZ']
mov ['[ebp+var_48],', 'eax']
jmp ['short', 'loc_18A5']
mov ['[ebp+var_48],', '0']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_6C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ebp+var_34],', 'ecx']
cmp ['[ebp+var_34],', '0']
jnz ['short', 'loc_18F7']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_18D3']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_3C]']
push ['eax']
push ['3']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+var_8C],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_8C]']
jmp ['loc_1A3A']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_34]']
call ['?SetDocument@TiXmlAttributeA@@QAEXPAVTiXmlDocumentA@@@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_34]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_1931']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1993']
cmp ['[ebp+var_30],', '0']
jz ['short', 'loc_1949']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+var_74]']
push ['eax']
push ['4']
mov ['ecx,', '[ebp+var_30]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_58],', 'ecx']
mov ['edx,', '[ebp+var_58]']
mov ['[ebp+var_40],', 'edx']
cmp ['[ebp+var_40],', '0']
jz ['short', 'loc_196E']
push ['1']
mov ['eax,', '[ebp+var_40]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_40]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_60],', 'eax']
jmp ['short', 'loc_1975']
mov ['[ebp+var_60],', '0']
mov ['[ebp+var_68],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_68]']
jmp ['loc_1A3A']
mov ['ecx,', '[ebp+var_34]']
call ['?Name@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_4C],', 'eax']
cmp ['[ebp+var_4C],', '0']
jz ['short', 'loc_1A08']
mov ['ecx,', '[ebp+var_34]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4C]']
call ['?SetValue@TiXmlAttributeA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_70],', 'ecx']
mov ['edx,', '[ebp+var_70]']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jz ['short', 'loc_19E6']
push ['1']
mov ['eax,', '[ebp+var_44]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_44]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_78],', 'eax']
jmp ['short', 'loc_19ED']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_80],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_80]']
jmp ['short', 'loc_1A3A']
mov ['ecx,', '[ebp+var_34]']
push ['ecx']
mov ['ecx,', '[ebp+var_38]']
add ['ecx,', '44h']
call ['?Add@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z']
jmp ['loc_16A2']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_88],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_88]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '28h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['loc_1C07']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['loc_1C07']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '3Ch']
jz ['loc_1B93']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1AF5']
push ['offset', '$SG94848']
mov ['ecx,', '[ebp+var_24]']
call ['??0TiXmlTextA@@QAE@PBD@Z']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_1AFC']
mov ['[ebp+var_28],', '0']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_1B30']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1B29']
push ['0']
push ['0']
push ['3']
mov ['ecx,', '[ebp+var_1C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_1C24']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Blank@TiXmlTextA@@IBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1B65']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
jmp ['short', 'loc_1B91']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_20],', 'ecx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1B8A']
push ['1']
mov ['edx,', '[ebp+var_20]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[eax]']
call ['edx']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_1B91']
mov ['[ebp+var_34],', '0']
jmp ['short', 'loc_1BF3']
push ['0']
push ['offset', '$SG94857']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1BB4']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_1C24']
jmp ['short', 'loc_1BF3']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1BEF']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
mov ['[ebp+arg_0],', 'eax']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
jmp ['short', 'loc_1BF3']
xor ['eax,', 'eax']
jmp ['short', 'loc_1C24']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
jmp ['loc_1AA2']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1C21']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_1C21']
push ['0']
push ['0']
push ['6']
mov ['ecx,', '[ebp+var_1C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamIn@TiXmlCommentA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1CBC']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_4],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
cmp ['[ebp+var_4],', '3Eh']
jnz ['short', 'loc_1CBA']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z']
movsx ['edx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', '2Dh']
jnz ['short', 'loc_1CBA']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '3']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z']
movsx ['eax,', 'byte', 'ptr', '[eax]']
cmp ['eax,', '2Dh']
jnz ['short', 'loc_1CBA']
jmp ['short', 'loc_1CBC']
jmp ['short', 'loc_1C49']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Parse@TiXmlCommentA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_C],', 'eax']
push ['offset', '$SG94909']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1D2B']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['[ecx+8],', 'eax']
mov ['[ebp+Str],', 'offset', '$SG94912']
mov ['[ebp+var_10],', 'offset', '$SG94914']
push ['0']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1D68']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
push ['0Bh']
mov ['ecx,', '[ebp+var_C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_1D9B']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
add ['eax,', '[ebp+Str2]']
mov ['[ebp+Str2],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_10]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?ReadText@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N02@Z']
add ['esp,', '14h']
mov ['[ebp+Str2],', 'eax']
mov ['eax,', '[ebp+Str2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Blank@TiXmlTextA@@IBE_NXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_1DD9']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_1E06']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z']
movsx ['eax,', 'byte', 'ptr', '[eax]']
push ['eax']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_1E04']
xor ['al,', 'al']
jmp ['short', 'loc_1E08']
jmp ['short', 'loc_1DD0']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Parse@TiXmlTextA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
push ['offset', '$SG94963']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1E51']
mov ['eax,', '[ebp+Str2]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+4],', 'ecx']
mov ['[eax+8],', 'edx']
mov ['[ebp+var_1],', '1']
mov ['[ebp+Str],', 'offset', '$SG94967']
push ['0']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?ReadText@TiXmlBaseA@@KAPBDPBDPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N02@Z']
add ['esp,', '14h']
mov ['[ebp+Str2],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1E8B']
mov ['eax,', '[ebp+Str2]']
sub ['eax,', '1']
jmp ['short', 'loc_1E8D']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamIn@TiXmlTextA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1EEC']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '3Ch']
jnz ['short', 'loc_1ED5']
jmp ['short', 'loc_1EEC']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
jmp ['short', 'loc_1EA9']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamIn@TiXmlDeclarationA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1F44']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_4],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
cmp ['[ebp+var_4],', '3Eh']
jnz ['short', 'loc_1F42']
jmp ['short', 'loc_1F44']
jmp ['short', 'loc_1F09']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0FCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_104],', 'ecx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
mov ['ecx,', '[ebp+var_104]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_1FCB']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
test ['edx,', 'edx']
jz ['short', 'loc_1FCB']
push ['1']
push ['offset', '$SG94988']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1FEC']
cmp ['[ebp+var_108],', '0']
jz ['short', 'loc_1FE5']
push ['0']
push ['0']
push ['0Ch']
mov ['ecx,', '[ebp+var_108]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_2226']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2017']
mov ['edx,', '[ebp+Str2]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_104]']
mov ['[eax+4],', 'ecx']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+Str2]']
add ['ecx,', '5']
mov ['[ebp+Str2],', 'ecx']
push ['offset', '$SG94991']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '44h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
push ['offset', '$SG94992']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '60h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
push ['offset', '$SG94993']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '7Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+Str2],', '0']
jz ['loc_2224']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['loc_2224']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jnz ['short', 'loc_208D']
mov ['eax,', '[ebp+Str2]']
add ['eax,', '1']
mov ['[ebp+Str2],', 'eax']
mov ['eax,', '[ebp+Str2]']
jmp ['loc_2226']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+Str2],', 'eax']
push ['1']
push ['offset', '$SG94999']
mov ['edx,', '[ebp+Str2]']
push ['edx']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2103']
lea ['ecx,', '[ebp+var_60]']
call ['??0TiXmlAttributeA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+Str2]']
push ['edx']
lea ['ecx,', '[ebp+var_60]']
call ['?Parse@TiXmlAttributeA@@UAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+Str2],', 'eax']
lea ['ecx,', '[ebp+var_60]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '44h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1TiXmlAttributeA@@UAE@XZ']
jmp ['loc_221F']
push ['1']
push ['offset', '$SG95003']
mov ['eax,', '[ebp+Str2]']
push ['eax']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2176']
lea ['ecx,', '[ebp+var_100]']
call ['??0TiXmlAttributeA@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Str2]']
push ['eax']
lea ['ecx,', '[ebp+var_100]']
call ['?Parse@TiXmlAttributeA@@UAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+Str2],', 'eax']
lea ['ecx,', '[ebp+var_100]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '60h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_100]']
call ['??1TiXmlAttributeA@@UAE@XZ']
jmp ['loc_221F']
push ['1']
push ['offset', '$SG95007']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?StringEqual@TiXmlBaseA@@KA_NPBD0_N@Z']
add ['esp,', '0Ch']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_21E6']
lea ['ecx,', '[ebp+var_B0]']
call ['??0TiXmlAttributeA@@QAE@XZ']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
lea ['ecx,', '[ebp+var_B0]']
call ['?Parse@TiXmlAttributeA@@UAEPBDPBDPAVTiXmlParsingDataA@@@Z']
mov ['[ebp+Str2],', 'eax']
lea ['ecx,', '[ebp+var_B0]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_104]']
add ['ecx,', '7Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_B0]']
call ['??1TiXmlAttributeA@@UAE@XZ']
jmp ['short', 'loc_221F']
cmp ['[ebp+Str2],', '0']
jz ['short', 'loc_221F']
mov ['edx,', '[ebp+Str2]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_221F']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jz ['short', 'loc_221F']
mov ['eax,', '[ebp+Str2]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
push ['ecx']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_221F']
mov ['edx,', '[ebp+Str2]']
add ['edx,', '1']
mov ['[ebp+Str2],', 'edx']
jmp ['short', 'loc_21E6']
jmp ['loc_2059']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamIn@TiXmlUnknownA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2294']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_4],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
cmp ['[ebp+var_4],', '3Eh']
jnz ['short', 'loc_2292']
jmp ['short', 'loc_2294']
jmp ['short', 'loc_2259']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Parse@TiXmlUnknownA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_22EB']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_4]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+4],', 'edx']
mov ['[ecx+8],', 'eax']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2306']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_2306']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Ch']
jz ['short', 'loc_2325']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_231E']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
push ['0Ah']
mov ['ecx,', '[ebp+var_8]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_23A6']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
push ['offset', '$SG94885']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_2376']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2376']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['eax,', '3Eh']
jz ['short', 'loc_2376']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_233E']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2390']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2390']
push ['0']
push ['0']
push ['0Ah']
mov ['ecx,', '[ebp+var_8]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['ecx,', '[ebp+arg_0]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '3Eh']
jnz ['short', 'loc_23A3']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
jmp ['short', 'loc_23A6']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Parse@TiXmlDocumentA@@UAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?ClearError@TiXmlDocumentA@@QAEXXZ']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_23D1']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_23E6']
push ['0']
push ['0']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['loc_24E5']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_2410']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[edx+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+4]']
mov ['[edx+8],', 'ecx']
jmp ['short', 'loc_2424']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?TabSize@TiXmlDocumentA@@QBEHXZ']
push ['eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+var_18]']
call ['??0TiXmlParsingDataA@@AAE@PBDHHH@Z']
lea ['ecx,', '[ebp+var_18]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+4],', 'ecx']
mov ['[eax+8],', 'edx']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2484']
push ['0']
push ['0']
push ['0Dh']
mov ['ecx,', '[ebp+var_4]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['eax,', 'eax']
jmp ['short', 'loc_24E5']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_24E2']
mov ['edx,', '[ebp+arg_0]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
test ['eax,', 'eax']
jz ['short', 'loc_24E2']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_24CF']
lea ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
jmp ['short', 'loc_24D1']
jmp ['short', 'loc_24E2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?SkipWhiteSpace@TiXmlBaseA@@KAPBDPBD@Z']
add ['esp,', '4']
mov ['[ebp+arg_0],', 'eax']
jmp ['short', 'loc_2484']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+44h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2507']
jmp ['loc_258C']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_2513']
cmp ['[ebp+arg_0],', '0Eh']
jl ['short', 'loc_252A']
push ['1F8h']
push ['offset', '$SG94677']
push ['offset', '$SG94678']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+44h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+48h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
mov ['edx,', 'dword', 'ptr', 'ds:?errorString@TiXmlBaseA@@1PAPBDA[ecx*4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '6Ch']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_258C']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_258C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['?Stamp@TiXmlParsingDataA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+arg_8]']
call ['?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+6Ch],', 'ecx']
mov ['[eax+70h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?StreamIn@TiXmlDocumentA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['3Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?StreamTo@TiXmlBaseA@@KA_NPAV?$basic_istream@DU?$char_traits@D@std@@@std@@HPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z']
add ['esp,', '0Ch']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_25D5']
push ['0']
push ['0']
push ['8']
mov ['ecx,', '[ebp+var_C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
jmp ['loc_270C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_26FE']
mov ['ecx,', '[ebp+arg_4]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_263B']
mov ['ecx,', '[ebp+arg_0]']
call ['?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '3Eh']
jz ['short', 'loc_263B']
mov ['ecx,', '[ebp+arg_0]']
call ['?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_18],', 'eax']
movzx ['ecx,', 'byte', 'ptr', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z']
jmp ['short', 'loc_25FD']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_26F9']
mov ['ecx,', '[ebp+arg_4]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
add ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_26E9']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_269D']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_26A4']
mov ['[ebp+var_14],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[ebp+var_1],', 'cl']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_20],', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_26CF']
push ['1']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_26D6']
mov ['[ebp+var_24],', '0']
mov ['[ebp+var_8],', '0']
movzx ['ecx,', '[ebp+var_1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_26E7']
jmp ['short', 'loc_270C']
jmp ['short', 'loc_26F9']
push ['0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
jmp ['short', 'loc_270C']
jmp ['loc_25D5']
push ['0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_C]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Stamp@TiXmlParsingDataA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2743']
push ['48h']
push ['offset', '$SG94463']
push ['offset', '$SG94464']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+0Ch],', '1']
jge ['short', 'loc_2751']
jmp ['loc_28CA']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2785']
push ['54h']
push ['offset', '$SG94470']
push ['offset', '$SG94471']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['loc_2851']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
mov ['[ebp+var_14],', 'edx']
cmp ['[ebp+var_14],', '0Dh']
ja ['$LN1']
mov ['eax,', '[ebp+var_14]']
movzx ['ecx,', 'ds:$LN20[eax]']
jmp ['ds:$LN21[ecx*4]']
jmp ['loc_28CA']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '0Ah']
jnz ['short', 'loc_27E7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_284C']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
cmp ['ecx,', '0Dh']
jnz ['short', 'loc_2816']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
jmp ['short', 'loc_284C']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
cdq
idiv ['dword', 'ptr', '[ecx+0Ch]']
add ['eax,', '1']
mov ['edx,', '[ebp+var_8]']
imul ['eax,', '[edx+0Ch]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_284C']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['loc_2785']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0FFFFFFFFh']
jge ['short', 'loc_2881']
push ['8Fh']
push ['offset', '$SG94487']
push ['offset', '$SG94488']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+4],', '0FFFFFFFFh']
jge ['short', 'loc_28A1']
push ['90h']
push ['offset', '$SG94490']
push ['offset', '$SG94491']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jnz ['short', 'loc_28CA']
push ['92h']
push ['offset', '$SG94493']
push ['offset', '$SG94494']
call ['__wassert']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-38h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z$1 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z$2 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__unwindfunclet$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z$3 proc near
mov ['eax,', '[ebp-2Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-48h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Identify@TiXmlNodeA@@IAEPAV1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?StreamIn@TiXmlElementA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z$0 proc near
lea ['ecx,', '[ebp-54h]']
jmp ['??1TiXmlTextA@@UAE@XZ']
endp
__ehhandler$?StreamIn@TiXmlElementA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-78h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?StreamIn@TiXmlElementA@@MAEXPAV?$basic_istream@DU?$char_traits@D@std@@@std@@PAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z$1 proc near
mov ['eax,', '[ebp-50h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-88h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Parse@TiXmlElementA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z$0 proc near
mov ['eax,', '[ebp-24h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?ReadValue@TiXmlElementA@@IAEPBDPBDPAVTiXmlParsingDataA@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z$0 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1TiXmlAttributeA@@UAE@XZ']
endp
__unwindfunclet$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z$1 proc near
lea ['ecx,', '[ebp-100h]']
jmp ['??1TiXmlAttributeA@@UAE@XZ']
endp
__unwindfunclet$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z$2 proc near
lea ['ecx,', '[ebp-0B0h]']
jmp ['??1TiXmlAttributeA@@UAE@XZ']
endp
__ehhandler$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-100h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Parse@TiXmlDeclarationA@@MAEPBDPBDPAVTiXmlParsingDataA@@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2A4F']
jmp ['short', 'loc_2A6F']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_2A6A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2A6F']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2A8B']
jmp ['short', 'loc_2AB1']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_2AAC']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_2AB1']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Memory],', '0']
jz ['short', 'loc_2ADB']
push ['0']
mov ['eax,', '[ebp+Memory]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+Memory]']
mov ['eax,', '[edx]']
call ['eax']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['_free']
add ['esp,', '4']
pop ['ebp']
retn
endp
??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Memory],', '0']
jz ['short', 'loc_2B03']
push ['0']
mov ['eax,', '[ebp+Memory]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+Memory]']
mov ['eax,', '[edx]']
call ['eax']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['_free']
add ['esp,', '4']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPADPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2B26']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_2B46']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PBD@std@@YAXPBD0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_2B98']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2B98']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PBD@std@@YAXPBD0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2C7D']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2C84']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2D57']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_2D5E']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', 'ds:?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', 'offset', '?id@?$ctype@D@std@@2V0locale@2@A']
call ['??Bid@locale@std@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2E76']
jmp ['short', 'loc_2EE4']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2E84']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_2EE4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
add ['esp,', '8']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_2EB6']
push ['offset', '??_C@_08EPJLHIJG@bad?5cast?$AA@']
lea ['ecx,', '[ebp+var_30]']
call ['??0bad_cast@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVbad_cast@std@@']
lea ['edx,', '[ebp+var_30]']
push ['edx']
call ['__CxxThrowException@8']
jmp ['short', 'loc_2EE4']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ds:?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B,', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Yarn@D@std@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Yarn@_W@std@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
lea ['ecx,', '[ebp+var_E]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['edx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0ctype_base@std@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7?$ctype@D@std@@6B@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ctype_base@std@@UAE@XZ']
endp
__ehhandler$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlAttributeA@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlAttributeA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlBaseA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlAttributeA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlAttributeA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlAttributeA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlBaseA@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlBaseA@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0TiXmlCursorA@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlCommentA@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlCommentA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['2']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlCommentA@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlCommentA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlCommentA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlCommentA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlCursorA@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlDeclarationA@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlDeclarationA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['5']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDeclarationA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlDeclarationA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlDeclarationA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlParsingDataA@@AAE@PBDHHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0TiXmlCursorA@@QAE@XZ']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3661']
push ['39h']
push ['offset', '??_C@_1FG@OIOOBCOF@?$AA?4?$AA?4?$AA?2?$AAs?$AAr?$AAc?$AA?2?$AAT?$AAi?$AAn?$AAy?$AAX?$AAm?$AAl?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAX?$AAm?$AAl?$AAA?$AA?2?$AAt?$AAi?$AAn?$AAy?$AAx?$AAm?$AAl?$AAp@']
push ['offset', '??_C@_1M@JGKKHEFC@?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?$AA@']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_8]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_C]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
??0TiXmlTextA@@QAE@PBD@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlTextA@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['4']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlTextA@@6B@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetValue@TiXmlNodeA@@QAEXPBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0TiXmlTextA@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlTextA@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlTextA@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlUnknownA@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlUnknownA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['3']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlUnknownA@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlUnknownA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlUnknownA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlUnknownA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Facet_base@std@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Facet_base@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Locinfo@std@@QAE@PBD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Locinfo@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_399C']
push ['offset', '??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@']
lea ['ecx,', '[ebp+var_1C]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__ehhandler$??0_Locinfo@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_3A85']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_3AE5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
sub ['esp,', '1Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_40],', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
call ['?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
add ['esp,', '28h']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7_System_error@std@@6B@']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0 proc near
mov ['ecx,', '[ebp-40h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0_System_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0runtime_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7_System_error@std@@6B@']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx+10h]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+0Ch],', 'eax']
mov ['[edx+10h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0_System_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??0_System_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ctype_base@std@@QAE@I@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ctype_base@std@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0facet@locale@std@@IAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7ctype_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0ctype_base@std@@QAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1facet@locale@std@@MAE@XZ']
endp
__ehhandler$??0ctype_base@std@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ctype_base@std@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_code@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0facet@locale@std@@IAE@I@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0facet@locale@std@@IAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Facet_base@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7facet@locale@std@@6B@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '4']
push ['edx']
call ['?_Init_atomic_counter@std@@YAXAAKK@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0facet@locale@std@@IAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Facet_base@std@@UAE@XZ']
endp
__ehhandler$??0facet@locale@std@@IAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0facet@locale@std@@IAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0failure@ios_base@std@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0failure@ios_base@std@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0system_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7failure@ios_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0failure@ios_base@std@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??0failure@ios_base@std@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0failure@ios_base@std@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0system_error@std@@QAE@Verror_code@1@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7failure@ios_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
jmp ['___CxxFrameHandler3']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0locale@std@@QAE@ABV01@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx]']
mov ['ecx,', '[edx]']
mov ['edx,', '[eax+4]']
call ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0runtime_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['[ebp+var_14],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
movzx ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z']
jmp ['___CxxFrameHandler3']
endp
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4290']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_4290']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_4290']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
jmp ['___CxxFrameHandler3']
endp
??0system_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0system_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_System_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7system_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0system_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??0system_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0system_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0system_error@std@@QAE@Verror_code@1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7system_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$1 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Yarn@D@std@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$_Yarn@D@std@@AAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$_Yarn@_W@std@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$_Yarn@_W@std@@AAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$ctype@D@std@@MAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$ctype@D@std@@MAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$ctype@D@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$ctype@D@std@@IAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1ctype_base@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$ctype@D@std@@MAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ctype_base@std@@UAE@XZ']
endp
__ehhandler$??1?$ctype@D@std@@MAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$ctype@D@std@@MAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlAttributeA@@UAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlAttributeA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlBaseA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlAttributeA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlAttributeA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlBaseA@@UAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlBaseA@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1TiXmlCommentA@@UAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlCommentA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlCommentA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlCommentA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlCommentA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlCommentA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlDeclarationA@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlDeclarationA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDeclarationA@@6B@']
mov ['[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlDeclarationA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlDeclarationA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlTextA@@UAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlTextA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlTextA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlTextA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlTextA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlTextA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlUnknownA@@UAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlUnknownA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlUnknownA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlUnknownA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlUnknownA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlUnknownA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Facet_base@std@@UAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Facet_base@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Locinfo@std@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Locinfo@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z']
add ['esp,', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__ehhandler$??1_Locinfo@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Locinfo@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_4B9B']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_4BEF']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_System_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??1_System_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1ctype_base@std@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ctype_base@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ctype_base@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1facet@locale@std@@MAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1ctype_base@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1facet@locale@std@@MAE@XZ']
endp
__ehhandler$??1ctype_base@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ctype_base@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1facet@locale@std@@MAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1facet@locale@std@@MAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7facet@locale@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Facet_base@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1facet@locale@std@@MAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Facet_base@std@@UAE@XZ']
endp
__ehhandler$??1facet@locale@std@@MAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1facet@locale@std@@MAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1failure@ios_base@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1failure@ios_base@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1system_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1failure@ios_base@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??1failure@ios_base@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1failure@ios_base@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1locale@std@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4E71']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[edx]']
mov ['ecx,', '[eax]']
mov ['eax,', '[edx+8]']
call ['eax']
push ['eax']
call ['??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1runtime_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1runtime_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1exception@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??1runtime_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1runtime_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
call ['?uncaught_exception@std@@YA_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_4F9B']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1system_error@std@@UAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1system_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_System_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1system_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??1system_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1system_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??2facet@locale@std@@SAPAXIABU_DebugHeapTag_t@2@PADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXIABU_DebugHeapTag_t@std@@PADH@Z']
add ['esp,', '10h']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??3facet@locale@std@@SAXPAX@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z']
add ['esp,', '4']
pop ['ebp']
retn
endp
??3facet@locale@std@@SAXPAXABU_DebugHeapTag_t@2@PADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
pop ['ebp']
retn
endp
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_50DE']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_50E5']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5138']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_5138']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_513F']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_5175']
push ['6A2h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@GMPLOCPK@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Bid@locale@std@@QAEIXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??Bid@locale@std@@QAEIXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_51FA']
push ['0']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_51EB']
mov ['edx,', 'dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA']
add ['edx,', '1']
mov ['dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA,', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', 'dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??Bid@locale@std@@QAEIXZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??Bid@locale@std@@QAEIXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??Bid@locale@std@@QAEIXZ']
jmp ['___CxxFrameHandler3']
endp
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@D@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$ctype@D@std@@MAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Memory],', 'ecx']
mov ['ecx,', '[ebp+Memory]']
call ['??1?$ctype@D@std@@MAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_52D3']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+Memory]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlAttributeA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlAttributeA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_52FF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlBaseA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlBaseA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_532B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlCommentA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlCommentA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5357']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlDeclarationA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlDeclarationA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5383']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlTextA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlTextA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_53AF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlUnknownA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlUnknownA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_53DB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Facet_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Facet_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5407']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5433']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_545F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_548B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_54B7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gctype_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Memory],', 'ecx']
mov ['ecx,', '[ebp+Memory]']
call ['??1ctype_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_54E3']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+Memory]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_550F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gfacet@locale@std@@MAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1facet@locale@std@@MAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_553B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gfailure@ios_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1failure@ios_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5567']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gruntime_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_5593']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gsystem_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1system_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_55BF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?Clear@TiXmlCursorA@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearError@TiXmlDocumentA@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+44h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+70h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Cursor@TiXmlParsingDataA@@QAEABUTiXmlCursorA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?GetChar@TiXmlBaseA@@KAPBDPBDPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Str2],', '0']
jnz ['short', 'loc_574C']
push ['0D2h']
push ['offset', '??_C@_1KG@IIGNAHLC@?$AAc?$AA?3?$AA?2?$AAw?$AAo?$AAr?$AAk?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?2?$AAn?$AAo?$AAt?$AAe?$AAp?$AAa?$AAd?$AA?9?$AAp?$AAl?$AAu?$AAs?$AA?9?$AAp?$AAl?$AAu?$AAs?$AA?9?$AA6@']
push ['offset', '??_C@_13LFIEIAHP@?$AAp?$AA?$AA@']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str2]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
cmp ['edx,', '26h']
jnz ['short', 'loc_576B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Str2]']
push ['ecx']
call ['?GetEntity@TiXmlBaseA@@KAPBDPBDPAD@Z']
add ['esp,', '8']
jmp ['short', 'loc_577B']
jmp ['short', 'loc_577B']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[ebp+Str2]']
mov ['cl,', '[eax]']
mov ['[edx],', 'cl']
mov ['eax,', '[ebp+Str2]']
add ['eax,', '1']
pop ['ebp']
retn
endp
?IsWhiteSpace@TiXmlBaseA@@KA_NH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+C]']
push ['eax']
call ['_isspace']
add ['esp,', '4']
test ['eax,', 'eax']
jnz ['short', 'loc_57A9']
cmp ['[ebp+C],', '0Ah']
jz ['short', 'loc_57A9']
cmp ['[ebp+C],', '0Dh']
jz ['short', 'loc_57A9']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_57B0']
mov ['[ebp+var_4],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Name@TiXmlAttributeA@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SetDocument@TiXmlAttributeA@@QAEXPAVTiXmlDocumentA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+0Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetValue@TiXmlAttributeA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetValue@TiXmlNodeA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?TabSize@TiXmlDocumentA@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+68h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_5854']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jnz ['short', 'loc_5854']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_585B']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Type@TiXmlNodeA@@UBEHXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+10h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Value@TiXmlAttributeA@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jnb ['short', 'loc_590C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_5937']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '1']
jnz ['short', 'loc_598B']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
jmp ['short', 'loc_59A8']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAPADPADID@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_59FD']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_5A4F']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_5A17']
jmp ['short', 'loc_5A4F']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_5A44']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_5A4F']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_5AD2']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_5ABC']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_5B01']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
or ['ecx,', '0FFFFFFFFh']
lock ['xadd', '[eax],', 'ecx']
dec ['ecx']
jnz ['short', 'loc_5B8E']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_5B90']
jmp ['short', 'loc_5B90']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '50h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['loc_5D07']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['loc_5D07']
call ['?_DebugHeapTag_func@std@@YAABU_DebugHeapTag_t@1@XZ']
mov ['[ebp+var_1C],', 'eax']
push ['9A8h']
push ['offset', '??_C@_0EH@EPAENFJM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['18h']
call ['??2facet@locale@std@@SAPAXIABU_DebugHeapTag_t@2@PADH@Z']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_5CD0']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['?c_str@locale@std@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??0_Locinfo@std@@QAE@PBD@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_5CD7']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '1']
jz ['short', 'loc_5D07']
and ['[ebp+var_10],', '0FFFFFFFEh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1_Locinfo@std@@QAE@XZ']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0 proc near
push ['9A8h']
push ['offset', '??_C@_0EH@EPAENFJM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
mov ['eax,', '[ebp-1Ch]']
push ['eax']
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3facet@locale@std@@SAXPAXABU_DebugHeapTag_t@2@PADH@Z']
add ['esp,', '10h']
retn
endp
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN8']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1_Locinfo@std@@QAE@XZ']
retn
endp
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-54h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['[ebp+var_4],', 'ecx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['__Getctype']
add ['esp,', '4']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+0Ch]']
jnb ['short', 'loc_5DE5']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_5DEC']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_5E05']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx+14h]']
test ['edx,', 'edx']
jnz ['short', 'loc_5E0C']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_5E3A']
jmp ['short', 'loc_5E3A']
call ['?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_5E30']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_5E37']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_5E61']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_5E68']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_5F0E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_5F2E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_5F78']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_5F68']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_5F68']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_5F4F']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_5F58']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_5F78']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_5F78']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_5F87']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_5F8E']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Incref@facet@locale@std@@UAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['ecx,', '1']
lock ['xadd', '[eax],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Init_atomic_counter@std@@YAXAAKK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
pop ['ebp']
retn
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_6029']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_6029']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_602F']
xor ['al,', 'al']
jmp ['short', 'loc_6031']
jmp ['short', 'loc_6031']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['loc_61FE']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_60B1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['loc_61E1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?flags@ios_base@std@@QBEHXZ']
and ['eax,', '1']
jz ['loc_61E1']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
add ['esp,', '4']
mov ['[ebp+var_2C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_24]']
call ['??1locale@std@@QAE@XZ']
mov ['[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_6155']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_18],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_28],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_618E']
push ['0']
push ['1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
jmp ['short', 'loc_61B3']
jmp ['short', 'loc_61B1']
lea ['eax,', '[ebp+var_18]']
push ['eax']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
movzx ['ecx,', 'al']
push ['ecx']
push ['48h']
mov ['ecx,', '[ebp+var_2C]']
call ['?is@?$ctype@D@std@@QBE_NFD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_61B1']
jmp ['short', 'loc_61B3']
jmp ['short', 'loc_613B']
jmp ['short', 'loc_61D1']
endp
__catch$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$0 proc near
push ['1']
push ['4']
mov ['eax,', '[ebp-14h]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp-14h]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['eax,', 'offset', '$LN18']
retn
endp
$LN18           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__unwindfunclet$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z$2 proc near
lea ['ecx,', '[ebp-24h]']
jmp ['??1locale@std@@QAE@XZ']
endp
__ehhandler$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z']
jmp ['___CxxFrameHandler3']
endp
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_C]']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_629E']
push ['offset', '??_C@_02LMMGGCAJ@?3?5?$AA@']
lea ['ecx,', '[ebp+arg_C]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['ecx,', '[ebp+arg_4]']
call ['?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['edx,', '[ebp+var_30]']
or ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$2 proc near
mov ['eax,', '[ebp-30h]']
and ['eax,', '1']
jz ['$LN7']
and ['dword', 'ptr', '[ebp-30h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_6382']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_638B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_63BA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_63C3']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6457']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_6427']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_643C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_641A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6522']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?flags@ios_base@std@@QBEHXZ']
and ['eax,', '2']
jz ['short', 'loc_6522']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_6522']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
jmp ['short', 'loc_652A']
endp
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0 proc near
mov ['eax,', 'offset', '$LN9']
retn
endp
$LN9            proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Tidy@?$_Yarn@D@std@@AAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6587']
push ['2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['__free_dbg']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$_Yarn@_W@std@@AAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_65B3']
push ['2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['__free_dbg']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_65D3']
jmp ['short', 'loc_6646']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_6646']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_6625']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$ctype@D@std@@IAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_6687']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_free']
add ['esp,', '4']
jmp ['short', 'loc_66A5']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jge ['short', 'loc_66A5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_free']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_677E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_679A']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
sub ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+Size]']
ja ['short', 'loc_67B2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_680C']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '[ebp+Size]']
mov ['[ebp+var_8],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_680C']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ID@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
sub ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+Size]']
ja ['short', 'loc_683A']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_6885']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6885']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXIID@Z']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['43Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_68F1']
push ['42Ah']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6924']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_6992']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
sub ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+Size]']
ja ['short', 'loc_693D']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_698F']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_698F']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+14h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_69B6']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_69D2']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_69F9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_6A3B']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6A3B']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_6AA3']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_6AD6']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_6B13']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6B10']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAPADPADID@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Size]']
push ['eax']
movsx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memset']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?at@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_6B62']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?c_str@?$_Yarn@D@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6B8F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_6B98']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?c_str@locale@std@@QBEPBDXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_6BCE']
mov ['[ebp+var_8],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
jmp ['short', 'loc_6BDE']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx]']
add ['ecx,', '18h']
call ['?c_str@?$_Yarn@D@std@@QBEPBDXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnz ['short', 'loc_6C2D']
mov ['ecx,', '[ebp+arg_0]']
or ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_6C33']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?clear@ios_base@std@@QAEXH_N@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?clear@ios_base@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '17h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+10h]']
jnz ['short', 'loc_6C74']
jmp ['loc_6D2E']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_6C8A']
push ['0']
push ['0']
call ['__CxxThrowException@8']
jmp ['loc_6D2E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+0Ch]']
and ['edx,', '[ecx+10h]']
and ['edx,', '4']
jz ['short', 'loc_6CC7']
push ['1']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@']
lea ['ecx,', '[ebp+var_30]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__CxxThrowException@8']
jmp ['short', 'loc_6D2E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+10h]']
and ['ecx,', '2']
jz ['short', 'loc_6D04']
push ['1']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@']
lea ['ecx,', '[ebp+var_44]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['eax,', '[ebp+var_44]']
push ['eax']
call ['__CxxThrowException@8']
jmp ['short', 'loc_6D2E']
push ['1']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@']
lea ['ecx,', '[ebp+var_58]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['edx,', '[ebp+var_58]']
push ['edx']
call ['__CxxThrowException@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_6D46']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_6D5D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_6DEC']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_6E01']
jmp ['short', 'loc_6E01']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_narrow@?$ctype@D@std@@MBEDDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0A02h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
push ['0A03h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@D@std@@YAXPADPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?do_tolower@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__Tolower']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9D8h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
jmp ['short', 'loc_6EE0']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_6F05']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['__Tolower']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_6ED7']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_toupper@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__Toupper']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9E6h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
jmp ['short', 'loc_6F60']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_6F85']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['__Toupper']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_6F57']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_widen@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9F4h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
push ['9F5h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@D@std@@YAXPADPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_7013']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_701A']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?eof@?$char_traits@D@std@@SAHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
or ['eax,', '0FFFFFFFFh']
pop ['ebp']
retn
endp
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_7045']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_704C']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_708B']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_708B']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_7092']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_70E6']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_7118']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_7134']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_717A']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_717A']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?flags@ios_base@std@@QBEHXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_7237']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_7228']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_7228']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[edx+4]']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
jmp ['___CxxFrameHandler3']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
push ['1']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_72FB']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_18],', 'eax']
jmp ['loc_73A0']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_18],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_20],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7345']
mov ['eax,', '[ebp+var_1C]']
or ['eax,', '3']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_7374']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '1']
mov ['edx,', '[eax+0Ch]']
adc ['edx,', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[eax+8],', 'ecx']
mov ['[eax+0Ch],', 'edx']
jmp ['short', 'loc_7390']
endp
__catch$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$0 proc near
push ['1']
push ['4']
mov ['ecx,', '[ebp-14h]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '[edx+4]']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['eax,', 'offset', '$LN12']
retn
endp
$LN12           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0']
endp
__unwindfunclet$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$2 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
jmp ['___CxxFrameHandler3']
endp
?getloc@ios_base@std@@QBE?AVlocale@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0locale@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?getloc@ios_base@std@@QBE?AVlocale@2@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1locale@std@@QAE@XZ']
retn
endp
__ehhandler$?getloc@ios_base@std@@QBE?AVlocale@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?good@ios_base@std@@QBE_NXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?rdstate@ios_base@std@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_74BA']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_74C1']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?iostream_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
pop ['ebp']
retn
endp
?is@?$ctype@D@std@@QBE_NFD@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
movsx ['eax,', 'word', 'ptr', '[edx+eax*2]']
movsx ['ecx,', '[ebp+arg_0]']
and ['eax,', 'ecx']
jz ['short', 'loc_7510']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_7517']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_754B']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_755A']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
call ['?iostream_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_code@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_75E6']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_75EF']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_7644']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_764B']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_7709']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_772C']
jmp ['short', 'loc_772C']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_77C0']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_77C7']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?value@error_code@std@@QBEHXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
or ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN4']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_78EA']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_7901']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '1Ch']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['[ebp+var_18],', '0']
push ['1']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@AAV12@_N@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_79B4']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_7A28']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_18],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_20],', 'eax']
lea ['eax,', '[ebp+var_18]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_79FC']
mov ['eax,', '[ebp+var_1C]']
or ['eax,', '1']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_7A18']
endp
__catch$?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$0 proc near
push ['1']
push ['4']
mov ['ecx,', '[ebp-14h]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '[edx+4]']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['eax,', 'offset', '$LN11']
retn
endp
$LN11           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0']
endp
__unwindfunclet$?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ$2 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?peek@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ']
jmp ['___CxxFrameHandler3']
endp
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+34h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+38h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?rdstate@ios_base@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_7B07']
jg ['short', 'loc_7AF1']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_7B07']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_7B17']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_7BA2']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?rdstate@ios_base@std@@QBEHXZ']
or ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jl ['short', 'loc_7BE3']
jg ['short', 'loc_7BCD']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_7BE3']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_7BF3']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jl ['short', 'loc_7C4B']
jg ['short', 'loc_7C35']
cmp ['[ebp+var_1C],', '1']
jbe ['short', 'loc_7C4B']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gnpreinc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_7C90']
mov ['ecx,', '[ebp+var_4]']
call ['?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_10],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_14],', 'eax']
lea ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_7C7F']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_7C8A']
mov ['ecx,', '[ebp+var_4]']
call ['?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?to_char_type@?$char_traits@D@std@@SADABH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax]']
pop ['ebp']
retn
endp
?to_int_type@?$char_traits@D@std@@SAHABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp

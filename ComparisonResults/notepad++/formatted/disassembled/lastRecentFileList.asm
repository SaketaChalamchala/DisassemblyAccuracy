?initMenu@LastRecentFileList@@QAEXPAUHMENU__@@HHPAVAccelerator@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_10]']
test ['eax,', 'eax']
jz ['short', 'loc_F4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+24h],', 'edx']
call ['dword', 'ptr', 'ds:__imp__CreatePopupMenu@0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+28h],', 'eax']
jmp ['short', 'loc_107']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+28h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+30h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+2Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+14h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '4E4h']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_13E']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1Eh']
jnb ['short', 'loc_150']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[ecx+34h],', '1']
jmp ['short', 'loc_135']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?switchMode@LastRecentFileList@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
push ['0']
push ['0A03Dh']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['0']
push ['0A438h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['0']
push ['0A439h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_1B3']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ecx+1Ch]']
jge ['short', 'loc_1DE']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
jmp ['short', 'loc_1AA']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+24h],', '0']
jnz ['short', 'loc_258']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jle ['short', 'loc_222']
push ['400h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['400h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
mov ['[edx+24h],', 'ecx']
call ['dword', 'ptr', 'ds:__imp__CreatePopupMenu@0']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+28h],', 'eax']
push ['400h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
jmp ['short', 'loc_2B6']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '0']
jle ['short', 'loc_293']
push ['400h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['400h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DestroyMenu@4']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+28h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+24h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+52h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?updateMenu@LastRecentFileList@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?updateMenu@LastRecentFileList@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A4h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_A0],', 'ecx']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_B0],', 'eax']
mov ['eax,', '[ebp+var_A0]']
movzx ['ecx,', 'byte', 'ptr', '[eax+52h]']
test ['ecx,', 'ecx']
jnz ['loc_5D7']
mov ['edx,', '[ebp+var_A0]']
cmp ['dword', 'ptr', '[edx+1Ch],', '0']
jle ['loc_5D7']
mov ['ecx,', '[ebp+var_B0]']
call ['?getNativeLangSpeaker@NppParameters@@QAEPAVNativeLangSpeaker@@XZ']
mov ['[ebp+var_AC],', 'eax']
push ['offset', '$SG124881']
lea ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_AC]']
call ['?getSpecialMenuEntryName@NativeLangSpeaker@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PBD@Z']
mov ['[ebp+var_4],', '0']
push ['0A03Dh']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNativeLangMenuString@NativeLangSpeaker@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
push ['0A438h']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNativeLangMenuString@NativeLangSpeaker@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['0A439h']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNativeLangMenuString@NativeLangSpeaker@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
push ['offset', '$SG124905']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3C3']
push ['offset', '$SG124906']
lea ['ecx,', '[ebp+var_48]']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
push ['offset', '$SG124924']
lea ['eax,', '[ebp+var_80]']
push ['eax']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3E8']
push ['offset', '$SG124925']
lea ['ecx,', '[ebp+var_80]']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
push ['offset', '$SG124943']
lea ['edx,', '[ebp+var_64]']
push ['edx']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_40D']
push ['offset', '$SG124944']
lea ['ecx,', '[ebp+var_64]']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
push ['offset', '$SG124962']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_432']
push ['offset', '$SG124963']
lea ['ecx,', '[ebp+var_2C]']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['ecx,', '[ebp+var_A0]']
call ['?isSubMenuMode@LastRecentFileList@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_467']
push ['0']
push ['0FFFFFFFFh']
push ['400h']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
lea ['ecx,', '[ebp+var_80]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0A03Dh']
push ['400h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
lea ['ecx,', '[ebp+var_64]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0A438h']
push ['400h']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0A439h']
push ['400h']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+2Ch]']
add ['edx,', '3']
push ['edx']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
push ['0']
push ['0FFFFFFFFh']
push ['400h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
mov ['eax,', '[ebp+var_A0]']
mov ['byte', 'ptr', '[eax+52h],', '1']
mov ['ecx,', '[ebp+var_A0]']
call ['?isSubMenuMode@LastRecentFileList@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_591']
lea ['ecx,', '[ebp+var_48]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+28h]']
push ['eax']
push ['410h']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+2Ch]']
push ['edx']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
push ['0']
push ['0FFFFFFFFh']
push ['400h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+14h]']
call ['?updateFullMenu@Accelerator@@QAEXXZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_6F3']
mov ['ecx,', '[ebp+var_A0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+52h]']
test ['edx,', 'edx']
jz ['loc_6F3']
mov ['eax,', '[ebp+var_A0]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['loc_6F3']
push ['400h']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+2Ch]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['0']
push ['0A439h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['0']
push ['0A438h']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['0']
push ['0A03Dh']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['400h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['eax,', '[ebp+var_A0]']
mov ['byte', 'ptr', '[eax+52h],', '0']
mov ['ecx,', '[ebp+var_A0]']
call ['?isSubMenuMode@LastRecentFileList@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_6F3']
push ['400h']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+2Ch]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+24h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['400h']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+2Ch]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+24h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
push ['400h']
push ['0']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ecx+28h]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['[ebp+var_A8],', '0']
jmp ['short', 'loc_70E']
mov ['eax,', '[ebp+var_A8]']
add ['eax,', '1']
mov ['[ebp+var_A8],', 'eax']
mov ['ecx,', '[ebp+var_A0]']
mov ['edx,', '[ebp+var_A8]']
cmp ['edx,', '[ecx+1Ch]']
jge ['short', 'loc_748']
push ['0']
mov ['eax,', '[ebp+var_A8]']
push ['eax']
mov ['ecx,', '[ebp+var_A0]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
jmp ['short', 'loc_6FF']
mov ['[ebp+var_A4],', '0']
jmp ['short', 'loc_763']
mov ['ecx,', '[ebp+var_A4]']
add ['ecx,', '1']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[ebp+var_A4]']
cmp ['eax,', '[edx+1Ch]']
jge ['loc_814']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['ecx,', '[ebp+var_A0]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
add ['eax,', '4']
push ['eax']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
mov ['ecx,', '[ebp+var_B0]']
call ['?getRecentFileCustomLength@NppParameters@@QBEHXZ']
push ['eax']
lea ['eax,', '[ebp+var_9C]']
push ['eax']
call ['?BuildMenuFileName@@YA?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@HIABV12@@Z']
add ['esp,', '10h']
mov ['[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_9C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['ecx,', '[ebp+var_A0]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['edx,', '[eax]']
push ['edx']
push ['400h']
mov ['eax,', '[ebp+var_A0]']
mov ['ecx,', '[eax+2Ch]']
add ['ecx,', '[ebp+var_A4]']
push ['ecx']
mov ['edx,', '[ebp+var_A0]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_9C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_754']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?add@LastRecentFileList@@QAEXPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?add@LastRecentFileList@@QAEXPB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['eax,', '[ebp+var_34]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_87B']
mov ['ecx,', '[ebp+var_34]']
movzx ['edx,', 'byte', 'ptr', '[ecx+53h]']
test ['edx,', 'edx']
jz ['short', 'loc_880']
jmp ['loc_916']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
call ['??0RecentItem@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+var_34]']
call ['?find@LastRecentFileList@@AAEHPB_W@Z']
mov ['[ebp+var_38],', 'eax']
cmp ['[ebp+var_38],', '0FFFFFFFFh']
jz ['short', 'loc_8B4']
mov ['edx,', '[ebp+var_38]']
push ['edx']
mov ['ecx,', '[ebp+var_34]']
call ['?remove@LastRecentFileList@@QAEXH@Z']
mov ['eax,', '[ebp+var_34]']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[eax+1Ch]']
cmp ['edx,', '[ecx+18h]']
jnz ['short', 'loc_8D9']
mov ['ecx,', '[ebp+var_34]']
call ['?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ']
mov ['eax,', '[eax]']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_34]']
call ['?pop_back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ']
jmp ['short', 'loc_8F3']
mov ['ecx,', '[ebp+var_34]']
call ['?popFirstAvailableID@LastRecentFileList@@AAEHXZ']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['edx,', '[ecx+1Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_34]']
mov ['[eax+1Ch],', 'edx']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_34]']
call ['?push_front@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXABURecentItem@@@Z']
mov ['ecx,', '[ebp+var_34]']
call ['?updateMenu@LastRecentFileList@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_30]']
call ['??1RecentItem@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?remove@LastRecentFileList@@QAEXPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?find@LastRecentFileList@@AAEHPB_W@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0FFFFFFFFh']
jz ['short', 'loc_966']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?remove@LastRecentFileList@@QAEXH@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?remove@LastRecentFileList@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?remove@LastRecentFileList@@QAEXH@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '48h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jz ['short', 'loc_9A8']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+53h]']
test ['edx,', 'edx']
jz ['short', 'loc_9AD']
jmp ['loc_AA1']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
jle ['loc_AA1']
mov ['ecx,', '[ebp+var_10]']
call ['?size@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ']
cmp ['[ebp+arg_0],', 'eax']
jge ['loc_AA1']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+28h]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?setAvailable@LastRecentFileList@@AAEXH@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_28],', 'esp']
mov ['edx,', '[ebp+var_20]']
push ['edx']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_30],', 'eax']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_54]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+1Ch]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?updateMenu@LastRecentFileList@@QAEXXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?clear@LastRecentFileList@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?clear@LastRecentFileList@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '4Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+1Ch],', '0']
jnz ['short', 'loc_AF2']
jmp ['loc_BEC']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+1Ch]']
sub ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_B09']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jl ['loc_BDA']
push ['0']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['edx,', '[eax]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['eax,', '[eax]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?setAvailable@LastRecentFileList@@AAEXH@Z']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
lea ['edx,', '[ebp+var_4C]']
push ['edx']
lea ['eax,', '[ebp+var_58]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_1C]']
call ['??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_2C],', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_30],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['edx,', '[ebp+var_40]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_34],', 'eax']
lea ['ecx,', '[ebp+var_40]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_4C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_58]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['loc_B00']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+1Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?updateMenu@LastRecentFileList@@QAEXXZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getItem@LastRecentFileList@@QAEAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_C17']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+1Ch]']
jge ['short', 'loc_C39']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['ecx,', '[eax]']
cmp ['ecx,', '[ebp+arg_0]']
jnz ['short', 'loc_C37']
jmp ['short', 'loc_C39']
jmp ['short', 'loc_C0E']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[edx+1Ch]']
jnz ['short', 'loc_C4B']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getIndex@LastRecentFileList@@QAEAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?setUserMaxNbLRF@LastRecentFileList@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+1Ch]']
cmp ['ecx,', '[eax+18h]']
jle ['short', 'loc_D24']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+1Ch]']
sub ['ecx,', '[eax+18h]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_8],', '0']
jle ['short', 'loc_D10']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ']
mov ['edx,', '[eax]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RemoveMenu@12']
mov ['ecx,', '[ebp+var_4]']
call ['?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ']
mov ['edx,', '[eax]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?setAvailable@LastRecentFileList@@AAEXH@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?pop_back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+1Ch],', 'edx']
jmp ['short', 'loc_CBB']
mov ['ecx,', '[ebp+var_4]']
call ['?updateMenu@LastRecentFileList@@QAEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
mov ['[ecx+1Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?saveLRFL@LastRecentFileList@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['ecx,', '[ebp+var_C]']
call ['?writeRecentFileHistorySettings@NppParameters@@QBE_NH@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_D91']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+1Ch]']
sub ['ecx,', '1']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_D6A']
mov ['edx,', '[ebp+var_4]']
sub ['edx,', '1']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jl ['short', 'loc_D91']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
call ['?writeHistory@NppParameters@@QAE_NPB_W@Z']
jmp ['short', 'loc_D61']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?find@LastRecentFileList@@AAEHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_DB7']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ecx+1Ch]']
jge ['short', 'loc_DEE']
mov ['eax,', '[ebp+lpString2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__lstrcmpiW@8']
test ['eax,', 'eax']
jnz ['short', 'loc_DEC']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_DF1']
jmp ['short', 'loc_DAE']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?popFirstAvailableID@LastRecentFileList@@AAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_E17']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '1Eh']
jge ['short', 'loc_E42']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+34h]']
test ['edx,', 'edx']
jz ['short', 'loc_E40']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+34h],', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '[ecx+30h]']
jmp ['short', 'loc_E44']
jmp ['short', 'loc_E0E']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?setAvailable@LastRecentFileList@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
sub ['ecx,', '[eax+30h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '[ebp+var_8]']
mov ['byte', 'ptr', '[edx+34h],', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?updateMenu@LastRecentFileList@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?updateMenu@LastRecentFileList@@QAEXXZ$1 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?updateMenu@LastRecentFileList@@QAEXXZ$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?updateMenu@LastRecentFileList@@QAEXXZ$3 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?updateMenu@LastRecentFileList@@QAEXXZ$4 proc near
lea ['ecx,', '[ebp-9Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?updateMenu@LastRecentFileList@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0A8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?updateMenu@LastRecentFileList@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?add@LastRecentFileList@@QAEXPB_W@Z$0 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1RecentItem@@QAE@XZ']
endp
__ehhandler$?add@LastRecentFileList@@QAEXPB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?add@LastRecentFileList@@QAEXPB_W@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?remove@LastRecentFileList@@QAEXH@Z$0 proc near
lea ['ecx,', '[ebp-54h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?remove@LastRecentFileList@@QAEXH@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?remove@LastRecentFileList@@QAEXH@Z$2 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?remove@LastRecentFileList@@QAEXH@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?remove@LastRecentFileList@@QAEXH@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?clear@LastRecentFileList@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-58h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?clear@LastRecentFileList@@QAEXXZ$1 proc near
lea ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?clear@LastRecentFileList@@QAEXXZ$2 proc near
mov ['ecx,', '[ebp-2Ch]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?clear@LastRecentFileList@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-50h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?clear@LastRecentFileList@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
??$?0U?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??$?0URecentItem@@@?$allocator@PAURecentItem@@@std@@QAE@ABV?$allocator@URecentItem@@@1@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$?0URecentItem@@@?$allocator@PAURecentItem@@@std@@QAE@ABV?$allocator@URecentItem@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_2]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
push ['eax']
call ['??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_FD1']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_FD8']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['al,', '1']
pop ['ebp']
retn
endp
??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_100C']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_1013']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_102F']
jmp ['short', 'loc_104F']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_104A']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_104F']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@PAURecentItem@@@std@@YAPAPAURecentItem@@IPAPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_106B']
jmp ['short', 'loc_1091']
cmp ['[ebp+arg_0],', '3FFFFFFFh']
ja ['short', 'loc_108C']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '2']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1091']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@URecentItem@@@std@@YAPAURecentItem@@IPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_10AB']
jmp ['short', 'loc_10D1']
cmp ['[ebp+arg_0],', '7FFFFFFh']
ja ['short', 'loc_10CC']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '5']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_10D1']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_10EB']
jmp ['short', 'loc_1111']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_110C']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1111']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@_W@std@@YAPA_WIPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_112B']
jmp ['short', 'loc_1150']
cmp ['[ebp+arg_0],', '7FFFFFFFh']
ja ['short', 'loc_114B']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1150']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1176']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@PAURecentItem@@@std@@YAXPAPAURecentItem@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1196']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXAAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_11BE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAPAURecentItem@@@std@@YAXPAPAURecentItem@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_1210']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@PAURecentItem@@@std@@YAXPAPAURecentItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@PAURecentItem@@@std@@YAXPAPAURecentItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1210']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
call ['??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_12A0']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_pointer@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXAAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['??$_Debug_pointer@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXAAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+arg_C]']
call ['??M?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_12A0']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Debug_range@PAPAURecentItem@@@std@@YAXPAPAURecentItem@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAPAURecentItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAURecentItem@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAPAURecentItem@@@std@@YAXPAPAURecentItem@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_D]']
push ['ecx']
call ['??$_Iter_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_1C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Debug_range2@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '24h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z$2 proc near
mov ['ecx,', '[ebp-1Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@0AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@PAURecentItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAURecentItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@0AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@0AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??$_Fill_n@PAPAURecentItem@@IPAU1@@std@@YAPAPAURecentItem@@PAPAU1@IABQAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_147B']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '4']
mov ['[ebp+arg_0],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_148D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+arg_8]']
mov ['ecx,', '[eax]']
mov ['[edx],', 'ecx']
jmp ['short', 'loc_1469']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Iter_cat@PAPAURecentItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAPAURecentItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_4],', '3']
lea ['eax,', '[ebp+arg_1C]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_D],', 'al']
movzx ['edx,', '[ebp+var_D]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['eax,', '[ebp+arg_1C]']
push ['eax']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_2C],', 'esp']
lea ['edx,', '[ebp+arg_10]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_34],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
call ['??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_1C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$0 proc near
lea ['ecx,', '[ebp+24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$1 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$2 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$4 proc near
mov ['ecx,', '[ebp-2Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$5 proc near
mov ['ecx,', '[ebp-34h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$6 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN10_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '3']
jmp ['short', 'loc_165B']
lea ['ecx,', '[ebp+arg_1C]']
call ['??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
lea ['ecx,', '[ebp+arg_4]']
call ['??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
call ['??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1691']
lea ['ecx,', '[ebp+arg_4]']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
push ['eax']
call ['??$move@AAURecentItem@@@std@@YA$$QAURecentItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
lea ['ecx,', '[ebp+arg_1C]']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
mov ['ecx,', 'eax']
call ['??4RecentItem@@QAEAAU0@ABU0@@Z']
jmp ['short', 'loc_164B']
lea ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_1C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$2 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$3 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN10_1']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_4],', '3']
lea ['eax,', '[ebp+arg_1C]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_D],', 'al']
movzx ['edx,', '[ebp+var_D]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['eax,', '[ebp+arg_1C]']
push ['eax']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_2C],', 'esp']
lea ['edx,', '[ebp+arg_10]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_34],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
call ['??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '2Ch']
mov ['[ebp+var_3C],', 'eax']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_1C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$0 proc near
lea ['ecx,', '[ebp+24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$1 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$2 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$4 proc near
mov ['ecx,', '[ebp-2Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$5 proc near
mov ['ecx,', '[ebp-34h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z$6 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN10']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '3']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
call ['??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_18F9']
lea ['ecx,', '[ebp+arg_10]']
call ['??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
mov ['ecx,', 'eax']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
push ['eax']
call ['??$move@AAURecentItem@@@std@@YA$$QAURecentItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
lea ['ecx,', '[ebp+arg_1C]']
call ['??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
mov ['ecx,', 'eax']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
mov ['ecx,', 'eax']
call ['??4RecentItem@@QAEAAU0@ABU0@@Z']
jmp ['short', 'loc_18B5']
lea ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_1C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+24h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$2 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z$3 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN9']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Ptr_cat@PAURecentItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAURecentItem@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Rechecked@PAPAURecentItem@@PAPAU1@@std@@YAAAPAPAURecentItem@@AAPAPAU1@PAPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Uninit_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Ptr_cat@PAURecentItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAURecentItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Uninit_copy@PAURecentItem@@PAU1@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_copy@PAURecentItem@@PAU1@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@U_Scalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['192h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PAPAURecentItem@@@std@@YAXPAPAURecentItem@@0PB_WI@Z']
add ['esp,', '10h']
push ['193h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@PAURecentItem@@@std@@YAXPAPAURecentItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
sar ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
shl ['ecx,', '2']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
lea ['eax,', '[eax+ecx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_def_fill_n@PAURecentItem@@IPAU1@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Fill_n@PAPAURecentItem@@IPAU1@@std@@YAPAPAURecentItem@@PAPAU1@IABQAU1@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninitialized_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAPAURecentItem@@PAPAU1@@std@@YAAAPAPAURecentItem@@AAPAPAU1@PAPAU1@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Uninitialized_default_fill_n@PAPAURecentItem@@IU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@PAURecentItem@@PAU1@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAURecentItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Uninit_def_fill_n@PAURecentItem@@IPAU1@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@0U_Scalar_ptr_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Val_type@PAPAURecentItem@@@std@@YAPAPAURecentItem@@PAPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@_W@std@@YAPA_WAA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1BB1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_1BB8']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1CB1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_1CB8']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
pop ['ebp']
retn
endp
??$construct@URecentItem@@ABU1@@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEXPAURecentItem@@ABU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@ABURecentItem@@@std@@YAABURecentItem@@ABU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@URecentItem@@ABU1@@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAXAAV?$allocator@URecentItem@@@1@PAURecentItem@@ABU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@URecentItem@@ABU1@@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAXAAV?$allocator@URecentItem@@@1@PAURecentItem@@ABU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@ABURecentItem@@@std@@YAABURecentItem@@ABU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1DD7']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_1DDE']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z']
pop ['ebp']
retn
endp
??$destroy@URecentItem@@@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEXPAURecentItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@URecentItem@@@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAXAAV?$allocator@URecentItem@@@1@PAURecentItem@@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@URecentItem@@@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??_GRecentItem@@QAEPAXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@URecentItem@@@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAXAAV?$allocator@URecentItem@@@1@PAURecentItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@URecentItem@@@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@ABURecentItem@@@std@@YAABURecentItem@@ABU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$move@AAURecentItem@@@std@@YA$$QAURecentItem@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@2@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@URecentItem@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@_W@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@URecentItem@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@_W@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@_W@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
lea ['ecx,', '[ebp+var_E]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['edx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@_W@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??0RecentItem@@QAE@ABU0@@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RecentItem@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0RecentItem@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0RecentItem@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RecentItem@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0RecentItem@@QAE@PB_W@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0RecentItem@@QAE@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0RecentItem@@QAE@PB_W@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0RecentItem@@QAE@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0RecentItem@@QAE@PB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iterator_base12@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Iterator_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1RecentItem@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1RecentItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1RecentItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1RecentItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1RecentItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iterator_base12@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??1_Iterator_base12@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_2FCF']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
lea ['edx,', '[ebp+var_2]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
call ['??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2FC3']
xor ['ecx,', 'ecx']
jz ['short', 'loc_2FC3']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['edx,', '[ebp+var_3]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4RecentItem@@QAEAAU0@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_3056']
jmp ['short', 'loc_3098']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3070']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['short', 'loc_3098']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnz ['short', 'loc_30FC']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_3103']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_3126']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_312D']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_3180']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_3180']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_3187']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??9?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_31B9']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_31C0']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEABURecentItem@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3208']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
jb ['short', 'loc_3208']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+var_8]']
cmp ['ecx,', '[eax+8]']
ja ['short', 'loc_3270']
push ['14Ah']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EE@INPCGGNP@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb?$AAl@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['ecx,', 'ecx']
jz ['short', 'loc_322C']
xor ['edx,', 'edx']
jnz ['short', 'loc_3252']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['14Bh']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_3252']
int ['3']
push ['0']
push ['14Bh']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OI@NHIMBGBK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAq?$AAu?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getblock@?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@QBEII@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+8]']
xor ['edx,', 'edx']
mov ['ecx,', '1']
div ['ecx']
mov ['[ebp+var_C],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_C]']
shl ['ecx,', '5']
mov ['edx,', '[ebp+var_10]']
add ['ecx,', '[eax+edx*4]']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??D?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEABURecentItem@@XZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_32EE']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+var_4]']
cmp ['ecx,', '[eax+8]']
ja ['short', 'loc_3356']
push ['167h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EC@CEAHEOFL@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['ecx,', 'ecx']
jz ['short', 'loc_3312']
xor ['edx,', 'edx']
jnz ['short', 'loc_3338']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['168h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_3338']
int ['3']
push ['0']
push ['168h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OK@PIJGGDJM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAq?$AAu?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+8]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??E?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??E?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_33AC']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+8]']
cmp ['edx,', '[ecx+0Ch]']
ja ['short', 'loc_3414']
push ['184h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EC@IJLEGPJO@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl?$AAe@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_33D0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_33F6']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['185h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_33F6']
int ['3']
push ['0']
push ['185h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OK@LKENPFN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAq?$AAu?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??F?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??F?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
ja ['short', 'loc_3478']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+8]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_3489']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+8]']
neg ['eax']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5_2']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
jmp ['___CxxFrameHandler3']
endp
??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??G?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
jmp ['___CxxFrameHandler3']
endp
??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5_1']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
jmp ['___CxxFrameHandler3']
endp
??M?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_3710']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_3717']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3764']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
cmp ['ecx,', '[edx+0Ch]']
jb ['short', 'loc_3764']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_8]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
add ['edx,', '[ebp+arg_0]']
cmp ['ecx,', 'edx']
jnb ['short', 'loc_37CC']
push ['1A1h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EK@DEGNOCIK@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_3788']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_37AE']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['1A2h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_37AE']
int ['3']
push ['0']
push ['1A2h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OK@INOEGLNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAq?$AAu?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Z?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
neg ['eax']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??Y?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GRecentItem@@QAEPAXI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1RecentItem@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_3843']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_386F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_389B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_38C7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_38F3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_3A48']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
jmp ['short', 'loc_3A9F']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_3A9F']
push ['3']
lea ['ecx,', '[ebp+var_1C]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Clrcont@_Iterator_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Compat@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEXABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3BB7']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
cmp ['[ebp+var_4],', 'eax']
jz ['short', 'loc_3C1F']
push ['1F5h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DK@CNDLFKCJ@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@']
test ['eax,', 'eax']
jz ['short', 'loc_3BDB']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_3C01']
push ['offset', '??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['1F6h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_3C01']
int ['3']
push ['0']
push ['1F6h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OC@KALAPKNE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAq?$AAu?$AAe?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_3C75']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3CC7']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_3C8F']
jmp ['short', 'loc_3CC7']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_3CBC']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3CC7']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3D4A']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_3D34']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_3D79']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '7']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_3E35']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3E87']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_3E4F']
jmp ['short', 'loc_3E87']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_3E7C']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_3E87']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3F0A']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_3EF4']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_3F39']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+14h],', 'edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getblock@?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@QBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '1']
and ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_411E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4128']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_414A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_4155']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_418E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_41AE']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_41F8']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_41E8']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_41E8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_41CF']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_41D8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_41F8']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_41F8']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_4207']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_420E']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_4236']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_4256']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['short', 'loc_42A0']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_4290']
cmp ['[ebp+arg_0],', '8']
jnb ['short', 'loc_4290']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_4277']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_4280']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_42A0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_42A0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_42AF']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_42B6']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Growmap@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$?0U?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAE@ABU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@1@@Z']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+8],', '0']
jbe ['short', 'loc_42F2']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_42F9']
mov ['[ebp+var_1C],', '1']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_4313']
cmp ['[ebp+var_14],', '8']
jnb ['short', 'loc_4335']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ']
sub ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+var_14]']
jnb ['short', 'loc_432B']
mov ['ecx,', '[ebp+var_8]']
call ['?_Xlen@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_14]']
shl ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_42FF']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '[edx+8]']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAEPAPAURecentItem@@I@Z']
mov ['[ebp+var_18],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_18]']
lea ['ecx,', '[eax+edx*4]']
mov ['[ebp+var_C],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
lea ['edx,', '[ecx+edx*4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_10]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['??$_Uninitialized_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_43F7']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[edx+eax*4]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
call ['??$_Uninitialized_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
sub ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['??$_Uninitialized_default_fill_n@PAPAURecentItem@@IU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
push ['eax']
call ['??$_Uninitialized_default_fill_n@PAPAURecentItem@@IU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_445C']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$_Uninitialized_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '10h']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_10]']
lea ['edx,', '[eax+ecx*4]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
push ['eax']
call ['??$_Uninitialized_copy@PAPAURecentItem@@PAPAU1@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAPAPAURecentItem@@PAPAU1@00AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
call ['??$_Uninitialized_default_fill_n@PAPAURecentItem@@IU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@IAAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
lea ['eax,', '[edx+eax*4]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_10]']
lea ['ecx,', '[edx+eax*4]']
push ['ecx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@@std@@YAXPAPAURecentItem@@0AAU?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[edx+4],', '0']
jz ['short', 'loc_44A4']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAEXPAPAURecentItem@@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_18]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_44F1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_44F1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_44F7']
xor ['al,', 'al']
jmp ['short', 'loc_44F9']
jmp ['short', 'loc_44F9']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_4530']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_4530']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_4536']
xor ['al,', 'al']
jmp ['short', 'loc_4538']
jmp ['short', 'loc_4538']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$0 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_4612']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_461B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_464A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_4653']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_4682']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_468B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_46BA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_46C3']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_4757']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_4727']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_473C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_471A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_me@_Iterator_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_47FA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_47C7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_8]']
jz ['short', 'loc_47C7']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_47A8']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_47E6']
push ['0C9h']
push ['offset', '??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+var_14]']
add ['ecx,', '[edx+10h]']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
cmp ['ecx,', 'eax']
ja ['short', 'loc_4847']
mov ['[ebp+var_18],', '0FFFFFFFFh']
jmp ['short', 'loc_484D']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_4865']
mov ['[ebp+arg_0],', '0']
push ['3']
lea ['ecx,', '[ebp+var_20]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_48D5']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_48D5']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
cmp ['edx,', '[ebp+arg_0]']
jb ['short', 'loc_48A9']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ecx+8]']
jnb ['short', 'loc_48B8']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_48D3']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_4887']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Setcont@?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAEXPBV?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_494B']
jmp ['short', 'loc_49BE']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_49BE']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_499D']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_49EF']
jmp ['short', 'loc_4A62']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '8']
jb ['short', 'loc_4A62']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_4A41']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BC@KBDMBKEH@deque?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BL@KOKKEGGO@invalid?5deque?$DMT?$DO?5subscript?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAEPAPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@PAURecentItem@@@std@@QAEPAPAURecentItem@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@URecentItem@@@std@@QAEPAURecentItem@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@_W@std@@QAEPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@PAURecentItem@@@std@@QAEPAPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@PAURecentItem@@@std@@YAPAPAURecentItem@@IPAPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@URecentItem@@@std@@QAEPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@URecentItem@@@std@@YAPAURecentItem@@IPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@_W@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@_W@std@@YAPA_WIPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_4C2A']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_4C46']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4C6D']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_4CAF']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4CAF']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_4D17']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4D4A']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_4D87']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4D84']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_4DD2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_4DEE']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_4E15']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_4E5A']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_4E5A']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_4EC3']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4EF8']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_4F35']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_4F32']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
pop ['ebp']
retn
endp
?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+10h]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_4F9B']
mov ['ecx,', '[ebp+var_10]']
call ['?_Xran@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_20]']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z$0 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?at@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@I@Z']
jmp ['___CxxFrameHandler3']
endp
?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['1']
lea ['eax,', '[ebp+var_30]']
push ['eax']
lea ['ecx,', '[ebp+var_3C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_20]']
call ['??D?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEAAURecentItem@@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_30]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ$0 proc near
lea ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ$1 proc near
lea ['ecx,', '[ebp-30h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-34h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEAAURecentItem@@XZ']
jmp ['___CxxFrameHandler3']
endp
?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_51FD']
push ['87Dh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_5210']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_522A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_523A']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_5240']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?compare@?$char_traits@_W@std@@SAHPB_W0I@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_5270']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_52A5']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_5281']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_529F']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_C]']
jnz ['short', 'loc_5292']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_5299']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['86Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_530B']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_5322']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_wmemcmp']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['20h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_5383']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0RecentItem@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_538A']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?construct@?$allocator@URecentItem@@@std@@QAEXPAURecentItem@@ABU3@@Z']
jmp ['___CxxFrameHandler3']
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_53E6']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_53FD']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_5416']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_542D']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@PAURecentItem@@@std@@@std@@QAEXPAPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@PAURecentItem@@@std@@QAEXPAPAURecentItem@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@PAURecentItem@@@std@@QAEXPAPAURecentItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_5534']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_5549']
jmp ['short', 'loc_5549']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?empty@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_558B']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_5592']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_10]']
add ['edx,', '[eax+10h]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@IPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_5673']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_5673']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_567A']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_56CE']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_5700']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_571C']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_5762']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_5762']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_5786']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_57B8']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_57D4']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
jmp ['short', 'loc_5820']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_5820']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Dst]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '13Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_D0],', 'esp']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_58],', 'eax']
mov ['ecx,', '[ebp+var_58]']
mov ['[ebp+var_98],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['edx,', '[ebp+var_34]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
call ['?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_D8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_EC],', 'esp']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
mov ['[ebp+var_A4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?_Make_iter@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_DC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['eax,', '[ebp+var_34]']
push ['eax']
lea ['ecx,', '[ebp+var_44]']
call ['??M?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['loc_5986']
lea ['edx,', '[ebp+var_13C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_94],', 'eax']
mov ['eax,', '[ebp+var_94]']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_50]']
push ['edx']
lea ['ecx,', '[ebp+var_34]']
call ['??M?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_5986']
lea ['ecx,', '[ebp+var_44]']
push ['ecx']
lea ['edx,', '[ebp+var_100]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_90],', 'eax']
mov ['eax,', '[ebp+var_90]']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '2']
mov ['[ebp+var_14],', 'ecx']
mov ['ecx,', '[ebp+var_48]']
call ['??M?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_5986']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_598D']
mov ['[ebp+var_24],', '1']
mov ['al,', 'byte', 'ptr', '[ebp+var_24]']
mov ['[ebp+var_1B],', 'al']
mov ['[ebp+var_4],', '7']
mov ['ecx,', '[ebp+var_14]']
and ['ecx,', '2']
jz ['short', 'loc_59B1']
and ['[ebp+var_14],', '0FFFFFFFDh']
lea ['ecx,', '[ebp+var_100]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '6']
mov ['edx,', '[ebp+var_14]']
and ['edx,', '1']
jz ['short', 'loc_59CF']
and ['[ebp+var_14],', '0FFFFFFFEh']
lea ['ecx,', '[ebp+var_13C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
movzx ['eax,', '[ebp+var_1B]']
test ['eax,', 'eax']
jz ['short', 'loc_59EE']
push ['648h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EG@IIKPBBHP@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa?$AAn@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
push ['649h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_AC],', 'esp']
lea ['edx,', '[ebp+var_44]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_78],', 'eax']
mov ['eax,', '[ebp+var_78]']
mov ['[ebp+var_F4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_B4],', 'esp']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_60],', 'eax']
mov ['eax,', '[ebp+var_60]']
mov ['[ebp+var_F0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
call ['??$_Debug_range@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@@std@@YAXV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@0PB_WI@Z']
add ['esp,', '20h']
lea ['ecx,', '[ebp+var_124]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_88],', 'eax']
mov ['edx,', '[ebp+var_88]']
mov ['[ebp+var_68],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
mov ['eax,', '[ebp+var_68]']
push ['eax']
lea ['ecx,', '[ebp+var_34]']
call ['??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@1@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_124]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
lea ['ecx,', '[ebp+var_34]']
push ['ecx']
lea ['ecx,', '[ebp+var_44]']
call ['??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@1@@Z']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_20],', '0']
jbe ['short', 'loc_5AB8']
mov ['edx,', '[ebp+var_20]']
add ['edx,', '[ebp+var_18]']
mov ['eax,', '[ebp+var_10]']
cmp ['edx,', '[eax+10h]']
jnb ['short', 'loc_5AB8']
mov ['[ebp+var_38],', '1']
jmp ['short', 'loc_5ABF']
mov ['[ebp+var_38],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_38]']
mov ['[ebp+var_19],', 'cl']
lea ['edx,', '[ebp+var_44]']
push ['edx']
lea ['eax,', '[ebp+var_10C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_80],', 'eax']
mov ['ecx,', '[ebp+var_80]']
mov ['[ebp+var_70],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
mov ['ecx,', '[ebp+var_70]']
call ['??G?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBEHABV?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@1@@Z']
cmp ['[ebp+var_20],', 'eax']
jnb ['short', 'loc_5AFB']
mov ['[ebp+var_28],', '1']
jmp ['short', 'loc_5B02']
mov ['[ebp+var_28],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_28]']
mov ['[ebp+var_1A],', 'dl']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_10C]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
movzx ['eax,', '[ebp+var_1A]']
test ['eax,', 'eax']
jz ['loc_5BD3']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_BC],', 'esp']
lea ['edx,', '[ebp+var_44]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4C],', 'eax']
mov ['eax,', '[ebp+var_4C]']
mov ['[ebp+var_E8],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_C4],', 'esp']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_E0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Eh']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_CC],', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_E4],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0Fh']
lea ['eax,', '[ebp+var_118]']
push ['eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
call ['??$_Move_backward@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
add ['esp,', '28h']
mov ['[ebp+var_D4],', 'eax']
lea ['ecx,', '[ebp+var_118]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['short', 'loc_5BBE']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_5BCE']
mov ['ecx,', '[ebp+var_10]']
call ['?pop_front@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ']
jmp ['short', 'loc_5BB5']
jmp ['loc_5C7E']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_9C],', 'esp']
lea ['edx,', '[ebp+var_34]']
push ['edx']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_64],', 'eax']
mov ['eax,', '[ebp+var_64]']
mov ['[ebp+var_A0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '10h']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_A8],', 'esp']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_6C],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['[ebp+var_B0],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '11h']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_B8],', 'esp']
lea ['eax,', '[ebp+var_44]']
push ['eax']
call ['??0?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_74]']
mov ['[ebp+var_C0],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '12h']
lea ['edx,', '[ebp+var_130]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
call ['??$_Move@V?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@V12@@std@@YA?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@0@V10@00@Z']
add ['esp,', '28h']
mov ['[ebp+var_C8],', 'eax']
lea ['ecx,', '[ebp+var_130]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['short', 'loc_5C6E']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_5C7E']
mov ['ecx,', '[ebp+var_10]']
call ['?pop_back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ']
jmp ['short', 'loc_5C65']
movzx ['ecx,', '[ebp+var_19]']
test ['ecx,', 'ecx']
jz ['short', 'loc_5C8E']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['edx,', '[ebp+var_20]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_148]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_7C],', 'eax']
mov ['edx,', '[ebp+var_7C]']
mov ['[ebp+var_84],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '13h']
mov ['ecx,', '[ebp+var_84]']
call ['??H?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_148]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
lea ['ecx,', '[ebp+var_44]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_34]']
call ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$0 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$1 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$2 proc near
mov ['ecx,', '[ebp-0D0h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$3 proc near
lea ['ecx,', '[ebp-34h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$4 proc near
mov ['ecx,', '[ebp-0ECh]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$5 proc near
lea ['ecx,', '[ebp-44h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$6 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN26']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
lea ['ecx,', '[ebp-13Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$7 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '2']
jz ['$LN28']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFDh']
lea ['ecx,', '[ebp-100h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$8 proc near
mov ['ecx,', '[ebp-0ACh]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$9 proc near
mov ['ecx,', '[ebp-0B4h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$10 proc near
lea ['ecx,', '[ebp-124h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$11 proc near
lea ['ecx,', '[ebp-10Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$12 proc near
mov ['ecx,', '[ebp-0BCh]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$13 proc near
mov ['ecx,', '[ebp-0C4h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$14 proc near
mov ['ecx,', '[ebp-0CCh]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$16 proc near
mov ['ecx,', '[ebp-9Ch]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$17 proc near
mov ['ecx,', '[ebp-0A8h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$18 proc near
mov ['ecx,', '[ebp-0B8h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$20 proc near
lea ['ecx,', '[ebp-148h]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z$21 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '4']
jz ['$LN45']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFBh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-140h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z']
jmp ['___CxxFrameHandler3']
endp
?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '1']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['[ebp+var_20],', 'esp']
push ['1']
push ['eax']
lea ['ecx,', '[ebp+arg_4]']
call ['??H?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_28],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_1C]']
call ['?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@0@Z']
mov ['[ebp+var_30],', 'eax']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$0 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$1 proc near
mov ['ecx,', '[ebp-20h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$2 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z$3 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN7']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?erase@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAE?AV?$_Deque_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@V?$_Deque_const_iterator@V?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?getInstance@NppParameters@@SAPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:?_pSelf@NppParameters@@0PAV1@A']
pop ['ebp']
retn
endp
?getNativeLangSpeaker@NppParameters@@QAEPAVNativeLangSpeaker@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+1CC20h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getRecentFileCustomLength@NppParameters@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+9B4h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?isSubMenuMode@LastRecentFileList@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+24h],', '0']
jz ['short', 'loc_5F93']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_5F9A']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5FBB']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_5FCA']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@_W@std@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5FEB']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_5FFA']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_wcslen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAIABV?$allocator@URecentItem@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@URecentItem@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@_W@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@URecentItem@@@std@@@std@@SAIABV?$allocator@URecentItem@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@URecentItem@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@_W@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_60DA']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_60E3']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_611A']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_6123']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_6198']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_619F']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_625D']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_6280']
jmp ['short', 'loc_6280']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_6314']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_631B']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_6392']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_63A9']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_63C2']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_63D9']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?pop_back@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?empty@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6445']
push ['5C2h']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1CO@FNIDKHMC@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
jmp ['loc_64C7']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+10h]']
lea ['edx,', '[edx+ecx-1]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getblock@?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@QBEII@Z']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
mov ['eax,', '[ebp+var_C]']
xor ['edx,', 'edx']
mov ['esi,', '1']
div ['esi']
shl ['edx,', '5']
mov ['eax,', '[ebp+var_14]']
add ['edx,', '[ecx+eax*4]']
push ['edx']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@URecentItem@@@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEXPAURecentItem@@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
sub ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+10h],', 'edx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_64C7']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?pop_front@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['esi']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?empty@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_6501']
push ['59Dh']
push ['offset', '??_C@_1IK@CIFBAAFK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1CO@FNIDKHMC@?$AAd?$AAe?$AAq?$AAu?$AAe?$AA?5?$AAe?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AA?5?$AAp?$AAo?$AAp?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
jmp ['loc_658A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_off@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IBEXI@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getblock@?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@QBEII@Z']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
xor ['edx,', 'edx']
mov ['esi,', '1']
div ['esi']
shl ['edx,', '5']
mov ['eax,', '[ebp+var_10]']
add ['edx,', '[ecx+eax*4]']
push ['edx']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@URecentItem@@@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEXPAURecentItem@@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+10h],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_657B']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
jmp ['short', 'loc_658A']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'edx']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?push_front@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QAEXABURecentItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['eax,', '[eax+0Ch]']
xor ['edx,', 'edx']
mov ['ecx,', '1']
div ['ecx']
test ['edx,', 'edx']
jnz ['short', 'loc_65D0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+10h]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ecx+8],', 'eax']
ja ['short', 'loc_65D0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Growmap@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_8]']
and ['eax,', '[ecx+0Ch]']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_65F9']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_6602']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getblock@?$_Deque_val@U?$_Deque_simple_types@URecentItem@@@std@@@std@@QBEII@Z']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax+ecx*4],', '0']
jnz ['short', 'loc_6650']
push ['1']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEPAURecentItem@@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[edx+ecx*4],', 'eax']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['eax,', '[ebp+var_C]']
xor ['edx,', 'edx']
mov ['esi,', '1']
div ['esi']
shl ['edx,', '5']
mov ['eax,', '[ebp+var_10]']
add ['edx,', '[ecx+eax*4]']
push ['edx']
lea ['ecx,', '[ebp+var_2]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Deque_alloc@$0A@U?$_Deque_base_types@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@URecentItem@@ABU1@@?$_Wrap_alloc@V?$allocator@URecentItem@@@std@@@std@@QAEXPAURecentItem@@ABU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+10h]']
add ['edx,', '1']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+10h],', 'edx']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$deque@URecentItem@@V?$allocator@URecentItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+10h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp
_wmemcmp        proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
jmp ['short', 'loc_67B1']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_67EE']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_67EC']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jge ['short', 'loc_67E0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_67E7']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_67F0']
jmp ['short', 'loc_6796']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wmemcpy        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
_wmemmove       proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memmove']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp

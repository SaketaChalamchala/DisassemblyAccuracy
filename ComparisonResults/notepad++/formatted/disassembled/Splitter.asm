??0Splitter@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0Splitter@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0Window@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Splitter@@6B@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+18h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['byte', 'ptr', '[edx+30h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?resizeSpliter@Splitter@@QAEXPAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_28],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_221']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+Rect.left],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+Rect.top],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+Rect.right],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+Rect.bottom],', 'edx']
jmp ['short', 'loc_232']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '1']
jz ['short', 'loc_27D']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+Rect.right]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '20h']
jz ['short', 'loc_26D']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+Rect.bottom]']
imul ['ecx,', '[eax+20h]']
mov ['eax,', 'ecx']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+14h],', 'eax']
jmp ['short', 'loc_27B']
mov ['ecx,', '[ebp+var_28]']
call ['?getSplitterFixPosY@Splitter@@AAEHXZ']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+14h],', 'eax']
jmp ['short', 'loc_2BB']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[ebp+Rect.bottom]']
mov ['[edx+1Ch],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '20h']
jz ['short', 'loc_2AD']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+Rect.right]']
imul ['ecx,', '[eax+20h]']
mov ['eax,', 'ecx']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+10h],', 'eax']
jmp ['short', 'loc_2BB']
mov ['ecx,', '[ebp+var_28]']
call ['?getSplitterFixPosX@Splitter@@AAEHXZ']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+10h],', 'eax']
push ['1']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_28]']
mov ['eax,', '[edx+10h]']
push ['eax']
push ['13A4h']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
lea ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+var_28]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_28]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
push ['1']
mov ['ecx,', '[ebp+var_28]']
call ['?getClickZone@Splitter@@AAEH_N@Z']
mov ['ecx,', '[ebp+var_28]']
mov ['[ecx+4Ch],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_28]']
call ['?getClickZone@Splitter@@AAEH_N@Z']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+50h],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_1C]']
sub ['ecx,', '[eax+4Ch]']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+44h],', 'ecx']
mov ['eax,', '[ebp+var_28]']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '[eax+50h]']
mov ['edx,', '[ebp+var_28]']
mov ['[edx+48h],', 'ecx']
push ['0']
mov ['eax,', '[ebp+var_28]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_28]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?init@Splitter@@QAEXPAUHINSTANCE__@@PAUHWND__@@HHK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '88h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+lpParam],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_3B3']
push ['offset', '$SG91470']
lea ['ecx,', '[ebp+var_64]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['__CxxThrowException@8']
cmp ['[ebp+arg_C],', '0']
jge ['short', 'loc_3D4']
push ['offset', '$SG91474']
lea ['ecx,', '[ebp+var_70]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+lpParam]']
call ['?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+24h],', 'edx']
mov ['[ebp+dwExStyle],', '0']
mov ['[ebp+dwStyle],', '50000000h']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+arg_10]']
mov ['[edx+2Ch],', 'eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '4']
jz ['short', 'loc_421']
mov ['eax,', '[ebp+lpParam]']
mov ['byte', 'ptr', '[eax+30h],', '1']
jmp ['short', 'loc_448']
cmp ['[ebp+arg_C],', '64h']
jl ['short', 'loc_448']
push ['offset', '$SG91483']
lea ['ecx,', '[ebp+var_88]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['ecx,', '[ebp+var_88]']
push ['ecx']
call ['__CxxThrowException@8']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+arg_C]']
mov ['[edx+20h],', 'eax']
mov ['[ebp+var_54.cbSize],', '30h']
mov ['[ebp+var_54.style],', '3']
mov ['[ebp+var_54.lpfnWndProc],', 'offset', '?staticWndProc@Splitter@@CGJPAUHWND__@@IIJ@Z']
mov ['[ebp+var_54.cbClsExtra],', '0']
mov ['[ebp+var_54.cbWndExtra],', '0']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_54.hInstance],', 'edx']
mov ['[ebp+var_54.hIcon],', '0']
mov ['eax,', '[ebp+lpParam]']
add ['eax,', '10h']
push ['eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '1']
jz ['short', 'loc_4D8']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[edx+1Ch]']
imul ['ecx,', '[eax+20h]']
mov ['eax,', 'ecx']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['[edx+14h],', 'eax']
mov ['eax,', '[ebp+lpParam]']
mov ['dword', 'ptr', '[eax+10h],', '0']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+24h]']
mov ['[ecx+1Ch],', 'eax']
jmp ['short', 'loc_4FF']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ecx+18h]']
imul ['eax,', '[edx+20h]']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+24h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+lpParam]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_529']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '8']
jnz ['short', 'loc_520']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '10h']
jz ['short', 'loc_529']
mov ['eax,', '[ebp+var_54.style]']
or ['eax,', '8']
mov ['[ebp+var_54.style],', 'eax']
mov ['ecx,', '[ebp+lpParam]']
movzx ['edx,', 'byte', 'ptr', '[ecx+30h]']
test ['edx,', 'edx']
jz ['short', 'loc_561']
push ['7F00h']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LoadCursorW@8']
mov ['[ebp+var_54.hCursor],', 'eax']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '1']
jz ['short', 'loc_558']
mov ['[ebp+var_54.lpszClassName],', 'offset', '$SG91496']
jmp ['short', 'loc_55F']
mov ['[ebp+var_54.lpszClassName],', 'offset', '$SG91498']
jmp ['short', 'loc_59C']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '1']
jz ['short', 'loc_585']
push ['7F85h']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LoadCursorW@8']
mov ['[ebp+var_54.hCursor],', 'eax']
mov ['[ebp+var_54.lpszClassName],', 'offset', '$SG91504']
jmp ['short', 'loc_59C']
push ['7F84h']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LoadCursorW@8']
mov ['[ebp+var_54.hCursor],', 'eax']
mov ['[ebp+var_54.lpszClassName],', 'offset', '$SG91509']
mov ['[ebp+var_54.hbrBackground],', '10h']
mov ['[ebp+var_54.lpszMenuName],', '0']
mov ['[ebp+var_54.hIconSm],', '0']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '1']
jz ['short', 'loc_5DD']
movzx ['eax,', 'ds:?_isHorizontalRegistered@Splitter@@0_NA']
test ['eax,', 'eax']
jnz ['short', 'loc_5DD']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegisterClassExW@4']
mov ['ds:?_isHorizontalRegistered@Splitter@@0_NA,', '1']
jmp ['loc_65E']
mov ['ecx,', '[ebp+lpParam]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_60A']
movzx ['eax,', 'ds:?_isVerticalRegistered@Splitter@@0_NA']
test ['eax,', 'eax']
jnz ['short', 'loc_60A']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__RegisterClassExW@4']
mov ['ds:?_isVerticalRegistered@Splitter@@0_NA,', '1']
jmp ['short', 'loc_65E']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '1']
jz ['short', 'loc_633']
movzx ['ecx,', 'ds:?_isHorizontalFixedRegistered@Splitter@@0_NA']
test ['ecx,', 'ecx']
jnz ['short', 'loc_633']
lea ['edx,', '[ebp+var_54]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegisterClassExW@4']
mov ['ds:?_isHorizontalFixedRegistered@Splitter@@0_NA,', '1']
jmp ['short', 'loc_65E']
mov ['ecx,', '[ebp+lpParam]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_65E']
movzx ['ecx,', 'ds:?_isVerticalFixedRegistered@Splitter@@0_NA']
test ['ecx,', 'ecx']
jnz ['short', 'loc_65E']
lea ['edx,', '[ebp+var_54]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__RegisterClassExW@4']
mov ['ds:?_isVerticalFixedRegistered@Splitter@@0_NA,', '1']
mov ['eax,', '[ebp+lpParam]']
push ['eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+4]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+dwStyle]']
push ['ecx']
push ['offset', '$SG91519']
mov ['edx,', '[ebp+var_54.lpszClassName]']
push ['edx']
mov ['eax,', '[ebp+dwExStyle]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CreateWindowExW@48']
mov ['ecx,', '[ebp+lpParam]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+lpParam]']
cmp ['dword', 'ptr', '[edx+0Ch],', '0']
jnz ['short', 'loc_6CF']
push ['offset', '$SG91523']
lea ['ecx,', '[ebp+var_7C]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['eax,', '[ebp+var_7C]']
push ['eax']
call ['__CxxThrowException@8']
lea ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+34h],', 'ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+var_10]']
mov ['[edx+38h],', 'eax']
push ['1']
mov ['ecx,', '[ebp+lpParam]']
call ['?getClickZone@Splitter@@AAEH_N@Z']
mov ['[ebp+var_1C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+lpParam]']
call ['?getClickZone@Splitter@@AAEH_N@Z']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ebp+var_1C]']
mov ['[ecx+3Ch],', 'edx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+var_20]']
mov ['[eax+40h],', 'ecx']
mov ['edx,', '[ebp+var_C]']
sub ['edx,', '[ebp+var_1C]']
mov ['eax,', '[ebp+lpParam]']
mov ['[eax+44h],', 'edx']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ebp+lpParam]']
mov ['[edx+48h],', 'ecx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[ebp+var_1C]']
mov ['[eax+4Ch],', 'ecx']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[ebp+var_20]']
mov ['[edx+50h],', 'eax']
push ['1']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+lpParam]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', '[ebp+lpParam]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+lpParam]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
push ['13A4h']
mov ['edx,', '[ebp+lpParam]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?rotate@Splitter@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jnz ['loc_823']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '1']
jz ['short', 'loc_7DA']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
xor ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
or ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2Ch],', 'eax']
jmp ['short', 'loc_7F8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
xor ['eax,', '2']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
or ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+2Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+20h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?init@Splitter@@QAEXPAUHINSTANCE__@@PAUHWND__@@HHK@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?staticWndProc@Splitter@@CGJPAUHWND__@@IIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['eax,', '[ebp+Msg]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '81h']
jz ['short', 'loc_843']
jmp ['short', 'loc_86B']
mov ['ecx,', '[ebp+lParam]']
mov ['edx,', '[ecx]']
mov ['[ebp+dwNewLong],', 'edx']
mov ['eax,', '[ebp+dwNewLong]']
mov ['ecx,', '[ebp+hWnd]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+dwNewLong]']
push ['edx']
push ['0FFFFFFEBh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['eax,', '1']
jmp ['short', 'loc_8AD']
push ['0FFFFFFEBh']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetWindowLongW@8']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_898']
mov ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', '[ebp+Msg]']
push ['ecx']
mov ['edx,', '[ebp+hWnd]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DefWindowProcW@16']
jmp ['short', 'loc_8AD']
mov ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
mov ['edx,', '[ebp+Msg]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['?spliterWndProc@Splitter@@AAGJIIJ@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?spliterWndProc@Splitter@@AAGJIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+Msg]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '200h']
ja ['short', 'loc_901']
cmp ['[ebp+var_18],', '200h']
jz ['loc_9E8']
cmp ['[ebp+var_18],', '0Fh']
jz ['loc_C3A']
cmp ['[ebp+var_18],', '10h']
jz ['loc_C46']
jmp ['$LN26']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '201h']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '14h']
ja ['$LN26']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'ds:$LN31[edx]']
jmp ['ds:$LN32[eax*4]']
mov ['ecx,', '[ebp+lParam]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
mov ['[ebp+var_28.x],', 'edx']
mov ['eax,', '[ebp+lParam]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_28.y],', 'ecx']
lea ['edx,', '[ebp+var_28]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?isInLeftTopZone@Splitter@@ABE_NABUtagPOINT@@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_973']
cmp ['[ebp+wParam],', '1']
jnz ['short', 'loc_973']
mov ['ecx,', '[ebp+this]']
call ['?gotoTopLeft@Splitter@@AAEXXZ']
mov ['eax,', '1']
jmp ['loc_C70']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?isInRightBottomZone@Splitter@@ABE_NABUtagPOINT@@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_99E']
cmp ['[ebp+wParam],', '1']
jnz ['short', 'loc_99E']
mov ['ecx,', '[ebp+this]']
call ['?gotoRightBouuom@Splitter@@AAEXXZ']
mov ['eax,', '1']
jmp ['loc_C70']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+30h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9BD']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetCapture@4']
mov ['ecx,', '[ebp+this]']
mov ['byte', 'ptr', '[ecx+28h],', '1']
xor ['eax,', 'eax']
jmp ['loc_C70']
mov ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['13A3h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_C70']
mov ['eax,', '[ebp+lParam]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_30.x],', 'ecx']
mov ['edx,', '[ebp+lParam]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_30.y],', 'eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?isInLeftTopZone@Splitter@@ABE_NABUtagPOINT@@@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_A2E']
lea ['eax,', '[ebp+var_30]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?isInRightBottomZone@Splitter@@ABE_NABUtagPOINT@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A4C']
push ['7F00h']
push ['0']
call ['dword', 'ptr', 'ds:__imp__LoadCursorW@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetCursor@4']
mov ['eax,', '1']
jmp ['loc_C70']
mov ['edx,', '[ebp+this]']
movzx ['eax,', 'byte', 'ptr', '[edx+30h]']
test ['eax,', 'eax']
jnz ['loc_BBA']
cmp ['[ebp+wParam],', '1']
jnz ['loc_BBA']
lea ['ecx,', '[ebp+Rect]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
lea ['edx,', '[ebp+Point]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__ScreenToClient@8']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '1']
jz ['short', 'loc_AFF']
cmp ['[ebp+Point.y],', '1']
jg ['short', 'loc_AB8']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+14h],', '1']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+20h],', '1']
jmp ['short', 'loc_AFD']
mov ['eax,', '[ebp+Rect.bottom]']
sub ['eax,', '5']
cmp ['[ebp+Point.y],', 'eax']
jg ['short', 'loc_AE7']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+Point.y]']
mov ['[ecx+14h],', 'edx']
imul ['eax,', '[ebp+Point.y],', '64h']
cdq
idiv ['[ebp+Rect.bottom]']
imul ['eax,', '64h']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+this]']
mov ['[edx+20h],', 'eax']
jmp ['short', 'loc_AFD']
mov ['eax,', '[ebp+Rect.bottom]']
sub ['eax,', '5']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+14h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+20h],', '63h']
jmp ['short', 'loc_B60']
cmp ['[ebp+Point.x],', '1']
jg ['short', 'loc_B1B']
mov ['eax,', '[ebp+this]']
mov ['dword', 'ptr', '[eax+10h],', '1']
mov ['ecx,', '[ebp+this]']
mov ['dword', 'ptr', '[ecx+20h],', '1']
jmp ['short', 'loc_B60']
mov ['edx,', '[ebp+Rect.right]']
sub ['edx,', '5']
cmp ['[ebp+Point.x],', 'edx']
jg ['short', 'loc_B4A']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+Point.x]']
mov ['[eax+10h],', 'ecx']
imul ['eax,', '[ebp+Point.x],', '64h']
cdq
idiv ['[ebp+Rect.right]']
imul ['eax,', '64h']
cdq
mov ['ecx,', '64h']
idiv ['ecx']
mov ['edx,', '[ebp+this]']
mov ['[edx+20h],', 'eax']
jmp ['short', 'loc_B60']
mov ['eax,', '[ebp+Rect.right]']
sub ['eax,', '5']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+10h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['dword', 'ptr', '[edx+20h],', '63h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
push ['eax']
push ['13A4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['0']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+1Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[edx+18h]']
call ['eax']
xor ['eax,', 'eax']
jmp ['loc_C70']
mov ['ecx,', '[ebp+this]']
movzx ['edx,', 'byte', 'ptr', '[ecx+30h]']
test ['edx,', 'edx']
jnz ['short', 'loc_BD2']
call ['dword', 'ptr', 'ds:__imp__ReleaseCapture@0']
xor ['eax,', 'eax']
jmp ['loc_C70']
mov ['eax,', '[ebp+this]']
movzx ['ecx,', 'byte', 'ptr', '[eax+28h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C36']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+10h]']
push ['edx']
push ['13A4h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['1']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
mov ['eax,', '[ebp+this]']
mov ['byte', 'ptr', '[eax+28h],', '0']
xor ['eax,', 'eax']
jmp ['short', 'loc_C70']
mov ['ecx,', '[ebp+this]']
call ['?drawSplitter@Splitter@@AAEXXZ']
xor ['eax,', 'eax']
jmp ['short', 'loc_C70']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
call ['eax']
xor ['eax,', 'eax']
jmp ['short', 'loc_C70']
mov ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+wParam]']
push ['edx']
mov ['eax,', '[ebp+Msg]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DefWindowProcW@16']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?getClickZone@Splitter@@AAEH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '8']
jg ['short', 'loc_D18']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_CF0']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '1']
jnz ['short', 'loc_CE1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+24h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_CE8']
mov ['[ebp+var_8],', '0Fh']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_D11']
movzx ['eax,', '[ebp+arg_0]']
cmp ['eax,', '1']
jnz ['short', 'loc_D02']
mov ['[ebp+var_C],', '0Fh']
jmp ['short', 'loc_D0B']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
jmp ['short', 'loc_D6A']
jmp ['short', 'loc_D6A']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_D48']
movzx ['edx,', '[ebp+arg_0]']
cmp ['edx,', '1']
jnz ['short', 'loc_D39']
mov ['[ebp+var_14],', '8']
jmp ['short', 'loc_D40']
mov ['[ebp+var_14],', '0Fh']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_D67']
movzx ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '1']
jnz ['short', 'loc_D5A']
mov ['[ebp+var_18],', '0Fh']
jmp ['short', 'loc_D61']
mov ['[ebp+var_18],', '8']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?adjustZoneToDraw@Splitter@@AAEXAAUtagRECT@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '2Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+24h],', '4']
jge ['short', 'loc_D93']
jmp ['loc_F2B']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+24h],', '4']
jl ['short', 'loc_DF1']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+24h],', '8']
jg ['short', 'loc_DF1']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_DBD']
mov ['[ebp+var_18],', '4']
jmp ['short', 'loc_DC4']
mov ['[ebp+var_18],', '7']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_DE2']
mov ['[ebp+var_1C],', '7']
jmp ['short', 'loc_DE9']
mov ['[ebp+var_1C],', '4']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_E3B']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_E09']
mov ['[ebp+var_20],', '6']
jmp ['short', 'loc_E10']
mov ['[ebp+var_20],', '0Bh']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_E2E']
mov ['[ebp+var_24],', '0Bh']
jmp ['short', 'loc_E35']
mov ['[ebp+var_24],', '6']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_C],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_EAA']
movzx ['eax,', '[ebp+arg_4]']
cmp ['eax,', '1']
jnz ['short', 'loc_E6D']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+40h]']
sub ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_E96']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+44h]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4Ch]']
sub ['eax,', '[ebp+var_8]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+50h]']
sub ['eax,', '[ebp+var_C]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+48h]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_2C],', 'eax']
jmp ['short', 'loc_F08']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '1']
jnz ['short', 'loc_ECD']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
sub ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_14],', '0']
jmp ['short', 'loc_EF6']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4Ch]']
sub ['eax,', '[ebp+var_8]']
cdq
sub ['eax,', 'edx']
sar ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+44h]']
mov ['[ebp+var_10],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+48h]']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+50h]']
sub ['eax,', '[ebp+var_C]']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ebp+var_8]']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '[ebp+var_C]']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_28]']
mov ['[edx+8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_2C]']
mov ['[ecx+0Ch],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?drawSplitter@Splitter@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0B4h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_98],', 'ecx']
lea ['eax,', '[ebp+Paint]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__BeginPaint@8']
mov ['[ebp+hDC],', 'eax']
lea ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_98]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
mov ['ecx,', '[ebp+var_98]']
cmp ['dword', 'ptr', '[ecx+24h],', '4']
jl ['short', 'loc_100A']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '20h']
jz ['short', 'loc_100A']
push ['1']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['ecx,', '[ebp+var_98]']
call ['?adjustZoneToDraw@Splitter@@AAEXAAUtagRECT@@_N@Z']
push ['0']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['ecx,', '[ebp+var_98]']
call ['?adjustZoneToDraw@Splitter@@AAEXAAUtagRECT@@_N@Z']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_FE3']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_FED']
mov ['[ebp+var_B0],', '1']
mov ['ecx,', '[ebp+var_B0]']
push ['ecx']
lea ['edx,', '[ebp+var_54]']
push ['edx']
mov ['eax,', '[ebp+hDC]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
call ['?paintArrow@Splitter@@AAEXPAUHDC__@@ABUtagRECT@@W4Arrow@@@Z']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_106B']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '20h']
jz ['short', 'loc_103B']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+40h]']
mov ['[ebp+var_AC],', 'edx']
jmp ['short', 'loc_1045']
mov ['[ebp+var_AC],', '0']
mov ['eax,', '[ebp+var_AC]']
mov ['[ebp+var_14.top],', 'eax']
mov ['ecx,', '[ebp+var_14.top]']
add ['ecx,', '2']
mov ['[ebp+var_14.bottom],', 'ecx']
mov ['edx,', '[ebp+var_14.top]']
add ['edx,', '1']
mov ['[ebp+rc.top],', 'edx']
mov ['eax,', '[ebp+rc.top]']
add ['eax,', '2']
mov ['[ebp+rc.bottom],', 'eax']
jmp ['short', 'loc_1087']
mov ['[ebp+var_14.top],', '1']
mov ['[ebp+var_14.bottom],', '3']
mov ['[ebp+rc.top],', '2']
mov ['[ebp+rc.bottom],', '4']
mov ['[ebp+var_A0],', '0']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '20h']
jz ['short', 'loc_10DC']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_10C5']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ebp+var_28]']
sub ['edx,', '[ecx+50h]']
mov ['[ebp+var_B4],', 'edx']
jmp ['short', 'loc_10CE']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_B4],', 'eax']
mov ['ecx,', '[ebp+var_B4]']
mov ['[ebp+var_A0],', 'ecx']
jmp ['short', 'loc_10E5']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_A0],', 'edx']
mov ['eax,', '[ebp+rc.bottom]']
cmp ['eax,', '[ebp+var_A0]']
jg ['loc_11FD']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1124']
mov ['[ebp+var_14.left],', '1']
mov ['[ebp+var_14.right],', '3']
mov ['[ebp+rc.left],', '2']
mov ['[ebp+rc.right],', '4']
jmp ['short', 'loc_1148']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_14.left],', 'eax']
mov ['ecx,', '[ebp+var_14.left]']
add ['ecx,', '2']
mov ['[ebp+var_14.right],', 'ecx']
mov ['edx,', '[ebp+var_14.left]']
mov ['[ebp+rc.left],', 'edx']
mov ['eax,', '[ebp+rc.left]']
add ['eax,', '2']
mov ['[ebp+rc.right],', 'eax']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1165']
mov ['edx,', '[ebp+var_2C]']
mov ['[ebp+var_A4],', 'edx']
jmp ['short', 'loc_1177']
mov ['eax,', '[ebp+var_98]']
mov ['ecx,', '[ebp+var_2C]']
sub ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_A4],', 'ecx']
mov ['edx,', '[ebp+rc.right]']
cmp ['edx,', '[ebp+var_A4]']
jg ['short', 'loc_11D4']
push ['0FFFFFFh']
lea ['eax,', '[ebp+rc]']
push ['eax']
mov ['ecx,', '[ebp+hDC]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__FillRect@12']
push ['offset', 'hbr']
lea ['edx,', '[ebp+var_14]']
push ['edx']
mov ['eax,', '[ebp+hDC]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__FillRect@12']
mov ['ecx,', '[ebp+var_14.left]']
add ['ecx,', '4']
mov ['[ebp+var_14.left],', 'ecx']
mov ['edx,', '[ebp+var_14.right]']
add ['edx,', '4']
mov ['[ebp+var_14.right],', 'edx']
mov ['eax,', '[ebp+rc.left]']
add ['eax,', '4']
mov ['[ebp+rc.left],', 'eax']
mov ['ecx,', '[ebp+rc.right]']
add ['ecx,', '4']
mov ['[ebp+rc.right],', 'ecx']
jmp ['loc_1148']
mov ['edx,', '[ebp+var_14.top]']
add ['edx,', '4']
mov ['[ebp+var_14.top],', 'edx']
mov ['eax,', '[ebp+var_14.bottom]']
add ['eax,', '4']
mov ['[ebp+var_14.bottom],', 'eax']
mov ['ecx,', '[ebp+rc.top]']
add ['ecx,', '4']
mov ['[ebp+rc.top],', 'ecx']
mov ['edx,', '[ebp+rc.bottom]']
add ['edx,', '4']
mov ['[ebp+rc.bottom],', 'edx']
jmp ['loc_10E5']
mov ['eax,', '[ebp+var_98]']
cmp ['dword', 'ptr', '[eax+24h],', '4']
jl ['short', 'loc_125C']
mov ['ecx,', '[ebp+var_98]']
mov ['edx,', '[ecx+2Ch]']
and ['edx,', '20h']
jz ['short', 'loc_125C']
mov ['ecx,', '[ebp+var_98]']
call ['?isVertical@Splitter@@ABE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_1235']
mov ['[ebp+var_A8],', '2']
jmp ['short', 'loc_123F']
mov ['[ebp+var_A8],', '3']
mov ['ecx,', '[ebp+var_A8]']
push ['ecx']
lea ['edx,', '[ebp+var_44]']
push ['edx']
mov ['eax,', '[ebp+hDC]']
push ['eax']
mov ['ecx,', '[ebp+var_98]']
call ['?paintArrow@Splitter@@AAEXPAUHDC__@@ABUtagRECT@@W4Arrow@@@Z']
lea ['ecx,', '[ebp+Paint]']
push ['ecx']
mov ['edx,', '[ebp+var_98]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EndPaint@8']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?paintArrow@Splitter@@AAEXPAUHDC__@@ABUtagRECT@@W4Arrow@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_58],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+8]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_133A']
mov ['edx,', '[ebp+var_C]']
mov ['[ebp+x],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_12DF']
mov ['ecx,', '[ebp+x]']
sub ['ecx,', '1']
mov ['[ebp+x],', 'ecx']
mov ['edx,', '[ebp+x]']
cmp ['edx,', '[ebp+var_14]']
jle ['short', 'loc_1335']
mov ['eax,', '[ebp+var_28]']
cmp ['eax,', '[ebp+var_8]']
jz ['short', 'loc_1335']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+y],', 'ecx']
push ['0']
mov ['edx,', '[ebp+y]']
push ['edx']
mov ['eax,', '[ebp+x]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MoveToEx@16']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['edx,', '[ebp+x]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LineTo@12']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_12D6']
jmp ['loc_149A']
cmp ['[ebp+arg_8],', '2']
jnz ['short', 'loc_13B2']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_34],', 'eax']
jmp ['short', 'loc_1357']
mov ['ecx,', '[ebp+var_24]']
add ['ecx,', '1']
mov ['[ebp+var_24],', 'ecx']
mov ['edx,', '[ebp+var_24]']
cmp ['edx,', '[ebp+var_C]']
jge ['short', 'loc_13AD']
mov ['eax,', '[ebp+var_34]']
cmp ['eax,', '[ebp+var_8]']
jz ['short', 'loc_13AD']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_4C],', 'ecx']
push ['0']
mov ['edx,', '[ebp+var_4C]']
push ['edx']
mov ['eax,', '[ebp+var_24]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MoveToEx@16']
mov ['edx,', '[ebp+var_34]']
add ['edx,', '1']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_44],', 'eax']
mov ['ecx,', '[ebp+var_44]']
push ['ecx']
mov ['edx,', '[ebp+var_24]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LineTo@12']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_134E']
jmp ['loc_149A']
cmp ['[ebp+arg_8],', '1']
jnz ['short', 'loc_1427']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_13CF']
mov ['ecx,', '[ebp+var_18]']
sub ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['edx,', '[ebp+var_10]']
jle ['short', 'loc_1425']
mov ['eax,', '[ebp+var_30]']
cmp ['eax,', '[ebp+var_C]']
jz ['short', 'loc_1425']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_54],', 'ecx']
push ['0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['eax,', '[ebp+var_54]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MoveToEx@16']
mov ['edx,', '[ebp+var_30]']
add ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['edx,', '[ebp+var_3C]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LineTo@12']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_13C6']
jmp ['short', 'loc_149A']
cmp ['[ebp+arg_8],', '3']
jnz ['short', 'loc_149A']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_1444']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['[ebp+var_1C],', 'ecx']
mov ['edx,', '[ebp+var_1C]']
cmp ['edx,', '[ebp+var_8]']
jge ['short', 'loc_149A']
mov ['eax,', '[ebp+var_2C]']
cmp ['eax,', '[ebp+var_C]']
jz ['short', 'loc_149A']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_40],', 'ecx']
push ['0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_40]']
push ['eax']
mov ['ecx,', '[ebp+hdc]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MoveToEx@16']
mov ['edx,', '[ebp+var_2C]']
add ['edx,', '1']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_48],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['edx,', '[ebp+var_48]']
push ['edx']
mov ['eax,', '[ebp+hdc]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__LineTo@12']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_143B']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?gotoTopLeft@Splitter@@AAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '10h']
jz ['loc_1563']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+30h]']
test ['eax,', 'eax']
jnz ['loc_1563']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+20h],', '1']
jle ['loc_1563']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '1']
jz ['short', 'loc_14F5']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+14h],', '1']
jmp ['short', 'loc_14FF']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '1']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+20h],', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
push ['ecx']
push ['13A4h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+1Ch]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+10h]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+18h]']
call ['edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?gotoRightBouuom@Splitter@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '8']
jz ['loc_164A']
mov ['edx,', '[ebp+var_18]']
movzx ['eax,', 'byte', 'ptr', '[edx+30h]']
test ['eax,', 'eax']
jnz ['loc_164A']
mov ['ecx,', '[ebp+var_18]']
cmp ['dword', 'ptr', '[ecx+20h],', '63h']
jge ['loc_164A']
lea ['edx,', '[ebp+Rect]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+2Ch]']
and ['eax,', '1']
jz ['short', 'loc_15D7']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+Rect.bottom]']
sub ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+14h],', 'edx']
jmp ['short', 'loc_15E6']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ebp+Rect.right]']
sub ['edx,', '[ecx+24h]']
mov ['eax,', '[ebp+var_18]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_18]']
mov ['dword', 'ptr', '[ecx+20h],', '63h']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+10h]']
push ['edx']
push ['13A4h']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+1Ch]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+18h]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+10h]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0Splitter@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1Window@@UAE@XZ']
endp
__ehhandler$??0Splitter@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0Splitter@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_168F']
jmp ['short', 'loc_16AF']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_16AA']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_16AF']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_16CB']
jmp ['short', 'loc_16F1']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_16EC']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_16F1']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_1716']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_17AD']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_17B4']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_1887']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_188E']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0Window@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Window@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0runtime_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1Splitter@@UAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1Splitter@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Splitter@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1Window@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1Splitter@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1Window@@UAE@XZ']
endp
__ehhandler$??1Splitter@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1Splitter@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1Window@@UAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Window@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1runtime_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1runtime_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1exception@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??1runtime_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1runtime_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_223E']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_2245']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2298']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_2298']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_229F']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GSplitter@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1Splitter@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_22CF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GWindow@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1Window@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_22FB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2327']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_2353']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_237F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_23AB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gruntime_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_23D7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_2519']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_256B']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_2533']
jmp ['short', 'loc_256B']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_2560']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_256B']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_25EE']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_25D8']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_261D']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_273A']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_275A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_27A4']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_2794']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_2794']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_277B']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_2784']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_27A4']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_27A4']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_27B3']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_27BA']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_27F1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_27F1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_27F7']
xor ['al,', 'al']
jmp ['short', 'loc_27F9']
jmp ['short', 'loc_27F9']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_2826']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_282F']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_285E']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_2867']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_28FB']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_28CB']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_28E0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_28BE']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_2943']
jmp ['short', 'loc_29B6']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_29B6']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_2995']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_2A76']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_2A92']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_2AB9']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_2AFB']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2AFB']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_2B63']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2B96']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_2BD3']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2BD0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_2C26']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_2C3D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_2CCC']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_2CE1']
jmp ['short', 'loc_2CE1']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?destroy@Splitter@@UAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DestroyWindow@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?display@Window@@UBEX_N@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_2D3A']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_2D41']
mov ['[ebp+nCmdShow],', '0']
mov ['ecx,', '[ebp+nCmdShow]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_2D8F']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_2D8F']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_2D96']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2DEA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_2E1C']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_2E38']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_2E7E']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_2E7E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?getClientRect@Window@@UBEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getHeight@Window@@UBEHXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
cmp ['eax,', '1']
jnz ['short', 'loc_2EF2']
mov ['eax,', '[ebp+Rect.bottom]']
sub ['eax,', '[ebp+Rect.top]']
jmp ['short', 'loc_2EF4']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getSplitterFixPosX@Splitter@@AAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
push ['0']
push ['0']
push ['13A1h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '2']
jnz ['short', 'loc_2F45']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2F4C']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFh']
movzx ['eax,', 'ax']
sub ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getSplitterFixPosY@Splitter@@AAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
push ['0']
push ['0']
push ['13A2h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_8],', 'eax']
mov ['edx,', '[ebp+var_8]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '2']
jnz ['short', 'loc_2FA1']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+24h]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_2FA8']
mov ['[ebp+var_C],', '0']
mov ['eax,', '[ebp+var_8]']
and ['eax,', '0FFFFh']
movzx ['eax,', 'ax']
sub ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getWidth@Window@@UBEHXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+Rect.right]']
sub ['eax,', '[ebp+Rect.left]']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?isInLeftTopZone@Splitter@@ABE_NABUtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+34h]']
jl ['short', 'loc_3088']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+34h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+3Ch]']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax],', 'ecx']
jg ['short', 'loc_3088']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+38h]']
jl ['short', 'loc_3088']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+40h]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+4],', 'edx']
jg ['short', 'loc_3088']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_308F']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?isInRightBottomZone@Splitter@@ABE_NABUtagPOINT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx+44h]']
jl ['short', 'loc_30EC']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+44h]']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+4Ch]']
mov ['eax,', '[ebp+arg_0]']
cmp ['[eax],', 'ecx']
jg ['short', 'loc_30EC']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4]']
cmp ['eax,', '[edx+48h]']
jl ['short', 'loc_30EC']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+48h]']
mov ['eax,', '[ebp+var_4]']
add ['edx,', '[eax+50h]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx+4],', 'edx']
jg ['short', 'loc_30EC']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_30F3']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?isVertical@Splitter@@ABE_NXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+2Ch]']
and ['ecx,', '2']
jz ['short', 'loc_3119']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_3120']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?isVisible@Window@@UBE_NXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
test ['eax,', 'eax']
jz ['short', 'loc_3148']
mov ['[ebp+var_1],', '1']
jmp ['short', 'loc_314C']
mov ['[ebp+var_1],', '0']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_316B']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_317A']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_31EA']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_31F3']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3248']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_324F']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_330D']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_3330']
jmp ['short', 'loc_3330']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_33C4']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_33CB']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_3442']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3459']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?redraw@Window@@UBEX_N@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InvalidateRect@12']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jz ['short', 'loc_3559']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__UpdateWindow@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp

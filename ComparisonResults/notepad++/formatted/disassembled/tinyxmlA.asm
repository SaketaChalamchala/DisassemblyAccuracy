??0StringToBuffer@TiXmlBaseA@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
add ['eax,', '1']
push ['eax']
call ['??_U@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jz ['short', 'loc_5DF']
mov ['ecx,', '[ebp+arg_0]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
call ['_strcpy']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1StringToBuffer@TiXmlBaseA@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z']
add ['esp,', '8']
lea ['edx,', '[ebp+var_2C]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '30h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_28],', '0']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jge ['loc_8ED']
mov ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '26h']
jnz ['loc_763']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '2']
cmp ['[ebp+var_28],', 'eax']
jge ['short', 'loc_763']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z']
movsx ['eax,', 'byte', 'ptr', '[eax]']
cmp ['eax,', '23h']
jnz ['short', 'loc_763']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '2']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z']
movsx ['edx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', '78h']
jnz ['short', 'loc_763']
mov ['ecx,', '[ebp+arg_0]']
call ['?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['[ebp+var_28],', 'eax']
jge ['short', 'loc_75E']
push ['1']
mov ['ecx,', '[ebp+arg_0]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
add ['eax,', '[ebp+var_28]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z']
movsx ['edx,', 'byte', 'ptr', '[eax]']
cmp ['edx,', '3Bh']
jnz ['short', 'loc_75C']
jmp ['short', 'loc_75E']
jmp ['short', 'loc_71A']
jmp ['loc_8E8']
cmp ['[ebp+var_2C],', '26h']
jnz ['short', 'loc_79D']
mov ['eax,', '0Ch']
imul ['ecx,', 'eax,', '0']
mov ['edx,', 'dword', 'ptr', 'ds:(?entity@TiXmlBaseA@@0PAUEntity@1@A+4)[ecx]']
push ['edx']
mov ['eax,', '0Ch']
imul ['ecx,', 'eax,', '0']
mov ['edx,', 'dword', 'ptr', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[ecx]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['loc_8E8']
cmp ['[ebp+var_2C],', '3Ch']
jnz ['short', 'loc_7D7']
mov ['ecx,', '0Ch']
shl ['ecx,', '0']
mov ['edx,', 'dword', 'ptr', 'ds:(?entity@TiXmlBaseA@@0PAUEntity@1@A+4)[ecx]']
push ['edx']
mov ['eax,', '0Ch']
shl ['eax,', '0']
mov ['ecx,', 'dword', 'ptr', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[eax]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['loc_8E8']
cmp ['[ebp+var_2C],', '3Eh']
jnz ['short', 'loc_80F']
mov ['eax,', '0Ch']
shl ['eax,', '1']
mov ['ecx,', 'dword', 'ptr', 'ds:(?entity@TiXmlBaseA@@0PAUEntity@1@A+4)[eax]']
push ['ecx']
mov ['edx,', '0Ch']
shl ['edx,', '1']
mov ['eax,', 'dword', 'ptr', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['loc_8E8']
cmp ['[ebp+var_2C],', '22h']
jnz ['short', 'loc_849']
mov ['edx,', '0Ch']
imul ['eax,', 'edx,', '3']
mov ['ecx,', 'dword', 'ptr', 'ds:(?entity@TiXmlBaseA@@0PAUEntity@1@A+4)[eax]']
push ['ecx']
mov ['edx,', '0Ch']
imul ['eax,', 'edx,', '3']
mov ['ecx,', 'dword', 'ptr', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[eax]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['edx,', '[ebp+var_28]']
add ['edx,', '1']
mov ['[ebp+var_28],', 'edx']
jmp ['loc_8E8']
cmp ['[ebp+var_2C],', '27h']
jnz ['short', 'loc_880']
mov ['eax,', '0Ch']
shl ['eax,', '2']
mov ['ecx,', 'dword', 'ptr', 'ds:(?entity@TiXmlBaseA@@0PAUEntity@1@A+4)[eax]']
push ['ecx']
mov ['edx,', '0Ch']
shl ['edx,', '2']
mov ['eax,', 'dword', 'ptr', 'ds:?entity@TiXmlBaseA@@0PAUEntity@1@A[edx]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['ecx,', '[ebp+var_28]']
add ['ecx,', '1']
mov ['[ebp+var_28],', 'ecx']
jmp ['short', 'loc_8E8']
cmp ['[ebp+var_2C],', '20h']
jl ['short', 'loc_88C']
cmp ['[ebp+var_2C],', '7Eh']
jle ['short', 'loc_8CB']
mov ['edx,', '[ebp+var_2C]']
and ['edx,', '0FFh']
push ['edx']
push ['offset', '$SG96093']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_sprintf']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_strlen']
add ['esp,', '4']
push ['eax']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['short', 'loc_8E8']
mov ['cl,', 'byte', 'ptr', '[ebp+var_2C]']
mov ['[ebp+Src],', 'cl']
push ['1']
lea ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+arg_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['eax,', '[ebp+var_28]']
add ['eax,', '1']
mov ['[ebp+var_28],', 'eax']
jmp ['loc_6AF']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??5@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV01@AAVTiXmlNodeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??5@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV01@AAVTiXmlNodeA@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['1F40h']
lea ['ecx,', '[ebp+var_2C]']
call ['?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+18h]']
call ['edx']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??6@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AAV01@ABVTiXmlNodeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0C4h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['1']
push ['2']
lea ['ecx,', '[ebp+var_D0]']
call ['??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_D0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['eax,', '[edx+8]']
call ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['ecx,', '[ebp+var_D0]']
call ['?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_34],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_D0]']
call ['??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1TiXmlNodeA@@UAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlNodeA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlNodeA@@6B@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_10],', 'edx']
mov ['[ebp+var_1C],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_B23']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+3Ch]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_B1A']
push ['1']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[eax]']
call ['edx']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_B21']
mov ['[ebp+var_24],', '0']
jmp ['short', 'loc_AE0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '1Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??1TiXmlBaseA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Clear@TiXmlNodeA@@QAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_BB4']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_BAB']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_BB2']
mov ['[ebp+var_18],', '0']
jmp ['short', 'loc_B71']
mov ['ecx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_C]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_64],', 'ecx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_C17']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_C92']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+var_50]']
call ['?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_58],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_49],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_C8D']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_C94']
jmp ['loc_C0E']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_64],', 'ecx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+18h]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_CF7']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+38h]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_D72']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+var_50]']
call ['?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_58],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_49],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_D6D']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_D74']
jmp ['loc_CEE']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IterateChildren@TiXmlNodeA@@QBEPAV1@PAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_DB1']
mov ['ecx,', '[ebp+var_4]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
jmp ['short', 'loc_DDB']
jmp ['short', 'loc_DDB']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_4]']
jz ['short', 'loc_DD3']
push ['149h']
push ['offset', '$SG96267']
push ['offset', '$SG96268']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IterateChildren@TiXmlNodeA@@QBEPAV1@PBDPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_E05']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
jmp ['short', 'loc_E33']
jmp ['short', 'loc_E33']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_4]']
jz ['short', 'loc_E27']
push ['156h']
push ['offset', '$SG96277']
push ['offset', '$SG96278']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?InsertEndChild@TiXmlNodeA@@QAEPAV1@ABV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+arg_0]']
mov ['eax,', '[edx+14h]']
call ['eax']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_E6B']
xor ['eax,', 'eax']
jmp ['short', 'loc_E77']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
mov ['[edx+38h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '0']
jz ['short', 'loc_EC5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+18h]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+3Ch],', 'eax']
jmp ['short', 'loc_ECE']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+18h],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?InsertBeforeChild@TiXmlNodeA@@QAEPAV1@PAV1@ABV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_F02']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_F09']
xor ['eax,', 'eax']
jmp ['loc_F8F']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+14h]']
call ['edx']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_F23']
xor ['eax,', 'eax']
jmp ['short', 'loc_F8F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+3Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['[ecx+38h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+38h],', '0']
jz ['short', 'loc_F58']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+38h]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+3Ch],', 'ecx']
jmp ['short', 'loc_F83']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_F7A']
push ['0D7h']
push ['offset', '$SG96160']
push ['offset', '$SG96161']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?InsertAfterChild@TiXmlNodeA@@QAEPAV1@PAV1@ABV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_FB2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_FB9']
xor ['eax,', 'eax']
jmp ['loc_103F']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+14h]']
call ['edx']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_FD3']
xor ['eax,', 'eax']
jmp ['short', 'loc_103F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+38h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['[ecx+3Ch],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+3Ch],', '0']
jz ['short', 'loc_1008']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['ecx,', '[ebp+var_4]']
mov ['[eax+38h],', 'ecx']
jmp ['short', 'loc_1033']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+18h]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_102A']
push ['0F1h']
push ['offset', '$SG96174']
push ['offset', '$SG96175']
call ['__wassert']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+18h],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+3Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ReplaceChild@TiXmlNodeA@@QAEPAV1@PAV1@ABV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_8]']
jz ['short', 'loc_1063']
xor ['eax,', 'eax']
jmp ['loc_1110']
mov ['edx,', '[ebp+arg_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax+14h]']
call ['edx']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1080']
xor ['eax,', 'eax']
jmp ['loc_1110']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
mov ['[eax+3Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+3Ch],', '0']
jz ['short', 'loc_10AF']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+3Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+38h],', 'eax']
jmp ['short', 'loc_10B8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_10CF']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['eax,', '[ebp+var_4]']
mov ['[edx+3Ch],', 'eax']
jmp ['short', 'loc_10D8']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_4]']
mov ['[ecx+14h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_10FD']
push ['1']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax]']
call ['edx']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_1104']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?RemoveChild@TiXmlNodeA@@QAE_NPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
cmp ['ecx,', '[ebp+var_4]']
jz ['short', 'loc_114B']
xor ['edx,', 'edx']
jnz ['short', 'loc_1147']
push ['119h']
push ['offset', '$SG96196']
push ['offset', '$SG96197']
call ['__wassert']
add ['esp,', '0Ch']
xor ['al,', 'al']
jmp ['short', 'loc_11C5']
mov ['ecx,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[ecx+3Ch],', '0']
jz ['short', 'loc_1165']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+3Ch]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+38h],', 'edx']
jmp ['short', 'loc_1171']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['[eax+18h],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jz ['short', 'loc_118B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+38h]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[edx+3Ch],', 'ecx']
jmp ['short', 'loc_1197']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+3Ch]']
mov ['[edx+14h],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_11BC']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_11C3']
mov ['[ebp+var_10],', '0']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_64],', 'ecx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_1217']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+38h]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1292']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+var_50]']
call ['?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_58],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_49],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_128D']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_1294']
jmp ['loc_120E']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_64],', 'ecx']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+3Ch]']
mov ['[ebp+var_50],', 'ecx']
jmp ['short', 'loc_12F7']
mov ['edx,', '[ebp+var_50]']
mov ['eax,', '[edx+3Ch]']
mov ['[ebp+var_50],', 'eax']
cmp ['[ebp+var_50],', '0']
jz ['short', 'loc_1372']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_5C],', 'eax']
mov ['edx,', '[ebp+var_5C]']
mov ['[ebp+var_54],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_54]']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+var_50]']
call ['?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['[ebp+var_60],', 'eax']
mov ['edx,', '[ebp+var_60]']
mov ['[ebp+var_58],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_58]']
push ['eax']
call ['??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_49],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
movzx ['ecx,', '[ebp+var_49]']
test ['ecx,', 'ecx']
jz ['short', 'loc_136D']
mov ['eax,', '[ebp+var_50]']
jmp ['short', 'loc_1374']
jmp ['loc_12EE']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?NextSiblingElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_13B9']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_13D7']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_13D5']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
jmp ['short', 'loc_13D9']
jmp ['short', 'loc_13AE']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NextSiblingElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1411']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_142F']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_142D']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
jmp ['short', 'loc_1431']
jmp ['short', 'loc_1402']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_1459']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1477']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1475']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
jmp ['short', 'loc_1479']
jmp ['short', 'loc_144E']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_14B1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_14CF']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_14CD']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
jmp ['short', 'loc_14D1']
jmp ['short', 'loc_14A2']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_14F2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_4],', 'edx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1510']
mov ['ecx,', '[ebp+var_4]']
call ['?ToDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_150E']
mov ['ecx,', '[ebp+var_4]']
call ['?ToDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
jmp ['short', 'loc_1512']
jmp ['short', 'loc_14E9']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlNodeA@@IAE@W4NodeType@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlBaseA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlNodeA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+10h],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+14h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+18h],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+3Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+40h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?IntValue@TiXmlAttributeA@@QBE?BHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
call ['_atoi']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?DoubleValue@TiXmlAttributeA@@QBE?BNXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
call ['_atof']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?QueryIntValue@TiXmlAttributeA@@QBEHPAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG96841']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
call ['_sscanf']
add ['esp,', '0Ch']
cmp ['eax,', '1']
jnz ['short', 'loc_1635']
xor ['eax,', 'eax']
jmp ['short', 'loc_163A']
mov ['eax,', '2']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?QueryDoubleValue@TiXmlAttributeA@@QBEHPAN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG96847']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
call ['_sscanf']
add ['esp,', '0Ch']
cmp ['eax,', '1']
jnz ['short', 'loc_1675']
xor ['eax,', 'eax']
jmp ['short', 'loc_167A']
mov ['eax,', '2']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetIntValue@TiXmlAttributeA@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['offset', '$SG96853']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_sprintf']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['ecx,', '[ebp+var_48]']
call ['?SetValue@TiXmlAttributeA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetDoubleValue@TiXmlAttributeA@@QAEXN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_48],', 'ecx']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+50h+var_50],', 'xmm0']
push ['offset', '$SG96859']
lea ['eax,', '[ebp+Dest]']
push ['eax']
call ['_sprintf']
add ['esp,', '10h']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
mov ['ecx,', '[ebp+var_48]']
call ['?SetValue@TiXmlAttributeA@@QAEXPBD@Z']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Next@TiXmlAttributeA@@QBEPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4Ch]']
add ['ecx,', '2Ch']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_175D']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+4Ch]']
add ['ecx,', '10h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_175D']
xor ['eax,', 'eax']
jmp ['short', 'loc_1763']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+4Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Previous@TiXmlAttributeA@@QBEPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
add ['ecx,', '2Ch']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_179D']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+48h]']
add ['ecx,', '10h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_179D']
xor ['eax,', 'eax']
jmp ['short', 'loc_17A3']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+48h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '78h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_84],', 'ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_84]']
call ['?Name@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_80]']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_84]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['edx,', '[ebp+var_48]']
push ['edx']
lea ['eax,', '[ebp+var_64]']
push ['eax']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z']
add ['esp,', '8']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
push ['0']
push ['22h']
mov ['ecx,', '[ebp+var_84]']
add ['ecx,', '2Ch']
call ['?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z']
cmp ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
jnz ['short', 'loc_1898']
lea ['ecx,', '[ebp+var_48]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96773']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '10h']
jmp ['short', 'loc_18BB']
lea ['ecx,', '[ebp+var_48]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96775']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '10h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlAttributeA@@UBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
push ['22h']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z']
cmp ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
jz ['short', 'loc_196E']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG96797']
push ['offset', '$SG96798']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG96807']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
jmp ['short', 'loc_19C4']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG96825']
push ['offset', '$SG96826']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG96835']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0TiXmlAttributeSetA@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlAttributeSetA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlAttributeA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4Ch],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+var_10]']
mov ['[eax+48h],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1TiXmlAttributeSetA@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlAttributeSetA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
cmp ['[ecx+4Ch],', 'eax']
jz ['short', 'loc_1A87']
push ['469h']
push ['offset', '$SG97148']
push ['offset', '$SG97149']
call ['__wassert']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_10]']
cmp ['[ecx+48h],', 'eax']
jz ['short', 'loc_1AA9']
push ['46Ah']
push ['offset', '$SG97151']
push ['offset', '$SG97152']
call ['__wassert']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlAttributeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Add@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?Name@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
test ['eax,', 'eax']
jz ['short', 'loc_1AFB']
push ['470h']
push ['offset', '$SG97158']
push ['offset', '$SG97159']
call ['__wassert']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['[edx+4Ch],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+48h]']
mov ['[eax+48h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+4Ch],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+48h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Remove@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1B55']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ebp+var_4],', 'ecx']
jz ['short', 'loc_1B9B']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_1B99']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
mov ['[ecx+4Ch],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4Ch]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+48h]']
mov ['[edx+48h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+48h],', '0']
jmp ['short', 'loc_1BB6']
jmp ['short', 'loc_1B4C']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_1BB6']
push ['488h']
push ['offset', '$SG97170']
push ['offset', '$SG97171']
call ['__wassert']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4Ch]']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_1BE5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['[ebp+var_4],', 'ecx']
jz ['short', 'loc_1C0E']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '10h']
push ['eax']
call ['??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z']
add ['esp,', '8']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1C0C']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_1C10']
jmp ['short', 'loc_1BDC']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0TiXmlElementA@@QAE@PBD@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlElementA@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlElementA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0TiXmlAttributeSetA@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??1TiXmlElementA@@UAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlElementA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlElementA@@6B@']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1D3A']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?Remove@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1D31']
push ['1']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_1D38']
mov ['[ebp+var_20],', '0']
jmp ['short', 'loc_1CE0']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1TiXmlAttributeSetA@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Attribute@TiXmlElementA@@QBEPBDPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_1D93']
mov ['ecx,', '[ebp+var_4]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
jmp ['short', 'loc_1D95']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Attribute@TiXmlElementA@@QBEPBDPBDPAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Attribute@TiXmlElementA@@QBEPBDPBD@Z']
mov ['[ebp+Str],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1DE8']
cmp ['[ebp+Str],', '0']
jz ['short', 'loc_1DDF']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['_atoi']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
mov ['[edx],', 'eax']
jmp ['short', 'loc_1DE8']
mov ['eax,', '[ebp+arg_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+Str]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Attribute@TiXmlElementA@@QBEPBDPBDPAN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?Attribute@TiXmlElementA@@QBEPBDPBD@Z']
mov ['[ebp+String],', 'eax']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_1E3E']
cmp ['[ebp+String],', '0']
jz ['short', 'loc_1E2F']
mov ['ecx,', '[ebp+String]']
push ['ecx']
call ['_atof']
add ['esp,', '4']
mov ['edx,', '[ebp+arg_4]']
fstp ['qword', 'ptr', '[edx]']
jmp ['short', 'loc_1E3E']
mov ['eax,', '[ebp+arg_4]']
movsd ['xmm0,', 'ds:__real@0000000000000000']
movsd ['qword', 'ptr', '[eax],', 'xmm0']
mov ['eax,', '[ebp+String]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?QueryIntAttribute@TiXmlElementA@@QBEHPBDPAH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1E70']
mov ['eax,', '1']
jmp ['short', 'loc_1E7C']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?QueryIntValue@TiXmlAttributeA@@QBEHPAH@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?QueryDoubleAttribute@TiXmlElementA@@QBEHPBDPAN@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_1EB0']
mov ['eax,', '1']
jmp ['short', 'loc_1EBC']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?QueryDoubleValue@TiXmlAttributeA@@QBEHPAN@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetAttribute@TiXmlElementA@@QAEXPBD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SetAttribute@TiXmlElementA@@QAEXPBD0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_1F16']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?SetValue@TiXmlAttributeA@@QAEXPBD@Z']
jmp ['short', 'loc_1F95']
push ['50h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_1F45']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??0TiXmlAttributeA@@QAE@PBD0@Z']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_1F4C']
mov ['[ebp+var_1C],', '0']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_28],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_28]']
mov ['[ebp+var_20],', 'edx']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_1F76']
mov ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['?Add@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z']
jmp ['short', 'loc_1F95']
mov ['ecx,', '[ebp+var_10]']
call ['?GetDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ']
mov ['[ebp+var_24],', 'eax']
cmp ['[ebp+var_24],', '0']
jz ['short', 'loc_1F95']
push ['0']
push ['0']
push ['3']
mov ['ecx,', '[ebp+var_24]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?SetAttribute@TiXmlElementA@@QAEXPBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '48h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_48],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
push ['offset', '$SG96442']
lea ['ecx,', '[ebp+Dest]']
push ['ecx']
call ['_sprintf']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+Dest]']
push ['edx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_48]']
call ['?SetAttribute@TiXmlElementA@@QAEXPBD0@Z']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?RemoveAttribute@TiXmlElementA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '44h']
call ['?Find@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_2054']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '44h']
call ['?Remove@TiXmlAttributeSetA@@QAEXPAVTiXmlAttributeA@@@Z']
mov ['edx,', '[ebp+var_4]']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_204D']
push ['1']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
call ['eax']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_2054']
mov ['[ebp+var_14],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clone@TiXmlElementA@@UBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlElementA@@UBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
push ['94h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_20],', '0']
jz ['short', 'loc_20C3']
mov ['ecx,', '[ebp+var_1C]']
call ['?Value@TiXmlNodeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['??0TiXmlElementA@@QAE@PBD@Z']
mov ['[ebp+var_24],', 'eax']
jmp ['short', 'loc_20CA']
mov ['[ebp+var_24],', '0']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_28],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_18],', 'ecx']
cmp ['[ebp+var_18],', '0']
jnz ['short', 'loc_20EA']
xor ['eax,', 'eax']
jmp ['loc_2178']
mov ['edx,', '[ebp+var_18]']
push ['edx']
mov ['ecx,', '[ebp+var_1C]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_1C]']
add ['ecx,', '44h']
call ['?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_2118']
mov ['ecx,', '[ebp+var_10]']
call ['?Next@TiXmlAttributeA@@QBEPAV1@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_213A']
mov ['ecx,', '[ebp+var_10]']
call ['?Value@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?Name@TiXmlAttributeA@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?SetAttribute@TiXmlElementA@@QAEXPBD0@Z']
jmp ['short', 'loc_210D']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_2157']
mov ['ecx,', '[ebp+var_14]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2175']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[eax+14h]']
call ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
jmp ['short', 'loc_214C']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Print@TiXmlElementA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_21A3']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '1']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_21BE']
push ['offset', '$SG96468']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
jmp ['short', 'loc_219A']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96469']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_21F6']
mov ['ecx,', '[ebp+var_10]']
call ['?Next@TiXmlAttributeA@@QBEPAV1@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_2224']
push ['offset', '$SG96474']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+File]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
call ['eax']
jmp ['short', 'loc_21EB']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jnz ['short', 'loc_2243']
push ['offset', '$SG96477']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
jmp ['loc_2370']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+14h]']
cmp ['edx,', '[ecx+18h]']
jnz ['short', 'loc_22B1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
call ['?ToText@TiXmlNodeA@@QBEPAVTiXmlTextA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_22B1']
push ['offset', '$SG96480']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_4]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+File]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[edx]']
mov ['ecx,', '[eax+14h]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96481']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '0Ch']
jmp ['loc_2370']
push ['offset', '$SG96483']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_22D8']
mov ['ecx,', '[ebp+var_C]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_2315']
mov ['ecx,', '[ebp+var_C]']
call ['?ToText@TiXmlNodeA@@QBEPAVTiXmlTextA@@XZ']
test ['eax,', 'eax']
jnz ['short', 'loc_22FB']
push ['offset', '$SG96488']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+File]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[eax+4]']
call ['edx']
jmp ['short', 'loc_22CD']
push ['offset', '$SG96489']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '8']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_2338']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_4]']
jge ['short', 'loc_2353']
push ['offset', '$SG96493']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '8']
jmp ['short', 'loc_232F']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96494']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlElementA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
add ['eax,', '1Ch']
push ['eax']
push ['offset', '$SG96547']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '44h']
call ['?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_23BD']
mov ['ecx,', '[ebp+var_4]']
call ['?Next@TiXmlAttributeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_23E7']
push ['offset', '$SG96560']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
call ['eax']
jmp ['short', 'loc_23B2']
mov ['ecx,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jz ['short', 'loc_2461']
push ['offset', '$SG96571']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_2417']
mov ['ecx,', '[ebp+var_8]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_2430']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
call ['eax']
jmp ['short', 'loc_240C']
push ['offset', '$SG96610']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '1Ch']
push ['ecx']
push ['offset', '$SG96611']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
jmp ['short', 'loc_2472']
push ['offset', '$SG96632']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clone@TiXmlCommentA@@UBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlCommentA@@UBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_20],', 'ecx']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_24C7']
mov ['ecx,', '[ebp+var_14]']
call ['??0TiXmlCommentA@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_24CE']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_24EB']
xor ['eax,', 'eax']
jmp ['short', 'loc_24FA']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_20]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Print@TiXmlCommentA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2533']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_254E']
mov ['edx,', '[ebp+File]']
push ['edx']
push ['offset', '$SG96875']
call ['_fputs']
add ['esp,', '8']
jmp ['short', 'loc_252A']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96876']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlCommentA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '$SG96900']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '1Ch']
push ['edx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG96909']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Print@TiXmlTextA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Print@TiXmlTextA@@UBEXPAU_iobuf@@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
add ['ecx,', '1Ch']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV23@@Z']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96925']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Clone@TiXmlTextA@@MBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlTextA@@MBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_20],', 'ecx']
mov ['[ebp+var_10],', '0']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_26C3']
push ['offset', '$SG96938']
mov ['ecx,', '[ebp+var_14]']
call ['??0TiXmlTextA@@QAE@PBD@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_26CA']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_26E7']
xor ['eax,', 'eax']
jmp ['short', 'loc_26F6']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_20]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?StreamOut@TiXmlTextA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0TiXmlDeclarationA@@QAE@PBD00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlDeclarationA@@QAE@PBD00@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['5']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDeclarationA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Clone@TiXmlDeclarationA@@UBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlDeclarationA@@UBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['98h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_18],', '0']
jz ['short', 'loc_283A']
mov ['ecx,', '[ebp+var_18]']
call ['??0TiXmlDeclarationA@@QAE@XZ']
mov ['[ebp+var_1C],', 'eax']
jmp ['short', 'loc_2841']
mov ['[ebp+var_1C],', '0']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_285E']
xor ['eax,', 'eax']
jmp ['short', 'loc_28A3']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '44h']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '60h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '7Ch']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Print@TiXmlDeclarationA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '$SG96951']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_28FF']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96953']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_292E']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96955']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_295D']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG96957']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
push ['offset', '$SG96958']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fprintf']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlDeclarationA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '$SG96982']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_29D7']
push ['offset', '$SG97003']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '44h']
push ['ecx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG97012']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '60h']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_2A1E']
push ['offset', '$SG97033']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '60h']
push ['eax']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG97042']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '7Ch']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_2A65']
push ['offset', '$SG97063']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '7Ch']
push ['edx']
call ['?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
add ['esp,', '8']
push ['offset', '$SG97072']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['offset', '$SG97081']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clone@TiXmlUnknownA@@UBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlUnknownA@@UBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_20],', 'ecx']
push ['44h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2AD7']
mov ['ecx,', '[ebp+var_14]']
call ['??0TiXmlUnknownA@@QAE@XZ']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_2ADE']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_2AFB']
xor ['eax,', 'eax']
jmp ['short', 'loc_2B0A']
mov ['edx,', '[ebp+var_10]']
push ['edx']
mov ['ecx,', '[ebp+var_20]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Print@TiXmlUnknownA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_2B43']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_4]']
jge ['short', 'loc_2B5E']
push ['offset', '$SG97100']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_fprintf']
add ['esp,', '8']
jmp ['short', 'loc_2B3A']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
push ['offset', '$SG97101']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlUnknownA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '$SG97130']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1Ch']
push ['eax']
push ['offset', '$SG97131']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
add ['esp,', '8']
push ['eax']
call ['??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0TiXmlDocumentA@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlDocumentA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDocumentA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0TiXmlCursorA@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+68h],', '4']
mov ['ecx,', '[ebp+var_10]']
call ['?ClearError@TiXmlDocumentA@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlDocumentA@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlDocumentA@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDocumentA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '6Ch']
call ['??0TiXmlCursorA@@QAE@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+68h],', '4']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['ecx,', '[ebp+var_10]']
call ['?ClearError@TiXmlDocumentA@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?LoadFile@TiXmlDocumentA@@QAE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?LoadFile@TiXmlDocumentA@@QAE_NXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1Ch']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0StringToBuffer@TiXmlBaseA@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2D67']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2D67']
mov ['[ebp+var_D],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
mov ['al,', '[ebp+var_D]']
jmp ['short', 'loc_2D7D']
mov ['[ebp+var_E],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
mov ['al,', '[ebp+var_E]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SaveFile@TiXmlDocumentA@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SaveFile@TiXmlDocumentA@@QBE_NXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
add ['eax,', '1Ch']
push ['eax']
lea ['ecx,', '[ebp+var_14]']
call ['??0StringToBuffer@TiXmlBaseA@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_2E07']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?SaveFile@TiXmlDocumentA@@QBE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2E07']
mov ['[ebp+var_D],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
mov ['al,', '[ebp+var_D]']
jmp ['short', 'loc_2E1D']
mov ['[ebp+var_E],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
mov ['al,', '[ebp+var_E]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '834h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_830],', 'ecx']
mov ['ecx,', '[ebp+var_830]']
call ['?Clear@TiXmlNodeA@@QAEXXZ']
mov ['ecx,', '[ebp+var_830]']
add ['ecx,', '4']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_830]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
push ['offset', '$SG96676']
mov ['ecx,', '[ebp+var_830]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jz ['loc_3020']
mov ['[ebp+var_83C],', '0']
push ['2']
push ['0']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fseek']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_ftell']
add ['esp,', '4']
mov ['[ebp+var_83C],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fseek']
add ['esp,', '0Ch']
cmp ['[ebp+var_83C],', '0']
jnz ['short', 'loc_2F27']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_3033']
lea ['ecx,', '[ebp+var_82C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_83C]']
push ['edx']
lea ['ecx,', '[ebp+var_82C]']
call ['?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['[ebp+var_840],', '800h']
mov ['eax,', '[ebp+File]']
push ['eax']
push ['800h']
lea ['ecx,', '[ebp+Buf]']
push ['ecx']
call ['_fgets']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_2F88']
lea ['edx,', '[ebp+Buf]']
push ['edx']
lea ['ecx,', '[ebp+var_82C]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
jmp ['short', 'loc_2F55']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
push ['0']
lea ['ecx,', '[ebp+var_82C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_830]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_830]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', '[ebp+var_830]']
call ['?Error@TiXmlDocumentA@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2FED']
mov ['[ebp+var_836],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['al,', '[ebp+var_836]']
jmp ['short', 'loc_3033']
jmp ['short', 'loc_300E']
mov ['[ebp+var_835],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['al,', '[ebp+var_835]']
jmp ['short', 'loc_3033']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
push ['0']
push ['0']
push ['2']
mov ['ecx,', '[ebp+var_830]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['al,', 'al']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SaveFile@TiXmlDocumentA@@QBE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
push ['offset', '$SG96714']
mov ['eax,', '[ebp+Filename]']
push ['eax']
call ['_fopen']
add ['esp,', '8']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jz ['short', 'loc_309E']
push ['0']
mov ['ecx,', '[ebp+File]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
call ['edx']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
mov ['al,', '1']
jmp ['short', 'loc_30A0']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?LoadUnicodeFilePath@TiXmlDocumentA@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?LoadUnicodeFilePath@TiXmlDocumentA@@QAE_NPB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '834h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_838],', 'ecx']
mov ['ecx,', '[ebp+var_838]']
call ['?Clear@TiXmlNodeA@@QAEXXZ']
mov ['ecx,', '[ebp+var_838]']
add ['ecx,', '4']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
push ['offset', '$SG96695']
mov ['eax,', '[ebp+Filename]']
push ['eax']
call ['__wfopen']
add ['esp,', '8']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jz ['loc_3273']
mov ['[ebp+var_83C],', '0']
push ['2']
push ['0']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fseek']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+File]']
push ['edx']
call ['_ftell']
add ['esp,', '4']
mov ['[ebp+var_83C],', 'eax']
push ['0']
push ['0']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fseek']
add ['esp,', '0Ch']
cmp ['[ebp+var_83C],', '0']
jnz ['short', 'loc_317A']
mov ['ecx,', '[ebp+File]']
push ['ecx']
call ['_fclose']
add ['esp,', '4']
xor ['al,', 'al']
jmp ['loc_3286']
lea ['ecx,', '[ebp+var_82C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_83C]']
push ['edx']
lea ['ecx,', '[ebp+var_82C]']
call ['?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['[ebp+var_840],', '800h']
mov ['eax,', '[ebp+File]']
push ['eax']
push ['800h']
lea ['ecx,', '[ebp+Buf]']
push ['ecx']
call ['_fgets']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jz ['short', 'loc_31DB']
lea ['edx,', '[ebp+Buf]']
push ['edx']
lea ['ecx,', '[ebp+var_82C]']
call ['??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
jmp ['short', 'loc_31A8']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
push ['0']
lea ['ecx,', '[ebp+var_82C]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_838]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_838]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', '[ebp+var_838]']
call ['?Error@TiXmlDocumentA@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_3240']
mov ['[ebp+var_831],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['al,', '[ebp+var_831]']
jmp ['short', 'loc_3286']
jmp ['short', 'loc_3261']
mov ['[ebp+var_832],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['al,', '[ebp+var_832]']
jmp ['short', 'loc_3286']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_82C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
push ['0']
push ['0']
push ['2']
mov ['ecx,', '[ebp+var_838]']
call ['?SetError@TiXmlDocumentA@@QAEXHPBDPAVTiXmlParsingDataA@@@Z']
xor ['al,', 'al']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SaveUnicodeFilePath@TiXmlDocumentA@@QBE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
push ['offset', '$SG96721']
mov ['eax,', '[ebp+Filename]']
push ['eax']
call ['__wfopen']
add ['esp,', '8']
mov ['[ebp+File],', 'eax']
cmp ['[ebp+File],', '0']
jz ['short', 'loc_32EE']
push ['0']
mov ['ecx,', '[ebp+File]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[eax+4]']
call ['edx']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fclose']
add ['esp,', '4']
mov ['al,', '1']
jmp ['short', 'loc_32F0']
xor ['al,', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Print@TiXmlDocumentA@@UBEXPAU_iobuf@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3319']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3347']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+File]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['offset', '$SG96745']
mov ['eax,', '[ebp+File]']
push ['eax']
call ['_fprintf']
add ['esp,', '8']
jmp ['short', 'loc_330E']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?StreamOut@TiXmlDocumentA@@MBEXPAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_3379']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_33A0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_339E']
jmp ['short', 'loc_33A0']
jmp ['short', 'loc_336E']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Clone@TiXmlDocumentA@@MBEPAVTiXmlNodeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?Clone@TiXmlDocumentA@@MBEPAVTiXmlNodeA@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
push ['74h']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_1C],', '0']
jz ['short', 'loc_33F7']
mov ['ecx,', '[ebp+var_1C]']
call ['??0TiXmlDocumentA@@QAE@XZ']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_33FE']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_14],', 'ecx']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_341B']
xor ['eax,', 'eax']
jmp ['short', 'loc_3488']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_18]']
call ['?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_18]']
mov ['dl,', '[ecx+44h]']
mov ['[eax+44h],', 'dl']
mov ['ecx,', '[ebp+var_18]']
add ['ecx,', '4Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_10],', 'ecx']
jmp ['short', 'loc_3467']
mov ['ecx,', '[ebp+var_10]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_3485']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax+14h]']
call ['edx']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?LinkEndChild@TiXmlNodeA@@QAEPAV1@PAV1@@Z']
jmp ['short', 'loc_345C']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FirstChild@TiXmlHandleA@@QBE?AV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_34CD']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_34CD']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_34DA']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FirstChild@TiXmlHandleA@@QBE?AV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3521']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_3521']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_352E']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?FirstChildElement@TiXmlHandleA@@QBE?AV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_356D']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx]']
call ['?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_356D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_357A']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?FirstChildElement@TiXmlHandleA@@QBE?AV1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_35C1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx]']
call ['?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@PBD@Z']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_35C1']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_35CE']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?Child@TiXmlHandleA@@QBE?AV1@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3642']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['ecx,', '[edx]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_361B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_362B']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_8]']
jge ['short', 'loc_362B']
jmp ['short', 'loc_3603']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3642']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_364F']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?Child@TiXmlHandleA@@QBE?AV1@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_36BA']
mov ['ecx,', '[ebp+var_C]']
mov ['ecx,', '[ecx]']
call ['?FirstChild@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3693']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSibling@TiXmlNodeA@@QBEPAV1@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_36A3']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_36A3']
jmp ['short', 'loc_367F']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_36BA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_36C7']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?ChildElement@TiXmlHandleA@@QBE?AV1@PBDH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_3742']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['ecx,', '[edx]']
call ['?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_371B']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSiblingElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@PBD@Z']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '1']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_372B']
mov ['edx,', '[ebp+var_8]']
cmp ['edx,', '[ebp+arg_8]']
jge ['short', 'loc_372B']
jmp ['short', 'loc_3703']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_3742']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_374F']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?ChildElement@TiXmlHandleA@@QBE?AV1@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_37BA']
mov ['ecx,', '[ebp+var_C]']
mov ['ecx,', '[ecx]']
call ['?FirstChildElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_3793']
mov ['ecx,', '[ebp+var_4]']
call ['?NextSiblingElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '1']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_37A3']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_4]']
jge ['short', 'loc_37A3']
jmp ['short', 'loc_377F']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_37BA']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_37C7']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PutString@TiXmlBaseA@@KAXABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PAV?$basic_ostream@DU?$char_traits@D@std@@@3@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??5@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV01@AAVTiXmlNodeA@@@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??5@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV01@AAVTiXmlNodeA@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??5@YAAAV?$basic_istream@DU?$char_traits@D@std@@@std@@AAV01@AAVTiXmlNodeA@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z$0 proc near
lea ['ecx,', '[ebp-0D0h]']
jmp ['??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ']
endp
__unwindfunclet$??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0C8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??6@YAAAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAV01@ABVTiXmlNodeA@@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1TiXmlNodeA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlNodeA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-14h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlNodeA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlNodeA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?FirstChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?LastChild@TiXmlNodeA@@QBEPAV1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?PreviousSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?NextSibling@TiXmlNodeA@@QBEPAV1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlNodeA@@IAE@W4NodeType@0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlNodeA@@IAE@W4NodeType@0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlNodeA@@IAE@W4NodeType@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z$1 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z$2 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z$3 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-7Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Print@TiXmlAttributeA@@UBEXPAU_iobuf@@H@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlAttributeSetA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlAttributeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlAttributeSetA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlAttributeSetA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1TiXmlAttributeSetA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlAttributeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlAttributeSetA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlAttributeSetA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlElementA@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlElementA@@QAE@PBD@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1TiXmlAttributeSetA@@QAE@XZ']
endp
__ehhandler$??0TiXmlElementA@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlElementA@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??1TiXmlElementA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlElementA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1TiXmlAttributeSetA@@QAE@XZ']
endp
__ehhandler$??1TiXmlElementA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlElementA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SetAttribute@TiXmlElementA@@QAEXPBD0@Z$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?SetAttribute@TiXmlElementA@@QAEXPBD0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SetAttribute@TiXmlElementA@@QAEXPBD0@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlElementA@@UBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlElementA@@UBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlElementA@@UBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlCommentA@@UBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlCommentA@@UBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlCommentA@@UBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Print@TiXmlTextA@@UBEXPAU_iobuf@@H@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?Print@TiXmlTextA@@UBEXPAU_iobuf@@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Print@TiXmlTextA@@UBEXPAU_iobuf@@H@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlTextA@@MBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlTextA@@MBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlTextA@@MBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@PBD00@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@PBD00@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@PBD00@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@PBD00@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlDeclarationA@@QAE@PBD00@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlDeclarationA@@QAE@PBD00@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlDeclarationA@@UBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-18h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlDeclarationA@@UBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlDeclarationA@@UBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlUnknownA@@UBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlUnknownA@@UBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlUnknownA@@UBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlDocumentA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlDocumentA@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlDocumentA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlDocumentA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$??0TiXmlDocumentA@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlDocumentA@@QAE@PBD@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlDocumentA@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlDocumentA@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?LoadFile@TiXmlDocumentA@@QAE_NXZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
endp
__ehhandler$?LoadFile@TiXmlDocumentA@@QAE_NXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?LoadFile@TiXmlDocumentA@@QAE_NXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?SaveFile@TiXmlDocumentA@@QBE_NXZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1StringToBuffer@TiXmlBaseA@@QAE@XZ']
endp
__ehhandler$?SaveFile@TiXmlDocumentA@@QBE_NXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SaveFile@TiXmlDocumentA@@QBE_NXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z$0 proc near
lea ['ecx,', '[ebp-82Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-838h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?LoadFile@TiXmlDocumentA@@QAE_NPBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?LoadUnicodeFilePath@TiXmlDocumentA@@QAE_NPB_W@Z$0 proc near
lea ['ecx,', '[ebp-82Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?LoadUnicodeFilePath@TiXmlDocumentA@@QAE_NPB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-838h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?LoadUnicodeFilePath@TiXmlDocumentA@@QAE_NPB_W@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?Clone@TiXmlDocumentA@@MBEPAVTiXmlNodeA@@XZ$0 proc near
mov ['eax,', '[ebp-1Ch]']
push ['eax']
call ['??3@YAXPAX@Z']
pop ['ecx']
retn
endp
__ehhandler$?Clone@TiXmlDocumentA@@MBEPAVTiXmlNodeA@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?Clone@TiXmlDocumentA@@MBEPAVTiXmlNodeA@@XZ']
jmp ['___CxxFrameHandler3']
endp
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '44h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', '0']
mov ['ecx,', '[ebp+arg_4]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?width@ios_base@std@@QBE_JXZ']
mov ['[ebp+var_3C],', 'eax']
mov ['[ebp+var_38],', 'edx']
cmp ['[ebp+var_38],', '0']
jl ['short', 'loc_3D95']
jg ['short', 'loc_3D64']
cmp ['[ebp+var_3C],', '0']
jbe ['short', 'loc_3D95']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?width@ios_base@std@@QBE_JXZ']
cmp ['eax,', '[ebp+var_1C]']
jbe ['short', 'loc_3D95']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?width@ios_base@std@@QBE_JXZ']
sub ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_3D9C']
mov ['[ebp+var_20],', '0']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_54]']
call ['??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_54]']
call ['??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_3DD2']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
jmp ['loc_3F65']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?flags@ios_base@std@@QBEHXZ']
and ['eax,', '1C0h']
cmp ['eax,', '40h']
jz ['short', 'loc_3E5B']
jmp ['short', 'loc_3DFB']
mov ['eax,', '[ebp+var_18]']
sub ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_3E5B']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z']
mov ['[ebp+var_24],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_28],', 'eax']
lea ['eax,', '[ebp+var_24]']
push ['eax']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3E59']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3E5B']
jmp ['short', 'loc_3DF2']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_3EB6']
mov ['ecx,', '[ebp+var_1C]']
xor ['edx,', 'edx']
push ['edx']
push ['ecx']
mov ['ecx,', '[ebp+arg_4]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z']
mov ['ecx,', '[ebp+var_1C]']
xor ['esi,', 'esi']
mov ['[ebp+var_44],', 'eax']
mov ['[ebp+var_40],', 'edx']
mov ['[ebp+var_4C],', 'ecx']
mov ['[ebp+var_48],', 'esi']
mov ['edx,', '[ebp+var_44]']
cmp ['edx,', '[ebp+var_4C]']
jnz ['short', 'loc_3EAB']
mov ['eax,', '[ebp+var_40]']
cmp ['eax,', '[ebp+var_48]']
jz ['short', 'loc_3EB6']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_3F23']
jmp ['short', 'loc_3EC1']
mov ['edx,', '[ebp+var_18]']
sub ['edx,', '1']
mov ['[ebp+var_18],', 'edx']
cmp ['[ebp+var_18],', '0']
jbe ['short', 'loc_3F23']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z']
mov ['[ebp+var_2C],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_30],', 'eax']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_3F21']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_3F23']
jmp ['short', 'loc_3EB8']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?width@ios_base@std@@QAE_J_J@Z']
jmp ['short', 'loc_3F55']
endp
__catch$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$0 proc near
push ['1']
push ['4']
mov ['eax,', '[ebp+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+8]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['eax,', 'offset', '$LN23_0']
retn
endp
$LN23_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0']
endp
__unwindfunclet$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z$2 proc near
lea ['ecx,', '[ebp-54h]']
jmp ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-58h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '50h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
xor ['ecx,', 'ecx']
mov ['[ebp+var_38],', 'eax']
mov ['[ebp+var_34],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?width@ios_base@std@@QBE_JXZ']
mov ['[ebp+var_48],', 'eax']
mov ['[ebp+var_44],', 'edx']
cmp ['[ebp+var_44],', '0']
jl ['short', 'loc_407D']
jg ['short', 'loc_4037']
cmp ['[ebp+var_48],', '0']
jbe ['short', 'loc_407D']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?width@ios_base@std@@QBE_JXZ']
mov ['[ebp+var_50],', 'eax']
mov ['[ebp+var_4C],', 'edx']
mov ['eax,', '[ebp+var_4C]']
cmp ['eax,', '[ebp+var_34]']
jl ['short', 'loc_407D']
jg ['short', 'loc_405F']
mov ['ecx,', '[ebp+var_50]']
cmp ['ecx,', '[ebp+var_38]']
jbe ['short', 'loc_407D']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?width@ios_base@std@@QBE_JXZ']
sub ['eax,', '[ebp+var_38]']
sbb ['edx,', '[ebp+var_34]']
mov ['dword', 'ptr', '[ebp+var_40],', 'eax']
mov ['dword', 'ptr', '[ebp+var_40+4],', 'edx']
jmp ['short', 'loc_4086']
xorpd ['xmm0,', 'xmm0']
movlpd ['[ebp+var_40],', 'xmm0']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_40]']
mov ['[ebp+var_30],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_40+4]']
mov ['[ebp+var_2C],', 'edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
call ['??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_60]']
call ['??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_40C2']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '4']
mov ['[ebp+var_14],', 'edx']
jmp ['loc_426C']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?flags@ios_base@std@@QBEHXZ']
and ['eax,', '1C0h']
cmp ['eax,', '40h']
jz ['short', 'loc_415E']
jmp ['short', 'loc_40F6']
mov ['eax,', '[ebp+var_30]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+var_2C]']
sbb ['ecx,', '0']
mov ['[ebp+var_30],', 'eax']
mov ['[ebp+var_2C],', 'ecx']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_415E']
jg ['short', 'loc_4104']
cmp ['[ebp+var_30],', '0']
jbe ['short', 'loc_415E']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ']
movzx ['ecx,', 'al']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z']
mov ['[ebp+var_18],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_1C],', 'eax']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_415C']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '4']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_415E']
jmp ['short', 'loc_40E4']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_41A6']
mov ['edx,', '[ebp+var_34]']
push ['edx']
mov ['eax,', '[ebp+var_38]']
push ['eax']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z']
mov ['[ebp+var_58],', 'eax']
mov ['[ebp+var_54],', 'edx']
mov ['ecx,', '[ebp+var_58]']
cmp ['ecx,', '[ebp+var_38]']
jnz ['short', 'loc_419D']
mov ['edx,', '[ebp+var_54]']
cmp ['edx,', '[ebp+var_34]']
jz ['short', 'loc_41A6']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jnz ['short', 'loc_422A']
jmp ['short', 'loc_41C0']
mov ['ecx,', '[ebp+var_30]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+var_2C]']
sbb ['edx,', '0']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_2C],', 'edx']
cmp ['[ebp+var_2C],', '0']
jl ['short', 'loc_422A']
jg ['short', 'loc_41CE']
cmp ['[ebp+var_30],', '0']
jbe ['short', 'loc_422A']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ']
movzx ['eax,', 'al']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z']
mov ['[ebp+var_20],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_24],', 'eax']
lea ['eax,', '[ebp+var_20]']
push ['eax']
lea ['ecx,', '[ebp+var_24]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_4228']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '4']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_422A']
jmp ['short', 'loc_41AE']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?width@ios_base@std@@QAE_J_J@Z']
jmp ['short', 'loc_425C']
endp
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0 proc near
push ['1']
push ['4']
mov ['eax,', '[ebp+8]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+8]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['eax,', 'offset', '$LN23']
retn
endp
$LN23           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0']
endp
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-64h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['al,', '1']
pop ['ebp']
retn
endp
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_42F5']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_42FC']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_4321']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_4328']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_2]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
push ['eax']
call ['??$?8DD@std@@YA_NABV?$allocator@D@0@0@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?8V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_4380']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_4387']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_43A3']
jmp ['short', 'loc_43C3']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_43BE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_43C3']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_43DF']
jmp ['short', 'loc_4405']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_4400']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_4405']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Memory],', '0']
jz ['short', 'loc_442F']
push ['0']
mov ['eax,', '[ebp+Memory]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+Memory]']
mov ['eax,', '[edx]']
call ['eax']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['_free']
add ['esp,', '4']
pop ['ebp']
retn
endp
??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Memory],', '0']
jz ['short', 'loc_4457']
push ['0']
mov ['eax,', '[ebp+Memory]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+Memory]']
mov ['eax,', '[edx]']
call ['eax']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['_free']
add ['esp,', '4']
pop ['ebp']
retn
endp
??$_DebugHeapDelete@Vlocale@std@@@std@@YAXPAVlocale@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+Memory],', '0']
jz ['short', 'loc_447B']
push ['0']
mov ['ecx,', '[ebp+Memory]']
call ['??_Glocale@std@@QAEPAXI@Z']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['_free']
add ['esp,', '4']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPADPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_449E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_44BE']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PBD@std@@YAXPBD0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_4510']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_4510']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PBD@std@@YAXPBD0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PBD@std@@YA?AUrandom_access_iterator_tag@0@ABQBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_45F5']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_45FC']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_46CF']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_46D6']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
push ['0']
lea ['ecx,', '[ebp+var_20]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', 'ds:?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', 'offset', '?id@?$ctype@D@std@@2V0locale@2@A']
call ['??Bid@locale@std@@QAEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_47EE']
jmp ['short', 'loc_485C']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_47FC']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_485C']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_10]']
push ['ecx']
call ['?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
add ['esp,', '8']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_482E']
push ['offset', '??_C@_08EPJLHIJG@bad?5cast?$AA@']
lea ['ecx,', '[ebp+var_30]']
call ['??0bad_cast@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVbad_cast@std@@']
lea ['edx,', '[ebp+var_30]']
push ['edx']
call ['__CxxThrowException@8']
jmp ['short', 'loc_485C']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['ds:?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B,', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_18]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
call ['?_Facet_Register@std@@YAXPAV_Facet_base@1@@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_24],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_20]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['eax,', '[ebp+var_24]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Yarn@D@std@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['byte', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Yarn@_W@std@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+4],', 'cx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0ios_base@std@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ios_base@std@@UAE@XZ']
endp
__ehhandler$??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_4B25']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_8?$basic_ostream@DU?$char_traits@D@std@@@std@@7B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+ecx],', 'offset', '??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
sub ['edx,', '8']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['eax,', '[ecx+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+eax-4],', 'edx']
movzx ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[edx+4]']
call ['?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN5']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
retn
endp
__ehhandler$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_4C19']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '50h']
call ['??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
push ['0']
push ['0']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '4']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx],', 'offset', '??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+4]']
sub ['eax,', '50h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+ecx-4],', 'eax']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '2']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN5_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '50h']
jmp ['??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
retn
endp
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ']
endp
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
endp
__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@']
push ['19h']
push ['offset', '??_C@_0EJ@IBPBNBIE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
call ['?_DebugHeapTag_func@std@@YAABU_DebugHeapTag_t@1@XZ']
push ['eax']
push ['4']
call ['??2@YAPAXIABU_DebugHeapTag_t@std@@PADH@Z']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_4D1F']
mov ['ecx,', '[ebp+var_8]']
call ['??0locale@std@@QAE@XZ']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_4D26']
mov ['[ebp+var_C],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_C]']
mov ['[ecx+34h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$forward@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
lea ['ecx,', '[ebp+var_E]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['edx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '40h']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z']
push ['eax']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ']
endp
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0ctype_base@std@@QAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7?$ctype@D@std@@6B@']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ctype_base@std@@UAE@XZ']
endp
__ehhandler$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$fpos@H@std@@QAE@_J@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0TiXmlAttributeA@@QAE@PBD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlAttributeA@@QAE@PBD0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlBaseA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlAttributeA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+4Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+48h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@PBD0@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@PBD0@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@PBD0@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlAttributeA@@QAE@PBD0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlAttributeA@@QAE@PBD0@Z']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlAttributeA@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlAttributeA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlBaseA@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlAttributeA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+0Ch],', '0']
mov ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[edx+4Ch],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+48h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlAttributeA@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlAttributeA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlAttributeA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlBaseA@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlBaseA@@6B@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['??0TiXmlCursorA@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlCommentA@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlCommentA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['2']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlCommentA@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlCommentA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlCommentA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlCommentA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlCursorA@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?Clear@TiXmlCursorA@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0TiXmlDeclarationA@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlDeclarationA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['5']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDeclarationA@@6B@']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0TiXmlDeclarationA@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??0TiXmlDeclarationA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlDeclarationA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlHandleA@@QAE@PAVTiXmlNodeA@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0TiXmlTextA@@QAE@PBD@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlTextA@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['4']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlTextA@@6B@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?SetValue@TiXmlNodeA@@QAEXPBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0TiXmlTextA@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlTextA@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlTextA@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0TiXmlUnknownA@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0TiXmlUnknownA@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['3']
mov ['ecx,', '[ebp+var_10]']
call ['??0TiXmlNodeA@@IAE@W4NodeType@0@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlUnknownA@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0TiXmlUnknownA@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??0TiXmlUnknownA@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0TiXmlUnknownA@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Facet_base@std@@QAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Facet_base@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Locinfo@std@@QAE@PBD@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Locinfo@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??0?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??0?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_5830']
push ['offset', '??_C@_0BA@ELKIONDK@bad?5locale?5name?$AA@']
lea ['ecx,', '[ebp+var_1C]']
call ['??0runtime_error@std@@QAE@PBD@Z']
push ['offset', '__TI2?AVruntime_error@std@@']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['__CxxThrowException@8']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
push ['edx']
call ['?_Locinfo_ctor@_Locinfo@std@@SAXPAV12@PBD@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??0_Locinfo@std@@QAE@PBD@Z$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__ehhandler$??0_Locinfo@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Locinfo@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '[edx+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_5919']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+4]']
call ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '38h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
sub ['esp,', '1Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_40],', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['ecx,', '[ebp+var_3C]']
mov ['[ebp+var_44],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
call ['?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
add ['esp,', '28h']
mov ['[ebp+var_38],', 'eax']
mov ['edx,', '[ebp+var_38]']
mov ['[ebp+var_34],', 'edx']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_34]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7_System_error@std@@6B@']
mov ['edx,', '[ebp+var_30]']
mov ['eax,', '[ebp+arg_0]']
mov ['[edx+0Ch],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['[edx+10h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0 proc near
mov ['ecx,', '[ebp-40h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$2 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0_System_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0runtime_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7_System_error@std@@6B@']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx+10h]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+0Ch],', 'eax']
mov ['[edx+10h],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0_System_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??0_System_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ctype_base@std@@QAE@I@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ctype_base@std@@QAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0facet@locale@std@@IAE@I@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7ctype_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0ctype_base@std@@QAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1facet@locale@std@@MAE@XZ']
endp
__ehhandler$??0ctype_base@std@@QAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ctype_base@std@@QAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_code@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0facet@locale@std@@IAE@I@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0facet@locale@std@@IAE@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Facet_base@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7facet@locale@std@@6B@']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '4']
push ['edx']
call ['?_Init_atomic_counter@std@@YAXAAKK@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0facet@locale@std@@IAE@I@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Facet_base@std@@UAE@XZ']
endp
__ehhandler$??0facet@locale@std@@IAE@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0facet@locale@std@@IAE@I@Z']
jmp ['___CxxFrameHandler3']
endp
??0failure@ios_base@std@@QAE@ABV012@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0failure@ios_base@std@@QAE@ABV012@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0system_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7failure@ios_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0failure@ios_base@std@@QAE@ABV012@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??0failure@ios_base@std@@QAE@ABV012@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0failure@ios_base@std@@QAE@ABV012@@Z']
jmp ['___CxxFrameHandler3']
endp
??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ecx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0system_error@std@@QAE@Verror_code@1@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7failure@ios_base@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
jmp ['___CxxFrameHandler3']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0ios_base@std@@IAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ios_base@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0locale@std@@QAE@ABV01@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ecx]']
mov ['ecx,', '[edx]']
mov ['edx,', '[eax+4]']
call ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0locale@std@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
call ['?_Init@locale@std@@CAPAV_Locimp@12@_N@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0runtime_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['[ebp+var_14],', 'eax']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0runtime_error@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0runtime_error@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0exception@std@@QAE@ABQBD@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7runtime_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0runtime_error@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??0runtime_error@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0runtime_error@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_606C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '[edx+4]']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_606C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_606C']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx+4],', 'al']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
jmp ['___CxxFrameHandler3']
endp
??0system_error@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0system_error@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_System_error@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7system_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0system_error@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??0system_error@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0system_error@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0system_error@std@@QAE@Verror_code@1@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_30]']
call ['??0_System_error@std@@IAE@Verror_code@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_30]']
mov ['dword', 'ptr', '[ecx],', 'offset', '??_7system_error@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_30]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0system_error@std@@QAE@Verror_code@1@PBD@Z$1 proc near
mov ['ecx,', '[ebp-30h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??0system_error@std@@QAE@Verror_code@1@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0system_error@std@@QAE@Verror_code@1@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Yarn@D@std@@QAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$_Yarn@D@std@@AAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$_Yarn@_W@std@@QAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$_Yarn@_W@std@@AAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1ios_base@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ios_base@std@@UAE@XZ']
endp
__ehhandler$??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax-8]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+edx-8],', 'offset', '??_7?$basic_ostream@DU?$char_traits@D@std@@@std@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-8]']
mov ['eax,', '[edx+4]']
sub ['eax,', '8']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx-8]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+ecx-0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax-50h]']
mov ['edx,', '[ecx+4]']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+edx-50h],', 'offset', '??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx-50h]']
mov ['eax,', '[edx+4]']
sub ['eax,', '50h']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx-50h]']
mov ['ecx,', '[edx+4]']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+ecx-54h],', 'eax']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '4Ch']
call ['??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
sub ['ecx,', '48h']
call ['??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
sub ['ecx,', '48h']
jmp ['??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ']
endp
__unwindfunclet$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
sub ['ecx,', '4Ch']
jmp ['??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
endp
__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+34h]']
push ['edx']
call ['??$_DebugHeapDelete@Vlocale@std@@@std@@YAXPAVlocale@0@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ']
endp
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$ctype@D@std@@MAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$ctype@D@std@@MAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7?$ctype@D@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$ctype@D@std@@IAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1ctype_base@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$ctype@D@std@@MAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1ctype_base@std@@UAE@XZ']
endp
__ehhandler$??1?$ctype@D@std@@MAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$ctype@D@std@@MAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlAttributeA@@UAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlAttributeA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '2']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '10h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlBaseA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlBaseA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '10h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlAttributeA@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlAttributeA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlAttributeA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlBaseA@@UAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlBaseA@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1TiXmlCommentA@@UAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlCommentA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlCommentA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlCommentA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlCommentA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlCommentA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlDeclarationA@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlDeclarationA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDeclarationA@@6B@']
mov ['[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '7Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '60h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '44h']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '44h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '60h']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1TiXmlDeclarationA@@UAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '7Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlDeclarationA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlDeclarationA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlDocumentA@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlDocumentA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlDocumentA@@6B@']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4Ch']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlDocumentA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__unwindfunclet$??1TiXmlDocumentA@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4Ch']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$??1TiXmlDocumentA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlDocumentA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlTextA@@UAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlTextA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlTextA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlTextA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlTextA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlTextA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1TiXmlUnknownA@@UAE@XZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1TiXmlUnknownA@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7TiXmlUnknownA@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1TiXmlUnknownA@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1TiXmlNodeA@@UAE@XZ']
endp
__ehhandler$??1TiXmlUnknownA@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1TiXmlUnknownA@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Facet_base@std@@UAE@XZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Facet_base@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Locinfo@std@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Locinfo@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_10]']
push ['eax']
call ['?_Locinfo_dtor@_Locinfo@std@@SAXPAV12@@Z']
add ['esp,', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '2Ch']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '24h']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '14h']
call ['??1?$_Yarn@_W@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '0Ch']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$_Yarn@D@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$2 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '0Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$3 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '14h']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$4 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$_Yarn@_W@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$5 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '24h']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__unwindfunclet$??1_Locinfo@std@@QAE@XZ$6 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '2Ch']
jmp ['??1?$_Yarn@D@std@@QAE@XZ']
endp
__ehhandler$??1_Locinfo@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Locinfo@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_6C27']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_C]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_System_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1runtime_error@std@@UAE@XZ']
endp
__ehhandler$??1_System_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1ctype_base@std@@UAE@XZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ctype_base@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ctype_base@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1facet@locale@std@@MAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1ctype_base@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1facet@locale@std@@MAE@XZ']
endp
__ehhandler$??1ctype_base@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ctype_base@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1facet@locale@std@@MAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1facet@locale@std@@MAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7facet@locale@std@@6B@']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Facet_base@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1facet@locale@std@@MAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Facet_base@std@@UAE@XZ']
endp
__ehhandler$??1facet@locale@std@@MAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1facet@locale@std@@MAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1failure@ios_base@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1failure@ios_base@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1system_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1failure@ios_base@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1system_error@std@@UAE@XZ']
endp
__ehhandler$??1failure@ios_base@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1failure@ios_base@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1ios_base@std@@UAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ios_base@std@@6B@']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?_Ios_base_dtor@ios_base@std@@CAXPAV12@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1locale@std@@QAE@XZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_6EC9']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[edx]']
mov ['ecx,', '[eax]']
mov ['eax,', '[edx+8]']
call ['eax']
push ['eax']
call ['??$_DebugHeapDelete@V_Facet_base@std@@@std@@YAXPAV_Facet_base@0@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1runtime_error@std@@UAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1runtime_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1exception@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1runtime_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1exception@std@@UAE@XZ']
endp
__ehhandler$??1runtime_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1runtime_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
call ['?uncaught_exception@std@@YA_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_6F83']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1system_error@std@@UAE@XZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1system_error@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_System_error@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1system_error@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_System_error@std@@UAE@XZ']
endp
__ehhandler$??1system_error@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1system_error@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??2facet@locale@std@@SAPAXIABU_DebugHeapTag_t@2@PADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXIABU_DebugHeapTag_t@std@@PADH@Z']
add ['esp,', '10h']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??3facet@locale@std@@SAXPAX@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['??$_DebugHeapDelete@Vfacet@locale@std@@@std@@YAXPAVfacet@locale@0@@Z']
add ['esp,', '4']
pop ['ebp']
retn
endp
??3facet@locale@std@@SAXPAXABU_DebugHeapTag_t@2@PADH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+Memory]']
push ['eax']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
pop ['ebp']
retn
endp
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_70FB']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
push ['eax']
lea ['edx,', '[ebp+var_2]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
push ['eax']
call ['??$?9V?$allocator@D@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@D@std@@@0@0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_70EF']
xor ['ecx,', 'ecx']
jz ['short', 'loc_70EF']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['edx,', '[ebp+var_3]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_713A']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_7141']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_7194']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_7194']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_719B']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEABDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_71D1']
push ['6A2h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@GMPLOCPK@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??B?$fpos@H@std@@QBE_JXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax]']
add ['edx,', '[ecx+8]']
mov ['esi,', '[eax+4]']
adc ['esi,', '[ecx+0Ch]']
mov ['eax,', 'edx']
mov ['edx,', 'esi']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??Bid@locale@std@@QAEIXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??Bid@locale@std@@QAEIXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_727A']
push ['0']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jnz ['short', 'loc_726B']
mov ['edx,', 'dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA']
add ['edx,', '1']
mov ['dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA,', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', 'dword', 'ptr', 'ds:?_Id_cnt@id@locale@std@@0HA']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??Bid@locale@std@@QAEIXZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??Bid@locale@std@@QAEIXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??Bid@locale@std@@QAEIXZ']
jmp ['___CxxFrameHandler3']
endp
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
call ['??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@AEPAXI@Z proc near
sub ['ecx,', '[ecx-4]']
jmp ['??_E?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z']
endp
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z proc near
sub ['ecx,', '[ecx-4]']
jmp ['??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z']
endp
??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_735F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$basic_ostream@DU?$char_traits@D@std@@@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '8']
call ['??_D?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7391']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '8']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '50h']
call ['??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_73C9']
mov ['ecx,', '[ebp+var_4]']
sub ['ecx,', '50h']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
sub ['eax,', '50h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_73FB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7427']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G?$ctype@D@std@@MAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Memory],', 'ecx']
mov ['ecx,', '[ebp+Memory]']
call ['??1?$ctype@D@std@@MAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7453']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+Memory]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlAttributeA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlAttributeA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_747F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlBaseA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlBaseA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_74AB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlCommentA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlCommentA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_74D7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlDeclarationA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlDeclarationA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7503']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlDocumentA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlDocumentA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_752F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlElementA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlElementA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_755B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlNodeA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlNodeA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7587']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlTextA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlTextA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_75B3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GTiXmlUnknownA@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1TiXmlUnknownA@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_75DF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Facet_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Facet_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_760B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7637']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7663']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_768F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_76BB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gctype_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+Memory],', 'ecx']
mov ['ecx,', '[ebp+Memory]']
call ['??1ctype_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_76E7']
mov ['ecx,', '[ebp+Memory]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+Memory]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7713']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gfacet@locale@std@@MAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1facet@locale@std@@MAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_773F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3facet@locale@std@@SAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gfailure@ios_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1failure@ios_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_776B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gios_base@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1ios_base@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_7797']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Glocale@std@@QAEPAXI@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1locale@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_77C3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gruntime_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1runtime_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_77EF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gsystem_error@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1system_error@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_781B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?Clear@TiXmlCursorA@@QAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx],', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ClearError@TiXmlDocumentA@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['byte', 'ptr', '[eax+44h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+48h],', '0']
push ['offset', '??_C@_00CNPNBAHC@?$AA@']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+70h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+6Ch],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?CopyToClone@TiXmlNodeA@@IBEXPAV1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?SetValue@TiXmlNodeA@@QAEXPBD@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+40h]']
mov ['[eax+40h],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?Error@TiXmlDocumentA@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+44h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?First@TiXmlAttributeSetA@@QBEPAVTiXmlAttributeA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+4Ch],', 'eax']
jnz ['short', 'loc_79D9']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_79E2']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4Ch]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?FirstChild@TiXmlNodeA@@QBEPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Name@TiXmlAttributeA@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '10h']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?NextSibling@TiXmlNodeA@@QBEPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
or ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_1']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?SValue@TiXmlNodeA@@IBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
jmp ['___CxxFrameHandler3']
endp
?SetValue@TiXmlAttributeA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?SetValue@TiXmlNodeA@@QAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?ToDocument@TiXmlNodeA@@QBEPAVTiXmlDocumentA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_7B1C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jnz ['short', 'loc_7B1C']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_7B23']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ToElement@TiXmlNodeA@@QBEPAVTiXmlElementA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_7B4C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jnz ['short', 'loc_7B4C']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_7B53']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?ToText@TiXmlNodeA@@QBEPAVTiXmlTextA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_7B7C']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '4']
jnz ['short', 'loc_7B7C']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_7B83']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Type@TiXmlNodeA@@UBEHXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+10h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Value@TiXmlAttributeA@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?Value@TiXmlNodeA@@QBEPBDXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1Ch']
call ['?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Assign_rv@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX$$QAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jnb ['short', 'loc_7C4C']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_7C77']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@D@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_7D01']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_7D53']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_7D1B']
jmp ['short', 'loc_7D53']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_7D48']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_7D53']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_7DD6']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_7DC0']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_7E05']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Decref@facet@locale@std@@UAEPAV_Facet_base@3@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
or ['ecx,', '0FFFFFFFFh']
lock ['xadd', '[eax],', 'ecx']
dec ['ecx']
jnz ['short', 'loc_7E92']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_7E94']
jmp ['short', 'loc_7E94']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '50h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_0],', '0']
jz ['loc_800B']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['loc_800B']
call ['?_DebugHeapTag_func@std@@YAABU_DebugHeapTag_t@1@XZ']
mov ['[ebp+var_1C],', 'eax']
push ['9A8h']
push ['offset', '??_C@_0EH@EPAENFJM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['18h']
call ['??2facet@locale@std@@SAPAXIABU_DebugHeapTag_t@2@PADH@Z']
add ['esp,', '10h']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_14],', '0']
jz ['short', 'loc_7FD4']
push ['0']
mov ['ecx,', '[ebp+arg_4]']
call ['?c_str@locale@std@@QBEPBDXZ']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??0_Locinfo@std@@QAE@PBD@Z']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$ctype@D@std@@QAE@ABV_Locinfo@1@I@Z']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_7FDB']
mov ['[ebp+var_18],', '0']
mov ['edx,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'edx']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_28]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['edx,', '[ebp+var_10]']
and ['edx,', '1']
jz ['short', 'loc_800B']
and ['[ebp+var_10],', '0FFFFFFFEh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1_Locinfo@std@@QAE@XZ']
mov ['eax,', '2']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$0 proc near
push ['9A8h']
push ['offset', '??_C@_0EH@EPAENFJM@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
mov ['eax,', '[ebp-1Ch]']
push ['eax']
mov ['eax,', '[ebp-14h]']
push ['eax']
call ['??3facet@locale@std@@SAXPAXABU_DebugHeapTag_t@2@PADH@Z']
add ['esp,', '10h']
retn
endp
__unwindfunclet$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN8']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1_Locinfo@std@@QAE@XZ']
retn
endp
__ehhandler$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-54h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Getcat@?$ctype@D@std@@SAIPAPBVfacet@locale@2@PBV42@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
mov ['[ebp+var_4],', 'ecx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['__Getctype']
add ['esp,', '4']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_10],', 'edx']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[eax+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+var_C]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
mov ['[eax+0Ch],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getfacet@locale@std@@QBEPBVfacet@12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ecx+0Ch]']
jnb ['short', 'loc_80E9']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ecx+8]']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[edx+eax*4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_80F0']
mov ['[ebp+var_8],', '0']
mov ['edx,', '[ebp+var_8]']
mov ['[ebp+var_C],', 'edx']
cmp ['[ebp+var_C],', '0']
jnz ['short', 'loc_8109']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
movzx ['edx,', 'byte', 'ptr', '[ecx+14h]']
test ['edx,', 'edx']
jnz ['short', 'loc_8110']
mov ['eax,', '[ebp+var_C]']
jmp ['short', 'loc_813E']
jmp ['short', 'loc_813E']
call ['?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+0Ch]']
jnb ['short', 'loc_8134']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+ecx*4]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_813B']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jnz ['short', 'loc_8165']
mov ['ecx,', '[ebp+var_4]']
or ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
and ['edx,', '2']
jnz ['short', 'loc_8176']
mov ['eax,', '[ebp+var_4]']
or ['eax,', '2']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
and ['ecx,', '8']
jz ['short', 'loc_8187']
mov ['edx,', '[ebp+var_4]']
or ['edx,', '8']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '4']
jz ['short', 'loc_8198']
mov ['ecx,', '[ebp+var_4]']
or ['ecx,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_81C5']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_81CC']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_8236']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_8256']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_82A0']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_8290']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_8290']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_8277']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_8280']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_82A0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_82A0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_82AF']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_82B6']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Incref@facet@locale@std@@UAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['ecx,', '1']
lock ['xadd', '[eax],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+10h],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '14h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+1Ch],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '18h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+20h],', 'eax']
mov ['edx,', '[ebp+var_4]']
add ['edx,', '24h']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '28h']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+30h],', 'ecx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Init@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXPBDIH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+3Ch],', 'edx']
cmp ['[ebp+Size],', '0']
jz ['loc_8443']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '6']
cmp ['ecx,', '6']
jz ['loc_8443']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['[ebp+Dst],', 'eax']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
and ['eax,', '4']
jnz ['short', 'loc_83D8']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+3Ch]']
and ['edx,', '2']
jnz ['short', 'loc_8434']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '18h']
jz ['short', 'loc_83F9']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+Size]']
mov ['[ebp+var_C],', 'edx']
jmp ['short', 'loc_83FF']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+Dst]']
add ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_8434']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
push ['0']
mov ['edx,', '[ebp+Dst]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+3Ch],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?_Init@?$ctype@D@std@@IAEXABV_Locinfo@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
lea ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getctype@_Locinfo@std@@QBE?AU_Ctypevec@@XZ']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Init@ios_base@std@@IAEXXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+30h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+8],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+10h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+14h],', '201h']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+18h],', '6']
mov ['dword', 'ptr', '[ecx+1Ch],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+20h],', '0']
mov ['dword', 'ptr', '[edx+24h],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+28h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+2Ch],', '0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?clear@ios_base@std@@QAEXH@Z']
push ['219h']
push ['offset', '??_C@_0EI@HCLDFGI@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsoft@']
call ['?_DebugHeapTag_func@std@@YAABU_DebugHeapTag_t@1@XZ']
push ['eax']
push ['4']
call ['??2@YAPAXIABU_DebugHeapTag_t@std@@PADH@Z']
add ['esp,', '10h']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '0']
jz ['short', 'loc_8525']
mov ['ecx,', '[ebp+var_8]']
call ['??0locale@std@@QAE@XZ']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_852C']
mov ['[ebp+var_C],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_C]']
mov ['[edx+30h],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Init_atomic_counter@std@@YAXAAKK@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
pop ['ebp']
retn
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_8579']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_8579']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_857F']
xor ['al,', 'al']
jmp ['short', 'loc_8581']
jmp ['short', 'loc_8581']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', '0']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_C]']
call ['?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_85E6']
push ['offset', '??_C@_02LMMGGCAJ@?3?5?$AA@']
lea ['ecx,', '[ebp+arg_C]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
lea ['ecx,', '[ebp+arg_4]']
call ['?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_38]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['edx,', '[ebp+var_30]']
or ['edx,', '1']
mov ['[ebp+var_30],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z$2 proc near
mov ['eax,', '[ebp-30h]']
and ['eax,', '1']
jz ['$LN7']
and ['dword', 'ptr', '[ebp-30h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-30h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_86CA']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_86D3']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_8702']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_870B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_879F']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_876F']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_8784']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_8762']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?good@ios_base@std@@QBE_NXZ']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_886A']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '[edx+4]']
call ['?flags@ios_base@std@@QBEHXZ']
and ['eax,', '2']
jz ['short', 'loc_886A']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_886A']
push ['0']
push ['4']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_14]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
jmp ['short', 'loc_8872']
endp
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ$0 proc near
mov ['eax,', 'offset', '$LN9']
retn
endp
$LN9            proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__ehhandler$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_88D1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_88D8']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
cdq
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx]']
sub ['edx,', '1']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax]']
add ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$_Yarn@D@std@@AAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8943']
push ['2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['__free_dbg']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$_Yarn@_W@std@@AAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_896F']
push ['2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
push ['edx']
call ['__free_dbg']
add ['esp,', '8']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_898F']
jmp ['short', 'loc_8A02']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_8A02']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_89E1']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '1']
jz ['short', 'loc_8A7A']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_8A4D']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_8A58']
mov ['ecx,', '[ebp+var_4]']
call ['?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
push ['0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+38h],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+3Ch]']
and ['edx,', '0FFFFFFFEh']
mov ['eax,', '[ebp+var_4]']
mov ['[eax+3Ch],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Tidy@?$ctype@D@std@@IAEXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jle ['short', 'loc_8AD7']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['_free']
add ['esp,', '4']
jmp ['short', 'loc_8AF5']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '0']
jge ['short', 'loc_8AF5']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
call ['??_V@YAXPAX@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
push ['edx']
call ['_free']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_8BDA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_8BF6']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
sub ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+Size]']
ja ['short', 'loc_8C0E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_8C68']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '[ebp+Size]']
mov ['[ebp+var_8],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8C68']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['43Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_8CD5']
push ['42Ah']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8D08']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_8D76']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
sub ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+Size]']
ja ['short', 'loc_8D21']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_8D73']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+Size]']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8D73']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['edx,', '[ebp+var_4]']
add ['eax,', '[edx+14h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_8DBE']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_8DDA']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_8E01']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_8E43']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_8E43']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_8EAB']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_8EDE']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_8F1B']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_8F18']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?c_str@?$_Yarn@D@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_8F4F']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_8F58']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?c_str@locale@std@@QBEPBDXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_8F8E']
mov ['[ebp+var_8],', 'offset', '??_C@_00CNPNBAHC@?$AA@']
jmp ['short', 'loc_8F9E']
mov ['ecx,', '[ebp+var_4]']
mov ['ecx,', '[ecx]']
add ['ecx,', '18h']
call ['?c_str@?$_Yarn@D@std@@QBEPBDXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+38h],', '0']
jnz ['short', 'loc_8FED']
mov ['ecx,', '[ebp+arg_0]']
or ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_8FF3']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?clear@ios_base@std@@QAEXH_N@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?clear@ios_base@std@@QAEXH@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?clear@ios_base@std@@QAEXH_N@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?clear@ios_base@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '58h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '17h']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+10h]']
jnz ['short', 'loc_9050']
jmp ['loc_910A']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_9066']
push ['0']
push ['0']
call ['__CxxThrowException@8']
jmp ['loc_910A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[eax+0Ch]']
and ['edx,', '[ecx+10h]']
and ['edx,', '4']
jz ['short', 'loc_90A3']
push ['1']
lea ['eax,', '[ebp+var_C]']
push ['eax']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set?$AA@']
lea ['ecx,', '[ebp+var_30]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['ecx,', '[ebp+var_30]']
push ['ecx']
call ['__CxxThrowException@8']
jmp ['short', 'loc_910A']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[edx+0Ch]']
and ['ecx,', '[eax+10h]']
and ['ecx,', '2']
jz ['short', 'loc_90E0']
push ['1']
lea ['edx,', '[ebp+var_14]']
push ['edx']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set?$AA@']
lea ['ecx,', '[ebp+var_44]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['eax,', '[ebp+var_44]']
push ['eax']
call ['__CxxThrowException@8']
jmp ['short', 'loc_910A']
push ['1']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
call ['?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z']
add ['esp,', '8']
push ['eax']
push ['offset', '??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set?$AA@']
lea ['ecx,', '[ebp+var_58]']
call ['??0failure@ios_base@std@@QAE@PBDABVerror_code@2@@Z']
push ['offset', '__TI5?AVfailure@ios_base@std@@']
lea ['edx,', '[ebp+var_58]']
push ['edx']
call ['__CxxThrowException@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_9165']
push ['87Dh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_9178']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_9192']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_91A2']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_91A8']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?compare@?$char_traits@D@std@@SAHPBD0I@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_91D5']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_920A']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_91E6']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_9204']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_C]']
jnz ['short', 'loc_91F7']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_91FE']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['86Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHIIPBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$char_traits@D@std@@SAHPBD0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_926F']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_9286']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+Buf1]']
push ['edx']
call ['_memcmp']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_92A2']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_92B9']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_9348']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_935D']
jmp ['short', 'loc_935D']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_narrow@?$ctype@D@std@@MBEDDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_narrow@?$ctype@D@std@@MBEPBDPBD0DPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0A02h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
push ['0A03h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@D@std@@YAXPADPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?do_tolower@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__Tolower']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_tolower@?$ctype@D@std@@MBEPBDPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9D8h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
jmp ['short', 'loc_943C']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_9461']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['__Tolower']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_9433']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_toupper@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '8']
push ['eax']
movzx ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['__Toupper']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_toupper@?$ctype@D@std@@MBEPBDPADPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9E6h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
jmp ['short', 'loc_94BC']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '1']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_94E1']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[edx]']
push ['eax']
call ['__Toupper']
add ['esp,', '8']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ecx],', 'al']
jmp ['short', 'loc_94B3']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?do_widen@?$ctype@D@std@@MBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['al,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?do_widen@?$ctype@D@std@@MBEPBDPBD0PAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['9F4h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
call ['??$_Debug_range@PBD@std@@YAXPBD0PB_WI@Z']
add ['esp,', '10h']
push ['9F5h']
push ['offset', '??_C@_1IO@OFOLDAJI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['??$_Debug_pointer@D@std@@YAXPADPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+2Ch]']
mov ['ecx,', '[ecx]']
add ['ecx,', '[eax]']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+14h],', '0']
jnz ['short', 'loc_95A3']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_95AA']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?eof@?$char_traits@D@std@@SAHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
or ['eax,', '0FFFFFFFFh']
pop ['ebp']
retn
endp
?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+30h]']
mov ['ecx,', '[ecx]']
add ['ecx,', '[eax]']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?eq@?$char_traits@D@std@@SA_NABD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movsx ['eax,', 'byte', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jnz ['short', 'loc_95F9']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_9600']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_9621']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_9628']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_9667']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_9667']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_966E']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_96C2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_96F4']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_9710']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_9756']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_9756']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+40h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIPBDII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_97B9']
push ['768h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Buf2]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_97D2']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+14h]']
ja ['short', 'loc_97D2']
mov ['eax,', '[ebp+arg_4]']
jmp ['loc_987E']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[eax+14h]']
jnb ['loc_9879']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+MaxCount],', 'eax']
mov ['ecx,', '[ebp+Size]']
cmp ['ecx,', '[ebp+MaxCount]']
ja ['loc_9879']
mov ['edx,', '[ebp+Size]']
sub ['edx,', '1']
mov ['eax,', '[ebp+MaxCount]']
sub ['eax,', 'edx']
mov ['[ebp+MaxCount],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+Buf],', 'eax']
jmp ['short', 'loc_9831']
mov ['ecx,', '[ebp+Buf1]']
sub ['ecx,', '[ebp+Buf]']
add ['ecx,', '1']
mov ['edx,', '[ebp+MaxCount]']
sub ['edx,', 'ecx']
mov ['[ebp+MaxCount],', 'edx']
mov ['eax,', '[ebp+Buf1]']
add ['eax,', '1']
mov ['[ebp+Buf],', 'eax']
mov ['ecx,', '[ebp+Buf2]']
push ['ecx']
mov ['edx,', '[ebp+MaxCount]']
push ['edx']
mov ['eax,', '[ebp+Buf]']
push ['eax']
call ['?find@?$char_traits@D@std@@SAPBDPBDIABD@Z']
add ['esp,', '0Ch']
mov ['[ebp+Buf1],', 'eax']
cmp ['[ebp+Buf1],', '0']
jz ['short', 'loc_9879']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Buf2]']
push ['edx']
mov ['eax,', '[ebp+Buf1]']
push ['eax']
call ['?compare@?$char_traits@D@std@@SAHPBD0I@Z']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_9877']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
mov ['ecx,', '[ebp+Buf1]']
sub ['ecx,', 'eax']
mov ['eax,', 'ecx']
jmp ['short', 'loc_987E']
jmp ['short', 'loc_9817']
mov ['eax,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?find@?$char_traits@D@std@@SAPBDPBDIABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+MaxCount],', '0']
jnz ['short', 'loc_9897']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_98B1']
mov ['eax,', '[ebp+MaxCount]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
movsx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+Buf]']
push ['eax']
call ['_memchr']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?flags@ios_base@std@@QBEHXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '[ecx+4]']
mov ['ecx,', 'edx']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_996B']
mov ['eax,', '[ebp+var_10]']
push ['eax']
lea ['ecx,', '[ebp+var_18]']
call ['??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_18]']
call ['??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_995C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[eax+4]']
call ['?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ']
cmp ['eax,', '0FFFFFFFFh']
jnz ['short', 'loc_995C']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '[edx+4]']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ']
endp
__ehhandler$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ']
jmp ['___CxxFrameHandler3']
endp
?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+2Ch]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
mov ['[eax],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?getloc@ios_base@std@@QBE?AVlocale@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0locale@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?getloc@ios_base@std@@QBE?AVlocale@2@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1locale@std@@QAE@XZ']
retn
endp
__ehhandler$?getloc@ios_base@std@@QBE?AVlocale@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?good@ios_base@std@@QBE_NXZ proc near   
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?rdstate@ios_base@std@@QBEHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_9A9A']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_9AA1']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IAEXPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Init@ios_base@std@@IAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+3Ch],', '0']
push ['20h']
mov ['ecx,', '[ebp+var_4]']
call ['?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+40h],', 'al']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx+38h],', '0']
jnz ['short', 'loc_9B13']
push ['0']
push ['4']
mov ['ecx,', '[ebp+var_4]']
call ['?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
movzx ['eax,', '[ebp+arg_4]']
test ['eax,', 'eax']
jz ['short', 'loc_9B27']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['?_Addstd@ios_base@std@@SAXPAV12@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?iostream_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
pop ['ebp']
retn
endp
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_9B67']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_9B76']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
call ['?iostream_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_code@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_9C02']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_9C0B']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_9C60']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_9C67']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_9D25']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_9D48']
jmp ['short', 'loc_9D48']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_9DDC']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_9DE3']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_10]']
call ['?value@error_code@std@@QBEHXZ']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_14]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
or ['ecx,', '1']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN4']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@error_code@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_9F06']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_9F1D']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?not_eof@?$char_traits@D@std@@SAHABH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['ecx,', '[ebp+arg_0]']
cmp ['[ecx],', 'eax']
jz ['short', 'loc_9F70']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_9F8F']
call ['?eof@?$char_traits@D@std@@SAHXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_9F82']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_9F89']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '24h']
push ['ebx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '2']
jz ['short', 'loc_9FCE']
call ['?eof@?$char_traits@D@std@@SAHXZ']
jmp ['loc_A27D']
jmp ['short', 'loc_9FFE']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_24],', 'eax']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['eax,', '[ebp+var_24]']
push ['eax']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9FFE']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?not_eof@?$char_traits@D@std@@SAHABH@Z']
add ['esp,', '4']
jmp ['loc_A27D']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '8']
jz ['short', 'loc_A046']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A046']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
cmp ['eax,', '[edx+38h]']
jnb ['short', 'loc_A046']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A08D']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_A08D']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
mov ['bl,', 'al']
mov ['ecx,', '[ebp+var_4]']
call ['?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
mov ['[eax],', 'bl']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_A27D']
jmp ['loc_A27D']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_A0A2']
mov ['[ebp+var_1C],', '0']
jmp ['short', 'loc_A0B9']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['[ebp+var_1C],', 'esi']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+Size],', 'eax']
mov ['ecx,', '[ebp+Size]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
shr ['edx,', '1']
cmp ['edx,', '20h']
jnb ['short', 'loc_A0D8']
mov ['[ebp+var_20],', '20h']
jmp ['short', 'loc_A0E0']
mov ['eax,', '[ebp+var_C]']
shr ['eax,', '1']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+var_10],', '0']
jbe ['short', 'loc_A103']
mov ['edx,', '7FFFFFFFh']
sub ['edx,', '[ebp+var_10]']
cmp ['edx,', '[ebp+var_C]']
jnb ['short', 'loc_A103']
mov ['eax,', '[ebp+var_10]']
shr ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_A0E6']
cmp ['[ebp+var_10],', '0']
jnz ['short', 'loc_A113']
call ['?eof@?$char_traits@D@std@@SAHXZ']
jmp ['loc_A27D']
mov ['ecx,', '[ebp+var_C]']
add ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['[ebp+Src],', 'eax']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_A153']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_A1B0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+Dst]']
mov ['[eax+38h],', 'ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+3Ch]']
and ['edx,', '4']
jz ['short', 'loc_A194']
mov ['eax,', '[ebp+Dst]']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
jmp ['short', 'loc_A1AB']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
jmp ['loc_A235']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+38h]']
sub ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Dst]']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '4']
jz ['short', 'loc_A20E']
mov ['edx,', '[ebp+Dst]']
push ['edx']
push ['0']
mov ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
jmp ['short', 'loc_A235']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
add ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['eax,', '[ebp+Src]']
add ['eax,', '[ebp+Dst]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+3Ch]']
and ['eax,', '1']
jz ['short', 'loc_A253']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '40h']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
or ['ecx,', '1']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+3Ch],', 'ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
mov ['bl,', 'al']
mov ['ecx,', '[ebp+var_4]']
call ['?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
mov ['[eax],', 'bl']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A328']
mov ['ecx,', '[ebp+var_8]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
cmp ['esi,', 'eax']
jbe ['short', 'loc_A328']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_C],', 'eax']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_A331']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
mov ['[ebp+var_1],', 'al']
mov ['ecx,', '[ebp+var_8]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '1']
imul ['edx,', 'ecx,', '-1']
add ['eax,', 'edx']
push ['eax']
lea ['eax,', '[ebp+var_1]']
push ['eax']
call ['?eq@?$char_traits@D@std@@SA_NABD0@Z']
add ['esp,', '8']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_A331']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+3Ch]']
and ['eax,', '2']
jz ['short', 'loc_A331']
call ['?eof@?$char_traits@D@std@@SAHXZ']
jmp ['short', 'loc_A37E']
jmp ['short', 'loc_A37E']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_8]']
call ['?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_10],', 'eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_A372']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
mov ['bl,', 'al']
mov ['ecx,', '[ebp+var_8]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['[eax],', 'bl']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['?not_eof@?$char_traits@D@std@@SAHABH@Z']
add ['esp,', '4']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
mov ['edx,', '[ecx]']
sub ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+30h]']
mov ['[ecx],', 'edx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['ecx,', '[eax]']
add ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
mov ['[eax],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['eax,', '[ecx]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?pubsync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+34h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+38h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?rdstate@ios_base@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_A46D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_A46D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_A46D']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@_JHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$fpos@H@std@@QAE@_J@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@_JHH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A4D0']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+38h],', 'eax']
jnb ['short', 'loc_A4D0']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'eax']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '1']
jz ['loc_A614']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['loc_A614']
cmp ['[ebp+arg_C],', '2']
jnz ['short', 'loc_A513']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', 'eax']
mov ['eax,', 'edx']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_A55E']
cmp ['[ebp+arg_C],', '1']
jnz ['short', 'loc_A546']
mov ['eax,', '[ebp+arg_10]']
and ['eax,', '2']
jnz ['short', 'loc_A546']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_A55E']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A55E']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jl ['loc_A5FE']
jg ['short', 'loc_A574']
cmp ['[ebp+arg_4],', '0']
jb ['loc_A5FE']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', 'eax']
mov ['eax,', 'edx']
cdq
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_8]']
jg ['short', 'loc_A5FE']
jl ['short', 'loc_A59F']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+var_C]']
ja ['short', 'loc_A5FE']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
mov ['edx,', '[ebp+arg_10]']
and ['edx,', '2']
jz ['short', 'loc_A5FC']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A5FC']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
jmp ['short', 'loc_A60F']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+arg_8],', 'ecx']
jmp ['loc_A728']
mov ['edx,', '[ebp+arg_10]']
and ['edx,', '2']
jz ['loc_A70E']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['loc_A70E']
cmp ['[ebp+arg_C],', '2']
jnz ['short', 'loc_A657']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', 'eax']
mov ['eax,', 'edx']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_A699']
cmp ['[ebp+arg_C],', '1']
jnz ['short', 'loc_A682']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_A699']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_A699']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jl ['short', 'loc_A6FA']
jg ['short', 'loc_A6A7']
cmp ['[ebp+arg_4],', '0']
jb ['short', 'loc_A6FA']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+38h]']
sub ['ecx,', 'eax']
mov ['eax,', 'ecx']
cdq
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['edx,', '[ebp+arg_8]']
cmp ['edx,', '[ebp+var_10]']
jg ['short', 'loc_A6FA']
jl ['short', 'loc_A6D2']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+var_14]']
ja ['short', 'loc_A6FA']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+arg_4]']
adc ['edx,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
jmp ['short', 'loc_A70C']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+arg_8],', 'edx']
jmp ['short', 'loc_A728']
mov ['eax,', '[ebp+arg_4]']
or ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_A728']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+arg_8],', 'edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$fpos@H@std@@QAE@_J@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE?AV?$fpos@H@2@V32@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
push ['eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$fpos@H@std@@QAE@_J@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@H@2@V32@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
lea ['ecx,', '[ebp+arg_4]']
call ['??B?$fpos@H@std@@QBE_JXZ']
mov ['[ebp+var_C],', 'eax']
mov ['[ebp+var_8],', 'edx']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A7AE']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+38h],', 'eax']
jnb ['short', 'loc_A7AE']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'eax']
mov ['eax,', '[ebp+var_C]']
cmp ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
jnz ['short', 'loc_A7C9']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
jnz ['short', 'loc_A7C9']
jmp ['loc_A939']
mov ['edx,', '[ebp+arg_1C]']
and ['edx,', '1']
jz ['loc_A89B']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['loc_A89B']
cmp ['[ebp+var_8],', '0']
jl ['loc_A885']
jg ['short', 'loc_A7FB']
cmp ['[ebp+var_C],', '0']
jb ['loc_A885']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', 'eax']
mov ['eax,', 'edx']
cdq
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_10]']
jg ['short', 'loc_A885']
jl ['short', 'loc_A826']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_14]']
ja ['short', 'loc_A885']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
mov ['edx,', '[ebp+arg_1C]']
and ['edx,', '2']
jz ['short', 'loc_A883']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A883']
mov ['ecx,', '[ebp+var_4]']
call ['?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
jmp ['short', 'loc_A896']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+var_8],', 'ecx']
jmp ['loc_A939']
mov ['edx,', '[ebp+arg_1C]']
and ['edx,', '2']
jz ['loc_A927']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_A927']
cmp ['[ebp+var_8],', '0']
jl ['short', 'loc_A914']
jg ['short', 'loc_A8C1']
cmp ['[ebp+var_C],', '0']
jb ['short', 'loc_A914']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+38h]']
sub ['edx,', 'eax']
mov ['eax,', 'edx']
cdq
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_18],', 'edx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+var_18]']
jg ['short', 'loc_A914']
jl ['short', 'loc_A8EC']
mov ['ecx,', '[ebp+var_C]']
cmp ['ecx,', '[ebp+var_1C]']
ja ['short', 'loc_A914']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
mov ['eax,', 'esi']
cdq
add ['eax,', '[ebp+var_C]']
adc ['edx,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
jmp ['short', 'loc_A925']
mov ['edx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_A939']
mov ['ecx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', 'dword', 'ptr', 'ds:?_BADOFF@std@@3_JB+4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$fpos@H@std@@QAE@_J@Z']
mov ['eax,', '[ebp+arg_0]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+1Ch]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+2Ch]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_4]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_8]']
sub ['eax,', '[ebp+arg_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+10h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+30h]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_AA82']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?rdstate@ios_base@std@@QBEHXZ']
or ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
xor ['edx,', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jl ['short', 'loc_AAF5']
jg ['short', 'loc_AAD1']
cmp ['[ebp+var_14],', '0']
jbe ['short', 'loc_AAF5']
mov ['ecx,', '[ebp+var_4]']
call ['?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax],', 'cl']
mov ['edx,', '[ebp+var_8]']
push ['edx']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_AB12']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['[ebp+var_C],', 'eax']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+24h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
add ['ecx,', '4']
call ['?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
or ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_2']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['esi']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_68],', 'ecx']
mov ['[ebp+var_6C],', '0']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '2']
jnz ['loc_ACA4']
mov ['ecx,', '[ebp+var_68]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_ACA4']
mov ['ecx,', '[ebp+var_68]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_68]']
cmp ['[edx+38h],', 'eax']
jnb ['short', 'loc_AC47']
mov ['ecx,', '[ebp+var_68]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['[ebp+var_70],', 'eax']
jmp ['short', 'loc_AC50']
mov ['eax,', '[ebp+var_68]']
mov ['ecx,', '[eax+38h]']
mov ['[ebp+var_70],', 'ecx']
mov ['ecx,', '[ebp+var_68]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_70]']
sub ['edx,', 'eax']
push ['edx']
mov ['ecx,', '[ebp+var_68]']
call ['?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+var_64]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['ecx,', '[ebp+var_6C]']
or ['ecx,', '1']
mov ['[ebp+var_6C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
jmp ['loc_AD43']
jmp ['loc_AD43']
mov ['edx,', '[ebp+var_68]']
mov ['eax,', '[edx+3Ch]']
and ['eax,', '4']
jnz ['short', 'loc_AD10']
mov ['ecx,', '[ebp+var_68]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_AD10']
mov ['ecx,', '[ebp+var_68]']
call ['?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_68]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
sub ['esi,', 'eax']
push ['esi']
mov ['ecx,', '[ebp+var_68]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBDI@Z']
mov ['[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_48]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['edx,', '[ebp+var_6C]']
or ['edx,', '1']
mov ['[ebp+var_6C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_AD43']
jmp ['short', 'loc_AD43']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '3']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z']
mov ['ecx,', '[ebp+var_6C]']
or ['ecx,', '1']
mov ['[ebp+var_6C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['esi']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$1 proc near
mov ['eax,', '[ebp-6Ch]']
and ['eax,', '1']
jz ['$LN11']
and ['dword', 'ptr', '[ebp-6Ch],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$2 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$3 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-6Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+3Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?to_char_type@?$char_traits@D@std@@SADABH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['al,', '[eax]']
pop ['ebp']
retn
endp
?to_int_type@?$char_traits@D@std@@SAHABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
movzx ['eax,', 'byte', 'ptr', '[eax]']
pop ['ebp']
retn
endp
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['[ebp+var_C],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_10],', 'eax']
lea ['ecx,', '[ebp+var_C]']
push ['ecx']
lea ['edx,', '[ebp+var_10]']
push ['edx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_AE42']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_AE56']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jnz ['short', 'loc_AE93']
call ['?eof@?$char_traits@D@std@@SAHXZ']
jmp ['loc_AF5A']
jmp ['loc_AF5A']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
cmp ['esi,', 'eax']
jnb ['short', 'loc_AEC4']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
jmp ['loc_AF5A']
jmp ['loc_AF5A']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+3Ch]']
and ['ecx,', '4']
jnz ['short', 'loc_AF01']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
test ['eax,', 'eax']
jz ['short', 'loc_AF01']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
cmp ['esi,', 'eax']
ja ['short', 'loc_AF0A']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
cmp ['[edx+38h],', 'eax']
ja ['short', 'loc_AF0A']
call ['?eof@?$char_traits@D@std@@SAHXZ']
jmp ['short', 'loc_AF5A']
jmp ['short', 'loc_AF5A']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+38h],', 'eax']
jnb ['short', 'loc_AF28']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+38h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?getloc@ios_base@std@@QBE?AVlocale@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['??$use_facet@V?$ctype@D@std@@@std@@YAABV?$ctype@D@0@ABVlocale@0@@Z']
add ['esp,', '4']
mov ['[ebp+var_20],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1locale@std@@QAE@XZ']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
call ['?widen@?$ctype@D@std@@QBEDD@Z']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z$0 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1locale@std@@QAE@XZ']
endp
__ehhandler$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z']
jmp ['___CxxFrameHandler3']
endp
?widen@?$ctype@D@std@@QBEDD@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+20h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?width@ios_base@std@@QAE_J_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+20h]']
mov ['[ebp+var_C],', 'ecx']
mov ['edx,', '[eax+24h]']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'dword', 'ptr', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+arg_0+4]']
mov ['[eax+24h],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['edx,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?width@ios_base@std@@QBE_JXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[ecx+20h]']
mov ['edx,', '[ecx+24h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['[ebp+var_4],', 'ecx']
xorpd ['xmm0,', 'xmm0']
movlpd ['[ebp+var_1C],', 'xmm0']
cmp ['[ebp+arg_8],', '0']
jl ['loc_B1B8']
jg ['short', 'loc_B0B4']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_B1B8']
mov ['ecx,', '[ebp+var_4]']
call ['?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jl ['short', 'loc_B142']
jg ['short', 'loc_B0D0']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_B142']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_10]']
jg ['short', 'loc_B0EE']
jl ['short', 'loc_B0E2']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+Size]']
jnb ['short', 'loc_B0EE']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+Dst]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1C]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C+4]']
adc ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
jmp ['short', 'loc_B1B3']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+1Ch]']
call ['eax']
mov ['[ebp+var_8],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B175']
jmp ['short', 'loc_B1B8']
jmp ['short', 'loc_B1B3']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
call ['?to_char_type@?$char_traits@D@std@@SADABH@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+Dst]']
mov ['[edx],', 'al']
mov ['eax,', '[ebp+Dst]']
add ['eax,', '1']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1C]']
add ['ecx,', '1']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C+4]']
adc ['edx,', '0']
mov ['dword', 'ptr', '[ebp+var_1C],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '1']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '0']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
jmp ['loc_B09E']
mov ['eax,', 'dword', 'ptr', '[ebp+var_1C]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
mov ['[ebp+var_4],', 'ecx']
xorpd ['xmm0,', 'xmm0']
movlpd ['[ebp+var_1C],', 'xmm0']
cmp ['[ebp+arg_8],', '0']
jl ['loc_B2EC']
jg ['short', 'loc_B1EC']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_B2EC']
mov ['ecx,', '[ebp+var_4]']
call ['?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBE_JXZ']
mov ['[ebp+Size],', 'eax']
mov ['[ebp+var_10],', 'edx']
cmp ['[ebp+var_10],', '0']
jl ['short', 'loc_B27A']
jg ['short', 'loc_B208']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_B27A']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_10]']
jg ['short', 'loc_B226']
jl ['short', 'loc_B21A']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+Size]']
jnb ['short', 'loc_B226']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'edx']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+Size]']
add ['eax,', '[ebp+Src]']
mov ['[ebp+Src],', 'eax']
mov ['ecx,', 'dword', 'ptr', '[ebp+var_1C]']
add ['ecx,', '[ebp+Size]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C+4]']
adc ['edx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ebp+var_1C],', 'ecx']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'edx']
mov ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+Size]']
mov ['ecx,', '[ebp+arg_8]']
sbb ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_4],', 'eax']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z']
jmp ['short', 'loc_B2E7']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['?to_int_type@?$char_traits@D@std@@SAHABD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['[ebp+var_8],', 'eax']
call ['?eof@?$char_traits@D@std@@SAHXZ']
mov ['[ebp+var_C],', 'eax']
lea ['ecx,', '[ebp+var_8]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
call ['?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_B2BA']
jmp ['short', 'loc_B2EC']
jmp ['short', 'loc_B2E7']
mov ['ecx,', '[ebp+Src]']
add ['ecx,', '1']
mov ['[ebp+Src],', 'ecx']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C]']
add ['edx,', '1']
mov ['eax,', 'dword', 'ptr', '[ebp+var_1C+4]']
adc ['eax,', '0']
mov ['dword', 'ptr', '[ebp+var_1C],', 'edx']
mov ['dword', 'ptr', '[ebp+var_1C+4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
sub ['ecx,', '1']
mov ['edx,', '[ebp+arg_8]']
sbb ['edx,', '0']
mov ['[ebp+arg_4],', 'ecx']
mov ['[ebp+arg_8],', 'edx']
jmp ['loc_B1D6']
mov ['eax,', 'dword', 'ptr', '[ebp+var_1C]']
mov ['edx,', 'dword', 'ptr', '[ebp+var_1C+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp

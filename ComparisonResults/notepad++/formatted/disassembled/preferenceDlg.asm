?run_dlgProc@SettingsDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '284h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_260],', 'eax']
mov ['ecx,', '[ebp+var_260]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_210],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_240],', 'eax']
cmp ['[ebp+var_240],', '110h']
jz ['short', 'loc_A45']
cmp ['[ebp+var_240],', '111h']
jz ['loc_F50']
jmp ['$LN59']
mov ['ecx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '1']
jnz ['short', 'loc_A71']
push ['0']
push ['1']
push ['0F1h']
push ['18A3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_B94']
mov ['ecx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[ecx+1Ch],', '2']
jnz ['short', 'loc_AB8']
push ['0']
push ['1']
push ['0F1h']
push ['18A3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0F1h']
push ['18A9h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_B94']
mov ['eax,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[eax+1Ch],', '3']
jnz ['short', 'loc_AFF']
push ['0']
push ['1']
push ['0F1h']
push ['18A3h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0F1h']
push ['18B5h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_B94']
mov ['edx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[edx+1Ch],', '4']
jnz ['short', 'loc_B5E']
push ['0']
push ['1']
push ['0F1h']
push ['18A3h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0F1h']
push ['18A9h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0F1h']
push ['18B5h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_B94']
push ['0']
push ['18A9h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['18B5h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+39h]']
push ['edx']
push ['0F1h']
push ['18A4h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ch]']
push ['eax']
push ['0F1h']
push ['18BEh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+23Ch]']
push ['ecx']
push ['0F1h']
push ['18B3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+49h]']
push ['edx']
push ['0F1h']
push ['18BFh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+250h]']
test ['eax,', 'eax']
jz ['short', 'loc_C44']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_C4E']
mov ['[ebp+nCmdShow],', '0']
mov ['ecx,', '[ebp+nCmdShow]']
push ['ecx']
push ['18B3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['[ebp+wParam],', '0']
mov ['[ebp+var_228],', '0']
mov ['[ebp+bEnable],', '0']
mov ['ecx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[ecx+4Ch],', '1']
jnz ['short', 'loc_CB8']
mov ['[ebp+wParam],', '1']
mov ['[ebp+var_228],', '1']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_CE2']
mov ['edx,', '[ebp+var_210]']
cmp ['dword', 'ptr', '[edx+4Ch],', '2']
jnz ['short', 'loc_CE2']
mov ['[ebp+wParam],', '1']
mov ['[ebp+var_228],', '0']
mov ['[ebp+bEnable],', '1']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['18AFh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_228]']
push ['eax']
push ['0F1h']
push ['18B0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+bEnable]']
push ['eax']
push ['18B0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '220h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['0Ch']
push ['18B1h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Dh]']
push ['eax']
push ['0F1h']
push ['17E2h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Eh]']
push ['ecx']
push ['0F1h']
push ['17E3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+45h]']
push ['edx']
push ['0F1h']
push ['17E5h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Fh]']
push ['eax']
push ['0F1h']
push ['18B6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+40h]']
push ['ecx']
push ['0F1h']
push ['18BCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+42h]']
push ['edx']
push ['0F1h']
push ['18B7h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+43h]']
push ['eax']
push ['0F1h']
push ['18B8h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+44h]']
push ['ecx']
push ['0F1h']
push ['18BAh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+42h]']
push ['edx']
push ['18B8h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+42h]']
push ['eax']
push ['18BAh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Fh]']
push ['ecx']
push ['18BCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+25Dh]']
push ['edx']
push ['0F1h']
push ['18BBh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_260]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_234],', 'eax']
cmp ['[ebp+var_234],', '0']
jz ['short', 'loc_F46']
push ['6']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['[ebp+var_234]']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['ecx,', '[ebp+arg_8]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '300h']
jnz ['short', 'loc_FC8']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_270],', 'ecx']
cmp ['[ebp+var_270],', '18B1h']
jz ['short', 'loc_F86']
jmp ['short', 'loc_FC8']
lea ['edx,', '[ebp+lParam]']
push ['edx']
push ['104h']
push ['0Dh']
push ['18B1h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['edx,', '[ebp+lParam]']
push ['edx']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '220h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_220],', 'eax']
mov ['ecx,', '[ebp+var_220]']
sub ['ecx,', '17E2h']
mov ['[ebp+var_220],', 'ecx']
cmp ['[ebp+var_220],', '0DDh']
ja ['$LN59']
mov ['edx,', '[ebp+var_220]']
movzx ['eax,', 'ds:$LN87[edx]']
jmp ['ds:$LN88[eax*4]']
push ['18A3h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_212],', 'al']
movzx ['ecx,', '[ebp+var_212]']
push ['ecx']
push ['18A9h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_212]']
push ['ecx']
push ['18B5h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['18A9h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_216],', 'al']
push ['18B5h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_215],', 'al']
movzx ['ecx,', '[ebp+var_212]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1099']
mov ['[ebp+var_21C],', '0']
jmp ['short', 'loc_1109']
movzx ['edx,', '[ebp+var_216]']
test ['edx,', 'edx']
jnz ['short', 'loc_10BB']
movzx ['eax,', '[ebp+var_215]']
test ['eax,', 'eax']
jnz ['short', 'loc_10BB']
mov ['[ebp+var_21C],', '1']
jmp ['short', 'loc_1109']
movzx ['ecx,', '[ebp+var_216]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10DD']
movzx ['edx,', '[ebp+var_215]']
test ['edx,', 'edx']
jz ['short', 'loc_10DD']
mov ['[ebp+var_21C],', '3']
jmp ['short', 'loc_1109']
movzx ['eax,', '[ebp+var_216]']
test ['eax,', 'eax']
jz ['short', 'loc_10FF']
movzx ['ecx,', '[ebp+var_215]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10FF']
mov ['[ebp+var_21C],', '2']
jmp ['short', 'loc_1109']
mov ['[ebp+var_21C],', '4']
mov ['edx,', '[ebp+var_210]']
mov ['eax,', '[ebp+var_21C]']
mov ['[edx+1Ch],', 'eax']
mov ['eax,', '1']
jmp ['loc_1735']
push ['18A9h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_213],', 'al']
push ['18B5h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_214],', 'al']
movzx ['ecx,', '[ebp+var_213]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_116A']
movzx ['edx,', '[ebp+var_214]']
test ['edx,', 'edx']
jnz ['short', 'loc_116A']
mov ['[ebp+var_224],', '1']
jmp ['short', 'loc_11B8']
movzx ['eax,', '[ebp+var_213]']
test ['eax,', 'eax']
jnz ['short', 'loc_118C']
movzx ['ecx,', '[ebp+var_214]']
test ['ecx,', 'ecx']
jz ['short', 'loc_118C']
mov ['[ebp+var_224],', '3']
jmp ['short', 'loc_11B8']
movzx ['edx,', '[ebp+var_213]']
test ['edx,', 'edx']
jz ['short', 'loc_11AE']
movzx ['eax,', '[ebp+var_214]']
test ['eax,', 'eax']
jnz ['short', 'loc_11AE']
mov ['[ebp+var_224],', '2']
jmp ['short', 'loc_11B8']
mov ['[ebp+var_224],', '4']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ebp+var_224]']
mov ['[ecx+1Ch],', 'edx']
mov ['eax,', '1']
jmp ['loc_1735']
push ['18AFh']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_211],', 'al']
movzx ['eax,', '[ebp+var_211]']
test ['eax,', 'eax']
jnz ['short', 'loc_120A']
push ['0']
push ['0']
push ['0F1h']
push ['18B0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['eax,', '[ebp+var_211]']
push ['eax']
push ['18B0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_211]']
test ['eax,', 'eax']
jz ['short', 'loc_1242']
mov ['[ebp+var_254],', '2']
jmp ['short', 'loc_124C']
mov ['[ebp+var_254],', '0']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ebp+var_254]']
mov ['[ecx+4Ch],', 'edx']
mov ['eax,', '1']
jmp ['loc_1735']
push ['18B0h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_217],', 'al']
movzx ['eax,', '[ebp+var_217]']
test ['eax,', 'eax']
jz ['short', 'loc_128F']
mov ['[ebp+var_248],', '1']
jmp ['short', 'loc_1299']
mov ['[ebp+var_248],', '2']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ebp+var_248]']
mov ['[ecx+4Ch],', 'edx']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['ecx,', '[ebp+var_210]']
mov ['[ecx+23Ch],', 'al']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['ecx,', '[ebp+var_210]']
mov ['[ecx+39h],', 'al']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['ecx,', '[ebp+var_210]']
mov ['[ecx+3Ch],', 'al']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Dh]']
test ['eax,', 'eax']
jnz ['short', 'loc_132C']
mov ['[ebp+var_25C],', '1']
jmp ['short', 'loc_1336']
mov ['[ebp+var_25C],', '0']
mov ['ecx,', '[ebp+var_210]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_25C]']
mov ['[ecx+3Dh],', 'dl']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Dh]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1370']
push ['1']
push ['17E5h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
jmp ['short', 'loc_13B0']
mov ['ecx,', '[ebp+var_210]']
mov ['byte', 'ptr', '[ecx+45h],', '0']
push ['0']
push ['0']
push ['0F1h']
push ['17E5h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['17E5h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Eh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_13D4']
mov ['[ebp+var_250],', '1']
jmp ['short', 'loc_13DE']
mov ['[ebp+var_250],', '0']
mov ['edx,', '[ebp+var_210]']
mov ['al,', 'byte', 'ptr', '[ebp+var_250]']
mov ['[edx+3Eh],', 'al']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Fh]']
test ['edx,', 'edx']
jnz ['short', 'loc_1411']
mov ['[ebp+var_264],', '1']
jmp ['short', 'loc_141B']
mov ['[ebp+var_264],', '0']
mov ['eax,', '[ebp+var_210]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_264]']
mov ['[eax+3Fh],', 'cl']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Fh]']
test ['eax,', 'eax']
jnz ['short', 'loc_1461']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+hWnd],', 'eax']
push ['0']
push ['0']
push ['40Fh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Fh]']
push ['edx']
push ['18BCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+40h]']
test ['eax,', 'eax']
jnz ['short', 'loc_14A9']
mov ['[ebp+var_26C],', '1']
jmp ['short', 'loc_14B3']
mov ['[ebp+var_26C],', '0']
mov ['ecx,', '[ebp+var_210]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_26C]']
mov ['[ecx+40h],', 'dl']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+40h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_14F9']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+var_278],', 'eax']
push ['0']
push ['0']
push ['40Fh']
mov ['ecx,', '[ebp+var_278]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+42h]']
test ['eax,', 'eax']
jnz ['short', 'loc_151D']
mov ['[ebp+var_268],', '1']
jmp ['short', 'loc_1527']
mov ['[ebp+var_268],', '0']
mov ['ecx,', '[ebp+var_210]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_268]']
mov ['[ecx+42h],', 'dl']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_156D']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+var_280],', 'eax']
push ['0']
push ['0']
push ['414h']
mov ['ecx,', '[ebp+var_280]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+42h]']
push ['eax']
push ['18B8h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+42h]']
push ['ecx']
push ['18BAh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+43h]']
test ['edx,', 'edx']
jnz ['short', 'loc_15D9']
mov ['[ebp+var_238],', '1']
jmp ['short', 'loc_15E3']
mov ['[ebp+var_238],', '0']
mov ['eax,', '[ebp+var_210]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_238]']
mov ['[eax+43h],', 'cl']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+43h]']
test ['eax,', 'eax']
jnz ['short', 'loc_1629']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+var_274],', 'eax']
push ['0']
push ['0']
push ['415h']
mov ['eax,', '[ebp+var_274]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['ecx,', '[ebp+var_210]']
movzx ['edx,', 'byte', 'ptr', '[ecx+44h]']
test ['edx,', 'edx']
jnz ['short', 'loc_164D']
mov ['[ebp+var_23C],', '1']
jmp ['short', 'loc_1657']
mov ['[ebp+var_23C],', '0']
mov ['eax,', '[ebp+var_210]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_23C]']
mov ['[eax+44h],', 'cl']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['edx,', '[ebp+var_210]']
movzx ['eax,', 'byte', 'ptr', '[edx+45h]']
test ['eax,', 'eax']
jnz ['short', 'loc_168A']
mov ['[ebp+var_244],', '1']
jmp ['short', 'loc_1694']
mov ['[ebp+var_244],', '0']
mov ['ecx,', '[ebp+var_210]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_244]']
mov ['[ecx+45h],', 'dl']
mov ['eax,', '1']
jmp ['loc_1735']
mov ['eax,', '[ebp+var_210]']
movzx ['ecx,', 'byte', 'ptr', '[eax+25Dh]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_16CA']
mov ['[ebp+var_24C],', '1']
jmp ['short', 'loc_16D4']
mov ['[ebp+var_24C],', '0']
mov ['edx,', '[ebp+var_210]']
mov ['al,', 'byte', 'ptr', '[ebp+var_24C]']
mov ['[edx+25Dh],', 'al']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+var_27C],', 'eax']
push ['0']
push ['0']
push ['417h']
mov ['eax,', '[ebp+var_27C]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['short', 'loc_1735']
push ['18BFh']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['ecx,', '[ebp+var_210]']
mov ['[ecx+49h],', 'al']
mov ['eax,', '1']
jmp ['short', 'loc_1735']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@BarsDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@BarsDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '3A4h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_2DC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_340],', 'eax']
cmp ['[ebp+var_340],', '110h']
jz ['short', 'loc_18DC']
cmp ['[ebp+var_340],', '111h']
jz ['loc_1F1E']
jmp ['loc_274F']
mov ['ecx,', '[ebp+var_2DC]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_2D8],', 'eax']
mov ['ecx,', '[ebp+var_2D8]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_374],', 'edx']
mov ['eax,', '[ebp+var_2D8]']
mov ['ecx,', '[eax+8]']
mov ['[ebp+var_2C8],', 'ecx']
mov ['edx,', '[ebp+var_2D8]']
mov ['al,', '[edx+4]']
mov ['[ebp+var_2D1],', 'al']
mov ['ecx,', '[ebp+var_2D8]']
mov ['dl,', '[ecx+5]']
mov ['[ebp+var_2CC],', 'dl']
mov ['eax,', '[ebp+var_2D8]']
mov ['cl,', '[eax+6]']
mov ['[ebp+var_2D0],', 'cl']
movzx ['edx,', '[ebp+var_2D1]']
test ['edx,', 'edx']
jz ['short', 'loc_194E']
mov ['[ebp+wParam],', '0']
jmp ['short', 'loc_1958']
mov ['[ebp+wParam],', '1']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['17D6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+nIDDlgItem],', '0']
mov ['eax,', '[ebp+var_374]']
mov ['[ebp+var_344],', 'eax']
cmp ['[ebp+var_344],', '0']
jz ['short', 'loc_19A2']
cmp ['[ebp+var_344],', '1']
jz ['short', 'loc_19AE']
jmp ['short', 'loc_19BA']
mov ['[ebp+nIDDlgItem],', '17D7h']
jmp ['short', 'loc_19C4']
mov ['[ebp+nIDDlgItem],', '17D8h']
jmp ['short', 'loc_19C4']
mov ['[ebp+nIDDlgItem],', '17D9h']
push ['0']
push ['1']
push ['0F1h']
mov ['ecx,', '[ebp+nIDDlgItem]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_2C8]']
and ['ecx,', '8']
push ['ecx']
push ['0F1h']
push ['17DBh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_2C8]']
and ['ecx,', '4']
jnz ['short', 'loc_1A1B']
mov ['[ebp+var_34C],', '1']
jmp ['short', 'loc_1A25']
mov ['[ebp+var_34C],', '0']
push ['0']
mov ['edx,', '[ebp+var_34C]']
push ['edx']
push ['0F1h']
push ['17DCh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '1']
push ['edx']
push ['0F1h']
push ['17DEh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '2']
push ['edx']
push ['0F1h']
push ['17DDh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '10h']
push ['edx']
push ['0F1h']
push ['17E0h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '20h']
push ['edx']
push ['0F1h']
push ['17E1h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '40h']
push ['edx']
push ['0F1h']
push ['17E8h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '80h']
push ['edx']
push ['0F1h']
push ['17E7h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2C8]']
and ['edx,', '100h']
push ['edx']
push ['0F1h']
push ['17E6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['17E6h']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['0']
movzx ['ecx,', '[ebp+var_2CC]']
push ['ecx']
push ['0F1h']
push ['17DFh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['ecx,', '[ebp+var_2D0]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1B91']
mov ['[ebp+var_354],', '1']
jmp ['short', 'loc_1B9B']
mov ['[ebp+var_354],', '0']
push ['0']
mov ['edx,', '[ebp+var_354]']
push ['edx']
push ['0F1h']
push ['17EAh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['83Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_1BE9']
mov ['[ebp+var_35C],', '1']
jmp ['short', 'loc_1BF3']
mov ['[ebp+var_35C],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_35C]']
mov ['[ebp+var_2CA],', 'cl']
push ['0']
movzx ['edx,', '[ebp+var_2CA]']
push ['edx']
push ['0F1h']
push ['17EEh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_2D8]']
movzx ['eax,', 'byte', 'ptr', '[edx+694h]']
push ['eax']
push ['0F1h']
push ['17EFh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_2DC]']
call ['?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ']
mov ['[ebp+var_2E0],', 'eax']
mov ['[ebp+var_2EC],', '0']
mov ['ecx,', '[ebp+var_2E0]']
call ['?size@LocalizationSwitcher@@QBEIXZ']
mov ['[ebp+var_36C],', 'eax']
jmp ['short', 'loc_1C84']
mov ['eax,', '[ebp+var_2EC]']
add ['eax,', '1']
mov ['[ebp+var_2EC],', 'eax']
mov ['ecx,', '[ebp+var_2EC]']
cmp ['ecx,', '[ebp+var_36C]']
jnb ['short', 'loc_1CEB']
mov ['edx,', '[ebp+var_2EC]']
push ['edx']
lea ['eax,', '[ebp+var_2C0]']
push ['eax']
mov ['ecx,', '[ebp+var_2E0]']
call ['?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C0]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['17ECh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C0]']
call ['??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ']
jmp ['short', 'loc_1C75']
push ['offset', '$SG143816']
lea ['ecx,', '[ebp+var_26C]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_2DC]']
call ['?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ']
test ['eax,', 'eax']
jz ['loc_1E7A']
lea ['eax,', '[ebp+var_234]']
push ['eax']
mov ['ecx,', '[ebp+var_2E0]']
call ['?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3A0],', 'esp']
push ['ecx']
lea ['ecx,', '[ebp+var_234]']
call ['?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['[ebp+var_360],', 'eax']
mov ['edx,', '[ebp+var_360]']
mov ['[ebp+var_3AC],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['[ebp+var_394],', 'esp']
push ['eax']
lea ['ecx,', '[ebp+var_234]']
call ['?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['[ebp+var_37C],', 'eax']
mov ['ecx,', '[ebp+var_37C]']
mov ['[ebp+var_398],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_250]']
call ['??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
mov ['[ebp+var_390],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
sub ['esp,', '0Ch']
mov ['edx,', 'esp']
mov ['[ebp+var_3A8],', 'esp']
push ['edx']
lea ['ecx,', '[ebp+var_234]']
call ['?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['[ebp+var_384],', 'eax']
mov ['eax,', '[ebp+var_384]']
mov ['[ebp+var_3B0],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3A4],', 'esp']
push ['ecx']
lea ['ecx,', '[ebp+var_234]']
call ['?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['[ebp+var_38C],', 'eax']
mov ['edx,', '[ebp+var_38C]']
mov ['[ebp+var_39C],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_250]']
call ['??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
lea ['ecx,', '[ebp+var_250]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
lea ['eax,', '[ebp+var_288]']
push ['eax']
mov ['ecx,', '[ebp+var_2E0]']
call ['?getLangFromXmlFileName@LocalizationSwitcher@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PB_W@Z']
mov ['[ebp+var_368],', 'eax']
mov ['ecx,', '[ebp+var_368]']
mov ['[ebp+var_364],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['edx,', '[ebp+var_364]']
push ['edx']
lea ['ecx,', '[ebp+var_26C]']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['ecx,', '[ebp+var_288]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_250]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_234]']
call ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
lea ['ecx,', '[ebp+var_26C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0FFFFFFFFh']
push ['158h']
push ['17ECh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_2F8],', 'eax']
cmp ['[ebp+var_2F8],', '0FFFFFFFFh']
jz ['short', 'loc_1ECE']
push ['0']
mov ['edx,', '[ebp+var_2F8]']
push ['edx']
push ['14Eh']
push ['17ECh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_2DC]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_334],', 'eax']
cmp ['[ebp+var_334],', '0']
jz ['short', 'loc_1EF7']
push ['6']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['[ebp+var_334]']
mov ['[ebp+var_388],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_26C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_388]']
jmp ['loc_2751']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_2E4],', 'ecx']
mov ['edx,', '[ebp+var_2E4]']
sub ['edx,', '17D6h']
mov ['[ebp+var_2E4],', 'edx']
cmp ['[ebp+var_2E4],', '19h']
ja ['$LN11']
mov ['eax,', '[ebp+var_2E4]']
jmp ['ds:$LN104[eax*4]']
push ['0']
push ['0']
push ['0F0h']
push ['17DFh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_1F7F']
mov ['[ebp+var_350],', '1']
jmp ['short', 'loc_1F89']
mov ['[ebp+var_350],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_350]']
mov ['[ebp+var_2CB],', 'al']
movzx ['ecx,', '[ebp+var_2CB]']
test ['ecx,', 'ecx']
jz ['short', 'loc_1FAC']
mov ['[ebp+lParam],', '0']
jmp ['short', 'loc_1FB6']
mov ['[ebp+lParam],', '1']
mov ['edx,', '[ebp+lParam]']
push ['edx']
push ['0']
push ['832h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0']
push ['0F0h']
push ['17EAh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_200E']
mov ['[ebp+var_330],', '1']
jmp ['short', 'loc_2018']
mov ['[ebp+var_330],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_330]']
mov ['[ebp+var_2CD],', 'cl']
movzx ['edx,', '[ebp+var_2CD]']
test ['edx,', 'edx']
jz ['short', 'loc_203B']
mov ['[ebp+var_308],', '1']
jmp ['short', 'loc_2045']
mov ['[ebp+var_308],', '0']
mov ['eax,', '[ebp+var_308]']
push ['eax']
push ['0']
push ['830h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0']
push ['0F0h']
push ['17EEh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_209D']
mov ['[ebp+var_348],', '1']
jmp ['short', 'loc_20A7']
mov ['[ebp+var_348],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_348]']
mov ['[ebp+var_2CF],', 'dl']
movzx ['eax,', '[ebp+var_2CF]']
test ['eax,', 'eax']
jz ['short', 'loc_20CA']
mov ['[ebp+var_310],', '1']
jmp ['short', 'loc_20D4']
mov ['[ebp+var_310],', '0']
mov ['ecx,', '[ebp+var_310]']
push ['ecx']
push ['0']
push ['83Dh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0']
push ['0F0h']
push ['17EFh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_212C']
mov ['[ebp+var_338],', '1']
jmp ['short', 'loc_2136']
mov ['[ebp+var_338],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_338]']
mov ['[ebp+var_2C9],', 'al']
movzx ['ecx,', '[ebp+var_2C9]']
test ['ecx,', 'ecx']
jz ['short', 'loc_2159']
mov ['[ebp+var_318],', '1']
jmp ['short', 'loc_2163']
mov ['[ebp+var_318],', '0']
mov ['edx,', '[ebp+var_318]']
push ['edx']
push ['0']
push ['841h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0']
push ['0F0h']
push ['17E6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_21C2']
mov ['[ebp+var_358],', '1']
jmp ['short', 'loc_21CC']
mov ['[ebp+var_358],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_358]']
mov ['[ebp+var_2C1],', 'cl']
movzx ['edx,', '[ebp+var_2C1]']
test ['edx,', 'edx']
jnz ['short', 'loc_21EF']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_21F9']
mov ['[ebp+bEnable],', '0']
mov ['eax,', '[ebp+bEnable]']
push ['eax']
push ['17E7h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_2C1]']
test ['eax,', 'eax']
jnz ['short', 'loc_2230']
mov ['[ebp+var_2F0],', '1']
jmp ['short', 'loc_223A']
mov ['[ebp+var_2F0],', '0']
mov ['ecx,', '[ebp+var_2F0]']
push ['ecx']
push ['17E8h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2C1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2271']
mov ['[ebp+var_328],', '1']
jmp ['short', 'loc_227B']
mov ['[ebp+var_328],', '0']
mov ['edx,', '[ebp+var_328]']
push ['edx']
push ['17DBh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_2C1]']
test ['edx,', 'edx']
jnz ['short', 'loc_22B2']
mov ['[ebp+var_2F4],', '1']
jmp ['short', 'loc_22BC']
mov ['[ebp+var_2F4],', '0']
mov ['eax,', '[ebp+var_2F4]']
push ['eax']
push ['17DCh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_2C1]']
test ['eax,', 'eax']
jnz ['short', 'loc_22F3']
mov ['[ebp+var_2FC],', '1']
jmp ['short', 'loc_22FD']
mov ['[ebp+var_2FC],', '0']
mov ['ecx,', '[ebp+var_2FC]']
push ['ecx']
push ['17DEh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2C1]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_2334']
mov ['[ebp+var_304],', '1']
jmp ['short', 'loc_233E']
mov ['[ebp+var_304],', '0']
mov ['edx,', '[ebp+var_304]']
push ['edx']
push ['17DDh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_2C1]']
test ['edx,', 'edx']
jnz ['short', 'loc_2375']
mov ['[ebp+var_30C],', '1']
jmp ['short', 'loc_237F']
mov ['[ebp+var_30C],', '0']
mov ['eax,', '[ebp+var_30C]']
push ['eax']
push ['17E0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_2C1]']
test ['eax,', 'eax']
jnz ['short', 'loc_23B6']
mov ['[ebp+var_314],', '1']
jmp ['short', 'loc_23C0']
mov ['[ebp+var_314],', '0']
mov ['ecx,', '[ebp+var_314]']
push ['ecx']
push ['17E1h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2C1]']
push ['ecx']
push ['0']
push ['81Bh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0AC0Bh']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0AC0Ch']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE5h']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE6h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE7h']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE8h']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0AC06h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0AC07h']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0']
push ['0F0h']
push ['17D6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2551']
mov ['[ebp+var_31C],', '1']
jmp ['short', 'loc_255B']
mov ['[ebp+var_31C],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_31C]']
mov ['[ebp+var_2CE],', 'cl']
movzx ['edx,', '[ebp+var_2CE]']
test ['edx,', 'edx']
jz ['short', 'loc_257E']
mov ['[ebp+var_324],', '1']
jmp ['short', 'loc_2588']
mov ['[ebp+var_324],', '0']
mov ['eax,', '[ebp+var_324]']
push ['eax']
push ['0']
push ['82Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE2h']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE3h']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
push ['0']
push ['0ABE4h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_2751']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_370],', 'ecx']
cmp ['[ebp+var_370],', '1']
jz ['short', 'loc_263F']
jmp ['loc_274F']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_380],', 'eax']
cmp ['[ebp+var_380],', '17ECh']
jz ['short', 'loc_2662']
jmp ['loc_274F']
mov ['ecx,', '[ebp+var_2DC]']
call ['?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ']
mov ['[ebp+var_32C],', 'eax']
push ['0']
push ['0']
push ['147h']
push ['17ECh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_378],', 'eax']
lea ['eax,', '[ebp+var_218]']
push ['eax']
mov ['ecx,', '[ebp+var_378]']
push ['ecx']
push ['148h']
push ['17ECh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+var_218]']
test ['eax,', 'eax']
jz ['short', 'loc_2748']
push ['offset', '$SG144198']
mov ['ecx,', '[ebp+var_32C]']
call ['?switchToLang@LocalizationSwitcher@@QBE_NPA_W@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_2701']
push ['0']
push ['0']
push ['419h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
lea ['ecx,', '[ebp+var_218]']
push ['ecx']
mov ['ecx,', '[ebp+var_32C]']
call ['?switchToLang@LocalizationSwitcher@@QBE_NPA_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_2748']
push ['0']
push ['0']
push ['419h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['1']
push ['0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InvalidateRect@12']
mov ['eax,', '1']
jmp ['short', 'loc_2751']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@MarginsDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0C8h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_70],', 'eax']
mov ['ecx,', '[ebp+var_70]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '110h']
jz ['short', 'loc_2854']
cmp ['[ebp+var_84],', '111h']
jz ['loc_2C42']
cmp ['[ebp+var_84],', '114h']
jz ['loc_2B33']
jmp ['loc_3305']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+20h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['1842h']
push ['1842h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?create@URLCtrl@@QAEXPAUHWND__@@H0@Z']
push ['offset', '$SG144245']
push ['0']
push ['143h']
push ['184Ah']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['offset', '$SG144247']
push ['0']
push ['143h']
push ['184Ah']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['offset', '$SG144249']
push ['0']
push ['143h']
push ['184Ah']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['offset', '$SG144251']
push ['0']
push ['143h']
push ['184Ah']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['offset', '$SG144253']
push ['0']
push ['143h']
push ['184Ah']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+258h]']
push ['ecx']
push ['14Eh']
push ['184Ah']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['0']
mov ['ecx,', '[ebp+var_6C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+25Ch]']
push ['edx']
push ['0F1h']
push ['1851h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['32h']
push ['1']
push ['407h']
push ['184Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['9C4h']
push ['1']
push ['408h']
push ['184Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['32h']
push ['0']
push ['415h']
push ['184Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['edx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[edx+254h],', '0']
jnz ['short', 'loc_29FD']
mov ['[ebp+var_A8],', '9C4h']
jmp ['short', 'loc_2A0C']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+254h]']
mov ['[ebp+var_A8],', 'ecx']
mov ['edx,', '[ebp+var_A8]']
mov ['[ebp+lParam],', 'edx']
mov ['eax,', '[ebp+lParam]']
push ['eax']
push ['1']
push ['405h']
push ['184Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['0']
push ['1']
push ['407h']
push ['1859h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['1Eh']
push ['1']
push ['408h']
push ['1859h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['32h']
push ['0']
push ['415h']
push ['1859h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_70]']
call ['?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ']
mov ['[ebp+var_A4],', 'eax']
mov ['eax,', '[ebp+var_A4]']
mov ['ecx,', '[eax+28h]']
push ['ecx']
push ['1']
push ['405h']
push ['1859h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['0']
mov ['ecx,', '[ebp+var_A4]']
mov ['edx,', '[ecx+28h]']
push ['edx']
push ['1858h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['ecx,', '[ebp+this]']
call ['?initScintParam@MarginsDlg@@AAEXXZ']
mov ['ecx,', '[ebp+var_70]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '0']
jz ['short', 'loc_2B29']
push ['6']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['[ebp+var_A0]']
mov ['eax,', '1']
jmp ['loc_3307']
push ['184Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
mov ['[ebp+hWnd],', 'eax']
push ['1859h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
mov ['[ebp+var_88],', 'eax']
mov ['edx,', '[ebp+arg_C]']
cmp ['edx,', '[ebp+hWnd]']
jnz ['short', 'loc_2BC2']
push ['0']
push ['0']
push ['400h']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '9C4h']
jnz ['short', 'loc_2B97']
mov ['[ebp+var_80],', '0']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_80]']
mov ['[ecx+254h],', 'edx']
push ['0']
push ['0']
push ['413h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_2C3B']
mov ['edx,', '[ebp+arg_C]']
cmp ['edx,', '[ebp+var_88]']
jnz ['short', 'loc_2C3B']
push ['0']
push ['0']
push ['400h']
mov ['eax,', '[ebp+var_88]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+uValue],', 'eax']
mov ['ecx,', '[ebp+var_70]']
call ['?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['edx,', '[ebp+uValue]']
mov ['[ecx+28h],', 'edx']
push ['0']
mov ['eax,', '[ebp+uValue]']
push ['eax']
push ['1858h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
push ['0']
push ['5']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
xor ['eax,', 'eax']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_70]']
call ['?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ']
mov ['[ebp+var_64],', 'eax']
mov ['[ebp+var_68],', '1']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_74],', 'edx']
mov ['eax,', '[ebp+var_74]']
sub ['eax,', '183Ah']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '20h']
ja ['$LN8_3']
mov ['ecx,', '[ebp+var_74]']
movzx ['edx,', 'ds:$LN58[ecx]']
jmp ['ds:$LN60[edx*4]']
push ['0']
push ['0']
push ['0F0h']
push ['183Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2CAC']
mov ['[ebp+var_B0],', '1']
jmp ['short', 'loc_2CB6']
mov ['[ebp+var_B0],', '0']
mov ['edx,', '[ebp+var_64]']
mov ['al,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[edx],', 'al']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
push ['0ABECh']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
push ['0']
push ['0']
push ['0F0h']
push ['183Fh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2D12']
mov ['[ebp+var_B8],', '1']
jmp ['short', 'loc_2D1C']
mov ['[ebp+var_B8],', '0']
mov ['eax,', '[ebp+var_64]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B8]']
mov ['[eax+1],', 'cl']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['0ABEDh']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
push ['0']
push ['0']
push ['0F0h']
push ['1846h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2D79']
mov ['[ebp+var_B4],', '1']
jmp ['short', 'loc_2D83']
mov ['[ebp+var_B4],', '0']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_B4]']
mov ['[ecx+0Eh],', 'dl']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['0ABF5h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
push ['0']
push ['0']
push ['0F0h']
push ['185Ah']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2DE0']
mov ['[ebp+var_AC],', '1']
jmp ['short', 'loc_2DEA']
mov ['[ebp+var_AC],', '0']
mov ['edx,', '[ebp+var_64]']
mov ['al,', 'byte', 'ptr', '[ebp+var_AC]']
mov ['[edx+2Ch],', 'al']
mov ['eax,', '1']
jmp ['loc_3307']
push ['0']
push ['0']
push ['0F0h']
push ['1851h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2E2C']
mov ['[ebp+var_8C],', '1']
jmp ['short', 'loc_2E36']
mov ['[ebp+var_8C],', '0']
mov ['eax,', '[ebp+var_6C]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_8C]']
mov ['[eax+25Ch],', 'cl']
push ['0']
push ['0']
push ['421h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+4],', '1']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['0ABEFh']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+4],', '2']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['0ABF0h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['eax,', '[ebp+var_64]']
mov ['dword', 'ptr', '[eax+4],', '3']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
push ['0ABF1h']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+4],', '4']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['0ABF2h']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+4],', '5']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['0ABEEh']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['[ebp+wParam],', '0']
push ['0']
push ['0']
push ['0F0h']
push ['1840h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_2F8A']
mov ['[ebp+var_90],', '1']
jmp ['short', 'loc_2F94']
mov ['[ebp+var_90],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_90]']
mov ['[ebp+var_5D],', 'dl']
movzx ['eax,', '[ebp+var_5D]']
test ['eax,', 'eax']
jz ['short', 'loc_2FD3']
push ['0']
push ['1']
push ['0F1h']
push ['1844h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_64]']
mov ['dword', 'ptr', '[eax+14h],', '1']
mov ['[ebp+wParam],', '0ABFBh']
jmp ['short', 'loc_301A']
push ['0']
push ['0']
push ['0F1h']
push ['1844h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['1845h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+14h],', '0']
mov ['[ebp+wParam],', '0AC05h']
movzx ['eax,', '[ebp+var_5D]']
push ['eax']
push ['1844h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_5D]']
push ['eax']
push ['1845h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_5D]']
push ['eax']
push ['1841h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_5D]']
push ['eax']
push ['1842h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['eax,', '[ebp+var_68]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+14h],', '1']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['0ABFBh']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+14h],', '2']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['0ABFCh']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_70]']
call ['?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ']
mov ['[ebp+var_7C],', 'eax']
lea ['ecx,', '[ebp+var_5C]']
call ['??0ValueDlg@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG144303']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_5C]']
call ['?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z']
push ['3']
lea ['ecx,', '[ebp+var_5C]']
call ['?setNBNumber@ValueDlg@@QAEXH@Z']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
push ['0']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '0FFFFFFFFh']
jz ['short', 'loc_31CD']
mov ['ecx,', '[ebp+var_7C]']
mov ['edx,', '[ebp+var_98]']
mov ['[ecx+18h],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['1842h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
push ['0']
push ['41Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_C4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_C4]']
jmp ['loc_3307']
mov ['eax,', '[ebp+var_64]']
mov ['dword', 'ptr', '[eax+8],', '0']
mov ['ecx,', '[ebp+var_68]']
push ['ecx']
push ['0AC0Eh']
push ['111h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+8],', '1']
mov ['edx,', '[ebp+var_68]']
push ['edx']
push ['0AC0Fh']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+8],', '2']
mov ['eax,', '[ebp+var_68]']
push ['eax']
push ['0AC10h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_3307']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_CC],', 'ecx']
cmp ['[ebp+var_CC],', '1']
jz ['short', 'loc_329D']
jmp ['short', 'loc_3305']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_C0],', 'eax']
cmp ['[ebp+var_C0],', '184Ah']
jz ['short', 'loc_32BD']
jmp ['short', 'loc_3305']
push ['0']
push ['0']
push ['147h']
push ['184Ah']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_6C]']
mov ['[ecx+258h],', 'eax']
push ['0']
push ['0']
push ['412h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['short', 'loc_3307']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?initScintParam@MarginsDlg@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
mov ['[ebp+var_8],', 'ecx']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
call ['?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ']
mov ['[ebp+var_10],', 'eax']
push ['0']
push ['0']
push ['0F1h']
push ['183Dh']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['183Ch']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['183Bh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['183Ah']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['1852h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+nIDDlgItem],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+var_14]']
sub ['eax,', '2']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '3']
ja ['short', 'loc_348C']
mov ['ecx,', '[ebp+var_14]']
jmp ['ds:$LN21_1[ecx*4]']
mov ['[ebp+nIDDlgItem],', '1852h']
jmp ['short', 'loc_3493']
mov ['[ebp+nIDDlgItem],', '183Dh']
jmp ['short', 'loc_3493']
mov ['[ebp+nIDDlgItem],', '183Ch']
jmp ['short', 'loc_3493']
mov ['[ebp+nIDDlgItem],', '183Bh']
jmp ['short', 'loc_3493']
mov ['[ebp+nIDDlgItem],', '183Ah']
push ['0']
push ['1']
push ['0F1h']
mov ['edx,', '[ebp+nIDDlgItem]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
mov ['[ebp+var_18],', 'eax']
cmp ['[ebp+var_18],', '1']
jz ['short', 'loc_34C4']
cmp ['[ebp+var_18],', '2']
jz ['short', 'loc_34CD']
jmp ['short', 'loc_34D6']
mov ['[ebp+nIDDlgItem],', '1855h']
jmp ['short', 'loc_34DD']
mov ['[ebp+nIDDlgItem],', '1856h']
jmp ['short', 'loc_34DD']
mov ['[ebp+nIDDlgItem],', '1854h']
push ['0']
push ['1']
push ['0F1h']
mov ['ecx,', '[ebp+nIDDlgItem]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx]']
push ['edx']
push ['0F1h']
push ['183Eh']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['edx,', '[ebp+var_10]']
movzx ['eax,', 'byte', 'ptr', '[edx+1]']
push ['eax']
push ['0F1h']
push ['183Fh']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_10]']
movzx ['ecx,', 'byte', 'ptr', '[eax+0Eh]']
push ['ecx']
push ['0F1h']
push ['1846h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_10]']
movzx ['edx,', 'byte', 'ptr', '[ecx+2Ch]']
push ['edx']
push ['0F1h']
push ['185Ah']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+14h],', '0']
jz ['short', 'loc_358C']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_3593']
mov ['[ebp+var_1C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_1C]']
mov ['[ebp+var_1],', 'al']
push ['0']
movzx ['ecx,', '[ebp+var_1]']
push ['ecx']
push ['0F1h']
push ['1840h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx+14h],', '1']
jnz ['short', 'loc_35C9']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_35D0']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['0F1h']
push ['1844h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[edx+14h],', '2']
jnz ['short', 'loc_35FF']
mov ['[ebp+var_24],', '1']
jmp ['short', 'loc_3606']
mov ['[ebp+var_24],', '0']
push ['0']
mov ['eax,', '[ebp+var_24]']
push ['eax']
push ['0F1h']
push ['1845h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1844h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1845h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1841h']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+18h]']
push ['ecx']
push ['1842h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
movzx ['ecx,', '[ebp+var_1]']
push ['ecx']
push ['1842h']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0D8h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_84],', 'eax']
mov ['ecx,', '[ebp+var_84]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_C0],', 'eax']
mov ['ecx,', '[ebp+var_C0]']
call ['?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ']
mov ['[ebp+var_6C],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '110h']
jz ['short', 'loc_374B']
cmp ['[ebp+var_94],', '111h']
jz ['loc_3B8D']
jmp ['loc_3F18']
mov ['[ebp+nIDDlgItem],', '0']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx]']
mov ['[ebp+var_A8],', 'edx']
cmp ['[ebp+var_A8],', '1']
jz ['short', 'loc_3771']
cmp ['[ebp+var_A8],', '2']
jz ['short', 'loc_377A']
jmp ['short', 'loc_3783']
mov ['[ebp+nIDDlgItem],', '1904h']
jmp ['short', 'loc_378A']
mov ['[ebp+nIDDlgItem],', '1903h']
jmp ['short', 'loc_378A']
mov ['[ebp+nIDDlgItem],', '1902h']
push ['0']
push ['1']
push ['0F1h']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_6C]']
mov ['ecx,', '[eax+4]']
mov ['[ebp+var_80],', 'ecx']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '1']
mov ['[ebp+var_80],', 'edx']
cmp ['[ebp+var_80],', '3']
ja ['short', 'loc_37EA']
mov ['eax,', '[ebp+var_80]']
jmp ['ds:$LN64[eax*4]']
mov ['[ebp+nIDDlgItem],', '1909h']
jmp ['short', 'loc_37F1']
mov ['[ebp+nIDDlgItem],', '190Ah']
jmp ['short', 'loc_37F1']
mov ['[ebp+nIDDlgItem],', '1908h']
jmp ['short', 'loc_37F1']
mov ['[ebp+nIDDlgItem],', '1907h']
jmp ['short', 'loc_37F1']
mov ['[ebp+nIDDlgItem],', '1906h']
mov ['[ebp+var_8C],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
call ['?getInstance@EncodingMapper@@SAPAV1@XZ']
mov ['[ebp+var_DC],', 'eax']
mov ['[ebp+var_78],', '0']
mov ['[ebp+var_D4],', '2Eh']
jmp ['short', 'loc_3831']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '1']
mov ['[ebp+var_78],', 'ecx']
mov ['edx,', '[ebp+var_78]']
cmp ['edx,', '[ebp+var_D4]']
jnb ['loc_38F3']
mov ['eax,', '[ebp+var_78]']
mov ['ecx,', 'ds:?encodings@@3PAHA[eax*4]']
push ['ecx']
mov ['ecx,', '[ebp+var_DC]']
call ['?getIndexFromEncoding@EncodingMapper@@QBEHH@Z']
mov ['[ebp+var_7C],', 'eax']
cmp ['[ebp+var_7C],', '0FFFFFFFFh']
jz ['loc_38EE']
mov ['edx,', '[ebp+var_7C]']
add ['edx,', '0AFDCh']
mov ['[ebp+var_7C],', 'edx']
lea ['eax,', '[ebp+var_48]']
push ['eax']
mov ['ecx,', '[ebp+var_7C]']
push ['ecx']
call ['?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_48]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+wParam],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ebp+var_78]']
mov ['eax,', '[ecx+10h]']
cmp ['eax,', 'ds:?encodings@@3PAHA[edx*4]']
jnz ['short', 'loc_38C5']
mov ['ecx,', '[ebp+wParam]']
mov ['[ebp+var_8C],', 'ecx']
mov ['edx,', '[ebp+var_78]']
mov ['eax,', 'ds:?encodings@@3PAHA[edx*4]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['151h']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_3828']
mov ['ecx,', '[ebp+var_6C]']
cmp ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
jz ['short', 'loc_3905']
cmp ['[ebp+var_8C],', '0FFFFFFFFh']
jnz ['short', 'loc_3922']
push ['0']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
jmp ['short', 'loc_3949']
mov ['[ebp+nIDDlgItem],', '1915h']
push ['0']
mov ['ecx,', '[ebp+var_8C]']
push ['ecx']
push ['14Eh']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0F1h']
mov ['ecx,', '[ebp+nIDDlgItem]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+nIDDlgItem],', '1907h']
jnz ['short', 'loc_3983']
mov ['ecx,', '[ebp+var_6C]']
movzx ['edx,', 'byte', 'ptr', '[ecx+8]']
test ['edx,', 'edx']
jz ['short', 'loc_3983']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_398D']
mov ['[ebp+var_A4],', '0']
push ['0']
mov ['eax,', '[ebp+var_A4]']
push ['eax']
push ['0F1h']
push ['1914h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+nIDDlgItem],', '1907h']
jnz ['short', 'loc_39C2']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_39CC']
mov ['[ebp+bEnable],', '0']
mov ['eax,', '[ebp+bEnable]']
push ['eax']
push ['1914h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['[ebp+var_AC],', '0']
mov ['[ebp+var_74],', '0']
jmp ['short', 'loc_3A08']
mov ['eax,', '[ebp+var_74]']
add ['eax,', '1']
mov ['[ebp+var_74],', 'eax']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ebp+var_74]']
cmp ['edx,', '[ecx+4]']
jge ['loc_3B35']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
cmp ['[ebp+var_74],', '0Fh']
jz ['loc_3B24']
mov ['eax,', '[ebp+var_74]']
push ['eax']
mov ['ecx,', '[ebp+var_84]']
call ['?langTypeToCommandID@NppParameters@@QBEHW4LangType@@@Z']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0FFFFFFFFh']
jz ['loc_3B24']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
mov ['edx,', '[ebp+var_9C]']
push ['edx']
call ['?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_2C]']
call ['?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
test ['eax,', 'eax']
jbe ['loc_3B24']
sub ['esp,', '1Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_E0],', 'esp']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_C8],', 'eax']
mov ['ecx,', '[ebp+var_C8]']
mov ['[ebp+var_E4],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_74]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_68]']
call ['??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
mov ['[ebp+var_D0],', 'eax']
mov ['eax,', '[ebp+var_D0]']
mov ['[ebp+var_B4],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_B4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_68]']
call ['??1LangID_Name@@QAE@XZ']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['190Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_6C]']
mov ['edx,', '[ecx+0Ch]']
cmp ['edx,', '[ebp+var_74]']
jnz ['short', 'loc_3B24']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
sub ['eax,', '1']
mov ['[ebp+var_AC],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_39FF']
push ['0']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
push ['14Eh']
push ['190Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_84]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_3B7E']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_90]']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+var_88]']
sub ['eax,', '1902h']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '13h']
ja ['$LN5_1']
mov ['ecx,', '[ebp+var_88]']
movzx ['edx,', 'ds:$LN62[ecx]']
jmp ['ds:$LN65[edx*4]']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+4],', '2']
mov ['ecx,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[ecx+8],', '0']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z']
mov ['edx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[edx+10h],', '0FFFFFFFFh']
push ['0']
push ['1916h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['edx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[edx+4],', '3']
mov ['eax,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[eax+8],', '0']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z']
mov ['ecx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
push ['0']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['ecx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[ecx+4],', '1']
mov ['edx,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[edx+8],', '0']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
push ['0']
push ['1916h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+4],', '4']
push ['1']
mov ['ecx,', '[ebp+this]']
call ['?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z']
mov ['ecx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[ecx+10h],', '0FFFFFFFFh']
push ['0']
push ['1916h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['ecx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_6C]']
mov ['byte', 'ptr', '[edx+8],', '0']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax+10h],', '0FFFFFFFFh']
push ['0']
push ['1916h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_3F1A']
push ['0']
push ['0']
push ['0F0h']
push ['1914h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_3D66']
mov ['[ebp+var_98],', '1']
jmp ['short', 'loc_3D70']
mov ['[ebp+var_98],', '0']
mov ['edx,', '[ebp+var_6C]']
mov ['al,', 'byte', 'ptr', '[ebp+var_98]']
mov ['[edx+8],', 'al']
mov ['eax,', '1']
jmp ['loc_3F1A']
push ['1']
push ['1916h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['0']
push ['147h']
push ['1916h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_C4],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_C4]']
push ['edx']
push ['150h']
push ['1916h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_CC],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_CC]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['ecx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[ecx],', '1']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['edx,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[edx],', '2']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['eax,', '[ebp+var_6C]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '1']
jmp ['loc_3F1A']
mov ['ecx,', '[ebp+arg_8]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1']
jnz ['loc_3F14']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '190Ch']
jnz ['short', 'loc_3EA6']
push ['0']
push ['0']
push ['147h']
push ['190Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_D8]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[eax]']
mov ['[edx+0Ch],', 'eax']
mov ['eax,', '1']
jmp ['short', 'loc_3F1A']
jmp ['short', 'loc_3F14']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1916h']
jnz ['short', 'loc_3F14']
push ['0']
push ['0']
push ['147h']
push ['1916h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_B8],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_B8]']
push ['edx']
push ['150h']
push ['1916h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_BC],', 'eax']
mov ['edx,', '[ebp+var_6C]']
mov ['eax,', '[ebp+var_BC]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '1']
jmp ['short', 'loc_3F1A']
xor ['eax,', 'eax']
jmp ['short', 'loc_3F1A']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@DefaultDirectoryDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '230h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_220],', 'eax']
mov ['ecx,', '[ebp+var_220]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_214],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_228],', 'eax']
cmp ['[ebp+var_228],', '110h']
jz ['short', 'loc_3FE5']
cmp ['[ebp+var_228],', '111h']
jz ['loc_40F6']
jmp ['loc_42F2']
mov ['[ebp+nIDDlgItem],', '0']
mov ['ecx,', '[ebp+var_214]']
mov ['edx,', '[ecx+260h]']
mov ['[ebp+var_22C],', 'edx']
cmp ['[ebp+var_22C],', '1']
jz ['short', 'loc_4015']
cmp ['[ebp+var_22C],', '2']
jz ['short', 'loc_4028']
jmp ['short', 'loc_403B']
mov ['[ebp+nIDDlgItem],', '190Fh']
mov ['[ebp+var_20D],', '0']
jmp ['short', 'loc_404C']
mov ['[ebp+nIDDlgItem],', '1910h']
mov ['[ebp+var_20D],', '1']
jmp ['short', 'loc_404C']
mov ['[ebp+nIDDlgItem],', '190Eh']
mov ['[ebp+var_20D],', '0']
push ['0']
push ['1']
push ['0F1h']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '264h']
push ['eax']
push ['0']
push ['0Ch']
push ['1911h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['eax,', '[ebp+var_20D]']
push ['eax']
push ['1911h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_20D]']
push ['eax']
push ['1912h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['ecx,', '[ebp+var_220]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_224],', 'eax']
cmp ['[ebp+var_224],', '0']
jz ['short', 'loc_40F6']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_224]']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '300h']
jnz ['loc_41B3']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
mov ['[ebp+var_230],', 'edx']
cmp ['[ebp+var_230],', '1911h']
jz ['short', 'loc_4133']
jmp ['loc_41B3']
lea ['eax,', '[ebp+lParam]']
push ['eax']
push ['104h']
push ['0Dh']
push ['1911h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '264h']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__lstrcpyW@8']
push ['1F4h']
mov ['edx,', '[ebp+var_214]']
add ['edx,', '46Ch']
push ['edx']
mov ['eax,', '[ebp+var_214]']
add ['eax,', '264h']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ExpandEnvironmentStringsW@12']
mov ['ecx,', '[ebp+var_214]']
add ['ecx,', '46Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_220]']
call ['?setWorkingDir@NppParameters@@QAEXPB_W@Z']
mov ['eax,', '1']
jmp ['loc_42F4']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_21C],', 'edx']
mov ['eax,', '[ebp+var_21C]']
sub ['eax,', '190Eh']
mov ['[ebp+var_21C],', 'eax']
cmp ['[ebp+var_21C],', '4']
ja ['$LN1_0']
mov ['ecx,', '[ebp+var_21C]']
jmp ['ds:$LN24_1[ecx*4]']
mov ['edx,', '[ebp+var_214]']
mov ['dword', 'ptr', '[edx+260h],', '0']
push ['0']
push ['1911h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1912h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_42F4']
mov ['ecx,', '[ebp+var_214]']
mov ['dword', 'ptr', '[ecx+260h],', '1']
push ['0']
push ['1911h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1912h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['short', 'loc_42F4']
mov ['eax,', '[ebp+var_214]']
mov ['dword', 'ptr', '[eax+260h],', '2']
push ['1']
push ['1911h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['1']
push ['1912h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['short', 'loc_42F4']
push ['0']
push ['1911h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['?folderBrowser@@YAXPAUHWND__@@HPB_W@Z']
add ['esp,', '0Ch']
mov ['eax,', '1']
jmp ['short', 'loc_42F4']
xor ['eax,', 'eax']
jmp ['short', 'loc_42F4']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+uValue],', '0']
jle ['short', 'loc_4334']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_433B']
mov ['[ebp+bEnable],', '0']
mov ['eax,', '[ebp+bEnable]']
push ['eax']
push ['191Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['eax,', '[ebp+uValue]']
push ['eax']
push ['191Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
cmp ['[ebp+uValue],', '0']
jle ['short', 'loc_437F']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_4386']
mov ['[ebp+nCmdShow],', '0']
mov ['eax,', '[ebp+nCmdShow]']
push ['eax']
push ['191Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0F0h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_AC],', 'eax']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_CC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_D8],', 'eax']
cmp ['[ebp+var_D8],', '110h']
jz ['short', 'loc_441D']
cmp ['[ebp+var_D8],', '111h']
jz ['loc_467F']
jmp ['loc_49E4']
push ['0']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNbMaxRecentFile@NppParameters@@QBEHXZ']
push ['eax']
push ['18A7h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+20h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['18A7h']
push ['18A7h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?create@URLCtrl@@QAEXPAUHWND__@@H0@Z']
mov ['edx,', '[ebp+var_CC]']
movzx ['eax,', 'byte', 'ptr', '[edx+24h]']
test ['eax,', 'eax']
jnz ['short', 'loc_449B']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_44A5']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['0F1h']
push ['18A1h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['ecx,', '[ebp+var_AC]']
call ['?putRecentFileInSubMenu@NppParameters@@QBE_NXZ']
movzx ['ecx,', 'al']
push ['ecx']
push ['0F1h']
push ['1918h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_AC]']
call ['?getRecentFileCustomLength@NppParameters@@QBEHXZ']
mov ['[ebp+var_BC],', 'eax']
mov ['[ebp+nIDDlgItem],', '191Bh']
mov ['ecx,', '[ebp+var_BC]']
mov ['[ebp+uValue],', 'ecx']
cmp ['[ebp+var_BC],', '0']
jnz ['short', 'loc_4533']
mov ['[ebp+nIDDlgItem],', '1919h']
mov ['[ebp+uValue],', '0']
jmp ['short', 'loc_4559']
cmp ['[ebp+var_BC],', '0FFFFFFFFh']
jz ['short', 'loc_4545']
cmp ['[ebp+var_BC],', '0']
jge ['short', 'loc_4559']
mov ['[ebp+nIDDlgItem],', '191Ah']
mov ['[ebp+uValue],', '0']
push ['0']
push ['1']
push ['0F1h']
mov ['edx,', '[ebp+nIDDlgItem]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+nIDDlgItem],', '191Bh']
jnz ['short', 'loc_458E']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_4598']
mov ['[ebp+bEnable],', '0']
mov ['edx,', '[ebp+bEnable]']
push ['edx']
push ['191Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
cmp ['[ebp+nIDDlgItem],', '191Bh']
jnz ['short', 'loc_45D0']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_45DA']
mov ['[ebp+nCmdShow],', '0']
mov ['edx,', '[ebp+nCmdShow]']
push ['edx']
push ['191Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
push ['0']
mov ['edx,', '[ebp+uValue]']
push ['edx']
push ['191Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '6Ch']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+6Ch]']
mov ['eax,', '[edx+4]']
call ['eax']
push ['0']
push ['0']
push ['191Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '6Ch']
call ['?create@URLCtrl@@QAEXPAUHWND__@@H0@Z']
mov ['ecx,', '[ebp+var_AC]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_D4],', 'eax']
cmp ['[ebp+var_D4],', '0']
jz ['short', 'loc_467F']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_D4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_B8],', 'edx']
mov ['eax,', '[ebp+var_B8]']
sub ['eax,', '18A1h']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '7Bh']
ja ['$LN1_1']
mov ['ecx,', '[ebp+var_B8]']
movzx ['edx,', 'ds:$LN36_0[ecx]']
jmp ['ds:$LN38_1[edx*4]']
push ['18A1h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jnz ['short', 'loc_46DA']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_46E4']
mov ['[ebp+var_D0],', '0']
mov ['ecx,', '[ebp+var_CC]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_D0]']
mov ['[ecx+24h],', 'dl']
mov ['eax,', '1']
jmp ['loc_49E6']
lea ['ecx,', '[ebp+var_A8]']
call ['??0ValueDlg@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG144745']
mov ['ecx,', '[ebp+var_AC]']
call ['?getNbMaxRecentFile@NppParameters@@QBEHXZ']
push ['eax']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
push ['0']
lea ['ecx,', '[ebp+var_A8]']
call ['?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z']
lea ['edx,', '[ebp+Point]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
push ['0']
mov ['eax,', '[ebp+Point.y]']
push ['eax']
mov ['ecx,', '[ebp+Point.x]']
push ['ecx']
lea ['ecx,', '[ebp+var_A8]']
call ['?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '0FFFFFFFFh']
jz ['short', 'loc_47C8']
cmp ['[ebp+var_B0],', '1Eh']
jle ['short', 'loc_477E']
mov ['[ebp+var_B0],', '1Eh']
mov ['edx,', '[ebp+var_B0]']
push ['edx']
mov ['ecx,', '[ebp+var_AC]']
call ['?setNbMaxRecentFile@NppParameters@@QAEXH@Z']
push ['0']
mov ['eax,', '[ebp+var_B0]']
push ['eax']
push ['18A7h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
push ['0']
push ['40Bh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_EC],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_A8]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_EC]']
jmp ['loc_49E6']
push ['1918h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
movzx ['edx,', 'al']
push ['edx']
mov ['ecx,', '[ebp+var_AC]']
call ['?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z']
push ['0']
push ['0']
push ['424h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_49E6']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z']
push ['0']
mov ['ecx,', '[ebp+var_AC]']
call ['?setRecentFileCustomLength@NppParameters@@QAEXH@Z']
push ['0']
push ['0']
push ['423h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_49E6']
push ['0']
mov ['ecx,', '[ebp+this]']
call ['?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_AC]']
call ['?setRecentFileCustomLength@NppParameters@@QAEXH@Z']
push ['0']
push ['0']
push ['423h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_49E6']
mov ['ecx,', '[ebp+var_AC]']
call ['?getRecentFileCustomLength@NppParameters@@QBEHXZ']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '0']
jg ['short', 'loc_48FC']
push ['64h']
mov ['ecx,', '[ebp+this]']
call ['?setCustomLen@RecentFilesHistoryDlg@@AAEXH@Z']
push ['64h']
mov ['ecx,', '[ebp+var_AC]']
call ['?setRecentFileCustomLength@NppParameters@@QAEXH@Z']
push ['0']
push ['0']
push ['423h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_49E6']
lea ['ecx,', '[ebp+var_5C]']
call ['??0ValueDlg@@QAE@XZ']
mov ['[ebp+var_4],', '1']
push ['offset', '$SG144759']
mov ['ecx,', '[ebp+var_AC]']
call ['?getRecentFileCustomLength@NppParameters@@QBEHXZ']
push ['eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_5C]']
call ['?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z']
push ['3']
lea ['ecx,', '[ebp+var_5C]']
call ['?setNBNumber@ValueDlg@@QAEXH@Z']
lea ['ecx,', '[ebp+var_F4]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
push ['0']
mov ['edx,', '[ebp+var_F4.y]']
push ['edx']
mov ['eax,', '[ebp+var_F4.x]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z']
mov ['[ebp+var_C0],', 'eax']
cmp ['[ebp+var_C0],', '0FFFFFFFFh']
jz ['short', 'loc_49BF']
push ['0']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['191Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
mov ['ecx,', '[ebp+var_AC]']
call ['?setRecentFileCustomLength@NppParameters@@QAEXH@Z']
push ['0']
push ['0']
push ['423h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_E8],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_E8]']
jmp ['short', 'loc_49E6']
xor ['eax,', 'eax']
jmp ['short', 'loc_49E6']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1B4h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_D8],', 'eax']
mov ['ecx,', '[ebp+var_D8]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_E0],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_120],', 'eax']
cmp ['[ebp+var_120],', '110h']
jz ['short', 'loc_4B1D']
cmp ['[ebp+var_120],', '111h']
jz ['loc_4E11']
jmp ['loc_55E2']
mov ['ecx,', '[ebp+var_D8]']
call ['?getNbLang@NppParameters@@QBEHXZ']
mov ['[ebp+var_164],', 'eax']
mov ['[ebp+var_F8],', '0']
jmp ['short', 'loc_4B49']
mov ['ecx,', '[ebp+var_F8]']
add ['ecx,', '1']
mov ['[ebp+var_F8],', 'ecx']
mov ['edx,', '[ebp+var_F8]']
cmp ['edx,', '[ebp+var_164]']
jge ['short', 'loc_4B8F']
mov ['eax,', '[ebp+var_F8]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['180h']
push ['196Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_4B3A']
mov ['[ebp+var_E4],', '0']
jmp ['short', 'loc_4BAA']
mov ['eax,', '[ebp+var_E4]']
add ['eax,', '1']
mov ['[ebp+var_E4],', 'eax']
mov ['ecx,', '[ebp+var_D8]']
mov ['edx,', '[ebp+var_E4]']
cmp ['edx,', '[ecx+4]']
jge ['loc_4CEC']
lea ['ecx,', '[ebp+var_90]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_E4],', '0Fh']
jz ['loc_4CD5']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
call ['?langTypeToCommandID@NppParameters@@QBEHW4LangType@@@Z']
mov ['[ebp+var_108],', 'eax']
cmp ['[ebp+var_108],', '0FFFFFFFFh']
jz ['loc_4CD5']
lea ['ecx,', '[ebp+var_90]']
push ['ecx']
mov ['edx,', '[ebp+var_108]']
push ['edx']
call ['?getNameStrFromCmd@@YAXKAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '8']
lea ['ecx,', '[ebp+var_90]']
call ['?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
test ['eax,', 'eax']
jbe ['loc_4CD5']
sub ['esp,', '1Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_194],', 'esp']
lea ['eax,', '[ebp+var_90]']
push ['eax']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_170],', 'eax']
mov ['ecx,', '[ebp+var_170]']
mov ['[ebp+var_18C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_108]']
push ['edx']
mov ['eax,', '[ebp+var_E4]']
push ['eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_D0]']
call ['??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
mov ['[ebp+var_178],', 'eax']
mov ['ecx,', '[ebp+var_178]']
mov ['[ebp+var_180],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+var_180]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B824h']
call ['?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_D0]']
call ['??1LangMenuItem@@QAE@XZ']
lea ['ecx,', '[ebp+var_90]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['180h']
push ['1965h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_90]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_4B9B']
mov ['[ebp+var_100],', '0']
mov ['ecx,', '[ebp+var_E0]']
add ['ecx,', '64h']
call ['?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_188],', 'eax']
jmp ['short', 'loc_4D1B']
mov ['edx,', '[ebp+var_100]']
add ['edx,', '1']
mov ['[ebp+var_100],', 'edx']
mov ['eax,', '[ebp+var_100]']
cmp ['eax,', '[ebp+var_188]']
jnb ['short', 'loc_4D64']
mov ['ecx,', '[ebp+var_100]']
push ['ecx']
mov ['ecx,', '[ebp+var_E0]']
add ['ecx,', '64h']
call ['??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z']
add ['eax,', '8']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['180h']
push ['1966h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_4D0C']
mov ['ecx,', '[ebp+var_E0]']
movzx ['edx,', 'byte', 'ptr', '[ecx+74h]']
test ['edx,', 'edx']
jz ['short', 'loc_4D7E']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_4D88']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['196Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1967h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1968h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['ecx,', '[ebp+var_D8]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_138],', 'eax']
cmp ['[ebp+var_138],', '0']
jz ['short', 'loc_4E07']
push ['6']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['[ebp+var_138]']
mov ['eax,', '1']
jmp ['loc_55E4']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1']
jnz ['loc_4FF4']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '1966h']
jz ['short', 'loc_4E53']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1965h']
jnz ['loc_4FF4']
push ['1965h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
mov ['[ebp+var_154],', 'eax']
push ['1966h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
mov ['[ebp+var_168],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '2']
jnz ['short', 'loc_4EEB']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+var_154]']
jnz ['short', 'loc_4EBD']
push ['0']
push ['1967h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['short', 'loc_4EE1']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+var_168]']
jnz ['short', 'loc_4EE1']
push ['0']
push ['1968h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_55E4']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1965h']
jnz ['short', 'loc_4F14']
mov ['[ebp+nIDDlgItem],', '1967h']
mov ['[ebp+var_11C],', '1968h']
jmp ['short', 'loc_4F28']
mov ['[ebp+nIDDlgItem],', '1968h']
mov ['[ebp+var_11C],', '1967h']
push ['0']
push ['0']
push ['188h']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_17C],', 'eax']
cmp ['[ebp+var_17C],', '0FFFFFFFFh']
jz ['loc_4FEA']
push ['1']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1965h']
jnz ['short', 'loc_4F9A']
mov ['[ebp+var_148],', '1966h']
jmp ['short', 'loc_4FA4']
mov ['[ebp+var_148],', '1965h']
mov ['edx,', '[ebp+var_148]']
mov ['[ebp+var_15C],', 'edx']
push ['0']
push ['0FFFFFFFFh']
push ['186h']
mov ['eax,', '[ebp+var_15C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_11C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_55E4']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_110],', 'eax']
cmp ['[ebp+var_110],', '1967h']
jb ['loc_55E2']
cmp ['[ebp+var_110],', '1968h']
jbe ['loc_50C3']
cmp ['[ebp+var_110],', '196Bh']
jz ['short', 'loc_502E']
jmp ['loc_55E2']
push ['0']
push ['0']
push ['0F0h']
push ['196Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_5061']
mov ['[ebp+var_128],', '1']
jmp ['short', 'loc_506B']
mov ['[ebp+var_128],', '0']
mov ['eax,', '[ebp+var_E0]']
mov ['cl,', 'byte', 'ptr', '[ebp+var_128]']
mov ['[eax+74h],', 'cl']
mov ['edx,', '[ebp+var_E0]']
movzx ['eax,', 'byte', 'ptr', '[edx+74h]']
test ['eax,', 'eax']
jz ['short', 'loc_5094']
mov ['[ebp+lpText],', 'offset', '$SG144863']
jmp ['short', 'loc_509E']
mov ['[ebp+lpText],', 'offset', '$SG144864']
push ['0']
push ['offset', '$SG144862']
mov ['ecx,', '[ebp+lpText]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MessageBoxW@16']
mov ['eax,', '1']
jmp ['loc_55E4']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1967h']
jnz ['short', 'loc_511E']
mov ['[ebp+var_E8],', '1965h']
mov ['[ebp+var_104],', '1966h']
mov ['[ebp+var_144],', '1968h']
mov ['[ebp+var_12C],', '1967h']
mov ['eax,', '[ebp+this]']
add ['eax,', '1B824h']
mov ['[ebp+var_F4],', 'eax']
mov ['ecx,', '[ebp+var_E0]']
add ['ecx,', '64h']
mov ['[ebp+var_124],', 'ecx']
jmp ['short', 'loc_5163']
mov ['[ebp+var_E8],', '1966h']
mov ['[ebp+var_104],', '1965h']
mov ['[ebp+var_144],', '1967h']
mov ['[ebp+var_12C],', '1968h']
mov ['edx,', '[ebp+var_E0]']
add ['edx,', '64h']
mov ['[ebp+var_F4],', 'edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '1B824h']
mov ['[ebp+var_124],', 'eax']
push ['0']
push ['0']
push ['188h']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_F0],', 'eax']
cmp ['[ebp+var_F0],', '0FFFFFFFFh']
jnz ['short', 'loc_5199']
mov ['eax,', '1']
jmp ['loc_55E4']
lea ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+var_F0]']
push ['edx']
push ['189h']
mov ['eax,', '[ebp+var_E8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
mov ['ecx,', '[ebp+var_F4]']
call ['?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z']
push ['eax']
lea ['ecx,', '[ebp+var_74]']
call ['??0LangMenuItem@@QAE@ABU0@@Z']
mov ['[ebp+var_4],', '3']
mov ['ecx,', '[ebp+var_F0]']
push ['ecx']
lea ['edx,', '[ebp+var_1A4]']
push ['edx']
lea ['eax,', '[ebp+var_1B4]']
push ['eax']
mov ['ecx,', '[ebp+var_F4]']
call ['?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ']
mov ['[ebp+var_174],', 'eax']
mov ['ecx,', '[ebp+var_174]']
mov ['[ebp+var_14C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+var_14C]']
call ['??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_1B4]']
call ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_190],', 'esp']
lea ['edx,', '[ebp+var_1A4]']
push ['edx']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_184],', 'eax']
mov ['eax,', '[ebp+var_184]']
mov ['[ebp+var_198],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
lea ['ecx,', '[ebp+var_1C0]']
push ['ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_F4]']
call ['?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_1A8],', 'eax']
lea ['ecx,', '[ebp+var_1C0]']
call ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
lea ['edx,', '[ebp+lParam]']
push ['edx']
push ['0']
push ['180h']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_114],', 'eax']
push ['0']
mov ['eax,', '[ebp+var_F0]']
push ['eax']
push ['182h']
mov ['ecx,', '[ebp+var_E8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+var_74]']
push ['ecx']
mov ['ecx,', '[ebp+var_124]']
call ['?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z']
push ['0']
mov ['edx,', '[ebp+var_114]']
push ['edx']
push ['186h']
mov ['eax,', '[ebp+var_104]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0FFFFFFFFh']
push ['186h']
mov ['eax,', '[ebp+var_E8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['1']
mov ['eax,', '[ebp+var_144]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['eax,', '[ebp+var_12C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
cmp ['[ebp+var_74],', '39h']
jl ['loc_5518']
mov ['eax,', '[ebp+var_D8]']
mov ['ecx,', '[ebp+var_74]']
cmp ['ecx,', '[eax+4]']
jge ['loc_5518']
mov ['[ebp+var_D1],', '0']
mov ['[ebp+var_EC],', '0']
jmp ['short', 'loc_5390']
mov ['edx,', '[ebp+var_EC]']
add ['edx,', '1']
mov ['[ebp+var_EC],', 'edx']
mov ['ecx,', '[ebp+var_D8]']
call ['?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ']
mov ['ecx,', 'eax']
call ['?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ']
cmp ['[ebp+var_EC],', 'eax']
jnb ['loc_5518']
movzx ['eax,', '[ebp+var_D1]']
test ['eax,', 'eax']
jnz ['loc_5518']
push ['offset', '$SG145043']
push ['offset', '$SG145042']
mov ['ecx,', '[ebp+var_EC]']
push ['ecx']
mov ['ecx,', '[ebp+var_D8]']
call ['?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ']
mov ['ecx,', 'eax']
call ['?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z']
mov ['ecx,', '[eax]']
call ['?FirstChild@TiXmlNode@@QBEPAV1@PB_W@Z']
mov ['ecx,', 'eax']
call ['?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z']
mov ['[ebp+var_16C],', 'eax']
push ['offset', '$SG145045']
mov ['ecx,', '[ebp+var_16C]']
call ['?FirstChildElement@TiXmlNode@@QBEPAVTiXmlElement@@PB_W@Z']
mov ['[ebp+var_FC],', 'eax']
jmp ['short', 'loc_5422']
push ['offset', '$SG145049']
mov ['ecx,', '[ebp+var_FC]']
call ['?NextSibling@TiXmlNode@@QBEPAV1@PB_W@Z']
mov ['[ebp+var_FC],', 'eax']
cmp ['[ebp+var_FC],', '0']
jz ['loc_5513']
mov ['ecx,', '[ebp+var_FC]']
call ['?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ']
mov ['[ebp+var_118],', 'eax']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
push ['offset', '$SG145070']
mov ['ecx,', '[ebp+var_118]']
call ['?Attribute@TiXmlElement@@QBEPB_WPB_W@Z']
push ['eax']
lea ['ecx,', '[ebp+var_AC]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_150],', 'eax']
mov ['eax,', '[ebp+var_150]']
mov ['[ebp+var_158],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['ecx,', '[ebp+var_158]']
push ['ecx']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_D9],', 'al']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_AC]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
movzx ['edx,', '[ebp+var_D9]']
test ['edx,', 'edx']
jz ['short', 'loc_550E']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1967h']
jnz ['short', 'loc_54C4']
mov ['[ebp+var_13C],', 'offset', '$SG145073']
jmp ['short', 'loc_54CE']
mov ['[ebp+var_13C],', 'offset', '$SG145074']
mov ['edx,', '[ebp+var_13C]']
push ['edx']
push ['offset', '$SG145075']
mov ['ecx,', '[ebp+var_118]']
call ['?SetAttribute@TiXmlElement@@QAEXPB_W0@Z']
mov ['eax,', '[ebp+var_EC]']
push ['eax']
mov ['ecx,', '[ebp+var_D8]']
call ['?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ']
mov ['ecx,', 'eax']
call ['?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z']
mov ['ecx,', '[eax]']
call ['?SaveFile@TiXmlDocument@@QBE_NXZ']
mov ['[ebp+var_D1],', '1']
jmp ['short', 'loc_5513']
jmp ['loc_540C']
jmp ['loc_5381']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
mov ['[ebp+hWnd],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1967h']
jnz ['short', 'loc_5563']
push ['0']
mov ['edx,', '[ebp+uPosition]']
push ['edx']
push ['0']
push ['0']
push ['40Eh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteMenu@12']
jmp ['short', 'loc_55A5']
lea ['ecx,', '[ebp+var_6C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+uPosition]']
push ['ecx']
push ['400h']
mov ['edx,', '[ebp+var_114]']
sub ['edx,', '1']
push ['edx']
push ['5']
push ['0']
push ['0']
push ['40Eh']
mov ['eax,', '[ebp+hWnd]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetSubMenu@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__InsertMenuW@20']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__DrawMenuBar@4']
mov ['[ebp+var_160],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_1A4]']
call ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_74]']
call ['??1LangMenuItem@@QAE@XZ']
mov ['eax,', '[ebp+var_160]']
jmp ['short', 'loc_55E4']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@TabSettings@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@TabSettings@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0FCh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_6C],', 'eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_64],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_E4],', 'eax']
cmp ['[ebp+var_E4],', '110h']
jz ['short', 'loc_5674']
cmp ['[ebp+var_E4],', '111h']
jz ['loc_583F']
jmp ['loc_6269']
push ['0']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+14h]']
push ['edx']
push ['18A6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
mov ['eax,', '[edx+4]']
call ['eax']
push ['0']
push ['18A6h']
push ['18A6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?create@URLCtrl@@QAEXPAUHWND__@@H0@Z']
push ['0']
mov ['eax,', '[ebp+var_64]']
movzx ['ecx,', 'byte', 'ptr', '[eax+18h]']
push ['ecx']
push ['0F1h']
push ['189Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_6C]']
call ['?getNbLang@NppParameters@@QBEHXZ']
mov ['[ebp+var_EC],', 'eax']
push ['offset', '$SG145117']
push ['0']
push ['180h']
push ['196Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_8C],', '0']
jmp ['short', 'loc_573B']
mov ['eax,', '[ebp+var_8C]']
add ['eax,', '1']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
cmp ['ecx,', '[ebp+var_EC]']
jge ['short', 'loc_577E']
mov ['edx,', '[ebp+var_8C]']
push ['edx']
mov ['ecx,', '[ebp+var_6C]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['180h']
push ['196Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_572C']
mov ['[ebp+var_108],', '0']
push ['0']
push ['0']
push ['186h']
push ['196Dh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['196Fh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
push ['0']
push ['196Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
push ['0']
push ['1970h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1970h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['ecx,', '[ebp+var_6C]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_DC],', 'eax']
cmp ['[ebp+var_DC],', '0']
jz ['short', 'loc_5835']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_DC]']
mov ['eax,', '1']
jmp ['loc_626B']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '1']
jnz ['loc_5C82']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '196Dh']
jnz ['loc_5C82']
push ['0']
push ['0']
push ['188h']
push ['196Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_80],', 'eax']
cmp ['[ebp+var_80],', '0FFFFFFFFh']
jnz ['short', 'loc_589A']
xor ['eax,', 'eax']
jmp ['loc_626B']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_58AC']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_58B6']
mov ['[ebp+nCmdShow],', '0']
mov ['edx,', '[ebp+nCmdShow]']
push ['edx']
push ['196Fh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
cmp ['[ebp+var_80],', '0']
jz ['short', 'loc_58E8']
mov ['[ebp+var_A0],', '5']
jmp ['short', 'loc_58F2']
mov ['[ebp+var_A0],', '0']
mov ['edx,', '[ebp+var_A0]']
push ['edx']
push ['196Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
cmp ['[ebp+var_80],', '0']
jz ['loc_5BAE']
mov ['edx,', '[ebp+var_80]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_6C]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
mov ['[ebp+var_78],', 'eax']
cmp ['[ebp+var_78],', '0']
jnz ['short', 'loc_593B']
xor ['eax,', 'eax']
jmp ['loc_626B']
mov ['eax,', '[ebp+var_78]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFFFFFh']
jz ['short', 'loc_595F']
mov ['ecx,', '[ebp+var_78]']
cmp ['dword', 'ptr', '[ecx+84h],', '0']
jz ['short', 'loc_595F']
mov ['[ebp+var_B0],', '0']
jmp ['short', 'loc_5969']
mov ['[ebp+var_B0],', '1']
mov ['dl,', 'byte', 'ptr', '[ebp+var_B0]']
mov ['[ebp+var_5E],', 'dl']
push ['0']
movzx ['eax,', '[ebp+var_5E]']
push ['eax']
push ['0F1h']
push ['196Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
movzx ['eax,', '[ebp+var_5E]']
test ['eax,', 'eax']
jnz ['short', 'loc_59AB']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_59B5']
mov ['[ebp+bEnable],', '0']
mov ['ecx,', '[ebp+bEnable]']
push ['ecx']
push ['189Fh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_5E]']
test ['ecx,', 'ecx']
jz ['short', 'loc_59EB']
mov ['edx,', '[ebp+var_64]']
mov ['eax,', '[edx+14h]']
mov ['[ebp+var_B8],', 'eax']
jmp ['short', 'loc_59FA']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ecx+84h]']
mov ['[ebp+var_B8],', 'edx']
mov ['eax,', '[ebp+var_B8]']
mov ['[ebp+uValue],', 'eax']
push ['0']
mov ['ecx,', '[ebp+uValue]']
push ['ecx']
push ['18A6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['ecx,', '[ebp+uValue]']
push ['ecx']
push ['1970h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
movzx ['ecx,', '[ebp+var_5E]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_5A50']
mov ['[ebp+var_C0],', '1']
jmp ['short', 'loc_5A5A']
mov ['[ebp+var_C0],', '0']
mov ['edx,', '[ebp+var_C0]']
push ['edx']
push ['18A6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_5E]']
push ['edx']
push ['1970h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['edx,', '[ebp+var_5E]']
test ['edx,', 'edx']
jnz ['short', 'loc_5AAC']
mov ['[ebp+var_D8],', '1']
jmp ['short', 'loc_5AB6']
mov ['[ebp+var_D8],', '0']
mov ['eax,', '[ebp+var_D8]']
push ['eax']
push ['18A6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['eax,', '[ebp+var_5E]']
test ['eax,', 'eax']
jz ['short', 'loc_5AE9']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', '[ecx+18h]']
mov ['[ebp+var_6E],', 'dl']
jmp ['short', 'loc_5AF5']
mov ['eax,', '[ebp+var_78]']
mov ['cl,', '[eax+80h]']
mov ['[ebp+var_6E],', 'cl']
push ['0']
movzx ['edx,', '[ebp+var_6E]']
push ['edx']
push ['0F1h']
push ['189Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
movzx ['edx,', '[ebp+var_5E]']
test ['edx,', 'edx']
jnz ['short', 'loc_5B2E']
mov ['[ebp+var_C8],', '1']
jmp ['short', 'loc_5B38']
mov ['[ebp+var_C8],', '0']
mov ['eax,', '[ebp+var_C8]']
push ['eax']
push ['189Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_5E]']
test ['eax,', 'eax']
jnz ['short', 'loc_5BA9']
push ['0']
mov ['ecx,', '[ebp+var_78]']
mov ['edx,', '[ecx+84h]']
push ['edx']
push ['18A6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['edx,', '[ebp+var_78]']
movzx ['eax,', 'byte', 'ptr', '[edx+80h]']
push ['eax']
push ['0F1h']
push ['189Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
jmp ['loc_5C78']
push ['1']
push ['189Fh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['1']
push ['18A6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['5']
push ['18A6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
push ['0']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['18A6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
push ['1970h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
push ['1']
push ['189Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+18h]']
push ['eax']
push ['0F1h']
push ['189Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_626B']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_98],', 'eax']
cmp ['[ebp+var_98],', '189Eh']
jz ['loc_5E98']
cmp ['[ebp+var_98],', '18A6h']
jz ['short', 'loc_5CBC']
cmp ['[ebp+var_98],', '196Eh']
jz ['loc_5FB9']
jmp ['loc_6269']
lea ['ecx,', '[ebp+var_5C]']
call ['??0ValueDlg@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG145149']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+14h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
push ['0']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0FFFFFFFFh']
jnz ['short', 'loc_5D45']
mov ['[ebp+var_FC],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_FC]']
jmp ['loc_626B']
push ['0']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
push ['18A6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['ecx,', '[ebp+var_84]']
push ['ecx']
push ['1970h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
push ['0']
push ['188h']
push ['196Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_9C],', 'eax']
cmp ['[ebp+var_9C],', '0FFFFFFFFh']
jnz ['short', 'loc_5DC9']
mov ['[ebp+var_F4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_F4]']
jmp ['loc_626B']
cmp ['[ebp+var_9C],', '0']
jz ['short', 'loc_5E4B']
mov ['eax,', '[ebp+var_9C]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
mov ['[ebp+var_88],', 'eax']
cmp ['[ebp+var_88],', '0']
jnz ['short', 'loc_5E17']
mov ['[ebp+var_F8],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_F8]']
jmp ['loc_626B']
mov ['ecx,', '[ebp+var_88]']
mov ['edx,', '[ebp+var_84]']
mov ['[ecx+84h],', 'edx']
mov ['ecx,', '[ebp+var_88]']
call ['?getTabInfo@Lang@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_88]']
call ['?getLangName@Lang@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?insertTabInfo@NppParameters@@QAE_NPB_WH@Z']
jmp ['short', 'loc_5E57']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[ebp+var_84]']
mov ['[eax+14h],', 'ecx']
push ['0']
push ['0']
push ['41Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['[ebp+var_F0],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_F0]']
jmp ['loc_626B']
push ['0']
push ['0']
push ['0F0h']
push ['189Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_5ECB']
mov ['[ebp+var_E0],', '1']
jmp ['short', 'loc_5ED5']
mov ['[ebp+var_E0],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_E0]']
mov ['[ebp+var_66],', 'al']
push ['0']
push ['0']
push ['188h']
push ['196Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '0FFFFFFFFh']
jnz ['short', 'loc_5F0F']
xor ['eax,', 'eax']
jmp ['loc_626B']
cmp ['[ebp+var_90],', '0']
jz ['short', 'loc_5F89']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
mov ['[ebp+var_74],', 'eax']
cmp ['[ebp+var_74],', '0']
jnz ['short', 'loc_5F3A']
xor ['eax,', 'eax']
jmp ['loc_626B']
mov ['ecx,', '[ebp+var_74]']
cmp ['dword', 'ptr', '[ecx+84h],', '0']
jz ['short', 'loc_5F52']
mov ['edx,', '[ebp+var_74]']
cmp ['dword', 'ptr', '[edx+84h],', '0FFFFFFFFh']
jnz ['short', 'loc_5F61']
mov ['eax,', '[ebp+var_74]']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+84h],', 'edx']
mov ['eax,', '[ebp+var_74]']
mov ['cl,', '[ebp+var_66]']
mov ['[eax+80h],', 'cl']
mov ['ecx,', '[ebp+var_74]']
call ['?getTabInfo@Lang@@QBEHXZ']
push ['eax']
mov ['ecx,', '[ebp+var_74]']
call ['?getLangName@Lang@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?insertTabInfo@NppParameters@@QAE_NPB_WH@Z']
jmp ['short', 'loc_5F92']
mov ['edx,', '[ebp+var_64]']
mov ['al,', '[ebp+var_66]']
mov ['[edx+18h],', 'al']
push ['0']
push ['0']
push ['41Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+8]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_626B']
push ['0']
push ['0']
push ['0F0h']
push ['196Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_5FEC']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_5FF6']
mov ['[ebp+var_E8],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_E8]']
mov ['[ebp+var_5D],', 'dl']
push ['0']
push ['0']
push ['188h']
push ['196Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_94],', 'eax']
cmp ['[ebp+var_94],', '0FFFFFFFFh']
jz ['short', 'loc_6032']
cmp ['[ebp+var_94],', '0']
jnz ['short', 'loc_6039']
xor ['eax,', 'eax']
jmp ['loc_626B']
mov ['edx,', '[ebp+var_94]']
sub ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+var_6C]']
call ['?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z']
mov ['[ebp+var_7C],', 'eax']
cmp ['[ebp+var_7C],', '0']
jnz ['short', 'loc_605B']
xor ['eax,', 'eax']
jmp ['loc_626B']
movzx ['eax,', '[ebp+var_5D]']
test ['eax,', 'eax']
jz ['short', 'loc_606F']
mov ['[ebp+var_D4],', '0']
jmp ['short', 'loc_607B']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_D4],', 'edx']
mov ['eax,', '[ebp+var_7C]']
mov ['ecx,', '[ebp+var_D4]']
mov ['[eax+84h],', 'ecx']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jz ['short', 'loc_6098']
mov ['[ebp+var_65],', '0']
jmp ['short', 'loc_60A1']
mov ['eax,', '[ebp+var_64]']
mov ['cl,', '[eax+18h]']
mov ['[ebp+var_65],', 'cl']
mov ['edx,', '[ebp+var_7C]']
mov ['al,', '[ebp+var_65]']
mov ['[edx+80h],', 'al']
movzx ['ecx,', '[ebp+var_5D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_60C1']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_60CB']
mov ['[ebp+var_A4],', '0']
mov ['edx,', '[ebp+var_A4]']
push ['edx']
push ['189Fh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jz ['short', 'loc_6101']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_AC],', 'ecx']
jmp ['short', 'loc_6110']
mov ['edx,', '[ebp+var_7C]']
mov ['eax,', '[edx+84h]']
mov ['[ebp+var_AC],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_AC]']
push ['ecx']
push ['18A6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
movzx ['ecx,', '[ebp+var_5D]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_613F']
mov ['[ebp+var_B4],', '1']
jmp ['short', 'loc_6149']
mov ['[ebp+var_B4],', '0']
mov ['edx,', '[ebp+var_B4]']
push ['edx']
push ['18A6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_5D]']
push ['edx']
push ['1970h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jnz ['short', 'loc_619B']
mov ['[ebp+var_BC],', '1']
jmp ['short', 'loc_61A5']
mov ['[ebp+var_BC],', '0']
mov ['eax,', '[ebp+var_BC]']
push ['eax']
push ['18A6h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['eax,', '[ebp+var_5D]']
test ['eax,', 'eax']
jz ['short', 'loc_61D8']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', '[ecx+18h]']
mov ['[ebp+var_6D],', 'dl']
jmp ['short', 'loc_61E4']
mov ['eax,', '[ebp+var_7C]']
mov ['cl,', '[eax+80h]']
mov ['[ebp+var_6D],', 'cl']
push ['0']
movzx ['edx,', '[ebp+var_6D]']
push ['edx']
push ['0F1h']
push ['189Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jnz ['short', 'loc_621D']
mov ['[ebp+var_C4],', '1']
jmp ['short', 'loc_6227']
mov ['[ebp+var_C4],', '0']
mov ['eax,', '[ebp+var_C4]']
push ['eax']
push ['189Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_5D]']
test ['eax,', 'eax']
jz ['short', 'loc_6262']
push ['0FFFFFFFFh']
mov ['ecx,', '[ebp+var_7C]']
call ['?getLangName@Lang@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_6C]']
call ['?insertTabInfo@NppParameters@@QAE_NPB_WH@Z']
mov ['eax,', '1']
jmp ['short', 'loc_626B']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8ACh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_828],', 'eax']
mov ['ecx,', '[ebp+var_828]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_7EC],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_858],', 'eax']
cmp ['[ebp+var_858],', '110h']
jz ['short', 'loc_62FD']
cmp ['[ebp+var_858],', '111h']
jz ['loc_6C42']
jmp ['loc_7585']
mov ['ecx,', '[ebp+var_7EC]']
mov ['dl,', '[ecx+78h]']
mov ['[ebp+var_7ED],', 'dl']
push ['0']
movzx ['eax,', '[ebp+var_7ED]']
push ['eax']
push ['0F1h']
push ['19C9h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+nIDDlgItem],', '0']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+7Ch]']
mov ['[ebp+var_854],', 'ecx']
cmp ['[ebp+var_854],', '3']
ja ['short', 'loc_638A']
mov ['edx,', '[ebp+var_854]']
jmp ['ds:$LN103[edx*4]']
mov ['[ebp+nIDDlgItem],', '19CBh']
jmp ['short', 'loc_638A']
mov ['[ebp+nIDDlgItem],', '19CCh']
jmp ['short', 'loc_638A']
mov ['[ebp+nIDDlgItem],', '19CDh']
jmp ['short', 'loc_638A']
mov ['[ebp+nIDDlgItem],', '19CEh']
push ['0']
push ['1']
push ['0F1h']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+170h]']
push ['ecx']
push ['19D0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['ecx,', '[ebp+var_7EC]']
mov ['edx,', '[ecx+178h]']
push ['edx']
push ['19D2h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+174h]']
push ['eax']
push ['19D1h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
push ['0']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+17Ch]']
push ['ecx']
push ['19D3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '80h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A2Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '9Ch']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A2Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0B8h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A2Fh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0F8h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A38h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '114h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A39h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '130h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1A3Ah']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_814],', '6']
jmp ['short', 'loc_651E']
mov ['ecx,', '[ebp+var_814]']
add ['ecx,', '1']
mov ['[ebp+var_814],', 'ecx']
cmp ['[ebp+var_814],', '0Fh']
jnb ['short', 'loc_657C']
mov ['edx,', '[ebp+var_814]']
push ['edx']
push ['offset', '$SG145282']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['0']
push ['143h']
push ['1A31h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+var_1C]']
push ['ecx']
push ['0']
push ['143h']
push ['1A3Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_650F']
mov ['ecx,', '[ebp+var_828]']
call ['?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ']
mov ['[ebp+var_808],', 'eax']
mov ['[ebp+var_7F8],', '0']
mov ['ecx,', '[ebp+var_808]']
call ['?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ']
mov ['[ebp+var_864],', 'eax']
jmp ['short', 'loc_65B9']
mov ['ecx,', '[ebp+var_7F8]']
add ['ecx,', '1']
mov ['[ebp+var_7F8],', 'ecx']
mov ['edx,', '[ebp+var_7F8]']
cmp ['edx,', '[ebp+var_864]']
jnb ['loc_66AC']
mov ['eax,', '[ebp+var_7F8]']
push ['eax']
mov ['ecx,', '[ebp+var_808]']
call ['??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['1A30h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+wParam],', 'eax']
mov ['eax,', '[ebp+var_7F8]']
push ['eax']
mov ['ecx,', '[ebp+var_808]']
call ['??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['1A3Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_7F8]']
push ['eax']
mov ['ecx,', '[ebp+var_808]']
call ['??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['151h']
push ['1A30h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_7F8]']
push ['ecx']
mov ['ecx,', '[ebp+var_808]']
call ['??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['151h']
push ['1A3Bh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_65AA']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0D4h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0FFFFFFFFh']
push ['158h']
push ['1A30h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_800],', 'eax']
cmp ['[ebp+var_800],', '0FFFFFFFFh']
jnz ['short', 'loc_66F0']
mov ['[ebp+var_800],', '0']
push ['0']
mov ['ecx,', '[ebp+var_800]']
push ['ecx']
push ['14Eh']
push ['1A30h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '14Ch']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0FFFFFFFFh']
push ['158h']
push ['1A3Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_800],', 'eax']
cmp ['[ebp+var_800],', '0FFFFFFFFh']
jnz ['short', 'loc_6754']
mov ['[ebp+var_800],', '0']
push ['0']
mov ['eax,', '[ebp+var_800]']
push ['eax']
push ['14Eh']
push ['1A3Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+0F4h]']
push ['ecx']
push ['offset', '$SG145307']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0FFFFFFFFh']
push ['14Dh']
push ['1A31h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+16Ch]']
push ['ecx']
push ['offset', '$SG145310']
lea ['edx,', '[ebp+var_1C]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__wsprintfW']
add ['esp,', '0Ch']
lea ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0FFFFFFFFh']
push ['14Dh']
push ['1A3Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+0F0h]']
and ['ecx,', '1']
jz ['short', 'loc_6809']
mov ['[ebp+var_848],', '1']
jmp ['short', 'loc_6813']
mov ['[ebp+var_848],', '0']
push ['0']
mov ['edx,', '[ebp+var_848]']
push ['edx']
push ['0F1h']
push ['1A32h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+0F0h]']
and ['eax,', '2']
jz ['short', 'loc_6850']
mov ['[ebp+var_838],', '1']
jmp ['short', 'loc_685A']
mov ['[ebp+var_838],', '0']
push ['0']
mov ['ecx,', '[ebp+var_838]']
push ['ecx']
push ['0F1h']
push ['1A33h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_7EC]']
mov ['edx,', '[ecx+168h]']
and ['edx,', '1']
jz ['short', 'loc_6897']
mov ['[ebp+var_82C],', '1']
jmp ['short', 'loc_68A1']
mov ['[ebp+var_82C],', '0']
push ['0']
mov ['eax,', '[ebp+var_82C]']
push ['eax']
push ['0F1h']
push ['1A3Dh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_7EC]']
mov ['ecx,', '[eax+168h]']
and ['ecx,', '2']
jz ['short', 'loc_68DE']
mov ['[ebp+var_840],', '1']
jmp ['short', 'loc_68E8']
mov ['[ebp+var_840],', '0']
push ['0']
mov ['edx,', '[ebp+var_840]']
push ['edx']
push ['0F1h']
push ['1A3Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['offset', '$SG145314']
push ['offset', '$SG145315']
lea ['ecx,', '[ebp+var_778]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_898],', 'eax']
mov ['edx,', '[ebp+var_898]']
mov ['[ebp+var_888],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_888]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_778]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145317']
push ['offset', '$SG145318']
lea ['ecx,', '[ebp+var_698]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_860],', 'eax']
mov ['ecx,', '[ebp+var_860]']
mov ['[ebp+var_868],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['edx,', '[ebp+var_868]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_698]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145320']
push ['offset', '$SG145321']
lea ['ecx,', '[ebp+var_6D0]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_870],', 'eax']
mov ['eax,', '[ebp+var_870]']
mov ['[ebp+var_878],', 'eax']
mov ['[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_878]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_6D0]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145323']
push ['offset', '$SG145324']
lea ['ecx,', '[ebp+var_740]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_87C],', 'eax']
mov ['edx,', '[ebp+var_87C]']
mov ['[ebp+var_884],', 'edx']
mov ['[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_884]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_740]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145326']
push ['offset', '$SG145327']
lea ['ecx,', '[ebp+var_7E8]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_88C],', 'eax']
mov ['ecx,', '[ebp+var_88C]']
mov ['[ebp+var_894],', 'ecx']
mov ['[ebp+var_4],', '4']
mov ['edx,', '[ebp+var_894]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_7E8]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145329']
push ['offset', '$SG145330']
lea ['ecx,', '[ebp+var_7B0]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_89C],', 'eax']
mov ['eax,', '[ebp+var_89C]']
mov ['[ebp+var_8A4],', 'eax']
mov ['[ebp+var_4],', '5']
mov ['ecx,', '[ebp+var_8A4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_7B0]']
call ['??1strCouple@@QAE@XZ']
push ['offset', '$SG145332']
push ['offset', '$SG145333']
lea ['ecx,', '[ebp+var_708]']
call ['??0strCouple@@QAE@PA_W0@Z']
mov ['[ebp+var_8AC],', 'eax']
mov ['edx,', '[ebp+var_8AC]']
mov ['[ebp+var_880],', 'edx']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_880]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_708]']
call ['??1strCouple@@QAE@XZ']
mov ['[ebp+var_80C],', '0']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_8A8],', 'eax']
jmp ['short', 'loc_6B72']
mov ['ecx,', '[ebp+var_80C]']
add ['ecx,', '1']
mov ['[ebp+var_80C],', 'ecx']
mov ['edx,', '[ebp+var_80C]']
cmp ['edx,', '[ebp+var_8A8]']
jnb ['short', 'loc_6BF9']
mov ['eax,', '[ebp+var_80C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['143h']
push ['1A44h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_86C],', 'eax']
mov ['eax,', '[ebp+var_80C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z']
add ['eax,', '1Ch']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['ecx,', '[ebp+var_86C]']
push ['ecx']
push ['151h']
push ['1A44h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_6B63']
push ['0']
push ['0']
push ['14Eh']
push ['1A44h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_828]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_850],', 'eax']
cmp ['[ebp+var_850],', '0']
jz ['short', 'loc_6C3D']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_850]']
jmp ['loc_7585']
mov ['edx,', '[ebp+arg_8]']
shr ['edx,', '10h']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '300h']
jnz ['loc_6F3A']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
mov ['[ebp+var_824],', 'edx']
mov ['eax,', '[ebp+var_824]']
sub ['eax,', '19D0h']
mov ['[ebp+var_824],', 'eax']
cmp ['[ebp+var_824],', '3']
ja ['loc_6D49']
mov ['ecx,', '[ebp+var_824]']
jmp ['ds:$LN104_0[ecx*4]']
push ['0']
push ['0']
push ['19D0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemInt@16']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+170h],', 'eax']
mov ['eax,', '1']
jmp ['loc_7587']
push ['0']
push ['0']
push ['19D2h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemInt@16']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+178h],', 'eax']
mov ['eax,', '1']
jmp ['loc_7587']
push ['0']
push ['0']
push ['19D1h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemInt@16']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+174h],', 'eax']
mov ['eax,', '1']
jmp ['loc_7587']
push ['0']
push ['0']
push ['19D3h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemInt@16']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+17Ch],', 'eax']
mov ['eax,', '1']
jmp ['loc_7587']
mov ['[ebp+var_8B0],', '100h']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+30h],', 'eax']
push ['100h']
lea ['edx,', '[ebp+String]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
lea ['ecx,', '[ebp+String]']
push ['ecx']
push ['0']
push ['0Ch']
push ['1A46h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
mov ['[ebp+var_820],', 'edx']
mov ['eax,', '[ebp+var_820]']
sub ['eax,', '1A2Dh']
mov ['[ebp+var_820],', 'eax']
cmp ['[ebp+var_820],', '0Dh']
ja ['$LN36_1']
mov ['ecx,', '[ebp+var_820]']
movzx ['edx,', 'ds:$LN98[ecx]']
jmp ['ds:$LN105[edx*4]']
lea ['eax,', '[ebp+String]']
push ['eax']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '80h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '80h']
push ['ecx']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
lea ['edx,', '[ebp+String]']
push ['edx']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '9Ch']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['eax,', '[ebp+var_7EC]']
add ['eax,', '9Ch']
push ['eax']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
lea ['ecx,', '[ebp+String]']
push ['ecx']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0B8h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['edx,', '[ebp+var_7EC]']
add ['edx,', '0B8h']
push ['edx']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
lea ['eax,', '[ebp+String]']
push ['eax']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0F8h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0F8h']
push ['ecx']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
lea ['edx,', '[ebp+String]']
push ['edx']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '114h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['eax,', '[ebp+var_7EC]']
add ['eax,', '114h']
push ['eax']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
lea ['ecx,', '[ebp+String]']
push ['ecx']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '130h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['edx,', '[ebp+var_7EC]']
add ['edx,', '130h']
push ['edx']
call ['?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
add ['esp,', '4']
mov ['eax,', '1']
jmp ['loc_7587']
xor ['eax,', 'eax']
jmp ['loc_7587']
jmp ['loc_7313']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '100h']
jnz ['loc_7167']
mov ['[ebp+var_8B8],', '100h']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+30h],', 'eax']
mov ['[ebp+var_7F4],', '0']
mov ['[ebp+var_7FC],', '0']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
mov ['[ebp+var_818],', 'eax']
mov ['ecx,', '[ebp+var_818]']
sub ['ecx,', '1A2Dh']
mov ['[ebp+var_818],', 'ecx']
cmp ['[ebp+var_818],', '0Dh']
ja ['$LN25_1']
mov ['edx,', '[ebp+var_818]']
movzx ['eax,', 'ds:$LN99[edx]']
jmp ['ds:$LN106[eax*4]']
mov ['[ebp+var_7F4],', '1A35h']
mov ['[ebp+var_7FC],', '1A34h']
jmp ['short', 'loc_7051']
mov ['[ebp+var_7F4],', '1A36h']
mov ['[ebp+var_7FC],', '1A34h']
jmp ['short', 'loc_7051']
mov ['[ebp+var_7F4],', '1A37h']
mov ['[ebp+var_7FC],', '1A34h']
jmp ['short', 'loc_7051']
mov ['[ebp+var_7F4],', '1A40h']
mov ['[ebp+var_7FC],', '1A3Fh']
jmp ['short', 'loc_7051']
mov ['[ebp+var_7F4],', '1A41h']
mov ['[ebp+var_7FC],', '1A3Fh']
jmp ['short', 'loc_7051']
mov ['[ebp+var_7F4],', '1A42h']
mov ['[ebp+var_7FC],', '1A3Fh']
jmp ['short', 'loc_7051']
mov ['eax,', '1']
jmp ['loc_7587']
push ['100h']
lea ['ecx,', '[ebp+var_428]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
lea ['eax,', '[ebp+var_428]']
push ['eax']
push ['0']
push ['0Ch']
push ['1A46h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['100h']
lea ['eax,', '[ebp+var_428]']
push ['eax']
mov ['ecx,', '[ebp+var_7FC]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
lea ['ecx,', '[ebp+var_428]']
push ['ecx']
lea ['ecx,', '[ebp+var_644]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '7']
push ['offset', '$SG145401']
lea ['ecx,', '[ebp+var_644]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
push ['100h']
lea ['edx,', '[ebp+var_428]']
push ['edx']
mov ['eax,', '[ebp+var_7F4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
lea ['eax,', '[ebp+var_428]']
push ['eax']
lea ['ecx,', '[ebp+var_644]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
push ['offset', '$SG145402']
lea ['ecx,', '[ebp+var_644]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
lea ['ecx,', '[ebp+var_644]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['0Ch']
push ['1A47h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_890],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_644]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_890]']
jmp ['loc_7587']
jmp ['loc_7313']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '1']
jnz ['loc_7313']
push ['0']
push ['0']
push ['147h']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_834],', 'eax']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_81C],', 'ecx']
mov ['edx,', '[ebp+var_81C]']
sub ['edx,', '1A30h']
mov ['[ebp+var_81C],', 'edx']
cmp ['[ebp+var_81C],', '0Ch']
ja ['$LN21_2']
mov ['eax,', '[ebp+var_81C]']
movzx ['ecx,', 'ds:$LN100[eax]']
jmp ['ds:$LN107[ecx*4]']
push ['0']
mov ['edx,', '[ebp+var_834]']
push ['edx']
push ['150h']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_830],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1A30h']
jnz ['short', 'loc_7246']
mov ['eax,', '[ebp+var_830]']
push ['eax']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0D4h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
jmp ['short', 'loc_725E']
mov ['ecx,', '[ebp+var_830]']
push ['ecx']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '14Ch']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
jmp ['$LN21_2']
lea ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+var_834]']
push ['eax']
push ['148h']
mov ['ecx,', '[ebp+arg_8]']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '1A31h']
jnz ['short', 'loc_72B4']
mov ['ecx,', '[ebp+var_7EC]']
add ['ecx,', '0F4h']
mov ['[ebp+var_83C],', 'ecx']
jmp ['short', 'loc_72C6']
mov ['edx,', '[ebp+var_7EC]']
add ['edx,', '16Ch']
mov ['[ebp+var_83C],', 'edx']
mov ['eax,', '[ebp+var_83C]']
mov ['[ebp+var_844],', 'eax']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+lParam]']
test ['eax,', 'eax']
jnz ['short', 'loc_72F1']
mov ['ecx,', '[ebp+var_844]']
mov ['dword', 'ptr', '[ecx],', '0']
jmp ['short', '$LN21_2']
push ['0Ah']
push ['0']
lea ['edx,', '[ebp+lParam]']
push ['edx']
call ['_wcstol']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_844]']
mov ['[ecx],', 'eax']
mov ['eax,', '1']
jmp ['loc_7587']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_810],', 'edx']
mov ['eax,', '[ebp+var_810]']
sub ['eax,', '19C9h']
mov ['[ebp+var_810],', 'eax']
cmp ['[ebp+var_810],', '7Ah']
ja ['$LN12_3']
mov ['ecx,', '[ebp+var_810]']
movzx ['edx,', 'ds:$LN101[ecx]']
jmp ['ds:$LN108[edx*4]']
push ['0']
push ['0']
push ['0F0h']
push ['19C9h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_737A']
mov ['[ebp+var_84C],', '1']
jmp ['short', 'loc_7384']
mov ['[ebp+var_84C],', '0']
mov ['edx,', '[ebp+var_7EC]']
mov ['al,', 'byte', 'ptr', '[ebp+var_84C]']
mov ['[edx+78h],', 'al']
jmp ['$LN12_3']
mov ['ecx,', '[ebp+var_7EC]']
mov ['dword', 'ptr', '[ecx+7Ch],', '0']
jmp ['$LN12_3']
mov ['edx,', '[ebp+var_7EC]']
mov ['dword', 'ptr', '[edx+7Ch],', '1']
jmp ['$LN12_3']
mov ['eax,', '[ebp+var_7EC]']
mov ['dword', 'ptr', '[eax+7Ch],', '2']
jmp ['$LN12_3']
mov ['ecx,', '[ebp+var_7EC]']
mov ['dword', 'ptr', '[ecx+7Ch],', '3']
jmp ['$LN12_3']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+0F0h]']
xor ['eax,', '1']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+0F0h],', 'eax']
jmp ['$LN12_3']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+0F0h]']
xor ['eax,', '2']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+0F0h],', 'eax']
jmp ['$LN12_3']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+168h]']
xor ['eax,', '1']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+168h],', 'eax']
jmp ['$LN12_3']
mov ['edx,', '[ebp+var_7EC]']
mov ['eax,', '[edx+168h]']
xor ['eax,', '2']
mov ['ecx,', '[ebp+var_7EC]']
mov ['[ecx+168h],', 'eax']
jmp ['$LN12_3']
mov ['edx,', '[ebp+this]']
cmp ['dword', 'ptr', '[edx+30h],', '0']
jnz ['short', 'loc_7473']
mov ['eax,', '1']
jmp ['loc_7587']
push ['0']
push ['0']
push ['147h']
push ['1A44h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_874],', 'eax']
push ['0']
mov ['edx,', '[ebp+var_874]']
push ['edx']
push ['150h']
push ['1A44h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+Str],', 'eax']
mov ['edx,', '[ebp+this]']
add ['edx,', '38h']
push ['edx']
mov ['eax,', '[ebp+this]']
add ['eax,', '34h']
push ['eax']
push ['0B0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+30h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_8B4],', '100h']
lea ['edx,', '[ebp+var_628]']
push ['edx']
push ['100h']
push ['0Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+30h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+var_628]']
push ['ecx']
lea ['ecx,', '[ebp+var_660]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '8']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+38h]']
sub ['edx,', '[ecx+34h]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+34h]']
push ['ecx']
lea ['ecx,', '[ebp+var_660]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z']
lea ['ecx,', '[ebp+var_660]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_660]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '1']
jmp ['short', 'loc_7587']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?updateBackupGUI@BackupDlg@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_C],', 'ecx']
push ['18A5h']
mov ['ecx,', '[ebp+var_C]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_4],', 'al']
push ['1AA2h']
mov ['ecx,', '[ebp+var_C]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['[ebp+var_1],', 'al']
movzx ['eax,', '[ebp+var_4]']
push ['eax']
push ['1AA2h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1AA3h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1AA4h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1AA5h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1AA6h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['eax,', '[ebp+var_1]']
push ['eax']
push ['1AA7h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['0']
push ['0F0h']
push ['18ABh']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_77F2']
mov ['[ebp+var_10],', '1']
jmp ['short', 'loc_77F9']
mov ['[ebp+var_10],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_10]']
mov ['[ebp+var_5],', 'dl']
mov ['[ebp+var_3],', '0']
mov ['[ebp+var_2],', '0']
movzx ['eax,', '[ebp+var_5]']
test ['eax,', 'eax']
jnz ['short', 'loc_7849']
mov ['[ebp+var_3],', '1']
push ['0']
push ['0']
push ['0F0h']
push ['1A92h']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_783C']
mov ['[ebp+var_14],', '1']
jmp ['short', 'loc_7843']
mov ['[ebp+var_14],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_14]']
mov ['[ebp+var_2],', 'al']
movzx ['ecx,', '[ebp+var_3]']
push ['ecx']
push ['1A94h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_3]']
push ['ecx']
push ['1A92h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2]']
push ['ecx']
push ['1A93h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2]']
push ['ecx']
push ['1A95h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['ecx,', '[ebp+var_2]']
push ['ecx']
push ['1A96h']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?run_dlgProc@BackupDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@BackupDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '2ACh']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_2AC],', 'eax']
mov ['ecx,', '[ebp+var_2AC]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_278],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_294],', 'eax']
cmp ['[ebp+var_294],', '110h']
jz ['short', 'loc_795D']
cmp ['[ebp+var_294],', '111h']
jz ['loc_7B74']
jmp ['loc_7F84']
push ['0']
mov ['ecx,', '[ebp+var_278]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Ah]']
push ['edx']
push ['0F1h']
push ['18A5h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_278]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_79AD']
mov ['ecx,', '[ebp+var_278]']
call ['?isSnapshotMode@NppGUI@@QBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_79AD']
mov ['[ebp+var_290],', '1']
jmp ['short', 'loc_79B7']
mov ['[ebp+var_290],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_290]']
mov ['[ebp+var_27D],', 'dl']
movzx ['eax,', '[ebp+var_27D]']
test ['eax,', 'eax']
jz ['short', 'loc_79DA']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_79E4']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['0F1h']
push ['1AA2h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_278]']
mov ['eax,', '[ecx+698h]']
xor ['edx,', 'edx']
mov ['ecx,', '3E8h']
div ['ecx']
mov ['[ebp+uValue],', 'eax']
push ['0']
mov ['edx,', '[ebp+uValue]']
push ['edx']
push ['1AA4h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
lea ['edx,', '[ebp+var_274]']
push ['edx']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG145482']
lea ['ecx,', '[ebp+var_274]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
lea ['ecx,', '[ebp+var_274]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1AA7h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+nIDDlgItem],', '0']
mov ['edx,', '[ebp+var_278]']
mov ['eax,', '[edx+180h]']
mov ['[ebp+var_2A0],', 'eax']
cmp ['[ebp+var_2A0],', '1']
jz ['short', 'loc_7AB2']
cmp ['[ebp+var_2A0],', '2']
jz ['short', 'loc_7ABE']
jmp ['short', 'loc_7ACA']
mov ['[ebp+nIDDlgItem],', '18ACh']
jmp ['short', 'loc_7AD4']
mov ['[ebp+nIDDlgItem],', '18ADh']
jmp ['short', 'loc_7AD4']
mov ['[ebp+nIDDlgItem],', '18ABh']
push ['0']
push ['1']
push ['0F1h']
mov ['ecx,', '[ebp+nIDDlgItem]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_278]']
movzx ['edx,', 'byte', 'ptr', '[ecx+184h]']
test ['edx,', 'edx']
jz ['short', 'loc_7B1D']
push ['0']
push ['1']
push ['0F1h']
push ['1A92h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_278]']
add ['ecx,', '188h']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['0Ch']
push ['1A95h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['[ebp+var_2A8],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_274]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_2A8]']
jmp ['loc_7F86']
mov ['ecx,', '[ebp+arg_8]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '300h']
jnz ['loc_7CAA']
mov ['eax,', '[ebp+arg_8]']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
mov ['[ebp+var_29C],', 'ecx']
cmp ['[ebp+var_29C],', '1A95h']
jz ['short', 'loc_7BBD']
cmp ['[ebp+var_29C],', '1AA4h']
jz ['short', 'loc_7BFF']
jmp ['loc_7CA5']
lea ['edx,', '[ebp+lParam]']
push ['edx']
push ['104h']
push ['0Dh']
push ['1A95h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['edx,', '[ebp+lParam]']
push ['edx']
mov ['ecx,', '[ebp+var_278]']
add ['ecx,', '188h']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['eax,', '1']
jmp ['loc_7F86']
mov ['[ebp+var_2B8],', '10h']
push ['10h']
lea ['eax,', '[ebp+String]']
push ['eax']
push ['1AA4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
push ['offset', '$SG145511']
lea ['eax,', '[ebp+String]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__lstrcmpW@8']
test ['eax,', 'eax']
jnz ['short', 'loc_7C3E']
mov ['eax,', '1']
jmp ['loc_7F86']
push ['0']
push ['0']
push ['1AA4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemInt@16']
imul ['eax,', '3E8h']
mov ['ecx,', '[ebp+var_278]']
mov ['[ecx+698h],', 'eax']
mov ['edx,', '[ebp+var_278]']
cmp ['dword', 'ptr', '[edx+698h],', '0']
jnz ['short', 'loc_7C9B']
mov ['eax,', '[ebp+var_278]']
mov ['dword', 'ptr', '[eax+698h],', '3E8h']
push ['0']
push ['1']
push ['1AA4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['eax,', '1']
jmp ['loc_7F86']
jmp ['loc_7D3F']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '200h']
jnz ['short', 'loc_7D3F']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_2A4],', 'eax']
cmp ['[ebp+var_2A4],', '1AA4h']
jz ['short', 'loc_7CE0']
jmp ['short', 'loc_7D3F']
mov ['[ebp+var_2B4],', '10h']
push ['10h']
lea ['ecx,', '[ebp+String1]']
push ['ecx']
push ['1AA4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItemTextW@16']
push ['offset', '$SG145527']
lea ['ecx,', '[ebp+String1]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__lstrcmpW@8']
test ['eax,', 'eax']
jnz ['short', 'loc_7D3F']
push ['0']
mov ['edx,', '[ebp+var_278]']
mov ['eax,', '[edx+698h]']
xor ['edx,', 'edx']
mov ['ecx,', '3E8h']
div ['ecx']
push ['eax']
push ['1AA4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_27C],', 'ecx']
cmp ['[ebp+var_27C],', '18ADh']
ja ['short', 'loc_7D95']
cmp ['[ebp+var_27C],', '18ADh']
jz ['loc_7EDA']
cmp ['[ebp+var_27C],', '18A5h']
jz ['short', 'loc_7DC6']
cmp ['[ebp+var_27C],', '18ABh']
jz ['loc_7EFC']
cmp ['[ebp+var_27C],', '18ACh']
jz ['loc_7EB8']
jmp ['loc_7F80']
cmp ['[ebp+var_27C],', '1A92h']
jz ['loc_7F1B']
cmp ['[ebp+var_27C],', '1A96h']
jz ['loc_7F63']
cmp ['[ebp+var_27C],', '1AA2h']
jz ['short', 'loc_7E30']
jmp ['loc_7F80']
push ['18A5h']
mov ['ecx,', '[ebp+this]']
call ['?isCheckedOrNot@StaticDialog@@QBE_NH@Z']
mov ['edx,', '[ebp+var_278]']
mov ['[edx+3Ah],', 'al']
mov ['eax,', '[ebp+var_278]']
movzx ['ecx,', 'byte', 'ptr', '[eax+3Ah]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_7E1E']
push ['0']
push ['0']
push ['0F1h']
push ['1AA2h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1AA2h']
push ['111h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['eax,', '1']
jmp ['loc_7F86']
push ['0']
push ['0']
push ['0F0h']
push ['1AA2h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_7E5C']
mov ['[ebp+var_28C],', '1']
jmp ['short', 'loc_7E66']
mov ['[ebp+var_28C],', '0']
mov ['edx,', '[ebp+var_278]']
mov ['al,', 'byte', 'ptr', '[ebp+var_28C]']
mov ['[edx+695h],', 'al']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['ecx,', '[ebp+var_278]']
movzx ['edx,', 'byte', 'ptr', '[ecx+695h]']
test ['edx,', 'edx']
jz ['short', 'loc_7EAE']
push ['0']
push ['0']
push ['426h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetParent@4']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['loc_7F86']
mov ['edx,', '[ebp+var_278]']
mov ['dword', 'ptr', '[edx+180h],', '1']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['eax,', '1']
jmp ['loc_7F86']
mov ['eax,', '[ebp+var_278]']
mov ['dword', 'ptr', '[eax+180h],', '2']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['eax,', '1']
jmp ['loc_7F86']
mov ['ecx,', '[ebp+var_278]']
mov ['dword', 'ptr', '[ecx+180h],', '0']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['eax,', '1']
jmp ['short', 'loc_7F86']
mov ['edx,', '[ebp+var_278]']
movzx ['eax,', 'byte', 'ptr', '[edx+184h]']
test ['eax,', 'eax']
jnz ['short', 'loc_7F38']
mov ['[ebp+var_288],', '1']
jmp ['short', 'loc_7F42']
mov ['[ebp+var_288],', '0']
mov ['ecx,', '[ebp+var_278]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_288]']
mov ['[ecx+184h],', 'dl']
mov ['ecx,', '[ebp+this]']
call ['?updateBackupGUI@BackupDlg@@AAEXXZ']
mov ['eax,', '1']
jmp ['short', 'loc_7F86']
push ['0']
push ['1A95h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['?folderBrowser@@YAXPAUHWND__@@HPB_W@Z']
add ['esp,', '0Ch']
mov ['eax,', '1']
jmp ['short', 'loc_7F86']
xor ['eax,', 'eax']
jmp ['short', 'loc_7F86']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '108h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_104],', 'eax']
mov ['ecx,', '[ebp+var_104]']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_64],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_B0],', 'eax']
cmp ['[ebp+var_B0],', '110h']
jz ['short', 'loc_801A']
cmp ['[ebp+var_B0],', '111h']
jz ['loc_8720']
jmp ['loc_8F64']
push ['0']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ecx+1F0h]']
push ['edx']
push ['1A9Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+20h]']
mov ['eax,', '[edx+4]']
call ['eax']
push ['0']
push ['1A9Ch']
push ['1A9Ch']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?create@URLCtrl@@QAEXPAUHWND__@@H0@Z']
mov ['eax,', '[ebp+var_64]']
cmp ['dword', 'ptr', '[eax+1ECh],', '0']
jz ['short', 'loc_8094']
mov ['[ebp+var_A4],', '1']
jmp ['short', 'loc_809E']
mov ['[ebp+var_A4],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_A4]']
mov ['[ebp+var_71],', 'cl']
movzx ['edx,', '[ebp+var_71]']
test ['edx,', 'edx']
jz ['short', 'loc_80BB']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_80C5']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['1A98h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+nIDDlgItem],', '1AA0h']
mov ['eax,', '[ebp+var_64]']
cmp ['dword', 'ptr', '[eax+1ECh],', '1']
jnz ['short', 'loc_8107']
mov ['[ebp+nIDDlgItem],', '1A99h']
jmp ['short', 'loc_8135']
mov ['ecx,', '[ebp+var_64]']
cmp ['dword', 'ptr', '[ecx+1ECh],', '2']
jnz ['short', 'loc_811F']
mov ['[ebp+nIDDlgItem],', '1A9Ah']
jmp ['short', 'loc_8135']
mov ['edx,', '[ebp+var_64]']
cmp ['dword', 'ptr', '[edx+1ECh],', '3']
jnz ['short', 'loc_8135']
mov ['[ebp+nIDDlgItem],', '1AA0h']
push ['0']
push ['1']
push ['0F1h']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['eax,', '[ebp+var_71]']
test ['eax,', 'eax']
jnz ['loc_821B']
push ['0']
push ['1A99h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1A9Ah']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1AA0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1A9Bh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1A9Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1A9Dh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
push ['0']
push ['1A9Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '[ebp+var_64]']
movzx ['ecx,', 'byte', 'ptr', '[eax+1F4h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8235']
mov ['[ebp+var_E8],', '1']
jmp ['short', 'loc_823F']
mov ['[ebp+var_E8],', '0']
push ['0']
mov ['edx,', '[ebp+var_E8]']
push ['edx']
push ['0F1h']
push ['1A9Fh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+219h]']
test ['eax,', 'eax']
jz ['short', 'loc_8279']
mov ['[ebp+var_C0],', '1']
jmp ['short', 'loc_8283']
mov ['[ebp+var_C0],', '0']
push ['0']
mov ['ecx,', '[ebp+var_C0]']
push ['ecx']
push ['0F1h']
push ['1AC4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'byte', 'ptr', '[ecx+219h]']
test ['edx,', 'edx']
jz ['short', 'loc_82CC']
push ['offset', '$SG145655']
push ['0']
push ['0Ch']
push ['1AC4h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+21Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_82E6']
mov ['[ebp+var_E0],', '1']
jmp ['short', 'loc_82F0']
mov ['[ebp+var_E0],', '0']
push ['0']
mov ['ecx,', '[ebp+var_E0]']
push ['ecx']
push ['0F1h']
push ['1AC5h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'byte', 'ptr', '[ecx+21Ah]']
test ['edx,', 'edx']
jz ['short', 'loc_8339']
push ['offset', '$SG145658']
push ['0']
push ['0Ch']
push ['1AC5h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+21Bh]']
test ['eax,', 'eax']
jz ['short', 'loc_8353']
mov ['[ebp+var_C8],', '1']
jmp ['short', 'loc_835D']
mov ['[ebp+var_C8],', '0']
push ['0']
mov ['ecx,', '[ebp+var_C8]']
push ['ecx']
push ['0F1h']
push ['1AC6h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'byte', 'ptr', '[ecx+21Bh]']
test ['edx,', 'edx']
jz ['short', 'loc_83A6']
push ['offset', '$SG145661']
push ['0']
push ['0Ch']
push ['1AC6h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+21Ch]']
test ['eax,', 'eax']
jz ['short', 'loc_83C0']
mov ['[ebp+var_E4],', '1']
jmp ['short', 'loc_83CA']
mov ['[ebp+var_E4],', '0']
push ['0']
mov ['ecx,', '[ebp+var_E4]']
push ['ecx']
push ['0F1h']
push ['1AC8h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'byte', 'ptr', '[ecx+21Ch]']
test ['edx,', 'edx']
jz ['short', 'loc_8413']
push ['offset', '$SG145664']
push ['0']
push ['0Ch']
push ['1AC8h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+21Dh]']
test ['eax,', 'eax']
jz ['short', 'loc_842D']
mov ['[ebp+var_D0],', '1']
jmp ['short', 'loc_8437']
mov ['[ebp+var_D0],', '0']
push ['0']
mov ['ecx,', '[ebp+var_D0]']
push ['ecx']
push ['0F1h']
push ['1AC7h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
movzx ['edx,', 'byte', 'ptr', '[ecx+21Dh]']
test ['edx,', 'edx']
jz ['short', 'loc_8480']
push ['offset', '$SG145667']
push ['0']
push ['0Ch']
push ['1AC7h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_64]']
movzx ['eax,', 'byte', 'ptr', '[edx+218h]']
test ['eax,', 'eax']
jz ['short', 'loc_849A']
mov ['[ebp+var_EC],', '1']
jmp ['short', 'loc_84A4']
mov ['[ebp+var_EC],', '0']
push ['0']
mov ['ecx,', '[ebp+var_EC]']
push ['ecx']
push ['0F1h']
push ['1AC9h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1ACDh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1ACEh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1AD0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1AD1h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1AD3h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['1AD4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '208h']
call ['?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
mov ['[ebp+var_A0],', 'eax']
cmp ['[ebp+var_A0],', '3']
jbe ['short', 'loc_858D']
mov ['[ebp+var_A0],', '3']
mov ['[ebp+var_78],', '0']
jmp ['short', 'loc_859F']
mov ['ecx,', '[ebp+var_78]']
add ['ecx,', '1']
mov ['[ebp+var_78],', 'ecx']
mov ['edx,', '[ebp+var_78]']
cmp ['edx,', '[ebp+var_A0]']
jnb ['loc_8716']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '208h']
call ['??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z']
movsx ['cx,', 'byte', 'ptr', '[eax]']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['word', 'ptr', '[ebp+eax+lParam],', 'cx']
mov ['[ebp+var_D8],', '2']
cmp ['[ebp+var_D8],', '4']
jnb ['short', 'loc_85E9']
jmp ['short', 'loc_85EE']
call ['___report_rangecheckfailure']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_D8]']
mov ['word', 'ptr', '[ebp+edx+lParam],', 'cx']
mov ['eax,', '[ebp+var_78]']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '208h']
call ['??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z']
movsx ['cx,', 'byte', 'ptr', '[eax+1]']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['word', 'ptr', '[ebp+eax+var_94],', 'cx']
mov ['[ebp+var_F4],', '2']
cmp ['[ebp+var_F4],', '4']
jnb ['short', 'loc_863A']
jmp ['short', 'loc_863F']
call ['___report_rangecheckfailure']
xor ['ecx,', 'ecx']
mov ['edx,', '[ebp+var_F4]']
mov ['word', 'ptr', '[ebp+edx+var_94],', 'cx']
cmp ['[ebp+var_78],', '0']
jnz ['short', 'loc_8691']
lea ['eax,', '[ebp+lParam]']
push ['eax']
push ['0']
push ['0Ch']
push ['1ACDh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+var_94]']
push ['eax']
push ['0']
push ['0Ch']
push ['1ACEh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_86D1']
cmp ['[ebp+var_78],', '1']
jnz ['short', 'loc_86D1']
lea ['eax,', '[ebp+lParam]']
push ['eax']
push ['0']
push ['0Ch']
push ['1AD0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+var_94]']
push ['eax']
push ['0']
push ['0Ch']
push ['1AD1h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+var_78],', '2']
jnz ['short', 'loc_8711']
lea ['eax,', '[ebp+lParam]']
push ['eax']
push ['0']
push ['0Ch']
push ['1AD3h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+var_94]']
push ['eax']
push ['0']
push ['0Ch']
push ['1AD4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['loc_8596']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '300h']
jnz ['$LN32']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
sub ['ecx,', '1ACDh']
mov ['[ebp+var_8C],', 'ecx']
cmp ['[ebp+var_8C],', '7']
ja ['$LN32']
mov ['edx,', '[ebp+var_8C]']
movzx ['eax,', 'ds:$LN99_0[edx]']
jmp ['ds:$LN102[eax*4]']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1F8h']
call ['?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ']
xor ['ecx,', 'ecx']
mov ['word', 'ptr', '[ebp+var_70],', 'cx']
xor ['edx,', 'edx']
mov ['word', 'ptr', '[ebp+var_70+2],', 'dx']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+var_6C],', 'ax']
xor ['ecx,', 'ecx']
mov ['word', 'ptr', '[ebp+var_6C+2],', 'cx']
lea ['edx,', '[ebp+var_70]']
push ['edx']
push ['104h']
push ['0Dh']
push ['1ACDh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['edx,', '[ebp+var_6C]']
push ['edx']
push ['104h']
push ['0Dh']
push ['1ACEh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
movzx ['ecx,', 'word', 'ptr', '[ebp+eax+var_70]']
cmp ['ecx,', '80h']
jge ['short', 'loc_886B']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
movzx ['ecx,', 'word', 'ptr', '[ebp+eax+var_70]']
test ['ecx,', 'ecx']
jz ['short', 'loc_886B']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
movzx ['ecx,', 'word', 'ptr', '[ebp+eax+var_6C]']
cmp ['ecx,', '80h']
jge ['short', 'loc_886B']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
movzx ['ecx,', 'word', 'ptr', '[ebp+eax+var_6C]']
test ['ecx,', 'ecx']
jz ['short', 'loc_886B']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+eax+var_6C]']
mov ['[ebp+var_79],', 'cl']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+eax+var_70]']
mov ['[ebp+var_7B],', 'cl']
lea ['edx,', '[ebp+var_79]']
push ['edx']
lea ['eax,', '[ebp+var_7B]']
push ['eax']
lea ['ecx,', '[ebp+var_100]']
call ['??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1F8h']
call ['?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
push ['104h']
push ['0Dh']
push ['1AD0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+var_6C]']
push ['ecx']
push ['104h']
push ['0Dh']
push ['1AD1h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+var_70]']
cmp ['eax,', '80h']
jge ['short', 'loc_892F']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+var_70]']
test ['eax,', 'eax']
jz ['short', 'loc_892F']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+var_6C]']
cmp ['eax,', '80h']
jge ['short', 'loc_892F']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
movzx ['eax,', 'word', 'ptr', '[ebp+edx+var_6C]']
test ['eax,', 'eax']
jz ['short', 'loc_892F']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
mov ['al,', 'byte', 'ptr', '[ebp+edx+var_6C]']
mov ['[ebp+var_7E],', 'al']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
mov ['al,', 'byte', 'ptr', '[ebp+edx+var_70]']
mov ['[ebp+var_7A],', 'al']
lea ['ecx,', '[ebp+var_7E]']
push ['ecx']
lea ['edx,', '[ebp+var_7A]']
push ['edx']
lea ['ecx,', '[ebp+var_FE]']
call ['??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1F8h']
call ['?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z']
lea ['eax,', '[ebp+var_70]']
push ['eax']
push ['104h']
push ['0Dh']
push ['1AD3h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+var_6C]']
push ['eax']
push ['104h']
push ['0Dh']
push ['1AD4h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'word', 'ptr', '[ebp+ecx+var_70]']
cmp ['edx,', '80h']
jge ['short', 'loc_89F5']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'word', 'ptr', '[ebp+ecx+var_70]']
test ['edx,', 'edx']
jz ['short', 'loc_89F5']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'word', 'ptr', '[ebp+ecx+var_6C]']
cmp ['edx,', '80h']
jge ['short', 'loc_89F5']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
movzx ['edx,', 'word', 'ptr', '[ebp+ecx+var_6C]']
test ['edx,', 'edx']
jz ['short', 'loc_89F5']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+ecx+var_6C]']
mov ['[ebp+var_7D],', 'dl']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+ecx+var_70]']
mov ['[ebp+var_7C],', 'dl']
lea ['eax,', '[ebp+var_7D]']
push ['eax']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
lea ['ecx,', '[ebp+var_F6]']
call ['??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z']
push ['eax']
mov ['ecx,', '[ebp+var_64]']
add ['ecx,', '1F8h']
call ['?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_90],', 'edx']
mov ['eax,', '[ebp+var_90]']
sub ['eax,', '1A98h']
mov ['[ebp+var_90],', 'eax']
cmp ['[ebp+var_90],', '31h']
ja ['$LN1_2']
mov ['ecx,', '[ebp+var_90]']
movzx ['edx,', 'ds:$LN100_0[ecx]']
jmp ['ds:$LN103_0[edx*4]']
push ['0']
push ['0']
push ['0F0h']
push ['1A98h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_8A66']
mov ['[ebp+var_A8],', '1']
jmp ['short', 'loc_8A70']
mov ['[ebp+var_A8],', '0']
mov ['dl,', 'byte', 'ptr', '[ebp+var_A8]']
mov ['[ebp+var_65],', 'dl']
movzx ['eax,', '[ebp+var_65]']
test ['eax,', 'eax']
jz ['short', 'loc_8AAB']
push ['0']
push ['1']
push ['0F1h']
push ['1AA0h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_64]']
mov ['dword', 'ptr', '[eax+1ECh],', '3']
jmp ['short', 'loc_8B09']
push ['0']
push ['0']
push ['0F1h']
push ['1A99h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['1A9Ah']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['0']
push ['0F1h']
push ['1AA0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+1ECh],', '0']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A99h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A9Ah']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1AA0h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A9Bh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A9Ch']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A9Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
movzx ['edx,', '[ebp+var_65]']
push ['edx']
push ['1A9Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['edx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[edx+1ECh],', '1']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['eax,', '[ebp+var_64]']
mov ['dword', 'ptr', '[eax+1ECh],', '2']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['ecx,', '[ebp+var_64]']
mov ['dword', 'ptr', '[ecx+1ECh],', '3']
mov ['eax,', '1']
jmp ['loc_8F66']
push ['0']
push ['0']
push ['0F0h']
push ['1A9Fh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_8C56']
mov ['[ebp+var_AC],', '1']
jmp ['short', 'loc_8C60']
mov ['[ebp+var_AC],', '0']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_AC]']
mov ['[ecx+1F4h],', 'dl']
mov ['eax,', '1']
jmp ['loc_8F66']
mov ['[ebp+var_110],', '1']
mov ['[ebp+var_114],', '9']
lea ['ecx,', '[ebp+var_5C]']
call ['??0ValueDlg@@QAE@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG145846']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+1F0h]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
push ['0']
lea ['ecx,', '[ebp+var_5C]']
call ['?init@ValueDlg@@QAEXPAUHINSTANCE__@@PAUHWND__@@HPB_W@Z']
push ['1']
lea ['ecx,', '[ebp+var_5C]']
call ['?setNBNumber@ValueDlg@@QAEXH@Z']
lea ['ecx,', '[ebp+Point]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetCursorPos@4']
push ['0']
mov ['edx,', '[ebp+Point.y]']
push ['edx']
mov ['eax,', '[ebp+Point.x]']
push ['eax']
lea ['ecx,', '[ebp+var_5C]']
call ['?doDialog@ValueDlg@@QAEHUtagPOINT@@_N@Z']
mov ['[ebp+var_84],', 'eax']
cmp ['[ebp+var_84],', '0FFFFFFFFh']
jz ['short', 'loc_8D4F']
cmp ['[ebp+var_84],', '9']
jle ['short', 'loc_8D0F']
mov ['[ebp+var_84],', '9']
jmp ['short', 'loc_8D22']
cmp ['[ebp+var_84],', '1']
jge ['short', 'loc_8D22']
mov ['[ebp+var_84],', '1']
mov ['ecx,', '[ebp+var_64]']
mov ['edx,', '[ebp+var_84]']
mov ['[ecx+1F0h],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_64]']
mov ['ecx,', '[eax+1F0h]']
push ['ecx']
push ['1A9Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemInt@16']
mov ['[ebp+var_FC],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+var_FC]']
jmp ['loc_8F66']
push ['0']
push ['0']
push ['0F0h']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_8D9E']
mov ['[ebp+var_B4],', '1']
jmp ['short', 'loc_8DA8']
mov ['[ebp+var_B4],', '0']
mov ['cl,', 'byte', 'ptr', '[ebp+var_B4]']
mov ['[ebp+var_5D],', 'cl']
cmp ['[ebp+arg_8],', '1AC4h']
jnz ['short', 'loc_8DF5']
mov ['edx,', '[ebp+var_64]']
mov ['al,', '[ebp+var_5D]']
mov ['[edx+219h],', 'al']
movzx ['ecx,', '[ebp+var_5D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8DDA']
mov ['[ebp+var_BC],', 'offset', '$SG145858']
jmp ['short', 'loc_8DE4']
mov ['[ebp+var_BC],', 'offset', '$SG145859']
mov ['edx,', '[ebp+var_BC]']
mov ['[ebp+var_88],', 'edx']
jmp ['loc_8EF1']
cmp ['[ebp+arg_8],', '1AC5h']
jnz ['short', 'loc_8E39']
mov ['eax,', '[ebp+var_64]']
mov ['cl,', '[ebp+var_5D]']
mov ['[eax+21Ah],', 'cl']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jz ['short', 'loc_8E1E']
mov ['[ebp+var_C4],', 'offset', '$SG145862']
jmp ['short', 'loc_8E28']
mov ['[ebp+var_C4],', 'offset', '$SG145863']
mov ['eax,', '[ebp+var_C4]']
mov ['[ebp+var_88],', 'eax']
jmp ['loc_8EF1']
cmp ['[ebp+arg_8],', '1AC6h']
jnz ['short', 'loc_8E7A']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', '[ebp+var_5D]']
mov ['[ecx+21Bh],', 'dl']
movzx ['eax,', '[ebp+var_5D]']
test ['eax,', 'eax']
jz ['short', 'loc_8E62']
mov ['[ebp+var_CC],', 'offset', '$SG145866']
jmp ['short', 'loc_8E6C']
mov ['[ebp+var_CC],', 'offset', '$SG145867']
mov ['ecx,', '[ebp+var_CC]']
mov ['[ebp+var_88],', 'ecx']
jmp ['short', 'loc_8EF1']
cmp ['[ebp+arg_8],', '1AC7h']
jnz ['short', 'loc_8EBB']
mov ['edx,', '[ebp+var_64]']
mov ['al,', '[ebp+var_5D]']
mov ['[edx+21Dh],', 'al']
movzx ['ecx,', '[ebp+var_5D]']
test ['ecx,', 'ecx']
jz ['short', 'loc_8EA3']
mov ['[ebp+var_D4],', 'offset', '$SG145870']
jmp ['short', 'loc_8EAD']
mov ['[ebp+var_D4],', 'offset', '$SG145871']
mov ['edx,', '[ebp+var_D4]']
mov ['[ebp+var_88],', 'edx']
jmp ['short', 'loc_8EF1']
mov ['eax,', '[ebp+var_64]']
mov ['cl,', '[ebp+var_5D]']
mov ['[eax+21Ch],', 'cl']
movzx ['edx,', '[ebp+var_5D]']
test ['edx,', 'edx']
jz ['short', 'loc_8EDB']
mov ['[ebp+var_DC],', 'offset', '$SG145873']
jmp ['short', 'loc_8EE5']
mov ['[ebp+var_DC],', 'offset', '$SG145874']
mov ['eax,', '[ebp+var_DC]']
mov ['[ebp+var_88],', 'eax']
mov ['ecx,', '[ebp+var_88]']
push ['ecx']
push ['0']
push ['0Ch']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '1']
jmp ['short', 'loc_8F66']
push ['0']
push ['0']
push ['0F0h']
push ['1AC9h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_8F40']
mov ['[ebp+var_F0],', '1']
jmp ['short', 'loc_8F4A']
mov ['[ebp+var_F0],', '0']
mov ['ecx,', '[ebp+var_64]']
mov ['dl,', 'byte', 'ptr', '[ebp+var_F0]']
mov ['[ecx+218h],', 'dl']
mov ['eax,', '1']
jmp ['short', 'loc_8F66']
xor ['eax,', 'eax']
jmp ['short', 'loc_8F66']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@MultiInstDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '1Ch']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '110h']
jz ['short', 'loc_9022']
cmp ['[ebp+var_10],', '111h']
jz ['loc_90C9']
jmp ['loc_911D']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+690h]']
mov ['[ebp+var_8],', 'edx']
cmp ['[ebp+var_8],', '1']
jnz ['short', 'loc_903D']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_9044']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['1808h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+var_8],', '2']
jnz ['short', 'loc_9070']
mov ['[ebp+var_18],', '1']
jmp ['short', 'loc_9077']
mov ['[ebp+var_18],', '0']
push ['0']
mov ['eax,', '[ebp+var_18]']
push ['eax']
push ['0F1h']
push ['1809h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+var_8],', '0']
jnz ['short', 'loc_90A3']
mov ['[ebp+var_1C],', '1']
jmp ['short', 'loc_90AA']
mov ['[ebp+var_1C],', '0']
push ['0']
mov ['eax,', '[ebp+var_1C]']
push ['eax']
push ['0F1h']
push ['180Ah']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_911D']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '1808h']
jz ['short', 'loc_90EC']
cmp ['[ebp+var_C],', '1809h']
jz ['short', 'loc_90FB']
cmp ['[ebp+var_C],', '180Ah']
jz ['short', 'loc_910A']
jmp ['short', 'loc_9119']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+690h],', '1']
jmp ['short', 'loc_911D']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+690h],', '2']
jmp ['short', 'loc_911D']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+690h],', '0']
jmp ['short', 'loc_911D']
xor ['eax,', 'eax']
jmp ['short', 'loc_911F']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@DelimiterSettingsDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '68h']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_14],', 'eax']
cmp ['[ebp+var_14],', '110h']
jz ['short', 'loc_916F']
cmp ['[ebp+var_14],', '111h']
jz ['loc_9521']
cmp ['[ebp+var_14],', '138h']
jz ['loc_9468']
jmp ['loc_9705']
mov ['ecx,', '[ebp+var_8]']
movsx ['dx,', 'byte', 'ptr', '[ecx+46h]']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['word', 'ptr', '[ebp+ecx+lParam],', 'dx']
mov ['[ebp+var_1C],', '2']
cmp ['[ebp+var_1C],', '4']
jnb ['short', 'loc_9193']
jmp ['short', 'loc_9198']
call ['___report_rangecheckfailure']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_1C]']
mov ['word', 'ptr', '[ebp+eax+lParam],', 'dx']
mov ['ecx,', '[ebp+var_8]']
movsx ['dx,', 'byte', 'ptr', '[ecx+47h]']
mov ['eax,', '2']
imul ['ecx,', 'eax,', '0']
mov ['word', 'ptr', '[ebp+ecx+var_28],', 'dx']
mov ['[ebp+var_20],', '2']
cmp ['[ebp+var_20],', '4']
jnb ['short', 'loc_91C6']
jmp ['short', 'loc_91CB']
call ['___report_rangecheckfailure']
xor ['edx,', 'edx']
mov ['eax,', '[ebp+var_20]']
mov ['word', 'ptr', '[ebp+eax+var_28],', 'dx']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ecx+48h]']
mov ['[ebp+var_1],', 'dl']
push ['0']
push ['1']
push ['0C5h']
push ['186Dh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1']
push ['0C5h']
push ['186Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+lParam]']
push ['ecx']
push ['0']
push ['0Ch']
push ['186Dh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+var_28]']
push ['ecx']
push ['0']
push ['0Ch']
push ['186Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['ecx,', '[ebp+var_1]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9259']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_9260']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['0F1h']
push ['1870h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
push ['0']
push ['1871h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
lea ['ecx,', '[ebp+var_60]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
call ['?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z']
mov ['edx,', '[ebp+var_60.unused]']
add ['edx,', '4']
mov ['eax,', '[ebp+this]']
mov ['[eax+20h],', 'edx']
mov ['ecx,', '[ebp+var_5C]']
sub ['ecx,', '4']
mov ['edx,', '[ebp+this]']
mov ['[edx+24h],', 'ecx']
push ['0']
push ['1872h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
lea ['edx,', '[ebp+var_68]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z']
mov ['ecx,', '[eax]']
mov ['edx,', '[eax+4]']
mov ['[ebp+var_60.unused],', 'ecx']
mov ['[ebp+var_5C],', 'edx']
mov ['eax,', '[ebp+var_60.unused]']
add ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+28h],', 'eax']
mov ['edx,', '[ebp+var_5C]']
sub ['edx,', '4']
mov ['eax,', '[ebp+this]']
mov ['[eax+2Ch],', 'edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
push ['ecx']
push ['186Eh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+38h]']
sub ['eax,', '[edx+30h]']
add ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+38h],', 'eax']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[edx+3Ch]']
sub ['ecx,', '[eax+34h]']
add ['ecx,', '4']
mov ['edx,', '[ebp+this]']
mov ['[edx+3Ch],', 'ecx']
mov ['eax,', '[ebp+this]']
add ['eax,', '40h']
push ['eax']
push ['186Fh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+48h]']
sub ['edx,', '[ecx+40h]']
add ['edx,', '4']
mov ['eax,', '[ebp+this]']
mov ['[eax+48h],', 'edx']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ecx+4Ch]']
sub ['eax,', '[edx+44h]']
add ['eax,', '4']
mov ['ecx,', '[ebp+this]']
mov ['[ecx+4Ch],', 'eax']
movzx ['edx,', '[ebp+var_1]']
test ['edx,', 'edx']
jz ['short', 'loc_939F']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_93A6']
mov ['[ebp+nCmdShow],', '0']
mov ['eax,', '[ebp+nCmdShow]']
push ['eax']
push ['1872h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['eax,', '[ebp+var_1]']
test ['eax,', 'eax']
jz ['short', 'loc_93D6']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '28h']
mov ['[ebp+var_34],', 'ecx']
jmp ['short', 'loc_93DF']
mov ['edx,', '[ebp+this]']
add ['edx,', '20h']
mov ['[ebp+var_34],', 'edx']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_C],', 'eax']
push ['1']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+3Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+38h]']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
push ['edx']
push ['186Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['1']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+48h]']
push ['edx']
mov ['eax,', '[ebp+var_C]']
mov ['ecx,', '[eax+4]']
add ['ecx,', '4']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
lea ['eax,', '[eax+edx+4]']
push ['eax']
push ['186Fh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
mov ['eax,', '1']
jmp ['loc_9707']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+hdc],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
mov ['[ebp+var_38],', 'ecx']
push ['1871h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
cmp ['[ebp+var_38],', 'eax']
jz ['short', 'loc_94A2']
push ['1872h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
cmp ['[ebp+var_38],', 'eax']
jnz ['short', 'loc_951A']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['?getCtrlBgColor@@YAKPAUHWND__@@@Z']
add ['esp,', '4']
mov ['[ebp+var_18],', 'eax']
push ['0']
mov ['edx,', '[ebp+hdc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetTextColor@8']
mov ['eax,', '[ebp+var_18]']
and ['eax,', '0FFh']
movzx ['ecx,', 'al']
sub ['ecx,', '1Eh']
movzx ['edx,', 'cl']
movzx ['eax,', 'word', 'ptr', '[ebp+var_18]']
sar ['eax,', '8']
and ['eax,', '0FFh']
movzx ['ecx,', 'al']
sub ['ecx,', '1Eh']
movzx ['eax,', 'cl']
shl ['eax,', '8']
or ['edx,', 'eax']
mov ['ecx,', '[ebp+var_18]']
shr ['ecx,', '10h']
and ['ecx,', '0FFh']
movzx ['eax,', 'cl']
sub ['eax,', '1Eh']
movzx ['ecx,', 'al']
shl ['ecx,', '10h']
or ['edx,', 'ecx']
push ['edx']
mov ['edx,', '[ebp+hdc]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetBkColor@8']
mov ['eax,', '1']
jmp ['loc_9707']
xor ['eax,', 'eax']
jmp ['loc_9707']
mov ['eax,', '[ebp+arg_8]']
shr ['eax,', '10h']
and ['eax,', '0FFFFh']
movzx ['ecx,', 'ax']
cmp ['ecx,', '300h']
jnz ['loc_95D7']
mov ['edx,', '[ebp+arg_8]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
mov ['[ebp+var_40],', 'eax']
cmp ['[ebp+var_40],', '186Dh']
jz ['short', 'loc_955E']
cmp ['[ebp+var_40],', '186Eh']
jz ['short', 'loc_9597']
jmp ['short', 'loc_95D0']
lea ['ecx,', '[ebp+var_50]']
push ['ecx']
push ['104h']
push ['0Dh']
push ['186Dh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '2']
imul ['edx,', 'ecx,', '0']
mov ['eax,', '[ebp+var_8]']
mov ['cl,', 'byte', 'ptr', '[ebp+edx+var_50]']
mov ['[eax+46h],', 'cl']
mov ['eax,', '1']
jmp ['loc_9707']
lea ['edx,', '[ebp+var_54]']
push ['edx']
push ['104h']
push ['0Dh']
push ['186Eh']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '2']
imul ['eax,', 'edx,', '0']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', 'byte', 'ptr', '[ebp+eax+var_54]']
mov ['[ecx+47h],', 'dl']
mov ['eax,', '1']
jmp ['loc_9707']
xor ['eax,', 'eax']
jmp ['loc_9707']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_58],', 'eax']
cmp ['[ebp+var_58],', '1870h']
jz ['short', 'loc_95EB']
jmp ['loc_9701']
push ['0']
push ['0']
push ['0F0h']
push ['1870h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['eax,', '1']
jnz ['short', 'loc_9614']
mov ['[ebp+var_44],', '1']
jmp ['short', 'loc_961B']
mov ['[ebp+var_44],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_44]']
mov ['[ebp+var_2],', 'al']
mov ['ecx,', '[ebp+var_8]']
mov ['dl,', '[ebp+var_2]']
mov ['[ecx+48h],', 'dl']
movzx ['eax,', '[ebp+var_2]']
test ['eax,', 'eax']
jz ['short', 'loc_963B']
mov ['[ebp+var_48],', '5']
jmp ['short', 'loc_9642']
mov ['[ebp+var_48],', '0']
mov ['ecx,', '[ebp+var_48]']
push ['ecx']
push ['1872h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
movzx ['ecx,', '[ebp+var_2]']
test ['ecx,', 'ecx']
jz ['short', 'loc_9672']
mov ['edx,', '[ebp+this]']
add ['edx,', '28h']
mov ['[ebp+var_4C],', 'edx']
jmp ['short', 'loc_967B']
mov ['eax,', '[ebp+this]']
add ['eax,', '20h']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
mov ['[ebp+var_10],', 'ecx']
push ['1']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+3Ch]']
push ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+38h]']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
push ['eax']
push ['186Eh']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['1']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+48h]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+38h]']
lea ['ecx,', '[ecx+eax+4]']
push ['ecx']
push ['186Fh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
mov ['eax,', '1']
jmp ['short', 'loc_9707']
xor ['eax,', 'eax']
jmp ['short', 'loc_9707']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0B0h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ']
mov ['[ebp+var_84],', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_B8],', 'eax']
cmp ['[ebp+var_B8],', '110h']
jz ['short', 'loc_9783']
cmp ['[ebp+var_B8],', '111h']
jz ['loc_9980']
jmp ['loc_9BE1']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+69Ch]']
mov ['[ebp+var_88],', 'edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[ecx+69Ch]']
mov ['[eax+20h],', 'edx']
cmp ['[ebp+var_88],', '0']
jnz ['short', 'loc_97BC']
mov ['[ebp+wParam],', '1']
jmp ['short', 'loc_97C6']
mov ['[ebp+wParam],', '0']
push ['0']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['0F1h']
push ['1877h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
cmp ['[ebp+var_88],', '1']
jnz ['short', 'loc_97FB']
mov ['[ebp+var_AC],', '1']
jmp ['short', 'loc_9805']
mov ['[ebp+var_AC],', '0']
push ['0']
mov ['eax,', '[ebp+var_AC]']
push ['eax']
push ['0F1h']
push ['1878h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['eax,', '[ebp+var_84]']
movzx ['ecx,', 'byte', 'ptr', '[eax+6A0h]']
and ['ecx,', '1']
jz ['short', 'loc_9843']
mov ['[ebp+bEnable],', '1']
jmp ['short', 'loc_984D']
mov ['[ebp+bEnable],', '0']
mov ['edx,', '[ebp+bEnable]']
push ['edx']
push ['1878h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
cmp ['[ebp+var_88],', '2']
jnz ['short', 'loc_9882']
mov ['[ebp+var_BC],', '1']
jmp ['short', 'loc_988C']
mov ['[ebp+var_BC],', '0']
push ['0']
mov ['edx,', '[ebp+var_BC]']
push ['edx']
push ['0F1h']
push ['1879h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+var_84]']
movzx ['eax,', 'byte', 'ptr', '[edx+6A0h]']
and ['eax,', '2']
jz ['short', 'loc_98CA']
mov ['[ebp+var_98],', '1']
jmp ['short', 'loc_98D4']
mov ['[ebp+var_98],', '0']
mov ['ecx,', '[ebp+var_98]']
push ['ecx']
push ['1879h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
cmp ['[ebp+var_88],', '3']
jnz ['short', 'loc_9909']
mov ['[ebp+var_90],', '1']
jmp ['short', 'loc_9913']
mov ['[ebp+var_90],', '0']
push ['0']
mov ['ecx,', '[ebp+var_90]']
push ['ecx']
push ['0F1h']
push ['187Ah']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_84]']
movzx ['edx,', 'byte', 'ptr', '[ecx+6A0h]']
and ['edx,', '4']
jz ['short', 'loc_9951']
mov ['[ebp+var_A0],', '1']
jmp ['short', 'loc_995B']
mov ['[ebp+var_A0],', '0']
mov ['eax,', '[ebp+var_A0]']
push ['eax']
push ['187Ah']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
jmp ['loc_9BE1']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_8C],', 'eax']
mov ['ecx,', '[ebp+var_8C]']
sub ['ecx,', '1877h']
mov ['[ebp+var_8C],', 'ecx']
cmp ['[ebp+var_8C],', '3']
ja ['loc_9BDD']
mov ['edx,', '[ebp+var_8C]']
jmp ['ds:$LN41_0[edx*4]']
mov ['eax,', '[ebp+var_84]']
mov ['dword', 'ptr', '[eax+69Ch],', '0']
mov ['ecx,', '[ebp+this]']
call ['?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+69Ch]']
jz ['short', 'loc_99ED']
mov ['[ebp+Str],', 'offset', '$SG146160']
jmp ['short', 'loc_99F7']
mov ['[ebp+Str],', 'offset', '$SG146161']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
lea ['ecx,', '[ebp+var_48]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_48]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1875h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_9BE1']
mov ['ecx,', '[ebp+var_84]']
mov ['dword', 'ptr', '[ecx+69Ch],', '1']
push ['offset', '$SG146163']
mov ['ecx,', '[ebp+this]']
call ['?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[ebp+var_84]']
mov ['ecx,', '[edx+20h]']
cmp ['ecx,', '[eax+69Ch]']
jz ['short', 'loc_9A79']
mov ['[ebp+var_A8],', 'offset', '$SG146181']
jmp ['short', 'loc_9A83']
mov ['[ebp+var_A8],', 'offset', '$SG146182']
mov ['edx,', '[ebp+var_A8]']
push ['edx']
lea ['ecx,', '[ebp+var_80]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_80]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1875h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_80]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_9BE1']
mov ['edx,', '[ebp+var_84]']
mov ['dword', 'ptr', '[edx+69Ch],', '2']
push ['offset', '$SG146184']
mov ['ecx,', '[ebp+this]']
call ['?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[ebp+var_84]']
mov ['edx,', '[eax+20h]']
cmp ['edx,', '[ecx+69Ch]']
jz ['short', 'loc_9B05']
mov ['[ebp+var_94],', 'offset', '$SG146202']
jmp ['short', 'loc_9B0F']
mov ['[ebp+var_94],', 'offset', '$SG146203']
mov ['eax,', '[ebp+var_94]']
push ['eax']
lea ['ecx,', '[ebp+var_64]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_64]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1875h']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['loc_9BE1']
mov ['eax,', '[ebp+var_84]']
mov ['dword', 'ptr', '[eax+69Ch],', '3']
push ['offset', '$SG146205']
mov ['ecx,', '[ebp+this]']
call ['?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ebp+var_84]']
mov ['eax,', '[ecx+20h]']
cmp ['eax,', '[edx+69Ch]']
jz ['short', 'loc_9B91']
mov ['[ebp+var_9C],', 'offset', '$SG146223']
jmp ['short', 'loc_9B9B']
mov ['[ebp+var_9C],', 'offset', '$SG146224']
mov ['ecx,', '[ebp+var_9C]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['1875h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetDlgItemTextW@12']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['short', 'loc_9BE1']
xor ['eax,', 'eax']
jmp ['short', 'loc_9BE3']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getSettingsFolder@NppParameters@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG146232']
lea ['ecx,', '[ebp+var_2C]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__PathFileExistsW@4']
test ['eax,', 'eax']
jnz ['short', 'loc_9C8F']
push ['0']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__CreateDirectoryW@8']
push ['offset', '$SG146234']
lea ['ecx,', '[ebp+var_2C]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['?writeFileContent@@YAXPB_WPBD@Z']
add ['esp,', '8']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '24h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
lea ['eax,', '[ebp+var_2C]']
push ['eax']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['ecx,', 'eax']
call ['?getSettingsFolder@NppParameters@@QAE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ']
mov ['[ebp+var_4],', '0']
push ['offset', '$SG146240']
lea ['ecx,', '[ebp+var_2C]']
call ['??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__PathFileExistsW@4']
test ['eax,', 'eax']
jz ['short', 'loc_9D4D']
lea ['ecx,', '[ebp+var_2C]']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__DeleteFileW@4']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?renameDialogTitle@PreferenceDlg@@QAE_NPB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '21Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_210],', 'ecx']
mov ['[ebp+var_205],', '0']
mov ['[ebp+wParam],', '0']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '20h']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_214],', 'eax']
jmp ['short', 'loc_9DCB']
mov ['eax,', '[ebp+wParam]']
add ['eax,', '1']
mov ['[ebp+wParam],', 'eax']
mov ['ecx,', '[ebp+wParam]']
cmp ['ecx,', '[ebp+var_214]']
jnb ['short', 'loc_9E10']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
mov ['ecx,', '[ebp+var_210]']
add ['ecx,', '20h']
call ['??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z']
add ['eax,', '20h']
push ['eax']
call ['??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z']
add ['esp,', '8']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_9E0E']
mov ['[ebp+var_205],', '1']
jmp ['short', 'loc_9E10']
jmp ['short', 'loc_9DBC']
movzx ['edx,', '[ebp+var_205]']
test ['edx,', 'edx']
jnz ['short', 'loc_9E22']
xor ['al,', 'al']
jmp ['loc_9F12']
mov ['[ebp+var_21C],', '100h']
xor ['eax,', 'eax']
mov ['word', 'ptr', '[ebp+lParam],', 'ax']
push ['1FEh']
push ['0']
lea ['ecx,', '[ebp+lParam+2]']
push ['ecx']
call ['_memset']
add ['esp,', '0Ch']
push ['0']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['18Ah']
push ['1772h']
mov ['eax,', '[ebp+var_210]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_218],', 'eax']
cmp ['[ebp+var_218],', '100h']
jb ['short', 'loc_9E87']
xor ['al,', 'al']
jmp ['loc_9F12']
lea ['edx,', '[ebp+lParam]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['189h']
push ['1772h']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+lpString1]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__lstrcmpW@8']
test ['eax,', 'eax']
jnz ['short', 'loc_9EC8']
mov ['al,', '1']
jmp ['short', 'loc_9F12']
push ['0']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['182h']
push ['1772h']
mov ['eax,', '[ebp+var_210]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['edx,', '[ebp+lpString1]']
push ['edx']
mov ['eax,', '[ebp+wParam]']
push ['eax']
push ['181h']
push ['1772h']
mov ['ecx,', '[ebp+var_210]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['al,', '1']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?setListSelection@PreferenceDlg@@QBEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '208h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_208],', 'ecx']
lea ['eax,', '[ebp+lParam]']
push ['eax']
mov ['ecx,', '[ebp+wParam]']
push ['ecx']
push ['189h']
push ['1772h']
mov ['edx,', '[ebp+var_208]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
lea ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['18Ch']
push ['1772h']
mov ['eax,', '[ebp+var_208]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?destroy@PreferenceDlg@@UAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '30h']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '50h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+50h]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0BCh']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+0BCh]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '0DCh']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0DCh]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '100h']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+100h]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1B934h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1B934h]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1B9A0h']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+1B9A0h]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1B9DCh']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1B9DCh]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BA0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+1BA0Ch]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BA2Ch']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1BA2Ch]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BAF4h']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+1BAF4h]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BB14h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1BB14h]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BB80h']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax+1BB80h]']
mov ['eax,', '[edx+8]']
call ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '1BBA0h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+1BBA0h]']
mov ['edx,', '[eax+8]']
call ['edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '424h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_3B0],', 'eax']
cmp ['[ebp+var_3B0],', '110h']
jz ['short', 'loc_A151']
cmp ['[ebp+var_3B0],', '111h']
jz ['loc_ACD9']
jmp ['loc_AD92']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['17D4h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[edx+30h]']
call ['eax']
push ['1']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+30h]']
mov ['edx,', '[eax+0Ch]']
call ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '50h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+50h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1838h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '50h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+50h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0BCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0BCh]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['189Ch']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0BCh']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+0BCh]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9DCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B9DCh]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1900h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9DCh']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1B9DCh]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA0Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BA0Ch]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1932h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA0Ch']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BA0Ch]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA2Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BA2Ch]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['193Ch']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA2Ch']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BA2Ch]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0DCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['0FA0h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0DCh']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+0DCh]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9A0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B9A0h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['19C8h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9A0h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1B9A0h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '100h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+100h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1964h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '100h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+100h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B934h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B934h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1996h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B934h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1B934h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BAF4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BAF4h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1A90h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BAF4h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BAF4h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB14h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BB14h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1AC2h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB14h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BB14h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB80h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BB80h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1806h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB80h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BB80h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBA0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BBA0h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['186Ah']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBA0h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BBA0h]']
mov ['eax,', '[edx+30h]']
call ['eax']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBF0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BBF0h]']
mov ['edx,', '[eax+4]']
call ['edx']
push ['0']
push ['0']
push ['1874h']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBF0h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+1BBF0h]']
mov ['eax,', '[edx+30h]']
call ['eax']
push ['offset', '$SG143614']
push ['offset', '$SG143615']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
push ['ecx']
lea ['ecx,', '[ebp+var_188]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_424],', 'eax']
mov ['edx,', '[ebp+var_424]']
mov ['[ebp+var_3BC],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_3BC]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_188]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143617']
push ['offset', '$SG143618']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '50h']
push ['ecx']
lea ['ecx,', '[ebp+var_368]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3C0],', 'eax']
mov ['edx,', '[ebp+var_3C0]']
mov ['[ebp+var_3C8],', 'edx']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_3C8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_368]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143620']
push ['offset', '$SG143621']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9DCh']
push ['ecx']
lea ['ecx,', '[ebp+var_200]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3D0],', 'eax']
mov ['edx,', '[ebp+var_3D0]']
mov ['[ebp+var_3D8],', 'edx']
mov ['[ebp+var_4],', '2']
mov ['eax,', '[ebp+var_3D8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_200]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143623']
push ['offset', '$SG143624']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA0Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_5C]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3E0],', 'eax']
mov ['edx,', '[ebp+var_3E0]']
mov ['[ebp+var_3E8],', 'edx']
mov ['[ebp+var_4],', '3']
mov ['eax,', '[ebp+var_3E8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_5C]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143626']
push ['offset', '$SG143627']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA2Ch']
push ['ecx']
lea ['ecx,', '[ebp+var_98]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3F0],', 'eax']
mov ['edx,', '[ebp+var_3F0]']
mov ['[ebp+var_3F8],', 'edx']
mov ['[ebp+var_4],', '4']
mov ['eax,', '[ebp+var_3F8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_98]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143629']
push ['offset', '$SG143630']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0DCh']
push ['ecx']
lea ['ecx,', '[ebp+var_D4]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_400],', 'eax']
mov ['edx,', '[ebp+var_400]']
mov ['[ebp+var_408],', 'edx']
mov ['[ebp+var_4],', '5']
mov ['eax,', '[ebp+var_408]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_D4]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143632']
push ['offset', '$SG143633']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '100h']
push ['ecx']
lea ['ecx,', '[ebp+var_110]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_410],', 'eax']
mov ['edx,', '[ebp+var_410]']
mov ['[ebp+var_418],', 'edx']
mov ['[ebp+var_4],', '6']
mov ['eax,', '[ebp+var_418]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_110]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143635']
push ['offset', '$SG143636']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B934h']
push ['ecx']
lea ['ecx,', '[ebp+var_14C]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_420],', 'eax']
mov ['edx,', '[ebp+var_420]']
mov ['[ebp+var_428],', 'edx']
mov ['[ebp+var_4],', '7']
mov ['eax,', '[ebp+var_428]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14C]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143638']
push ['offset', '$SG143639']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9A0h']
push ['ecx']
lea ['ecx,', '[ebp+var_1C4]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_430],', 'eax']
mov ['edx,', '[ebp+var_430]']
mov ['[ebp+var_414],', 'edx']
mov ['[ebp+var_4],', '8']
mov ['eax,', '[ebp+var_414]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C4]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143641']
push ['offset', '$SG143642']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BAF4h']
push ['ecx']
lea ['ecx,', '[ebp+var_23C]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3C4],', 'eax']
mov ['edx,', '[ebp+var_3C4]']
mov ['[ebp+var_3FC],', 'edx']
mov ['[ebp+var_4],', '9']
mov ['eax,', '[ebp+var_3FC]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_23C]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143644']
push ['offset', '$SG143645']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB14h']
push ['ecx']
lea ['ecx,', '[ebp+var_2B4]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3CC],', 'eax']
mov ['edx,', '[ebp+var_3CC]']
mov ['[ebp+var_3B8],', 'edx']
mov ['[ebp+var_4],', '0Ah']
mov ['eax,', '[ebp+var_3B8]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2B4]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143647']
push ['offset', '$SG143648']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB80h']
push ['ecx']
lea ['ecx,', '[ebp+var_32C]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3D4],', 'eax']
mov ['edx,', '[ebp+var_3D4]']
mov ['[ebp+var_404],', 'edx']
mov ['[ebp+var_4],', '0Bh']
mov ['eax,', '[ebp+var_404]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_32C]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143650']
push ['offset', '$SG143651']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBA0h']
push ['ecx']
lea ['ecx,', '[ebp+var_3A4]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3DC],', 'eax']
mov ['edx,', '[ebp+var_3DC]']
mov ['[ebp+var_41C],', 'edx']
mov ['[ebp+var_4],', '0Ch']
mov ['eax,', '[ebp+var_41C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_3A4]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143653']
push ['offset', '$SG143654']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBF0h']
push ['ecx']
lea ['ecx,', '[ebp+var_278]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3E4],', 'eax']
mov ['edx,', '[ebp+var_3E4]']
mov ['[ebp+var_40C],', 'edx']
mov ['[ebp+var_4],', '0Dh']
mov ['eax,', '[ebp+var_40C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_278]']
call ['??1DlgInfo@@QAE@XZ']
push ['offset', '$SG143656']
push ['offset', '$SG143657']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0BCh']
push ['ecx']
lea ['ecx,', '[ebp+var_2F0]']
call ['??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['[ebp+var_3EC],', 'eax']
mov ['edx,', '[ebp+var_3EC]']
mov ['[ebp+var_42C],', 'edx']
mov ['[ebp+var_4],', '0Eh']
mov ['eax,', '[ebp+var_42C]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '20h']
call ['?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_2F0]']
call ['??1DlgInfo@@QAE@XZ']
mov ['ecx,', '[ebp+this]']
call ['?makeCategoryList@PreferenceDlg@@AAEXXZ']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx]']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[eax+1Ch]']
call ['edx']
push ['0Ah']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['?scaleY@DPIManager@@QAEHH@Z']
add ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_1C],', 'eax']
push ['32h']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['?scaleY@DPIManager@@QAEHH@Z']
mov ['ecx,', '[ebp+var_14]']
sub ['ecx,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['96h']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
add ['eax,', '0Ch']
mov ['ecx,', 'eax']
call ['?scaleX@DPIManager@@QAEHH@Z']
add ['eax,', '[ebp+var_20]']
mov ['[ebp+var_20],', 'eax']
lea ['edx,', '[ebp+var_20]']
push ['edx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '30h']
mov ['eax,', '[ebp+this]']
mov ['edx,', '[eax+30h]']
mov ['eax,', '[edx+10h]']
call ['eax']
lea ['ecx,', '[ebp+var_20]']
push ['ecx']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '50h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+50h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0BCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0BCh]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9DCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B9DCh]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA0Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BA0Ch]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BA2Ch']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BA2Ch]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '0DCh']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+0DCh]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '100h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+100h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B934h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B934h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1B9A0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1B9A0h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BAF4h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BAF4h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB14h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BB14h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BB80h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BB80h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBA0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BBA0h]']
mov ['edx,', '[eax+10h]']
call ['edx']
lea ['eax,', '[ebp+var_20]']
push ['eax']
mov ['ecx,', '[ebp+this]']
add ['ecx,', '1BBF0h']
mov ['edx,', '[ebp+this]']
mov ['eax,', '[edx+1BBF0h]']
mov ['edx,', '[eax+10h]']
call ['edx']
call ['?getInstance@NppParameters@@SAPAV1@XZ']
mov ['[ebp+var_3F4],', 'eax']
mov ['ecx,', '[ebp+var_3F4]']
call ['?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ']
mov ['[ebp+var_3AC],', 'eax']
cmp ['[ebp+var_3AC],', '0']
jz ['short', 'loc_ACCF']
push ['6']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['[ebp+var_3AC]']
mov ['eax,', '1']
jmp ['loc_AD94']
mov ['edx,', '[ebp+wParam]']
and ['edx,', '0FFFFh']
movzx ['eax,', 'dx']
cmp ['eax,', '1772h']
jnz ['short', 'loc_AD3B']
mov ['ecx,', '[ebp+wParam]']
shr ['ecx,', '10h']
and ['ecx,', '0FFFFh']
movzx ['edx,', 'cx']
cmp ['edx,', '1']
jnz ['short', 'loc_AD39']
push ['0']
push ['0']
push ['188h']
push ['1772h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
mov ['[ebp+var_3B4],', 'eax']
cmp ['[ebp+var_3B4],', '0FFFFFFFFh']
jz ['short', 'loc_AD39']
mov ['edx,', '[ebp+var_3B4]']
push ['edx']
mov ['ecx,', '[ebp+this]']
call ['?showDialogByIndex@PreferenceDlg@@AAEXH@Z']
jmp ['short', 'loc_AD92']
mov ['eax,', '[ebp+wParam]']
mov ['[ebp+var_3A8],', 'eax']
cmp ['[ebp+var_3A8],', '2']
jz ['short', 'loc_AD5B']
cmp ['[ebp+var_3A8],', '1771h']
jz ['short', 'loc_AD5B']
jmp ['short', 'loc_AD71']
push ['0']
mov ['ecx,', '[ebp+this]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+this]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['eax,', '1']
jmp ['short', 'loc_AD94']
mov ['ecx,', '[ebp+lParam]']
push ['ecx']
mov ['edx,', '[ebp+wParam]']
push ['edx']
push ['111h']
mov ['eax,', '[ebp+this]']
mov ['ecx,', '[eax+8]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['eax,', '1']
jmp ['short', 'loc_AD94']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?makeCategoryList@PreferenceDlg@@AAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_C],', 'eax']
jmp ['short', 'loc_ADE5']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_AE22']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
call ['??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z']
add ['eax,', '4']
mov ['ecx,', 'eax']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
push ['eax']
push ['0']
push ['180h']
push ['1772h']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
jmp ['short', 'loc_ADDC']
push ['0']
mov ['ecx,', '[ebp+var_8]']
call ['?setListSelection@PreferenceDlg@@QBEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?showDialogByIndex@PreferenceDlg@@AAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '14h']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_AE65']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+var_14]']
jnb ['short', 'loc_AE92']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
call ['??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z']
mov ['eax,', '[eax]']
mov ['[ebp+var_C],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_C]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_C]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
jmp ['short', 'loc_AE5C']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '20h']
call ['??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z']
mov ['edx,', '[eax]']
mov ['[ebp+var_10],', 'edx']
push ['1']
mov ['eax,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '54h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
push ['eax']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['ecx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
jz ['short', 'loc_AF3B']
mov ['edx,', '[ebp+var_10]']
add ['edx,', '1']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z']
push ['0']
push ['20h']
mov ['ecx,', '[ebp+arg_0]']
call ['?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
jz ['short', 'loc_AF36']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
jmp ['loc_AFE2']
lea ['edx,', '[ebp+var_60]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'eax']
mov ['[ebp+var_4],', '0']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_2C],', 'esp']
mov ['edx,', '[ebp+var_18]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_54]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['edx,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_34],', 'esp']
mov ['eax,', '[ebp+var_24]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['ecx,', '[ebp+var_28]']
mov ['[ebp+var_38],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['edx,', '[ebp+var_48]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['ecx,', '[ebp+arg_0]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
mov ['[ebp+var_3C],', 'eax']
lea ['ecx,', '[ebp+var_48]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_54]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_60]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-2C0h]']
jmp ['??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-26Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$2 proc near
lea ['ecx,', '[ebp-234h]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$3 proc near
mov ['ecx,', '[ebp-3A0h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$4 proc near
mov ['ecx,', '[ebp-394h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$5 proc near
lea ['ecx,', '[ebp-250h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$6 proc near
mov ['ecx,', '[ebp-3A8h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$7 proc near
mov ['ecx,', '[ebp-3A4h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@BarsDlg@@EAGHIIJ@Z$8 proc near
lea ['ecx,', '[ebp-288h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@BarsDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-3A8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@BarsDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1ValueDlg@@UAE@XZ']
endp
__ehhandler$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0CCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@MarginsDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$2 proc near
mov ['ecx,', '[ebp-0E0h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z$3 proc near
lea ['ecx,', '[ebp-68h]']
jmp ['??1LangID_Name@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0DCh]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@DefaultNewDocDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-0A8h]']
jmp ['??1ValueDlg@@UAE@XZ']
endp
__unwindfunclet$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1ValueDlg@@UAE@XZ']
endp
__ehhandler$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0F4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@RecentFilesHistoryDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-90h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$1 proc near
mov ['ecx,', '[ebp-194h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$2 proc near
lea ['ecx,', '[ebp-0D0h]']
jmp ['??1LangMenuItem@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$3 proc near
lea ['ecx,', '[ebp-74h]']
jmp ['??1LangMenuItem@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$4 proc near
lea ['ecx,', '[ebp-1B4h]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$5 proc near
lea ['ecx,', '[ebp-1A4h]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$6 proc near
mov ['ecx,', '[ebp-190h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z$8 proc near
lea ['ecx,', '[ebp-0ACh]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1B8h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@LangMenuDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@TabSettings@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1ValueDlg@@UAE@XZ']
endp
__ehhandler$?run_dlgProc@TabSettings@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-100h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@TabSettings@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-778h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-698h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$2 proc near
lea ['ecx,', '[ebp-6D0h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$3 proc near
lea ['ecx,', '[ebp-740h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$4 proc near
lea ['ecx,', '[ebp-7E8h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$5 proc near
lea ['ecx,', '[ebp-7B0h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$6 proc near
lea ['ecx,', '[ebp-708h]']
jmp ['??1strCouple@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$7 proc near
lea ['ecx,', '[ebp-644h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z$8 proc near
lea ['ecx,', '[ebp-660h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@PrintSettingsDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@BackupDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-274h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@BackupDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-2B0h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@BackupDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1ValueDlg@@UAE@XZ']
endp
__ehhandler$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@AutoCompletionDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-48h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-80h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$2 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z$3 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0B4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@SettingsOnCloudDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?setCloudChoice@SettingsOnCloudDlg@@AAEXPBD@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ$0 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-28h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?removeCloudChoice@SettingsOnCloudDlg@@AAEXXZ']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$0 proc near
lea ['ecx,', '[ebp-188h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$1 proc near
lea ['ecx,', '[ebp-368h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$2 proc near
lea ['ecx,', '[ebp-200h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$3 proc near
lea ['ecx,', '[ebp-5Ch]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$4 proc near
lea ['ecx,', '[ebp-98h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$5 proc near
lea ['ecx,', '[ebp-0D4h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$6 proc near
lea ['ecx,', '[ebp-110h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$7 proc near
lea ['ecx,', '[ebp-14Ch]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$8 proc near
lea ['ecx,', '[ebp-1C4h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$9 proc near
lea ['ecx,', '[ebp-23Ch]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$10 proc near
lea ['ecx,', '[ebp-2B4h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$11 proc near
lea ['ecx,', '[ebp-32Ch]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$12 proc near
lea ['ecx,', '[ebp-3A4h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$13 proc near
lea ['ecx,', '[ebp-278h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__unwindfunclet$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z$14 proc near
lea ['ecx,', '[ebp-2F0h]']
jmp ['??1DlgInfo@@QAE@XZ']
endp
__ehhandler$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-428h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?run_dlgProc@PreferenceDlg@@EAGHIIJ@Z']
jmp ['___CxxFrameHandler3']
endp
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0 proc near
lea ['ecx,', '[ebp-60h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1 proc near
mov ['ecx,', '[ebp-2Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$2 proc near
lea ['ecx,', '[ebp-54h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$3 proc near
mov ['ecx,', '[ebp-34h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-58h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?trim@@YAXAAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
jmp ['___CxxFrameHandler3']
endp
??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z']
jmp ['___CxxFrameHandler3']
endp
??$?0DDX@?$pair@DD@std@@QAE@$$QAD0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@D@std@@YA$$QADAAD@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@D@std@@YA$$QADAAD@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[eax]']
mov ['[ecx+1],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@D@std@@YA$$QADAAD@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[eax]']
mov ['[ecx],', 'dl']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '1']
push ['eax']
call ['??$forward@D@std@@YA$$QADAAD@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_4]']
mov ['dl,', '[eax]']
mov ['[ecx+1],', 'dl']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_E]']
call ['??0?$allocator@_W@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_F]']
push ['ecx']
call ['??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
mov ['[ebp+var_D],', 'dl']
movzx ['eax,', '[ebp+var_D]']
push ['eax']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_20],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_28],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['ecx,', '[ebp+var_14]']
call ['??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3 proc near
mov ['ecx,', '[ebp-20h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
jmp ['___CxxFrameHandler3']
endp
??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+var_2]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
push ['eax']
call ['??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_B709']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_B710']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8_WU?$char_traits@_W@std@@V?$allocator@_W@1@@std@@YA_NABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z']
test ['eax,', 'eax']
jnz ['short', 'loc_B735']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_B73C']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$?8_W_W@std@@YA_NABV?$allocator@_W@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['al,', '1']
pop ['ebp']
retn
endp
??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$?8V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jnz ['short', 'loc_B770']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_B777']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@D@std@@YAPADIPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B793']
jmp ['short', 'loc_B7B3']
cmp ['[ebp+arg_0],', '0FFFFFFFFh']
ja ['short', 'loc_B7AE']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B7B3']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B7CF']
jmp ['short', 'loc_B7F4']
cmp ['[ebp+arg_0],', '7FFFFFFFh']
ja ['short', 'loc_B7EF']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B7F4']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B80F']
jmp ['short', 'loc_B833']
cmp ['[ebp+arg_0],', '4444444h']
ja ['short', 'loc_B82E']
imul ['eax,', '[ebp+arg_0],', '3Ch']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B833']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B84F']
jmp ['short', 'loc_B875']
cmp ['[ebp+arg_0],', '7FFFFFFh']
ja ['short', 'loc_B870']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '5']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B875']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B88F']
jmp ['short', 'loc_B8B3']
cmp ['[ebp+arg_0],', '71C71C7h']
ja ['short', 'loc_B8AE']
imul ['eax,', '[ebp+arg_0],', '24h']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B8B3']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B8CF']
jmp ['short', 'loc_B8F5']
cmp ['[ebp+arg_0],', '1FFFFFFFh']
ja ['short', 'loc_B8F0']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '3']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B8F5']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B90F']
jmp ['short', 'loc_B933']
cmp ['[ebp+arg_0],', '4924924h']
ja ['short', 'loc_B92E']
imul ['eax,', '[ebp+arg_0],', '38h']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B933']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Allocate@_W@std@@YAPA_WIPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_B94F']
jmp ['short', 'loc_B974']
cmp ['[ebp+arg_0],', '7FFFFFFFh']
ja ['short', 'loc_B96F']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '1']
push ['eax']
call ['??2@YAPAXI@Z']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
cmp ['[ebp+var_4],', '0']
jnz ['short', 'loc_B974']
call ['?_Xbad_alloc@std@@YAXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '38h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_4],', '1']
push ['34Bh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_2C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_30],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_34],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_38],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z']
add ['esp,', '20h']
mov ['[ebp+var_18],', '0']
lea ['ecx,', '[ebp+var_18]']
push ['ecx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3C],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_24]']
mov ['[ebp+var_40],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_44],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z']
add ['esp,', '1Ch']
mov ['ecx,', '[ebp+var_18]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
jmp ['short', 'loc_BA71']
lea ['ecx,', '[ebp+arg_0]']
call ['??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
lea ['ecx,', '[ebp+arg_0]']
call ['??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_BAA0']
lea ['ecx,', '[ebp+arg_0]']
call ['??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ']
movsx ['cx,', 'byte', 'ptr', '[eax]']
movzx ['edx,', 'cx']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_14]']
call ['?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z']
jmp ['short', 'loc_BA69']
jmp ['short', 'loc_BABD']
endp
__catch$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$0 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-14h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN16_2         proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$2 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$3 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$4 proc near
mov ['ecx,', '[ebp-2Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$5 proc near
mov ['ecx,', '[ebp-34h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$6 proc near
mov ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z$7 proc near
mov ['ecx,', '[ebp-44h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Construct@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0Uforward_iterator_tag@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BB66']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BB86']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BBA6']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BBC6']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BBE6']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BC06']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??$_Debug_pointer@_W@std@@YAXPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_BC36']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['offset', '??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BC88']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_BC88']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BCDC']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_BCDC']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BD30']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_BD30']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BD84']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_BD84']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_BDD8']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_BDD8']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
call ['??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BE68']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['??$_Debug_pointer@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXAAV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+arg_C]']
call ['??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_BE68']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
call ['??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_BF4C']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_1C]']
push ['edx']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
lea ['ecx,', '[ebp+arg_C]']
push ['ecx']
call ['??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
lea ['ecx,', '[ebp+arg_C]']
call ['??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_BF4C']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
push ['offset', '??_C@_1CO@DGLIKNHI@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range2@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '14h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_D]']
push ['ecx']
call ['??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_1C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Debug_range2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '24h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$2 proc near
mov ['ecx,', '[ebp-1Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_D]']
push ['ecx']
call ['??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_1C]']
push ['ecx']
mov ['edx,', '[ebp+arg_18]']
push ['edx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_1C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Debug_range2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '24h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$2 proc near
mov ['ecx,', '[ebp-1Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Debug_range@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0PB_WI@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C2EE']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_C304']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z']
jmp ['short', 'loc_C2E5']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C34A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '3Ch']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_C360']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z']
jmp ['short', 'loc_C341']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C3A6']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '20h']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_C3BC']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z']
jmp ['short', 'loc_C39D']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C402']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '24h']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_C418']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z']
jmp ['short', 'loc_C3F9']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C45E']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '38h']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jz ['short', 'loc_C474']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z']
jmp ['short', 'loc_C455']
pop ['ebp']
retn
endp
??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
call ['??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_C4E0']
push ['2E9h']
push ['offset', '??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
push ['2EAh']
push ['offset', '??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??$_Debug_pointer@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YAXAAV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@PB_WI@Z']
add ['esp,', '0Ch']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['ecx,', '[ebp+arg_C]']
call ['??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z']
mov ['edx,', '[ebp+arg_18]']
add ['eax,', '[edx]']
mov ['ecx,', '[ebp+arg_18]']
mov ['[ecx],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_D]']
push ['ecx']
call ['??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z']
add ['esp,', '8']
mov ['dl,', '[eax]']
movzx ['eax,', 'dl']
push ['eax']
mov ['ecx,', '[ebp+arg_18]']
push ['ecx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_1C],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_20],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_24],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['??$_Distance2@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAIUrandom_access_iterator_tag@0@@Z']
add ['esp,', '20h']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$2 proc near
mov ['ecx,', '[ebp-1Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z$3 proc near
mov ['ecx,', '[ebp-24h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Distance@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@I@std@@YAXV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@0AAI@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Iter_cat@PAU?$pair@DD@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAU?$pair@DD@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PAUDlgInfo@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PAULangID_Name@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PAULangMenuItem@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@PAUstrCouple@@@std@@YA?AUrandom_access_iterator_tag@0@ABQAUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Iter_cat@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@std@@YA?AUrandom_access_iterator_tag@0@ABV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['cl,', '[ebp+var_1]']
mov ['[eax],', 'cl']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_C717']
mov ['eax,', '[ebp+arg_8]']
add ['eax,', '24h']
mov ['[ebp+arg_8],', 'eax']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '24h']
mov ['[ebp+arg_0],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_4]']
jz ['short', 'loc_C736']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
call ['??4LangMenuItem@@QAEAAU0@ABU0@@Z']
jmp ['short', 'loc_C705']
mov ['eax,', '[ebp+arg_8]']
pop ['ebp']
retn
endp
??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z']
add ['esp,', '10h']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@U?$pair@DD@std@@U12@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAU?$pair@DD@0@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '18h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
push ['1B6h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PAU?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@0PB_WI@Z']
add ['esp,', '10h']
push ['1B7h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$_Debug_pointer@U?$pair@DD@std@@@std@@YAXPAU?$pair@DD@0@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_C9B7']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '2']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '2']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_C9D1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
jmp ['short', 'loc_C9A5']
jmp ['short', 'loc_CA03']
endp
__catch$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
jmp ['short', 'loc_C9DE']
mov ['eax,', '[ebp-14h]']
add ['eax,', '2']
mov ['[ebp-14h],', 'eax']
mov ['ecx,', '[ebp-14h]']
cmp ['ecx,', '[ebp+10h]']
jz ['short', 'loc_C9F4']
mov ['edx,', '[ebp-14h]']
push ['edx']
mov ['ecx,', '[ebp+14h]']
call ['??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z']
jmp ['short', 'loc_C9D5']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN13_4         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninit_move@PAU?$pair@DD@std@@PAU12@V?$allocator@U?$pair@DD@std@@@2@U12@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@UDlgInfo@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUDlgInfo@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '18h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
push ['1B6h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PAUDlgInfo@@@std@@YAXPAUDlgInfo@@0PB_WI@Z']
add ['esp,', '10h']
push ['1B7h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$_Debug_pointer@UDlgInfo@@@std@@YAXPAUDlgInfo@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CB07']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '3Ch']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '3Ch']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_CB21']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
jmp ['short', 'loc_CAF5']
jmp ['short', 'loc_CB53']
endp
__catch$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
jmp ['short', 'loc_CB2E']
mov ['eax,', '[ebp-14h]']
add ['eax,', '3Ch']
mov ['[ebp-14h],', 'eax']
mov ['ecx,', '[ebp-14h]']
cmp ['ecx,', '[ebp+10h]']
jz ['short', 'loc_CB44']
mov ['edx,', '[ebp-14h]']
push ['edx']
mov ['ecx,', '[ebp+14h]']
call ['??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z']
jmp ['short', 'loc_CB25']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN13_8         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninit_move@PAUDlgInfo@@PAU1@V?$allocator@UDlgInfo@@@std@@U1@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@ULangID_Name@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangID_Name@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '18h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
push ['1B6h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PAULangID_Name@@@std@@YAXPAULangID_Name@@0PB_WI@Z']
add ['esp,', '10h']
push ['1B7h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$_Debug_pointer@ULangID_Name@@@std@@YAXPAULangID_Name@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CC57']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '20h']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '20h']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_CC71']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
jmp ['short', 'loc_CC45']
jmp ['short', 'loc_CCA3']
endp
__catch$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
jmp ['short', 'loc_CC7E']
mov ['eax,', '[ebp-14h]']
add ['eax,', '20h']
mov ['[ebp-14h],', 'eax']
mov ['ecx,', '[ebp-14h]']
cmp ['ecx,', '[ebp+10h]']
jz ['short', 'loc_CC94']
mov ['edx,', '[ebp-14h]']
push ['edx']
mov ['ecx,', '[ebp+14h]']
call ['??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z']
jmp ['short', 'loc_CC75']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN13_6         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninit_move@PAULangID_Name@@PAU1@V?$allocator@ULangID_Name@@@std@@U1@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@ULangMenuItem@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAULangMenuItem@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '18h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
push ['1B6h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PAULangMenuItem@@@std@@YAXPAULangMenuItem@@0PB_WI@Z']
add ['esp,', '10h']
push ['1B7h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$_Debug_pointer@ULangMenuItem@@@std@@YAXPAULangMenuItem@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CDA7']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '24h']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '24h']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_CDC1']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
jmp ['short', 'loc_CD95']
jmp ['short', 'loc_CDF3']
endp
__catch$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
jmp ['short', 'loc_CDCE']
mov ['eax,', '[ebp-14h]']
add ['eax,', '24h']
mov ['[ebp-14h],', 'eax']
mov ['ecx,', '[ebp-14h]']
cmp ['ecx,', '[ebp+10h]']
jz ['short', 'loc_CDE4']
mov ['edx,', '[ebp-14h]']
push ['edx']
mov ['ecx,', '[ebp+14h]']
call ['??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z']
jmp ['short', 'loc_CDC5']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN13_5         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninit_move@PAULangMenuItem@@PAU1@V?$allocator@ULangMenuItem@@@std@@U1@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Ptr_cat@UstrCouple@@U1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@PAUstrCouple@@0@Z']
add ['esp,', '8']
mov ['[ebp+var_1],', 'al']
movzx ['edx,', '[ebp+var_1]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
add ['esp,', '18h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
push ['ecx']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
push ['1B6h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$_Debug_range@PAUstrCouple@@@std@@YAXPAUstrCouple@@0PB_WI@Z']
add ['esp,', '10h']
push ['1B7h']
push ['offset', '??_C@_1IO@LKIDJAMC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
call ['??$_Debug_pointer@UstrCouple@@@std@@YAXPAUstrCouple@@PB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_CEF7']
mov ['ecx,', '[ebp+arg_8]']
add ['ecx,', '38h']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '38h']
mov ['[ebp+arg_0],', 'edx']
mov ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jz ['short', 'loc_CF11']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_C]']
call ['??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
jmp ['short', 'loc_CEE5']
jmp ['short', 'loc_CF43']
endp
__catch$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z$0 proc near
jmp ['short', 'loc_CF1E']
mov ['eax,', '[ebp-14h]']
add ['eax,', '38h']
mov ['[ebp-14h],', 'eax']
mov ['ecx,', '[ebp-14h]']
cmp ['ecx,', '[ebp+10h]']
jz ['short', 'loc_CF34']
mov ['edx,', '[ebp-14h]']
push ['edx']
mov ['ecx,', '[ebp+14h]']
call ['??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z']
jmp ['short', 'loc_CF15']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN13_7         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$_Uninit_move@PAUstrCouple@@PAU1@V?$allocator@UstrCouple@@@std@@U1@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@0U_Nonscalar_ptr_iterator_tag@0@@Z']
jmp ['___CxxFrameHandler3']
endp
??$_Uninitialized_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_move@PAU?$pair@DD@std@@PAU12@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@@std@@YAPAU?$pair@DD@0@PAU10@00AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAU?$pair@DD@std@@PAU12@@std@@YAAAPAU?$pair@DD@0@AAPAU10@PAU10@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Uninitialized_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_move@PAUDlgInfo@@PAU1@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAPAUDlgInfo@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAUDlgInfo@@PAU1@@std@@YAAAPAUDlgInfo@@AAPAU1@PAU1@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Uninitialized_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_move@PAULangID_Name@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAPAULangID_Name@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAULangID_Name@@PAU1@@std@@YAAAPAULangID_Name@@AAPAU1@PAU1@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Uninitialized_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_move@PAULangMenuItem@@PAU1@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAPAULangMenuItem@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAULangMenuItem@@PAU1@@std@@YAAAPAULangMenuItem@@AAPAU1@PAU1@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Uninitialized_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Unchecked@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z']
add ['esp,', '4']
push ['eax']
call ['??$_Uninit_move@PAUstrCouple@@PAU1@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAPAUstrCouple@@PAU1@00AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z']
add ['esp,', '10h']
push ['eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
call ['??$_Rechecked@PAUstrCouple@@PAU1@@std@@YAAAPAUstrCouple@@AAPAU1@PAU1@@Z']
add ['esp,', '8']
mov ['eax,', '[eax]']
pop ['ebp']
retn
endp
??$_Val_type@PAU?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@PAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$_Val_type@PAUDlgInfo@@@std@@YAPAUDlgInfo@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$_Val_type@PAULangID_Name@@@std@@YAPAULangID_Name@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$_Val_type@PAULangMenuItem@@@std@@YAPAULangMenuItem@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$_Val_type@PAUstrCouple@@@std@@YAPAUstrCouple@@PAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@D@std@@YAPADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$addressof@_W@std@@YAPA_WAA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_40],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_44],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_4C],', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_50],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_54],', 'esp']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_58],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
call ['??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$2 proc near
mov ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$3 proc near
mov ['ecx,', '[ebp-44h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$4 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$5 proc near
mov ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$6 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z$7 proc near
mov ['ecx,', '[ebp-54h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-68h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
jmp ['___CxxFrameHandler3']
endp
??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '64h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3C],', 'esp']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_40],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_44],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_70]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['edx,', '[ebp+var_1C]']
mov ['[ebp+var_20],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_4C],', 'esp']
mov ['eax,', '[ebp+var_20]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
mov ['[ebp+var_50],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_54],', 'esp']
mov ['edx,', '[ebp+var_2C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_58],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['ecx,', '[ebp+var_10]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_70]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['18h']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$2 proc near
mov ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$3 proc near
mov ['ecx,', '[ebp-44h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$4 proc near
lea ['ecx,', '[ebp-70h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$5 proc near
mov ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$6 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z$7 proc near
mov ['ecx,', '[ebp-54h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-68h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D509']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_D510']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PADAAPAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPAD@std@@YAAAPADAAPAD@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PADAAPAD@?$allocator@D@std@@QAEXPAPADAAPAD@Z']
pop ['ebp']
retn
endp
??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['4']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D609']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[eax]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
jmp ['short', 'loc_D610']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@PA_WAAPA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@PA_WAAPA_W@?$allocator@_W@std@@QAEXPAPA_WAAPA_W@Z']
pop ['ebp']
retn
endp
??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['2']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D708']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??$?0DDX@?$pair@DD@std@@QAE@$$QAU01@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D70F']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@U?$pair@DD@std@@U12@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@$$QAU31@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@U?$pair@DD@std@@U12@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
pop ['ebp']
retn
endp
??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['3Ch']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D808']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0DlgInfo@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D80F']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@UDlgInfo@@U1@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@$$QAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@UDlgInfo@@U1@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
pop ['ebp']
retn
endp
??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['20h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_D908']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0LangID_Name@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_D90F']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@ULangID_Name@@U1@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@$$QAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@ULangID_Name@@U1@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
pop ['ebp']
retn
endp
??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['24h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_DA08']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0LangMenuItem@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_DA0F']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@ULangMenuItem@@AAU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@AAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@ULangMenuItem@@AAU1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@AAU2@@Z']
pop ['ebp']
retn
endp
??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@ULangMenuItem@@ABU1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@ABU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z']
pop ['ebp']
retn
endp
??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['24h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_DB54']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0LangMenuItem@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_DB5B']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@ULangMenuItem@@U1@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@$$QAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@ULangMenuItem@@U1@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
pop ['ebp']
retn
endp
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['8']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_DC2F']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z']
add ['esp,', '4']
mov ['edx,', '[eax]']
mov ['eax,', '[eax+4]']
mov ['ecx,', '[ebp+var_10]']
mov ['[ecx],', 'edx']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
jmp ['short', 'loc_DC36']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
call ['??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['38h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_DD0C']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
call ['??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0strCouple@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_DD13']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
jmp ['___CxxFrameHandler3']
endp
??$construct@UstrCouple@@U1@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@$$QAU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??$construct@UstrCouple@@U1@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
pop ['ebp']
retn
endp
??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PAD@?$allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@PAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PAD@?$allocator@D@std@@QAEXPAPAD@Z']
pop ['ebp']
retn
endp
??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@PA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAAV?$allocator@_W@1@PAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@PA_W@?$allocator@_W@std@@QAEXPAPA_W@Z']
pop ['ebp']
retn
endp
??$destroy@U?$pair@DD@std@@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@U?$pair@DD@std@@@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@DD@std@@@1@PAU?$pair@DD@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@U?$pair@DD@std@@@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@1@@Z']
pop ['ebp']
retn
endp
??$destroy@UDlgInfo@@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??_GDlgInfo@@QAEPAXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@UDlgInfo@@@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAXAAV?$allocator@UDlgInfo@@@1@PAUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@UDlgInfo@@@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@@Z']
pop ['ebp']
retn
endp
??$destroy@ULangID_Name@@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??_GLangID_Name@@QAEPAXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@ULangID_Name@@@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAXAAV?$allocator@ULangID_Name@@@1@PAULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@ULangID_Name@@@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@@Z']
pop ['ebp']
retn
endp
??$destroy@ULangMenuItem@@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??_GLangMenuItem@@QAEPAXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@ULangMenuItem@@@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAXAAV?$allocator@ULangMenuItem@@@1@PAULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@ULangMenuItem@@@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@@Z']
pop ['ebp']
retn
endp
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@UstrCouple@@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['??_GstrCouple@@QAEPAXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??$destroy@UstrCouple@@@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAXAAV?$allocator@UstrCouple@@@1@PAUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??$destroy@UstrCouple@@@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@@Z']
pop ['ebp']
retn
endp
??$forward@AAPAD@std@@YAAAPADAAPAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@AAPA_W@std@@YAAAPA_WAAPA_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@AAULangMenuItem@@@std@@YAAAULangMenuItem@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@AAY00$$CB_W@std@@YAAAY00$$CB_WAAY00$$CB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@ABULangMenuItem@@@std@@YAABULangMenuItem@@ABU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@D@std@@YA$$QADAAD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$move@AAULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '5Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_10],', 'eax']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_30],', 'ecx']
mov ['[ebp+var_4],', '3']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_68],', 'esp']
lea ['eax,', '[ebp+arg_24]']
push ['eax']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
mov ['[ebp+var_48],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_5C],', 'esp']
lea ['edx,', '[ebp+arg_18]']
push ['edx']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_54],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@X@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@0@Z']
mov ['[ebp+var_64],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
lea ['ecx,', '[ebp+var_2C]']
push ['ecx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_4C],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['eax,', '[ebp+var_34]']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_58],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['ecx,', '[ebp+var_30]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z']
mov ['ecx,', '[ebp+var_30]']
mov ['[ebp+var_3C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_2C]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_18]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_24]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_3C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['ecx,', '[ebp+var_10]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['30h']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$0 proc near
lea ['ecx,', '[ebp+2Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$1 proc near
lea ['ecx,', '[ebp+20h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$2 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$3 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$4 proc near
mov ['ecx,', '[ebp-68h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$5 proc near
mov ['ecx,', '[ebp-5Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$6 proc near
lea ['ecx,', '[ebp-2Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$7 proc near
mov ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z$8 proc near
mov ['ecx,', '[ebp-58h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-60h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['ecx,', '[edx-4]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??$replace@V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@1@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Iterator_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+8],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PBDPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PB_WPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Container_base12@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax+14h],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+18h],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
mov ['[ecx+8],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@D@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@UDlgInfo@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@ULangID_Name@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@ULangMenuItem@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@UstrCouple@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??0?$allocator@_W@std@@QAE@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@D@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@D@std@@QAE@XZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U?$pair@DD@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@UDlgInfo@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@ULangID_Name@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@ULangMenuItem@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@UstrCouple@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$allocator@_W@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0?$allocator@_W@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
lea ['ecx,', '[ebp+var_E]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['edx,', 'ds:?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@D@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['eax,', '[ebp+var_D]']
push ['eax']
lea ['ecx,', '[ebp+var_E]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['edx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
push ['edx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@_W@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
jmp ['___CxxFrameHandler3']
endp
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
lea ['ecx,', '[ebp+var_D]']
call ['??0?$allocator@_W@std@@QAE@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['??0?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['[ebp+var_4],', '0']
push ['0']
push ['0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-14h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??0DlgInfo@@QAE@ABU0@@Z proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0DlgInfo@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '20h']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0DlgInfo@@QAE@ABU0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0DlgInfo@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0DlgInfo@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_F2B0']
mov ['eax,', '[ebp+arg_8]']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_F2B7']
mov ['[ebp+var_14],', 'offset', '??_C@_11LOCGONAA@?$AA?$AA@']
mov ['ecx,', '[ebp+var_14]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0DlgInfo@@QAE@PAVWindow@@PA_W1@Z']
jmp ['___CxxFrameHandler3']
endp
??0LangID_Name@@QAE@ABU0@@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0LangID_Name@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0LangID_Name@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0LangID_Name@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0LangID_Name@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['20h']
endp
__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0LangID_Name@@QAE@W4LangType@@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0LangMenuItem@@QAE@ABU0@@Z proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0LangMenuItem@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0LangMenuItem@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0LangMenuItem@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0LangMenuItem@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
lea ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_8]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['24h']
endp
__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$0 proc near
lea ['ecx,', '[ebp+10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0LangMenuItem@@QAE@W4LangType@@HV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z']
jmp ['___CxxFrameHandler3']
endp
??0StaticDialog@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0StaticDialog@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0Window@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StaticDialog@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0StaticDialog@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1Window@@UAE@XZ']
endp
__ehhandler$??0StaticDialog@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0StaticDialog@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0ValueDlg@@QAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0ValueDlg@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0StaticDialog@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7ValueDlg@@6B@']
mov ['ecx,', '[ebp+var_10]']
mov ['dword', 'ptr', '[ecx+20h],', '2']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0ValueDlg@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1StaticDialog@@UAE@XZ']
endp
__unwindfunclet$??0ValueDlg@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0ValueDlg@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0ValueDlg@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0Window@@QAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Window@@6B@']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[edx+8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax+0Ch],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Container_proxy@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_Generic_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Generic_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Generic_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Generic_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Generic_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Generic_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iostream_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_Iostream_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_Iostream_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_Iostream_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_Iostream_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_Iostream_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0_Iterator_base12@std@@QAE@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['ecx,', '[ebp+var_4]']
mov ['dword', 'ptr', '[ecx+4],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0_System_error_category@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0_System_error_category@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0_Generic_error_category@std@@QAE@XZ']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7_System_error_category@std@@6B@']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??0_System_error_category@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??0_System_error_category@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0_System_error_category@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??0error_category@std@@QAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??0error_condition@std@@QAE@HABVerror_category@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
??0id@locale@std@@QAE@I@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??0strCouple@@QAE@ABU0@@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0strCouple@@QAE@ABU0@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_0]']
add ['ecx,', '1Ch']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0strCouple@@QAE@ABU0@@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0strCouple@@QAE@ABU0@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0strCouple@@QAE@ABU0@@Z']
jmp ['___CxxFrameHandler3']
endp
??0strCouple@@QAE@PA_W0@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??0strCouple@@QAE@PA_W0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??0strCouple@@QAE@PA_W0@Z$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??0strCouple@@QAE@PA_W0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??0strCouple@@QAE@PA_W0@Z']
jmp ['___CxxFrameHandler3']
endp
??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Iterator_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Iterator_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Iterator_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Iterator_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@DHPBDABDU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@_WHPB_WAB_WU_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Container_base12@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Container_base12@std@@QAE@XZ']
endp
__ehhandler$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Iterator012@Urandom_access_iterator_tag@std@@ULangMenuItem@@HPBU3@ABU3@U_Iterator_base12@2@@std@@QAE@XZ']
endp
__ehhandler$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1DlgInfo@@QAE@XZ proc near            
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1DlgInfo@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '20h']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1DlgInfo@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1DlgInfo@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '20h']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1DlgInfo@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1DlgInfo@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1LangID_Name@@QAE@XZ proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1LangID_Name@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '4']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1LangID_Name@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '4']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1LangID_Name@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1LangID_Name@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1LangMenuItem@@QAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1LangMenuItem@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '8']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1LangMenuItem@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '8']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1LangMenuItem@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1LangMenuItem@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1StaticDialog@@UAE@XZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1StaticDialog@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7StaticDialog@@6B@']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?isCreated@StaticDialog@@UBE_NXZ']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_10386']
push ['0']
push ['0FFFFFFEBh']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SetWindowLongW@12']
mov ['ecx,', '[ebp+var_10]']
call ['?destroy@StaticDialog@@UAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1Window@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1StaticDialog@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1Window@@UAE@XZ']
endp
__ehhandler$??1StaticDialog@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1StaticDialog@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1ValueDlg@@UAE@XZ proc near           
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1ValueDlg@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '28h']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1StaticDialog@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1ValueDlg@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1StaticDialog@@UAE@XZ']
endp
__unwindfunclet$??1ValueDlg@@UAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '28h']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1ValueDlg@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1ValueDlg@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1Window@@UAE@XZ proc near             
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7Window@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Container_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1_Generic_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Generic_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Generic_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Generic_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iostream_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iostream_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_Iostream_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iostream_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_Iterator_base12@std@@QAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_Iterator_base12@std@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_Iterator_base12@std@@QAE@XZ$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??1_Iterator_base12@std@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1_System_error_category@std@@UAE@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1_System_error_category@std@@UAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1_System_error_category@std@@UAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1_Generic_error_category@std@@UAE@XZ']
endp
__ehhandler$??1_System_error_category@std@@UAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1_System_error_category@std@@UAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??1error_category@std@@UAE@XZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', 'offset', '??_7error_category@std@@6B@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??1strCouple@@QAE@XZ proc near          
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??1strCouple@@QAE@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
add ['ecx,', '1Ch']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_10]']
call ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$??1strCouple@@QAE@XZ$0 proc near
mov ['ecx,', '[ebp-10h]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__unwindfunclet$??1strCouple@@QAE@XZ$1 proc near
mov ['ecx,', '[ebp-10h]']
add ['ecx,', '1Ch']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
endp
__ehhandler$??1strCouple@@QAE@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-8]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??1strCouple@@QAE@XZ']
jmp ['___CxxFrameHandler3']
endp
??2@YAPAXIPAX@Z proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
pop ['ebp']
retn
endp
??3@YAXPAX0@Z   proc near               
push ['ebp']
mov ['ebp,', 'esp']
pop ['ebp']
retn
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '20h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['eax,', '[ebp+arg_0]']
jz ['loc_107E7']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_14]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
xor ['ecx,', 'ecx']
jz ['short', 'loc_10759']
lea ['edx,', '[ebp+var_D]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z']
lea ['eax,', '[ebp+var_E]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
lea ['ecx,', '[ebp+var_F]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
call ['??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z']
add ['esp,', '8']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_107D2']
sub ['esp,', '0Ch']
mov ['eax,', 'esp']
mov ['[ebp+var_20],', 'esp']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_24],', 'ecx']
mov ['[ebp+var_4],', '0']
sub ['esp,', '0Ch']
mov ['edx,', 'esp']
mov ['[ebp+var_28],', 'esp']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_2C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_14]']
call ['??$assign@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0@Z']
jmp ['short', 'loc_107E7']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AAV10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_14]']
call ['?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$0 proc near
mov ['ecx,', '[ebp-20h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z$1 proc near
mov ['ecx,', '[ebp-28h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@$$QAV01@@Z']
jmp ['___CxxFrameHandler3']
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_10893']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
lea ['edx,', '[ebp+var_2]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
call ['??$?9V?$allocator@_W@std@@V01@@std@@YA_NABU?$_Wrap_alloc@V?$allocator@_W@std@@@0@0@Z']
add ['esp,', '8']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_10887']
xor ['ecx,', 'ecx']
jz ['short', 'loc_10887']
push ['0']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['edx,', '[ebp+var_3]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4LangMenuItem@@QAEAAU0@ABU0@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '8']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '8']
call ['??4?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@ABV01@@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax]']
cmp ['edx,', '[ecx]']
jnz ['short', 'loc_10926']
jmp ['short', 'loc_10968']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_10940']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['short', 'loc_10968']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_14]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z$0 proc near
lea ['ecx,', '[ebp-14h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z']
jmp ['___CxxFrameHandler3']
endp
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnz ['short', 'loc_109CC']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_109D3']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnz ['short', 'loc_10A08']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_10A0F']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_category@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_0]']
jnz ['short', 'loc_10A32']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_10A39']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??8error_condition@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?category@error_condition@std@@QBEABVerror_category@2@XZ']
mov ['ecx,', 'eax']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_10A8C']
mov ['ecx,', '[ebp+var_4]']
call ['?value@error_condition@std@@QBEHXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_condition@std@@QBEHXZ']
cmp ['esi,', 'eax']
jnz ['short', 'loc_10A8C']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_10A93']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10AC5']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_10ACC']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??9?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jnz ['short', 'loc_10AFD']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_10B04']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEAAU?$pair@DD@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10B8C']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10B48']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10B6E']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10B6E']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1NE@NHMFFEGJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAh?$AAa@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*2]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10C1C']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10BD8']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10BFE']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10BFE']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DLI@PMFFPGKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAp?$AAa?$AAi?$AAr?$AA?$DM?$AAc?$AAl?$AAa@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '38h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEAAUDlgInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10CA8']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10C64']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10C8A']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10C8A']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1JO@EEMIOACN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAD?$AAl?$AAg?$AAI?$AAn?$AAf?$AAo?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '3Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEAAULangID_Name@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10D34']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10CF0']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10D16']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10D16']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1KO@COKKPCNP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAI?$AAD?$AA_?$AAN?$AAa?$AAm?$AAe?$AA?0?$AAc@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+arg_0]']
shl ['eax,', '5']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10DC4']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10D80']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10DA6']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10DA6']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1LC@JLHHOOPB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAL?$AAa?$AAn?$AAg?$AAM?$AAe?$AAn?$AAu?$AAI?$AAt?$AAe?$AAm?$AA?0@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '24h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEAAUstrCouple@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10E50']
push ['4B1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10E0C']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10E32']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10E32']
int ['3']
push ['0']
push ['4B2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1KG@IMKDFIFA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AA?5?$AAs?$AAt?$AAr?$AAC?$AAo?$AAu?$AAp?$AAl?$AAe?$AA?0?$AAc?$AAl?$AAa@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '38h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEABV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_10EDC']
push ['4A1h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10E98']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10EBE']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['4A2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10EBE']
int ['3']
push ['0']
push ['4A2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '1Ch']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_10F44']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_10F44']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['ecx,', 'eax']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+8],', 'eax']
jb ['short', 'loc_10F44']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['ecx,', 'eax']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
add ['esi,', '[eax+14h]']
mov ['edx,', '[ebp+var_4]']
cmp ['esi,', '[edx+8]']
ja ['short', 'loc_10FA3']
push ['4Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_10F65']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_10F88']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['50h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_10F88']
int ['3']
push ['0']
push ['50h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1MG@GDGHDIKC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1100B']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_1100B']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['ecx,', 'eax']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_4]']
cmp ['[ecx+8],', 'eax']
jb ['short', 'loc_1100B']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['ecx,', 'eax']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['edx,', '[eax+14h]']
lea ['eax,', '[esi+edx*2]']
mov ['ecx,', '[ebp+var_4]']
cmp ['eax,', '[ecx+8]']
ja ['short', 'loc_1106A']
push ['4Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EG@CNCHLAOB@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe?$AAn?$AAc?$AAa?$AAb@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['edx,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['edx,', 'edx']
jz ['short', 'loc_1102C']
xor ['eax,', 'eax']
jnz ['short', 'loc_1104F']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['50h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_1104F']
int ['3']
push ['0']
push ['50h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1MM@BFHGHMKD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEAADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEABDXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??D?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAB_WXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_110E1']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+8],', '0']
jz ['short', 'loc_110E1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['ecx,', 'eax']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
add ['esi,', '[eax+14h]']
mov ['ecx,', '[ebp+var_4]']
cmp ['esi,', '[ecx+8]']
ja ['short', 'loc_11140']
push ['6Dh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EE@HAKOGNPH@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn?$AAt?$AAa?$AAb?$AAl@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['edx,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['edx,', 'edx']
jz ['short', 'loc_11102']
xor ['eax,', 'eax']
jnz ['short', 'loc_11125']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['6Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_11125']
int ['3']
push ['0']
push ['6Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1MI@IFMPOAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
add ['eax,', '1']
mov ['ecx,', '[ebp+var_4]']
mov ['[ecx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??E?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??E?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAEAAV01@XZ']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
sub ['eax,', '[edx+8]']
sar ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '1Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
push ['ecx']
lea ['ecx,', '[ebp+var_28]']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'edx']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_18]']
call ['??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_28]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_1C]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z$0 proc near
lea ['ecx,', '[ebp-28h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-20h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z']
jmp ['___CxxFrameHandler3']
endp
??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '14h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
push ['eax']
lea ['ecx,', '[ebp+var_20]']
call ['??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
lea ['ecx,', '[ebp+var_20]']
call ['??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+var_20]']
call ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$0 proc near
lea ['ecx,', '[ebp-20h]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5_6']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-18h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$??H?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QBE?AV01@H@Z']
jmp ['___CxxFrameHandler3']
endp
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_113E0']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_113E7']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??M?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_1141C']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_11423']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_1146E']
imul ['esi,', '[ebp+arg_0],', '24h']
mov ['eax,', '[ebp+var_4]']
add ['esi,', '[eax+8]']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
cmp ['esi,', '[eax+4]']
jb ['short', 'loc_1146E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
imul ['ecx,', '[ebp+arg_0],', '24h']
mov ['edx,', '[ebp+var_4]']
add ['ecx,', '[edx+8]']
cmp ['[eax+8],', 'ecx']
jnb ['short', 'loc_114D6']
push ['9Fh']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EM@FKAOCOMF@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AA?$CL?$AA?5?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@']
test ['eax,', 'eax']
jz ['short', 'loc_11492']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_114B8']
push ['offset', '??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['0A0h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_114B8']
int ['3']
push ['0']
push ['0A0h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1OG@LJKJDHOL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
imul ['eax,', '[ebp+arg_0],', '24h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+8]']
mov ['edx,', '[ebp+var_4]']
mov ['[edx+8],', 'eax']
mov ['eax,', '[ebp+var_4]']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['??Y?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAEAAV01@H@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??Y?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV01@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+Str]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GDlgInfo@@QAEPAXI@Z proc near        
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1DlgInfo@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1154B']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GLangID_Name@@QAEPAXI@Z proc near    
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1LangID_Name@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11577']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GLangMenuItem@@QAEPAXI@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1LangMenuItem@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_115A3']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GStaticDialog@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1StaticDialog@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_115CF']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GValueDlg@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1ValueDlg@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_115FB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GWindow@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1Window@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11627']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Generic_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Generic_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11653']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_Iostream_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_Iostream_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_1167F']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_G_System_error_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1_System_error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_116AB']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_Gerror_category@std@@UAEPAXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1error_category@std@@UAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_116D7']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??_GstrCouple@@QAEPAXI@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['??1strCouple@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
and ['eax,', '1']
jz ['short', 'loc_11703']
mov ['ecx,', '[ebp+var_4]']
push ['ecx']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
??__E?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??0_Generic_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??0_Iostream_error_category@std@@QAE@XZ']
push ['offset', '??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??0_System_error_category@std@@QAE@XZ']
push ['offset', '??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ']
call ['_atexit']
add ['esp,', '4']
pop ['ebp']
retn
endp
??__E?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@DV?$back_insert_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$num_put@_WV?$back_insert_iterator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@D@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__E?id@?$numpunct@_W@std@@2V0locale@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0']
mov ['ecx,', 'offset', '?id@?$numpunct@_W@std@@2V0locale@2@A']
call ['??0id@locale@std@@QAE@I@Z']
pop ['ebp']
retn
endp
??__Eallocator_arg@std@@YAXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__Epiecewise_construct@std@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_1],', 'al']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__F?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
call ['??1_Generic_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_Iostream_object@?$_Error_objects@H@std@@2V_Iostream_error_category@2@A']
call ['??1_Iostream_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
??__F?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A@@YAXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
call ['??1_System_error_category@std@@UAE@XZ']
pop ['ebp']
retn
endp
?ToElement@TiXmlNode@@QBEPAVTiXmlElement@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+var_4],', '0']
jz ['short', 'loc_11820']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+10h],', '1']
jnz ['short', 'loc_11820']
mov ['ecx,', '[ebp+var_4]']
mov ['[ebp+var_8],', 'ecx']
jmp ['short', 'loc_11827']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_11888']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
jmp ['short', 'loc_118DF']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
mov ['[ebp+var_14],', 'ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
cmp ['eax,', '[ebp+var_14]']
jz ['short', 'loc_118DF']
push ['3']
lea ['ecx,', '[ebp+var_1C]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_me@_Iterator_base12@std@@QAEXXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ebp+var_14]']
mov ['eax,', '[edx+4]']
mov ['[ecx+4],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ebp+var_10]']
mov ['[ecx+4],', 'edx']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+var_14]']
mov ['[eax],', 'ecx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_1C]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__unwindfunclet$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z$1 proc near
lea ['ecx,', '[ebp-1Ch]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Alloc_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
push ['1']
lea ['ecx,', '[ebp+var_1]']
call ['?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx],', 'eax']
lea ['ecx,', '[ebp+var_10]']
call ['??0_Container_proxy@std@@QAE@XZ']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+var_8]']
mov ['[edx],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX$$QAV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jnb ['short', 'loc_119E0']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '1']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
jmp ['short', 'loc_11A0B']
mov ['edx,', '[ebp+arg_0]']
add ['edx,', '4']
push ['edx']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '4']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z']
mov ['edx,', '[ebp+arg_0]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+14h]']
mov ['[eax+14h],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+18h]']
mov ['[eax+18h],', 'edx']
push ['0']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Change_alloc@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXABU?$_Wrap_alloc@V?$allocator@_W@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_11A72']
lea ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z']
add ['esp,', '8']
jmp ['short', 'loc_11A92']
movzx ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
call ['?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?_Clrcont@_Iterator_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QBEXABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_11AD6']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_11B3E']
push ['0FAh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@']
test ['eax,', 'eax']
jz ['short', 'loc_11AFA']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_11B20']
push ['offset', '??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['0FBh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_11B20']
int ['3']
push ['0']
push ['0FBh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1MA@BDELDFHB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Compat@?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEXABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
test ['eax,', 'eax']
jz ['short', 'loc_11B72']
mov ['ecx,', '[ebp+var_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
cmp ['esi,', 'eax']
jz ['short', 'loc_11BDA']
push ['0FAh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DM@KDEKGMPF@?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs?$AA?5?$AAi?$AAn?$AAc?$AAo?$AAm?$AAp?$AAa?$AAt?$AAi?$AAb?$AAl?$AAe?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', 'offset', '??_C@_0CI@FNPHFCCM@Standard?5C?$CL?$CL?5Libraries?5Invalid?5A@']
test ['eax,', 'eax']
jz ['short', 'loc_11B96']
xor ['ecx,', 'ecx']
jnz ['short', 'loc_11BBC']
push ['offset', '??_C@_1FO@GJIHNDLM@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@']
push ['offset', '??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@']
push ['0']
push ['0FBh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['2']
call ['__CrtDbgReportW']
add ['esp,', '18h']
cmp ['eax,', '1']
jnz ['short', 'loc_11BBC']
int ['3']
push ['0']
push ['0FBh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1MG@CLNEOJNJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA_?$AAc?$AAo?$AAn?$AAs?$AAt?$AA_?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs@']
push ['offset', '??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@']
call ['__invalid_parameter']
add ['esp,', '14h']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '0Fh']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_11C31']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_11C83']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_11C4B']
jmp ['short', 'loc_11C83']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_11C78']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_11C83']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_11D06']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_11CF0']
endp
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17           proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19           proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_11D35']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PADAAPAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPADAAPAD@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
or ['eax,', '7']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+var_1C]']
jnb ['short', 'loc_11DF1']
mov ['ecx,', '[ebp+arg_0]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_11E43']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
mov ['eax,', '[ebp+var_1C]']
xor ['edx,', 'edx']
mov ['esi,', '3']
div ['esi']
cmp ['ecx,', 'eax']
ja ['short', 'loc_11E0B']
jmp ['short', 'loc_11E43']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['edx,', '[ebp+var_18]']
mov ['ecx,', '[edx+18h]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
mov ['edx,', '[ebp+var_18]']
cmp ['[edx+18h],', 'eax']
ja ['short', 'loc_11E38']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+18h]']
shr ['ecx,', '1']
mov ['edx,', '[ebp+var_18]']
add ['ecx,', '[edx+18h]']
mov ['[ebp+var_1C],', 'ecx']
jmp ['short', 'loc_11E43']
mov ['ecx,', '[ebp+var_18]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_1C]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp+var_20],', 'eax']
jmp ['short', 'loc_11EC6']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$0 proc near
mov ['[ebp-10h],', 'esp']
mov ['edx,', '[ebp+8]']
mov ['[ebp-1Ch],', 'edx']
mov ['byte', 'ptr', '[ebp-4],', '2']
mov ['eax,', '[ebp-1Ch]']
add ['eax,', '1']
push ['eax']
lea ['ecx,', '[ebp-12h]']
push ['ecx']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z']
mov ['[ebp-20h],', 'eax']
jmp ['short', 'loc_11EB0']
endp
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z$1 proc near
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN17_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '1']
endp
$LN19_0         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
cmp ['dword', 'ptr', '[ebp+0Ch],', '0']
jbe ['short', 'loc_11EF5']
mov ['edx,', '[ebp+0Ch]']
push ['edx']
mov ['ecx,', '[ebp-18h]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
mov ['eax,', '[ebp-20h]']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
push ['0']
push ['1']
mov ['ecx,', '[ebp-18h]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
lea ['ecx,', '[ebp-20h]']
push ['ecx']
mov ['edx,', '[ebp-18h]']
add ['edx,', '4']
push ['edx']
lea ['eax,', '[ebp-13h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@PA_WAAPA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_WAAPA_W@Z']
mov ['ecx,', '[ebp-18h]']
mov ['edx,', '[ebp-1Ch]']
mov ['[ecx+18h],', 'edx']
mov ['eax,', '[ebp+0Ch]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['ecx,', '[ebp-0Ch]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
pop ['edi']
pop ['esi']
pop ['ebx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__ehhandler$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['___CxxFrameHandler3']
endp
?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@@std@@YAXPAU?$pair@DD@0@0AAU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Destroy@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXPAUDlgInfo@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@@std@@YAXPAUDlgInfo@@0AAU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Destroy@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXPAULangID_Name@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@@std@@YAXPAULangID_Name@@0AAU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@YAXPAULangMenuItem@@0AAU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Destroy@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXPAUstrCouple@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Destroy_range@U?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@@std@@YAXPAUstrCouple@@0AAU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@0@@Z']
add ['esp,', '0Ch']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['[ebp+var_1],', '0']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+14h],', 'ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?assign@?$char_traits@D@std@@SAXAADABD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
xor ['eax,', 'eax']
mov ['[ebp+var_2],', 'ax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+arg_0]']
mov ['[ecx+14h],', 'edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Free_proxy@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??0?$allocator@U_Container_proxy@std@@@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax]']
push ['ecx']
lea ['ecx,', '[ebp+var_1]']
call ['??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@1@@Z']
push ['1']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
call ['?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_1220E']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_12218']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jnz ['short', 'loc_1223A']
mov ['[ebp+var_8],', '0']
jmp ['short', 'loc_12245']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_8],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_1227E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1229E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXII@Z']
jmp ['short', 'loc_122E8']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_122D8']
cmp ['[ebp+arg_0],', '10h']
jnb ['short', 'loc_122D8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_122BF']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+Size],', 'edx']
jmp ['short', 'loc_122C8']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+Size]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_122E8']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_122E8']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_122F7']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_122FE']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_12326']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+18h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_12346']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII@Z']
jmp ['short', 'loc_12390']
movzx ['edx,', '[ebp+arg_4]']
test ['edx,', 'edx']
jz ['short', 'loc_12380']
cmp ['[ebp+arg_0],', '8']
jnb ['short', 'loc_12380']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+14h]']
jnb ['short', 'loc_12367']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_12370']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_8]']
push ['edx']
push ['1']
mov ['ecx,', '[ebp+var_4]']
call ['?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z']
jmp ['short', 'loc_12390']
cmp ['[ebp+arg_0],', '0']
jnz ['short', 'loc_12390']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_1239F']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_123A6']
mov ['[ebp+var_C],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_123E1']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_123EC']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_12400']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_1243D']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_12448']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_1245C']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_12499']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_124A4']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_124B8']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_124F5']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_12500']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_12514']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_8]']
call ['?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
mov ['ecx,', '[ebp+var_4]']
shr ['ecx,', '1']
sub ['eax,', 'ecx']
cmp ['eax,', '[ebp+var_4]']
jnb ['short', 'loc_12551']
mov ['[ebp+var_C],', '0']
jmp ['short', 'loc_1255C']
mov ['edx,', '[ebp+var_4]']
shr ['edx,', '1']
add ['edx,', '[ebp+var_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_12570']
mov ['edx,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_125A9']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_125A9']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+14h]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_125AF']
xor ['al,', 'al']
jmp ['short', 'loc_125B1']
jmp ['short', 'loc_125B1']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jz ['short', 'loc_125E8']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
cmp ['[ebp+arg_0],', 'eax']
jb ['short', 'loc_125E8']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_125EE']
xor ['al,', 'al']
jmp ['short', 'loc_125F0']
jmp ['short', 'loc_125F0']
mov ['al,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_12620']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_12620']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_12627']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_12658']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_12658']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_1265F']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_12690']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_12690']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_12697']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_126C8']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_126C8']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_126CF']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+8]']
jnb ['short', 'loc_12700']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_12700']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_12707']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_14]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_127E2']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_127EB']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '10h']
jb ['short', 'loc_1281A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_12823']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_12852']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_1285B']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+18h],', '8']
jb ['short', 'loc_1288A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+4]']
push ['edx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
mov ['[ebp+var_8],', 'eax']
jmp ['short', 'loc_12893']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '4']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+var_14]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12927']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_10],', 'edx']
jmp ['short', 'loc_128F7']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[ecx+4]']
mov ['[edx],', 'eax']
mov ['ecx,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[ecx],', '0']
jz ['short', 'loc_1290C']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx]']
mov ['dword', 'ptr', '[eax],', '0']
jmp ['short', 'loc_128EA']
mov ['ecx,', '[ebp+var_14]']
mov ['edx,', '[ecx]']
mov ['dword', 'ptr', '[edx+4],', '0']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Orphan_all@_Container_base12@std@@QAEXXZ$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_me@_Iterator_base12@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_129CA']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx]']
add ['edx,', '4']
mov ['[ebp+var_4],', 'edx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12997']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
cmp ['edx,', '[ebp+var_8]']
jz ['short', 'loc_12997']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
add ['ecx,', '4']
mov ['[ebp+var_4],', 'ecx']
jmp ['short', 'loc_12978']
mov ['edx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[edx],', '0']
jnz ['short', 'loc_129B6']
push ['0C9h']
push ['offset', '??_C@_1JA@EADLBAJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+4]']
mov ['[eax],', 'edx']
mov ['eax,', '[ebp+var_8]']
mov ['dword', 'ptr', '[eax],', '0']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_12A68']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12A68']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_12A3C']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_12A4B']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12A66']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_12A1A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_12B44']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12B44']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_12B18']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_12B27']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12B42']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_12AF6']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_12C20']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12C20']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_12BF4']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_12C03']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12C1E']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_12BD2']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_12CFC']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12CFC']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_12CD0']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_12CDF']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12CFA']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_12CAE']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0Ch']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
push ['3']
lea ['ecx,', '[ebp+var_18]']
call ['??0_Lockit@std@@QAE@H@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?_Getpfirst@_Container_base12@std@@QBEPAPAU_Iterator_base12@2@XZ']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_12DD8']
mov ['eax,', '[ebp+var_10]']
cmp ['dword', 'ptr', '[eax],', '0']
jz ['short', 'loc_12DD8']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_0]']
jb ['short', 'loc_12DAC']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+8]']
jnb ['short', 'loc_12DBB']
mov ['ecx,', '[ebp+var_10]']
mov ['ecx,', '[ecx]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['[ebp+var_10],', 'eax']
jmp ['short', 'loc_12DD6']
mov ['edx,', '[ebp+var_10]']
mov ['ecx,', '[edx]']
call ['?_Clrcont@_Iterator_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax]']
call ['?_Getpnext@_Iterator_base12@std@@QAEPAPAU12@XZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
jmp ['short', 'loc_12D8A']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+var_18]']
call ['??1_Lockit@std@@QAE@XZ']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z$0 proc near
lea ['ecx,', '[ebp-18h]']
jmp ['??1_Lockit@std@@QAE@XZ']
endp
__ehhandler$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-10h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_4],', '1']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_12E57']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_12E66']
lea ['eax,', '[ebp+arg_C]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
call ['??G?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV01@@Z']
mov ['[ebp+var_10],', 'eax']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Umove@PAU?$pair@DD@std@@@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEPAU?$pair@DD@1@PAU21@00@Z']
jmp ['short', 'loc_12F5E']
endp
__catch$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z$0 proc near
mov ['ecx,', '[ebp+8]']
push ['ecx']
mov ['edx,', '[ebp-1Ch]']
push ['edx']
lea ['eax,', '[ebp-12h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN8            proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Umove@PAUDlgInfo@@@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEPAUDlgInfo@@PAU2@00@Z']
jmp ['short', 'loc_130B6']
endp
__catch$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z$0 proc near
mov ['ecx,', '[ebp+8]']
push ['ecx']
mov ['edx,', '[ebp-1Ch]']
push ['edx']
lea ['eax,', '[ebp-12h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN8_10         proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Umove@PAULangID_Name@@@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEPAULangID_Name@@PAU2@00@Z']
jmp ['short', 'loc_13212']
endp
__catch$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z$0 proc near
mov ['ecx,', '[ebp+8]']
push ['ecx']
mov ['edx,', '[ebp-1Ch]']
push ['edx']
lea ['eax,', '[ebp-12h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN8_5          proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Umove@PAULangMenuItem@@@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEPAULangMenuItem@@PAU2@00@Z']
jmp ['short', 'loc_1336E']
endp
__catch$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z$0 proc near
mov ['ecx,', '[ebp+8]']
push ['ecx']
mov ['edx,', '[ebp-1Ch]']
push ['edx']
lea ['eax,', '[ebp-12h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN8_1          proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
push ['ecx']
sub ['esp,', '10h']
push ['ebx']
push ['esi']
push ['edi']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'esp']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
lea ['ecx,', '[ebp+var_11]']
push ['ecx']
mov ['ecx,', '[ebp+var_18]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_1C]']
push ['edx']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_18]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
call ['??$_Umove@PAUstrCouple@@@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEPAUstrCouple@@PAU2@00@Z']
jmp ['short', 'loc_134CA']
endp
__catch$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z$0 proc near
mov ['ecx,', '[ebp+8]']
push ['ecx']
mov ['edx,', '[ebp-1Ch]']
push ['edx']
lea ['eax,', '[ebp-12h]']
push ['eax']
mov ['ecx,', '[ebp-18h]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z']
push ['0']
push ['0']
call ['__CxxThrowException@8']
endp
$LN8_9          proc near               
mov ['dword', 'ptr', '[ebp-4],', '0FFFFFFFFh']
endp
__ehhandler$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-24h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z']
jmp ['___CxxFrameHandler3']
endp
?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_135E3']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
sub ['esi,', 'eax']
cmp ['esi,', '[ebp+arg_0]']
jnb ['short', 'loc_135C6']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow_to@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Reallocate@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_1363F']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
sub ['esi,', 'eax']
cmp ['esi,', '[ebp+arg_0]']
jnb ['short', 'loc_13622']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow_to@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Reallocate@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_1369B']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
sub ['esi,', 'eax']
cmp ['esi,', '[ebp+arg_0]']
jnb ['short', 'loc_1367E']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow_to@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Reallocate@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_136F7']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
sub ['esi,', 'eax']
cmp ['esi,', '[ebp+arg_0]']
jnb ['short', 'loc_136DA']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow_to@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Reallocate@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
push ['esi']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_13753']
mov ['ecx,', '[ebp+var_4]']
call ['?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
mov ['esi,', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
sub ['esi,', 'eax']
cmp ['esi,', '[ebp+arg_0]']
jnb ['short', 'loc_13736']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
add ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow_to@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEII@Z']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Reallocate@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z']
pop ['esi']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_1376F']
jmp ['short', 'loc_137E2']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '10h']
jb ['short', 'loc_137E2']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PAD@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPAPAD@Z']
cmp ['[ebp+Size],', '0']
jbe ['short', 'loc_137C1']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@D@std@@YAPADAAD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '0Fh']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEX_NI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_13813']
jmp ['short', 'loc_13886']
mov ['ecx,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[ecx+18h],', '8']
jb ['short', 'loc_13886']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_8]']
add ['ecx,', '4']
push ['ecx']
lea ['edx,', '[ebp+var_1]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$destroy@PA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPAPA_W@Z']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_13865']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
call ['??$addressof@_W@std@@YAPA_WAA_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
add ['edx,', '4']
push ['edx']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+18h]']
add ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_C]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['dword', 'ptr', '[ecx+18h],', '7']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?_Unused_capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+8]']
sar ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unused_capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+8]']
cdq
mov ['ecx,', '3Ch']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unused_capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+8]']
sar ['eax,', '5']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unused_capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+8]']
cdq
mov ['ecx,', '24h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Unused_capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+8]']
cdq
mov ['ecx,', '38h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xlen@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@']
call ['?_Xlength_error@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['offset', '??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@']
call ['?_Xout_of_range@std@@YAXPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?allocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@D@std@@QAEPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEPAU?$pair@DD@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEPAUDlgInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEPAULangID_Name@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEPAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEPAUstrCouple@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?allocate@?$allocator@_W@std@@QAEPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@D@std@@QAEPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@D@std@@YAPADIPAD@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U?$pair@DD@std@@@std@@QAEPAU?$pair@DD@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@UDlgInfo@@@std@@QAEPAUDlgInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@UDlgInfo@@@std@@YAPAUDlgInfo@@IPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@ULangID_Name@@@std@@QAEPAULangID_Name@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@ULangID_Name@@@std@@YAPAULangID_Name@@IPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@ULangMenuItem@@@std@@QAEPAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@ULangMenuItem@@@std@@YAPAULangMenuItem@@IPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@IPAU10@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@UstrCouple@@@std@@QAEPAUstrCouple@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@UstrCouple@@@std@@YAPAUstrCouple@@IPAU1@@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?allocate@?$allocator@_W@std@@QAEPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Allocate@_W@std@@YAPA_WIPA_W@Z']
add ['esp,', '8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_13C06']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+var_8]']
cmp ['eax,', '[ebp+arg_8]']
jnb ['short', 'loc_13C22']
mov ['ecx,', '[ebp+var_8]']
mov ['[ebp+arg_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
sub ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+arg_8]']
ja ['short', 'loc_13C3A']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_13C9A']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'edx']
push ['0']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_13C9A']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
or ['ecx,', '0FFFFFFFFh']
sub ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_13CC3']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
cmp ['[ebp+arg_0],', '0']
jbe ['short', 'loc_13D0E']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13D0E']
movzx ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXII_W@Z']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['43Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_13D79']
push ['42Ah']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13DAE']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_13E1F']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
sub ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_4]']
ja ['short', 'loc_13DC7']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_13E1C']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
add ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
push ['0']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13E1C']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+var_4]']
mov ['ecx,', '[edx+14h]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_13E46']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+Size],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+Size]']
jnb ['short', 'loc_13E62']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+Size],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_13E89']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_13ECB']
push ['0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_13ECB']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ']
add ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@D@std@@SAIPBD@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+Size],', '0']
jz ['short', 'loc_13F33']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NPBD@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_13F66']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_13FA3']
push ['0']
mov ['eax,', '[ebp+Size]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_13FA0']
mov ['edx,', '[ebp+Size]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
call ['?copy@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
push ['eax']
push ['0']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_13FEE']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'eax']
mov ['eax,', '[ebp+arg_8]']
cmp ['eax,', '[ebp+var_8]']
jnb ['short', 'loc_1400A']
mov ['ecx,', '[ebp+arg_8]']
mov ['[ebp+var_8],', 'ecx']
mov ['edx,', '[ebp+var_4]']
cmp ['edx,', '[ebp+arg_0]']
jnz ['short', 'loc_14031']
mov ['eax,', '[ebp+arg_4]']
add ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
jmp ['short', 'loc_14076']
push ['0']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_14076']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['edx,', '[ebp+arg_4]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['490h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_4],', '0']
jz ['short', 'loc_140DF']
push ['47Fh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_14114']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@ABV12@II@Z']
jmp ['short', 'loc_14151']
push ['0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_1414E']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Src]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?assign@?$char_traits@D@std@@SAXAADABD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dl,', '[ecx]']
mov ['[eax],', 'dl']
pop ['ebp']
retn
endp
?assign@?$char_traits@_W@std@@SAPA_WPA_WI_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
movzx ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_wmemset']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
?assign@?$char_traits@_W@std@@SAXAA_WAB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_4]']
mov ['dx,', '[ecx]']
mov ['[eax],', 'dx']
pop ['ebp']
retn
endp
?at@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QAEAAPAVTiXmlDocument@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_141B4']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@IBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[ecx+edx*4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?at@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEAAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_141E4']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXXZ']
imul ['eax,', '[ebp+arg_0],', '24h']
mov ['ecx,', '[ebp+var_4]']
add ['eax,', '[ecx+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_1']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@PAULangMenuItem@@PBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_3']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?begin@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?capacity@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?capacity@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '3Ch']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?capacity@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '5']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?capacity@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '24h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?capacity@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+0Ch]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '38h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_code@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?category@error_condition@std@@QBEABVerror_category@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?clear@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEXXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Orphan_all@_Container_base12@std@@QAEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Destroy@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXPAU?$pair@DD@2@0@Z']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+4]']
mov ['[ecx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
push ['eax']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_14529']
push ['87Dh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
cmp ['edx,', '[ebp+arg_0]']
jnb ['short', 'loc_1453C']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_14556']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_14566']
mov ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_1456C']
mov ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?compare@?$char_traits@_W@std@@SAHPB_W0I@Z']
add ['esp,', '0Ch']
mov ['[ebp+var_C],', 'eax']
cmp ['[ebp+var_C],', '0']
jz ['short', 'loc_1459C']
mov ['eax,', '[ebp+var_C]']
mov ['[ebp+var_18],', 'eax']
jmp ['short', 'loc_145D1']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_145AD']
mov ['[ebp+var_14],', '0FFFFFFFFh']
jmp ['short', 'loc_145CB']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ebp+arg_C]']
jnz ['short', 'loc_145BE']
mov ['[ebp+var_10],', '0']
jmp ['short', 'loc_145C5']
mov ['[ebp+var_10],', '1']
mov ['eax,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'eax']
mov ['ecx,', '[ebp+var_14]']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+var_18]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['86Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
push ['ecx']
push ['0']
mov ['ecx,', '[ebp+var_4]']
call ['?compare@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEHIIPB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?compare@?$char_traits@_W@std@@SAHPB_W0I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_14637']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1464E']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['_wmemcmp']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_18],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
push ['24h']
call ['??2@YAPAXIPAX@Z']
add ['esp,', '8']
mov ['[ebp+var_10],', 'eax']
mov ['[ebp+var_4],', '0']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_146AF']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['??0LangMenuItem@@QAE@ABU0@@Z']
mov ['[ebp+var_14],', 'eax']
jmp ['short', 'loc_146B6']
mov ['[ebp+var_14],', '0']
mov ['edx,', '[ebp+var_14]']
mov ['[ebp+var_1C],', 'edx']
mov ['[ebp+var_4],', '0FFFFFFFFh']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z$0 proc near
mov ['eax,', '[ebp+8]']
push ['eax']
mov ['eax,', '[ebp-10h]']
push ['eax']
call ['??3@YAXPAX0@Z']
add ['esp,', '8']
retn
endp
__ehhandler$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?construct@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@ABU3@@Z']
jmp ['___CxxFrameHandler3']
endp
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_14712']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_14729']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_14742']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_14759']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemcpy']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?deallocate@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@D@std@@QAEXPADI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@D@std@@QAEXPADI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U?$pair@DD@std@@@std@@QAEXPAU?$pair@DD@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@UDlgInfo@@@std@@QAEXPAUDlgInfo@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@ULangID_Name@@@std@@QAEXPAULangID_Name@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@ULangMenuItem@@@std@@QAEXPAULangMenuItem@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QAEXPAU_Container_proxy@2@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@UstrCouple@@@std@@QAEXPAUstrCouple@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?deallocate@?$allocator@_W@std@@QAEXPA_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??3@YAXPAX@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
test ['eax,', 'eax']
jz ['short', 'loc_14950']
call ['?generic_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_14965']
jmp ['short', 'loc_14965']
call ['?system_category@std@@YAABVerror_category@1@XZ']
push ['eax']
mov ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?default_error_condition@error_category@std@@UBE?AVerror_condition@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0error_condition@std@@QAE@HABVerror_category@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?destroy@StaticDialog@@UAEXXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
push ['1']
push ['7F4h']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+8]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__DestroyWindow@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?destroy@ValueDlg@@UAEXXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?display@Window@@UBEX_N@Z proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jz ['short', 'loc_149E6']
mov ['[ebp+nCmdShow],', '5']
jmp ['short', 'loc_149ED']
mov ['[ebp+nCmdShow],', '0']
mov ['ecx,', '[ebp+nCmdShow]']
push ['ecx']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__ShowWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
mov ['ecx,', '[ebp+var_10]']
add ['eax,', '[ecx+14h]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@PADPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_14]']
or ['edx,', '1']
mov ['[ebp+var_14],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?end@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@D@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_14]']
or ['ecx,', '1']
mov ['[ebp+var_14],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ$0 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN4_2']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?end@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
jmp ['___CxxFrameHandler3']
endp
?equivalent@error_category@std@@UBE_NABVerror_code@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['ecx,', '[ebp+arg_0]']
call ['?category@error_code@std@@QBEABVerror_category@2@XZ']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['??8error_category@std@@QBE_NABV01@@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_14B87']
mov ['ecx,', '[ebp+arg_0]']
call ['?value@error_code@std@@QBEHXZ']
cmp ['eax,', '[ebp+arg_4]']
jnz ['short', 'loc_14B87']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_14B8E']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?equivalent@error_category@std@@UBE_NHABVerror_condition@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
lea ['edx,', '[ebp+var_C]']
push ['edx']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
call ['eax']
mov ['ecx,', 'eax']
call ['??8error_condition@std@@QBE_NABV01@@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_14BE2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_14C14']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_14C30']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
jmp ['short', 'loc_14C76']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_14C76']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ']
add ['eax,', '[ebp+arg_0]']
mov ['[ebp+Dst],', 'eax']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_C]']
sub ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
add ['edx,', '[ebp+arg_4]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['?move@?$char_traits@D@std@@SAPADPADPBDI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '70h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['[ebp+var_4],', '2']
push ['556h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_44],', 'esp']
lea ['eax,', '[ebp+arg_10]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
mov ['[ebp+var_48],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_4C],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
call ['??$_Debug_range@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@@std@@YAXV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@0@0PB_WI@Z']
add ['esp,', '20h']
lea ['ecx,', '[ebp+var_7C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_24],', 'eax']
mov ['edx,', '[ebp+var_24]']
mov ['[ebp+var_28],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_54],', 'esp']
mov ['eax,', '[ebp+var_28]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['ecx,', '[ebp+var_2C]']
mov ['[ebp+var_58],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_5C],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_34],', 'eax']
mov ['ecx,', '[ebp+var_34]']
mov ['[ebp+var_14],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+var_7C]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_64],', 'esp']
lea ['edx,', '[ebp+arg_4]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_68],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_6C],', 'esp']
lea ['edx,', '[ebp+arg_10]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_70],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_40],', 'eax']
mov ['ecx,', '[ebp+var_40]']
push ['ecx']
mov ['edx,', '[ebp+var_14]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
mov ['eax,', '[ebp+var_10]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+var_14]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@PA_WPBU_Container_base12@1@@Z']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_10]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$0 proc near
lea ['ecx,', '[ebp+18h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$1 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$2 proc near
mov ['ecx,', '[ebp-44h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$3 proc near
mov ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$4 proc near
lea ['ecx,', '[ebp-7Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$5 proc near
mov ['ecx,', '[ebp-54h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$6 proc near
mov ['ecx,', '[ebp-5Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$7 proc near
mov ['ecx,', '[ebp-64h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$8 proc near
mov ['ecx,', '[ebp-6Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z$9 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN13']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-74h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
jmp ['___CxxFrameHandler3']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_14EC2']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jnb ['short', 'loc_14EF4']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_14F10']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
jmp ['short', 'loc_14F5C']
cmp ['[ebp+arg_4],', '0']
jbe ['short', 'loc_14F5C']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['[ebp+Dst],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_C]']
sub ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
mov ['edx,', '[ebp+Dst]']
lea ['eax,', '[edx+ecx*2]']
push ['eax']
mov ['ecx,', '[ebp+Dst]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_14],', '0']
mov ['[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_4]']
call ['?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ']
cmp ['eax,', '[ebp+var_10]']
jnz ['short', 'loc_14FC1']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[eax+4]']
jb ['short', 'loc_14FC1']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_14FD8']
push ['5A2h']
push ['offset', '??_C@_1IM@EINEHPHE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
push ['offset', '??_C@_1EI@HGIDLLCM@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA?5?$AAo?$AAu?$AAt?$AAs?$AAi?$AAd?$AAe?$AA?5?$AAr?$AAa@']
call ['?_Debug_message@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+arg_C]']
push ['ecx']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '24h']
push ['ecx']
call ['??$_Move@PAULangMenuItem@@PAU1@@std@@YAPAULangMenuItem@@PAU1@00@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+var_10]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
mov ['edx,', '[ecx+8]']
sub ['edx,', '24h']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Destroy@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXPAULangMenuItem@@0@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['edx,', '[ebp+arg_C]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
mov ['eax,', '[ebp+var_10]']
mov ['ecx,', '[eax+8]']
sub ['ecx,', '24h']
mov ['edx,', '[ebp+var_10]']
mov ['[edx+8],', 'ecx']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_1C],', 'esp']
lea ['eax,', '[ebp+arg_4]']
push ['eax']
call ['??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_20],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
mov ['ecx,', '[ebp+var_10]']
call ['?_Make_iter@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
mov ['[ebp+var_24],', 'eax']
mov ['eax,', '[ebp+var_14]']
or ['eax,', '1']
mov ['[ebp+var_14],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_4]']
call ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$0 proc near
lea ['ecx,', '[ebp+0Ch]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$1 proc near
mov ['ecx,', '[ebp-1Ch]']
jmp ['??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z$2 proc near
mov ['eax,', '[ebp-14h]']
and ['eax,', '1']
jz ['$LN8_0']
and ['dword', 'ptr', '[ebp-14h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@std@@QAE@XZ']
retn
endp
__ehhandler$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-1Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?erase@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAE?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@ULangMenuItem@@@std@@@std@@@2@@Z']
jmp ['___CxxFrameHandler3']
endp
?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_4],', '0']
jnz ['short', 'loc_150DF']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_150F9']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_8]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['_wmemchr']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_15125']
push ['80Eh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_4]']
cmp ['edx,', '[ecx+14h]']
jnb ['short', 'loc_15195']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
lea ['eax,', '[eax+edx*2]']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_15160']
mov ['eax,', '[ebp+var_8]']
add ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_15195']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
call ['?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_15193']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['edx,', '[ebp+var_8]']
sub ['edx,', 'eax']
sar ['edx,', '1']
mov ['eax,', 'edx']
jmp ['short', 'loc_1519A']
jmp ['short', 'loc_15157']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jz ['short', 'loc_151E5']
push ['834h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[ecx+14h],', '0']
jbe ['short', 'loc_15267']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[edx+14h]']
jnb ['short', 'loc_15201']
mov ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
jmp ['short', 'loc_1520D']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_C]']
lea ['edx,', '[eax+ecx*2]']
mov ['[ebp+var_8],', 'edx']
jmp ['short', 'loc_15229']
mov ['eax,', '[ebp+var_8]']
sub ['eax,', '2']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['edx,', '[ebp+arg_8]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['?find@?$char_traits@_W@std@@SAPB_WPB_WIAB_W@Z']
add ['esp,', '0Ch']
test ['eax,', 'eax']
jnz ['short', 'loc_15256']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
mov ['eax,', 'ecx']
jmp ['short', 'loc_1526C']
jmp ['short', 'loc_15265']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
cmp ['[ebp+var_8],', 'eax']
jnz ['short', 'loc_15265']
jmp ['short', 'loc_15267']
jmp ['short', 'loc_15220']
mov ['eax,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEI_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
lea ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?find_last_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIPB_WII@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?generic_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_Generic_object@?$_Error_objects@H@std@@2V_Generic_error_category@2@A']
pop ['ebp']
retn
endp
?getClientRect@Window@@UBEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['ecx,', '[ebp+var_14]']
call ['?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ']
cmp ['[ebp+arg_4],', 'eax']
jb ['short', 'loc_15323']
push ['offset', '??_C@_11LOCGONAA@?$AA?$AA@']
push ['offset', '??_C@_11LOCGONAA@?$AA?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??$?0AAY00$$CB_WAAY00$$CB_WX@?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@AAY00$$CB_W0@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_1534B']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['ecx,', '[ebp+var_14]']
call ['??A?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QAEAAU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@1@I@Z']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@ABU01@@Z']
mov ['[ebp+var_4],', '0']
mov ['edx,', '[ebp+var_10]']
or ['edx,', '1']
mov ['[ebp+var_10],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN5_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@QAE@XZ']
retn
endp
__ehhandler$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getElementFromIndex@LocalizationSwitcher@@QAE?AU?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@I@Z']
jmp ['___CxxFrameHandler3']
endp
?getEnableThemeDlgTexture@NppParameters@@QBEP6GJPAUHWND__@@IIJ@ZXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+1C8FCh]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getExternalLexerDoc@NppParameters@@QAEPAV?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '108h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '2Ch']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
or ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_4']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getFileName@LocalizationSwitcher@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ']
jmp ['___CxxFrameHandler3']
endp
?getFontList@NppParameters@@QBEABV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1C8C4h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getHeight@Window@@UBEHXZ proc near     
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+var_18]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
cmp ['eax,', '1']
jnz ['short', 'loc_154A2']
mov ['eax,', '[ebp+Rect.bottom]']
sub ['eax,', '[ebp+Rect.top]']
jmp ['short', 'loc_154A4']
xor ['eax,', 'eax']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getInstance@EncodingMapper@@SAPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:?_pSelf@EncodingMapper@@0PAV1@A']
pop ['ebp']
retn
endp
?getInstance@NppParameters@@SAPAV1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'dword', 'ptr', 'ds:?_pSelf@NppParameters@@0PAV1@A']
pop ['ebp']
retn
endp
?getLangFromIndex@NppParameters@@QBEPAULang@@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
cmp ['ecx,', '[eax+92Ch]']
jl ['short', 'loc_154E5']
xor ['eax,', 'eax']
jmp ['short', 'loc_154F2']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+edx*4+7ECh]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?getLangName@Lang@@QBEPB_WXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '4']
call ['?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEPB_WXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getLocalizationSwitcher@NppParameters@@QAEAAVLocalizationSwitcher@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '1C984h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getNativeLangA@NppParameters@@QBEPAVTiXmlDocumentA@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+100h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getNbLang@NppParameters@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+92Ch]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getNbMaxRecentFile@NppParameters@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+9ACh]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getNewDocDefaultSettings@NppGUI@@QBEABUNewDocDefaultSettings@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '50h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getNppGUI@NppParameters@@QBEABUNppGUI@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '118h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getRecentFileCustomLength@NppParameters@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+9B4h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getSVP@NppParameters@@QBEABUScintillaViewParams@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
add ['eax,', '7BCh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getTabInfo@Lang@@QBEHXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
cmp ['dword', 'ptr', '[eax+84h],', '0FFFFFFFFh']
jnz ['short', 'loc_155CA']
or ['eax,', '0FFFFFFFFh']
jmp ['short', 'loc_155F6']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+80h]']
test ['edx,', 'edx']
jz ['short', 'loc_155E1']
mov ['[ebp+var_8],', '80h']
jmp ['short', 'loc_155E8']
mov ['[ebp+var_8],', '0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_8]']
or ['ecx,', '[eax+84h]']
mov ['eax,', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getTopPoint@StaticDialog@@QBE?AUtagPOINT@@PAUHWND__@@_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '20h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_20],', 'ecx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+hWnd]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
movzx ['edx,', '[ebp+arg_8]']
test ['edx,', 'edx']
jz ['short', 'loc_1562D']
mov ['eax,', '[ebp+Rect.left]']
mov ['[ebp+Point.x],', 'eax']
jmp ['short', 'loc_15633']
mov ['ecx,', '[ebp+Rect.right]']
mov ['[ebp+Point.x],', 'ecx']
mov ['edx,', '[ebp+Rect.top]']
mov ['[ebp+Point.y],', 'edx']
lea ['eax,', '[ebp+Point]']
push ['eax']
mov ['ecx,', '[ebp+var_20]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__ScreenToClient@8']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+Point.x]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+Point.y]']
mov ['[eax+4],', 'edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
mov ['eax,', '[ebp+var_14]']
add ['eax,', '1CADCh']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_4],', '0']
mov ['ecx,', '[ebp+var_10]']
or ['ecx,', '1']
mov ['[ebp+var_10],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
__unwindfunclet$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN4_5']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?getUserPath@NppParameters@@QBE?AV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@XZ']
jmp ['___CxxFrameHandler3']
endp
?getWidth@Window@@UBEHXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '18h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
mov ['[ebp+var_4],', 'eax']
mov ['[ebp+var_18],', 'ecx']
lea ['eax,', '[ebp+Rect]']
push ['eax']
mov ['ecx,', '[ebp+var_18]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetClientRect@8']
mov ['eax,', '[ebp+Rect.right]']
sub ['eax,', '[ebp+Rect.left]']
mov ['ecx,', '[ebp+var_4]']
xor ['ecx,', 'ebp']
call ['@__security_check_cookie@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?getWindowRect@Window@@UBEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+lpRect]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetWindowRect@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?init@Window@@UAEXPAUHINSTANCE__@@PAUHWND__@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+4],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+8],', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
?isCheckedOrNot@StaticDialog@@QBE_NH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
push ['0']
push ['0']
push ['0F0h']
mov ['eax,', '[ebp+nIDDlgItem]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__SendMessageW@16']
cmp ['eax,', '1']
jnz ['short', 'loc_157B4']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_157BB']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?isCreated@StaticDialog@@UBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
cmp ['dword', 'ptr', '[eax+0Ch],', '0']
jz ['short', 'loc_157DF']
mov ['[ebp+var_4],', '1']
jmp ['short', 'loc_157E6']
mov ['[ebp+var_4],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?isSnapshotMode@NppGUI@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
movzx ['ecx,', 'byte', 'ptr', '[eax+695h]']
test ['ecx,', 'ecx']
jz ['short', 'loc_15826']
mov ['edx,', '[ebp+var_4]']
movzx ['eax,', 'byte', 'ptr', '[edx+3Ah]']
test ['eax,', 'eax']
jz ['short', 'loc_15826']
mov ['ecx,', '[ebp+var_4]']
movzx ['edx,', 'byte', 'ptr', '[ecx+3Bh]']
test ['edx,', 'edx']
jnz ['short', 'loc_15826']
mov ['[ebp+var_8],', '1']
jmp ['short', 'loc_1582D']
mov ['[ebp+var_8],', '0']
mov ['al,', 'byte', 'ptr', '[ebp+var_8]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?isVisible@Window@@UBE_NXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__IsWindowVisible@4']
test ['eax,', 'eax']
jz ['short', 'loc_15854']
mov ['[ebp+var_1],', '1']
jmp ['short', 'loc_15858']
mov ['[ebp+var_1],', '0']
mov ['al,', '[ebp+var_1]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@D@std@@SAIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movsx ['ecx,', 'byte', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_1588B']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_1589A']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_strlen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?length@?$char_traits@_W@std@@SAIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+Str]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
test ['ecx,', 'ecx']
jnz ['short', 'loc_158BB']
mov ['[ebp+var_4],', '0']
jmp ['short', 'loc_158CA']
mov ['edx,', '[ebp+Str]']
push ['edx']
call ['_wcslen']
add ['esp,', '4']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?makeOpenAnsiAsUtf8@DefaultNewDocDlg@@AAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
movzx ['eax,', '[ebp+arg_0]']
test ['eax,', 'eax']
jnz ['short', 'loc_158FE']
push ['0']
push ['0']
push ['0F1h']
push ['1914h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__SendDlgItemMessageW@20']
movzx ['eax,', '[ebp+arg_0]']
push ['eax']
push ['1914h']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__GetDlgItem@8']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__EnableWindow@8']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
call ['?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z']
add ['esp,', '4']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@D@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
or ['eax,', '0FFFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '4444444h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '71C71C7h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '4924924h']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator@_W@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '7FFFFFFFh']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@D@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@U?$pair@DD@std@@@std@@@std@@SAIABV?$allocator@U?$pair@DD@std@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@U?$pair@DD@std@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@UDlgInfo@@@std@@@std@@SAIABV?$allocator@UDlgInfo@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@UDlgInfo@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@ULangID_Name@@@std@@@std@@SAIABV?$allocator@ULangID_Name@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@ULangID_Name@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@ULangMenuItem@@@std@@@std@@SAIABV?$allocator@ULangMenuItem@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@ULangMenuItem@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@UstrCouple@@@std@@@std@@SAIABV?$allocator@UstrCouple@@@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@UstrCouple@@@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SAIABV?$allocator@_W@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['ecx,', '[ebp+arg_0]']
call ['?max_size@?$allocator@_W@std@@QBEIXZ']
pop ['ebp']
retn
endp
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@D@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_15ADA']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_15AE3']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_10],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_10]']
call ['?_Getal@?$_String_alloc@$0A@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBEIXZ']
mov ['[ebp+var_8],', 'eax']
cmp ['[ebp+var_8],', '1']
ja ['short', 'loc_15B1A']
mov ['[ebp+var_C],', '1']
jmp ['short', 'loc_15B23']
mov ['ecx,', '[ebp+var_8]']
sub ['ecx,', '1']
mov ['[ebp+var_C],', 'ecx']
mov ['eax,', '[ebp+var_C]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?max_size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['?max_size@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Syserror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_15C18']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_15C1F']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '8']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_14],', 'ecx']
mov ['[ebp+var_10],', '0']
cmp ['[ebp+arg_4],', '1']
jnz ['short', 'loc_15CDD']
push ['offset', '??_C@_0BG@PADBLCHM@iostream?5stream?5error?$AA@']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_15D00']
jmp ['short', 'loc_15D00']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_14]']
call ['?message@_Generic_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_10]']
or ['eax,', '1']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-10h]']
and ['eax,', '1']
jz ['$LN6_0']
and ['dword', 'ptr', '[ebp-10h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_Iostream_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '10h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_1C],', 'ecx']
mov ['[ebp+var_18],', '0']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
call ['?_Winerror_map@std@@YAPBDH@Z']
add ['esp,', '4']
mov ['[ebp+var_10],', 'eax']
cmp ['[ebp+var_10],', '0']
jz ['short', 'loc_15D94']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+Str],', 'ecx']
jmp ['short', 'loc_15D9B']
mov ['[ebp+Str],', 'offset', '??_C@_0O@BFJCFAAK@unknown?5error?$AA@']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z']
mov ['[ebp+var_4],', '0']
mov ['eax,', '[ebp+var_18]']
or ['eax,', '1']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['8']
endp
__unwindfunclet$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z$0 proc near
mov ['eax,', '[ebp-18h]']
and ['eax,', '1']
jz ['$LN6_1']
and ['dword', 'ptr', '[ebp-18h],', '0FFFFFFFEh']
mov ['ecx,', '[ebp+8]']
jmp ['??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ']
retn
endp
__ehhandler$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-14h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z']
jmp ['___CxxFrameHandler3']
endp
?move@?$char_traits@D@std@@SAPADPADPBDI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+Size],', '0']
jnz ['short', 'loc_15E12']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_15E29']
mov ['ecx,', '[ebp+Size]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_memmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
cmp ['[ebp+arg_8],', '0']
jnz ['short', 'loc_15E42']
mov ['eax,', '[ebp+Dst]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_15E59']
mov ['ecx,', '[ebp+arg_8]']
push ['ecx']
mov ['edx,', '[ebp+Src]']
push ['edx']
mov ['eax,', '[ebp+Dst]']
push ['eax']
call ['_wmemmove']
add ['esp,', '0Ch']
mov ['[ebp+var_4],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Generic_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_07DCLBNMLN@generic?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_Iostream_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_08LLGCOLLL@iostream?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?name@_System_error_category@std@@UBEPBDXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', 'offset', '??_C@_06FHFOAHML@system?$AA@']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?push_back@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QAEX$$QAU?$pair@DD@2@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBE_NPBU?$pair@DD@2@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_15F3F']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@U?$pair@DD@std@@@std@@YAPAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '1']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_15EE8']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+4]']
mov ['edx,', '[ebp+var_C]']
lea ['eax,', '[ecx+edx*2]']
push ['eax']
call ['??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_1]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '2']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
jmp ['short', 'loc_15FA3']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ecx+8]']
cmp ['eax,', '[edx+0Ch]']
jnz ['short', 'loc_15F57']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IAEXI@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@IBEXPAU?$pair@DD@2@0@Z']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$forward@U?$pair@DD@std@@@std@@YA$$QAU?$pair@DD@0@AAU10@@Z']
add ['esp,', '4']
push ['eax']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
push ['ecx']
lea ['edx,', '[ebp+var_2]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@U?$pair@DD@std@@U12@@?$_Wrap_alloc@V?$allocator@U?$pair@DD@std@@@std@@@std@@QAEXPAU?$pair@DD@1@$$QAU21@@Z']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[eax+8]']
add ['ecx,', '2']
mov ['edx,', '[ebp+var_8]']
mov ['[edx+8],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?push_back@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QAEX$$QAUDlgInfo@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBE_NPBUDlgInfo@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_1605F']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@UDlgInfo@@@std@@YAPAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '3Ch']
idiv ['ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_1600A']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z']
imul ['eax,', '[ebp+var_C],', '3Ch']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
push ['eax']
call ['??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '3Ch']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_160C3']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16077']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@IBEXPAUDlgInfo@@0@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@UDlgInfo@@@std@@YA$$QAUDlgInfo@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@UDlgInfo@@U1@@?$_Wrap_alloc@V?$allocator@UDlgInfo@@@std@@@std@@QAEXPAUDlgInfo@@$$QAU2@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '3Ch']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?push_back@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QAEX$$QAULangID_Name@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBE_NPBULangID_Name@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_1617C']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@ULangID_Name@@@std@@YAPAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '5']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16125']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z']
mov ['eax,', '[ebp+var_C]']
shl ['eax,', '5']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
push ['eax']
call ['??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '20h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_161E0']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16194']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@IBEXPAULangID_Name@@0@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@ULangID_Name@@@std@@YA$$QAULangID_Name@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangID_Name@@U1@@?$_Wrap_alloc@V?$allocator@ULangID_Name@@@std@@@std@@QAEXPAULangID_Name@@$$QAU2@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '20h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEX$$QAULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_1629B']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@ULangMenuItem@@@std@@YAPAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '24h']
idiv ['ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16246']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
imul ['eax,', '[ebp+var_C],', '24h']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
push ['eax']
call ['??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '24h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_162FF']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_162B3']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@ULangMenuItem@@@std@@YA$$QAULangMenuItem@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangMenuItem@@U1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@$$QAU2@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '24h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?push_back@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXABULangMenuItem@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBE_NPBULangMenuItem@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_163B2']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@$$CBULangMenuItem@@@std@@YAPBULangMenuItem@@ABU1@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '24h']
idiv ['ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16366']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
imul ['eax,', '[ebp+var_C],', '24h']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangMenuItem@@AAU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@AAU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '24h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_1640D']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_163CA']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@IBEXPAULangMenuItem@@0@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@ULangMenuItem@@ABU1@@?$_Wrap_alloc@V?$allocator@ULangMenuItem@@@std@@@std@@QAEXPAULangMenuItem@@ABU2@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '24h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?push_back@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QAEX$$QAUstrCouple@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Inside@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBE_NPBUstrCouple@@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_164C7']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??$addressof@UstrCouple@@@std@@YAPAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
mov ['ecx,', '[ebp+var_8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '38h']
idiv ['ecx']
mov ['[ebp+var_C],', 'eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_16472']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z']
imul ['eax,', '[ebp+var_C],', '38h']
mov ['ecx,', '[ebp+var_8]']
add ['eax,', '[ecx+4]']
push ['eax']
call ['??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
add ['eax,', '38h']
mov ['ecx,', '[ebp+var_8]']
mov ['[ecx+8],', 'eax']
jmp ['short', 'loc_1652B']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[ebp+var_8]']
mov ['ecx,', '[edx+8]']
cmp ['ecx,', '[eax+0Ch]']
jnz ['short', 'loc_164DF']
push ['1']
mov ['ecx,', '[ebp+var_8]']
call ['?_Reserve@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IAEXI@Z']
mov ['edx,', '[ebp+var_8]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
mov ['ecx,', '[ebp+var_8]']
call ['?_Orphan_range@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@IBEXPAUstrCouple@@0@Z']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??$forward@UstrCouple@@@std@@YA$$QAUstrCouple@@AAU1@@Z']
add ['esp,', '4']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
push ['edx']
lea ['eax,', '[ebp+var_2]']
push ['eax']
mov ['ecx,', '[ebp+var_8]']
call ['?_Getal@?$_Vector_alloc@$0A@U?$_Vec_base_types@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@@std@@QBE?AU?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@2@XZ']
mov ['ecx,', 'eax']
call ['??$construct@UstrCouple@@U1@@?$_Wrap_alloc@V?$allocator@UstrCouple@@@std@@@std@@QAEXPAUstrCouple@@$$QAU2@@Z']
mov ['ecx,', '[ebp+var_8]']
mov ['edx,', '[ecx+8]']
add ['edx,', '38h']
mov ['eax,', '[ebp+var_8]']
mov ['[eax+8],', 'edx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?putRecentFileInSubMenu@NppParameters@@QBE_NXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['al,', '[eax+9B0h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?reSizeTo@Window@@UAEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx+8]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+0Ch]']
push ['eax']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?reSizeToWH@Window@@UAEXAAUtagRECT@@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+0Ch]']
sub ['edx,', '[ecx+4]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[ebp+arg_0]']
mov ['edx,', '[eax+8]']
sub ['edx,', '[ecx]']
push ['edx']
mov ['eax,', '[ebp+arg_0]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
mov ['eax,', '[edx]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+0Ch]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MoveWindow@24']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['edx,', '[eax]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
call ['eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?redraw@Window@@UBEX_N@Z proc near      
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['1']
push ['0']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__InvalidateRect@12']
movzx ['edx,', '[ebp+arg_0]']
test ['edx,', 'edx']
jz ['short', 'loc_16611']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+0Ch]']
push ['ecx']
call ['dword', 'ptr', 'ds:__imp__UpdateWindow@4']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['0FFFFFFFFh']
push ['0']
mov ['eax,', '[ebp+arg_8]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
push ['ecx']
mov ['edx,', '[ebp+arg_0]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '10h']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
jb ['short', 'loc_16661']
mov ['ecx,', '[ebp+arg_8]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
cmp ['eax,', '[ebp+arg_C]']
jnb ['short', 'loc_16669']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_0]']
cmp ['eax,', '[ebp+arg_4]']
jnb ['short', 'loc_16683']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ']
sub ['eax,', '[ebp+arg_C]']
mov ['[ebp+var_10],', 'eax']
mov ['eax,', '[ebp+var_10]']
cmp ['eax,', '[ebp+arg_10]']
jnb ['short', 'loc_1669F']
mov ['ecx,', '[ebp+var_10]']
mov ['[ebp+arg_10],', 'ecx']
mov ['edx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
sub ['edx,', '[ebp+arg_10]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_4]']
cmp ['edx,', 'ecx']
ja ['short', 'loc_166BD']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
add ['edx,', '[ebp+arg_10]']
sub ['edx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+var_C]']
jnb ['short', 'loc_166F4']
push ['0']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
mov ['eax,', '[ebp+var_4]']
cmp ['eax,', '[ebp+arg_8]']
jz ['short', 'loc_16761']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+arg_8]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QBEPB_WXZ']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
jmp ['loc_1694A']
mov ['eax,', '[ebp+arg_10]']
cmp ['eax,', '[ebp+arg_4]']
ja ['short', 'loc_167CE']
mov ['ecx,', '[ebp+arg_10]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_C]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_10]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
jmp ['loc_1694A']
mov ['eax,', '[ebp+arg_C]']
cmp ['eax,', '[ebp+arg_0]']
ja ['short', 'loc_1683B']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
jmp ['loc_1694A']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '[ebp+arg_4]']
cmp ['eax,', '[ebp+arg_C]']
ja ['short', 'loc_168B1']
mov ['ecx,', '[ebp+var_8]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['edx,', '[ebp+arg_10]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_C]']
add ['ecx,', '[ebp+arg_10]']
sub ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
jmp ['loc_1694A']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_8]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_10]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_10]']
sub ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_10]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_4]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+var_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_W@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['5CBh']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Str]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Str]']
push ['ecx']
call ['?length@?$char_traits@_W@std@@SAIPB_W@Z']
add ['esp,', '4']
push ['eax']
mov ['edx,', '[ebp+Str]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['0Ch']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '0Ch']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_C],', '0']
jz ['short', 'loc_169C9']
push ['5A9h']
push ['offset', '??_C@_1IO@FEAPGJBD@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@']
mov ['eax,', '[ebp+Src]']
push ['eax']
call ['??$_Debug_pointer@_W@std@@YAXPB_W0I@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NPB_W@Z']
movzx ['edx,', 'al']
test ['edx,', 'edx']
jz ['short', 'loc_16A09']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+Src]']
sub ['ecx,', 'eax']
sar ['ecx,', '1']
push ['ecx']
mov ['edx,', '[ebp+var_4]']
push ['edx']
mov ['eax,', '[ebp+arg_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@II@Z']
jmp ['loc_16B41']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
cmp ['eax,', '[ebp+arg_0]']
jnb ['short', 'loc_16A1C']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
sub ['edx,', '[ebp+arg_0]']
cmp ['edx,', '[ebp+arg_4]']
jnb ['short', 'loc_16A36']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_0]']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', 'ds:?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2IB']
sub ['edx,', '[ebp+arg_C]']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
sub ['ecx,', '[ebp+arg_4]']
cmp ['edx,', 'ecx']
ja ['short', 'loc_16A54']
mov ['ecx,', '[ebp+var_4]']
call ['?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEXXZ']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+14h]']
sub ['eax,', '[ebp+arg_4]']
sub ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_8],', 'eax']
mov ['ecx,', '[ebp+arg_C]']
cmp ['ecx,', '[ebp+arg_4]']
jnb ['short', 'loc_16AA1']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
cmp ['[ebp+arg_C],', '0']
ja ['short', 'loc_16AB1']
cmp ['[ebp+arg_4],', '0']
jbe ['loc_16B3E']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
add ['ecx,', '[ebp+arg_C]']
sub ['ecx,', '[ebp+arg_4]']
mov ['[ebp+var_C],', 'ecx']
push ['0']
mov ['edx,', '[ebp+var_C]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['eax,', 'al']
test ['eax,', 'eax']
jz ['short', 'loc_16B3E']
mov ['ecx,', '[ebp+arg_4]']
cmp ['ecx,', '[ebp+arg_C]']
jnb ['short', 'loc_16B13']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['ecx,', '[ebp+arg_0]']
lea ['edx,', '[eax+ecx*2]']
mov ['eax,', '[ebp+arg_4]']
lea ['ecx,', '[edx+eax*2]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
mov ['ecx,', '[ebp+arg_C]']
lea ['edx,', '[eax+ecx*2]']
push ['edx']
call ['?move@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['eax,', '[ebp+arg_C]']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QAEPA_WXZ']
mov ['edx,', '[ebp+arg_0]']
lea ['eax,', '[eax+edx*2]']
push ['eax']
call ['?copy@?$char_traits@_W@std@@SAPA_WPA_WPB_WI@Z']
add ['esp,', '0Ch']
mov ['ecx,', '[ebp+var_C]']
push ['ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['10h']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '58h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+arg_18]']
push ['eax']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_3C],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_14],', 'eax']
mov ['eax,', '[ebp+var_14]']
mov ['[ebp+var_40],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_44],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['eax,', '[ebp+var_18]']
mov ['[ebp+var_48],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_1C],', 'eax']
mov ['ecx,', '[ebp+var_1C]']
push ['ecx']
lea ['edx,', '[ebp+var_64]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_20],', 'eax']
mov ['eax,', '[ebp+var_20]']
mov ['[ebp+var_24],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_4C],', 'esp']
mov ['edx,', '[ebp+var_24]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_28],', 'eax']
mov ['eax,', '[ebp+var_28]']
mov ['[ebp+var_50],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_54],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_58],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_30],', 'eax']
mov ['ecx,', '[ebp+var_30]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIABV12@@Z']
mov ['[ebp+var_34],', 'eax']
mov ['edx,', '[ebp+var_34]']
mov ['[ebp+var_38],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+var_64]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_38]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['1Ch']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$0 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$1 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$2 proc near
mov ['ecx,', '[ebp-3Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$3 proc near
mov ['ecx,', '[ebp-44h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$4 proc near
lea ['ecx,', '[ebp-64h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$5 proc near
mov ['ecx,', '[ebp-4Ch]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z$6 proc near
mov ['ecx,', '[ebp-54h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-5Ch]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0ABV12@@Z']
jmp ['___CxxFrameHandler3']
endp
?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['0FFFFFFFFh']
push ['offset', '__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z']
mov ['eax,', 'large', 'fs:0']
push ['eax']
sub ['esp,', '0A0h']
mov ['eax,', 'dword', 'ptr', 'ds:___security_cookie']
xor ['eax,', 'ebp']
push ['eax']
lea ['eax,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'eax']
mov ['[ebp+var_10],', 'ecx']
mov ['[ebp+var_4],', '3']
lea ['eax,', '[ebp+arg_24]']
push ['eax']
lea ['ecx,', '[ebp+arg_18]']
call ['??8?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBE_NABV01@@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['loc_16DF9']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_58],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_54],', 'eax']
mov ['eax,', '[ebp+var_54]']
mov ['[ebp+var_60],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '4']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_80],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_38],', 'eax']
mov ['eax,', '[ebp+var_38]']
mov ['[ebp+var_68],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '5']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_20],', 'eax']
mov ['ecx,', '[ebp+var_20]']
push ['ecx']
lea ['edx,', '[ebp+var_A0]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_48],', 'eax']
mov ['eax,', '[ebp+var_48]']
mov ['[ebp+var_28],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_90],', 'esp']
mov ['edx,', '[ebp+var_28]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_40],', 'eax']
mov ['eax,', '[ebp+var_40]']
mov ['[ebp+var_70],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '7']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_88],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_30],', 'eax']
mov ['eax,', '[ebp+var_30]']
mov ['[ebp+var_78],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '8']
mov ['byte', 'ptr', '[ebp+var_4],', '6']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_50],', 'eax']
mov ['ecx,', '[ebp+var_50]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@II@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_A0]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
jmp ['loc_16EE9']
lea ['edx,', '[ebp+arg_18]']
push ['edx']
lea ['ecx,', '[ebp+arg_24]']
call ['??G?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEHABV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@@Z']
push ['eax']
lea ['ecx,', '[ebp+arg_18]']
call ['??D?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QBEAA_WXZ']
push ['eax']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_94],', 'esp']
lea ['eax,', '[ebp+arg_0]']
push ['eax']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_18],', 'eax']
mov ['ecx,', '[ebp+var_18]']
mov ['[ebp+var_5C],', 'ecx']
mov ['byte', 'ptr', '[ebp+var_4],', '9']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_64],', 'esp']
lea ['edx,', '[ebp+arg_C]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_1C],', 'eax']
mov ['eax,', '[ebp+var_1C]']
mov ['[ebp+var_6C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ah']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_24],', 'eax']
mov ['ecx,', '[ebp+var_24]']
push ['ecx']
lea ['edx,', '[ebp+var_AC]']
push ['edx']
mov ['ecx,', '[ebp+var_10]']
call ['?begin@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE?AV?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@XZ']
mov ['[ebp+var_2C],', 'eax']
mov ['eax,', '[ebp+var_2C]']
mov ['[ebp+var_34],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_74],', 'esp']
mov ['edx,', '[ebp+var_34]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_3C],', 'eax']
mov ['eax,', '[ebp+var_3C]']
mov ['[ebp+var_7C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Ch']
sub ['esp,', '0Ch']
mov ['ecx,', 'esp']
mov ['[ebp+var_84],', 'esp']
lea ['edx,', '[ebp+arg_0]']
push ['edx']
call ['??0?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@ABV01@@Z']
mov ['[ebp+var_44],', 'eax']
mov ['eax,', '[ebp+var_44]']
mov ['[ebp+var_8C],', 'eax']
mov ['byte', 'ptr', '[ebp+var_4],', '0Dh']
mov ['byte', 'ptr', '[ebp+var_4],', '0Bh']
call ['?_Pdif@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@SAIV?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0@Z']
add ['esp,', '18h']
mov ['[ebp+var_4C],', 'eax']
mov ['ecx,', '[ebp+var_4C]']
push ['ecx']
mov ['ecx,', '[ebp+var_10]']
call ['?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@IIPB_WI@Z']
mov ['byte', 'ptr', '[ebp+var_4],', '3']
lea ['ecx,', '[ebp+var_AC]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['edx,', '[ebp+var_10]']
mov ['[ebp+var_14],', 'edx']
mov ['byte', 'ptr', '[ebp+var_4],', '2']
lea ['ecx,', '[ebp+arg_0]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '1']
lea ['ecx,', '[ebp+arg_C]']
call ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['byte', 'ptr', '[ebp+var_4],', '0']
lea ['ecx,', '[ebp+arg_18]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['[ebp+var_4],', '0FFFFFFFFh']
lea ['ecx,', '[ebp+arg_24]']
call ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
mov ['eax,', '[ebp+var_14]']
mov ['ecx,', '[ebp+var_C]']
mov ['large', 'fs:0,', 'ecx']
pop ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['30h']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$0 proc near
lea ['ecx,', '[ebp+2Ch]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$1 proc near
lea ['ecx,', '[ebp+20h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$2 proc near
lea ['ecx,', '[ebp+14h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$3 proc near
lea ['ecx,', '[ebp+8]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$4 proc near
mov ['ecx,', '[ebp-58h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$5 proc near
mov ['ecx,', '[ebp-80h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$6 proc near
lea ['ecx,', '[ebp-0A0h]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$7 proc near
mov ['ecx,', '[ebp-90h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$8 proc near
mov ['ecx,', '[ebp-88h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$9 proc near
mov ['ecx,', '[ebp-94h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$10 proc near
mov ['ecx,', '[ebp-64h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$11 proc near
lea ['ecx,', '[ebp-0ACh]']
jmp ['??1?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$12 proc near
mov ['ecx,', '[ebp-74h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__unwindfunclet$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z$13 proc near
mov ['ecx,', '[ebp-84h]']
jmp ['??1?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@QAE@XZ']
endp
__ehhandler$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z proc near
mov ['edx,', '[esp+arg_4]']
lea ['eax,', '[edx+0Ch]']
mov ['ecx,', '[edx-0A4h]']
xor ['ecx,', 'eax']
call ['@__security_check_cookie@4']
mov ['eax,', 'offset', '__ehfuncinfo$?replace@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@V?$_String_const_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@2@1@Z']
jmp ['___CxxFrameHandler3']
endp
?reserve@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+14h]']
cmp ['ecx,', '[ebp+arg_0]']
ja ['short', 'loc_17021']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[edx+18h]']
cmp ['eax,', '[ebp+arg_0]']
jz ['short', 'loc_17021']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ecx+14h]']
mov ['[ebp+var_8],', 'edx']
push ['1']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+var_4]']
call ['?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE_NI_N@Z']
movzx ['ecx,', 'al']
test ['ecx,', 'ecx']
jz ['short', 'loc_17021']
mov ['edx,', '[ebp+var_8]']
push ['edx']
mov ['ecx,', '[ebp+var_4]']
call ['?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEXI@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?scaleX@DPIManager@@QAEHH@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['60h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax]']
push ['ecx']
mov ['edx,', '[ebp+nNumber]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MulDiv@12']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?scaleY@DPIManager@@QAEHH@Z proc near   
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
push ['60h']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[eax+4]']
push ['ecx']
mov ['edx,', '[ebp+nNumber]']
push ['edx']
call ['dword', 'ptr', 'ds:__imp__MulDiv@12']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@D@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@D@std@@@std@@QAE@ABV?$allocator@D@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QBE?AU12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
mov ['[ebp+var_8],', 'ecx']
mov ['eax,', '[ebp+var_8]']
push ['eax']
lea ['ecx,', '[ebp+var_1]']
push ['ecx']
call ['?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z']
add ['esp,', '8']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QAE@ABV?$allocator@_W@1@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@D@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
push ['eax']
mov ['ecx,', '[ebp+arg_0]']
call ['??0?$allocator@_W@std@@QAE@ABV01@@Z']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@D@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@ABV32@@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_0]']
push ['eax']
mov ['ecx,', '[ebp+arg_4]']
call ['?select_on_container_copy_construction@?$allocator@_W@std@@QBE?AV12@XZ']
mov ['eax,', '[ebp+arg_0]']
pop ['ebp']
retn
endp
?setNBNumber@ValueDlg@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
cmp ['[ebp+arg_0],', '0']
jle ['short', 'loc_17136']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+20h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?setNbMaxRecentFile@NppParameters@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+9ACh],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?setPutRecentFileInSubMenu@NppParameters@@QAEX_N@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['cl,', '[ebp+arg_0]']
mov ['[eax+9B0h],', 'cl']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?setRecentFileCustomLength@NppParameters@@QAEXH@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax+9B4h],', 'ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['4']
endp
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax+14h]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@PAVTiXmlDocument@@V?$allocator@PAVTiXmlDocument@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '2']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@U?$pair@DD@std@@V?$allocator@U?$pair@DD@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '1']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '38h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@UDlgInfo@@V?$allocator@UDlgInfo@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '3Ch']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@ULangID_Name@@V?$allocator@ULangID_Name@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
sar ['eax,', '5']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@ULangMenuItem@@V?$allocator@ULangMenuItem@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '24h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@UstrCouple@@V?$allocator@UstrCouple@@@std@@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '38h']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+var_4]']
mov ['eax,', '[eax+8]']
sub ['eax,', '[ecx+4]']
cdq
mov ['ecx,', '1Ch']
idiv ['ecx']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?size@LocalizationSwitcher@@QBEIXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['ecx,', '[ebp+var_4]']
call ['?size@?$vector@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@@2@@std@@QBEIXZ']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?system_category@std@@YAABVerror_category@1@XZ proc near
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', 'offset', '?_System_object@?$_Error_objects@H@std@@2V_System_error_category@2@A']
pop ['ebp']
retn
endp
?value@error_code@std@@QBEHXZ proc near 
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
?value@error_condition@std@@QBEHXZ proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['eax,', '[eax]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_hypot          proc near
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_8]']
movsd ['[esp+8+var_8],', 'xmm0']
sub ['esp,', '8']
movsd ['xmm0,', '[ebp+arg_0]']
movsd ['[esp+10h+var_10],', 'xmm0']
call ['__hypot']
add ['esp,', '10h']
pop ['ebp']
retn
endp
_wmemchr        proc near               
push ['ebp']
mov ['ebp,', 'esp']
jmp ['short', 'loc_1732B']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_8]']
sub ['ecx,', '1']
mov ['[ebp+arg_8],', 'ecx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_17346']
mov ['edx,', '[ebp+arg_0]']
movzx ['eax,', 'word', 'ptr', '[edx]']
movzx ['ecx,', '[ebp+arg_4]']
cmp ['eax,', 'ecx']
jnz ['short', 'loc_17344']
mov ['eax,', '[ebp+arg_0]']
jmp ['short', 'loc_17348']
jmp ['short', 'loc_17319']
xor ['eax,', 'eax']
pop ['ebp']
retn
endp
_wmemcmp        proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
jmp ['short', 'loc_1736D']
mov ['eax,', '[ebp+arg_0]']
add ['eax,', '2']
mov ['[ebp+arg_0],', 'eax']
mov ['ecx,', '[ebp+arg_4]']
add ['ecx,', '2']
mov ['[ebp+arg_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_173AA']
mov ['eax,', '[ebp+arg_0]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
mov ['edx,', '[ebp+arg_4]']
movzx ['eax,', 'word', 'ptr', '[edx]']
cmp ['ecx,', 'eax']
jz ['short', 'loc_173A8']
mov ['ecx,', '[ebp+arg_0]']
movzx ['edx,', 'word', 'ptr', '[ecx]']
mov ['eax,', '[ebp+arg_4]']
movzx ['ecx,', 'word', 'ptr', '[eax]']
cmp ['edx,', 'ecx']
jge ['short', 'loc_1739C']
mov ['[ebp+var_4],', '0FFFFFFFFh']
jmp ['short', 'loc_173A3']
mov ['[ebp+var_4],', '1']
mov ['eax,', '[ebp+var_4]']
jmp ['short', 'loc_173AC']
jmp ['short', 'loc_17352']
xor ['eax,', 'eax']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
_wmemcpy        proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memcpy']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
_wmemmove       proc near               
push ['ebp']
mov ['ebp,', 'esp']
mov ['eax,', '[ebp+arg_8]']
shl ['eax,', '1']
push ['eax']
mov ['ecx,', '[ebp+Src]']
push ['ecx']
mov ['edx,', '[ebp+Dst]']
push ['edx']
call ['_memmove']
add ['esp,', '0Ch']
pop ['ebp']
retn
endp
_wmemset        proc near               
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['eax,', '[ebp+arg_0]']
mov ['[ebp+var_4],', 'eax']
jmp ['short', 'loc_17406']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '2']
mov ['[ebp+var_4],', 'ecx']
mov ['edx,', '[ebp+arg_8]']
sub ['edx,', '1']
mov ['[ebp+arg_8],', 'edx']
cmp ['[ebp+arg_8],', '0']
jbe ['short', 'loc_17418']
mov ['eax,', '[ebp+var_4]']
mov ['cx,', '[ebp+arg_4]']
mov ['[eax],', 'cx']
jmp ['short', 'loc_173F4']
mov ['eax,', '[ebp+arg_0]']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

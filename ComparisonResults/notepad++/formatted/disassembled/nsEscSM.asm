??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_14]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+arg_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_1C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_20]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_24]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_28]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_2C]']
mov ['[eax+2Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_30]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['34h']
endp
??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_10]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
??__EHZSMModel@@YAXXZ proc near         
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG2943']
push ['offset', '_HZCharLenTable']
push ['offset', '_HZ_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['6']
push ['offset', '_HZ_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?HZSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EISO2022CNSMModel@@YAXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3256']
push ['offset', '_ISO2022CNCharLenTable']
push ['offset', '_ISO2022CN_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['9']
push ['offset', '_ISO2022CN_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?ISO2022CNSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EISO2022JPSMModel@@YAXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3552']
push ['offset', '_ISO2022JPCharLenTable']
push ['offset', '_ISO2022JP_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['0Ah']
push ['offset', '_ISO2022JP_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?ISO2022JPSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EISO2022KRSMModel@@YAXXZ proc near  
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3820']
push ['offset', '_ISO2022KRCharLenTable']
push ['offset', '_ISO2022KR_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['6']
push ['offset', '_ISO2022KR_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?ISO2022KRSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp

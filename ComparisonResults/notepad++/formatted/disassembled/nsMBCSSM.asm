??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+arg_4]']
mov ['[eax+4],', 'edx']
mov ['ecx,', '[ebp+arg_8]']
mov ['[eax+8],', 'ecx']
mov ['edx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'edx']
mov ['ecx,', '[ebp+arg_10]']
mov ['[eax+10h],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_14]']
mov ['[edx+14h],', 'eax']
mov ['ecx,', '[ebp+var_4]']
add ['ecx,', '18h']
mov ['edx,', '[ebp+arg_18]']
mov ['[ecx],', 'edx']
mov ['eax,', '[ebp+arg_1C]']
mov ['[ecx+4],', 'eax']
mov ['edx,', '[ebp+arg_20]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+arg_24]']
mov ['[ecx+0Ch],', 'eax']
mov ['edx,', '[ebp+arg_28]']
mov ['[ecx+10h],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_2C]']
mov ['[eax+2Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_30]']
mov ['[edx+30h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['34h']
endp
??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z proc near
push ['ebp']
mov ['ebp,', 'esp']
push ['ecx']
mov ['[ebp+var_4],', 'ecx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_0]']
mov ['[eax],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_4]']
mov ['[edx+4],', 'eax']
mov ['ecx,', '[ebp+var_4]']
mov ['edx,', '[ebp+arg_8]']
mov ['[ecx+8],', 'edx']
mov ['eax,', '[ebp+var_4]']
mov ['ecx,', '[ebp+arg_C]']
mov ['[eax+0Ch],', 'ecx']
mov ['edx,', '[ebp+var_4]']
mov ['eax,', '[ebp+arg_10]']
mov ['[edx+10h],', 'eax']
mov ['eax,', '[ebp+var_4]']
mov ['esp,', 'ebp']
pop ['ebp']
retn ['14h']
endp
??__EBig5SMModel@@YAXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG2922']
push ['offset', '_Big5CharLenTable']
push ['offset', '_BIG5_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['5']
push ['offset', '_BIG5_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?Big5SMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EEUCJPSMModel@@YAXXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3214']
push ['offset', '_EUCJPCharLenTable']
push ['offset', '_EUCJP_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['6']
push ['offset', '_EUCJP_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?EUCJPSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EEUCKRSMModel@@YAXXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3461']
push ['offset', '_EUCKRCharLenTable']
push ['offset', '_EUCKR_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['4']
push ['offset', '_EUCKR_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?EUCKRSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EEUCTWSMModel@@YAXXZ proc near      
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG3736']
push ['offset', '_EUCTWCharLenTable']
push ['offset', '_EUCTW_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['7']
push ['offset', '_EUCTW_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?EUCTWSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EGB18030SMModel@@YAXXZ proc near    
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG4011']
push ['offset', '_GB18030CharLenTable']
push ['offset', '_GB18030_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['7']
push ['offset', '_GB18030_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?GB18030SMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__ESJISSMModel@@YAXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG4265']
push ['offset', '_SJISCharLenTable']
push ['offset', '_SJIS_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['6']
push ['offset', '_SJIS_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?SJISSMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
??__EUTF8SMModel@@YAXXZ proc near       
push ['ebp']
mov ['ebp,', 'esp']
sub ['esp,', '28h']
push ['offset', '$SG4680']
push ['offset', '_UTF8CharLenTable']
push ['offset', '_UTF8_st']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_14]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
push ['10h']
push ['offset', '_UTF8_cls']
push ['0Fh']
push ['2']
push ['7']
push ['3']
lea ['ecx,', '[ebp+var_28]']
call ['??0nsPkgInt@@QAE@W4nsIdxSft@@W4nsSftMsk@@W4nsBitSft@@W4nsUnitMsk@@QBI@Z']
sub ['esp,', '14h']
mov ['ecx,', 'esp']
mov ['edx,', '[eax]']
mov ['[ecx],', 'edx']
mov ['edx,', '[eax+4]']
mov ['[ecx+4],', 'edx']
mov ['edx,', '[eax+8]']
mov ['[ecx+8],', 'edx']
mov ['edx,', '[eax+0Ch]']
mov ['[ecx+0Ch],', 'edx']
mov ['eax,', '[eax+10h]']
mov ['[ecx+10h],', 'eax']
mov ['ecx,', 'offset', '?UTF8SMModel@@3USMModel@@B']
call ['??0SMModel@@QAE@UnsPkgInt@@I0PBIPBD@Z']
mov ['esp,', 'ebp']
pop ['ebp']
retn
endp
